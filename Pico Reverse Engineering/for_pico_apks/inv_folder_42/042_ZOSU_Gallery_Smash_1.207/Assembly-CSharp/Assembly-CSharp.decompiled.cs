using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization.Formatters.Binary;
using System.Text;
using System.Threading;
using System.Timers;
using AwesomeTechnologies.VegetationSystem.Biomes;
using ExitGames.Client.Photon;
using Gaia.Pipeline;
using GeNa;
using GeNa.Internal;
using Il2CppDummyDll;
using PWCommon2;
using Photon.Chat;
using Photon.Pun;
using Photon.Realtime;
using ProceduralWorlds.Flora;
using ProceduralWorlds.HierachySystem;
using RayFire;
using RayFire.DotNet;
using RootMotion.FinalIK;
using TriangleNet.Geometry;
using TriangleNet.Logging;
using TriangleNet.Meshing;
using TriangleNet.Meshing.Data;
using TriangleNet.Meshing.Iterators;
using TriangleNet.Topology;
using TriangleNet.Topology.DCEL;
using TriangleNet.Voronoi;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Experimental.TerrainAPI;
using UnityEngine.InputSystem;
using UnityEngine.Rendering;
using UnityEngine.Rendering.PostProcessing;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.XR;
using UnityStandardAssets.Effects;

[assembly: AssemblyVersion("1.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570C24", Offset = "0x570C24")]
internal sealed class <>f__AnonymousType0<<item>j__TPar, <index>j__TPar>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x573388", Offset = "0x573388")]
	private readonly <item>j__TPar <item>i__Field;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x57339C", Offset = "0x57339C")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x17000001")]
	public <item>j__TPar item
	{
		[Token(Token = "0x6000001")]
		get
		{
			return (<item>j__TPar)null;
		}
	}

	[Token(Token = "0x17000002")]
	public <index>j__TPar index
	{
		[Token(Token = "0x6000002")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x6000003")]
	[DebuggerHidden]
	public <>f__AnonymousType0(<item>j__TPar item, <index>j__TPar index)
	{
	}

	[Token(Token = "0x6000004")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000005")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000006")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000003")]
public class dark2 : MonoBehaviour
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int highscoresaved;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text highscoretext;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int highscoresaved2;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text highscoretext2;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x9482A4", Offset = "0x9482A4", VA = "0x9482A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x948388", Offset = "0x948388", VA = "0x948388")]
	public dark2()
	{
	}
}
[Token(Token = "0x2000004")]
public class darkbutton : MonoBehaviour
{
	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject objToDestroy;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject son1;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject son2;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject soff1;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject hon1;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject hon2;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject hoff1;

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x948390", Offset = "0x948390", VA = "0x948390")]
	private void Start()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x948394", Offset = "0x948394", VA = "0x948394")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x9484C0", Offset = "0x9484C0", VA = "0x9484C0")]
	public darkbutton()
	{
	}
}
[Token(Token = "0x2000005")]
public class darkfall : MonoBehaviour
{
	[Token(Token = "0x2000423")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5724E8", Offset = "0x5724E8")]
	private sealed class <Example>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public darkfall <>4__this;

		[Token(Token = "0x1700030A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FAB")]
			[Address(RVA = "0x137826C", Offset = "0x137826C", VA = "0x137826C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FAD")]
			[Address(RVA = "0x13782B4", Offset = "0x13782B4", VA = "0x13782B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x1378030", Offset = "0x1378030", VA = "0x1378030")]
		[DebuggerHidden]
		public <Example>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x137805C", Offset = "0x137805C", VA = "0x137805C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x1378060", Offset = "0x1378060", VA = "0x1378060", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0x1378274", Offset = "0x1378274", VA = "0x1378274", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject r0a;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject r1a;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject r1b;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject r1c;

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x9484C8", Offset = "0x9484C8", VA = "0x9484C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x9484F4", Offset = "0x9484F4", VA = "0x9484F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58DD00", Offset = "0x58DD00")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x948560", Offset = "0x948560", VA = "0x948560")]
	public darkfall()
	{
	}
}
[Token(Token = "0x2000006")]
public class flashlightz : MonoBehaviour
{
	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject status;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject light;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject self;

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x910094", Offset = "0x910094", VA = "0x910094")]
	private void Start()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x910098", Offset = "0x910098", VA = "0x910098")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x910128", Offset = "0x910128", VA = "0x910128")]
	public flashlightz()
	{
	}
}
[Token(Token = "0x2000007")]
public class highdark : MonoBehaviour
{
	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text currentscoretext;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string currentscoretext2;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int highscoresaved;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text highscoretext;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currentscore;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text ascoreend;

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x910E08", Offset = "0x910E08", VA = "0x910E08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x911078", Offset = "0x911078", VA = "0x911078")]
	private void Update()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x91107C", Offset = "0x91107C", VA = "0x91107C")]
	public highdark()
	{
	}
}
[Token(Token = "0x2000008")]
public class puzzlehint : MonoBehaviour
{
	[Token(Token = "0x2000424")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5724F8", Offset = "0x5724F8")]
	private sealed class <Example>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public puzzlehint <>4__this;

		[Token(Token = "0x1700030C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0x1417BE8", Offset = "0x1417BE8", VA = "0x1417BE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FB3")]
			[Address(RVA = "0x1417C30", Offset = "0x1417C30", VA = "0x1417C30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0x1417698", Offset = "0x1417698", VA = "0x1417698")]
		[DebuggerHidden]
		public <Example>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0x14176C4", Offset = "0x14176C4", VA = "0x14176C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0x14176C8", Offset = "0x14176C8", VA = "0x14176C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x1417BF0", Offset = "0x1417BF0", VA = "0x1417BF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject todelay1;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject r1a;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject r1b;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject r1c;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject r1aa;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject r1ab;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject r1ac;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject r1ad;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject r2a;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject r2b;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject r2c;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject r2d;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject r3a;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject r3b;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject r3c;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject r4a;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject r4b;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject r4c;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject r5a;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject r5b;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject r5c;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject r5aa;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject r6a;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject r6aa;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject r6b;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject r6c;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject r7a;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject r7b;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject r7c;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject r8a;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private int delay;

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x918AC4", Offset = "0x918AC4", VA = "0x918AC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x918AF0", Offset = "0x918AF0", VA = "0x918AF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58DD60", Offset = "0x58DD60")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x918B5C", Offset = "0x918B5C", VA = "0x918B5C")]
	public puzzlehint()
	{
	}
}
[Token(Token = "0x2000009")]
public class returnlobbytimer : MonoBehaviour
{
	[Token(Token = "0x2000425")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572508", Offset = "0x572508")]
	private sealed class <Example>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public returnlobbytimer <>4__this;

		[Token(Token = "0x1700030E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FB7")]
			[Address(RVA = "0x1417E18", Offset = "0x1417E18", VA = "0x1417E18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FB9")]
			[Address(RVA = "0x1417E60", Offset = "0x1417E60", VA = "0x1417E60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0x1417C38", Offset = "0x1417C38", VA = "0x1417C38")]
		[DebuggerHidden]
		public <Example>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x1417C64", Offset = "0x1417C64", VA = "0x1417C64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x1417C68", Offset = "0x1417C68", VA = "0x1417C68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0x1417E20", Offset = "0x1417E20", VA = "0x1417E20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject todelay;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject todelay2;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float delay;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x918B64", Offset = "0x918B64", VA = "0x918B64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x918B90", Offset = "0x918B90", VA = "0x918B90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58DDC0", Offset = "0x58DDC0")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x918BFC", Offset = "0x918BFC", VA = "0x918BFC")]
	public returnlobbytimer()
	{
	}
}
[Token(Token = "0x200000A")]
public class returnlobbytimer1 : MonoBehaviour
{
	[Token(Token = "0x2000426")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572518", Offset = "0x572518")]
	private sealed class <Example>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000310")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0x1417FC0", Offset = "0x1417FC0", VA = "0x1417FC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000311")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FBF")]
			[Address(RVA = "0x1418008", Offset = "0x1418008", VA = "0x1418008", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x1417E68", Offset = "0x1417E68", VA = "0x1417E68")]
		[DebuggerHidden]
		public <Example>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x1417E94", Offset = "0x1417E94", VA = "0x1417E94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x1417E98", Offset = "0x1417E98", VA = "0x1417E98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x1417FC8", Offset = "0x1417FC8", VA = "0x1417FC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float delay;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x918C04", Offset = "0x918C04", VA = "0x918C04")]
	private void Start()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x918C30", Offset = "0x918C30", VA = "0x918C30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58DE20", Offset = "0x58DE20")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x918C8C", Offset = "0x918C8C", VA = "0x918C8C")]
	public returnlobbytimer1()
	{
	}
}
[Token(Token = "0x200000B")]
public class zzz : MonoBehaviour
{
	[Token(Token = "0x600001E")]
	[Address(RVA = "0x91AA4C", Offset = "0x91AA4C", VA = "0x91AA4C")]
	private void Start()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x91AA50", Offset = "0x91AA50", VA = "0x91AA50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x91AA54", Offset = "0x91AA54", VA = "0x91AA54")]
	public zzz()
	{
	}
}
[Token(Token = "0x200000C")]
public class timeronstart : MonoBehaviour
{
	[Token(Token = "0x6000021")]
	[Address(RVA = "0x91A6A4", Offset = "0x91A6A4", VA = "0x91A6A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x91A6F0", Offset = "0x91A6F0", VA = "0x91A6F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x91A6F4", Offset = "0x91A6F4", VA = "0x91A6F4")]
	public timeronstart()
	{
	}
}
[Token(Token = "0x200000D")]
public class NewBehaviourScript : MonoBehaviour
{
	[Token(Token = "0x6000024")]
	[Address(RVA = "0xE06008", Offset = "0xE06008", VA = "0xE06008")]
	private void Start()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xE0600C", Offset = "0xE0600C", VA = "0xE0600C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xE06010", Offset = "0xE06010", VA = "0xE06010")]
	public NewBehaviourScript()
	{
	}
}
[Token(Token = "0x200000E")]
public class scenechange2 : MonoBehaviour
{
	[Token(Token = "0x6000027")]
	[Address(RVA = "0x918CA4", Offset = "0x918CA4", VA = "0x918CA4")]
	public void NextScene()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x918D18", Offset = "0x918D18", VA = "0x918D18")]
	public scenechange2()
	{
	}
}
[Token(Token = "0x200000F")]
public class scenechange3 : MonoBehaviour
{
	[Token(Token = "0x6000029")]
	[Address(RVA = "0x918D20", Offset = "0x918D20", VA = "0x918D20")]
	public void NextScene()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x918D94", Offset = "0x918D94", VA = "0x918D94")]
	public scenechange3()
	{
	}
}
[Token(Token = "0x2000010")]
public class scenechange4 : MonoBehaviour
{
	[Token(Token = "0x600002B")]
	[Address(RVA = "0x918D9C", Offset = "0x918D9C", VA = "0x918D9C")]
	public void NextScene()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x918E10", Offset = "0x918E10", VA = "0x918E10")]
	public scenechange4()
	{
	}
}
[Token(Token = "0x2000011")]
public class scenechangemenu : MonoBehaviour
{
	[Token(Token = "0x600002D")]
	[Address(RVA = "0x918E18", Offset = "0x918E18", VA = "0x918E18")]
	private void Start()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x918E8C", Offset = "0x918E8C", VA = "0x918E8C")]
	public void NextScene()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x918F00", Offset = "0x918F00", VA = "0x918F00")]
	public scenechangemenu()
	{
	}
}
[Token(Token = "0x2000012")]
public class CrossVRManager : MonoBehaviour
{
	[Token(Token = "0x2000427")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572528", Offset = "0x572528")]
	private sealed class <ExampleCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CrossVRManager <>4__this;

		[Token(Token = "0x17000312")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FC3")]
			[Address(RVA = "0x91C06C", Offset = "0x91C06C", VA = "0x91C06C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000313")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FC5")]
			[Address(RVA = "0x91C0B4", Offset = "0x91C0B4", VA = "0x91C0B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x91BE14", Offset = "0x91BE14", VA = "0x91BE14")]
		[DebuggerHidden]
		public <ExampleCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x91BE40", Offset = "0x91BE40", VA = "0x91BE40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x91BE44", Offset = "0x91BE44", VA = "0x91BE44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x91C074", Offset = "0x91C074", VA = "0x91C074", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject ovrCameraRig;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject desktopCameraRig;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject inputmanager;

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xA14FC4", Offset = "0xA14FC4", VA = "0xA14FC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xA15188", Offset = "0xA15188", VA = "0xA15188")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58DE80", Offset = "0x58DE80")]
	private IEnumerator ExampleCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xA151F4", Offset = "0xA151F4", VA = "0xA151F4")]
	public CrossVRManager()
	{
	}
}
[Token(Token = "0x2000013")]
public class EnemyMovement : MonoBehaviour
{
	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform player;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NavMeshAgent nav;

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x8AE020", Offset = "0x8AE020", VA = "0x8AE020")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x8AE0A8", Offset = "0x8AE0A8", VA = "0x8AE0A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x8AE0E8", Offset = "0x8AE0E8", VA = "0x8AE0E8")]
	public EnemyMovement()
	{
	}
}
[Token(Token = "0x2000014")]
public class EnemyMovement1 : MonoBehaviour
{
	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform player;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NavMeshAgent nav;

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x8AE0F0", Offset = "0x8AE0F0", VA = "0x8AE0F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x8AE178", Offset = "0x8AE178", VA = "0x8AE178")]
	private void Update()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x8AE1B8", Offset = "0x8AE1B8", VA = "0x8AE1B8")]
	public EnemyMovement1()
	{
	}
}
[Token(Token = "0x2000015")]
public class PlayerMovement : MonoBehaviour
{
	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterController controller;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xDCAD04", Offset = "0xDCAD04", VA = "0xDCAD04")]
	private void Update()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xDCAE50", Offset = "0xDCAE50", VA = "0xDCAE50")]
	public PlayerMovement()
	{
	}
}
[Token(Token = "0x2000016")]
public class VRsceneload : MonoBehaviour
{
	[Token(Token = "0x2000428")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572538", Offset = "0x572538")]
	private sealed class <Countdown>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int time;

		[Token(Token = "0x17000314")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FC9")]
			[Address(RVA = "0x1376E50", Offset = "0x1376E50", VA = "0x1376E50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000315")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FCB")]
			[Address(RVA = "0x1376E98", Offset = "0x1376E98", VA = "0x1376E98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0x1376CD0", Offset = "0x1376CD0", VA = "0x1376CD0")]
		[DebuggerHidden]
		public <Countdown>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x1376CFC", Offset = "0x1376CFC", VA = "0x1376CFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x1376D00", Offset = "0x1376D00", VA = "0x1376D00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x1376E58", Offset = "0x1376E58", VA = "0x1376E58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string z1z;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string z2z;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string z3z;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string z4z;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string z5z;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string z6z;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string z7z;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string z8z;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string z9z;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string z10z;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string z11z;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string z12z;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string z13z;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string z14z;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string z15z;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string z16z;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string z17z;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string z18z;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string z19z;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string z20z;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string z21z;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string z22z;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string z23z;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string z24z;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string z25z;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private string z26z;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string z27z;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string z28z;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string z29z;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private string z30z;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject ObjectTeleport1;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject ObjectToMove;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject on;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private GameObject objToDestroy;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private System.Timers.Timer LeTimer;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int BoomDown;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public int timeLeft;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public int number1;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private bool canDestroy;

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xC6504C", Offset = "0xC6504C", VA = "0xC6504C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xC65050", Offset = "0xC65050", VA = "0xC65050")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58DEE0", Offset = "0x58DEE0")]
	private IEnumerator Countdown(int time)
	{
		return null;
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xC650BC", Offset = "0xC650BC", VA = "0xC650BC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xC68C54", Offset = "0xC68C54", VA = "0xC68C54")]
	public VRsceneload()
	{
	}
}
[Token(Token = "0x2000017")]
public class addclimb : MonoBehaviour
{
	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Prefab;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject newInstance;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject guyGameObject;

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x945A60", Offset = "0x945A60", VA = "0x945A60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x945A64", Offset = "0x945A64", VA = "0x945A64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x945A68", Offset = "0x945A68", VA = "0x945A68")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x945C38", Offset = "0x945C38", VA = "0x945C38")]
	public addclimb()
	{
	}
}
[Token(Token = "0x2000018")]
public class chests : MonoBehaviour
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ObjectTeleport1;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ObjectToMove;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject objToDestroy;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject sound1;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private gamescore1 scoreManager;

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x947C84", Offset = "0x947C84", VA = "0x947C84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x947D10", Offset = "0x947D10", VA = "0x947D10")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x947F24", Offset = "0x947F24", VA = "0x947F24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x947F28", Offset = "0x947F28", VA = "0x947F28")]
	public chests()
	{
	}
}
[Token(Token = "0x2000019")]
public class countdownendgame : MonoBehaviour
{
	[Token(Token = "0x2000429")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572548", Offset = "0x572548")]
	private sealed class <LoseTime>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public countdownendgame <>4__this;

		[Token(Token = "0x17000316")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FCF")]
			[Address(RVA = "0x1377FE0", Offset = "0x1377FE0", VA = "0x1377FE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000317")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FD1")]
			[Address(RVA = "0x1378028", Offset = "0x1378028", VA = "0x1378028", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x1377F04", Offset = "0x1377F04", VA = "0x1377F04")]
		[DebuggerHidden]
		public <LoseTime>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x1377F30", Offset = "0x1377F30", VA = "0x1377F30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x1377F34", Offset = "0x1377F34", VA = "0x1377F34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x1377FE8", Offset = "0x1377FE8", VA = "0x1377FE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private System.Timers.Timer LeTimer;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int BoomDown;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int timeLeft;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int number1;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text countdown;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject objectenable1;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject objectdisable1;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject objectdisable2;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x947F30", Offset = "0x947F30", VA = "0x947F30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x948024", Offset = "0x948024", VA = "0x948024")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x948140", Offset = "0x948140", VA = "0x948140")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58DF40", Offset = "0x58DF40")]
	private IEnumerator LoseTime()
	{
		return null;
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x9481AC", Offset = "0x9481AC", VA = "0x9481AC")]
	public countdownendgame()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x9481BC", Offset = "0x9481BC", VA = "0x9481BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58DFA0", Offset = "0x58DFA0")]
	private void <Start>b__8_0(object sender, ElapsedEventArgs e)
	{
	}
}
[Token(Token = "0x200001A")]
public class cyberhome : MonoBehaviour
{
	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ObjectA;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ObjectB;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ObjectC;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ObjectD;

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x9481CC", Offset = "0x9481CC", VA = "0x9481CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x9481D0", Offset = "0x9481D0", VA = "0x9481D0")]
	private void Start()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x94829C", Offset = "0x94829C", VA = "0x94829C")]
	public cyberhome()
	{
	}
}
[Token(Token = "0x200001B")]
public class deathpad : MonoBehaviour
{
	[Token(Token = "0x200042A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572558", Offset = "0x572558")]
	private sealed class <<OnTriggerEnter>g__ExampleCoroutine|5_0>d : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public deathpad <>4__this;

		[Token(Token = "0x17000318")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FD5")]
			[Address(RVA = "0x13783C4", Offset = "0x13783C4", VA = "0x13783C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000319")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FD7")]
			[Address(RVA = "0x137840C", Offset = "0x137840C", VA = "0x137840C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x13782BC", Offset = "0x13782BC", VA = "0x13782BC")]
		[DebuggerHidden]
		public <<OnTriggerEnter>g__ExampleCoroutine|5_0>d(int <>1__state)
		{
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x13782E8", Offset = "0x13782E8", VA = "0x13782E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x13782EC", Offset = "0x13782EC", VA = "0x13782EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x13783CC", Offset = "0x13783CC", VA = "0x13783CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Spawn;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Death1;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Death2;

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x948568", Offset = "0x948568", VA = "0x948568")]
	private void Start()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x94856C", Offset = "0x94856C", VA = "0x94856C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x948570", Offset = "0x948570", VA = "0x948570")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x9486A8", Offset = "0x9486A8", VA = "0x9486A8")]
	public deathpad()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x94863C", Offset = "0x94863C", VA = "0x94863C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58DFB0", Offset = "0x58DFB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58DFB0", Offset = "0x58DFB0")]
	private IEnumerator <OnTriggerEnter>g__ExampleCoroutine|5_0()
	{
		return null;
	}
}
[Token(Token = "0x200001C")]
public class delayclimb : MonoBehaviour
{
	[Token(Token = "0x200042B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572568", Offset = "0x572568")]
	private sealed class <Example>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public delayclimb <>4__this;

		[Token(Token = "0x1700031A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FDB")]
			[Address(RVA = "0x13785D0", Offset = "0x13785D0", VA = "0x13785D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FDD")]
			[Address(RVA = "0x1378618", Offset = "0x1378618", VA = "0x1378618", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x1378414", Offset = "0x1378414", VA = "0x1378414")]
		[DebuggerHidden]
		public <Example>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x1378440", Offset = "0x1378440", VA = "0x1378440", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x1378444", Offset = "0x1378444", VA = "0x1378444", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x13785D8", Offset = "0x13785D8", VA = "0x13785D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject otherobj;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string scr;

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x9486B0", Offset = "0x9486B0", VA = "0x9486B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x9486DC", Offset = "0x9486DC", VA = "0x9486DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E020", Offset = "0x58E020")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x948748", Offset = "0x948748", VA = "0x948748")]
	public delayclimb()
	{
	}
}
[Token(Token = "0x200001D")]
public class delayclimb1 : MonoBehaviour
{
	[Token(Token = "0x200042C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572578", Offset = "0x572578")]
	private sealed class <Example>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public delayclimb1 <>4__this;

		[Token(Token = "0x1700031C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FE1")]
			[Address(RVA = "0x137878C", Offset = "0x137878C", VA = "0x137878C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FE3")]
			[Address(RVA = "0x13787D4", Offset = "0x13787D4", VA = "0x13787D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x1378620", Offset = "0x1378620", VA = "0x1378620")]
		[DebuggerHidden]
		public <Example>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x137864C", Offset = "0x137864C", VA = "0x137864C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x1378650", Offset = "0x1378650", VA = "0x1378650", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x1378794", Offset = "0x1378794", VA = "0x1378794", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject otherobj;

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x948750", Offset = "0x948750", VA = "0x948750")]
	private void Start()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x94877C", Offset = "0x94877C", VA = "0x94877C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E080", Offset = "0x58E080")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x9487E8", Offset = "0x9487E8", VA = "0x9487E8")]
	public delayclimb1()
	{
	}
}
[Token(Token = "0x200001E")]
public class delayclimb10 : MonoBehaviour
{
	[Token(Token = "0x200042D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572588", Offset = "0x572588")]
	private sealed class <<OnTriggerEnter>g__Example|8_0>d : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700031E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FE7")]
			[Address(RVA = "0x1378928", Offset = "0x1378928", VA = "0x1378928", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FE9")]
			[Address(RVA = "0x1378970", Offset = "0x1378970", VA = "0x1378970", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x13787DC", Offset = "0x13787DC", VA = "0x13787DC")]
		[DebuggerHidden]
		public <<OnTriggerEnter>g__Example|8_0>d(int <>1__state)
		{
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x1378808", Offset = "0x1378808", VA = "0x1378808", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x137880C", Offset = "0x137880C", VA = "0x137880C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0x1378930", Offset = "0x1378930", VA = "0x1378930", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject turnon;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject turnoff;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject turnon2;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject turnoff2;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject turnon3;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject turnoff3;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject turnon4;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject turnoff4;

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x9487F0", Offset = "0x9487F0", VA = "0x9487F0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x9489F8", Offset = "0x9489F8", VA = "0x9489F8")]
	public delayclimb10()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x948A00", Offset = "0x948A00", VA = "0x948A00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E0E0", Offset = "0x58E0E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58E0E0", Offset = "0x58E0E0")]
	internal static IEnumerator <OnTriggerEnter>g__Example|8_0()
	{
		return null;
	}
}
[Token(Token = "0x200001F")]
public class delayclimb11 : MonoBehaviour
{
	[Token(Token = "0x200042E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572598", Offset = "0x572598")]
	private sealed class <Example>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public delayclimb11 <>4__this;

		[Token(Token = "0x17000320")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FED")]
			[Address(RVA = "0x1378AE4", Offset = "0x1378AE4", VA = "0x1378AE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000321")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FEF")]
			[Address(RVA = "0x1378B2C", Offset = "0x1378B2C", VA = "0x1378B2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x1378978", Offset = "0x1378978", VA = "0x1378978")]
		[DebuggerHidden]
		public <Example>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x13789A4", Offset = "0x13789A4", VA = "0x13789A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x13789A8", Offset = "0x13789A8", VA = "0x13789A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x1378AEC", Offset = "0x1378AEC", VA = "0x1378AEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject todelay;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float delay;

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x948A5C", Offset = "0x948A5C", VA = "0x948A5C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x948A88", Offset = "0x948A88", VA = "0x948A88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E150", Offset = "0x58E150")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x948AF4", Offset = "0x948AF4", VA = "0x948AF4")]
	public delayclimb11()
	{
	}
}
[Token(Token = "0x2000020")]
public class delayclimb12 : MonoBehaviour
{
	[Token(Token = "0x200042F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5725A8", Offset = "0x5725A8")]
	private sealed class <Example>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public delayclimb12 <>4__this;

		[Token(Token = "0x17000322")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FF3")]
			[Address(RVA = "0x1378CA0", Offset = "0x1378CA0", VA = "0x1378CA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000323")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FF5")]
			[Address(RVA = "0x1378CE8", Offset = "0x1378CE8", VA = "0x1378CE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x1378B34", Offset = "0x1378B34", VA = "0x1378B34")]
		[DebuggerHidden]
		public <Example>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x1378B60", Offset = "0x1378B60", VA = "0x1378B60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0x1378B64", Offset = "0x1378B64", VA = "0x1378B64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x1378CA8", Offset = "0x1378CA8", VA = "0x1378CA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject todelay;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float delay;

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x948AFC", Offset = "0x948AFC", VA = "0x948AFC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x948B28", Offset = "0x948B28", VA = "0x948B28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E1B0", Offset = "0x58E1B0")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x948B94", Offset = "0x948B94", VA = "0x948B94")]
	public delayclimb12()
	{
	}
}
[Token(Token = "0x2000021")]
public class delayclimb13 : MonoBehaviour
{
	[Token(Token = "0x2000430")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5725B8", Offset = "0x5725B8")]
	private sealed class <Example>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public delayclimb13 <>4__this;

		[Token(Token = "0x17000324")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FF9")]
			[Address(RVA = "0x1378E5C", Offset = "0x1378E5C", VA = "0x1378E5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000325")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FFB")]
			[Address(RVA = "0x1378EA4", Offset = "0x1378EA4", VA = "0x1378EA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0x1378CF0", Offset = "0x1378CF0", VA = "0x1378CF0")]
		[DebuggerHidden]
		public <Example>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x1378D1C", Offset = "0x1378D1C", VA = "0x1378D1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x1378D20", Offset = "0x1378D20", VA = "0x1378D20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x1378E64", Offset = "0x1378E64", VA = "0x1378E64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject todelay;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float delay;

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x948B9C", Offset = "0x948B9C", VA = "0x948B9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x948BC8", Offset = "0x948BC8", VA = "0x948BC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E210", Offset = "0x58E210")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x948C34", Offset = "0x948C34", VA = "0x948C34")]
	public delayclimb13()
	{
	}
}
[Token(Token = "0x2000022")]
public class delayclimb14 : MonoBehaviour
{
	[Token(Token = "0x2000431")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5725C8", Offset = "0x5725C8")]
	private sealed class <Example2>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000326")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FFF")]
			[Address(RVA = "0x1378FB8", Offset = "0x1378FB8", VA = "0x1378FB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000327")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002001")]
			[Address(RVA = "0x1379000", Offset = "0x1379000", VA = "0x1379000", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x1378EAC", Offset = "0x1378EAC", VA = "0x1378EAC")]
		[DebuggerHidden]
		public <Example2>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x1378ED8", Offset = "0x1378ED8", VA = "0x1378ED8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x1378EDC", Offset = "0x1378EDC", VA = "0x1378EDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0x1378FC0", Offset = "0x1378FC0", VA = "0x1378FC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000432")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5725D8", Offset = "0x5725D8")]
	private sealed class <Example>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public delayclimb14 <>4__this;

		[Token(Token = "0x17000328")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002005")]
			[Address(RVA = "0x137CD80", Offset = "0x137CD80", VA = "0x137CD80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000329")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002007")]
			[Address(RVA = "0x137CDC8", Offset = "0x137CDC8", VA = "0x137CDC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0x1379008", Offset = "0x1379008", VA = "0x1379008")]
		[DebuggerHidden]
		public <Example>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x1379034", Offset = "0x1379034", VA = "0x1379034", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x1379038", Offset = "0x1379038", VA = "0x1379038", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x137CD88", Offset = "0x137CD88", VA = "0x137CD88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text currentsscoretext;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text currentsscoretextend;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentscore;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject end;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int highscoresaved;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text highscoretext;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text highscoretextend;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int delay;

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x948C3C", Offset = "0x948C3C", VA = "0x948C3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x948D7C", Offset = "0x948D7C", VA = "0x948D7C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x948EC4", Offset = "0x948EC4", VA = "0x948EC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E270", Offset = "0x58E270")]
	private IEnumerator Example2()
	{
		return null;
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x948D10", Offset = "0x948D10", VA = "0x948D10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E2D0", Offset = "0x58E2D0")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x948F20", Offset = "0x948F20", VA = "0x948F20")]
	public delayclimb14()
	{
	}
}
[Token(Token = "0x2000023")]
public class delayclimb15 : MonoBehaviour
{
	[Token(Token = "0x2000433")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5725E8", Offset = "0x5725E8")]
	private sealed class <Example>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700032A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600200B")]
			[Address(RVA = "0x137CF28", Offset = "0x137CF28", VA = "0x137CF28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600200D")]
			[Address(RVA = "0x137CF70", Offset = "0x137CF70", VA = "0x137CF70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x137CDD0", Offset = "0x137CDD0", VA = "0x137CDD0")]
		[DebuggerHidden]
		public <Example>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x137CDFC", Offset = "0x137CDFC", VA = "0x137CDFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x137CE00", Offset = "0x137CE00", VA = "0x137CE00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x137CF30", Offset = "0x137CF30", VA = "0x137CF30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float delay;

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x948F28", Offset = "0x948F28", VA = "0x948F28")]
	private void Start()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x948F54", Offset = "0x948F54", VA = "0x948F54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E330", Offset = "0x58E330")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x948FB0", Offset = "0x948FB0", VA = "0x948FB0")]
	public delayclimb15()
	{
	}
}
[Token(Token = "0x2000024")]
public class delayclimb16 : MonoBehaviour
{
	[Token(Token = "0x2000434")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5725F8", Offset = "0x5725F8")]
	private sealed class <Example>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public delayclimb16 <>4__this;

		[Token(Token = "0x1700032C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002011")]
			[Address(RVA = "0x137D0E4", Offset = "0x137D0E4", VA = "0x137D0E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002013")]
			[Address(RVA = "0x137D12C", Offset = "0x137D12C", VA = "0x137D12C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x137CF78", Offset = "0x137CF78", VA = "0x137CF78")]
		[DebuggerHidden]
		public <Example>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0x137CFA4", Offset = "0x137CFA4", VA = "0x137CFA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0x137CFA8", Offset = "0x137CFA8", VA = "0x137CFA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0x137D0EC", Offset = "0x137D0EC", VA = "0x137D0EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject todelay;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float delay;

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x948FB8", Offset = "0x948FB8", VA = "0x948FB8")]
	private void Start()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x948FE4", Offset = "0x948FE4", VA = "0x948FE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E390", Offset = "0x58E390")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x949050", Offset = "0x949050", VA = "0x949050")]
	public delayclimb16()
	{
	}
}
[Token(Token = "0x2000025")]
public class delayclimb2 : MonoBehaviour
{
	[Token(Token = "0x2000435")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572608", Offset = "0x572608")]
	private sealed class <Example>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public delayclimb2 <>4__this;

		[Token(Token = "0x1700032E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002017")]
			[Address(RVA = "0x137D3A4", Offset = "0x137D3A4", VA = "0x137D3A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002019")]
			[Address(RVA = "0x137D3EC", Offset = "0x137D3EC", VA = "0x137D3EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0x137D134", Offset = "0x137D134", VA = "0x137D134")]
		[DebuggerHidden]
		public <Example>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x137D160", Offset = "0x137D160", VA = "0x137D160", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0x137D164", Offset = "0x137D164", VA = "0x137D164", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0x137D3AC", Offset = "0x137D3AC", VA = "0x137D3AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject otherobj;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string scr;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject on;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int time1;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float fallSpeed;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 Vec;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float jumpSpeed;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Rigidbody rb;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject ObjectA;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ObjectB;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject ObjectC;

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x949058", Offset = "0x949058", VA = "0x949058")]
	private void Start()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x9490AC", Offset = "0x9490AC", VA = "0x9490AC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x949114", Offset = "0x949114", VA = "0x949114")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E3F0", Offset = "0x58E3F0")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x949180", Offset = "0x949180", VA = "0x949180")]
	public delayclimb2()
	{
	}
}
[Token(Token = "0x2000026")]
public class delayclimb3 : MonoBehaviour
{
	[Token(Token = "0x2000436")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572618", Offset = "0x572618")]
	private sealed class <Example>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public delayclimb3 <>4__this;

		[Token(Token = "0x17000330")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600201D")]
			[Address(RVA = "0x137D588", Offset = "0x137D588", VA = "0x137D588", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000331")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600201F")]
			[Address(RVA = "0x137D5D0", Offset = "0x137D5D0", VA = "0x137D5D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x137D3F4", Offset = "0x137D3F4", VA = "0x137D3F4")]
		[DebuggerHidden]
		public <Example>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x137D420", Offset = "0x137D420", VA = "0x137D420", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x137D424", Offset = "0x137D424", VA = "0x137D424", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x137D590", Offset = "0x137D590", VA = "0x137D590", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject todelay;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float delay;

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x949198", Offset = "0x949198", VA = "0x949198")]
	private void Start()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x9491E0", Offset = "0x9491E0", VA = "0x9491E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E450", Offset = "0x58E450")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x94924C", Offset = "0x94924C", VA = "0x94924C")]
	public delayclimb3()
	{
	}
}
[Token(Token = "0x2000027")]
public class delayclimb4 : MonoBehaviour
{
	[Token(Token = "0x2000437")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572628", Offset = "0x572628")]
	private sealed class <Example>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public delayclimb4 <>4__this;

		[Token(Token = "0x17000332")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002023")]
			[Address(RVA = "0x137D7E4", Offset = "0x137D7E4", VA = "0x137D7E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000333")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002025")]
			[Address(RVA = "0x137D82C", Offset = "0x137D82C", VA = "0x137D82C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x137D5D8", Offset = "0x137D5D8", VA = "0x137D5D8")]
		[DebuggerHidden]
		public <Example>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x137D604", Offset = "0x137D604", VA = "0x137D604", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x137D608", Offset = "0x137D608", VA = "0x137D608", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x137D7EC", Offset = "0x137D7EC", VA = "0x137D7EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject todelay1;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject todelay2;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject todelay3;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int delay;

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x949254", Offset = "0x949254", VA = "0x949254")]
	private void Start()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x9492C4", Offset = "0x9492C4", VA = "0x9492C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E4B0", Offset = "0x58E4B0")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x949330", Offset = "0x949330", VA = "0x949330")]
	public delayclimb4()
	{
	}
}
[Token(Token = "0x2000028")]
public class delayclimb5 : MonoBehaviour
{
	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject hideq;

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x949338", Offset = "0x949338", VA = "0x949338")]
	private void Start()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x949358", Offset = "0x949358", VA = "0x949358")]
	public delayclimb5()
	{
	}
}
[Token(Token = "0x2000029")]
public class delayclimb6 : MonoBehaviour
{
	[Token(Token = "0x2000438")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572638", Offset = "0x572638")]
	private sealed class <Example>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public delayclimb6 <>4__this;

		[Token(Token = "0x17000334")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002029")]
			[Address(RVA = "0x137DA80", Offset = "0x137DA80", VA = "0x137DA80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000335")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600202B")]
			[Address(RVA = "0x137DAC8", Offset = "0x137DAC8", VA = "0x137DAC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0x137D834", Offset = "0x137D834", VA = "0x137D834")]
		[DebuggerHidden]
		public <Example>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x137D860", Offset = "0x137D860", VA = "0x137D860", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x137D864", Offset = "0x137D864", VA = "0x137D864", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x137DA88", Offset = "0x137DA88", VA = "0x137DA88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject todelay1;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject todelay2;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject todelay3;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject todelay4;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject todelay5;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int delay;

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x949360", Offset = "0x949360", VA = "0x949360")]
	private void Start()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x9493F8", Offset = "0x9493F8", VA = "0x9493F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E510", Offset = "0x58E510")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x949464", Offset = "0x949464", VA = "0x949464")]
	public delayclimb6()
	{
	}
}
[Token(Token = "0x200002A")]
public class delayclimb7 : MonoBehaviour
{
	[Token(Token = "0x2000439")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572648", Offset = "0x572648")]
	private sealed class <Example>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public delayclimb7 <>4__this;

		[Token(Token = "0x17000336")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600202F")]
			[Address(RVA = "0x137DC3C", Offset = "0x137DC3C", VA = "0x137DC3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000337")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002031")]
			[Address(RVA = "0x137DC84", Offset = "0x137DC84", VA = "0x137DC84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0x137DAD0", Offset = "0x137DAD0", VA = "0x137DAD0")]
		[DebuggerHidden]
		public <Example>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x137DAFC", Offset = "0x137DAFC", VA = "0x137DAFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0x137DB00", Offset = "0x137DB00", VA = "0x137DB00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x137DC44", Offset = "0x137DC44", VA = "0x137DC44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject todelay;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float delay;

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x94946C", Offset = "0x94946C", VA = "0x94946C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x949498", Offset = "0x949498", VA = "0x949498")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E570", Offset = "0x58E570")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x949504", Offset = "0x949504", VA = "0x949504")]
	public delayclimb7()
	{
	}
}
[Token(Token = "0x200002B")]
public class delayclimb8 : MonoBehaviour
{
	[Token(Token = "0x200043A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572658", Offset = "0x572658")]
	private sealed class <Example>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public delayclimb8 <>4__this;

		[Token(Token = "0x17000338")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002035")]
			[Address(RVA = "0x137DDF8", Offset = "0x137DDF8", VA = "0x137DDF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000339")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002037")]
			[Address(RVA = "0x137DE40", Offset = "0x137DE40", VA = "0x137DE40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x137DC8C", Offset = "0x137DC8C", VA = "0x137DC8C")]
		[DebuggerHidden]
		public <Example>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x137DCB8", Offset = "0x137DCB8", VA = "0x137DCB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x137DCBC", Offset = "0x137DCBC", VA = "0x137DCBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0x137DE00", Offset = "0x137DE00", VA = "0x137DE00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject todelay;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float delay;

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x94950C", Offset = "0x94950C", VA = "0x94950C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x9495B0", Offset = "0x9495B0", VA = "0x9495B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E5D0", Offset = "0x58E5D0")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x94961C", Offset = "0x94961C", VA = "0x94961C")]
	public delayclimb8()
	{
	}
}
[Token(Token = "0x200002C")]
public class delayclimb9 : MonoBehaviour
{
	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject turnon;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject turnoff;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float delay;

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x949624", Offset = "0x949624", VA = "0x949624")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x9496C4", Offset = "0x9496C4", VA = "0x9496C4")]
	public delayclimb9()
	{
	}
}
[Token(Token = "0x200002D")]
public class delayclimbrandom100 : MonoBehaviour
{
	[Token(Token = "0x200043B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572668", Offset = "0x572668")]
	private sealed class <Example>d__111 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public delayclimbrandom100 <>4__this;

		[Token(Token = "0x1700033A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600203B")]
			[Address(RVA = "0x137ED78", Offset = "0x137ED78", VA = "0x137ED78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600203D")]
			[Address(RVA = "0x137EDC0", Offset = "0x137EDC0", VA = "0x137EDC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0x137DE48", Offset = "0x137DE48", VA = "0x137DE48")]
		[DebuggerHidden]
		public <Example>d__111(int <>1__state)
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x137DE74", Offset = "0x137DE74", VA = "0x137DE74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0x137DE78", Offset = "0x137DE78", VA = "0x137DE78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0x137ED80", Offset = "0x137ED80", VA = "0x137ED80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject todelay1;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject r1;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject r2;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject r3;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject r4;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject r5;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject r6;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject r7;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject r8;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject r9;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject r10;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject r11;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject r12;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject r13;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject r14;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject r15;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject r16;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject r17;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject r18;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject r19;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject r20;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject r21;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject r22;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject r23;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject r24;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject r25;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject r26;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject r27;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject r28;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject r29;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject r30;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject r31;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject r32;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject r33;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject r34;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject r35;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject r36;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject r37;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject r38;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject r39;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject r40;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject r41;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject r42;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject r43;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject r44;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject r45;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject r46;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject r47;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject r48;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject r49;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject r50;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject r51;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject r52;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject r53;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject r54;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject r55;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject r56;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject r57;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject r58;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject r59;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public GameObject r60;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject r61;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject r62;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public GameObject r63;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject r64;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public GameObject r65;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public GameObject r66;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public GameObject r67;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public GameObject r68;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public GameObject r69;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public GameObject r70;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public GameObject r71;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public GameObject r72;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public GameObject r73;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public GameObject r74;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public GameObject r75;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public GameObject r76;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject r77;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public GameObject r78;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public GameObject r79;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public GameObject r80;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public GameObject r81;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public GameObject r82;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public GameObject r83;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public GameObject r84;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public GameObject r85;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public GameObject r86;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public GameObject r87;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public GameObject r88;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public GameObject r89;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public GameObject r90;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public GameObject r91;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public GameObject r92;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public GameObject r93;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public GameObject r94;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public GameObject r95;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public GameObject r96;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public GameObject r97;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public GameObject r98;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public GameObject r99;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public GameObject r100;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public GameObject r101;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public GameObject r102;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public GameObject r103;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public GameObject r104;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public GameObject r105;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public GameObject r106;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public GameObject r107;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public GameObject r108;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	private int delay;

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x9496CC", Offset = "0x9496CC", VA = "0x9496CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x949714", Offset = "0x949714", VA = "0x949714")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E630", Offset = "0x58E630")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x949780", Offset = "0x949780", VA = "0x949780")]
	public delayclimbrandom100()
	{
	}
}
[Token(Token = "0x200002E")]
public class delayclimbrandom145 : MonoBehaviour
{
	[Token(Token = "0x200043C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572678", Offset = "0x572678")]
	private sealed class <Example>d__148 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public delayclimbrandom145 <>4__this;

		[Token(Token = "0x1700033C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002041")]
			[Address(RVA = "0x1380198", Offset = "0x1380198", VA = "0x1380198", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002043")]
			[Address(RVA = "0x13801E0", Offset = "0x13801E0", VA = "0x13801E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0x137EDC8", Offset = "0x137EDC8", VA = "0x137EDC8")]
		[DebuggerHidden]
		public <Example>d__148(int <>1__state)
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0x137EDF4", Offset = "0x137EDF4", VA = "0x137EDF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0x137EDF8", Offset = "0x137EDF8", VA = "0x137EDF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0x13801A0", Offset = "0x13801A0", VA = "0x13801A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject todelay1;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject r1;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject r2;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject r3;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject r4;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject r5;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject r6;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject r7;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject r8;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject r9;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject r10;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject r11;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject r12;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject r13;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject r14;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject r15;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject r16;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject r17;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject r18;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject r19;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject r20;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject r21;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject r22;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject r23;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject r24;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject r25;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject r26;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject r27;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject r28;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject r29;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject r30;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject r31;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject r32;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject r33;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject r34;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject r35;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject r36;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject r37;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject r38;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject r39;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject r40;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject r41;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject r42;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject r43;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject r44;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject r45;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject r46;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject r47;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject r48;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject r49;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject r50;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject r51;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject r52;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject r53;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject r54;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject r55;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject r56;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject r57;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject r58;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject r59;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public GameObject r60;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject r61;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject r62;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public GameObject r63;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject r64;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public GameObject r65;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public GameObject r66;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public GameObject r67;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public GameObject r68;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public GameObject r69;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public GameObject r70;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public GameObject r71;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public GameObject r72;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public GameObject r73;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public GameObject r74;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public GameObject r75;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public GameObject r76;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject r77;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public GameObject r78;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public GameObject r79;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public GameObject r80;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public GameObject r81;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public GameObject r82;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public GameObject r83;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public GameObject r84;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public GameObject r85;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public GameObject r86;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public GameObject r87;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public GameObject r88;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public GameObject r89;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public GameObject r90;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public GameObject r91;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public GameObject r92;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public GameObject r93;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public GameObject r94;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public GameObject r95;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public GameObject r96;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public GameObject r97;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public GameObject r98;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public GameObject r99;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public GameObject r100;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public GameObject r101;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public GameObject r102;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public GameObject r103;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public GameObject r104;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public GameObject r105;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public GameObject r106;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public GameObject r107;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public GameObject r108;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public GameObject r109;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public GameObject r110;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public GameObject r111;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public GameObject r112;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public GameObject r113;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public GameObject r114;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public GameObject r115;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public GameObject r116;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public GameObject r117;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public GameObject r118;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public GameObject r119;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public GameObject r120;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public GameObject r121;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	public GameObject r122;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public GameObject r123;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	public GameObject r124;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public GameObject r125;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	public GameObject r126;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public GameObject r127;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	public GameObject r128;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public GameObject r129;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	public GameObject r130;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	public GameObject r131;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	public GameObject r132;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	public GameObject r133;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	public GameObject r134;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	public GameObject r135;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
	public GameObject r136;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
	public GameObject r137;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
	public GameObject r138;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
	public GameObject r139;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
	public GameObject r140;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
	public GameObject r141;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
	public GameObject r142;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	public GameObject r143;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
	public GameObject r144;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
	public GameObject r145;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
	private int delay;

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x949788", Offset = "0x949788", VA = "0x949788")]
	private void Start()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x9497D0", Offset = "0x9497D0", VA = "0x9497D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E690", Offset = "0x58E690")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x94983C", Offset = "0x94983C", VA = "0x94983C")]
	public delayclimbrandom145()
	{
	}
}
[Token(Token = "0x200002F")]
public class delayclimbrandom15 : MonoBehaviour
{
	[Token(Token = "0x200043D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572688", Offset = "0x572688")]
	private sealed class <Example>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public delayclimbrandom15 <>4__this;

		[Token(Token = "0x1700033E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002047")]
			[Address(RVA = "0x1380574", Offset = "0x1380574", VA = "0x1380574", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002049")]
			[Address(RVA = "0x13805BC", Offset = "0x13805BC", VA = "0x13805BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0x13801E8", Offset = "0x13801E8", VA = "0x13801E8")]
		[DebuggerHidden]
		public <Example>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0x1380214", Offset = "0x1380214", VA = "0x1380214", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0x1380218", Offset = "0x1380218", VA = "0x1380218", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0x138057C", Offset = "0x138057C", VA = "0x138057C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject todelay1;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject r1;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject r2;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject r3;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject r4;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject r5;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject r6;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject r7;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject r8;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject r9;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject r10;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject r11;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject r12;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject r13;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject r14;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject r15;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int delay;

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x949844", Offset = "0x949844", VA = "0x949844")]
	private void Start()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x9499B8", Offset = "0x9499B8", VA = "0x9499B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E6F0", Offset = "0x58E6F0")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x949A24", Offset = "0x949A24", VA = "0x949A24")]
	public delayclimbrandom15()
	{
	}
}
[Token(Token = "0x2000030")]
public class delayclimbrandom16 : MonoBehaviour
{
	[Token(Token = "0x200043E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572698", Offset = "0x572698")]
	private sealed class <Example>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public delayclimbrandom16 <>4__this;

		[Token(Token = "0x17000340")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600204D")]
			[Address(RVA = "0x1380770", Offset = "0x1380770", VA = "0x1380770", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000341")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600204F")]
			[Address(RVA = "0x13807B8", Offset = "0x13807B8", VA = "0x13807B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0x13805C4", Offset = "0x13805C4", VA = "0x13805C4")]
		[DebuggerHidden]
		public <Example>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x13805F0", Offset = "0x13805F0", VA = "0x13805F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0x13805F4", Offset = "0x13805F4", VA = "0x13805F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0x1380778", Offset = "0x1380778", VA = "0x1380778", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject todelay1;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject objToDestroy;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int delay;

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x949A2C", Offset = "0x949A2C", VA = "0x949A2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x949A74", Offset = "0x949A74", VA = "0x949A74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E750", Offset = "0x58E750")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x949AE0", Offset = "0x949AE0", VA = "0x949AE0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x94A490", Offset = "0x94A490", VA = "0x94A490")]
	public delayclimbrandom16()
	{
	}
}
[Token(Token = "0x2000031")]
public class delayclimbrandom17 : MonoBehaviour
{
	[Token(Token = "0x200043F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5726A8", Offset = "0x5726A8")]
	private sealed class <Example>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public delayclimbrandom17 <>4__this;

		[Token(Token = "0x17000342")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002053")]
			[Address(RVA = "0x14153B4", Offset = "0x14153B4", VA = "0x14153B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000343")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002055")]
			[Address(RVA = "0x14153FC", Offset = "0x14153FC", VA = "0x14153FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0x1413E64", Offset = "0x1413E64", VA = "0x1413E64")]
		[DebuggerHidden]
		public <Example>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0x1413E90", Offset = "0x1413E90", VA = "0x1413E90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0x1413E94", Offset = "0x1413E94", VA = "0x1413E94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0x14153BC", Offset = "0x14153BC", VA = "0x14153BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000440")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5726B8", Offset = "0x5726B8")]
	private sealed class <<Example>g__Example2|8_0>d : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public delayclimbrandom17 <>4__this;

		[Token(Token = "0x17000344")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002059")]
			[Address(RVA = "0x1381D10", Offset = "0x1381D10", VA = "0x1381D10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000345")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600205B")]
			[Address(RVA = "0x1381D58", Offset = "0x1381D58", VA = "0x1381D58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0x13807C0", Offset = "0x13807C0", VA = "0x13807C0")]
		[DebuggerHidden]
		public <<Example>g__Example2|8_0>d(int <>1__state)
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x13807EC", Offset = "0x13807EC", VA = "0x13807EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0x13807F0", Offset = "0x13807F0", VA = "0x13807F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0x1381D18", Offset = "0x1381D18", VA = "0x1381D18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject todelay1;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject r1;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject r2;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject r3;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject r4;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject r5;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int delay;

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x94A498", Offset = "0x94A498", VA = "0x94A498")]
	private void Start()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x94A558", Offset = "0x94A558", VA = "0x94A558")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E7B0", Offset = "0x58E7B0")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x94A5C4", Offset = "0x94A5C4", VA = "0x94A5C4")]
	public delayclimbrandom17()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x94A5CC", Offset = "0x94A5CC", VA = "0x94A5CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E810", Offset = "0x58E810")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58E810", Offset = "0x58E810")]
	private IEnumerator <Example>g__Example2|8_0()
	{
		return null;
	}
}
[Token(Token = "0x2000032")]
public class delaystart : MonoBehaviour
{
	[Token(Token = "0x2000441")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5726C8", Offset = "0x5726C8")]
	private sealed class <Example>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public delaystart <>4__this;

		[Token(Token = "0x17000346")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600205F")]
			[Address(RVA = "0x1415570", Offset = "0x1415570", VA = "0x1415570", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000347")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002061")]
			[Address(RVA = "0x14155B8", Offset = "0x14155B8", VA = "0x14155B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0x1415404", Offset = "0x1415404", VA = "0x1415404")]
		[DebuggerHidden]
		public <Example>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0x1415430", Offset = "0x1415430", VA = "0x1415430", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0x1415434", Offset = "0x1415434", VA = "0x1415434", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0x1415578", Offset = "0x1415578", VA = "0x1415578", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject otherobj;

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x94A638", Offset = "0x94A638", VA = "0x94A638")]
	private void Start()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x94A664", Offset = "0x94A664", VA = "0x94A664")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E880", Offset = "0x58E880")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x94A6D0", Offset = "0x94A6D0", VA = "0x94A6D0")]
	public delaystart()
	{
	}
}
[Token(Token = "0x2000033")]
public class destroy1 : MonoBehaviour
{
	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Tree;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Cube;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Sphere;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Fern;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text Enemy;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int count;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int count2;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int count3;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int count4;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int count5;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject objToDestroy;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform Spawnpoint;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Rigidbody Brown;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Rigidbody Green;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Rigidbody Pink;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool canDestroy;

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x94A6D8", Offset = "0x94A6D8", VA = "0x94A6D8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x94A714", Offset = "0x94A714", VA = "0x94A714")]
	private void Update()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x94A78C", Offset = "0x94A78C", VA = "0x94A78C")]
	private void delayedcode()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x94AC18", Offset = "0x94AC18", VA = "0x94AC18")]
	public destroy1()
	{
	}
}
[Token(Token = "0x2000034")]
public class destroy2 : MonoBehaviour
{
	[Token(Token = "0x2000442")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5726D8", Offset = "0x5726D8")]
	private sealed class <delayedcode2>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public destroy2 <>4__this;

		[Token(Token = "0x17000348")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002065")]
			[Address(RVA = "0x1415810", Offset = "0x1415810", VA = "0x1415810", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000349")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002067")]
			[Address(RVA = "0x1415858", Offset = "0x1415858", VA = "0x1415858", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0x14155C0", Offset = "0x14155C0", VA = "0x14155C0")]
		[DebuggerHidden]
		public <delayedcode2>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0x14155EC", Offset = "0x14155EC", VA = "0x14155EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0x14155F0", Offset = "0x14155F0", VA = "0x14155F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0x1415818", Offset = "0x1415818", VA = "0x1415818", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000443")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5726E8", Offset = "0x5726E8")]
	private sealed class <delayedcodehalf>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public destroy2 <>4__this;

		[Token(Token = "0x1700034A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600206B")]
			[Address(RVA = "0x1415D38", Offset = "0x1415D38", VA = "0x1415D38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600206D")]
			[Address(RVA = "0x1415D80", Offset = "0x1415D80", VA = "0x1415D80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0x1415BA4", Offset = "0x1415BA4", VA = "0x1415BA4")]
		[DebuggerHidden]
		public <delayedcodehalf>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0x1415BD0", Offset = "0x1415BD0", VA = "0x1415BD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x1415BD4", Offset = "0x1415BD4", VA = "0x1415BD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0x1415D40", Offset = "0x1415D40", VA = "0x1415D40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000444")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5726F8", Offset = "0x5726F8")]
	private sealed class <delayedcodecoin>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public destroy2 <>4__this;

		[Token(Token = "0x1700034C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002071")]
			[Address(RVA = "0x1415B54", Offset = "0x1415B54", VA = "0x1415B54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002073")]
			[Address(RVA = "0x1415B9C", Offset = "0x1415B9C", VA = "0x1415B9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0x1415860", Offset = "0x1415860", VA = "0x1415860")]
		[DebuggerHidden]
		public <delayedcodecoin>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0x141588C", Offset = "0x141588C", VA = "0x141588C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0x1415890", Offset = "0x1415890", VA = "0x1415890", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0x1415B5C", Offset = "0x1415B5C", VA = "0x1415B5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Tree;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Fern;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Enemy;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Coins;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int counttree;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int countfern;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int countcoin;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int countenemy;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject objToDestroy;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool canDestroy;

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x94AC20", Offset = "0x94AC20", VA = "0x94AC20")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x94AE6C", Offset = "0x94AE6C", VA = "0x94AE6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E8E0", Offset = "0x58E8E0")]
	private IEnumerator delayedcode2()
	{
		return null;
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x94AD94", Offset = "0x94AD94", VA = "0x94AD94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E940", Offset = "0x58E940")]
	private IEnumerator delayedcodehalf()
	{
		return null;
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x94AE00", Offset = "0x94AE00", VA = "0x94AE00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58E9A0", Offset = "0x58E9A0")]
	private IEnumerator delayedcodecoin()
	{
		return null;
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x94AED8", Offset = "0x94AED8", VA = "0x94AED8")]
	public destroy2()
	{
	}
}
[Token(Token = "0x2000035")]
public class destroycar : MonoBehaviour
{
	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject objToDestroy;

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x94AEE0", Offset = "0x94AEE0", VA = "0x94AEE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x94AEE4", Offset = "0x94AEE4", VA = "0x94AEE4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x94AEE8", Offset = "0x94AEE8", VA = "0x94AEE8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x94B030", Offset = "0x94B030", VA = "0x94B030")]
	public destroycar()
	{
	}
}
[Token(Token = "0x2000036")]
public class destroyenable : MonoBehaviour
{
	[Token(Token = "0x2000445")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572708", Offset = "0x572708")]
	private sealed class <Example1>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public destroyenable <>4__this;

		[Token(Token = "0x1700034E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002077")]
			[Address(RVA = "0x1415F1C", Offset = "0x1415F1C", VA = "0x1415F1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002079")]
			[Address(RVA = "0x1415F64", Offset = "0x1415F64", VA = "0x1415F64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x1415D88", Offset = "0x1415D88", VA = "0x1415D88")]
		[DebuggerHidden]
		public <Example1>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x1415DB4", Offset = "0x1415DB4", VA = "0x1415DB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0x1415DB8", Offset = "0x1415DB8", VA = "0x1415DB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x1415F24", Offset = "0x1415F24", VA = "0x1415F24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000446")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572718", Offset = "0x572718")]
	private sealed class <Example2>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public destroyenable <>4__this;

		[Token(Token = "0x17000350")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600207D")]
			[Address(RVA = "0x14160D8", Offset = "0x14160D8", VA = "0x14160D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000351")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600207F")]
			[Address(RVA = "0x1416120", Offset = "0x1416120", VA = "0x1416120", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x1415F6C", Offset = "0x1415F6C", VA = "0x1415F6C")]
		[DebuggerHidden]
		public <Example2>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0x1415F98", Offset = "0x1415F98", VA = "0x1415F98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0x1415F9C", Offset = "0x1415F9C", VA = "0x1415F9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0x14160E0", Offset = "0x14160E0", VA = "0x14160E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject destroy;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject enablez;

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x94B038", Offset = "0x94B038", VA = "0x94B038")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x94B154", Offset = "0x94B154", VA = "0x94B154")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x94B07C", Offset = "0x94B07C", VA = "0x94B07C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58EA00", Offset = "0x58EA00")]
	private IEnumerator Example1()
	{
		return null;
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x94B0E8", Offset = "0x94B0E8", VA = "0x94B0E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58EA60", Offset = "0x58EA60")]
	private IEnumerator Example2()
	{
		return null;
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x94B158", Offset = "0x94B158", VA = "0x94B158")]
	public destroyenable()
	{
	}
}
[Token(Token = "0x2000037")]
public class destroyontrigger : MonoBehaviour
{
	[Token(Token = "0x2000447")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572728", Offset = "0x572728")]
	private sealed class <Example>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public destroyontrigger <>4__this;

		[Token(Token = "0x17000352")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002083")]
			[Address(RVA = "0x1416278", Offset = "0x1416278", VA = "0x1416278", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000353")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002085")]
			[Address(RVA = "0x14162C0", Offset = "0x14162C0", VA = "0x14162C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0x1416128", Offset = "0x1416128", VA = "0x1416128")]
		[DebuggerHidden]
		public <Example>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0x1416154", Offset = "0x1416154", VA = "0x1416154", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0x1416158", Offset = "0x1416158", VA = "0x1416158", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0x1416280", Offset = "0x1416280", VA = "0x1416280", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject objToDestroy;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject destroy1;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject destroy2;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject destroy3;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject destroy4;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject destroy5;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject destroy6;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject destroy7;

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x94B160", Offset = "0x94B160", VA = "0x94B160")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x94B164", Offset = "0x94B164", VA = "0x94B164")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x94B168", Offset = "0x94B168", VA = "0x94B168")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x94B208", Offset = "0x94B208", VA = "0x94B208")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58EAC0", Offset = "0x58EAC0")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x94B274", Offset = "0x94B274", VA = "0x94B274")]
	public destroyontrigger()
	{
	}
}
[Token(Token = "0x2000038")]
public class destroyonweapon : MonoBehaviour
{
	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject objToDestroy;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool canDestroy;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x94B27C", Offset = "0x94B27C", VA = "0x94B27C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x94B280", Offset = "0x94B280", VA = "0x94B280")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x94B284", Offset = "0x94B284", VA = "0x94B284")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x94B320", Offset = "0x94B320", VA = "0x94B320")]
	public destroyonweapon()
	{
	}
}
[Token(Token = "0x2000039")]
public class disablestart : MonoBehaviour
{
	[Token(Token = "0x2000448")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572738", Offset = "0x572738")]
	private sealed class <Example>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public disablestart <>4__this;

		[Token(Token = "0x17000354")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002089")]
			[Address(RVA = "0x1416434", Offset = "0x1416434", VA = "0x1416434", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000355")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600208B")]
			[Address(RVA = "0x141647C", Offset = "0x141647C", VA = "0x141647C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0x14162C8", Offset = "0x14162C8", VA = "0x14162C8")]
		[DebuggerHidden]
		public <Example>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0x14162F4", Offset = "0x14162F4", VA = "0x14162F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0x14162F8", Offset = "0x14162F8", VA = "0x14162F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600208A")]
		[Address(RVA = "0x141643C", Offset = "0x141643C", VA = "0x141643C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject otherobj;

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x90F448", Offset = "0x90F448", VA = "0x90F448")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x90F474", Offset = "0x90F474", VA = "0x90F474")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58EB20", Offset = "0x58EB20")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x90F4E0", Offset = "0x90F4E0", VA = "0x90F4E0")]
	public disablestart()
	{
	}
}
[Token(Token = "0x200003A")]
public class duplicateobj : MonoBehaviour
{
	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject enemyMake;

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x90F4E8", Offset = "0x90F4E8", VA = "0x90F4E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x90F4EC", Offset = "0x90F4EC", VA = "0x90F4EC")]
	public void Z()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x90F5C0", Offset = "0x90F5C0", VA = "0x90F5C0")]
	public duplicateobj()
	{
	}
}
[Token(Token = "0x200003B")]
public class duplicateobj1 : MonoBehaviour
{
	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject myPrefab;

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x90F5C8", Offset = "0x90F5C8", VA = "0x90F5C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x90F5CC", Offset = "0x90F5CC", VA = "0x90F5CC")]
	public void ZZ()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x90F698", Offset = "0x90F698", VA = "0x90F698")]
	public duplicateobj1()
	{
	}
}
[Token(Token = "0x200003C")]
public class enablestart : MonoBehaviour
{
	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x90F6A0", Offset = "0x90F6A0", VA = "0x90F6A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x90F6A4", Offset = "0x90F6A4", VA = "0x90F6A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x90F6A8", Offset = "0x90F6A8", VA = "0x90F6A8")]
	public enablestart()
	{
	}
}
[Token(Token = "0x200003D")]
public class fernscore : MonoBehaviour
{
	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private gamescore1 scoreManager;

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x90F6B0", Offset = "0x90F6B0", VA = "0x90F6B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x90F728", Offset = "0x90F728", VA = "0x90F728")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x90F7F8", Offset = "0x90F7F8", VA = "0x90F7F8")]
	public fernscore()
	{
	}
}
[Token(Token = "0x200003E")]
public class fernscore1 : MonoBehaviour
{
	[Token(Token = "0x2000449")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572748", Offset = "0x572748")]
	private sealed class <Example>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public fernscore1 <>4__this;

		[Token(Token = "0x17000356")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600208F")]
			[Address(RVA = "0x14165B0", Offset = "0x14165B0", VA = "0x14165B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000357")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002091")]
			[Address(RVA = "0x14165F8", Offset = "0x14165F8", VA = "0x14165F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0x1416484", Offset = "0x1416484", VA = "0x1416484")]
		[DebuggerHidden]
		public <Example>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0x14164B0", Offset = "0x14164B0", VA = "0x14164B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600208E")]
		[Address(RVA = "0x14164B4", Offset = "0x14164B4", VA = "0x14164B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0x14165B8", Offset = "0x14165B8", VA = "0x14165B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ObjectA;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ObjectB;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private gamescore1 scoreManager;

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x90F800", Offset = "0x90F800", VA = "0x90F800")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x90F878", Offset = "0x90F878", VA = "0x90F878")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x90FAD4", Offset = "0x90FAD4", VA = "0x90FAD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58EB80", Offset = "0x58EB80")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x90FB40", Offset = "0x90FB40", VA = "0x90FB40")]
	public fernscore1()
	{
	}
}
[Token(Token = "0x200003F")]
public class fernscore2 : MonoBehaviour
{
	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject ObjectA;

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x90FB48", Offset = "0x90FB48", VA = "0x90FB48")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x90FB9C", Offset = "0x90FB9C", VA = "0x90FB9C")]
	public void On()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x90FBBC", Offset = "0x90FBBC", VA = "0x90FBBC")]
	public void Off()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x90FBDC", Offset = "0x90FBDC", VA = "0x90FBDC")]
	public fernscore2()
	{
	}
}
[Token(Token = "0x2000040")]
public class fernscoreE : MonoBehaviour
{
	[Token(Token = "0x200044A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572758", Offset = "0x572758")]
	private sealed class <Example>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public fernscoreE <>4__this;

		[Token(Token = "0x17000358")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002095")]
			[Address(RVA = "0x141672C", Offset = "0x141672C", VA = "0x141672C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000359")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002097")]
			[Address(RVA = "0x1416774", Offset = "0x1416774", VA = "0x1416774", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0x1416600", Offset = "0x1416600", VA = "0x1416600")]
		[DebuggerHidden]
		public <Example>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0x141662C", Offset = "0x141662C", VA = "0x141662C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0x1416630", Offset = "0x1416630", VA = "0x1416630", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0x1416734", Offset = "0x1416734", VA = "0x1416734", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ObjectA;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ObjectB;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private gamescore1 scoreManager;

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x90FBE4", Offset = "0x90FBE4", VA = "0x90FBE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x90FC5C", Offset = "0x90FC5C", VA = "0x90FC5C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x90FEB8", Offset = "0x90FEB8", VA = "0x90FEB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58EBE0", Offset = "0x58EBE0")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x90FF24", Offset = "0x90FF24", VA = "0x90FF24")]
	public fernscoreE()
	{
	}
}
[Token(Token = "0x2000041")]
public class findnulldisable : MonoBehaviour
{
	[Token(Token = "0x200044B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572768", Offset = "0x572768")]
	private sealed class <Example>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public findnulldisable <>4__this;

		[Token(Token = "0x1700035A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600209B")]
			[Address(RVA = "0x141685C", Offset = "0x141685C", VA = "0x141685C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600209D")]
			[Address(RVA = "0x14168A4", Offset = "0x14168A4", VA = "0x14168A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0x141677C", Offset = "0x141677C", VA = "0x141677C")]
		[DebuggerHidden]
		public <Example>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0x14167A8", Offset = "0x14167A8", VA = "0x14167A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0x14167AC", Offset = "0x14167AC", VA = "0x14167AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0x1416864", Offset = "0x1416864", VA = "0x1416864", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ObjectA;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string scr;

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x90FF2C", Offset = "0x90FF2C", VA = "0x90FF2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x90FF30", Offset = "0x90FF30", VA = "0x90FF30")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x910020", Offset = "0x910020", VA = "0x910020")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58EC40", Offset = "0x58EC40")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x91008C", Offset = "0x91008C", VA = "0x91008C")]
	public findnulldisable()
	{
	}
}
[Token(Token = "0x2000042")]
public class gamescore1 : MonoBehaviour
{
	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text scoreText;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int score;

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x90F7AC", Offset = "0x90F7AC", VA = "0x90F7AC")]
	public void IncrementScore()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x910A54", Offset = "0x910A54", VA = "0x910A54")]
	public gamescore1()
	{
	}
}
[Token(Token = "0x2000043")]
public class gap : MonoBehaviour
{
	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x910A5C", Offset = "0x910A5C", VA = "0x910A5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x910AD0", Offset = "0x910AD0", VA = "0x910AD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x910AD4", Offset = "0x910AD4", VA = "0x910AD4")]
	public gap()
	{
	}
}
[Token(Token = "0x2000044")]
public class getscreenfade : MonoBehaviour
{
	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject off;

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x910ADC", Offset = "0x910ADC", VA = "0x910ADC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x910B40", Offset = "0x910B40", VA = "0x910B40")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x910B44", Offset = "0x910B44", VA = "0x910B44")]
	public getscreenfade()
	{
	}
}
[Token(Token = "0x2000045")]
public class highscorerobot : MonoBehaviour
{
	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text treetext;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text ferntext;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text rocktext;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text treetext2;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Text ferntext2;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text rocktext2;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text currentscoretext;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int tree;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int fern;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int rock;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int currentscore;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int highscoresaved;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text highscoretext;

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x911A00", Offset = "0x911A00", VA = "0x911A00")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x911A84", Offset = "0x911A84", VA = "0x911A84")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x911B88", Offset = "0x911B88", VA = "0x911B88")]
	public highscorerobot()
	{
	}
}
[Token(Token = "0x2000046")]
public class highscore1 : MonoBehaviour
{
	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int highscoresaved;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text highscoretext;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string sceneName;

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x911274", Offset = "0x911274", VA = "0x911274")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x911334", Offset = "0x911334", VA = "0x911334")]
	public highscore1()
	{
	}
}
[Token(Token = "0x2000047")]
public class highscoreall : MonoBehaviour
{
	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text ferntext;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text treetext2;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text ferntext2;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text rocktext2;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text currentscoretext;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int tree;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int fern;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int rock;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int currentscore;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int highscoresaved;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text highscoretext;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string sceneName;

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x91133C", Offset = "0x91133C", VA = "0x91133C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x9114C4", Offset = "0x9114C4", VA = "0x9114C4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x9116B8", Offset = "0x9116B8", VA = "0x9116B8")]
	public highscoreall()
	{
	}
}
[Token(Token = "0x2000048")]
public class highscoredino : MonoBehaviour
{
	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text treetext;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text ferntext;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text rocktext;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text treetext2;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Text ferntext2;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text rocktext2;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text currentscoretext;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int tree;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int fern;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int rock;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int currentscore;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int highscoresaved;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text highscoretext;

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x9116C0", Offset = "0x9116C0", VA = "0x9116C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x911744", Offset = "0x911744", VA = "0x911744")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x911858", Offset = "0x911858", VA = "0x911858")]
	public highscoredino()
	{
	}
}
[Token(Token = "0x2000049")]
public class highscorepatrol : MonoBehaviour
{
	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text treetext;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text ferntext;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text rocktext;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text treetext2;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Text ferntext2;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text rocktext2;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text currentscoretext;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int tree;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int fern;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int rock;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int currentscore;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int highscoresaved;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text highscoretext;

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x911860", Offset = "0x911860", VA = "0x911860")]
	private void Start()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x9118E4", Offset = "0x9118E4", VA = "0x9118E4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x9119F8", Offset = "0x9119F8", VA = "0x9119F8")]
	public highscorepatrol()
	{
	}
}
[Token(Token = "0x200004A")]
public class highscore : MonoBehaviour
{
	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text treetext;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text ferntext;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text rocktext;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text treetext2;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Text ferntext2;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text rocktext2;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text currentscoretext;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int tree;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int fern;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int rock;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int currentscore;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int highscoresaved;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text highscoretext;

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x911084", Offset = "0x911084", VA = "0x911084")]
	private void Start()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x911108", Offset = "0x911108", VA = "0x911108")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x91126C", Offset = "0x91126C", VA = "0x91126C")]
	public highscore()
	{
	}
}
[Token(Token = "0x200004B")]
public class highscoreshow : MonoBehaviour
{
	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text z1btext;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int z1b;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text z1ctext;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int z1c;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text z1dtext;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int z1d;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text z2btext;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int z2b;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text z2ctext;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int z2c;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text z2dtext;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int z2d;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text z3btext;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int z3b;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text z3ctext;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int z3c;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text z3dtext;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int z3d;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text z4btext;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int z4b;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text z4ctext;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int z4c;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text z4dtext;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int z4d;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Text z5btext;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int z5b;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Text z5ctext;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int z5c;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Text z5dtext;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int z5d;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Text z6btext;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int z6b;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Text z6ctext;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int z6c;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Text z6dtext;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int z6d;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Text z7btext;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int z7b;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Text z7ctext;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private int z7c;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Text z7dtext;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private int z7d;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Text z8btext;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int z8b;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Text z8ctext;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int z8c;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Text z8dtext;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private int z8d;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Text z9btext;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int z9b;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Text z9ctext;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private int z9c;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Text z9dtext;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private int z9d;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Text z10btext;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private int z10b;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Text z10ctext;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private int z10c;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Text z10dtext;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private int z10d;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Text z11btext;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private int z11b;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Text z11ctext;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private int z11c;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public Text zL1btext;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private int zL1b;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public Text zL1ctext;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private int zL1c;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public Text zL1dtext;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private int zL1d;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private string z1z;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private string z2z;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private string z3z;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private string z4z;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private string z5z;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private string z6z;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private string z7z;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private string z8z;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private string z9z;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private string z10z;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private string z11z;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private string z12z;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private string z13z;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private string z14z;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private string z15z;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private string z16z;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private string z17z;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private string z18z;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private string z19z;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private string z20z;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private string z21z;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private string z22z;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private string z23z;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private string z24z;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private string z25z;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private string z26z;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	private string z27z;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	private string z28z;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private string z29z;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private string z30z;

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x911B90", Offset = "0x911B90", VA = "0x911B90")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x9125B0", Offset = "0x9125B0", VA = "0x9125B0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x9126E4", Offset = "0x9126E4", VA = "0x9126E4")]
	public highscoreshow()
	{
	}
}
[Token(Token = "0x200004C")]
public class highscoreshow1 : MonoBehaviour
{
	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text z1btext;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int z1b;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text z1ctext;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int z1c;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text z1dtext;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int z1d;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text z2btext;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int z2b;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text z2ctext;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int z2c;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text z2dtext;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int z2d;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text z3btext;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int z3b;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text z3ctext;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int z3c;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text z3dtext;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int z3d;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text z4btext;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int z4b;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text z4ctext;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int z4c;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text z4dtext;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int z4d;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Text z5btext;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int z5b;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Text z5ctext;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int z5c;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Text z5dtext;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int z5d;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Text z6btext;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int z6b;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Text z6ctext;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int z6c;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Text z6dtext;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int z6d;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Text z7btext;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int z7b;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Text z7ctext;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private int z7c;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Text z7dtext;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private int z7d;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Text z8btext;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int z8b;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Text z8ctext;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int z8c;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Text z8dtext;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private int z8d;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Text z9btext;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int z9b;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Text z9ctext;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private int z9c;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Text z9dtext;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private int z9d;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Text z10btext;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private int z10b;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Text z10ctext;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private int z10c;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Text z10dtext;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private int z10d;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Text zL1btext;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private int zL1b;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Text zL1ctext;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private int zL1c;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public Text zL1dtext;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private int zL1d;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public Text z29text;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private int z29b;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public Text z30text;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private int z30b;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public Text z00text;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private int z00b;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public Text zlobbytext;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private int zlobbyb;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private string z1z;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private string z2z;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private string z3z;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private string z4z;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private string z5z;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private string z6z;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private string z7z;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private string z8z;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private string z9z;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private string z10z;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private string z11z;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private string z12z;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private string z13z;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private string z14z;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private string z15z;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private string z16z;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private string z17z;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private string z18z;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private string z19z;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private string z20z;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private string z21z;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private string z22z;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	private string z23z;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	private string z24z;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private string z25z;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private string z26z;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	private string z27z;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private string z28z;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	private string z29z;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	private string z30z;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	private string z00z;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	private string zlobbyz;

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x912A64", Offset = "0x912A64", VA = "0x912A64")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x913300", Offset = "0x913300", VA = "0x913300")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x91345C", Offset = "0x91345C", VA = "0x91345C")]
	public highscoreshow1()
	{
	}
}
[Token(Token = "0x200004D")]
public class lastscore : MonoBehaviour
{
	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text current;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text end;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject fish;

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x913814", Offset = "0x913814", VA = "0x913814")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x9138B4", Offset = "0x9138B4", VA = "0x9138B4")]
	public lastscore()
	{
	}
}
[Token(Token = "0x200004E")]
public class lastscore1 : MonoBehaviour
{
	[Token(Token = "0x200044C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572778", Offset = "0x572778")]
	private sealed class <Example>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public lastscore1 <>4__this;

		[Token(Token = "0x1700035C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020A1")]
			[Address(RVA = "0x1416D68", Offset = "0x1416D68", VA = "0x1416D68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020A3")]
			[Address(RVA = "0x1416DB0", Offset = "0x1416DB0", VA = "0x1416DB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0x1416914", Offset = "0x1416914", VA = "0x1416914")]
		[DebuggerHidden]
		public <Example>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0x1416940", Offset = "0x1416940", VA = "0x1416940", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x1416944", Offset = "0x1416944", VA = "0x1416944", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x1416D70", Offset = "0x1416D70", VA = "0x1416D70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject current;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text end;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text test;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject fish1;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject fish2;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject fish3;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject fish4;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject fish5;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int endin;

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x9138BC", Offset = "0x9138BC", VA = "0x9138BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x913C94", Offset = "0x913C94", VA = "0x913C94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58ECA0", Offset = "0x58ECA0")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x913D00", Offset = "0x913D00", VA = "0x913D00")]
	public lastscore1()
	{
	}
}
[Token(Token = "0x200004F")]
public class launchobj : MonoBehaviour
{
	[Token(Token = "0x200044D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572788", Offset = "0x572788")]
	private sealed class <Example>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public launchobj <>4__this;

		[Token(Token = "0x1700035E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020A7")]
			[Address(RVA = "0x141702C", Offset = "0x141702C", VA = "0x141702C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020A9")]
			[Address(RVA = "0x1417074", Offset = "0x1417074", VA = "0x1417074", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0x1416DB8", Offset = "0x1416DB8", VA = "0x1416DB8")]
		[DebuggerHidden]
		public <Example>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x1416DE4", Offset = "0x1416DE4", VA = "0x1416DE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x1416DE8", Offset = "0x1416DE8", VA = "0x1416DE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0x1417034", Offset = "0x1417034", VA = "0x1417034", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject shot;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody playerPos;

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x913D08", Offset = "0x913D08", VA = "0x913D08")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x913D34", Offset = "0x913D34", VA = "0x913D34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58ED00", Offset = "0x58ED00")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x913DA0", Offset = "0x913DA0", VA = "0x913DA0")]
	public launchobj()
	{
	}
}
[Token(Token = "0x2000050")]
public class lobby : MonoBehaviour
{
	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x913DA8", Offset = "0x913DA8", VA = "0x913DA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x913E1C", Offset = "0x913E1C", VA = "0x913E1C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x913E20", Offset = "0x913E20", VA = "0x913E20")]
	public lobby()
	{
	}
}
[Token(Token = "0x2000051")]
public class lobby00 : MonoBehaviour
{
	[Token(Token = "0x6000100")]
	[Address(RVA = "0x913E28", Offset = "0x913E28", VA = "0x913E28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x913E9C", Offset = "0x913E9C", VA = "0x913E9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x913EA0", Offset = "0x913EA0", VA = "0x913EA0")]
	public lobby00()
	{
	}
}
[Token(Token = "0x2000052")]
public class lobby001 : MonoBehaviour
{
	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject on;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject objToDestroy;

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x913EA8", Offset = "0x913EA8", VA = "0x913EA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x913EAC", Offset = "0x913EAC", VA = "0x913EAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x913EB0", Offset = "0x913EB0", VA = "0x913EB0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x913F4C", Offset = "0x913F4C", VA = "0x913F4C")]
	public lobby001()
	{
	}
}
[Token(Token = "0x2000053")]
public class lobby002 : MonoBehaviour
{
	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject on;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject objToDestroy;

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x913F54", Offset = "0x913F54", VA = "0x913F54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x913FC8", Offset = "0x913FC8", VA = "0x913FC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x913FCC", Offset = "0x913FCC", VA = "0x913FCC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x914068", Offset = "0x914068", VA = "0x914068")]
	public lobby002()
	{
	}
}
[Token(Token = "0x2000054")]
public class lobby01 : MonoBehaviour
{
	[Token(Token = "0x600010B")]
	[Address(RVA = "0x914070", Offset = "0x914070", VA = "0x914070")]
	private void Start()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x9140E4", Offset = "0x9140E4", VA = "0x9140E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x9140E8", Offset = "0x9140E8", VA = "0x9140E8")]
	public lobby01()
	{
	}
}
[Token(Token = "0x2000055")]
public class lobby02 : MonoBehaviour
{
	[Token(Token = "0x600010E")]
	[Address(RVA = "0x9140F0", Offset = "0x9140F0", VA = "0x9140F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x914164", Offset = "0x914164", VA = "0x914164")]
	private void Update()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x914168", Offset = "0x914168", VA = "0x914168")]
	public lobby02()
	{
	}
}
[Token(Token = "0x2000056")]
public class lobby1 : MonoBehaviour
{
	[Token(Token = "0x6000111")]
	[Address(RVA = "0x914170", Offset = "0x914170", VA = "0x914170")]
	private void Start()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x9141E4", Offset = "0x9141E4", VA = "0x9141E4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x9141E8", Offset = "0x9141E8", VA = "0x9141E8")]
	public lobby1()
	{
	}
}
[Token(Token = "0x2000057")]
public class misslehit : MonoBehaviour
{
	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ObjectA;

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x9141F0", Offset = "0x9141F0", VA = "0x9141F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x9141F4", Offset = "0x9141F4", VA = "0x9141F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x9141F8", Offset = "0x9141F8", VA = "0x9141F8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x914284", Offset = "0x914284", VA = "0x914284")]
	public misslehit()
	{
	}
}
[Token(Token = "0x2000058")]
public class musicoff : MonoBehaviour
{
	[Token(Token = "0x200044E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572798", Offset = "0x572798")]
	private sealed class <Example>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public musicoff <>4__this;

		[Token(Token = "0x17000360")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020AD")]
			[Address(RVA = "0x1417248", Offset = "0x1417248", VA = "0x1417248", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000361")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020AF")]
			[Address(RVA = "0x1417290", Offset = "0x1417290", VA = "0x1417290", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0x141707C", Offset = "0x141707C", VA = "0x141707C")]
		[DebuggerHidden]
		public <Example>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0x14170A8", Offset = "0x14170A8", VA = "0x14170A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0x14170AC", Offset = "0x14170AC", VA = "0x14170AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0x1417250", Offset = "0x1417250", VA = "0x1417250", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject objToDestroy;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject enable1;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject enable2;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject disable1;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int musicz;

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x91428C", Offset = "0x91428C", VA = "0x91428C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x9142F4", Offset = "0x9142F4", VA = "0x9142F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58ED60", Offset = "0x58ED60")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x914360", Offset = "0x914360", VA = "0x914360")]
	public void musicoffz()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x9143F0", Offset = "0x9143F0", VA = "0x9143F0")]
	public void musicon()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x914480", Offset = "0x914480", VA = "0x914480")]
	public musicoff()
	{
	}
}
[Token(Token = "0x2000059")]
public class nextscenestart : MonoBehaviour
{
	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ObjectA;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ObjectB;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ObjectC;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ObjectD;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string z1z;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string z2z;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string z3z;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string z4z;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string z5z;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string z6z;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string z7z;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string z8z;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string z9z;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string z10z;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string z11z;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string z12z;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string z13z;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string z14z;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string z15z;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string z16z;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string z17z;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string z18z;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string z19z;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string z20z;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string z21z;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private string z22z;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string z23z;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string z24z;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string z25z;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private string z26z;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private string z27z;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private string z28z;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private string z29z;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private string z30z;

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x914488", Offset = "0x914488", VA = "0x914488")]
	public void test()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x9147D0", Offset = "0x9147D0", VA = "0x9147D0")]
	private void Start()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x9154A4", Offset = "0x9154A4", VA = "0x9154A4")]
	public nextscenestart()
	{
	}
}
[Token(Token = "0x200005A")]
public class nextscenestart1 : MonoBehaviour
{
	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ObjectA;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ObjectB;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ObjectC;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ObjectD;

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x915824", Offset = "0x915824", VA = "0x915824")]
	private void Start()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x915828", Offset = "0x915828", VA = "0x915828")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x916BCC", Offset = "0x916BCC", VA = "0x916BCC")]
	public nextscenestart1()
	{
	}
}
[Token(Token = "0x200005B")]
public class nextscenetrigger : MonoBehaviour
{
	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject objToDestroy;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject next;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject next2;

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x916BD4", Offset = "0x916BD4", VA = "0x916BD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x916BD8", Offset = "0x916BD8", VA = "0x916BD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x916BDC", Offset = "0x916BDC", VA = "0x916BDC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x916C8C", Offset = "0x916C8C", VA = "0x916C8C")]
	public nextscenetrigger()
	{
	}
}
[Token(Token = "0x200005C")]
public class norotatex : MonoBehaviour
{
	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform child;

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x916C94", Offset = "0x916C94", VA = "0x916C94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x916C98", Offset = "0x916C98", VA = "0x916C98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x916D4C", Offset = "0x916D4C", VA = "0x916D4C")]
	public norotatex()
	{
	}
}
[Token(Token = "0x200005D")]
public class norotatey : MonoBehaviour
{
	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform child;

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x916D54", Offset = "0x916D54", VA = "0x916D54")]
	private void Start()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x916D58", Offset = "0x916D58", VA = "0x916D58")]
	private void Update()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x916E0C", Offset = "0x916E0C", VA = "0x916E0C")]
	public norotatey()
	{
	}
}
[Token(Token = "0x200005E")]
public class norotatez : MonoBehaviour
{
	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform child;

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x916E14", Offset = "0x916E14", VA = "0x916E14")]
	private void Start()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x916E18", Offset = "0x916E18", VA = "0x916E18")]
	private void Update()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x916ED0", Offset = "0x916ED0", VA = "0x916ED0")]
	public norotatez()
	{
	}
}
[Token(Token = "0x200005F")]
public class notimer : MonoBehaviour
{
	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject scoring1off;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject scoring2off;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject scoring3off;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject scoring4on;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject scoring5on;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject scoring6off;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string scr;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject otherobj;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int highscoresaved;

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x916ED8", Offset = "0x916ED8", VA = "0x916ED8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x917060", Offset = "0x917060", VA = "0x917060")]
	public void timeroff()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x9170AC", Offset = "0x9170AC", VA = "0x9170AC")]
	public void timeron()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x9170F8", Offset = "0x9170F8", VA = "0x9170F8")]
	public notimer()
	{
	}
}
[Token(Token = "0x2000060")]
public class notimer1 : MonoBehaviour
{
	[Token(Token = "0x6000134")]
	[Address(RVA = "0x917100", Offset = "0x917100", VA = "0x917100")]
	private void Start()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x91714C", Offset = "0x91714C", VA = "0x91714C")]
	public void timeroff()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x917198", Offset = "0x917198", VA = "0x917198")]
	public void timeron()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x9171E4", Offset = "0x9171E4", VA = "0x9171E4")]
	public notimer1()
	{
	}
}
[Token(Token = "0x2000061")]
public class notimer2 : MonoBehaviour
{
	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject objToDestroy;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Objecton;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Objectoff;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Objecton2;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Objectoff2;

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x9171EC", Offset = "0x9171EC", VA = "0x9171EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x917238", Offset = "0x917238", VA = "0x917238")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x917334", Offset = "0x917334", VA = "0x917334")]
	public void timeroff()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x917380", Offset = "0x917380", VA = "0x917380")]
	public void timeron()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x9173CC", Offset = "0x9173CC", VA = "0x9173CC")]
	public notimer2()
	{
	}
}
[Token(Token = "0x2000062")]
public class notimer3 : MonoBehaviour
{
	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject objToDestroy;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Objecton;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Objectoff;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Objecton2;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Objectoff2;

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x9173D4", Offset = "0x9173D4", VA = "0x9173D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x917420", Offset = "0x917420", VA = "0x917420")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x91751C", Offset = "0x91751C", VA = "0x91751C")]
	public void timeroff()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x917568", Offset = "0x917568", VA = "0x917568")]
	public void timeron()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x9175B4", Offset = "0x9175B4", VA = "0x9175B4")]
	public notimer3()
	{
	}
}
[Token(Token = "0x2000063")]
public class nxt : MonoBehaviour
{
	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string z1z;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string z2z;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string z3z;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string z4z;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string z5z;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string z6z;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string z7z;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string z8z;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string z9z;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string z10z;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string z11z;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string z12z;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string z13z;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string z14z;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string z15z;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string z16z;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string z17z;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string z18z;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string z19z;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string z20z;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string z21z;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string z22z;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string z23z;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string z24z;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string z25z;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private string z26z;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string z27z;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string z28z;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string z29z;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private string z30z;

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x9175BC", Offset = "0x9175BC", VA = "0x9175BC")]
	public void test()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x917810", Offset = "0x917810", VA = "0x917810")]
	private void Start()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x918490", Offset = "0x918490", VA = "0x918490")]
	public nxt()
	{
	}
}
[Token(Token = "0x2000064")]
public class playaudiotrigger : MonoBehaviour
{
	[Token(Token = "0x200044F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5727A8", Offset = "0x5727A8")]
	private sealed class <Example>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public playaudiotrigger <>4__this;

		[Token(Token = "0x17000362")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020B3")]
			[Address(RVA = "0x1417648", Offset = "0x1417648", VA = "0x1417648", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000363")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020B5")]
			[Address(RVA = "0x1417690", Offset = "0x1417690", VA = "0x1417690", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0x1417498", Offset = "0x1417498", VA = "0x1417498")]
		[DebuggerHidden]
		public <Example>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0x14174C4", Offset = "0x14174C4", VA = "0x14174C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0x14174C8", Offset = "0x14174C8", VA = "0x14174C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x1417650", Offset = "0x1417650", VA = "0x1417650", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000450")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5727B8", Offset = "0x5727B8")]
	private sealed class <Example2>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public playaudiotrigger <>4__this;

		[Token(Token = "0x17000364")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020B9")]
			[Address(RVA = "0x1417448", Offset = "0x1417448", VA = "0x1417448", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000365")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020BB")]
			[Address(RVA = "0x1417490", Offset = "0x1417490", VA = "0x1417490", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x1417298", Offset = "0x1417298", VA = "0x1417298")]
		[DebuggerHidden]
		public <Example2>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x14172C4", Offset = "0x14172C4", VA = "0x14172C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x14172C8", Offset = "0x14172C8", VA = "0x14172C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x1417450", Offset = "0x1417450", VA = "0x1417450", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject object1;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject audio1;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject audio2;

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x918810", Offset = "0x918810", VA = "0x918810")]
	private void Start()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x918814", Offset = "0x918814", VA = "0x918814")]
	private void Update()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x918818", Offset = "0x918818", VA = "0x918818")]
	private void OnTriggerEnter(Collider Other)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x9188FC", Offset = "0x9188FC", VA = "0x9188FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58EDC0", Offset = "0x58EDC0")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x918968", Offset = "0x918968", VA = "0x918968")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58EE20", Offset = "0x58EE20")]
	private IEnumerator Example2()
	{
		return null;
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x9189D4", Offset = "0x9189D4", VA = "0x9189D4")]
	public playaudiotrigger()
	{
	}
}
[Token(Token = "0x2000065")]
public class prefcameraON : MonoBehaviour
{
	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int PC;

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x9189DC", Offset = "0x9189DC", VA = "0x9189DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x9189E0", Offset = "0x9189E0", VA = "0x9189E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x918A2C", Offset = "0x918A2C", VA = "0x918A2C")]
	public void SetInt(string PC, int Value)
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x918A3C", Offset = "0x918A3C", VA = "0x918A3C")]
	public int Getint(string PC)
	{
		return default(int);
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x918A48", Offset = "0x918A48", VA = "0x918A48")]
	public prefcameraON()
	{
	}
}
[Token(Token = "0x2000066")]
public class prefcameraON1 : MonoBehaviour
{
	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int PC;

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x918A50", Offset = "0x918A50", VA = "0x918A50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x918A54", Offset = "0x918A54", VA = "0x918A54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x918AA0", Offset = "0x918AA0", VA = "0x918AA0")]
	public void SetInt(string PC, int Value)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x918AB0", Offset = "0x918AB0", VA = "0x918AB0")]
	public int Getint(string PC)
	{
		return default(int);
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x918ABC", Offset = "0x918ABC", VA = "0x918ABC")]
	public prefcameraON1()
	{
	}
}
[Token(Token = "0x2000067")]
public class scenedelay : MonoBehaviour
{
	[Token(Token = "0x2000451")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5727C8", Offset = "0x5727C8")]
	private sealed class <ExampleCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public scenedelay <>4__this;

		[Token(Token = "0x17000366")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020BF")]
			[Address(RVA = "0x141821C", Offset = "0x141821C", VA = "0x141821C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000367")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020C1")]
			[Address(RVA = "0x1418264", Offset = "0x1418264", VA = "0x1418264", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x1418010", Offset = "0x1418010", VA = "0x1418010")]
		[DebuggerHidden]
		public <ExampleCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x141803C", Offset = "0x141803C", VA = "0x141803C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x1418040", Offset = "0x1418040", VA = "0x1418040", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x1418224", Offset = "0x1418224", VA = "0x1418224", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject ovrCameraRig;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject inputmanager;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string scr;

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x918F08", Offset = "0x918F08", VA = "0x918F08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x9190C0", Offset = "0x9190C0", VA = "0x9190C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58EE80", Offset = "0x58EE80")]
	private IEnumerator ExampleCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x91912C", Offset = "0x91912C", VA = "0x91912C")]
	public scenedelay()
	{
	}
}
[Token(Token = "0x2000068")]
public class score : MonoBehaviour
{
	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text countText;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text winText;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int count;

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x919134", Offset = "0x919134", VA = "0x919134")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x919424", Offset = "0x919424", VA = "0x919424")]
	public score()
	{
	}
}
[Token(Token = "0x2000069")]
public class scorenextlvl : MonoBehaviour
{
	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ObjectA;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentscore;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text currentscoretext;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int target;

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x91942C", Offset = "0x91942C", VA = "0x91942C")]
	private void Start()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x919430", Offset = "0x919430", VA = "0x919430")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x9194C0", Offset = "0x9194C0", VA = "0x9194C0")]
	public scorenextlvl()
	{
	}
}
[Token(Token = "0x200006A")]
public class scoreseeall : MonoBehaviour
{
	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int z1aint;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text z1atext;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string scr;

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x9194C8", Offset = "0x9194C8", VA = "0x9194C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x919524", Offset = "0x919524", VA = "0x919524")]
	private void Update()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x919528", Offset = "0x919528", VA = "0x919528")]
	public scoreseeall()
	{
	}
}
[Token(Token = "0x200006B")]
public class selfdestruct : MonoBehaviour
{
	[Token(Token = "0x2000452")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5727D8", Offset = "0x5727D8")]
	private sealed class <Example>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public selfdestruct <>4__this;

		[Token(Token = "0x17000368")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020C5")]
			[Address(RVA = "0x14183D8", Offset = "0x14183D8", VA = "0x14183D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000369")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020C7")]
			[Address(RVA = "0x1418420", Offset = "0x1418420", VA = "0x1418420", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x141826C", Offset = "0x141826C", VA = "0x141826C")]
		[DebuggerHidden]
		public <Example>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x1418298", Offset = "0x1418298", VA = "0x1418298", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x141829C", Offset = "0x141829C", VA = "0x141829C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x14183E0", Offset = "0x14183E0", VA = "0x14183E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject destroy1;

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x919530", Offset = "0x919530", VA = "0x919530")]
	private void Start()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x91955C", Offset = "0x91955C", VA = "0x91955C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58EEE0", Offset = "0x58EEE0")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x9195C8", Offset = "0x9195C8", VA = "0x9195C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x9195CC", Offset = "0x9195CC", VA = "0x9195CC")]
	public selfdestruct()
	{
	}
}
[Token(Token = "0x200006C")]
public class selfdestructactivate : MonoBehaviour
{
	[Token(Token = "0x2000453")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5727E8", Offset = "0x5727E8")]
	private sealed class <Example>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public selfdestructactivate <>4__this;

		[Token(Token = "0x1700036A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020CB")]
			[Address(RVA = "0x14185B0", Offset = "0x14185B0", VA = "0x14185B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020CD")]
			[Address(RVA = "0x14185F8", Offset = "0x14185F8", VA = "0x14185F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x1418428", Offset = "0x1418428", VA = "0x1418428")]
		[DebuggerHidden]
		public <Example>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x1418454", Offset = "0x1418454", VA = "0x1418454", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x1418458", Offset = "0x1418458", VA = "0x1418458", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x14185B8", Offset = "0x14185B8", VA = "0x14185B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject destroy1;

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x9195D4", Offset = "0x9195D4", VA = "0x9195D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x919600", Offset = "0x919600", VA = "0x919600")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58EF40", Offset = "0x58EF40")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x91966C", Offset = "0x91966C", VA = "0x91966C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x919670", Offset = "0x919670", VA = "0x919670")]
	public selfdestructactivate()
	{
	}
}
[Token(Token = "0x200006D")]
public class settingchange : MonoBehaviour
{
	[Token(Token = "0x6000168")]
	[Address(RVA = "0x919678", Offset = "0x919678", VA = "0x919678")]
	private void Start()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x91967C", Offset = "0x91967C", VA = "0x91967C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x91970C", Offset = "0x91970C", VA = "0x91970C")]
	public settingchange()
	{
	}
}
[Token(Token = "0x200006E")]
public class settingchange1 : MonoBehaviour
{
	[Token(Token = "0x600016B")]
	[Address(RVA = "0x919714", Offset = "0x919714", VA = "0x919714")]
	private void Start()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x919718", Offset = "0x919718", VA = "0x919718")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x9197A8", Offset = "0x9197A8", VA = "0x9197A8")]
	public settingchange1()
	{
	}
}
[Token(Token = "0x200006F")]
public class settingchange2 : MonoBehaviour
{
	[Token(Token = "0x600016E")]
	[Address(RVA = "0x9197B0", Offset = "0x9197B0", VA = "0x9197B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x9197B4", Offset = "0x9197B4", VA = "0x9197B4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x919838", Offset = "0x919838", VA = "0x919838")]
	public settingchange2()
	{
	}
}
[Token(Token = "0x2000070")]
public class settingchange3 : MonoBehaviour
{
	[Token(Token = "0x6000171")]
	[Address(RVA = "0x919840", Offset = "0x919840", VA = "0x919840")]
	private void Start()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x919844", Offset = "0x919844", VA = "0x919844")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x9198D4", Offset = "0x9198D4", VA = "0x9198D4")]
	public settingchange3()
	{
	}
}
[Token(Token = "0x2000071")]
public class settingchange4 : MonoBehaviour
{
	[Token(Token = "0x6000174")]
	[Address(RVA = "0x9198DC", Offset = "0x9198DC", VA = "0x9198DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x9198E0", Offset = "0x9198E0", VA = "0x9198E0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x919970", Offset = "0x919970", VA = "0x919970")]
	public settingchange4()
	{
	}
}
[Token(Token = "0x2000072")]
public class settingchange5 : MonoBehaviour
{
	[Token(Token = "0x6000177")]
	[Address(RVA = "0x919978", Offset = "0x919978", VA = "0x919978")]
	private void Start()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x91997C", Offset = "0x91997C", VA = "0x91997C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x919A0C", Offset = "0x919A0C", VA = "0x919A0C")]
	public settingchange5()
	{
	}
}
[Token(Token = "0x2000073")]
public class settingcurrentz : MonoBehaviour
{
	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text countText;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int qualityLevel;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text winText;

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x919A14", Offset = "0x919A14", VA = "0x919A14")]
	private void Start()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x919A18", Offset = "0x919A18", VA = "0x919A18")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x919B70", Offset = "0x919B70", VA = "0x919B70")]
	public settingcurrentz()
	{
	}
}
[Token(Token = "0x2000074")]
public class settingcurrentz1 : MonoBehaviour
{
	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text countText;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int qualityLevel;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text winText;

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x919B78", Offset = "0x919B78", VA = "0x919B78")]
	private void Start()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x919B7C", Offset = "0x919B7C", VA = "0x919B7C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x919C3C", Offset = "0x919C3C", VA = "0x919C3C")]
	public settingcurrentz1()
	{
	}
}
[Token(Token = "0x2000075")]
public class settingofflow : MonoBehaviour
{
	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectdisable1;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objectdisable2;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject objectdisable3;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject objectdisable4;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject objectdisable5;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject objectdisable6;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject objectdisable7;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject objectdisable8;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject objectdisable9;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject objectdisable10;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject objectenable1;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int qualityLevel;

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x919C44", Offset = "0x919C44", VA = "0x919C44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x919E24", Offset = "0x919E24", VA = "0x919E24")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x919E28", Offset = "0x919E28", VA = "0x919E28")]
	public settingofflow()
	{
	}
}
[Token(Token = "0x2000076")]
public class settingoffmed : MonoBehaviour
{
	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectdisable1;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objectdisable2;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject objectdisable3;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject objectdisable4;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject objectdisable5;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject objectdisable6;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject objectdisable7;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject objectdisable8;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject objectdisable9;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject objectdisable10;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int qualityLevel;

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x919E30", Offset = "0x919E30", VA = "0x919E30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x919F40", Offset = "0x919F40", VA = "0x919F40")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x919F44", Offset = "0x919F44", VA = "0x919F44")]
	public settingoffmed()
	{
	}
}
[Token(Token = "0x2000077")]
public class settingsdetectdpi : MonoBehaviour
{
	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text dpi;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int dpinumber;

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x919F4C", Offset = "0x919F4C", VA = "0x919F4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x919F50", Offset = "0x919F50", VA = "0x919F50")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x919F54", Offset = "0x919F54", VA = "0x919F54")]
	public settingsdetectdpi()
	{
	}
}
[Token(Token = "0x2000078")]
public class settingterraindistance : MonoBehaviour
{
	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distance;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Terrain terrain;

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x919F5C", Offset = "0x919F5C", VA = "0x919F5C")]
	private void Start()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x91A0A8", Offset = "0x91A0A8", VA = "0x91A0A8")]
	public settingterraindistance()
	{
	}
}
[Token(Token = "0x2000079")]
public class settingviewdistance : MonoBehaviour
{
	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int qualityLevel;

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x91A0B0", Offset = "0x91A0B0", VA = "0x91A0B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x91A194", Offset = "0x91A194", VA = "0x91A194")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x91A198", Offset = "0x91A198", VA = "0x91A198")]
	public settingviewdistance()
	{
	}
}
[Token(Token = "0x200007A")]
public class smallislandscene : MonoBehaviour
{
	[Token(Token = "0x600018E")]
	[Address(RVA = "0x91A1A0", Offset = "0x91A1A0", VA = "0x91A1A0")]
	public void NextScene()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x91A214", Offset = "0x91A214", VA = "0x91A214")]
	public smallislandscene()
	{
	}
}
[Token(Token = "0x200007B")]
public class smallislandscene1 : MonoBehaviour
{
	[Token(Token = "0x6000190")]
	[Address(RVA = "0x91A21C", Offset = "0x91A21C", VA = "0x91A21C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x91A290", Offset = "0x91A290", VA = "0x91A290")]
	public smallislandscene1()
	{
	}
}
[Token(Token = "0x200007C")]
public class spawn : MonoBehaviour
{
	[Token(Token = "0x2000454")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5727F8", Offset = "0x5727F8")]
	private sealed class <Example>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public spawn <>4__this;

		[Token(Token = "0x1700036C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020D1")]
			[Address(RVA = "0x14187A8", Offset = "0x14187A8", VA = "0x14187A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020D3")]
			[Address(RVA = "0x14187F0", Offset = "0x14187F0", VA = "0x14187F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x1418600", Offset = "0x1418600", VA = "0x1418600")]
		[DebuggerHidden]
		public <Example>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x141862C", Offset = "0x141862C", VA = "0x141862C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x1418630", Offset = "0x1418630", VA = "0x1418630", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x14187B0", Offset = "0x14187B0", VA = "0x14187B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject otherobj;

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x91A298", Offset = "0x91A298", VA = "0x91A298")]
	private void Start()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x91A2C4", Offset = "0x91A2C4", VA = "0x91A2C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58EFA0", Offset = "0x58EFA0")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x91A330", Offset = "0x91A330", VA = "0x91A330")]
	public spawn()
	{
	}
}
[Token(Token = "0x200007D")]
public class spin : MonoBehaviour
{
	[Token(Token = "0x6000195")]
	[Address(RVA = "0x91A338", Offset = "0x91A338", VA = "0x91A338")]
	private void Start()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x91A33C", Offset = "0x91A33C", VA = "0x91A33C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x91A36C", Offset = "0x91A36C", VA = "0x91A36C")]
	public spin()
	{
	}
}
[Token(Token = "0x200007E")]
public class spin1 : MonoBehaviour
{
	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float daylength;

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x91A374", Offset = "0x91A374", VA = "0x91A374")]
	private void Start()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x91A378", Offset = "0x91A378", VA = "0x91A378")]
	private void Update()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x91A43C", Offset = "0x91A43C", VA = "0x91A43C")]
	public spin1()
	{
	}
}
[Token(Token = "0x200007F")]
public class spin2 : MonoBehaviour
{
	[Token(Token = "0x600019B")]
	[Address(RVA = "0x91A444", Offset = "0x91A444", VA = "0x91A444")]
	private void Start()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x91A448", Offset = "0x91A448", VA = "0x91A448")]
	private void Update()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x91A478", Offset = "0x91A478", VA = "0x91A478")]
	public spin2()
	{
	}
}
[Token(Token = "0x2000080")]
public class spin3 : MonoBehaviour
{
	[Token(Token = "0x600019E")]
	[Address(RVA = "0x91A480", Offset = "0x91A480", VA = "0x91A480")]
	private void Start()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x91A484", Offset = "0x91A484", VA = "0x91A484")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x91A4B4", Offset = "0x91A4B4", VA = "0x91A4B4")]
	public spin3()
	{
	}
}
[Token(Token = "0x2000081")]
public class starttrigger : MonoBehaviour
{
	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ObjectToActivate;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject objToDestroy;

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x91A4BC", Offset = "0x91A4BC", VA = "0x91A4BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x91A4C0", Offset = "0x91A4C0", VA = "0x91A4C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x91A4C4", Offset = "0x91A4C4", VA = "0x91A4C4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x91A560", Offset = "0x91A560", VA = "0x91A560")]
	public starttrigger()
	{
	}
}
[Token(Token = "0x2000082")]
public class stoprotate : MonoBehaviour
{
	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform child;

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x91A568", Offset = "0x91A568", VA = "0x91A568")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x91A56C", Offset = "0x91A56C", VA = "0x91A56C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x91A630", Offset = "0x91A630", VA = "0x91A630")]
	public stoprotate()
	{
	}
}
[Token(Token = "0x2000083")]
public class testfloat : MonoBehaviour
{
	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float degreesPerSecond;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float amplitude;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float frequency;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 posOffset;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 tempPos;

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x91A638", Offset = "0x91A638", VA = "0x91A638")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x91A63C", Offset = "0x91A63C", VA = "0x91A63C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x91A688", Offset = "0x91A688", VA = "0x91A688")]
	public testfloat()
	{
	}
}
[Token(Token = "0x2000084")]
public class topmanagement : MonoBehaviour
{
	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject on1;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject off1;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int qualityLevel;

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x91A6FC", Offset = "0x91A6FC", VA = "0x91A6FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x91A788", Offset = "0x91A788", VA = "0x91A788")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x91A78C", Offset = "0x91A78C", VA = "0x91A78C")]
	public topmanagement()
	{
	}
}
[Token(Token = "0x2000085")]
public class transformandrotate : MonoBehaviour
{
	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ObjectA;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ObjectB;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ObjectC;

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x91A794", Offset = "0x91A794", VA = "0x91A794")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x91A798", Offset = "0x91A798", VA = "0x91A798")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x91A79C", Offset = "0x91A79C", VA = "0x91A79C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x91A854", Offset = "0x91A854", VA = "0x91A854")]
	public transformandrotate()
	{
	}
}
[Token(Token = "0x2000086")]
public class unload : MonoBehaviour
{
	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x91A9B8", Offset = "0x91A9B8", VA = "0x91A9B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x91A9C0", Offset = "0x91A9C0", VA = "0x91A9C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x91A9C4", Offset = "0x91A9C4", VA = "0x91A9C4")]
	public unload()
	{
	}
}
[Token(Token = "0x2000087")]
public class zoptionsreturnhome : MonoBehaviour
{
	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x91A9CC", Offset = "0x91A9CC", VA = "0x91A9CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x91AA40", Offset = "0x91AA40", VA = "0x91AA40")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x91AA44", Offset = "0x91AA44", VA = "0x91AA44")]
	public zoptionsreturnhome()
	{
	}
}
[Token(Token = "0x2000088")]
public class MovingInCircles : MonoBehaviour
{
	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pivot;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool clockwise;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool oscillate;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float t;

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xE00FE8", Offset = "0xE00FE8", VA = "0xE00FE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xE00FEC", Offset = "0xE00FEC", VA = "0xE00FEC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xE011E8", Offset = "0xE011E8", VA = "0xE011E8")]
	public MovingInCircles()
	{
	}
}
[Token(Token = "0x2000089")]
public class ExtendedFlycam : MonoBehaviour
{
	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float cameraSensitivity;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float climbSpeed;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float normalMoveSpeed;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float slowMoveFactor;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fastMoveFactor;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationX;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float rotationY;

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x8AEB70", Offset = "0x8AEB70", VA = "0x8AEB70")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x8AEB94", Offset = "0x8AEB94", VA = "0x8AEB94")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x8AF520", Offset = "0x8AF520", VA = "0x8AF520")]
	public ExtendedFlycam()
	{
	}
}
[Token(Token = "0x200008A")]
public class ForestMaker : MonoBehaviour
{
	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_treePrefab;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_amount;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_ground;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_radiusDistance;

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x8B6DD0", Offset = "0x8B6DD0", VA = "0x8B6DD0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x8B70EC", Offset = "0x8B70EC", VA = "0x8B70EC")]
	public ForestMaker()
	{
	}
}
[Token(Token = "0x200008B")]
public class MoveCamera : MonoBehaviour
{
	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float turnSpeed;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float panSpeed;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float zoomSpeed;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 mouseOrigin;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isPanning;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isRotating;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool isZooming;

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xE00860", Offset = "0xE00860", VA = "0xE00860")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xE00B9C", Offset = "0xE00B9C", VA = "0xE00B9C")]
	public MoveCamera()
	{
	}
}
[Token(Token = "0x200008C")]
public class freezez : MonoBehaviour
{
	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform child;

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x9109B8", Offset = "0x9109B8", VA = "0x9109B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x9109BC", Offset = "0x9109BC", VA = "0x9109BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x910A4C", Offset = "0x910A4C", VA = "0x910A4C")]
	public freezez()
	{
	}
}
[Token(Token = "0x200008D")]
public class FixNonUniformScale : MonoBehaviour
{
	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool running;

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x8B2DD8", Offset = "0x8B2DD8", VA = "0x8B2DD8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x8B2E60", Offset = "0x8B2E60", VA = "0x8B2E60")]
	public void MakeUniform()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x8B322C", Offset = "0x8B322C", VA = "0x8B322C")]
	public FixNonUniformScale()
	{
	}
}
[Token(Token = "0x200008E")]
public class AP_Cam_Follow : MonoBehaviour
{
	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rotationDamping;

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x12CFE14", Offset = "0x12CFE14", VA = "0x12CFE14")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x12D0010", Offset = "0x12D0010", VA = "0x12D0010")]
	public AP_Cam_Follow()
	{
	}
}
[Token(Token = "0x200008F")]
public class Character : MonoBehaviour
{
	[Token(Token = "0x2000455")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572808", Offset = "0x572808")]
	private sealed class <changeLockStateLock>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700036E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020D7")]
			[Address(RVA = "0x91B340", Offset = "0x91B340", VA = "0x91B340", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020D9")]
			[Address(RVA = "0x91B388", Offset = "0x91B388", VA = "0x91B388", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x91B214", Offset = "0x91B214", VA = "0x91B214")]
		[DebuggerHidden]
		public <changeLockStateLock>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x91B240", Offset = "0x91B240", VA = "0x91B240", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x91B244", Offset = "0x91B244", VA = "0x91B244", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x91B348", Offset = "0x91B348", VA = "0x91B348", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Character instance;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private characterMovement charaMovement;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource voiceOverAudioSource;

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x92E0B0", Offset = "0x92E0B0", VA = "0x92E0B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x92E220", Offset = "0x92E220", VA = "0x92E220")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x92E358", Offset = "0x92E358", VA = "0x92E358")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x92E2FC", Offset = "0x92E2FC", VA = "0x92E2FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58F000", Offset = "0x58F000")]
	public IEnumerator changeLockStateLock()
	{
		return null;
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x92E374", Offset = "0x92E374", VA = "0x92E374")]
	public Character()
	{
	}
}
[Token(Token = "0x2000090")]
public class characterMovement : MonoBehaviour
{
	[Token(Token = "0x2000456")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572818", Offset = "0x572818")]
	private sealed class <waitToInitMouseMovement>d__99 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000370")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020DD")]
			[Address(RVA = "0x1377EB4", Offset = "0x1377EB4", VA = "0x1377EB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000371")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020DF")]
			[Address(RVA = "0x1377EFC", Offset = "0x1377EFC", VA = "0x1377EFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x1377DF8", Offset = "0x1377DF8", VA = "0x1377DF8")]
		[DebuggerHidden]
		public <waitToInitMouseMovement>d__99(int <>1__state)
		{
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x1377E24", Offset = "0x1377E24", VA = "0x1377E24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x1377E28", Offset = "0x1377E28", VA = "0x1377E28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x1377EBC", Offset = "0x1377EBC", VA = "0x1377EBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000457")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572828", Offset = "0x572828")]
	private sealed class <Jump>d__135 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public characterMovement <>4__this;

		[Token(Token = "0x4002A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x17000372")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020E3")]
			[Address(RVA = "0x1377DA8", Offset = "0x1377DA8", VA = "0x1377DA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000373")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020E5")]
			[Address(RVA = "0x1377DF0", Offset = "0x1377DF0", VA = "0x1377DF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x1377C18", Offset = "0x1377C18", VA = "0x1377C18")]
		[DebuggerHidden]
		public <Jump>d__135(int <>1__state)
		{
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x1377C44", Offset = "0x1377C44", VA = "0x1377C44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x1377C48", Offset = "0x1377C48", VA = "0x1377C48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x1377DB0", Offset = "0x1377DB0", VA = "0x1377DB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool SeeInspector;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rbBodyCharacter;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform tangentStartPosition;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform objCamera;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject addForceObj;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform refHead;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string s_mouseAxisX;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string s_mouseAxisY;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int forwardKeyboard;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int backwardKeyboard;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int leftKeyboard;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int rightKeyboard;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int VerticalAxisBody;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int HorizontalAxisBody;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int JoystickVerticalAxisCam;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int JoystickHorizontalAxisCam;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int mouseInvertYAxisCam;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int joystickInvertYAxisCam;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int mouseInGameSensibilty;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int gamepadLookInGameSensibilty;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float currentDesktop_X_Axis;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float currentDesktop_Y_Axis;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float speedKeybordMovement;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int JoystickCrouch;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int KeyboardCrouch;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float minimum;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float maximum;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float characterSpeed;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float sensibilityMouse;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AnimationCurve animationCurveMouse;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float sensibilityJoystick;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AnimationCurve animationCurveJoystick;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float mouseY;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float tmpXAxis;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float tmpYAxis;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float sensibilityMobile;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AnimationCurve animationCurveMobile;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool b_MoveForward;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool b_MoveBackward;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	private bool b_MoveLeft;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE3")]
	private bool b_MoveRight;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public bool b_MobileCamRotation_Stick;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float mobileSpeedRotation;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector2[] arrStartPos;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool b_MobileMovement_Stick;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float LeftStickSensibility;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float smoothStart;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AnimationCurve animationCurveMobileSmoothMove;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float mouseYLastValue;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public LayerMask myLayerMask;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float XAxis;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float YAxis;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float mouseVertical;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float mouseInputX;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float yRot;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float mouseHorizontal;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float BrakeForce;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float Coeff;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float MaxSpeed;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public scPreventClimbing preventClimbing;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public bool allowCrouch;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
	public bool b_Crouch;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float targetScaleCrouch;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float refScaleCrouch;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float crouchSpeed;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float heightCheck;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public LayerMask layerCheckCrouch;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float speedMultiplier;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float currentSpeedMultiplier;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public bool b_AllowRun;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	public bool isRunning;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public float gravityScale;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float globalGravity;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public float MaxAngle;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float currentAngle;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Vector3 circlePos;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public bool moreInfoMaxAngle;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
	public bool isOnFloor;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float hitDistance;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public float hitDistanceMin;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public float hitDistanceMax;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public LayerMask myLayer;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Vector3 rayPosition;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public PhysicMaterial pMove;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public PhysicMaterial pStop;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public PhysicMaterial pIce;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private CapsuleCollider charCol;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public LayerMask myLayer02;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public float overlapSize;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public bool b_Overlap;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
	public bool b_TouchLayer12_17;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private Vector3 joyInput;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float fallCurve;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public AnimationCurve animFallCurve;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public int jumpForce;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	public float jumpSpeed;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public bool b_IsJumping;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public float GravityFallSpeed;

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x945C40", Offset = "0x945C40", VA = "0x945C40")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x945CC0", Offset = "0x945CC0", VA = "0x945CC0")]
	public void charaGeneralMovementController()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x946118", Offset = "0x946118", VA = "0x946118")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x946774", Offset = "0x946774", VA = "0x946774")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x946464", Offset = "0x946464", VA = "0x946464")]
	private void bodyRotation()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x947040", Offset = "0x947040", VA = "0x947040")]
	private float ClampAngle(float angle, float from, float to)
	{
		return default(float);
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x9464E4", Offset = "0x9464E4", VA = "0x9464E4")]
	private void cameraRotation()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x947084", Offset = "0x947084", VA = "0x947084")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58F060", Offset = "0x58F060")]
	private IEnumerator waitToInitMouseMovement()
	{
		return null;
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x945CD0", Offset = "0x945CD0", VA = "0x945CD0")]
	private void bodyMovement()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x9462BC", Offset = "0x9462BC", VA = "0x9462BC")]
	private float returnDesktopXAxis()
	{
		return default(float);
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x946390", Offset = "0x946390", VA = "0x946390")]
	private float returnDesktopYAxis()
	{
		return default(float);
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x947674", Offset = "0x947674", VA = "0x947674")]
	public void CamRotationMobile()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x947678", Offset = "0x947678", VA = "0x947678")]
	private void bodyRotationMobile()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x94767C", Offset = "0x94767C", VA = "0x94767C")]
	public void pointerDrag()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x947680", Offset = "0x947680", VA = "0x947680")]
	public void pointerUp()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x947684", Offset = "0x947684", VA = "0x947684")]
	public void pointerDrag_MoveWithLeftStick()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x947688", Offset = "0x947688", VA = "0x947688")]
	public void pointerUp_MoveWithLeftStick()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x946114", Offset = "0x946114", VA = "0x946114")]
	private void AP_Mobile_bodyMovement_LeftStick()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x94768C", Offset = "0x94768C", VA = "0x94768C")]
	public void MoveForward()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x947698", Offset = "0x947698", VA = "0x947698")]
	public void MoveBackward()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x9476A4", Offset = "0x9476A4", VA = "0x9476A4")]
	public void StopMoving()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x9476B0", Offset = "0x9476B0", VA = "0x9476B0")]
	public void MoveLeft()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x9476BC", Offset = "0x9476BC", VA = "0x9476BC")]
	public void MoveRight()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x9476C8", Offset = "0x9476C8", VA = "0x9476C8")]
	public void AP_Crouch()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x9473FC", Offset = "0x9473FC", VA = "0x9473FC")]
	private Vector3 FindTangentZ()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x9470E0", Offset = "0x9470E0", VA = "0x9470E0")]
	private Vector3 FindTangentX()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x9476E0", Offset = "0x9476E0", VA = "0x9476E0")]
	private int returnInvertJoystickAxis()
	{
		return default(int);
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x94707C", Offset = "0x94707C", VA = "0x94707C")]
	private int returnInvertMouseAxis()
	{
		return default(int);
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x9476E8", Offset = "0x9476E8", VA = "0x9476E8")]
	public void charaStopMoving()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x946C04", Offset = "0x946C04", VA = "0x946C04")]
	private void AP_ApplyGravity()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x946A64", Offset = "0x946A64", VA = "0x946A64")]
	public void Ap_isOnFloor()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x9469A4", Offset = "0x9469A4", VA = "0x9469A4")]
	private void AP_OverlapSphere()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x9465AC", Offset = "0x9465AC", VA = "0x9465AC")]
	private bool AP_CheckIfPlayerCanStopCrouching()
	{
		return default(bool);
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x94778C", Offset = "0x94778C", VA = "0x94778C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x9477FC", Offset = "0x9477FC", VA = "0x9477FC")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x94786C", Offset = "0x94786C", VA = "0x94786C")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x9478D8", Offset = "0x9478D8", VA = "0x9478D8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x947A18", Offset = "0x947A18", VA = "0x947A18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58F0C0", Offset = "0x58F0C0")]
	public IEnumerator Jump()
	{
		return null;
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x947A84", Offset = "0x947A84", VA = "0x947A84")]
	public characterMovement()
	{
	}
}
[Token(Token = "0x2000091")]
public class footstepSystem : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000458")]
	public class Footsteps
	{
		[Token(Token = "0x4002A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<AudioClip> footstepSamples;

		[Token(Token = "0x4002A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MaterialTag;

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x14168AC", Offset = "0x14168AC", VA = "0x14168AC")]
		public Footsteps()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000459")]
	public class compareCharacterMagnitude
	{
		[Token(Token = "0x4002A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float listTimeBetweenTwoStep;

		[Token(Token = "0x4002A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float listCharacterMangnitude;

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x1416900", Offset = "0x1416900", VA = "0x1416900")]
		public compareCharacterMagnitude()
		{
		}
	}

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool SeeInspector;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask myLayerMask;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rb;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource _audio;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Footsteps> listFootstepSystem;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<compareCharacterMagnitude> listCompareMangnitude;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _Timer;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 lastPos;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 bodyVelocity;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int currentFootstepType;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int currentSample;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private characterMovement charMovement;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x910130", Offset = "0x910130", VA = "0x910130")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x910184", Offset = "0x910184", VA = "0x910184")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x91032C", Offset = "0x91032C", VA = "0x91032C")]
	private void playFootstep(string _tag)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x91058C", Offset = "0x91058C", VA = "0x91058C")]
	private bool CheckTag(string _tag)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x91064C", Offset = "0x91064C", VA = "0x91064C")]
	private int ChooseSound()
	{
		return default(int);
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x9106F4", Offset = "0x9106F4", VA = "0x9106F4")]
	private void playSound(int newSample)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x9108EC", Offset = "0x9108EC", VA = "0x9108EC")]
	public footstepSystem()
	{
	}
}
[Token(Token = "0x2000092")]
public class scPreventClimbing : MonoBehaviour
{
	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool b_preventClimbing;

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x918C94", Offset = "0x918C94", VA = "0x918C94")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x918C98", Offset = "0x918C98", VA = "0x918C98")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x918C9C", Offset = "0x918C9C", VA = "0x918C9C")]
	public scPreventClimbing()
	{
	}
}
[Token(Token = "0x2000093")]
public class gizmosCube : MonoBehaviour
{
	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color GizmoColor;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int meshType;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 customScale;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 customPosition;

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x910B4C", Offset = "0x910B4C", VA = "0x910B4C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x910C5C", Offset = "0x910C5C", VA = "0x910C5C")]
	private void F_MeshType()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x910D9C", Offset = "0x910D9C", VA = "0x910D9C")]
	public gizmosCube()
	{
	}
}
[Token(Token = "0x2000094")]
public class MobileControl : MonoBehaviour, IDragHandler, IEventSystemHandler, IPointerUpHandler, IPointerDownHandler
{
	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool toqueAnalogic;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool toqueLook;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject analogLeft;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject lookDirection;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject player;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject camLook;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Image imgAnalog;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image imgLook;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Image joystickImgAnalog;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Image joystickImgLook;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 inputVectorAnalogic;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 inputVectorLook;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float speed;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float straffe;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float translation;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RectTransform rectTransform;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2 xyBase;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private CharacterController charController;

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xDFFC40", Offset = "0xDFFC40", VA = "0xDFFC40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xDFFEEC", Offset = "0xDFFEEC", VA = "0xDFFEEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xE0007C", Offset = "0xE0007C", VA = "0xE0007C", Slot = "7")]
	public virtual void OnDrag(PointerEventData ped)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xE00510", Offset = "0xE00510", VA = "0xE00510", Slot = "8")]
	public virtual void OnPointerDown(PointerEventData ped)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xE007B0", Offset = "0xE007B0", VA = "0xE007B0", Slot = "9")]
	public virtual void OnPointerUp(PointerEventData ped)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xE00850", Offset = "0xE00850", VA = "0xE00850")]
	public MobileControl()
	{
	}
}
[Token(Token = "0x2000095")]
public class CharacterControl : MonoBehaviour
{
	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivity;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float xRotation;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform cam;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CharacterController charController;

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x92E53C", Offset = "0x92E53C", VA = "0x92E53C")]
	private void Start()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x92E5D4", Offset = "0x92E5D4", VA = "0x92E5D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x92E730", Offset = "0x92E730", VA = "0x92E730")]
	private void CameraMovement()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x92E874", Offset = "0x92E874", VA = "0x92E874")]
	public CharacterControl()
	{
	}
}
[Token(Token = "0x2000096")]
public class CityGenerator : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200045A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572838", Offset = "0x572838")]
	private sealed class <>c
	{
		[Token(Token = "0x4002A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<UnityEngine.Object, GameObject> <>9__38_0;

		[Token(Token = "0x4002A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<GameObject, bool> <>9__38_1;

		[Token(Token = "0x4002A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<UnityEngine.Object, GameObject> <>9__39_0;

		[Token(Token = "0x4002A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<GameObject, bool> <>9__39_1;

		[Token(Token = "0x4002A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Func<UnityEngine.Object, GameObject> <>9__42_0;

		[Token(Token = "0x4002A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Func<GameObject, bool> <>9__42_1;

		[Token(Token = "0x4002A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Func<UnityEngine.Object, GameObject> <>9__43_0;

		[Token(Token = "0x4002A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Func<GameObject, bool> <>9__43_1;

		[Token(Token = "0x4002A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Func<UnityEngine.Object, GameObject> <>9__46_0;

		[Token(Token = "0x4002A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Func<GameObject, bool> <>9__46_1;

		[Token(Token = "0x4002A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static Func<UnityEngine.Object, GameObject> <>9__50_0;

		[Token(Token = "0x4002A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static Func<GameObject, bool> <>9__50_1;

		[Token(Token = "0x4002A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static Func<UnityEngine.Object, GameObject> <>9__50_2;

		[Token(Token = "0x4002A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static Func<GameObject, bool> <>9__50_3;

		[Token(Token = "0x4002A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static Func<UnityEngine.Object, GameObject> <>9__50_4;

		[Token(Token = "0x4002A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static Func<GameObject, bool> <>9__50_5;

		[Token(Token = "0x4002A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static Func<UnityEngine.Object, GameObject> <>9__50_6;

		[Token(Token = "0x4002A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static Func<GameObject, bool> <>9__50_7;

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x91B3F0", Offset = "0x91B3F0", VA = "0x91B3F0")]
		public <>c()
		{
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x91B3F8", Offset = "0x91B3F8", VA = "0x91B3F8")]
		internal GameObject <GenerateAllBuildings>b__38_0(UnityEngine.Object g)
		{
			return null;
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x91B458", Offset = "0x91B458", VA = "0x91B458")]
		internal bool <GenerateAllBuildings>b__38_1(GameObject g)
		{
			return default(bool);
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x91B4B8", Offset = "0x91B4B8", VA = "0x91B4B8")]
		internal GameObject <CreateBuildingsInLines>b__39_0(UnityEngine.Object g)
		{
			return null;
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x91B518", Offset = "0x91B518", VA = "0x91B518")]
		internal bool <CreateBuildingsInLines>b__39_1(GameObject g)
		{
			return default(bool);
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x91B578", Offset = "0x91B578", VA = "0x91B578")]
		internal GameObject <CreateBuildingsInBlocks>b__42_0(UnityEngine.Object g)
		{
			return null;
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0x91B5D8", Offset = "0x91B5D8", VA = "0x91B5D8")]
		internal bool <CreateBuildingsInBlocks>b__42_1(GameObject g)
		{
			return default(bool);
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0x91B638", Offset = "0x91B638", VA = "0x91B638")]
		internal GameObject <CreateBuildingsInSuperBlocks>b__43_0(UnityEngine.Object g)
		{
			return null;
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x91B698", Offset = "0x91B698", VA = "0x91B698")]
		internal bool <CreateBuildingsInSuperBlocks>b__43_1(GameObject g)
		{
			return default(bool);
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x91B6F8", Offset = "0x91B6F8", VA = "0x91B6F8")]
		internal GameObject <CreateBuildingsInDouble>b__46_0(UnityEngine.Object g)
		{
			return null;
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x91B758", Offset = "0x91B758", VA = "0x91B758")]
		internal bool <CreateBuildingsInDouble>b__46_1(GameObject g)
		{
			return default(bool);
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x91B7B8", Offset = "0x91B7B8", VA = "0x91B7B8")]
		internal GameObject <DestroyBuildings>b__50_0(UnityEngine.Object g)
		{
			return null;
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x91B818", Offset = "0x91B818", VA = "0x91B818")]
		internal bool <DestroyBuildings>b__50_1(GameObject g)
		{
			return default(bool);
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0x91B878", Offset = "0x91B878", VA = "0x91B878")]
		internal GameObject <DestroyBuildings>b__50_2(UnityEngine.Object g)
		{
			return null;
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0x91B8D8", Offset = "0x91B8D8", VA = "0x91B8D8")]
		internal bool <DestroyBuildings>b__50_3(GameObject g)
		{
			return default(bool);
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0x91B938", Offset = "0x91B938", VA = "0x91B938")]
		internal GameObject <DestroyBuildings>b__50_4(UnityEngine.Object g)
		{
			return null;
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0x91B998", Offset = "0x91B998", VA = "0x91B998")]
		internal bool <DestroyBuildings>b__50_5(GameObject g)
		{
			return default(bool);
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0x91B9F8", Offset = "0x91B9F8", VA = "0x91B9F8")]
		internal GameObject <DestroyBuildings>b__50_6(UnityEngine.Object g)
		{
			return null;
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0x91BA58", Offset = "0x91BA58", VA = "0x91BA58")]
		internal bool <DestroyBuildings>b__50_7(GameObject g)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nB;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 center;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int residential;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _residential;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject cityMaker;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool skyscrapers;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public GameObject miniBorder;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public GameObject smallBorder;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public GameObject largeBorder;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public GameObject mediumBorder;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public GameObject[] largeBlocks;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] _largeBlocks;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public GameObject[] BB;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public GameObject[] BC;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public GameObject[] BR;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public GameObject[] DC;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public GameObject[] EB;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public GameObject[] EC;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public GameObject[] MB;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public GameObject[] BK;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public GameObject[] SB;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int[] _BB;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int[] _BC;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int[] _BR;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int[] _EB;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int[] _EC;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int[] _MB;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int[] _BK;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int[] _SB;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject[] tempArray;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int numB;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float distCenter;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject pB;

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x931F94", Offset = "0x931F94", VA = "0x931F94")]
	public void GenerateCity(int size)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x931FC8", Offset = "0x931FC8", VA = "0x931FC8")]
	private void GenerateStreetsVerySmall()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x932288", Offset = "0x932288", VA = "0x932288")]
	private void GenerateStreetsSmall()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x9327D4", Offset = "0x9327D4", VA = "0x9327D4")]
	private void GenerateStreets()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x932F90", Offset = "0x932F90", VA = "0x932F90")]
	private void GenerateStreetsBig()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x9337A8", Offset = "0x9337A8", VA = "0x9337A8")]
	public void GenerateAllBuildings(bool withSkyscrapers)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x936244", Offset = "0x936244", VA = "0x936244")]
	public void CreateBuildingsInLines()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x937B94", Offset = "0x937B94", VA = "0x937B94")]
	public void CreateBuildingsInCorners(GameObject child)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x9391E4", Offset = "0x9391E4", VA = "0x9391E4")]
	private int RandRotation()
	{
		return default(int);
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x93576C", Offset = "0x93576C", VA = "0x93576C")]
	public void CreateBuildingsInBlocks()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x935004", Offset = "0x935004", VA = "0x935004")]
	public void CreateBuildingsInSuperBlocks()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x938370", Offset = "0x938370", VA = "0x938370")]
	private void CreateBuildingsInLine(GameObject line, float angulo)
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x9393BC", Offset = "0x9393BC", VA = "0x9393BC")]
	private void CreateBuildingsInDoubleLine(GameObject line)
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x9368FC", Offset = "0x9368FC", VA = "0x9368FC")]
	private void CreateBuildingsInDouble()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x939230", Offset = "0x939230", VA = "0x939230")]
	private void AdjustsWidth(GameObject[] tBuildings, int quantity, float remainingMeters, float init)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x938DB0", Offset = "0x938DB0", VA = "0x938DB0")]
	private float GetWith(GameObject building)
	{
		return default(float);
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x939050", Offset = "0x939050", VA = "0x939050")]
	private float GetHeight(GameObject building)
	{
		return default(float);
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x933C84", Offset = "0x933C84", VA = "0x933C84")]
	public void DestroyBuildings()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x939910", Offset = "0x939910", VA = "0x939910")]
	private void DestryObjetcs2(GameObject line, string nameObj)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x939CA0", Offset = "0x939CA0", VA = "0x939CA0")]
	public CityGenerator()
	{
	}
}
[Token(Token = "0x2000097")]
public class MeshSize : MonoBehaviour
{
	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshFilter meshFilter;

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xDFD7DC", Offset = "0xDFD7DC", VA = "0xDFD7DC")]
	public MeshSize()
	{
	}
}
[Token(Token = "0x2000098")]
public class Mesh_CombineUtility
{
	[Token(Token = "0x200045B")]
	public struct MeshInstance
	{
		[Token(Token = "0x4002A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Mesh mesh;

		[Token(Token = "0x4002A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int subMeshIndex;

		[Token(Token = "0x4002A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Matrix4x4 transform;
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xDFECE8", Offset = "0xDFECE8", VA = "0xDFECE8")]
	public static Mesh Combine(MeshInstance[] combines, bool generateStrips)
	{
		return null;
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xDFF83C", Offset = "0xDFF83C", VA = "0xDFF83C")]
	private static void Copy(int vertexcount, Vector3[] src, Vector3[] dst, ref int offset, Matrix4x4 transform)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xDFF91C", Offset = "0xDFF91C", VA = "0xDFF91C")]
	private static void CopyNormal(int vertexcount, Vector3[] src, Vector3[] dst, ref int offset, Matrix4x4 transform)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xDFFB30", Offset = "0xDFFB30", VA = "0xDFFB30")]
	private static void Copy(int vertexcount, Vector2[] src, Vector2[] dst, ref int offset)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xDFFBB4", Offset = "0xDFFBB4", VA = "0xDFFBB4")]
	private static void CopyColors(int vertexcount, Color[] src, Color[] dst, ref int offset)
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xDFFA20", Offset = "0xDFFA20", VA = "0xDFFA20")]
	private static void CopyTangents(int vertexcount, Vector4[] src, Vector4[] dst, ref int offset, Matrix4x4 transform)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xDFFC38", Offset = "0xDFFC38", VA = "0xDFFC38")]
	public Mesh_CombineUtility()
	{
	}
}
[Token(Token = "0x2000099")]
public class RunTimeSample : MonoBehaviour
{
	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cg;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ts;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CityGenerator generator;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TrafficSystem trafficSystem;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x573490", Offset = "0x573490")]
	public int citySize;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool withTraffic;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool rightHand;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool intenseTraffic;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	public bool skyscrappers;

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x8C2138", Offset = "0x8C2138", VA = "0x8C2138")]
	private void Awake()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x8C2150", Offset = "0x8C2150", VA = "0x8C2150")]
	private void GenerateCityAtRuntime(int citySize, bool withTraffic, bool rightHand, bool intenseTraffic, bool skyscrappers)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x8C237C", Offset = "0x8C237C", VA = "0x8C237C")]
	public RunTimeSample()
	{
	}
}
[Token(Token = "0x200009A")]
public class TrafficCar : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200045C")]
	public class CarWheelsTransform
	{
		[Token(Token = "0x4002A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform frontRight;

		[Token(Token = "0x4002A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform frontLeft;

		[Token(Token = "0x4002A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform backRight;

		[Token(Token = "0x4002A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform backLeft;

		[Token(Token = "0x4002A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform backRight2;

		[Token(Token = "0x4002A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform backLeft2;

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0x878D00", Offset = "0x878D00", VA = "0x878D00")]
		public CarWheelsTransform()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200045D")]
	public class CarSetting
	{
		[Token(Token = "0x4002A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool showNormalGizmos;

		[Token(Token = "0x4002A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform carSteer;

		[Token(Token = "0x4002A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D91C", Offset = "0x58D91C")]
		public float springs;

		[Token(Token = "0x4002A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D93C", Offset = "0x58D93C")]
		public float dampers;

		[Token(Token = "0x4002A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D95C", Offset = "0x58D95C")]
		public float carPower;

		[Token(Token = "0x4002A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D97C", Offset = "0x58D97C")]
		public float brakePower;

		[Token(Token = "0x4002A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D994", Offset = "0x58D994")]
		public float limitSpeed;

		[Token(Token = "0x4002A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D9AC", Offset = "0x58D9AC")]
		public float maxSteerAngle;

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0x878CE0", Offset = "0x878CE0", VA = "0x878CE0")]
		public CarSetting()
		{
		}
	}

	[Token(Token = "0x200045E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572848", Offset = "0x572848")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x4002A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string wheelName;

		[Token(Token = "0x4002A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TrafficCar <>4__this;

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0x878BE4", Offset = "0x878BE4", VA = "0x878BE4")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0x878BEC", Offset = "0x878BEC", VA = "0x878BEC")]
		internal bool <GetTransformWheel>b__1(GameObject g)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x200045F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572858", Offset = "0x572858")]
	private sealed class <>c
	{
		[Token(Token = "0x4002A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<UnityEngine.Object, GameObject> <>9__27_0;

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x878B7C", Offset = "0x878B7C", VA = "0x878B7C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0x878B84", Offset = "0x878B84", VA = "0x878B84")]
		internal GameObject <GetTransformWheel>b__27_0(UnityEngine.Object g)
		{
			return null;
		}
	}

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timeStoped;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject path;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject atualWay;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Transform mRayC1;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Transform mRayC2;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Transform[] wheel;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public WheelCollider[] wCollider;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int countWays;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform[] nodes;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int currentNode;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float distance;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float steer;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float speed;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float brake;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float brake2;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float motorTorque;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 steerCurAngle;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Rigidbody myRigidbody;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private FCGWaypointsContainer atualWayScript;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 relativeVector;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public CarWheelsTransform wheelsTransforms;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private FCGWaypointsContainer fcgWaypointsContainer;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public CarSetting carSetting;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 shiftCentre;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float iRC;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private RaycastHit hit2;

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xA27D28", Offset = "0xA27D28", VA = "0xA27D28")]
	private Transform GetTransformWheel(string wheelName)
	{
		return null;
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xA28000", Offset = "0xA28000", VA = "0xA28000")]
	public void Configure()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xA28B10", Offset = "0xA28B10", VA = "0xA28B10")]
	private WheelCollider SetWheelComponent(int w)
	{
		return null;
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xA28FDC", Offset = "0xA28FDC", VA = "0xA28FDC")]
	private void DefineNewPath()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xA29334", Offset = "0xA29334", VA = "0xA29334")]
	private void Start()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xA296A4", Offset = "0xA296A4", VA = "0xA296A4")]
	public void Init(GameObject pth)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xA2981C", Offset = "0xA2981C", VA = "0xA2981C")]
	private void MoveCar()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xA29D0C", Offset = "0xA29D0C", VA = "0xA29D0C")]
	private void VerificaPoints()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xA2A110", Offset = "0xA2A110", VA = "0xA2A110")]
	private bool VerifyTraffic(Transform ts)
	{
		return default(bool);
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xA29EC8", Offset = "0xA29EC8", VA = "0xA29EC8")]
	private float FixedRaycasts()
	{
		return default(float);
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xA2A23C", Offset = "0xA2A23C", VA = "0xA2A23C")]
	public TrafficCar()
	{
	}
}
[Token(Token = "0x200009B")]
public class TrafficLights : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000460")]
	public class TrafficLightState
	{
		[Token(Token = "0x4002A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int status;

		[Token(Token = "0x4002A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject t31;

		[Token(Token = "0x4002A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject t13;

		[Token(Token = "0x4002AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject t21;

		[Token(Token = "0x4002AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject t12;

		[Token(Token = "0x4002AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject t11;

		[Token(Token = "0x4002AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject stop31;

		[Token(Token = "0x4002AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject stop13;

		[Token(Token = "0x6002103")]
		[Address(RVA = "0x878D08", Offset = "0x878D08", VA = "0x878D08")]
		public TrafficLightState()
		{
		}
	}

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float countTime;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int step;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TrafficLightState tState;

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xA2A280", Offset = "0xA2A280", VA = "0xA2A280")]
	private void Start()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xA2A450", Offset = "0xA2A450", VA = "0xA2A450")]
	private void Semaforo()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xA2A330", Offset = "0xA2A330", VA = "0xA2A330")]
	private void EnabledObjects(int habilita)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xA2A55C", Offset = "0xA2A55C", VA = "0xA2A55C")]
	public TrafficLights()
	{
	}
}
[Token(Token = "0x200009C")]
public class TrafficSystem : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000461")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572868", Offset = "0x572868")]
	private sealed class <>c
	{
		[Token(Token = "0x4002AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<UnityEngine.Object, GameObject> <>9__3_0;

		[Token(Token = "0x4002AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<GameObject, bool> <>9__3_1;

		[Token(Token = "0x4002AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<UnityEngine.Object, GameObject> <>9__3_2;

		[Token(Token = "0x4002AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<GameObject, bool> <>9__3_3;

		[Token(Token = "0x4002AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Func<UnityEngine.Object, FCGWaypointsContainer> <>9__4_0;

		[Token(Token = "0x6002105")]
		[Address(RVA = "0x878D70", Offset = "0x878D70", VA = "0x878D70")]
		public <>c()
		{
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0x878D78", Offset = "0x878D78", VA = "0x878D78")]
		internal GameObject <InverseCarDirection>b__3_0(UnityEngine.Object g)
		{
			return null;
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0x878DD8", Offset = "0x878DD8", VA = "0x878DD8")]
		internal bool <InverseCarDirection>b__3_1(GameObject g)
		{
			return default(bool);
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0x878E3C", Offset = "0x878E3C", VA = "0x878E3C")]
		internal GameObject <InverseCarDirection>b__3_2(UnityEngine.Object g)
		{
			return null;
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0x878E9C", Offset = "0x878E9C", VA = "0x878E9C")]
		internal bool <InverseCarDirection>b__3_3(GameObject g)
		{
			return default(bool);
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0x878F00", Offset = "0x878F00", VA = "0x878F00")]
		internal FCGWaypointsContainer <LoadCars>b__4_0(UnityEngine.Object g)
		{
			return null;
		}
	}

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] IaCars;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool intenseTraffic;

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xA2A564", Offset = "0xA2A564", VA = "0xA2A564")]
	private void Awake()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xA2A660", Offset = "0xA2A660", VA = "0xA2A660")]
	public void InverseCarDirection(bool actualside)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xA2AC0C", Offset = "0xA2AC0C", VA = "0xA2AC0C")]
	public void LoadCars(bool intenseTraffic = false)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xA2B3F0", Offset = "0xA2B3F0", VA = "0xA2B3F0")]
	public TrafficSystem()
	{
	}
}
[Token(Token = "0x200009D")]
public class WaterSample : MonoBehaviour
{
	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer r;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material mat;

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x93FAD0", Offset = "0x93FAD0", VA = "0x93FAD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x93FB7C", Offset = "0x93FB7C", VA = "0x93FB7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x93FD80", Offset = "0x93FD80", VA = "0x93FD80")]
	public WaterSample()
	{
	}
}
[Token(Token = "0x200009E")]
public class FCGWaypointsContainer : MonoBehaviour
{
	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public List<Transform> waypoints;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject[] nextWay;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool inLeft;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] tf01;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ArrayList arr;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject tf01IDX;

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x8B01A8", Offset = "0x8B01A8", VA = "0x8B01A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x8B0244", Offset = "0x8B0244", VA = "0x8B0244")]
	public void ReAwake()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x8B0528", Offset = "0x8B0528", VA = "0x8B0528")]
	private void NextWays(Transform referencia)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x8B0950", Offset = "0x8B0950", VA = "0x8B0950")]
	private void AddNewWays(ArrayList arr)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x8B0810", Offset = "0x8B0810", VA = "0x8B0810")]
	private float GetAngulo(Transform origem, Transform target)
	{
		return default(float);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x8B0ADC", Offset = "0x8B0ADC", VA = "0x8B0ADC")]
	public void InvertNodesDirection()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x8B0C88", Offset = "0x8B0C88", VA = "0x8B0C88")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x8B1064", Offset = "0x8B1064", VA = "0x8B1064")]
	public FCGWaypointsContainer()
	{
	}
}
[Token(Token = "0x200009F")]
public class Tf01 : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000462")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572878", Offset = "0x572878")]
	private sealed class <>c
	{
		[Token(Token = "0x4002AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<UnityEngine.Object, Transform> <>9__2_0;

		[Token(Token = "0x4002AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Transform, bool> <>9__2_1;

		[Token(Token = "0x600210C")]
		[Address(RVA = "0x878680", Offset = "0x878680", VA = "0x878680")]
		public <>c()
		{
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0x878688", Offset = "0x878688", VA = "0x878688")]
		internal Transform <getTF01>b__2_0(UnityEngine.Object g)
		{
			return null;
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0x878704", Offset = "0x878704", VA = "0x878704")]
		internal bool <getTF01>b__2_1(Transform g)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] tf01;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool tested;

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xA246E8", Offset = "0xA246E8", VA = "0xA246E8")]
	public Transform[] getTF01()
	{
		return null;
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xA249BC", Offset = "0xA249BC", VA = "0xA249BC")]
	public Tf01()
	{
	}
}
[Token(Token = "0x20000A0")]
public class MakeSomeNoise : MonoBehaviour
{
	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float power;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float scale;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeScale;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float xOffset;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float yOffset;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshFilter mf;

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xA3FCAC", Offset = "0xA3FCAC", VA = "0xA3FCAC")]
	private void Start()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xA3FDE8", Offset = "0xA3FDE8", VA = "0xA3FDE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xA3FD04", Offset = "0xA3FD04", VA = "0xA3FD04")]
	private void MakeNoise()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xA3FE48", Offset = "0xA3FE48", VA = "0xA3FE48")]
	private float CalculateHeight(float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xA3FE68", Offset = "0xA3FE68", VA = "0xA3FE68")]
	public MakeSomeNoise()
	{
	}
}
[Token(Token = "0x20000A1")]
[ExecuteInEditMode]
public class NM_Wind : MonoBehaviour
{
	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573508", Offset = "0x573508")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x573508", Offset = "0x573508")]
	public float WindSpeed;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x573568", Offset = "0x573568")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x573568", Offset = "0x573568")]
	public float Turbulence;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5735BC", Offset = "0x5735BC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5735BC", Offset = "0x5735BC")]
	public Texture2D NoiseTexture;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57361C", Offset = "0x57361C")]
	public float FlexNoiseWorldSize;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x573654", Offset = "0x573654")]
	public float ShiverNoiseWorldSize;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57368C", Offset = "0x57368C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57368C", Offset = "0x57368C")]
	public Texture2D GustMaskTexture;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5736EC", Offset = "0x5736EC")]
	public float GustWorldSize;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x573724", Offset = "0x573724")]
	public float GustSpeed;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57375C", Offset = "0x57375C")]
	public float GustScale;

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xE0130C", Offset = "0xE0130C", VA = "0xE0130C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xE014CC", Offset = "0xE014CC", VA = "0xE014CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xE014D0", Offset = "0xE014D0", VA = "0xE014D0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xE01310", Offset = "0xE01310", VA = "0xE01310")]
	private void ApplySettings()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xE014D4", Offset = "0xE014D4", VA = "0xE014D4")]
	private Vector4 GetDirectionAndSpeed()
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xE01554", Offset = "0xE01554", VA = "0xE01554")]
	public NM_Wind()
	{
	}
}
[Token(Token = "0x20000A2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x570C44", Offset = "0x570C44")]
public class LakePolygon : MonoBehaviour
{
	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int toolbarInt;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LakePolygonProfile currentProfile;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LakePolygonProfile oldProfile;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Vector3> points;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Vector3> splinePoints;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float distSmooth;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float terrainSmoothMultiplier;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool overrideLakeRender;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float uvScale;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool receiveShadows;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int currentSplatMap;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float distanceClearFoliage;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float distanceClearFoliageTrees;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool mixTwoSplatMaps;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int secondSplatMap;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool addCliffSplatMap;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int cliffSplatMap;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float cliffAngle;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float cliffBlend;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int cliffSplatMapOutside;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float cliffAngleOutside;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float cliffBlendOutside;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool noiseCarve;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float noiseMultiplierInside;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float noiseMultiplierOutside;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float noiseSizeX;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float noiseSizeZ;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool noisePaint;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float noiseMultiplierInsidePaint;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float noiseMultiplierOutsidePaint;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float noiseSizeXPaint;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float noiseSizeZPaint;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float maximumTriangleSize;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float traingleDensity;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float height;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public bool lockHeight;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float yOffset;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float trianglesGenerated;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float vertsGenerated;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Mesh currentMesh;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public MeshFilter meshfilter;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool showVertexColors;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	public bool showFlowMap;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	public bool overrideFlowMap;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float automaticFlowMapScale;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool noiseflowMap;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float noiseMultiplierflowMap;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float noiseSizeXflowMap;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float noiseSizeZflowMap;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool drawOnMesh;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	public bool drawOnMeshFlowMap;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public Color drawColor;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public bool drawColorR;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
	public bool drawColorG;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11E")]
	public bool drawColorB;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11F")]
	public bool drawColorA;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool drawOnMultiple;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float opacity;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float drawSize;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Material oldMaterial;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Color[] colors;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public List<Vector2> colorsFlowMap;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float floatSpeed;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float flowSpeed;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float flowDirection;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float closeDistanceSimulation;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int angleSimulation;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float checkDistanceSimulation;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public bool removeFirstPointSimulation;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	public bool normalFromRaycast;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x162")]
	public bool snapToTerrain;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public LayerMask snapMask;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public float biomMaskResolution;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public float vegetationBlendDistance;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public float vegetationMaskSize;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public BiomeMaskArea biomeMaskArea;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public bool refreshMask;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public LakePolygonCarveData lakePolygonCarveData;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public LakePolygonCarveData lakePolygonPaintData;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public LakePolygonCarveData lakePolygonClearData;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public List<GameObject> meshGOs;

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xA6F470", Offset = "0xA6F470", VA = "0xA6F470")]
	public void AddPoint(Vector3 position)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xA6F4EC", Offset = "0xA6F4EC", VA = "0xA6F4EC")]
	public void AddPointAfter(int i)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xA6F6D0", Offset = "0xA6F6D0", VA = "0xA6F6D0")]
	public void ChangePointPosition(int i, Vector3 position)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xA6F75C", Offset = "0xA6F75C", VA = "0xA6F75C")]
	public void RemovePoint(int i)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xA6F7E8", Offset = "0xA6F7E8", VA = "0xA6F7E8")]
	public void RemovePoints(int fromID = -1)
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xA6F860", Offset = "0xA6F860", VA = "0xA6F860")]
	private void CenterPivot()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xA6FA24", Offset = "0xA6FA24", VA = "0xA6FA24")]
	public void GeneratePolygon(bool quick = false)
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xA71010", Offset = "0xA71010", VA = "0xA71010")]
	public static LakePolygon CreatePolygon(Material material, [Optional] List<Vector3> positions)
	{
		return null;
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xA70DC4", Offset = "0xA70DC4", VA = "0xA70DC4")]
	private void CalculateCatmullRomSpline(int pos)
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xA711F0", Offset = "0xA711F0", VA = "0xA711F0")]
	public int ClampListPos(int pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xA71278", Offset = "0xA71278", VA = "0xA71278")]
	private Vector3 GetCatmullRomPosition(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xA70FD0", Offset = "0xA70FD0", VA = "0xA70FD0")]
	public float DistancePointLine(Vector2 point, Vector2 lineStart, Vector2 lineEnd, out Vector2 pointProject)
	{
		return default(float);
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xA71380", Offset = "0xA71380", VA = "0xA71380")]
	public Vector2 ProjectPointLine(Vector2 point, Vector2 lineStart, Vector2 lineEnd)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xA71420", Offset = "0xA71420", VA = "0xA71420")]
	public void TerrainCarve(bool terrainShow = false)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xA72E78", Offset = "0xA72E78", VA = "0xA72E78")]
	public void TerrainPaint(bool terrainShow = false)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xA74830", Offset = "0xA74830", VA = "0xA74830")]
	public void TerrainClearTrees(bool details = true)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xA75AAC", Offset = "0xA75AAC", VA = "0xA75AAC")]
	public void Simulation()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xA76444", Offset = "0xA76444", VA = "0xA76444")]
	public static bool AreLinesIntersecting(Vector3 l1_p1, Vector3 l1_p2, Vector3 l2_p1, Vector3 l2_p2, bool shouldIncludeEndPoints = true)
	{
		return default(bool);
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xA72E1C", Offset = "0xA72E1C", VA = "0xA72E1C")]
	public static float DistancePointLine(Vector3 point, Vector3 lineStart, Vector3 lineEnd)
	{
		return default(float);
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xA76518", Offset = "0xA76518", VA = "0xA76518")]
	public static Vector3 ProjectPointLine(Vector3 point, Vector3 lineStart, Vector3 lineEnd)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xA765F8", Offset = "0xA765F8", VA = "0xA765F8")]
	public LakePolygon()
	{
	}
}
[Token(Token = "0x20000A3")]
public class LakePolygonCarveData
{
	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float distSmooth;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float minX;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxX;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minZ;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxZ;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector4[,] distances;

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xA3853C", Offset = "0xA3853C", VA = "0xA3853C")]
	public LakePolygonCarveData()
	{
	}
}
[Token(Token = "0x20000A4")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x570CA4", Offset = "0x570CA4")]
public class LakePolygonProfile : ScriptableObject
{
	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material lakeMaterial;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distSmooth;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float uvScale;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumTriangleSize;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float traingleDensity;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool receiveShadows;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float automaticFlowMapScale;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool noiseflowMap;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float noiseMultiplierflowMap;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float noiseSizeXflowMap;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float noiseSizeZflowMap;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float terrainSmoothMultiplier;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool noiseCarve;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float noiseMultiplierInside;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float noiseMultiplierOutside;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float noiseSizeX;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float noiseSizeZ;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int currentSplatMap;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool noisePaint;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float noiseMultiplierInsidePaint;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float noiseMultiplierOutsidePaint;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float noiseSizeXPaint;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float noiseSizeZPaint;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool mixTwoSplatMaps;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int secondSplatMap;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool addCliffSplatMap;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int cliffSplatMap;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float cliffAngle;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float cliffBlend;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int cliffSplatMapOutside;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float cliffAngleOutside;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float cliffBlendOutside;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float distanceClearFoliage;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float distanceClearFoliageTrees;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int biomeType;

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xA38550", Offset = "0xA38550", VA = "0xA38550")]
	public LakePolygonProfile()
	{
	}
}
[Token(Token = "0x20000A5")]
public class LakePolygonSwitch : MonoBehaviour
{
	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LakePolygon Polygon;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LakePolygonProfile Profile;

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xA387E8", Offset = "0xA387E8", VA = "0xA387E8")]
	public void Switch()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xA38820", Offset = "0xA38820", VA = "0xA38820")]
	public void SetProfile(LakePolygonProfile lakeProfile)
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xA38C94", Offset = "0xA38C94", VA = "0xA38C94")]
	public LakePolygonSwitch()
	{
	}
}
[Token(Token = "0x20000A6")]
public class RamSwitch : MonoBehaviour
{
	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RamSpline spline;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SplineProfile Profile;

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xD235C4", Offset = "0xD235C4", VA = "0xD235C4")]
	public void Switch()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xD235FC", Offset = "0xD235FC", VA = "0xD235FC")]
	public void SetProfile(SplineProfile splineProfile)
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xD23D04", Offset = "0xD23D04", VA = "0xD23D04")]
	public RamSwitch()
	{
	}
}
[Token(Token = "0x20000A7")]
public class MeshColoringRam : MonoBehaviour
{
	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float height;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float threshold;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool autoColor;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool newMesh;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 oldPosition;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool colorMeshLive;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public LayerMask layer;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshFilter[] meshFilters;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool colored;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RamSpline[] ramSplines;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static LakePolygon[] lakePolygons;

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xDFCEFC", Offset = "0xDFCEFC", VA = "0xDFCEFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xDFD03C", Offset = "0xDFD03C", VA = "0xDFD03C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xDFD04C", Offset = "0xDFD04C", VA = "0xDFD04C")]
	public void ColorMeshLive()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xDFD798", Offset = "0xDFD798", VA = "0xDFD798")]
	public MeshColoringRam()
	{
	}
}
[Token(Token = "0x20000A8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x570CF8", Offset = "0x570CF8")]
public class RamBuoyancy : MonoBehaviour
{
	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float buoyancy;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float viscosity;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float viscosityAngular;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask layer;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider collider;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x573794", Offset = "0x573794")]
	public int pointsInAxis;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody rigidbody;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RamSpline[] ramSplines;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static LakePolygon[] lakePolygons;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Vector3> volumePoints;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool autoGenerateVolumePoints;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] volumePointsMatrix;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 lowestPoint;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 center;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool debug;

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xC4AF5C", Offset = "0xC4AF5C", VA = "0xC4AF5C")]
	private void Start()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xC4B380", Offset = "0xC4B380", VA = "0xC4B380")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xC4B384", Offset = "0xC4B384", VA = "0xC4B384")]
	public void WaterPhysics()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xC4C198", Offset = "0xC4C198", VA = "0xC4C198")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xC4C328", Offset = "0xC4C328", VA = "0xC4C328")]
	public RamBuoyancy()
	{
	}
}
[Token(Token = "0x20000A9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x570D58", Offset = "0x570D58")]
public class RamSpline : MonoBehaviour
{
	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SplineProfile currentProfile;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SplineProfile oldProfile;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<RamSpline> beginnigChildSplines;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<RamSpline> endingChildSplines;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RamSpline beginningSpline;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RamSpline endingSpline;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int beginningConnectionID;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int endingConnectionID;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float beginningMinWidth;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float beginningMaxWidth;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float endingMinWidth;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float endingMaxWidth;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int toolbarInt;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool invertUVDirection;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool uvRotation;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MeshFilter meshfilter;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Vector4> controlPoints;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<Quaternion> controlPointsRotations;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<Quaternion> controlPointsOrientation;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Vector3> controlPointsUp;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<Vector3> controlPointsDown;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<float> controlPointsSnap;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationCurve meshCurve;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<AnimationCurve> controlPointsMeshCurves;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool normalFromRaycast;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool snapToTerrain;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public LayerMask snapMask;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<Vector3> points;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<Vector3> pointsUp;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public List<Vector3> pointsDown;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<Vector3> points2;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<Vector3> verticesBeginning;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public List<Vector3> verticesEnding;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public List<Vector3> normalsBeginning;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public List<Vector3> normalsEnding;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public List<float> widths;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public List<float> snaps;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public List<float> lerpValues;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public List<Quaternion> orientations;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public List<Vector3> tangents;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public List<Vector3> normalsList;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Color[] colors;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public List<Vector2> colorsFlowMap;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public List<Vector3> verticeDirection;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float floatSpeed;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool generateOnStart;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float minVal;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float maxVal;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float width;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public int vertsInShape;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float traingleDensity;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float uvScale;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Material oldMaterial;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public bool showVertexColors;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	public bool showFlowMap;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
	public bool overrideFlowMap;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16B")]
	public bool drawOnMesh;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public bool drawOnMeshFlowMap;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
	public bool uvScaleOverride;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16E")]
	public bool debug;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16F")]
	public bool debugNormals;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public bool debugTangents;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
	public bool debugBitangent;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x172")]
	public bool debugFlowmap;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x173")]
	public bool debugPoints;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public bool debugPointsConnect;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
	public bool debugMesh;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public float distanceToDebug;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public Color drawColor;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public bool drawColorR;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18D")]
	public bool drawColorG;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18E")]
	public bool drawColorB;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18F")]
	public bool drawColorA;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public bool drawOnMultiple;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public float flowSpeed;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float flowDirection;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public AnimationCurve flowFlat;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public AnimationCurve flowWaterfall;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public bool noiseflowMap;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public float noiseMultiplierflowMap;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public float noiseSizeXflowMap;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public float noiseSizeZflowMap;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public float opacity;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public float drawSize;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public float length;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public float fulllength;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public float minMaxWidth;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public float uvWidth;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public float uvBeginning;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public bool receiveShadows;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool generateMeshParts;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public int meshPartsCount;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public List<Transform> meshesPartTransforms;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public float simulatedRiverLength;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public int simulatedRiverPoints;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public float simulatedMinStepSize;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	public bool simulatedNoUp;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x205")]
	public bool simulatedBreakOnUp;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public int detailTerrain;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	public int detailTerrainForward;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public float terrainAdditionalWidth;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	public float terrainSmoothMultiplier;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public bool overrideRiverRender;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x219")]
	public bool noiseWidth;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	public float noiseMultiplierWidth;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public float noiseSizeWidth;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	public bool noiseCarve;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public float noiseMultiplierInside;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	public float noiseMultiplierOutside;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public float noiseSizeX;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	public float noiseSizeZ;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public bool noisePaint;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	public float noiseMultiplierInsidePaint;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public float noiseMultiplierOutsidePaint;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	public float noiseSizeXPaint;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public float noiseSizeZPaint;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	public LayerMask maskCarve;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public float distSmooth;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	public float distSmoothStart;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public int currentSplatMap;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	public bool mixTwoSplatMaps;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public int secondSplatMap;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	public bool addCliffSplatMap;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public int cliffSplatMap;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public float cliffAngle;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public float cliffBlend;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	public int cliffSplatMapOutside;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public float cliffAngleOutside;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	public float cliffBlendOutside;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public float distanceClearFoliage;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	public float distanceClearFoliageTrees;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public float biomMaskResolution;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	public float vegetationMaskSize;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public float vegetationBlendDistance;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public BiomeMaskArea biomeMaskArea;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public bool refreshMask;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public GameObject meshGO;

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xC4C3E8", Offset = "0xC4C3E8", VA = "0xC4C3E8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xC4D230", Offset = "0xC4D230", VA = "0xC4D230")]
	public static RamSpline CreateSpline([Optional] Material splineMaterial, [Optional] List<Vector4> positions, string name = "RamSpline")
	{
		return null;
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xC4D400", Offset = "0xC4D400", VA = "0xC4D400")]
	public void AddPoint(Vector4 position)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xC4D658", Offset = "0xC4D658", VA = "0xC4D658")]
	public void AddPointAfter(int i)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xC4DAE0", Offset = "0xC4DAE0", VA = "0xC4DAE0")]
	public void ChangePointPosition(int i, Vector3 position)
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xC4DB30", Offset = "0xC4DB30", VA = "0xC4DB30")]
	public void ChangePointPosition(int i, Vector4 position)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xC4DC00", Offset = "0xC4DC00", VA = "0xC4DC00")]
	public void RemovePoint(int i)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xC4DD04", Offset = "0xC4DD04", VA = "0xC4DD04")]
	public void RemovePoints(int fromID = -1)
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xC4DD7C", Offset = "0xC4DD7C", VA = "0xC4DD7C")]
	public void GenerateBeginningParentBased()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xC4E074", Offset = "0xC4E074", VA = "0xC4E074")]
	public void GenerateEndingParentBased()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xC4C3F8", Offset = "0xC4C3F8", VA = "0xC4C3F8")]
	public void GenerateSpline([Optional] List<RamSpline> generatedSplines)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xC4E374", Offset = "0xC4E374", VA = "0xC4E374")]
	private void CalculateCatmullRomSideSplines(List<Vector4> controlPoints, int pos)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xC4E980", Offset = "0xC4E980", VA = "0xC4E980")]
	private void CalculateCatmullRomSplineParameters(List<Vector4> controlPoints, int pos, bool initialPoints = false)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xC4ECE4", Offset = "0xC4ECE4", VA = "0xC4ECE4")]
	private void CalculateCatmullRomSpline(List<Vector3> controlPoints, int pos, ref List<Vector3> points)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xC51968", Offset = "0xC51968", VA = "0xC51968")]
	private void CalculatePointPosition(List<Vector3> controlPoints, int pos, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t, ref List<Vector3> points)
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xC51430", Offset = "0xC51430", VA = "0xC51430")]
	private void CalculatePointParameters(List<Vector4> controlPoints, int pos, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xC51148", Offset = "0xC51148", VA = "0xC51148")]
	private int ClampListPos(int pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xC511D0", Offset = "0xC511D0", VA = "0xC511D0")]
	private Vector3 GetCatmullRomPosition(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xC512D8", Offset = "0xC512D8", VA = "0xC512D8")]
	private Vector3 GetCatmullRomTangent(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xC513C8", Offset = "0xC513C8", VA = "0xC513C8")]
	private Vector3 CalculateNormal(Vector3 tangent, Vector3 up)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xC4EFC8", Offset = "0xC4EFC8", VA = "0xC4EFC8")]
	private void GenerateMesh(ref Mesh mesh)
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xC51C20", Offset = "0xC51C20", VA = "0xC51C20")]
	public void GenerateMeshParts(Mesh baseMesh)
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xC52778", Offset = "0xC52778", VA = "0xC52778")]
	public void AddNoiseToWidths()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xC528BC", Offset = "0xC528BC", VA = "0xC528BC")]
	public void SimulateRiver(bool generate = true)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xC53D88", Offset = "0xC53D88", VA = "0xC53D88")]
	public void ShowTerrainCarve(float differentSize = 0f)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xC5538C", Offset = "0xC5538C", VA = "0xC5538C")]
	public void TerrainCarve()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xC55D14", Offset = "0xC55D14", VA = "0xC55D14")]
	public void TerrainPaintMeshBased()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xC56EC0", Offset = "0xC56EC0", VA = "0xC56EC0")]
	public void TerrainClearFoliage(bool details = true)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xC51B2C", Offset = "0xC51B2C", VA = "0xC51B2C")]
	private float FlowCalculate(float u, float normalY, Vector3 vertice)
	{
		return default(float);
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xC57AA0", Offset = "0xC57AA0", VA = "0xC57AA0")]
	public RamSpline()
	{
	}
}
[Token(Token = "0x20000AA")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x570DB8", Offset = "0x570DB8")]
public class SplineProfile : ScriptableObject
{
	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material splineMaterial;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve meshCurve;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minVal;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxVal;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int vertsInShape;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float traingleDensity;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float uvScale;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool uvRotation;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool receiveShadows;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve flowFlat;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve flowWaterfall;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool noiseflowMap;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float noiseMultiplierflowMap;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float noiseSizeXflowMap;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float noiseSizeZflowMap;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float floatSpeed;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float distSmooth;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float distSmoothStart;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public LayerMask maskCarve;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool noiseCarve;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float noiseMultiplierInside;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float noiseMultiplierOutside;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float noiseSizeX;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float noiseSizeZ;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float terrainSmoothMultiplier;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int currentSplatMap;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool mixTwoSplatMaps;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int secondSplatMap;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool addCliffSplatMap;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int cliffSplatMap;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float cliffAngle;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float cliffBlend;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int cliffSplatMapOutside;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float cliffAngleOutside;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float cliffBlendOutside;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float distanceClearFoliage;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float distanceClearFoliageTrees;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool noisePaint;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float noiseMultiplierInsidePaint;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float noiseMultiplierOutsidePaint;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float noiseSizeXPaint;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float noiseSizeZPaint;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float simulatedRiverLength;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public int simulatedRiverPoints;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float simulatedMinStepSize;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public bool simulatedNoUp;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
	public bool simulatedBreakOnUp;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
	public bool noiseWidth;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float noiseMultiplierWidth;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float noiseSizeWidth;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int biomeType;

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xB48E08", Offset = "0xB48E08", VA = "0xB48E08")]
	public SplineProfile()
	{
	}
}
[Token(Token = "0x20000AB")]
public static class AppSettingsExtensions
{
	[Token(Token = "0x600029E")]
	[Address(RVA = "0x881E80", Offset = "0x881E80", VA = "0x881E80")]
	public static ChatAppSettings GetChatSettings(this AppSettings appSettings)
	{
		return null;
	}
}
[Token(Token = "0x20000AC")]
public class ChannelSelector : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Channel;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x92D848", Offset = "0x92D848", VA = "0x92D848")]
	public void SetChannel(string channel)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x92D8C0", Offset = "0x92D8C0", VA = "0x92D8C0", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x92DBC8", Offset = "0x92DBC8", VA = "0x92DBC8")]
	public ChannelSelector()
	{
	}
}
[Token(Token = "0x20000AD")]
[ExecuteInEditMode]
public class ChatAppIdCheckerUI : MonoBehaviour
{
	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Description;

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x92F188", Offset = "0x92F188", VA = "0x92F188")]
	public void Update()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x92F2EC", Offset = "0x92F2EC", VA = "0x92F2EC")]
	public ChatAppIdCheckerUI()
	{
	}
}
[Token(Token = "0x20000AE")]
public class ChatGui : MonoBehaviour, IChatClientListener
{
	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] ChannelsToJoinOnConnect;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] FriendsList;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int HistoryLengthToFetch;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5737AC", Offset = "0x5737AC")]
	private string <UserName>k__BackingField;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string selectedChannelName;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ChatClient chatClient;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected internal ChatAppSettings chatAppSettings;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject missingAppIdErrorPanel;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ConnectingLabel;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform ChatPanel;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject UserIdFormPanel;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public InputField InputFieldChat;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text CurrentChannelText;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Toggle ChannelToggleToInstantiate;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject FriendListUiItemtoInstantiate;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly Dictionary<string, Toggle> channelToggles;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly Dictionary<string, FriendItem> friendListItemLUT;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool ShowState;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject Title;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text StateText;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text UserIdText;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string HelpText;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int TestLength;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private byte[] testBytes;

	[Token(Token = "0x17000003")]
	public string UserName
	{
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x92F2F4", Offset = "0x92F2F4", VA = "0x92F2F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58F130", Offset = "0x58F130")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0x92F2FC", Offset = "0x92F2FC", VA = "0x92F2FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58F140", Offset = "0x58F140")]
		set
		{
		}
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x92F304", Offset = "0x92F304", VA = "0x92F304")]
	public void Start()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x92F5C4", Offset = "0x92F5C4", VA = "0x92F5C4")]
	public void Connect()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x92F744", Offset = "0x92F744", VA = "0x92F744")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x92F75C", Offset = "0x92F75C", VA = "0x92F75C")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x92F774", Offset = "0x92F774", VA = "0x92F774")]
	public void Update()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x92F864", Offset = "0x92F864", VA = "0x92F864")]
	public void OnEnterSend()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x9302DC", Offset = "0x9302DC", VA = "0x9302DC")]
	public void OnClickSend()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x92F8FC", Offset = "0x92F8FC", VA = "0x92F8FC")]
	private void SendChatMessage(string inputLine)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x930398", Offset = "0x930398", VA = "0x930398")]
	public void PostHelpToCurrentChannel()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x930450", Offset = "0x930450", VA = "0x930450", Slot = "4")]
	public void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x930534", Offset = "0x930534", VA = "0x930534", Slot = "6")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x930898", Offset = "0x930898", VA = "0x930898", Slot = "5")]
	public void OnDisconnected()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x9308B8", Offset = "0x9308B8", VA = "0x9308B8", Slot = "7")]
	public void OnChatStateChange(ChatState state)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x930960", Offset = "0x930960", VA = "0x930960", Slot = "10")]
	public void OnSubscribed(string[] channels, bool[] results)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x930CE0", Offset = "0x930CE0", VA = "0x930CE0")]
	public void OnSubscribed(string channel, string[] users, Dictionary<object, object> properties)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x930B10", Offset = "0x930B10", VA = "0x930B10")]
	private void InstantiateChannelButton(string channelName)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x930744", Offset = "0x930744", VA = "0x930744")]
	private void InstantiateFriendButton(string friendId)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x930E9C", Offset = "0x930E9C", VA = "0x930E9C", Slot = "11")]
	public void OnUnsubscribed(string[] channels)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x93131C", Offset = "0x93131C", VA = "0x93131C", Slot = "8")]
	public void OnGetMessages(string channelName, string[] senders, object[] messages)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x93136C", Offset = "0x93136C", VA = "0x93136C", Slot = "9")]
	public void OnPrivateMessage(string sender, object message, string channelName)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x93148C", Offset = "0x93148C", VA = "0x93148C", Slot = "12")]
	public void OnStatusUpdate(string user, int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x93165C", Offset = "0x93165C", VA = "0x93165C", Slot = "13")]
	public void OnUserSubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x931774", Offset = "0x931774", VA = "0x931774", Slot = "14")]
	public void OnUserUnsubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x93188C", Offset = "0x93188C", VA = "0x93188C")]
	public void OnChannelPropertiesChanged(string channel, string userId, Dictionary<object, object> properties)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x931A0C", Offset = "0x931A0C", VA = "0x931A0C")]
	public void OnUserPropertiesChanged(string channel, string targetUserId, string senderUserId, Dictionary<object, object> properties)
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x931BC0", Offset = "0x931BC0", VA = "0x931BC0")]
	public void OnErrorInfo(string channel, string error, object data)
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x931D04", Offset = "0x931D04", VA = "0x931D04")]
	public void AddMessageToSelectedChannel(string msg)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x92D944", Offset = "0x92D944", VA = "0x92D944")]
	public void ShowChannel(string channelName)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x931DFC", Offset = "0x931DFC", VA = "0x931DFC")]
	public void OpenDashboard()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x931E44", Offset = "0x931E44", VA = "0x931E44")]
	public ChatGui()
	{
	}
}
[Token(Token = "0x20000AF")]
public class FriendItem : MonoBehaviour
{
	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text NameLabel;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text StatusLabel;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Health;

	[Token(Token = "0x17000004")]
	[HideInInspector]
	public string FriendId
	{
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x8B9E20", Offset = "0x8B9E20", VA = "0x8B9E20")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x8B9DFC", Offset = "0x8B9DFC", VA = "0x8B9DFC")]
		set
		{
		}
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x8B9E44", Offset = "0x8B9E44", VA = "0x8B9E44")]
	public void Awake()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x8B9EAC", Offset = "0x8B9EAC", VA = "0x8B9EAC")]
	public void OnFriendStatusUpdate(int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x8BA03C", Offset = "0x8BA03C", VA = "0x8BA03C")]
	public FriendItem()
	{
	}
}
[Token(Token = "0x20000B0")]
public class IgnoreUiRaycastWhenInactive : MonoBehaviour, ICanvasRaycastFilter
{
	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xA6551C", Offset = "0xA6551C", VA = "0xA6551C", Slot = "4")]
	public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xA65540", Offset = "0xA65540", VA = "0xA65540")]
	public IgnoreUiRaycastWhenInactive()
	{
	}
}
[Token(Token = "0x20000B1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x570E2C", Offset = "0x570E2C")]
public class NamePickGui : MonoBehaviour
{
	[Token(Token = "0x400066A")]
	private const string UserNamePlayerPref = "NamePickUserName";

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChatGui chatNewComponent;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField idInput;

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xE01588", Offset = "0xE01588", VA = "0xE01588")]
	public void Start()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xE01654", Offset = "0xE01654", VA = "0xE01654")]
	public void EndEditOnEnter()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xE016A0", Offset = "0xE016A0", VA = "0xE016A0")]
	public void StartChat()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xE0177C", Offset = "0xE0177C", VA = "0xE0177C")]
	public NamePickGui()
	{
	}
}
[Token(Token = "0x20000B2")]
[ExecuteInEditMode]
public class PW_Terrain_Grass_Manager : MonoBehaviour
{
	[Token(Token = "0x2000463")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572888", Offset = "0x572888")]
	private sealed class <wait>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PW_Terrain_Grass_Manager <>4__this;

		[Token(Token = "0x17000374")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002112")]
			[Address(RVA = "0x868970", Offset = "0x868970", VA = "0x868970", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000375")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002114")]
			[Address(RVA = "0x8689B8", Offset = "0x8689B8", VA = "0x8689B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0x86887C", Offset = "0x86887C", VA = "0x86887C")]
		[DebuggerHidden]
		public <wait>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0x8688A8", Offset = "0x8688A8", VA = "0x8688A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0x8688AC", Offset = "0x8688AC", VA = "0x8688AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0x868978", Offset = "0x868978", VA = "0x868978", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D PW_Splat_Grass;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Terrain CurrentTerrain;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color TerrainGrassColorOverride;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 TerrainPosition;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float TerrainTexResolutionX;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float TerrainTexResolutionY;

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xFD09CC", Offset = "0xFD09CC", VA = "0xFD09CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xFD09D0", Offset = "0xFD09D0", VA = "0xFD09D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58F150", Offset = "0x58F150")]
	private IEnumerator wait()
	{
		return null;
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xFD0A3C", Offset = "0xFD0A3C", VA = "0xFD0A3C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xFD0A40", Offset = "0xFD0A40", VA = "0xFD0A40")]
	private void TerrainDataRecheck()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xFD0B6C", Offset = "0xFD0B6C", VA = "0xFD0B6C")]
	public PW_Terrain_Grass_Manager()
	{
	}
}
[Token(Token = "0x20000B3")]
public class RandomMaterialSelector : MonoBehaviour
{
	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Material> materials;

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xD23D0C", Offset = "0xD23D0C", VA = "0xD23D0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xD23DD4", Offset = "0xD23DD4", VA = "0xD23DD4")]
	public RandomMaterialSelector()
	{
	}
}
[Token(Token = "0x20000B4")]
public class APITest : MonoBehaviour
{
	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5737BC", Offset = "0x5737BC")]
	public int xTiles;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int zTiles;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int tileSize;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tileHeight;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int seaLevel;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool createTerrainsInScenes;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool autoUnloadScenes;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool applyFloatingPointFix;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
	public bool executeWorldCreation;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5737F4", Offset = "0x5737F4")]
	public Texture2D stamperTestTexture;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool executeStamp;

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x12CFC10", Offset = "0x12CFC10", VA = "0x12CFC10")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x12CFC14", Offset = "0x12CFC14", VA = "0x12CFC14")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x12CFC18", Offset = "0x12CFC18", VA = "0x12CFC18")]
	public void CreateTerrainButton()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x12CFCB8", Offset = "0x12CFCB8", VA = "0x12CFCB8")]
	public void StampButton()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x12CFDE4", Offset = "0x12CFDE4", VA = "0x12CFDE4")]
	public APITest()
	{
	}
}
[Token(Token = "0x20000B5")]
public enum MaskMapExportMultiTerrainOption
{
	[Token(Token = "0x4000680")]
	SeparateTextures,
	[Token(Token = "0x4000681")]
	OneCombinedTexture
}
[Token(Token = "0x20000B6")]
public class BinaryReaderMac : BinaryReader
{
	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x88C40C", Offset = "0x88C40C", VA = "0x88C40C")]
	public BinaryReaderMac(Stream stream)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x88C414", Offset = "0x88C414", VA = "0x88C414", Slot = "14")]
	public override ushort ReadUInt16()
	{
		return default(ushort);
	}
}
[Token(Token = "0x20000B7")]
public class GaiaMessages
{
	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string title;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string bodyContent;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string url;

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x82C0A8", Offset = "0x82C0A8", VA = "0x82C0A8")]
	public GaiaMessages()
	{
	}
}
[Token(Token = "0x20000B8")]
[ExecuteInEditMode]
public class PW_Camera_Depth : MonoBehaviour
{
	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material _mat;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Mesh _mesh;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light mainLight;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject waterGO;

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xFCFF3C", Offset = "0xFCFF3C", VA = "0xFCFF3C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xFD0228", Offset = "0xFD0228", VA = "0xFD0228")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xFD0488", Offset = "0xFD0488", VA = "0xFD0488")]
	public PW_Camera_Depth()
	{
	}
}
[Token(Token = "0x20000B9")]
[ExecuteInEditMode]
public class PW_Camera_Refraction : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000464")]
	public enum PW_RENDER_SIZE
	{
		[Token(Token = "0x4002AB2")]
		FULL = -1,
		[Token(Token = "0x4002AB3")]
		HALF = -2,
		[Token(Token = "0x4002AB4")]
		QUARTER = -3
	}

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CameraEvent _cameraEvent;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CommandBuffer _cbuf;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _cbufName;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _grabID;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _screenWidth;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _screenHeight;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera _camera;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PW_RENDER_SIZE renderSize;

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xFD0490", Offset = "0xFD0490", VA = "0xFD0490")]
	private void CommandBufferDestroy(Camera i_cam)
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xFD0608", Offset = "0xFD0608", VA = "0xFD0608")]
	private void CommandBufferCreate()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xFD07C4", Offset = "0xFD07C4", VA = "0xFD07C4")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xFD0858", Offset = "0xFD0858", VA = "0xFD0858")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xFD0860", Offset = "0xFD0860", VA = "0xFD0860")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xFD0968", Offset = "0xFD0968", VA = "0xFD0968")]
	public PW_Camera_Refraction()
	{
	}
}
[Token(Token = "0x20000BA")]
public class GenaSampleExtension : IGeNaExtension
{
	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57382C", Offset = "0x57382C")]
	private readonly GameObject <gameObject>k__BackingField;

	[Token(Token = "0x17000005")]
	public string Name
	{
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0xBF98D4", Offset = "0xBF98D4", VA = "0xBF98D4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000006")]
	public GameObject gameObject
	{
		[Token(Token = "0x60002E9")]
		[Address(RVA = "0xBF98FC", Offset = "0xBF98FC", VA = "0xBF98FC", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58F1B0", Offset = "0x58F1B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000007")]
	public bool AffectsHeights
	{
		[Token(Token = "0x60002EA")]
		[Address(RVA = "0xBF9904", Offset = "0xBF9904", VA = "0xBF9904", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000008")]
	public bool AffectsTextures
	{
		[Token(Token = "0x60002EB")]
		[Address(RVA = "0xBF990C", Offset = "0xBF990C", VA = "0xBF990C", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000009")]
	public bool AffectsDetails
	{
		[Token(Token = "0x60002EC")]
		[Address(RVA = "0xBF9914", Offset = "0xBF9914", VA = "0xBF9914", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000A")]
	public bool AffectsTrees
	{
		[Token(Token = "0x60002ED")]
		[Address(RVA = "0xBF991C", Offset = "0xBF991C", VA = "0xBF991C", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xBF9924", Offset = "0xBF9924", VA = "0xBF9924", Slot = "10")]
	public void Init(Spawner spawner)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xBF9A14", Offset = "0xBF9A14", VA = "0xBF9A14", Slot = "11")]
	public void Spawn(Spawner spawner, Resource resource, SpawnDetails spawnDetails)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xBF9BF4", Offset = "0xBF9BF4", VA = "0xBF9BF4", Slot = "12")]
	public void Undo()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xBF9CE4", Offset = "0xBF9CE4", VA = "0xBF9CE4")]
	public GenaSampleExtension()
	{
	}
}
[Token(Token = "0x20000BB")]
public class GenaSampleExtensionComponent : MonoBehaviour, IGeNaExtension
{
	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int m_numOne;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int m_numTwo;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int m_numThree;

	[Token(Token = "0x1700000B")]
	public string Name
	{
		[Token(Token = "0x60002F2")]
		[Address(RVA = "0xBF9CEC", Offset = "0xBF9CEC", VA = "0xBF9CEC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000C")]
	public bool AffectsHeights
	{
		[Token(Token = "0x60002F3")]
		[Address(RVA = "0xBF9D74", Offset = "0xBF9D74", VA = "0xBF9D74", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000D")]
	public bool AffectsTextures
	{
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0xBF9D7C", Offset = "0xBF9D7C", VA = "0xBF9D7C", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000E")]
	public bool AffectsDetails
	{
		[Token(Token = "0x60002F5")]
		[Address(RVA = "0xBF9D84", Offset = "0xBF9D84", VA = "0xBF9D84", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000F")]
	public bool AffectsTrees
	{
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0xBF9D8C", Offset = "0xBF9D8C", VA = "0xBF9D8C", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xBF9D94", Offset = "0xBF9D94", VA = "0xBF9D94", Slot = "10")]
	public void Init(Spawner spawner)
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xBF9E84", Offset = "0xBF9E84", VA = "0xBF9E84", Slot = "11")]
	public void Spawn(Spawner spawner, Resource resource, SpawnDetails spawnDetails)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xBFA138", Offset = "0xBFA138", VA = "0xBFA138", Slot = "12")]
	public void Undo()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xBFA228", Offset = "0xBFA228", VA = "0xBFA228")]
	public GenaSampleExtensionComponent()
	{
	}

	[SpecialName]
	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xBFA244", Offset = "0xBFA244", VA = "0xBFA244", Slot = "5")]
	private GameObject GeNa.IGeNaExtension.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x20000BC")]
public class ActivationEventScript : MonoBehaviour
{
	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool globalSubscription;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool localSubscription;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RayfireRigid localRigidComponent;

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x87AB04", Offset = "0x87AB04", VA = "0x87AB04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x87AC48", Offset = "0x87AC48", VA = "0x87AC48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x87AD8C", Offset = "0x87AD8C", VA = "0x87AD8C")]
	private void LocalMethod(RayfireRigid rigid)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x87AE4C", Offset = "0x87AE4C", VA = "0x87AE4C")]
	private void GlobalMethod(RayfireRigid rigid)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x87AF0C", Offset = "0x87AF0C", VA = "0x87AF0C")]
	public ActivationEventScript()
	{
	}
}
[Token(Token = "0x20000BD")]
public class AddRigidComponent : MonoBehaviour
{
	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject targetObject;

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x87C77C", Offset = "0x87C77C", VA = "0x87C77C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x87C85C", Offset = "0x87C85C", VA = "0x87C85C")]
	public AddRigidComponent()
	{
	}
}
[Token(Token = "0x20000BE")]
public class ApplyDamageScript : MonoBehaviour
{
	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RayfireRigid rigid;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float damageValue;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform damagePoint;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float damageRadius;

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x881F50", Offset = "0x881F50", VA = "0x881F50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x88209C", Offset = "0x88209C", VA = "0x88209C")]
	public ApplyDamageScript()
	{
	}
}
[Token(Token = "0x20000BF")]
public class DemolitionEventScript : MonoBehaviour
{
	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool globalSubscription;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool localSubscription;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RayfireRigid localRigidComponent;

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xA1C444", Offset = "0xA1C444", VA = "0xA1C444")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xA1C588", Offset = "0xA1C588", VA = "0xA1C588")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xA1C6CC", Offset = "0xA1C6CC", VA = "0xA1C6CC")]
	private void LocalMethod(RayfireRigid rigid)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xA1C95C", Offset = "0xA1C95C", VA = "0xA1C95C")]
	private void GlobalMethod(RayfireRigid rigid)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xA1CBEC", Offset = "0xA1CBEC", VA = "0xA1CBEC")]
	public DemolitionEventScript()
	{
	}
}
[Token(Token = "0x20000C0")]
public class MenuSceneLoader : MonoBehaviour
{
	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject menuUI;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject m_Go;

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xA45C50", Offset = "0xA45C50", VA = "0xA45C50")]
	private void Awake()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xA45D0C", Offset = "0xA45D0C", VA = "0xA45D0C")]
	public MenuSceneLoader()
	{
	}
}
[Token(Token = "0x20000C1")]
public class PauseMenu : MonoBehaviour
{
	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Toggle m_MenuToggle;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_TimeScaleRef;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_VolumeRef;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_Paused;

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xD0D424", Offset = "0xD0D424", VA = "0xD0D424")]
	private void Awake()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xD0D478", Offset = "0xD0D478", VA = "0xD0D478")]
	private void MenuOn()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xD0D4CC", Offset = "0xD0D4CC", VA = "0xD0D4CC")]
	public void MenuOff()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xD0D504", Offset = "0xD0D504", VA = "0xD0D504")]
	public void OnMenuStatusChange()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xD0D56C", Offset = "0xD0D56C", VA = "0xD0D56C")]
	public PauseMenu()
	{
	}
}
[Token(Token = "0x20000C2")]
public class SceneAndURLLoader : MonoBehaviour
{
	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PauseMenu m_PauseMenu;

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x8C5928", Offset = "0x8C5928", VA = "0x8C5928")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x8C597C", Offset = "0x8C597C", VA = "0x8C597C")]
	public void SceneLoad(string sceneName)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x8C5A00", Offset = "0x8C5A00", VA = "0x8C5A00")]
	public void LoadURL(string url)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x8C5A0C", Offset = "0x8C5A0C", VA = "0x8C5A0C")]
	public SceneAndURLLoader()
	{
	}
}
[Token(Token = "0x20000C3")]
public class CameraSwitch : MonoBehaviour
{
	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objects;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text text;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_CurrentActiveObject;

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x92CF18", Offset = "0x92CF18", VA = "0x92CF18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x92CF8C", Offset = "0x92CF8C", VA = "0x92CF8C")]
	public void NextCamera()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x92D064", Offset = "0x92D064", VA = "0x92D064")]
	public CameraSwitch()
	{
	}
}
[Token(Token = "0x20000C4")]
public class LevelReset : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x6000318")]
	[Address(RVA = "0xA3AF10", Offset = "0xA3AF10", VA = "0xA3AF10", Slot = "4")]
	public void OnPointerClick(PointerEventData data)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xA3AF90", Offset = "0xA3AF90", VA = "0xA3AF90")]
	public LevelReset()
	{
	}
}
[Token(Token = "0x20000C5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x570EBC", Offset = "0x570EBC")]
public class GhostFreeRoamCamera : MonoBehaviour
{
	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float initialSpeed;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float increaseSpeed;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool allowMovement;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool allowRotation;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public KeyCode forwardButton;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode backwardButton;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public KeyCode rightButton;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public KeyCode leftButton;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float cursorSensitivity;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool cursorToggleAllowed;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public KeyCode cursorToggleButton;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float currentSpeed;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool moving;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool togglePressed;

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xBFB3F8", Offset = "0xBFB3F8", VA = "0xBFB3F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xBFB428", Offset = "0xBFB428", VA = "0xBFB428")]
	private void Update()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xBFB7C8", Offset = "0xBFB7C8", VA = "0xBFB7C8")]
	private void CheckMove(KeyCode keyCode, ref Vector3 deltaPosition, Vector3 directionVector)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xBFB83C", Offset = "0xBFB83C", VA = "0xBFB83C")]
	public GhostFreeRoamCamera()
	{
	}
}
[Token(Token = "0x20000C6")]
public class FreeCamera : MonoBehaviour
{
	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool enableInputCapture;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool holdRightMouseCapture;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float lookSpeed;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float moveSpeed;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float sprintSpeed;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_inputCaptured;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_yaw;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_pitch;

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x8B923C", Offset = "0x8B923C", VA = "0x8B923C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x8B9248", Offset = "0x8B9248", VA = "0x8B9248")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x8B9288", Offset = "0x8B9288", VA = "0x8B9288")]
	private void CaptureInput()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x8B9300", Offset = "0x8B9300", VA = "0x8B9300")]
	private void ReleaseInput()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x8B9338", Offset = "0x8B9338", VA = "0x8B9338")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x8B937C", Offset = "0x8B937C", VA = "0x8B937C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x8B9768", Offset = "0x8B9768", VA = "0x8B9768")]
	public FreeCamera()
	{
	}
}
[Token(Token = "0x20000C7")]
public class ActiveAnim : MonoBehaviour
{
	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool _localAuto;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TDActiveElement activeParent;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TDScene tdscene;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isIn;

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x87AF14", Offset = "0x87AF14", VA = "0x87AF14")]
	public void Start()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x87AFC8", Offset = "0x87AFC8", VA = "0x87AFC8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x87B16C", Offset = "0x87B16C", VA = "0x87B16C")]
	public ActiveAnim()
	{
	}
}
[Token(Token = "0x20000C8")]
public class ActiveColGo : MonoBehaviour
{
	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TDActiveElement activeParent;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TDScene tdscene;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool actived;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[HideInInspector]
	public bool hasexit;

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x87B174", Offset = "0x87B174", VA = "0x87B174")]
	private void Start()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x87B1EC", Offset = "0x87B1EC", VA = "0x87B1EC")]
	private void OnTriggerEnter(Collider trig)
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x87B2A8", Offset = "0x87B2A8", VA = "0x87B2A8")]
	private void OnTriggerExit(Collider trig)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x87B364", Offset = "0x87B364", VA = "0x87B364")]
	public ActiveColGo()
	{
	}
}
[Token(Token = "0x20000C9")]
public class ActiveEnableGo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000465")]
	public class Target
	{
		[Token(Token = "0x4002AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject TargetGO;

		[Token(Token = "0x6002115")]
		[Address(RVA = "0x91AA5C", Offset = "0x91AA5C", VA = "0x91AA5C")]
		public Target()
		{
		}
	}

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Target> Targets;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool _localAuto;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TDActiveElement activeParent;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TDScene tdscene;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _waiting;

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x87B36C", Offset = "0x87B36C", VA = "0x87B36C")]
	private void Start()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x87B420", Offset = "0x87B420", VA = "0x87B420")]
	private void Update()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x87B774", Offset = "0x87B774", VA = "0x87B774")]
	public ActiveEnableGo()
	{
	}
}
[Token(Token = "0x20000CA")]
public class ActiveMaterial : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000466")]
	public class Target
	{
		[Token(Token = "0x4002AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject TargetGO;

		[Token(Token = "0x4002AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material MaterialTarget;

		[Token(Token = "0x4002AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Material tmpMaterial;

		[Token(Token = "0x6002116")]
		[Address(RVA = "0x91AA64", Offset = "0x91AA64", VA = "0x91AA64")]
		public Target()
		{
		}
	}

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Target> Targets;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool OverrideMatTarget;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool Switched;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material OverrideMaterial;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool _localAuto;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TDActiveElement activeParent;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TDScene tdscene;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _waiting;

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x87B77C", Offset = "0x87B77C", VA = "0x87B77C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x87B970", Offset = "0x87B970", VA = "0x87B970")]
	private void Update()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x87BF9C", Offset = "0x87BF9C", VA = "0x87BF9C")]
	public ActiveMaterial()
	{
	}
}
[Token(Token = "0x20000CB")]
public class ActiveTransform : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000467")]
	public class Target
	{
		[Token(Token = "0x4002AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject TargetGO;

		[Token(Token = "0x4002ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 TranslateGO;

		[Token(Token = "0x4002ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion RotateGO;

		[Token(Token = "0x4002ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool Scalable;

		[Token(Token = "0x4002ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 ScaleGO;

		[Token(Token = "0x4002ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public Vector3 originalTf;

		[Token(Token = "0x4002ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Vector3 differenceSc;

		[Token(Token = "0x6002117")]
		[Address(RVA = "0x91AA6C", Offset = "0x91AA6C", VA = "0x91AA6C")]
		public Target()
		{
		}
	}

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Target> Targets;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Duration;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool done;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool _localAuto;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TDActiveElement activeParent;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _ismoving;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _timer;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _percentage;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _waitforit;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TDScene tdscene;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _isIn;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _isOut;

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x87BFA4", Offset = "0x87BFA4", VA = "0x87BFA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x87C338", Offset = "0x87C338", VA = "0x87C338")]
	private void Update()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x87C774", Offset = "0x87C774", VA = "0x87C774")]
	public ActiveTransform()
	{
	}
}
[Token(Token = "0x20000CC")]
public class TDActiveElement : MonoBehaviour
{
	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ActiveColGo ActiveCollider;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Automatic;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool AutoOnExit;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57388C", Offset = "0x57388C")]
	public bool EnableGo;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ActiveEnableGo scriptEnable;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool SwitchMaterial;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ActiveMaterial scriptMat;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool DoTransform;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ActiveTransform scriptTrans;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool DoAnimate;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ActiveAnim scriptAnim;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private TDScene tdscene;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public GameObject TrigSelected;

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xAFC910", Offset = "0xAFC910", VA = "0xAFC910")]
	private void Start()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xAFCA18", Offset = "0xAFCA18", VA = "0xAFCA18")]
	public void OnCreateCollider()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xAFCBF0", Offset = "0xAFCBF0", VA = "0xAFCBF0")]
	public TDActiveElement()
	{
	}
}
[Token(Token = "0x20000CD")]
[ExecuteInEditMode]
public class TDGroup : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000468")]
	public class Zone
	{
		[Token(Token = "0x4002AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string ZoName;

		[Token(Token = "0x4002AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TDZone ZoneGO;

		[Token(Token = "0x6002118")]
		[Address(RVA = "0x8770A8", Offset = "0x8770A8", VA = "0x8770A8")]
		public Zone()
		{
		}
	}

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Zone> Zones;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public string zonname;

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xAFCC00", Offset = "0xAFCC00", VA = "0xAFCC00")]
	public void Update()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xAFCE0C", Offset = "0xAFCE0C", VA = "0xAFCE0C")]
	public void OnDo()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xAFD510", Offset = "0xAFD510", VA = "0xAFD510")]
	public TDGroup()
	{
	}
}
[Token(Token = "0x20000CE")]
[ExecuteInEditMode]
public class TDLevel : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000469")]
	public class ZoneGroup
	{
		[Token(Token = "0x4002AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string GruName;

		[Token(Token = "0x4002AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TDGroup ZGroup;

		[Token(Token = "0x6002119")]
		[Address(RVA = "0x8770B0", Offset = "0x8770B0", VA = "0x8770B0")]
		public ZoneGroup()
		{
		}
	}

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ZoneGroup> ZoneGroups;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public string zongrup;

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xAFD564", Offset = "0xAFD564", VA = "0xAFD564")]
	public void OnDo()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xAFD6EC", Offset = "0xAFD6EC", VA = "0xAFD6EC")]
	public void Update()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xAFD8F8", Offset = "0xAFD8F8", VA = "0xAFD8F8")]
	public TDLevel()
	{
	}
}
[Token(Token = "0x20000CF")]
public class TDScene : MonoBehaviour
{
	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool tdEnabled;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider PlayerChar;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material ZTriggerMat;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material ActiveMat;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material CeilingShadow;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool isInTDZone;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public TDZone ActiveZone;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public float ActiveFloor;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool VisibleTriggers;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool OptimizeDeco;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573924", Offset = "0x573924")]
	public KeyCode ActiveKey;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float previousFloor;

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xAFD94C", Offset = "0xAFD94C", VA = "0xAFD94C")]
	private void Start()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xAFDA10", Offset = "0xAFDA10", VA = "0xAFDA10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xAFDA50", Offset = "0xAFDA50", VA = "0xAFDA50")]
	public TDScene()
	{
	}
}
[Token(Token = "0x20000D0")]
[ExecuteInEditMode]
public class TDZone : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200046A")]
	public class Floor
	{
		[Token(Token = "0x4002AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string FloorName;

		[Token(Token = "0x4002AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject FloorGO;

		[Token(Token = "0x4002AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float FloorHeight;

		[Token(Token = "0x4002AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool allwaysVisible;

		[Token(Token = "0x4002AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject StaticFloor;

		[Token(Token = "0x4002AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject DecoGO;

		[Token(Token = "0x4002ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject CShadowGO;

		[Token(Token = "0x4002ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject ActiveGO;

		[Token(Token = "0x4002ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject LightingGO;

		[Token(Token = "0x4002ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject ExteriorDeco;

		[Token(Token = "0x600211A")]
		[Address(RVA = "0x8770B8", Offset = "0x8770B8", VA = "0x8770B8")]
		public Floor()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200046B")]
	public class Trigger
	{
		[Token(Token = "0x4002ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string Zname;

		[Token(Token = "0x4002ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TDZoneTrigger ZTriger;

		[Token(Token = "0x4002AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TargetFloor;

		[Token(Token = "0x4002AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isExit;

		[Token(Token = "0x600211B")]
		[Address(RVA = "0x8770C0", Offset = "0x8770C0", VA = "0x8770C0")]
		public Trigger()
		{
		}
	}

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57395C", Offset = "0x57395C")]
	public float tritarg;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573994", Offset = "0x573994")]
	public Vector3 TrigerSize;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5739CC", Offset = "0x5739CC")]
	public List<Floor> Floors;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public string florname;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573A14", Offset = "0x573A14")]
	public List<Trigger> Triggers;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public GameObject trigfol;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public bool updated;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public GameObject trigerSelected;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public TDScene tdscene;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public bool TriggersVisibleOnEditor;

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xAFDA6C", Offset = "0xAFDA6C", VA = "0xAFDA6C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xAFDC38", Offset = "0xAFDC38", VA = "0xAFDC38")]
	public void Update()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xAFCF94", Offset = "0xAFCF94", VA = "0xAFCF94")]
	public void OnDo()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xAFE0AC", Offset = "0xAFE0AC", VA = "0xAFE0AC")]
	public void OnTrigCreate()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xAFE3A4", Offset = "0xAFE3A4", VA = "0xAFE3A4")]
	public void OnTrigUpdate()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xAFE58C", Offset = "0xAFE58C", VA = "0xAFE58C")]
	public void OnCeilingTint()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xAFF11C", Offset = "0xAFF11C", VA = "0xAFF11C")]
	public void OnStaticFloor()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xAFFC84", Offset = "0xAFFC84", VA = "0xAFFC84")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xB00284", Offset = "0xB00284", VA = "0xB00284")]
	public TDZone()
	{
	}
}
[Token(Token = "0x20000D1")]
public class TDZoneTrigger : MonoBehaviour
{
	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TDZone ParentZone;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string TriggerName;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TargetFloor;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool exiTrigger;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TDScene tdscene;

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xB002F4", Offset = "0xB002F4", VA = "0xB002F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xB003EC", Offset = "0xB003EC", VA = "0xB003EC")]
	private void OnTriggerEnter(Collider trig)
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xB00574", Offset = "0xB00574", VA = "0xB00574")]
	public TDZoneTrigger()
	{
	}
}
[Token(Token = "0x20000D2")]
public class CameraOrbit : MonoBehaviour
{
	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Target;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Distance;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float x;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float y;

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x92CBC8", Offset = "0x92CBC8", VA = "0x92CBC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x92CCB0", Offset = "0x92CCB0", VA = "0x92CCB0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x92CECC", Offset = "0x92CECC", VA = "0x92CECC")]
	private float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x92CEFC", Offset = "0x92CEFC", VA = "0x92CEFC")]
	public CameraOrbit()
	{
	}
}
[Token(Token = "0x20000D3")]
public class CameraSwitchKey : MonoBehaviour
{
	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera Cam1;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera Cam2;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode CamSwitchKey;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool UnableTopDownCam2;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool Cam2OnStart;

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x92D06C", Offset = "0x92D06C", VA = "0x92D06C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x92D290", Offset = "0x92D290", VA = "0x92D290")]
	private void Update()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x92D490", Offset = "0x92D490", VA = "0x92D490")]
	public CameraSwitchKey()
	{
	}
}
[Token(Token = "0x20000D4")]
public class CharControlSimple : MonoBehaviour
{
	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573A9C", Offset = "0x573A9C")]
	public float WalkSpeed;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public KeyCode RunKey;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float RunSpeed;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float RotateSpeed;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float JumpSpeed;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Gravity;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool Invisible;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public KeyCode InvisibleKey;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public KeyCode LightKey;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject LightFocus;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool CameraFollow;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public KeyCode FollowKey;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573AD4", Offset = "0x573AD4")]
	public CharacterController Charcon;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject jumpEffect;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject Camera;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject CharacterMesh;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 CamRot;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 Jander;

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x92DBD0", Offset = "0x92DBD0", VA = "0x92DBD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x92DC98", Offset = "0x92DC98", VA = "0x92DC98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x92E06C", Offset = "0x92E06C", VA = "0x92E06C")]
	public CharControlSimple()
	{
	}
}
[Token(Token = "0x20000D5")]
public class LightTilt : MonoBehaviour
{
	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Tempo;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool EnableIntensity;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float RandomIntensity;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Fluctuation;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float OriginalInt;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float TiltInt;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float Tmp;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool EnableMovement;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float MovFluct;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float PositionRandom;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float RangeFluct;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 OriginalPos;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float OriginalRan;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float TiltMovx;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float TiltMovy;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float TiltMovz;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool EnableColorChange;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color TiltColor;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Color OriginalColor;

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xA3BD10", Offset = "0xA3BD10", VA = "0xA3BD10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xA3BDDC", Offset = "0xA3BDDC", VA = "0xA3BDDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xA3C070", Offset = "0xA3C070", VA = "0xA3C070")]
	public LightTilt()
	{
	}
}
[Token(Token = "0x20000D6")]
public class OnTriggerActivator : MonoBehaviour
{
	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider Activator;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> TargetGO;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool Once;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool done;

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xF8A540", Offset = "0xF8A540", VA = "0xF8A540")]
	private void OnTriggerEnter(Collider Col)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xF8A7C8", Offset = "0xF8A7C8", VA = "0xF8A7C8")]
	public OnTriggerActivator()
	{
	}
}
[Token(Token = "0x20000D7")]
[ExecuteInEditMode]
public class Compass : MonoBehaviour
{
	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Target;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 RotationIntensity;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool continuous;

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xA0CF44", Offset = "0xA0CF44", VA = "0xA0CF44")]
	private void Start()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xA0D08C", Offset = "0xA0D08C", VA = "0xA0D08C")]
	private void Update()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xA0D1D4", Offset = "0xA0D1D4", VA = "0xA0D1D4")]
	public Compass()
	{
	}
}
[Token(Token = "0x20000D8")]
public class CompassCamera : MonoBehaviour
{
	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Target;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 RotationIntensity;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool continuous;

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xA0D1F4", Offset = "0xA0D1F4", VA = "0xA0D1F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xA0D33C", Offset = "0xA0D33C", VA = "0xA0D33C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xA0D484", Offset = "0xA0D484", VA = "0xA0D484")]
	public CompassCamera()
	{
	}
}
[Token(Token = "0x20000D9")]
public class TagControl : MonoBehaviour
{
	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573B0C", Offset = "0x573B0C")]
	public Color GlowColor;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color WaitColor;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float WaitIntensity;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float SelectIntensity;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool GlowFadeIn;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool GlowFadeOut;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool TrackCamera;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool SmoothFollow;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573B44", Offset = "0x573B44")]
	public bool WaitStartAnim;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float TimeDelay;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool CheckOnUpdate;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573B7C", Offset = "0x573B7C")]
	public Animation TargetAnimation;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationClip StartAnim;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationClip EndAnim;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Renderer GlowMesh1;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Renderer GlowMesh2;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material MaterialGlow1;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material MaterialGlow2;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject EnabledParts;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Collider TargetCollider;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Collider PlayerCollider;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float timer;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float timerstart;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Material mat1;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Material mat2;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool colliding;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool waiting;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	private bool ready;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float glowint;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Quaternion rotor;

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xB0057C", Offset = "0xB0057C", VA = "0xB0057C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xB00658", Offset = "0xB00658", VA = "0xB00658")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xB0088C", Offset = "0xB0088C", VA = "0xB0088C")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xB00918", Offset = "0xB00918", VA = "0xB00918")]
	private void Update()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xB012F4", Offset = "0xB012F4", VA = "0xB012F4")]
	public TagControl()
	{
	}
}
[Token(Token = "0x20000DA")]
public class TagInfo : MonoBehaviour
{
	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573BB4", Offset = "0x573BB4")]
	public TextMesh AssetName;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh PrefabName;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh Location;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh LOD0;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh LOD1;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh LOD2;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh MainMapSize;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh SecondMapSize;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMesh Number;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMesh Comments;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573BEC", Offset = "0x573BEC")]
	public GameObject CompassRotator;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject CompassTargetTag;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573C24", Offset = "0x573C24")]
	public GameObject CircleLod0;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject CircleLod1;

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xB01354", Offset = "0xB01354", VA = "0xB01354")]
	public TagInfo()
	{
	}
}
[Token(Token = "0x20000DB")]
[ExecuteInEditMode]
public class TagsMain : MonoBehaviour
{
	[Token(Token = "0x200046C")]
	public enum TextureSize
	{
		[Token(Token = "0x4002AD3")]
		_None,
		[Token(Token = "0x4002AD4")]
		_32,
		[Token(Token = "0x4002AD5")]
		_64,
		[Token(Token = "0x4002AD6")]
		_128,
		[Token(Token = "0x4002AD7")]
		_256,
		[Token(Token = "0x4002AD8")]
		_512,
		[Token(Token = "0x4002AD9")]
		_1024,
		[Token(Token = "0x4002ADA")]
		_2048,
		[Token(Token = "0x4002ADB")]
		_4096,
		[Token(Token = "0x4002ADC")]
		_8K,
		[Token(Token = "0x4002ADD")]
		_16k
	}

	[Serializable]
	[Token(Token = "0x200046D")]
	public class Prefab
	{
		[Token(Token = "0x4002ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58DA38", Offset = "0x58DA38")]
		public string PrefabOrder;

		[Token(Token = "0x4002ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x4002AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject TagInfo;

		[Token(Token = "0x4002AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject ReferenceGO;

		[Token(Token = "0x4002AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject AssetPrefab;

		[Token(Token = "0x4002AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject Category;

		[Token(Token = "0x4002AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float Lod0Tricount;

		[Token(Token = "0x4002AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float Lod1Tricount;

		[Token(Token = "0x4002AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float Lod2Tricount;

		[Token(Token = "0x4002AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public TextureSize MainMaps;

		[Token(Token = "0x4002AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextureSize SecondaryMaps;

		[Token(Token = "0x4002AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Multiline]
		public string AdditionalInfo;

		[Token(Token = "0x4002AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58DA80", Offset = "0x58DA80")]
		public bool ShowCirce;

		[Token(Token = "0x4002AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool TargetCompass;

		[Token(Token = "0x4002AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool TagsInPosition;

		[Token(Token = "0x4002AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool TagOrderNum;

		[Token(Token = "0x4002AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string TagNotes;

		[Token(Token = "0x600211C")]
		[Address(RVA = "0x8770C8", Offset = "0x8770C8", VA = "0x8770C8")]
		public Prefab()
		{
		}
	}

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573C5C", Offset = "0x573C5C")]
	public List<Prefab> PrefabList;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573C94", Offset = "0x573C94")]
	public string AssetPackName;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool CheckOnUpdate;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool SceneGOTags;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool ShowTargetTags;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573CCC", Offset = "0x573CCC")]
	public Texture PackIcon;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool UseIcon;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color MainColor;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Color SecondaryColor;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x573D04", Offset = "0x573D04")]
	public float EmissionLevel;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material TagMaterial;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material GlowMaterial;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material IconMaterial;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573D1C", Offset = "0x573D1C")]
	public Color32 _1k;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Color32 _3k;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color32 _5k;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Color32 _10k;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color32 _20k;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Color32 _30k;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Color32 _50k;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Color32 _more;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Color32 _tagmat;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Color32 _glowmat;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Texture _oldicon;

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xB0135C", Offset = "0xB0135C", VA = "0xB0135C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xB013D0", Offset = "0xB013D0", VA = "0xB013D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xB04104", Offset = "0xB04104", VA = "0xB04104")]
	private void Exit()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xB04174", Offset = "0xB04174", VA = "0xB04174")]
	public TagsMain()
	{
	}
}
[Token(Token = "0x20000DC")]
public class BuildingControl : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200046E")]
	public class Target
	{
		[Token(Token = "0x4002AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string FloorName;

		[Token(Token = "0x4002AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject TargetGo;

		[Token(Token = "0x4002AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int FloorNum;

		[Token(Token = "0x4002AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool AllFloors;

		[Token(Token = "0x4002AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject PropsGroup;

		[Token(Token = "0x4002AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject CeilingShadow;

		[Token(Token = "0x600211D")]
		[Address(RVA = "0x91B1C0", Offset = "0x91B1C0", VA = "0x91B1C0")]
		public Target()
		{
		}
	}

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string BuildingName;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool CheapDecoration;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public TownManager TownManagerScript;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int ActualFloor;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int PreviousTest;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Target> Floors;

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x92A160", Offset = "0x92A160", VA = "0x92A160")]
	private void Start()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x92A2B0", Offset = "0x92A2B0", VA = "0x92A2B0")]
	private void Update()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x92A830", Offset = "0x92A830", VA = "0x92A830")]
	public BuildingControl()
	{
	}
}
[Token(Token = "0x20000DD")]
public class SceneControl : MonoBehaviour
{
	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573D94", Offset = "0x573D94")]
	public Light SunLight;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material SkyBackground;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource BackgroundMusic;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Fxs;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public KeyCode EnableFx;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573DCC", Offset = "0x573DCC")]
	public TownManager Town;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Collider PlayerCharacter;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool EnableCameraMode;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject FPSCamera;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject TopDownCamera;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool TopDownMode;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573E04", Offset = "0x573E04")]
	public KeyCode CameraSwitchKey;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public KeyCode HelpKey;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public KeyCode DecoCheap;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public KeyCode DoorKey;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text LocationGUI;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text CameraGUI;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text HelpText;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Slider VolSlider;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Slider SunRotation;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Slider SunIntensity;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Texture2D myCursor;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector2 hotSopot;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float k;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[HideInInspector]
	public bool FPSMode;

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x8C5A1C", Offset = "0x8C5A1C", VA = "0x8C5A1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x8C5BEC", Offset = "0x8C5BEC", VA = "0x8C5BEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x8C6160", Offset = "0x8C6160", VA = "0x8C6160")]
	public SceneControl()
	{
	}
}
[Token(Token = "0x20000DE")]
[ExecuteInEditMode]
public class TownManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200046F")]
	public class Building
	{
		[Token(Token = "0x4002AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string Name;

		[Token(Token = "0x4002AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuildingControl BuildingTarget;

		[Token(Token = "0x4002AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool CheapDecoration;

		[Token(Token = "0x600211E")]
		[Address(RVA = "0x878B14", Offset = "0x878B14", VA = "0x878B14")]
		public Building()
		{
		}
	}

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573E4C", Offset = "0x573E4C")]
	public bool EnableTownControl;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool CheapDecoration;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool OverrideLocalSett;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Building> Buildings;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public string PlayerLocation;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Collider PlayerCollider;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public int ActualFloor;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool FPSMode;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public KeyCode DoorKeyCode;

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xA27594", Offset = "0xA27594", VA = "0xA27594")]
	private void Start()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xA27614", Offset = "0xA27614", VA = "0xA27614")]
	private void Update()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xA27844", Offset = "0xA27844", VA = "0xA27844")]
	public TownManager()
	{
	}
}
[Token(Token = "0x20000DF")]
public class ActivateGO : MonoBehaviour
{
	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573ED4", Offset = "0x573ED4")]
	public TownManager ManagerScript;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> TargetGO;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject GOnTrigger;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573F0C", Offset = "0x573F0C")]
	public bool OverrideScene;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool Enable;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public KeyCode UnlockKey;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider _activator;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _iscolliding;

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x87A598", Offset = "0x87A598", VA = "0x87A598")]
	private void Start()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x87A744", Offset = "0x87A744", VA = "0x87A744")]
	private void OnTriggerEnter(Collider trig)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x87A820", Offset = "0x87A820", VA = "0x87A820")]
	private void OnTriggerExit(Collider trig)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x87A8E4", Offset = "0x87A8E4", VA = "0x87A8E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x87AA8C", Offset = "0x87AA8C", VA = "0x87AA8C")]
	public ActivateGO()
	{
	}
}
[Token(Token = "0x20000E0")]
public class AnimateGOTrigger : MonoBehaviour
{
	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573F54", Offset = "0x573F54")]
	public TownManager ManagerScript;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject GoTarget;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573F8C", Offset = "0x573F8C")]
	public bool Locked;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool AutoAnim;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public KeyCode UnlockKey;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider _activator;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _iscolliding;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Animator animator;

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x881320", Offset = "0x881320", VA = "0x881320")]
	private void Start()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x8813B8", Offset = "0x8813B8", VA = "0x8813B8")]
	private void OnTriggerEnter(Collider trig)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x88155C", Offset = "0x88155C", VA = "0x88155C")]
	private void OnTriggerExit(Collider trig)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x881680", Offset = "0x881680", VA = "0x881680")]
	private void Update()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x88176C", Offset = "0x88176C", VA = "0x88176C")]
	public AnimateGOTrigger()
	{
	}
}
[Token(Token = "0x20000E1")]
public class BuildingTrigger : MonoBehaviour
{
	[Token(Token = "0x2000470")]
	public enum Direction
	{
		[Token(Token = "0x4002AF9")]
		RiseUpFloor,
		[Token(Token = "0x4002AFA")]
		StayOnFloor,
		[Token(Token = "0x4002AFB")]
		DownFloor
	}

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573FE4", Offset = "0x573FE4")]
	public BuildingControl Building;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57401C", Offset = "0x57401C")]
	public int FloorLevel;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int TargetFloor;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574054", Offset = "0x574054")]
	public bool Dynamic;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Direction FloorMovement;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool Allvisible;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TownManager TownManagerScript;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider Activator;

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x92A884", Offset = "0x92A884", VA = "0x92A884")]
	private void Start()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x92A900", Offset = "0x92A900", VA = "0x92A900")]
	private void OnTriggerEnter(Collider trig)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x92AE60", Offset = "0x92AE60", VA = "0x92AE60")]
	public BuildingTrigger()
	{
	}
}
[Token(Token = "0x20000E2")]
public class PushTrigger : MonoBehaviour
{
	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57409C", Offset = "0x57409C")]
	public TownManager ManagerScript;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform DoorHinge;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5740D4", Offset = "0x5740D4")]
	public bool opened;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Percentage;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool auto;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57410C", Offset = "0x57410C")]
	public Vector3 XYZDisplacement;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Quaternion Rotation;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float Duration;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x574144", Offset = "0x574144")]
	[HideInInspector]
	public KeyCode UnlockKey;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider _activator;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _timer;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _iscolliding;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool _ismoving;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _percentage;

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xC6EC20", Offset = "0xC6EC20", VA = "0xC6EC20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xC6ECC4", Offset = "0xC6ECC4", VA = "0xC6ECC4")]
	private void OnTriggerEnter(Collider trig)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xC6ED8C", Offset = "0xC6ED8C", VA = "0xC6ED8C")]
	private void OnTriggerExit(Collider trig)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xC6EE3C", Offset = "0xC6EE3C", VA = "0xC6EE3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xC6F2B4", Offset = "0xC6F2B4", VA = "0xC6F2B4")]
	public PushTrigger()
	{
	}
}
[Token(Token = "0x20000E3")]
public class SetMaterialGO : MonoBehaviour
{
	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574188", Offset = "0x574188")]
	public TownManager ManagerScript;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> SwitchGO;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5741C0", Offset = "0x5741C0")]
	public Material OriginalMaterial;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material SwitchedMaterial;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool EnableSwitch;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public KeyCode UnlockKey;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider _activator;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _iscolliding;

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x8C9000", Offset = "0x8C9000", VA = "0x8C9000")]
	private void Start()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x8C91DC", Offset = "0x8C91DC", VA = "0x8C91DC")]
	private void OnTriggerEnter(Collider trig)
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x8C92A4", Offset = "0x8C92A4", VA = "0x8C92A4")]
	private void OnTriggerExit(Collider trig)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x8C9354", Offset = "0x8C9354", VA = "0x8C9354")]
	private void Update()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x8C960C", Offset = "0x8C960C", VA = "0x8C960C")]
	public SetMaterialGO()
	{
	}
}
namespace UnityStandardAssets.SceneUtils
{
	[Token(Token = "0x20000E4")]
	public class ParticleSceneControls : MonoBehaviour
	{
		[Token(Token = "0x2000471")]
		public enum Mode
		{
			[Token(Token = "0x4002AFD")]
			Activate,
			[Token(Token = "0x4002AFE")]
			Instantiate,
			[Token(Token = "0x4002AFF")]
			Trail
		}

		[Token(Token = "0x2000472")]
		public enum AlignMode
		{
			[Token(Token = "0x4002B01")]
			Normal,
			[Token(Token = "0x4002B02")]
			Up
		}

		[Serializable]
		[Token(Token = "0x2000473")]
		public class DemoParticleSystem
		{
			[Token(Token = "0x4002B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4002B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Mode mode;

			[Token(Token = "0x4002B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public AlignMode align;

			[Token(Token = "0x4002B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int maxCount;

			[Token(Token = "0x4002B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float minDist;

			[Token(Token = "0x4002B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int camOffset;

			[Token(Token = "0x4002B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string instructionText;

			[Token(Token = "0x600211F")]
			[Address(RVA = "0x8689C0", Offset = "0x8689C0", VA = "0x8689C0")]
			public DemoParticleSystem()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000474")]
		public class DemoParticleSystemList
		{
			[Token(Token = "0x4002B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DemoParticleSystem[] items;

			[Token(Token = "0x6002120")]
			[Address(RVA = "0x8689D0", Offset = "0x8689D0", VA = "0x8689D0")]
			public DemoParticleSystemList()
			{
			}
		}

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoParticleSystemList demoParticles;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float spawnOffset;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float multiply;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool clearOnChange;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text titleText;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform sceneCamera;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text instructionText;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button previousButton;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Button nextButton;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GraphicRaycaster graphicRaycaster;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public EventSystem eventSystem;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ParticleSystemMultiplier m_ParticleMultiplier;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Transform> m_CurrentParticleList;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform m_Instance;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int s_SelectedIndex;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_CamOffsetVelocity;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 m_LastPos;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static DemoParticleSystem s_Selected;

		[Token(Token = "0x600038C")]
		[Address(RVA = "0xFD4EEC", Offset = "0xFD4EEC", VA = "0xFD4EEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600038D")]
		[Address(RVA = "0xFD5370", Offset = "0xFD5370", VA = "0xFD5370")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0xFD545C", Offset = "0xFD545C", VA = "0xFD545C")]
		private void Previous()
		{
		}

		[Token(Token = "0x600038F")]
		[Address(RVA = "0xFD554C", Offset = "0xFD554C", VA = "0xFD554C")]
		public void Next()
		{
		}

		[Token(Token = "0x6000390")]
		[Address(RVA = "0xFD5630", Offset = "0xFD5630", VA = "0xFD5630")]
		private void Update()
		{
		}

		[Token(Token = "0x6000391")]
		[Address(RVA = "0xFD5D54", Offset = "0xFD5D54", VA = "0xFD5D54")]
		private bool CheckForGuiCollision()
		{
			return default(bool);
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0xFD5018", Offset = "0xFD5018", VA = "0xFD5018")]
		private void Select(int i)
		{
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0xFD5E58", Offset = "0xFD5E58", VA = "0xFD5E58")]
		public ParticleSceneControls()
		{
		}
	}
	[Token(Token = "0x20000E5")]
	public class PlaceTargetWithMouse : MonoBehaviour
	{
		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float surfaceOffset;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject setTargetOn;

		[Token(Token = "0x6000395")]
		[Address(RVA = "0xDC9380", Offset = "0xDC9380", VA = "0xDC9380")]
		private void Update()
		{
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0xDC9518", Offset = "0xDC9518", VA = "0xDC9518")]
		public PlaceTargetWithMouse()
		{
		}
	}
	[Token(Token = "0x20000E6")]
	public class SlowMoButton : MonoBehaviour
	{
		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite FullSpeedTex;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite SlowSpeedTex;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fullSpeed;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float slowSpeed;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button button;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_SlowMo;

		[Token(Token = "0x6000397")]
		[Address(RVA = "0x8CDB5C", Offset = "0x8CDB5C", VA = "0x8CDB5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0x8CDB64", Offset = "0x8CDB64", VA = "0x8CDB64")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0x8CDB70", Offset = "0x8CDB70", VA = "0x8CDB70")]
		public void ChangeSpeed()
		{
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0x8CDCA0", Offset = "0x8CDCA0", VA = "0x8CDCA0")]
		public SlowMoButton()
		{
		}
	}
}
namespace RayFire
{
	[Serializable]
	[Token(Token = "0x20000E7")]
	public class RFFace
	{
		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float area;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 pos;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 normal;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<int> tris;

		[Token(Token = "0x600039B")]
		[Address(RVA = "0xF630DC", Offset = "0xF630DC", VA = "0xF630DC")]
		public RFFace(int Id, float Area, Vector3 Normal)
		{
		}

		[Token(Token = "0x600039C")]
		[Address(RVA = "0xF63194", Offset = "0xF63194", VA = "0xF63194")]
		private List<RFFace> GetFaces(List<RFTriangle> Triangles)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20000E8")]
	public class RFTriangle
	{
		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float area;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 normal;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 pos;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<int> neibs;

		[Token(Token = "0x600039D")]
		[Address(RVA = "0xC4AC3C", Offset = "0xC4AC3C", VA = "0xC4AC3C")]
		public RFTriangle(int Id, float Area, Vector3 Normal, Vector3 Pos)
		{
		}

		[Token(Token = "0x600039E")]
		[Address(RVA = "0xC42D28", Offset = "0xC42D28", VA = "0xC42D28")]
		public static void SetTriangles(RFShard shard, MeshFilter mf)
		{
		}

		[Token(Token = "0x600039F")]
		[Address(RVA = "0xC43F14", Offset = "0xC43F14", VA = "0xC43F14")]
		public static void Clear(RFShard shard)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000E9")]
	public class RFManDemolition
	{
		[Token(Token = "0x2000475")]
		public enum FragmentParentType
		{
			[Token(Token = "0x4002B0C")]
			Manager,
			[Token(Token = "0x4002B0D")]
			Parent
		}

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574208", Offset = "0x574208")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574208", Offset = "0x574208")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x574208", Offset = "0x574208")]
		public FragmentParentType parent;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57427C", Offset = "0x57427C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57427C", Offset = "0x57427C")]
		public int maximumAmount;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5742CC", Offset = "0x5742CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5742CC", Offset = "0x5742CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5742CC", Offset = "0x5742CC")]
		public int badMeshTry;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574334", Offset = "0x574334")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574334", Offset = "0x574334")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x574334", Offset = "0x574334")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x574334", Offset = "0x574334")]
		public float sizeThreshold;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public int currentAmount;

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0xF699E0", Offset = "0xF699E0", VA = "0xF699E0")]
		public RFManDemolition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000EA")]
	public class RFMaterial
	{
		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string name;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5743D0", Offset = "0x5743D0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5743D0", Offset = "0x5743D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5743D0", Offset = "0x5743D0")]
		public bool destructible;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574444", Offset = "0x574444")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x574444", Offset = "0x574444")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x574444", Offset = "0x574444")]
		public int solidity;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5744B4", Offset = "0x5744B4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5744B4", Offset = "0x5744B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5744B4", Offset = "0x5744B4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5744B4", Offset = "0x5744B4")]
		public float density;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574548", Offset = "0x574548")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x574548", Offset = "0x574548")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x574548", Offset = "0x574548")]
		public float drag;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5745B0", Offset = "0x5745B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5745B0", Offset = "0x5745B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5745B0", Offset = "0x5745B0")]
		public float angularDrag;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574618", Offset = "0x574618")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574618", Offset = "0x574618")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x574618", Offset = "0x574618")]
		public PhysicMaterial material;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57468C", Offset = "0x57468C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57468C", Offset = "0x57468C")]
		public float dynamicFriction;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5746D4", Offset = "0x5746D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5746D4", Offset = "0x5746D4")]
		public float staticFriction;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57471C", Offset = "0x57471C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57471C", Offset = "0x57471C")]
		public float bounciness;

		[Token(Token = "0x17000010")]
		public PhysicMaterial Material
		{
			[Token(Token = "0x60003A2")]
			[Address(RVA = "0xF69A88", Offset = "0xF69A88", VA = "0xF69A88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0xF69A00", Offset = "0xF69A00", VA = "0xF69A00")]
		public RFMaterial(string Name, float Density, float Drag, float AngularDrag, int Solidity, bool Destructible, float DynFriction, float StFriction, float Bounce)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000EB")]
	public class RFMaterialPresets
	{
		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RFMaterial heavyMetal;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RFMaterial lightMetal;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RFMaterial denseRock;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RFMaterial porousRock;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RFMaterial concrete;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RFMaterial brick;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RFMaterial glass;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public RFMaterial rubber;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RFMaterial ice;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public RFMaterial wood;

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0xF69B3C", Offset = "0xF69B3C", VA = "0xF69B3C")]
		public RFMaterialPresets()
		{
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0xF69FAC", Offset = "0xF69FAC", VA = "0xF69FAC")]
		public void SetMaterials()
		{
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0xF6A2F4", Offset = "0xF6A2F4", VA = "0xF6A2F4")]
		public float Density(MaterialType materialType)
		{
			return default(float);
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0xF6A3A4", Offset = "0xF6A3A4", VA = "0xF6A3A4")]
		public float Drag(MaterialType materialType)
		{
			return default(float);
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0xF6A454", Offset = "0xF6A454", VA = "0xF6A454")]
		public float AngularDrag(MaterialType materialType)
		{
			return default(float);
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0xF6A508", Offset = "0xF6A508", VA = "0xF6A508")]
		public int Solidity(MaterialType materialType)
		{
			return default(int);
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0xF6A5B8", Offset = "0xF6A5B8", VA = "0xF6A5B8")]
		public bool Destructible(MaterialType materialType)
		{
			return default(bool);
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0xF6A670", Offset = "0xF6A670", VA = "0xF6A670")]
		public static PhysicMaterial Material(MaterialType materialType)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20000EC")]
	public class RFPoolingParticles
	{
		[Token(Token = "0x2000476")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572898", Offset = "0x572898")]
		private sealed class <StartPoolingCor>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RFPoolingParticles <>4__this;

			[Token(Token = "0x4002B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform manTm;

			[Token(Token = "0x4002B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WaitForSeconds <delay>5__2;

			[Token(Token = "0x17000376")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002124")]
				[Address(RVA = "0x86D4C0", Offset = "0x86D4C0", VA = "0x86D4C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000377")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002126")]
				[Address(RVA = "0x86D508", Offset = "0x86D508", VA = "0x86D508", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002121")]
			[Address(RVA = "0x86D2F4", Offset = "0x86D2F4", VA = "0x86D2F4")]
			[DebuggerHidden]
			public <StartPoolingCor>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002122")]
			[Address(RVA = "0x86D320", Offset = "0x86D320", VA = "0x86D320", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002123")]
			[Address(RVA = "0x86D324", Offset = "0x86D324", VA = "0x86D324", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002125")]
			[Address(RVA = "0x86D4C8", Offset = "0x86D4C8", VA = "0x86D4C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enable;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x574764", Offset = "0x574764")]
		public int capacity;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public int poolRate;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public ParticleSystem poolInstance;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Transform poolRoot;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<ParticleSystem> poolList;

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0xC3EDD4", Offset = "0xC3EDD4", VA = "0xC3EDD4")]
		public RFPoolingParticles()
		{
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0xC3EDF0", Offset = "0xC3EDF0", VA = "0xC3EDF0")]
		public void CreatePoolRoot(Transform manTm)
		{
		}

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0xC3EF0C", Offset = "0xC3EF0C", VA = "0xC3EF0C")]
		public void CreateInstance(Transform manTm)
		{
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0xC3F024", Offset = "0xC3F024", VA = "0xC3F024")]
		public static ParticleSystem CreateParticleInstance()
		{
			return null;
		}

		[Token(Token = "0x60003AF")]
		[Address(RVA = "0xC3F0DC", Offset = "0xC3F0DC", VA = "0xC3F0DC")]
		public ParticleSystem GetPoolObject(Transform manTm)
		{
			return null;
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0xC3F18C", Offset = "0xC3F18C", VA = "0xC3F18C")]
		private ParticleSystem CreatePoolObject(Transform manTm)
		{
			return null;
		}

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0xC3F254", Offset = "0xC3F254", VA = "0xC3F254")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58F1C0", Offset = "0x58F1C0")]
		public IEnumerator StartPoolingCor(Transform manTm)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20000ED")]
	public class RFPoolingFragment
	{
		[Token(Token = "0x2000477")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5728A8", Offset = "0x5728A8")]
		private sealed class <StartPoolingCor>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RFPoolingFragment <>4__this;

			[Token(Token = "0x4002B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform manTm;

			[Token(Token = "0x4002B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WaitForSeconds <delay>5__2;

			[Token(Token = "0x17000378")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600212A")]
				[Address(RVA = "0x86D2A4", Offset = "0x86D2A4", VA = "0x86D2A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000379")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600212C")]
				[Address(RVA = "0x86D2EC", Offset = "0x86D2EC", VA = "0x86D2EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002127")]
			[Address(RVA = "0x86D0DC", Offset = "0x86D0DC", VA = "0x86D0DC")]
			[DebuggerHidden]
			public <StartPoolingCor>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002128")]
			[Address(RVA = "0x86D108", Offset = "0x86D108", VA = "0x86D108", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002129")]
			[Address(RVA = "0x86D10C", Offset = "0x86D10C", VA = "0x86D10C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600212B")]
			[Address(RVA = "0x86D2AC", Offset = "0x86D2AC", VA = "0x86D2AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enable;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5747C0", Offset = "0x5747C0")]
		public int capacity;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public int poolRate;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public RayfireRigid poolInstance;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Transform poolRoot;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<RayfireRigid> poolList;

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0xC3E7E4", Offset = "0xC3E7E4", VA = "0xC3E7E4")]
		public RFPoolingFragment()
		{
		}

		[Token(Token = "0x60003B3")]
		[Address(RVA = "0xC3E800", Offset = "0xC3E800", VA = "0xC3E800")]
		public void CreatePoolRoot(Transform manTm)
		{
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0xC3E91C", Offset = "0xC3E91C", VA = "0xC3E91C")]
		public void CreateInstance(Transform manTm)
		{
		}

		[Token(Token = "0x60003B5")]
		[Address(RVA = "0xC3EA20", Offset = "0xC3EA20", VA = "0xC3EA20")]
		public static RayfireRigid CreateRigidInstance()
		{
			return null;
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0xC3EBE8", Offset = "0xC3EBE8", VA = "0xC3EBE8")]
		public RayfireRigid GetPoolObject(Transform manTm)
		{
			return null;
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0xC3EC94", Offset = "0xC3EC94", VA = "0xC3EC94")]
		private RayfireRigid CreatePoolObject(Transform manTm)
		{
			return null;
		}

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0xC3ED5C", Offset = "0xC3ED5C", VA = "0xC3ED5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58F220", Offset = "0x58F220")]
		public IEnumerator StartPoolingCor(Transform manTm)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20000EE")]
	public class RFCluster : IComparable<RFCluster>
	{
		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform tm;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public int depth;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public Vector3 pos;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Quaternion rot;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Bounds bound;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public bool demolishable;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public RayfireRigid rigid;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public List<RFShard> shards;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public float areaCollapse;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public float minimumArea;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public float maximumArea;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public float sizeCollapse;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public float minimumSize;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[HideInInspector]
		public float maximumSize;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public int randomCollapse;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[HideInInspector]
		public int randomSeed;

		[NonSerialized]
		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool initialized;

		[NonSerialized]
		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public RFCluster mainCluster;

		[NonSerialized]
		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<RFCluster> childClusters;

		[NonSerialized]
		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<RFCluster> neibClusters;

		[NonSerialized]
		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<float> neibArea;

		[NonSerialized]
		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<float> neibPerc;

		[NonSerialized]
		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<RFShard> checkShards;

		[NonSerialized]
		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<RFShard> newClusterShards;

		[Token(Token = "0x17000011")]
		public bool HasChildClusters
		{
			[Token(Token = "0x60003CC")]
			[Address(RVA = "0xC755A8", Offset = "0xC755A8", VA = "0xC755A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000012")]
		public bool UnyieldingByShard
		{
			[Token(Token = "0x60003CD")]
			[Address(RVA = "0xC77CA8", Offset = "0xC77CA8", VA = "0xC77CA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000013")]
		public bool UnyieldingByRigid
		{
			[Token(Token = "0x60003CE")]
			[Address(RVA = "0xC77D54", Offset = "0xC77D54", VA = "0xC77D54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60003B9")]
		[Address(RVA = "0xC75824", Offset = "0xC75824", VA = "0xC75824")]
		public RFCluster()
		{
		}

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0xC73828", Offset = "0xC73828", VA = "0xC73828")]
		public RFCluster(RFCluster source)
		{
		}

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0xC75908", Offset = "0xC75908", VA = "0xC75908", Slot = "4")]
		public int CompareTo(RFCluster otherCluster)
		{
			return default(int);
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0xC73B68", Offset = "0xC73B68", VA = "0xC73B68")]
		public static void InitCluster(RayfireRigid scr, RFCluster cluster)
		{
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0xC7598C", Offset = "0xC7598C", VA = "0xC7598C")]
		private static void UnfoldNestedCluster(RayfireRigid scr, RFCluster cluster)
		{
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0xC75C98", Offset = "0xC75C98", VA = "0xC75C98")]
		public static void ConnectivityUnyCheck(RFCluster cluster)
		{
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0xC76474", Offset = "0xC76474", VA = "0xC76474")]
		public static void ConnectivityCheck(RFCluster cluster)
		{
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0xC761CC", Offset = "0xC761CC", VA = "0xC761CC")]
		public static void NewClusterByShards(RFCluster mainCLuster, List<RFShard> shards)
		{
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0xC769B8", Offset = "0xC769B8", VA = "0xC769B8")]
		public void AddChildCluster(RFCluster cluster)
		{
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0xC76338", Offset = "0xC76338", VA = "0xC76338")]
		public static void ReduceChildClusters(RFCluster cluster)
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0xC76B6C", Offset = "0xC76B6C", VA = "0xC76B6C")]
		public static Bounds GetChildrenBound(Transform tm)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0xC77288", Offset = "0xC77288", VA = "0xC77288")]
		public static Bounds GetClusterBound(RFCluster cluster)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0xC76D0C", Offset = "0xC76D0C", VA = "0xC76D0C")]
		public static Bounds GetBoundsBound(List<Bounds> bounds)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0xC7746C", Offset = "0xC7746C", VA = "0xC7746C")]
		public static Bounds GetShardsBound(List<RFShard> shards)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0xC76A64", Offset = "0xC76A64", VA = "0xC76A64")]
		public static int GetBiggestCluster(List<RFCluster> clusters)
		{
			return default(int);
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0xC77924", Offset = "0xC77924", VA = "0xC77924")]
		public static void GetSoloShards(RFCluster cluster, List<RFShard> soloShards)
		{
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0xC768E4", Offset = "0xC768E4", VA = "0xC768E4")]
		public static int GetUniqClusterId(RFCluster cluster)
		{
			return default(int);
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0xC77A8C", Offset = "0xC77A8C", VA = "0xC77A8C")]
		public static bool IntegrityCheck(RFCluster cluster)
		{
			return default(bool);
		}

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0xC77B84", Offset = "0xC77B84", VA = "0xC77B84")]
		public static void CreateClusterRoot(RFCluster cluster, Vector3 pos, Quaternion rot, int layer, string tag, string nm)
		{
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0xC77E10", Offset = "0xC77E10", VA = "0xC77E10")]
		private List<RFShard> GetNestedShards(bool OwnShards = false)
		{
			return null;
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0xC77FD0", Offset = "0xC77FD0", VA = "0xC77FD0")]
		public List<RFCluster> GetNestedClusters()
		{
			return null;
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0xC78114", Offset = "0xC78114", VA = "0xC78114")]
		private bool TrisNeib(RFCluster otherCluster)
		{
			return default(bool);
		}

		[Token(Token = "0x60003D2")]
		[Address(RVA = "0xC784C8", Offset = "0xC784C8", VA = "0xC784C8")]
		private float NeibArea(RFCluster otherCluster)
		{
			return default(float);
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0xC788A8", Offset = "0xC788A8", VA = "0xC788A8")]
		public int GetNeibIndArea([Optional] List<RFCluster> clusterList)
		{
			return default(int);
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0xC789F4", Offset = "0xC789F4", VA = "0xC789F4")]
		public static void SetClusterNeib(List<RFCluster> clusters, bool connectivity)
		{
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0xC791A0", Offset = "0xC791A0", VA = "0xC791A0")]
		public static RFCluster GetNeibClusterArea(List<RFCluster> clusters, List<RFCluster> clusterList)
		{
			return null;
		}
	}
	[Token(Token = "0x20000EF")]
	public class RFEvent
	{
		[Token(Token = "0x2000478")]
		public delegate void EventAction(RayfireRigid rigid);

		[Token(Token = "0x14000001")]
		public event EventAction LocalEvent
		{
			[Token(Token = "0x60003D6")]
			[Address(RVA = "0xF62C60", Offset = "0xF62C60", VA = "0xF62C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58F280", Offset = "0x58F280")]
			add
			{
			}
			[Token(Token = "0x60003D7")]
			[Address(RVA = "0xF62D00", Offset = "0xF62D00", VA = "0xF62D00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58F290", Offset = "0x58F290")]
			remove
			{
			}
		}

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0xF622F0", Offset = "0xF622F0", VA = "0xF622F0")]
		public void InvokeLocalEvent(RayfireRigid rigid)
		{
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xF5F930", Offset = "0xF5F930", VA = "0xF5F930")]
		public RFEvent()
		{
		}
	}
	[Token(Token = "0x20000F0")]
	public class RFDemolitionEvent : RFEvent
	{
		[Token(Token = "0x14000002")]
		public static event EventAction GlobalEvent
		{
			[Token(Token = "0x60003DA")]
			[Address(RVA = "0xF5F748", Offset = "0xF5F748", VA = "0xF5F748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58F2A0", Offset = "0x58F2A0")]
			add
			{
			}
			[Token(Token = "0x60003DB")]
			[Address(RVA = "0xF5F804", Offset = "0xF5F804", VA = "0xF5F804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58F2B0", Offset = "0x58F2B0")]
			remove
			{
			}
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0xF5F8C0", Offset = "0xF5F8C0", VA = "0xF5F8C0")]
		public static void InvokeGlobalEvent(RayfireRigid rigid)
		{
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0xF5F928", Offset = "0xF5F928", VA = "0xF5F928")]
		public RFDemolitionEvent()
		{
		}
	}
	[Token(Token = "0x20000F1")]
	public class RFActivationEvent : RFEvent
	{
		[Token(Token = "0x14000003")]
		public static event EventAction GlobalEvent
		{
			[Token(Token = "0x60003DE")]
			[Address(RVA = "0xC73544", Offset = "0xC73544", VA = "0xC73544")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58F2C0", Offset = "0x58F2C0")]
			add
			{
			}
			[Token(Token = "0x60003DF")]
			[Address(RVA = "0xC73600", Offset = "0xC73600", VA = "0xC73600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58F2D0", Offset = "0x58F2D0")]
			remove
			{
			}
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0xC72738", Offset = "0xC72738", VA = "0xC72738")]
		public static void InvokeGlobalEvent(RayfireRigid rigid)
		{
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0xC736BC", Offset = "0xC736BC", VA = "0xC736BC")]
		public RFActivationEvent()
		{
		}
	}
	[Token(Token = "0x20000F2")]
	public class RFRestrictionEvent : RFEvent
	{
		[Token(Token = "0x14000004")]
		public static event EventAction GlobalEvent
		{
			[Token(Token = "0x60003E2")]
			[Address(RVA = "0xC41C04", Offset = "0xC41C04", VA = "0xC41C04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58F2E0", Offset = "0x58F2E0")]
			add
			{
			}
			[Token(Token = "0x60003E3")]
			[Address(RVA = "0xC41CC0", Offset = "0xC41CC0", VA = "0xC41CC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58F2F0", Offset = "0x58F2F0")]
			remove
			{
			}
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0xC41D7C", Offset = "0xC41D7C", VA = "0xC41D7C")]
		public static void InvokeGlobalEvent(RayfireRigid rigid)
		{
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0xC41DE4", Offset = "0xC41DE4", VA = "0xC41DE4")]
		public RFRestrictionEvent()
		{
		}
	}
	[Token(Token = "0x20000F3")]
	public class RFShotEvent
	{
		[Token(Token = "0x2000479")]
		public delegate void EventAction(RayfireGun gun);

		[Token(Token = "0x14000005")]
		public static event EventAction GlobalEvent
		{
			[Token(Token = "0x60003E6")]
			[Address(RVA = "0xC459C4", Offset = "0xC459C4", VA = "0xC459C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58F300", Offset = "0x58F300")]
			add
			{
			}
			[Token(Token = "0x60003E7")]
			[Address(RVA = "0xC45A80", Offset = "0xC45A80", VA = "0xC45A80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58F310", Offset = "0x58F310")]
			remove
			{
			}
		}

		[Token(Token = "0x14000006")]
		public event EventAction LocalEvent
		{
			[Token(Token = "0x60003E8")]
			[Address(RVA = "0xC45B3C", Offset = "0xC45B3C", VA = "0xC45B3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58F320", Offset = "0x58F320")]
			add
			{
			}
			[Token(Token = "0x60003E9")]
			[Address(RVA = "0xC45BDC", Offset = "0xC45BDC", VA = "0xC45BDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58F330", Offset = "0x58F330")]
			remove
			{
			}
		}

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0xC45C7C", Offset = "0xC45C7C", VA = "0xC45C7C")]
		public static void InvokeGlobalEvent(RayfireGun gun)
		{
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0xC45CE4", Offset = "0xC45CE4", VA = "0xC45CE4")]
		public void InvokeLocalEvent(RayfireGun gun)
		{
		}

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0xC45CF8", Offset = "0xC45CF8", VA = "0xC45CF8")]
		public RFShotEvent()
		{
		}
	}
	[Token(Token = "0x20000F4")]
	public class RFExplosionEvent
	{
		[Token(Token = "0x200047A")]
		public delegate void EventAction(RayfireBomb bomb);

		[Token(Token = "0x14000007")]
		public static event EventAction GlobalEvent
		{
			[Token(Token = "0x60003ED")]
			[Address(RVA = "0xF62DA0", Offset = "0xF62DA0", VA = "0xF62DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58F340", Offset = "0x58F340")]
			add
			{
			}
			[Token(Token = "0x60003EE")]
			[Address(RVA = "0xF62E5C", Offset = "0xF62E5C", VA = "0xF62E5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58F350", Offset = "0x58F350")]
			remove
			{
			}
		}

		[Token(Token = "0x14000008")]
		public event EventAction LocalEvent
		{
			[Token(Token = "0x60003EF")]
			[Address(RVA = "0xF62F18", Offset = "0xF62F18", VA = "0xF62F18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58F360", Offset = "0x58F360")]
			add
			{
			}
			[Token(Token = "0x60003F0")]
			[Address(RVA = "0xF62FB8", Offset = "0xF62FB8", VA = "0xF62FB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58F370", Offset = "0x58F370")]
			remove
			{
			}
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0xF63058", Offset = "0xF63058", VA = "0xF63058")]
		public static void InvokeGlobalEvent(RayfireBomb bomb)
		{
		}

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0xF630C0", Offset = "0xF630C0", VA = "0xF630C0")]
		public void InvokeLocalEvent(RayfireBomb bomb)
		{
		}

		[Token(Token = "0x60003F3")]
		[Address(RVA = "0xF630D4", Offset = "0xF630D4", VA = "0xF630D4")]
		public RFExplosionEvent()
		{
		}
	}
	[Token(Token = "0x20000F5")]
	public class RFSliceEvent
	{
		[Token(Token = "0x200047B")]
		public delegate void EventAction(RayfireBlade blade);

		[Token(Token = "0x14000009")]
		public static event EventAction GlobalEvent
		{
			[Token(Token = "0x60003F4")]
			[Address(RVA = "0xC45DBC", Offset = "0xC45DBC", VA = "0xC45DBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58F380", Offset = "0x58F380")]
			add
			{
			}
			[Token(Token = "0x60003F5")]
			[Address(RVA = "0xC45E78", Offset = "0xC45E78", VA = "0xC45E78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58F390", Offset = "0x58F390")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000A")]
		public event EventAction LocalEvent
		{
			[Token(Token = "0x60003F6")]
			[Address(RVA = "0xC45F34", Offset = "0xC45F34", VA = "0xC45F34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58F3A0", Offset = "0x58F3A0")]
			add
			{
			}
			[Token(Token = "0x60003F7")]
			[Address(RVA = "0xC45FD4", Offset = "0xC45FD4", VA = "0xC45FD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58F3B0", Offset = "0x58F3B0")]
			remove
			{
			}
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0xC46074", Offset = "0xC46074", VA = "0xC46074")]
		public static void InvokeGlobalEvent(RayfireBlade blade)
		{
		}

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0xC460DC", Offset = "0xC460DC", VA = "0xC460DC")]
		public void InvokeLocalEvent(RayfireBlade blade)
		{
		}

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0xC460F0", Offset = "0xC460F0", VA = "0xC460F0")]
		public RFSliceEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F6")]
	public class RFFlash
	{
		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5749AC", Offset = "0x5749AC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5749AC", Offset = "0x5749AC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5749AC", Offset = "0x5749AC")]
		public float intensityMin;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574A18", Offset = "0x574A18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x574A18", Offset = "0x574A18")]
		public float intensityMax;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574A60", Offset = "0x574A60")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574A60", Offset = "0x574A60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x574A60", Offset = "0x574A60")]
		public float rangeMin;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574ACC", Offset = "0x574ACC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x574ACC", Offset = "0x574ACC")]
		public float rangeMax;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574B14", Offset = "0x574B14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574B14", Offset = "0x574B14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x574B14", Offset = "0x574B14")]
		public float distance;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574B80", Offset = "0x574B80")]
		public Color color;

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0xF6407C", Offset = "0xF6407C", VA = "0xF6407C")]
		public RFFlash()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F7")]
	public class RFDecals
	{
		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enable;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574B94", Offset = "0x574B94")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574B94", Offset = "0x574B94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x574B94", Offset = "0x574B94")]
		public float sizeMin;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574C00", Offset = "0x574C00")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x574C00", Offset = "0x574C00")]
		public float sizeMax;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574C48", Offset = "0x574C48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574C48", Offset = "0x574C48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x574C48", Offset = "0x574C48")]
		public float distance;

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0xC7B70C", Offset = "0xC7B70C", VA = "0xC7B70C")]
		public RFDecals()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F8")]
	public class RFMesh
	{
		[Serializable]
		[Token(Token = "0x200047C")]
		public class RFSubMeshTris
		{
			[Token(Token = "0x4002B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> triangles;

			[Token(Token = "0x600213D")]
			[Address(RVA = "0x86CE24", Offset = "0x86CE24", VA = "0x86CE24")]
			public RFSubMeshTris()
			{
			}

			[Token(Token = "0x600213E")]
			[Address(RVA = "0x86CEA0", Offset = "0x86CEA0", VA = "0x86CEA0")]
			public RFSubMeshTris(List<int> tris)
			{
			}
		}

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool compress;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int subMeshCount;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Bounds bounds;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] triangles;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<RFSubMeshTris> subTriangles;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2[] uv;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3[] vertices;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector4[] tangents;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<int> uvComp;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<int> verticesComp;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<int> tangentsComp;

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0xF6A998", Offset = "0xF6A998", VA = "0xF6A998")]
		public RFMesh(Mesh mesh, bool comp = false)
		{
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xF6AE60", Offset = "0xF6AE60", VA = "0xF6AE60")]
		public Mesh GetMesh()
		{
			return null;
		}

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0xF6AF88", Offset = "0xF6AF88", VA = "0xF6AF88")]
		private void LoadTriangles(Mesh mesh)
		{
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0xF665A8", Offset = "0xF665A8", VA = "0xF665A8")]
		public static Mesh BakeMesh(SkinnedMeshRenderer skin)
		{
			return null;
		}

		[Token(Token = "0x6000401")]
		[Address(RVA = "0xF5FE80", Offset = "0xF5FE80", VA = "0xF5FE80")]
		public static void ConvertRfMeshes(RayfireRigid rigid)
		{
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0xF6B1EC", Offset = "0xF6B1EC", VA = "0xF6B1EC")]
		private static Vector2[] SetCompressedUv(List<int> uvComp)
		{
			return null;
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0xF6B060", Offset = "0xF6B060", VA = "0xF6B060")]
		private static Vector3[] SetCompressedVertices(List<int> verticesComp)
		{
			return null;
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0xF6B350", Offset = "0xF6B350", VA = "0xF6B350")]
		private static Vector4[] SetCompressedTangents(List<int> tangentsComp)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20000F9")]
	public class RFParticleNoise
	{
		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574CC0", Offset = "0x574CC0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574CC0", Offset = "0x574CC0")]
		public bool enabled;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574D10", Offset = "0x574D10")]
		public ParticleSystemNoiseQuality quality;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574D24", Offset = "0x574D24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574D24", Offset = "0x574D24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x574D24", Offset = "0x574D24")]
		public float strengthMin;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574D98", Offset = "0x574D98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x574D98", Offset = "0x574D98")]
		public float strengthMax;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574DDC", Offset = "0x574DDC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574DDC", Offset = "0x574DDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x574DDC", Offset = "0x574DDC")]
		public float frequency;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574E54", Offset = "0x574E54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x574E54", Offset = "0x574E54")]
		public float scrollSpeed;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574EA4", Offset = "0x574EA4")]
		public bool damping;

		[Token(Token = "0x6000405")]
		[Address(RVA = "0xF6BA88", Offset = "0xF6BA88", VA = "0xF6BA88")]
		public RFParticleNoise()
		{
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0xF6BACC", Offset = "0xF6BACC", VA = "0xF6BACC")]
		public void CopyFrom(RFParticleNoise source)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000FA")]
	public class RFParticleRendering
	{
		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574EB8", Offset = "0x574EB8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574EB8", Offset = "0x574EB8")]
		public bool castShadows;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574F08", Offset = "0x574F08")]
		public bool receiveShadows;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574F1C", Offset = "0x574F1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574F1C", Offset = "0x574F1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574F1C", Offset = "0x574F1C")]
		public LightProbeUsage lightProbes;

		[Token(Token = "0x6000407")]
		[Address(RVA = "0xF6BB18", Offset = "0xF6BB18", VA = "0xF6BB18")]
		public RFParticleRendering()
		{
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0xF6BB48", Offset = "0xF6BB48", VA = "0xF6BB48")]
		public void CopyFrom(RFParticleRendering source)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000FB")]
	public class RFParticleDynamicDebris
	{
		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574F80", Offset = "0x574F80")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574F80", Offset = "0x574F80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x574F80", Offset = "0x574F80")]
		public float speedMin;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x574FE8", Offset = "0x574FE8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x574FE8", Offset = "0x574FE8")]
		public float speedMax;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57502C", Offset = "0x57502C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57502C", Offset = "0x57502C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57502C", Offset = "0x57502C")]
		public float velocityMin;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5750A0", Offset = "0x5750A0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5750A0", Offset = "0x5750A0")]
		public float velocityMax;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5750E4", Offset = "0x5750E4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5750E4", Offset = "0x5750E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5750E4", Offset = "0x5750E4")]
		public float gravityMin;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57514C", Offset = "0x57514C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57514C", Offset = "0x57514C")]
		public float gravityMax;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57519C", Offset = "0x57519C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57519C", Offset = "0x57519C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57519C", Offset = "0x57519C")]
		public float rotationSpeed;

		[Token(Token = "0x6000409")]
		[Address(RVA = "0xF6B864", Offset = "0xF6B864", VA = "0xF6B864")]
		public RFParticleDynamicDebris()
		{
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0xF6B8B0", Offset = "0xF6B8B0", VA = "0xF6B8B0")]
		public void CopyFrom(RFParticleDynamicDebris source)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000FC")]
	public class RFParticleDynamicDust
	{
		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575204", Offset = "0x575204")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575204", Offset = "0x575204")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x575204", Offset = "0x575204")]
		public float speedMin;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57526C", Offset = "0x57526C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57526C", Offset = "0x57526C")]
		public float speedMax;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5752B0", Offset = "0x5752B0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5752B0", Offset = "0x5752B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5752B0", Offset = "0x5752B0")]
		public float rotation;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575318", Offset = "0x575318")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575318", Offset = "0x575318")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x575318", Offset = "0x575318")]
		public float gravityMin;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575380", Offset = "0x575380")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x575380", Offset = "0x575380")]
		public float gravityMax;

		[Token(Token = "0x600040B")]
		[Address(RVA = "0xF6B8FC", Offset = "0xF6B8FC", VA = "0xF6B8FC")]
		public RFParticleDynamicDust()
		{
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0xF6B938", Offset = "0xF6B938", VA = "0xF6B938")]
		public void CopyFrom(RFParticleDynamicDust source)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000FD")]
	public class RFParticleEmission
	{
		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5753D0", Offset = "0x5753D0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5753D0", Offset = "0x5753D0")]
		public RFParticles.BurstType burstType;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575420", Offset = "0x575420")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x575420", Offset = "0x575420")]
		public int burstAmount;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575468", Offset = "0x575468")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575468", Offset = "0x575468")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x575468", Offset = "0x575468")]
		public float distanceRate;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5754D0", Offset = "0x5754D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5754D0", Offset = "0x5754D0")]
		public float duration;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575514", Offset = "0x575514")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575514", Offset = "0x575514")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x575514", Offset = "0x575514")]
		public float lifeMin;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575580", Offset = "0x575580")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x575580", Offset = "0x575580")]
		public float lifeMax;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5755C8", Offset = "0x5755C8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5755C8", Offset = "0x5755C8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5755C8", Offset = "0x5755C8")]
		public float sizeMin;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575634", Offset = "0x575634")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x575634", Offset = "0x575634")]
		public float sizeMax;

		[Token(Token = "0x600040D")]
		[Address(RVA = "0xF6B974", Offset = "0xF6B974", VA = "0xF6B974")]
		public RFParticleEmission()
		{
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0xF6B9BC", Offset = "0xF6B9BC", VA = "0xF6B9BC")]
		public void CopyFrom(RFParticleEmission source)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000FE")]
	public class RFParticleLimitations
	{
		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57567C", Offset = "0x57567C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57567C", Offset = "0x57567C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57567C", Offset = "0x57567C")]
		public int minParticles;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5756F4", Offset = "0x5756F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5756F4", Offset = "0x5756F4")]
		public int maxParticles;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57573C", Offset = "0x57573C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57573C", Offset = "0x57573C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57573C", Offset = "0x57573C")]
		public int percentage;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5757A8", Offset = "0x5757A8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5757A8", Offset = "0x5757A8")]
		public float sizeThreshold;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5757F0", Offset = "0x5757F0")]
		public int demolitionDepth;

		[Token(Token = "0x600040F")]
		[Address(RVA = "0xF6BA08", Offset = "0xF6BA08", VA = "0xF6BA08")]
		public RFParticleLimitations()
		{
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0xF6BA4C", Offset = "0xF6BA4C", VA = "0xF6BA4C")]
		public void CopyFrom(RFParticleLimitations source)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000FF")]
	public class RFParticleCollisionDebris
	{
		[Token(Token = "0x200047D")]
		public enum RFParticleCollisionWithType
		{
			[Token(Token = "0x4002B1A")]
			Everything,
			[Token(Token = "0x4002B1B")]
			Nothing
		}

		[Token(Token = "0x200047E")]
		public enum RFParticleCollisionMatType
		{
			[Token(Token = "0x4002B1D")]
			ByPhysicalMaterial,
			[Token(Token = "0x4002B1E")]
			ByProperties
		}

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575830", Offset = "0x575830")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575830", Offset = "0x575830")]
		public RFParticleCollisionWithType collidesWith;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575880", Offset = "0x575880")]
		public ParticleSystemCollisionQuality quality;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575894", Offset = "0x575894")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x575894", Offset = "0x575894")]
		public float radiusScale;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5758E8", Offset = "0x5758E8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5758E8", Offset = "0x5758E8")]
		public RFParticleCollisionMatType dampenType;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575938", Offset = "0x575938")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x575938", Offset = "0x575938")]
		public float dampenMin;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57597C", Offset = "0x57597C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57597C", Offset = "0x57597C")]
		public float dampenMax;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5759C0", Offset = "0x5759C0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5759C0", Offset = "0x5759C0")]
		public RFParticleCollisionMatType bounceType;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575A10", Offset = "0x575A10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x575A10", Offset = "0x575A10")]
		public float bounceMin;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575A54", Offset = "0x575A54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x575A54", Offset = "0x575A54")]
		public float bounceMax;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public bool propertiesSet;

		[Token(Token = "0x6000411")]
		[Address(RVA = "0xF6B534", Offset = "0xF6B534", VA = "0xF6B534")]
		public RFParticleCollisionDebris()
		{
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0xF6B58C", Offset = "0xF6B58C", VA = "0xF6B58C")]
		public void CopyFrom(RFParticleCollisionDebris source)
		{
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0xF6B5F0", Offset = "0xF6B5F0", VA = "0xF6B5F0")]
		public void SetMaterialProps(RayfireDebris debris)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000100")]
	public class RFParticleCollisionDust
	{
		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575AA8", Offset = "0x575AA8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575AA8", Offset = "0x575AA8")]
		public RFParticles.RFParticleCollisionWithType collidesWith;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575AF8", Offset = "0x575AF8")]
		public ParticleSystemCollisionQuality quality;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575B0C", Offset = "0x575B0C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x575B0C", Offset = "0x575B0C")]
		public float radiusScale;

		[Token(Token = "0x6000414")]
		[Address(RVA = "0xF6B808", Offset = "0xF6B808", VA = "0xF6B808")]
		public RFParticleCollisionDust()
		{
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0xF6B838", Offset = "0xF6B838", VA = "0xF6B838")]
		public void CopyFrom(RFParticleCollisionDust source)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000101")]
	public class RFParticles
	{
		[Token(Token = "0x200047F")]
		public enum RFParticleCollisionWithType
		{
			[Token(Token = "0x4002B20")]
			Everything,
			[Token(Token = "0x4002B21")]
			Nothing
		}

		[Token(Token = "0x2000480")]
		public enum RFParticleCollisionMatType
		{
			[Token(Token = "0x4002B23")]
			ByPhysicalMaterial,
			[Token(Token = "0x4002B24")]
			ByProperties
		}

		[Token(Token = "0x2000481")]
		public enum BurstType
		{
			[Token(Token = "0x4002B26")]
			None,
			[Token(Token = "0x4002B27")]
			TotalAmount,
			[Token(Token = "0x4002B28")]
			PerOneUnitSize,
			[Token(Token = "0x4002B29")]
			FragmentAmount
		}

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ParticleSystem.MinMaxCurve constantCurve;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string debrisStr;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string dustStr;

		[Token(Token = "0x6000416")]
		[Address(RVA = "0xF6BB6C", Offset = "0xF6BB6C", VA = "0xF6BB6C")]
		public static void SetParticleComponents(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0xF6BEC0", Offset = "0xF6BEC0", VA = "0xF6BEC0")]
		public static void SetParticleComponents(RayfireRigidRoot scr)
		{
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0xF6C268", Offset = "0xF6C268", VA = "0xF6C268")]
		public static void InitDemolitionParticles(RayfireRigid source)
		{
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0xF6C368", Offset = "0xF6C368", VA = "0xF6C368")]
		public static void CreateDemolitionDebris(RayfireRigid source)
		{
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0xF6C7F8", Offset = "0xF6C7F8", VA = "0xF6C7F8")]
		public static void CreateDemolitionDust(RayfireRigid source)
		{
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0xF6E030", Offset = "0xF6E030", VA = "0xF6E030")]
		public static void InitActivationParticlesRigid(RayfireRigid source)
		{
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0xF6E208", Offset = "0xF6E208", VA = "0xF6E208")]
		public static void InitActivationParticlesShard(RayfireRigidRoot source, RFShard shard)
		{
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0xF6D700", Offset = "0xF6D700", VA = "0xF6D700")]
		public static void CreateDebrisRigid(RayfireDebris target)
		{
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0xF6E3F4", Offset = "0xF6E3F4", VA = "0xF6E3F4")]
		public static void CreateDebrisShard(RayfireRigidRoot root, RayfireDebris target, RFShard shard)
		{
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0xF6DCEC", Offset = "0xF6DCEC", VA = "0xF6DCEC")]
		public static void CreateDustRigid(RayfireDust target)
		{
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0xF6E554", Offset = "0xF6E554", VA = "0xF6E554")]
		public static void CreateDustShard(RayfireRigidRoot root, RayfireDust target, RFShard shard)
		{
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0xF6E6B4", Offset = "0xF6E6B4", VA = "0xF6E6B4")]
		public static ParticleSystem CreateParticleSystemDebris(RayfireDebris debris, Transform tm)
		{
			return null;
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0xF6E99C", Offset = "0xF6E99C", VA = "0xF6E99C")]
		public static ParticleSystem CreateParticleSystemDust(RayfireDust dust, Transform tm)
		{
			return null;
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0xF6EAF8", Offset = "0xF6EAF8", VA = "0xF6EAF8")]
		private static ParticleSystem CreateParticleSystem(Transform tm)
		{
			return null;
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0xF6ECCC", Offset = "0xF6ECCC", VA = "0xF6ECCC")]
		public static void CreateDebrisImpact(RayfireDebris debris, Vector3 impactPos, Vector3 impactNormal)
		{
		}

		[Token(Token = "0x6000425")]
		[Address(RVA = "0xF6EE60", Offset = "0xF6EE60", VA = "0xF6EE60")]
		public static void CreateDustImpact(RayfireDust dust, Vector3 impactPos, Vector3 impactNormal)
		{
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0xF6CC88", Offset = "0xF6CC88", VA = "0xF6CC88")]
		private static void DetachParticles(RayfireRigid source)
		{
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0xF60C00", Offset = "0xF60C00", VA = "0xF60C00")]
		public static void CopyRigidParticles(RayfireRigid source, RayfireRigid target)
		{
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0xF6EFF4", Offset = "0xF6EFF4", VA = "0xF6EFF4")]
		public static void CopyRootMeshParticles(RayfireRigid source, List<RayfireRigid> targets)
		{
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0xF6FA88", Offset = "0xF6FA88", VA = "0xF6FA88")]
		public static void CopyRigidRootParticles(RayfireRigidRoot source, RayfireRigid target)
		{
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0xF6FF00", Offset = "0xF6FF00", VA = "0xF6FF00")]
		public static void SetMain(ParticleSystem.MainModule main, float lifeMin, float lifeMax, float sizeMin, float sizeMax, float gravityMin, float gravityMax, float speedMin, float speedMax, float divergence, int maxParticles, float duration)
		{
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0xF7016C", Offset = "0xF7016C", VA = "0xF7016C")]
		public static void SetEmission(ParticleSystem.EmissionModule emissionModule, float distanceRate, int burstAmount)
		{
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0xF702BC", Offset = "0xF702BC", VA = "0xF702BC")]
		public static void SetShapeMesh(ParticleSystem.ShapeModule shapeModule, Mesh mesh, int emitMatIndex, Vector3 shapeScale)
		{
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0xF7037C", Offset = "0xF7037C", VA = "0xF7037C")]
		public static void SetShapeObject(ParticleSystem.ShapeModule shapeModule)
		{
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0xF6E810", Offset = "0xF6E810", VA = "0xF6E810")]
		public static int GetEmissionMatIndex(Renderer renderer, Material mat)
		{
			return default(int);
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0xF703CC", Offset = "0xF703CC", VA = "0xF703CC")]
		public static void SetVelocity(ParticleSystem.InheritVelocityModule velocity, RFParticleDynamicDebris dynamic)
		{
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0xF704BC", Offset = "0xF704BC", VA = "0xF704BC")]
		public static void SetRotationOverLifeTime(ParticleSystem.RotationOverLifetimeModule rotation, RFParticleDynamicDust dynamic)
		{
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0xF70588", Offset = "0xF70588", VA = "0xF70588")]
		public static ParticleSystem.MinMaxCurve GetCurveRotationByLife(float spin)
		{
			return default(ParticleSystem.MinMaxCurve);
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0xF707C4", Offset = "0xF707C4", VA = "0xF707C4")]
		public static void SetSizeOverLifeTime(ParticleSystem.SizeOverLifetimeModule sizeOverLifeTime, float size)
		{
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0xF70A70", Offset = "0xF70A70", VA = "0xF70A70")]
		public static void SetSizeOverLifeTime(ParticleSystem.SizeOverLifetimeModule sizeOverLifeTime, Vector3 size)
		{
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0xF7086C", Offset = "0xF7086C", VA = "0xF7086C")]
		public static ParticleSystem.MinMaxCurve GetCurveSizeOverLifeTime(float val)
		{
			return default(ParticleSystem.MinMaxCurve);
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0xF70B88", Offset = "0xF70B88", VA = "0xF70B88")]
		public static void SetRotationBySpeed(ParticleSystem.RotationBySpeedModule rotationBySpeed, float rotationSpeed)
		{
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0xF70C4C", Offset = "0xF70C4C", VA = "0xF70C4C")]
		public static ParticleSystem.MinMaxCurve GetCurveRotationBySpeed(float rotationSpeed)
		{
			return default(ParticleSystem.MinMaxCurve);
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0xF70E24", Offset = "0xF70E24", VA = "0xF70E24")]
		public static void SetColorOverLife(ParticleSystem.ColorOverLifetimeModule colorLife, float opacity)
		{
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0xF70FF0", Offset = "0xF70FF0", VA = "0xF70FF0")]
		public static void SetNoise(ParticleSystem.NoiseModule psNoise, RFParticleNoise scrNoise)
		{
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0xF7120C", Offset = "0xF7120C", VA = "0xF7120C")]
		public static void SetCollisionDebris(ParticleSystem.CollisionModule psCollision, RFParticleCollisionDebris coll)
		{
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0xF7136C", Offset = "0xF7136C", VA = "0xF7136C")]
		public static void SetCollisionDust(ParticleSystem.CollisionModule psCollision, RFParticleCollisionDust coll)
		{
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0xF6D7F0", Offset = "0xF6D7F0", VA = "0xF6D7F0")]
		public static void GetDebrisTargets(List<RayfireDebris> filtered, List<RayfireDebris> targets, float sizeThreshold, int percentage, int pType)
		{
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0xF6DDDC", Offset = "0xF6DDDC", VA = "0xF6DDDC")]
		public static void GetDustTargets(List<RayfireDust> filtered, List<RayfireDust> targets, float sizeThreshold, int percentage, int pType)
		{
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0xF6D458", Offset = "0xF6D458", VA = "0xF6D458")]
		public static void SetRigidDebrisFinalAmount(List<RayfireDebris> targets, BurstType burstType, int burstAmount)
		{
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0xF6DA44", Offset = "0xF6DA44", VA = "0xF6DA44")]
		public static void SetDustFinalAmount(List<RayfireDust> targets, BurstType burstType, int burstAmount)
		{
		}

		[Token(Token = "0x600043F")]
		[Address(RVA = "0xF6E938", Offset = "0xF6E938", VA = "0xF6E938")]
		public static int GetShardFinalAmount(RFShard shard, BurstType burstType, int burstAmount, float sizeSum)
		{
			return default(int);
		}

		[Token(Token = "0x6000440")]
		[Address(RVA = "0xF71424", Offset = "0xF71424", VA = "0xF71424")]
		public static bool AmountCheck(RayfireRigid source, int pType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000441")]
		[Address(RVA = "0xF71678", Offset = "0xF71678", VA = "0xF71678")]
		public RFParticles()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000102")]
	public class RFShard : IComparable<RFShard>
	{
		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float sz;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool uny;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool act;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Bounds bnd;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 pos;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion rot;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SimType sm;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int nAm;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<int> nIds;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<float> nArea;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<int> sIds;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<float> nSt;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float sSt;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform tm;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Collider col;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Rigidbody rb;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public RayfireRigid rigid;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public MeshFilter mf;

		[NonSerialized]
		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<RFTriangle> tris;

		[NonSerialized]
		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public RFCluster cluster;

		[NonSerialized]
		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<RFShard> neibShards;

		[NonSerialized]
		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool check;

		[NonSerialized]
		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool[] sCheck;

		[Token(Token = "0x17000014")]
		public bool StressState
		{
			[Token(Token = "0x6000456")]
			[Address(RVA = "0xC44384", Offset = "0xC44384", VA = "0xC44384")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000015")]
		public bool SupportState
		{
			[Token(Token = "0x6000457")]
			[Address(RVA = "0xC44E38", Offset = "0xC44E38", VA = "0xC44E38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000443")]
		[Address(RVA = "0xC424F4", Offset = "0xC424F4", VA = "0xC424F4")]
		public RFShard(RFShard source)
		{
		}

		[Token(Token = "0x6000444")]
		[Address(RVA = "0xC42758", Offset = "0xC42758", VA = "0xC42758")]
		public RFShard(Transform Tm, int Id)
		{
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0xC428D0", Offset = "0xC428D0", VA = "0xC428D0", Slot = "4")]
		public int CompareTo(RFShard otherShard)
		{
			return default(int);
		}

		[Token(Token = "0x6000446")]
		[Address(RVA = "0xC42900", Offset = "0xC42900", VA = "0xC42900")]
		public static void SetShards(RFCluster cluster, ConnectivityType connectivity, bool setRigid = false)
		{
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0xC42A00", Offset = "0xC42A00", VA = "0xC42A00")]
		public static void SetShardsByTransformList(RFCluster cluster, List<Transform> tmList, ConnectivityType connectivity, bool setRigid = false)
		{
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0xC43094", Offset = "0xC43094", VA = "0xC43094")]
		public static void SetShardsByRigidList(RFCluster cluster, List<RayfireRigid> rigids, ConnectivityType connectivity)
		{
		}

		[Token(Token = "0x6000449")]
		[Address(RVA = "0xC4334C", Offset = "0xC4334C", VA = "0xC4334C")]
		private bool TrisNeib(RFShard otherShard)
		{
			return default(bool);
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0xC43524", Offset = "0xC43524", VA = "0xC43524")]
		private float NeibArea(RFShard otherShard)
		{
			return default(float);
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0xC4372C", Offset = "0xC4372C", VA = "0xC4372C")]
		public static void SetShardNeibs(List<RFShard> shards, ConnectivityType type, float minArea = 0f, float minSize = 0f, int perc = 0, int seed = 0)
		{
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0xC43F74", Offset = "0xC43F74", VA = "0xC43F74")]
		public static void ReinitNeibs(List<RFShard> shards)
		{
		}

		[Token(Token = "0x600044D")]
		[Address(RVA = "0xC44214", Offset = "0xC44214", VA = "0xC44214")]
		public static void ReinitNeibsTest(List<RFShard> shards)
		{
		}

		[Token(Token = "0x600044E")]
		[Address(RVA = "0xC440E4", Offset = "0xC440E4", VA = "0xC440E4")]
		public void RemoveNeibAt(int ind)
		{
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0xC443DC", Offset = "0xC443DC", VA = "0xC443DC")]
		public void ClearNeib()
		{
		}

		[Token(Token = "0x6000450")]
		[Address(RVA = "0xC444CC", Offset = "0xC444CC", VA = "0xC444CC")]
		public static void SetUnchecked(List<RFShard> shards)
		{
		}

		[Token(Token = "0x6000451")]
		[Address(RVA = "0xC44560", Offset = "0xC44560", VA = "0xC44560")]
		public static Plane GetSlicePlane(Bounds bound)
		{
			return default(Plane);
		}

		[Token(Token = "0x6000452")]
		[Address(RVA = "0xC4462C", Offset = "0xC4462C", VA = "0xC4462C")]
		public static List<RFShard> SortByDistanceToPoint(List<RFShard> shards, Vector3 point, int amount)
		{
			return null;
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0xC44958", Offset = "0xC44958", VA = "0xC44958")]
		public static List<RFShard> SortByDistanceToPlane(List<RFShard> shards, Vector3 point, Vector3 normal, int amount)
		{
			return null;
		}

		[Token(Token = "0x6000454")]
		[Address(RVA = "0xC44CF0", Offset = "0xC44CF0", VA = "0xC44CF0")]
		public static bool UnyieldingByShard(List<RFShard> shards)
		{
			return default(bool);
		}

		[Token(Token = "0x6000455")]
		[Address(RVA = "0xC44D94", Offset = "0xC44D94", VA = "0xC44D94")]
		public static bool AllUnyShards(List<RFShard> shards)
		{
			return default(bool);
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0xC44E8C", Offset = "0xC44E8C", VA = "0xC44E8C")]
		public static RFShard GetShardByCollider(List<RFShard> shards, Collider collider)
		{
			return null;
		}

		[Token(Token = "0x6000459")]
		[Address(RVA = "0xC44FA0", Offset = "0xC44FA0", VA = "0xC44FA0")]
		public static List<RFShard> GetShardsByColliders(List<RFShard> shards, List<Collider> colliders)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000103")]
	public class RFSound
	{
		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x575B60", Offset = "0x575B60")]
		public bool enable;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575B98", Offset = "0x575B98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x575B98", Offset = "0x575B98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x575B98", Offset = "0x575B98")]
		public float multiplier;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575C10", Offset = "0x575C10")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575C10", Offset = "0x575C10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x575C10", Offset = "0x575C10")]
		public AudioClip clip;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575C84", Offset = "0x575C84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x575C84", Offset = "0x575C84")]
		public List<AudioClip> clips;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575CD4", Offset = "0x575CD4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575CD4", Offset = "0x575CD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x575CD4", Offset = "0x575CD4")]
		public AudioMixerGroup outputGroup;

		[Token(Token = "0x17000016")]
		public bool HasClips
		{
			[Token(Token = "0x6000464")]
			[Address(RVA = "0xC46298", Offset = "0xC46298", VA = "0xC46298")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600045A")]
		[Address(RVA = "0xC460F8", Offset = "0xC460F8", VA = "0xC460F8")]
		public RFSound()
		{
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0xC46128", Offset = "0xC46128", VA = "0xC46128")]
		public RFSound(RFSound source)
		{
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0xC462F0", Offset = "0xC462F0", VA = "0xC462F0")]
		public static void CopySound(RayfireSound source, RayfireRigid target)
		{
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0xC463C0", Offset = "0xC463C0", VA = "0xC463C0")]
		public static void CopySound(RayfireSound source, List<RayfireRigid> targets)
		{
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0xC46584", Offset = "0xC46584", VA = "0xC46584")]
		public static void Play(RayfireSound scr, AudioClip clip, AudioMixerGroup group, float volume)
		{
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0xC46808", Offset = "0xC46808", VA = "0xC46808")]
		public static void InitializationSound(RayfireSound scr, float size)
		{
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0xC46BD8", Offset = "0xC46BD8", VA = "0xC46BD8")]
		public static void ActivationSound(RayfireSound scr, float size)
		{
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0xC46DA0", Offset = "0xC46DA0", VA = "0xC46DA0")]
		public static void DemolitionSound(RayfireSound scr, float size)
		{
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0xC46B18", Offset = "0xC46B18", VA = "0xC46B18")]
		public static float GeVolume(RayfireSound scr, float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0xC469E0", Offset = "0xC469E0", VA = "0xC469E0")]
		private static bool FilterCheck(RayfireSound scr, float size)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000104")]
	public class RFStress
	{
		[Token(Token = "0x2000482")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5728B8", Offset = "0x5728B8")]
		private sealed class <StressCor>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireConnectivity scr;

			[Token(Token = "0x4002B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RFStress <>4__this;

			[Token(Token = "0x4002B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WaitForSeconds <wait>5__2;

			[Token(Token = "0x1700037A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002142")]
				[Address(RVA = "0x86E03C", Offset = "0x86E03C", VA = "0x86E03C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002144")]
				[Address(RVA = "0x86E084", Offset = "0x86E084", VA = "0x86E084", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600213F")]
			[Address(RVA = "0x86DE60", Offset = "0x86DE60", VA = "0x86DE60")]
			[DebuggerHidden]
			public <StressCor>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002140")]
			[Address(RVA = "0x86DE8C", Offset = "0x86DE8C", VA = "0x86DE8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002141")]
			[Address(RVA = "0x86DE90", Offset = "0x86DE90", VA = "0x86DE90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002143")]
			[Address(RVA = "0x86E044", Offset = "0x86E044", VA = "0x86E044", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575D48", Offset = "0x575D48")]
		public bool enable;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575D5C", Offset = "0x575D5C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575D5C", Offset = "0x575D5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x575D5C", Offset = "0x575D5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x575D5C", Offset = "0x575D5C")]
		public int threshold;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575DEC", Offset = "0x575DEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x575DEC", Offset = "0x575DEC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x575DEC", Offset = "0x575DEC")]
		public float erosion;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575E54", Offset = "0x575E54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x575E54", Offset = "0x575E54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x575E54", Offset = "0x575E54")]
		public float interval;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575EC0", Offset = "0x575EC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575EC0", Offset = "0x575EC0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575EC0", Offset = "0x575EC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x575EC0", Offset = "0x575EC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x575EC0", Offset = "0x575EC0")]
		public int support;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575F64", Offset = "0x575F64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x575F64", Offset = "0x575F64")]
		public bool exposed;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x575FB4", Offset = "0x575FB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x575FB4", Offset = "0x575FB4")]
		public bool bySize;

		[NonSerialized]
		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576004", Offset = "0x576004")]
		public bool inProgress;

		[NonSerialized]
		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int strAmount;

		[NonSerialized]
		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int supAmount;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<RFShard> strShards;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public List<RFShard> supShards;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Vector3 rotCache;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public Vector3 grvCache;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public int supCache;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public float sizeCache;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public bool initialized;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<RFShard> checkShards;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<int> path;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<int> frontier;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<int> frontPrior;

		[Token(Token = "0x6000465")]
		[Address(RVA = "0xC47018", Offset = "0xC47018", VA = "0xC47018")]
		public RFStress()
		{
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0xC470E4", Offset = "0xC470E4", VA = "0xC470E4")]
		public static void StopStress(RayfireConnectivity scr)
		{
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0xC47108", Offset = "0xC47108", VA = "0xC47108")]
		public static void StartStress(RayfireConnectivity scr)
		{
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0xC47198", Offset = "0xC47198", VA = "0xC47198")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58F3C0", Offset = "0x58F3C0")]
		private IEnumerator StressCor(RayfireConnectivity scr)
		{
			return null;
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0xC47210", Offset = "0xC47210", VA = "0xC47210")]
		private bool CheckSupport(RayfireConnectivity scr)
		{
			return default(bool);
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0xC47544", Offset = "0xC47544", VA = "0xC47544")]
		private static void StressErosion(RayfireConnectivity scr)
		{
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0xC47B5C", Offset = "0xC47B5C", VA = "0xC47B5C")]
		private static void StressCollapse(RayfireConnectivity connectivity, int maxStressValue)
		{
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0xC47BA4", Offset = "0xC47BA4", VA = "0xC47BA4")]
		private static int RemNeibByStress(RFStress stress, int stressVal)
		{
			return default(int);
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0xC47EE0", Offset = "0xC47EE0", VA = "0xC47EE0")]
		public static void Initialize(RayfireConnectivity conn)
		{
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0xC47F54", Offset = "0xC47F54", VA = "0xC47F54")]
		private static bool InitializeNeed(RayfireConnectivity conn)
		{
			return default(bool);
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0xC48068", Offset = "0xC48068", VA = "0xC48068")]
		private static void SetStressConnections(RayfireConnectivity conn)
		{
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0xC48CD8", Offset = "0xC48CD8", VA = "0xC48CD8")]
		private static void SetStressSupport(List<RFShard> shards, RFStress stress)
		{
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0xC49378", Offset = "0xC49378", VA = "0xC49378")]
		private static void PrepareCheckShards(RFStress stress)
		{
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0xC48534", Offset = "0xC48534", VA = "0xC48534")]
		private static void SetSizeMultiplier(RayfireConnectivity conn)
		{
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0xC49DA0", Offset = "0xC49DA0", VA = "0xC49DA0")]
		private static void SetSizeMultiplierOLD(RayfireConnectivity conn)
		{
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0xC4941C", Offset = "0xC4941C", VA = "0xC4941C")]
		private static List<int> GetPathAstar(RFStress str, List<RFShard> shards, int startId, int lastId)
		{
			return null;
		}
	}
	[Token(Token = "0x2000105")]
	public enum AxisType
	{
		[Token(Token = "0x40008CB")]
		XRed,
		[Token(Token = "0x40008CC")]
		YGreen,
		[Token(Token = "0x40008CD")]
		ZBlue
	}
	[Token(Token = "0x2000106")]
	public enum PlaneType
	{
		[Token(Token = "0x40008CF")]
		XY,
		[Token(Token = "0x40008D0")]
		XZ,
		[Token(Token = "0x40008D1")]
		YZ
	}
	[Token(Token = "0x2000107")]
	public enum FragType
	{
		[Token(Token = "0x40008D3")]
		Voronoi = 0,
		[Token(Token = "0x40008D4")]
		Splinters = 1,
		[Token(Token = "0x40008D5")]
		Slabs = 2,
		[Token(Token = "0x40008D6")]
		Radial = 3,
		[Token(Token = "0x40008D7")]
		Custom = 5,
		[Token(Token = "0x40008D8")]
		Slices = 7,
		[Token(Token = "0x40008D9")]
		Tets = 11,
		[Token(Token = "0x40008DA")]
		Decompose = 15
	}
	[Token(Token = "0x2000108")]
	public enum DemolitionType
	{
		[Token(Token = "0x40008DC")]
		None = 0,
		[Token(Token = "0x40008DD")]
		Runtime = 1,
		[Token(Token = "0x40008DE")]
		AwakePrecache = 2,
		[Token(Token = "0x40008DF")]
		AwakePrefragment = 3,
		[Token(Token = "0x40008E0")]
		ReferenceDemolition = 9
	}
	[Token(Token = "0x2000109")]
	public enum CachingType
	{
		[Token(Token = "0x40008E2")]
		Disable,
		[Token(Token = "0x40008E3")]
		ByFrames,
		[Token(Token = "0x40008E4")]
		ByFragmentsPerFrame
	}
	[Token(Token = "0x200010A")]
	public enum FadeType
	{
		[Token(Token = "0x40008E6")]
		None = 0,
		[Token(Token = "0x40008E7")]
		SimExclude = 1,
		[Token(Token = "0x40008E8")]
		MoveDown = 2,
		[Token(Token = "0x40008E9")]
		ScaleDown = 3,
		[Token(Token = "0x40008EA")]
		Destroy = 5
	}
	[Token(Token = "0x200010B")]
	public enum MaterialType
	{
		[Token(Token = "0x40008EC")]
		HeavyMetal,
		[Token(Token = "0x40008ED")]
		LightMetal,
		[Token(Token = "0x40008EE")]
		DenseRock,
		[Token(Token = "0x40008EF")]
		PorousRock,
		[Token(Token = "0x40008F0")]
		Concrete,
		[Token(Token = "0x40008F1")]
		Brick,
		[Token(Token = "0x40008F2")]
		Glass,
		[Token(Token = "0x40008F3")]
		Rubber,
		[Token(Token = "0x40008F4")]
		Ice,
		[Token(Token = "0x40008F5")]
		Wood
	}
	[Token(Token = "0x200010C")]
	public enum MassType
	{
		[Token(Token = "0x40008F7")]
		MaterialDensity,
		[Token(Token = "0x40008F8")]
		MassProperty,
		[Token(Token = "0x40008F9")]
		RigidBodyComponent
	}
	[Token(Token = "0x200010D")]
	public enum ObjectType
	{
		[Token(Token = "0x40008FB")]
		Mesh = 0,
		[Token(Token = "0x40008FC")]
		MeshRoot = 1,
		[Token(Token = "0x40008FD")]
		SkinnedMesh = 2,
		[Token(Token = "0x40008FE")]
		NestedCluster = 4,
		[Token(Token = "0x40008FF")]
		ConnectedCluster = 5
	}
	[Token(Token = "0x200010E")]
	public enum SimType
	{
		[Token(Token = "0x4000901")]
		Dynamic,
		[Token(Token = "0x4000902")]
		Sleeping,
		[Token(Token = "0x4000903")]
		Inactive,
		[Token(Token = "0x4000904")]
		Kinematic,
		[Token(Token = "0x4000905")]
		Static
	}
	[Token(Token = "0x200010F")]
	public enum ConnectivityType
	{
		[Token(Token = "0x4000907")]
		ByBoundingBox,
		[Token(Token = "0x4000908")]
		ByMesh,
		[Token(Token = "0x4000909")]
		ByBoundingBoxAndMesh
	}
	[Token(Token = "0x2000110")]
	public enum FragmentMode
	{
		[Token(Token = "0x400090B")]
		Runtime,
		[Token(Token = "0x400090C")]
		Editor
	}
	[Token(Token = "0x2000111")]
	public enum RFColliderType
	{
		[Token(Token = "0x400090E")]
		Mesh = 0,
		[Token(Token = "0x400090F")]
		Box = 1,
		[Token(Token = "0x4000910")]
		Sphere = 2,
		[Token(Token = "0x4000911")]
		None = 4
	}
	[Token(Token = "0x2000112")]
	public enum RFParenting
	{
		[Token(Token = "0x4000913")]
		Manager = 0,
		[Token(Token = "0x4000914")]
		Parent = 1,
		[Token(Token = "0x4000915")]
		Sphere = 2,
		[Token(Token = "0x4000916")]
		None = 4
	}
	[Token(Token = "0x2000113")]
	public class RFFrag
	{
		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 pivot;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RFDictionary subId;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RayfireRigid fragment;

		[Token(Token = "0x6000475")]
		[Address(RVA = "0xF640E8", Offset = "0xF640E8", VA = "0xF640E8")]
		public RFFrag()
		{
		}
	}
	[Token(Token = "0x2000114")]
	public class RFTri
	{
		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int meshId;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int subMeshId;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> ids;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Vector3> vpos;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Vector3> vnormal;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Vector2> uvs;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Vector4> tangents;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<RFTri> neibTris;

		[Token(Token = "0x6000476")]
		[Address(RVA = "0xC4AA9C", Offset = "0xC4AA9C", VA = "0xC4AA9C")]
		public RFTri()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000115")]
	public class RFDictionary
	{
		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<int> keys;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> values;

		[Token(Token = "0x6000477")]
		[Address(RVA = "0xF62B44", Offset = "0xF62B44", VA = "0xF62B44")]
		public RFDictionary(Dictionary<int, int> dictionary)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000116")]
	public class RFShatterCluster
	{
		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576088", Offset = "0x576088")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576088", Offset = "0x576088")]
		public bool enable;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5760D8", Offset = "0x5760D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5760D8", Offset = "0x5760D8")]
		public int count;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576130", Offset = "0x576130")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576130", Offset = "0x576130")]
		public int seed;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576188", Offset = "0x576188")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576188", Offset = "0x576188")]
		public float relax;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5761DC", Offset = "0x5761DC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5761DC", Offset = "0x5761DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5761DC", Offset = "0x5761DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5761DC", Offset = "0x5761DC")]
		public int amount;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57626C", Offset = "0x57626C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57626C", Offset = "0x57626C")]
		public int layers;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5762C0", Offset = "0x5762C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5762C0", Offset = "0x5762C0")]
		public float scale;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576318", Offset = "0x576318")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576318", Offset = "0x576318")]
		public int min;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57636C", Offset = "0x57636C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57636C", Offset = "0x57636C")]
		public int max;

		[Token(Token = "0x6000478")]
		[Address(RVA = "0xC458F8", Offset = "0xC458F8", VA = "0xC458F8")]
		public RFShatterCluster()
		{
		}

		[Token(Token = "0x6000479")]
		[Address(RVA = "0xC4594C", Offset = "0xC4594C", VA = "0xC4594C")]
		public RFShatterCluster(RFShatterCluster src)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000117")]
	public class RFVoronoi
	{
		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5763C0", Offset = "0x5763C0")]
		public int amount;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5763F8", Offset = "0x5763F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5763F8", Offset = "0x5763F8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5763F8", Offset = "0x5763F8")]
		public float centerBias;

		[Token(Token = "0x17000017")]
		public int Amount
		{
			[Token(Token = "0x600047C")]
			[Address(RVA = "0xC4AD88", Offset = "0xC4AD88", VA = "0xC4AD88")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0xC4AD1C", Offset = "0xC4AD1C", VA = "0xC4AD1C")]
		public RFVoronoi()
		{
		}

		[Token(Token = "0x600047B")]
		[Address(RVA = "0xC4AD48", Offset = "0xC4AD48", VA = "0xC4AD48")]
		public RFVoronoi(RFVoronoi src)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000118")]
	public class RFSplinters
	{
		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57646C", Offset = "0x57646C")]
		public AxisType axis;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5764A4", Offset = "0x5764A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5764A4", Offset = "0x5764A4")]
		public int amount;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5764F4", Offset = "0x5764F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5764F4", Offset = "0x5764F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5764F4", Offset = "0x5764F4")]
		public float strength;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576568", Offset = "0x576568")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576568", Offset = "0x576568")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576568", Offset = "0x576568")]
		public float centerBias;

		[Token(Token = "0x17000018")]
		public int Amount
		{
			[Token(Token = "0x600047F")]
			[Address(RVA = "0xC46FF0", Offset = "0xC46FF0", VA = "0xC46FF0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0xC46F68", Offset = "0xC46F68", VA = "0xC46F68")]
		public RFSplinters()
		{
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0xC46FA0", Offset = "0xC46FA0", VA = "0xC46FA0")]
		public RFSplinters(RFSplinters src)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000119")]
	public class RFRadial
	{
		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5765DC", Offset = "0x5765DC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5765DC", Offset = "0x5765DC")]
		public AxisType centerAxis;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57662C", Offset = "0x57662C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57662C", Offset = "0x57662C")]
		public float radius;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576674", Offset = "0x576674")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576674", Offset = "0x576674")]
		public float divergence;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5766C4", Offset = "0x5766C4")]
		public bool restrictToPlane;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5766D8", Offset = "0x5766D8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5766D8", Offset = "0x5766D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5766D8", Offset = "0x5766D8")]
		public int rings;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576744", Offset = "0x576744")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576744", Offset = "0x576744")]
		public int focus;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57678C", Offset = "0x57678C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57678C", Offset = "0x57678C")]
		public int focusStr;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5767D4", Offset = "0x5767D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5767D4", Offset = "0x5767D4")]
		public int randomRings;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57681C", Offset = "0x57681C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57681C", Offset = "0x57681C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57681C", Offset = "0x57681C")]
		public int rays;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576888", Offset = "0x576888")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576888", Offset = "0x576888")]
		public int randomRays;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5768D0", Offset = "0x5768D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5768D0", Offset = "0x5768D0")]
		public int twist;

		[Token(Token = "0x6000480")]
		[Address(RVA = "0xC3F2CC", Offset = "0xC3F2CC", VA = "0xC3F2CC")]
		public RFRadial()
		{
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0xC3F31C", Offset = "0xC3F31C", VA = "0xC3F31C")]
		public RFRadial(RFRadial src)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200011A")]
	public class RFSlice
	{
		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlaneType plane;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57691C", Offset = "0x57691C")]
		public List<Transform> sliceList;

		[Token(Token = "0x6000482")]
		[Address(RVA = "0xC45D00", Offset = "0xC45D00", VA = "0xC45D00")]
		public RFSlice()
		{
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0xC45D2C", Offset = "0xC45D2C", VA = "0xC45D2C")]
		public RFSlice(RFSlice src)
		{
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0xC45D6C", Offset = "0xC45D6C", VA = "0xC45D6C")]
		public Vector3 Axis(Transform tm)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x200011B")]
	public class RFTets
	{
		[Token(Token = "0x2000483")]
		public enum TetType
		{
			[Token(Token = "0x4002B30")]
			Uniform,
			[Token(Token = "0x4002B31")]
			Curved
		}

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public TetType lattice;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576940", Offset = "0x576940")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576940", Offset = "0x576940")]
		public int density;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576990", Offset = "0x576990")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576990", Offset = "0x576990")]
		public int noise;

		[Token(Token = "0x6000485")]
		[Address(RVA = "0xC4AA1C", Offset = "0xC4AA1C", VA = "0xC4AA1C")]
		public RFTets()
		{
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0xC4AA54", Offset = "0xC4AA54", VA = "0xC4AA54")]
		public RFTets(RFTets src)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200011C")]
	public class RFActivation
	{
		[Token(Token = "0x2000484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5728C8", Offset = "0x5728C8")]
		private sealed class <ActivationVelocityCor>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireRigid scr;

			[Token(Token = "0x4002B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RFActivation <>4__this;

			[Token(Token = "0x1700037C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002148")]
				[Address(RVA = "0x86A20C", Offset = "0x86A20C", VA = "0x86A20C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600214A")]
				[Address(RVA = "0x86A254", Offset = "0x86A254", VA = "0x86A254", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002145")]
			[Address(RVA = "0x86A10C", Offset = "0x86A10C", VA = "0x86A10C")]
			[DebuggerHidden]
			public <ActivationVelocityCor>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6002146")]
			[Address(RVA = "0x86A138", Offset = "0x86A138", VA = "0x86A138", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002147")]
			[Address(RVA = "0x86A13C", Offset = "0x86A13C", VA = "0x86A13C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002149")]
			[Address(RVA = "0x86A214", Offset = "0x86A214", VA = "0x86A214", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000485")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5728D8", Offset = "0x5728D8")]
		private sealed class <ActivationOffsetCor>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireRigid scr;

			[Token(Token = "0x1700037E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600214E")]
				[Address(RVA = "0x86A0BC", Offset = "0x86A0BC", VA = "0x86A0BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002150")]
				[Address(RVA = "0x86A104", Offset = "0x86A104", VA = "0x86A104", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600214B")]
			[Address(RVA = "0x869FC8", Offset = "0x869FC8", VA = "0x869FC8")]
			[DebuggerHidden]
			public <ActivationOffsetCor>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600214C")]
			[Address(RVA = "0x869FF4", Offset = "0x869FF4", VA = "0x869FF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600214D")]
			[Address(RVA = "0x869FF8", Offset = "0x869FF8", VA = "0x869FF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600214F")]
			[Address(RVA = "0x86A0C4", Offset = "0x86A0C4", VA = "0x86A0C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000486")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5728E8", Offset = "0x5728E8")]
		private sealed class <InactiveCor>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RFActivation <>4__this;

			[Token(Token = "0x4002B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RayfireRigid scr;

			[Token(Token = "0x17000380")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002154")]
				[Address(RVA = "0x86A370", Offset = "0x86A370", VA = "0x86A370", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000381")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002156")]
				[Address(RVA = "0x86A3B8", Offset = "0x86A3B8", VA = "0x86A3B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002151")]
			[Address(RVA = "0x86A25C", Offset = "0x86A25C", VA = "0x86A25C")]
			[DebuggerHidden]
			public <InactiveCor>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002152")]
			[Address(RVA = "0x86A288", Offset = "0x86A288", VA = "0x86A288", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002153")]
			[Address(RVA = "0x86A28C", Offset = "0x86A28C", VA = "0x86A28C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002155")]
			[Address(RVA = "0x86A378", Offset = "0x86A378", VA = "0x86A378", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000487")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5728F8", Offset = "0x5728F8")]
		private sealed class <InactiveCor>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RFActivation <>4__this;

			[Token(Token = "0x4002B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RayfireRigidRoot scr;

			[Token(Token = "0x17000382")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600215A")]
				[Address(RVA = "0x86AA2C", Offset = "0x86AA2C", VA = "0x86AA2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000383")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600215C")]
				[Address(RVA = "0x86AA74", Offset = "0x86AA74", VA = "0x86AA74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002157")]
			[Address(RVA = "0x86A3C0", Offset = "0x86A3C0", VA = "0x86A3C0")]
			[DebuggerHidden]
			public <InactiveCor>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002158")]
			[Address(RVA = "0x86A3EC", Offset = "0x86A3EC", VA = "0x86A3EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002159")]
			[Address(RVA = "0x86A3F0", Offset = "0x86A3F0", VA = "0x86A3F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600215B")]
			[Address(RVA = "0x86AA34", Offset = "0x86AA34", VA = "0x86AA34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5769D8", Offset = "0x5769D8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5769D8", Offset = "0x5769D8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5769D8", Offset = "0x5769D8")]
		public float byVelocity;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576A4C", Offset = "0x576A4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576A4C", Offset = "0x576A4C")]
		public float byOffset;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576A9C", Offset = "0x576A9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576A9C", Offset = "0x576A9C")]
		public float byDamage;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576AEC", Offset = "0x576AEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576AEC", Offset = "0x576AEC")]
		public bool byActivator;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576B3C", Offset = "0x576B3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576B3C", Offset = "0x576B3C")]
		public bool byImpact;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576B8C", Offset = "0x576B8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576B8C", Offset = "0x576B8C")]
		public bool byConnectivity;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576BDC", Offset = "0x576BDC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576BDC", Offset = "0x576BDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576BDC", Offset = "0x576BDC")]
		public bool unyielding;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576C50", Offset = "0x576C50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576C50", Offset = "0x576C50")]
		public bool activatable;

		[NonSerialized]
		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RayfireConnectivity connect;

		[NonSerialized]
		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<int> unyList;

		[NonSerialized]
		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool activated;

		[NonSerialized]
		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool inactiveCorState;

		[Token(Token = "0x17000019")]
		public bool HasUny
		{
			[Token(Token = "0x6000493")]
			[Address(RVA = "0xC7338C", Offset = "0xC7338C", VA = "0xC7338C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0xC71ED0", Offset = "0xC71ED0", VA = "0xC71ED0")]
		public RFActivation()
		{
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0xC71F08", Offset = "0xC71F08", VA = "0xC71F08")]
		public void CopyFrom(RFActivation act)
		{
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0xC71F00", Offset = "0xC71F00", VA = "0xC71F00")]
		public void Reset()
		{
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0xC71F5C", Offset = "0xC71F5C", VA = "0xC71F5C")]
		public void CheckConnectivity()
		{
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0xC71FF0", Offset = "0xC71FF0", VA = "0xC71FF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58F420", Offset = "0x58F420")]
		public IEnumerator ActivationVelocityCor(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0xC72068", Offset = "0xC72068", VA = "0xC72068")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58F480", Offset = "0x58F480")]
		public IEnumerator ActivationOffsetCor(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x600048D")]
		[Address(RVA = "0xC720D4", Offset = "0xC720D4", VA = "0xC720D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58F4E0", Offset = "0x58F4E0")]
		public IEnumerator InactiveCor(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0xC7214C", Offset = "0xC7214C", VA = "0xC7214C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58F540", Offset = "0x58F540")]
		public IEnumerator InactiveCor(RayfireRigidRoot scr)
		{
			return null;
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0xC721C4", Offset = "0xC721C4", VA = "0xC721C4")]
		public static void ActivateRigid(RayfireRigid scr, bool connCheck = true)
		{
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0xC727A0", Offset = "0xC727A0", VA = "0xC727A0")]
		public static bool ActivateShard(RFShard shard, RayfireRigidRoot rigidRoot)
		{
			return default(bool);
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0xC72B18", Offset = "0xC72B18", VA = "0xC72B18")]
		public static void OverlapActivation(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0xC733E4", Offset = "0xC733E4", VA = "0xC733E4")]
		private static void CopyUny(RayfireUnyielding source, GameObject target)
		{
		}
	}
	[Token(Token = "0x200011D")]
	public class RFBackupCluster
	{
		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private RFCluster cluster;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool saved;

		[Token(Token = "0x6000494")]
		[Address(RVA = "0xC736C4", Offset = "0xC736C4", VA = "0xC736C4")]
		private RFBackupCluster()
		{
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0xC736EC", Offset = "0xC736EC", VA = "0xC736EC")]
		public static void SaveBackup(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0xC7404C", Offset = "0xC7404C", VA = "0xC7404C")]
		public static void RestoreBackup(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0xC7425C", Offset = "0xC7425C", VA = "0xC7425C")]
		private static void DestroyParticles(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0xC748C4", Offset = "0xC748C4", VA = "0xC748C4")]
		private static void ResetDeepShardRigid(RayfireRigid scr, RFCluster cluster)
		{
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0xC75390", Offset = "0xC75390", VA = "0xC75390")]
		private static void ResetShardRigid(RFShard shard)
		{
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0xC73E10", Offset = "0xC73E10", VA = "0xC73E10")]
		private static void SaveTmRecursive(RFCluster cluster)
		{
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0xC74F88", Offset = "0xC74F88", VA = "0xC74F88")]
		private static void RestoreShardTmRecursive(RFCluster cluster)
		{
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0xC74D84", Offset = "0xC74D84", VA = "0xC74D84")]
		private static void RestoreClusterTmRecursive(RFCluster cluster)
		{
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0xC74A04", Offset = "0xC74A04", VA = "0xC74A04")]
		private static void ResetRootsRecursive(RFCluster cluster)
		{
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0xC74E7C", Offset = "0xC74E7C", VA = "0xC74E7C")]
		private static void ResetRootsParentsRecursive(RFCluster cluster)
		{
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0xC751D8", Offset = "0xC751D8", VA = "0xC751D8")]
		private static void DestroyRoots(RayfireRigid scr)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200011E")]
	public class RFCollapse
	{
		[Token(Token = "0x2000488")]
		public enum RFCollapseType
		{
			[Token(Token = "0x4002B42")]
			ByArea = 1,
			[Token(Token = "0x4002B43")]
			BySize = 3,
			[Token(Token = "0x4002B44")]
			Random = 5
		}

		[Token(Token = "0x2000489")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572908", Offset = "0x572908")]
		private sealed class <CollapseCor>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RFCollapse <>4__this;

			[Token(Token = "0x4002B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RayfireRigid scr;

			[Token(Token = "0x4002B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WaitForSeconds <wait>5__2;

			[Token(Token = "0x4002B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <step>5__3;

			[Token(Token = "0x4002B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <i>5__4;

			[Token(Token = "0x17000384")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002160")]
				[Address(RVA = "0x86AE54", Offset = "0x86AE54", VA = "0x86AE54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000385")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002162")]
				[Address(RVA = "0x86AE9C", Offset = "0x86AE9C", VA = "0x86AE9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600215D")]
			[Address(RVA = "0x86AC8C", Offset = "0x86AC8C", VA = "0x86AC8C")]
			[DebuggerHidden]
			public <CollapseCor>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x600215E")]
			[Address(RVA = "0x86ACB8", Offset = "0x86ACB8", VA = "0x86ACB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600215F")]
			[Address(RVA = "0x86ACBC", Offset = "0x86ACBC", VA = "0x86ACBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002161")]
			[Address(RVA = "0x86AE5C", Offset = "0x86AE5C", VA = "0x86AE5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200048A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572918", Offset = "0x572918")]
		private sealed class <CollapseCor>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RFCollapse <>4__this;

			[Token(Token = "0x4002B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RayfireConnectivity scr;

			[Token(Token = "0x4002B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WaitForSeconds <wait>5__2;

			[Token(Token = "0x4002B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <step>5__3;

			[Token(Token = "0x4002B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <i>5__4;

			[Token(Token = "0x17000386")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002166")]
				[Address(RVA = "0x86AC3C", Offset = "0x86AC3C", VA = "0x86AC3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000387")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002168")]
				[Address(RVA = "0x86AC84", Offset = "0x86AC84", VA = "0x86AC84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002163")]
			[Address(RVA = "0x86AA7C", Offset = "0x86AA7C", VA = "0x86AA7C")]
			[DebuggerHidden]
			public <CollapseCor>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002164")]
			[Address(RVA = "0x86AAA8", Offset = "0x86AAA8", VA = "0x86AAA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002165")]
			[Address(RVA = "0x86AAAC", Offset = "0x86AAAC", VA = "0x86AAAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002167")]
			[Address(RVA = "0x86AC44", Offset = "0x86AC44", VA = "0x86AC44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576CA0", Offset = "0x576CA0")]
		public RFCollapseType type;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576CD8", Offset = "0x576CD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576CD8", Offset = "0x576CD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576CD8", Offset = "0x576CD8")]
		public int start;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576D44", Offset = "0x576D44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576D44", Offset = "0x576D44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576D44", Offset = "0x576D44")]
		public int end;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576DB0", Offset = "0x576DB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576DB0", Offset = "0x576DB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576DB0", Offset = "0x576DB0")]
		public int steps;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576E1C", Offset = "0x576E1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576E1C", Offset = "0x576E1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x576E1C", Offset = "0x576E1C")]
		public float duration;

		[NonSerialized]
		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool inProgress;

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0xC79578", Offset = "0xC79578", VA = "0xC79578")]
		public RFCollapse()
		{
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0xC795B0", Offset = "0xC795B0", VA = "0xC795B0")]
		public static void StartCollapse(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60004A2")]
		[Address(RVA = "0xC79650", Offset = "0xC79650", VA = "0xC79650")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58F5A0", Offset = "0x58F5A0")]
		private IEnumerator CollapseCor(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0xC796C8", Offset = "0xC796C8", VA = "0xC796C8")]
		public static void StartCollapse(RayfireConnectivity scr)
		{
		}

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0xC797D0", Offset = "0xC797D0", VA = "0xC797D0")]
		public static void StopCollapse(RayfireConnectivity scr)
		{
		}

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0xC79758", Offset = "0xC79758", VA = "0xC79758")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58F600", Offset = "0x58F600")]
		private IEnumerator CollapseCor(RayfireConnectivity scr)
		{
			return null;
		}

		[Token(Token = "0x60004A6")]
		[Address(RVA = "0xC797F4", Offset = "0xC797F4", VA = "0xC797F4")]
		public static void AreaCollapse(RayfireRigid scr, int areaPercentage)
		{
		}

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0xC798D0", Offset = "0xC798D0", VA = "0xC798D0")]
		public static void SizeCollapse(RayfireRigid scr, int sizePercentage)
		{
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0xC7985C", Offset = "0xC7985C", VA = "0xC7985C")]
		public static void AreaCollapse(RayfireRigid scr, float minAreaValue)
		{
		}

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0xC79938", Offset = "0xC79938", VA = "0xC79938")]
		public static void SizeCollapse(RayfireRigid scr, float minSizeValue)
		{
		}

		[Token(Token = "0x60004AA")]
		[Address(RVA = "0xC7A10C", Offset = "0xC7A10C", VA = "0xC7A10C")]
		public static void RandomCollapse(RayfireRigid scr, int randomValue, int randomSeed)
		{
		}

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0xC79CE8", Offset = "0xC79CE8", VA = "0xC79CE8")]
		private static void CollapseCluster(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0xC7A70C", Offset = "0xC7A70C", VA = "0xC7A70C")]
		public static void AreaCollapse(RayfireConnectivity connectivity, int areaPercentage)
		{
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0xC7A7CC", Offset = "0xC7A7CC", VA = "0xC7A7CC")]
		public static void SizeCollapse(RayfireConnectivity connectivity, int sizePercentage)
		{
		}

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0xC7A76C", Offset = "0xC7A76C", VA = "0xC7A76C")]
		public static void AreaCollapse(RayfireConnectivity connectivity, float areaValue)
		{
		}

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0xC7A82C", Offset = "0xC7A82C", VA = "0xC7A82C")]
		public static void SizeCollapse(RayfireConnectivity connectivity, float sizeValue)
		{
		}

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0xC7A88C", Offset = "0xC7A88C", VA = "0xC7A88C")]
		public static void RandomCollapse(RayfireConnectivity connectivity, int randomPercentage, int seedValue)
		{
		}

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0xC799AC", Offset = "0xC799AC", VA = "0xC799AC")]
		private static int RemNeibByArea(RFCluster cluster, float minArea)
		{
			return default(int);
		}

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0xC79E24", Offset = "0xC79E24", VA = "0xC79E24")]
		private static int RemNeibBySize(RFCluster cluster, float minSize)
		{
			return default(int);
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0xC7A194", Offset = "0xC7A194", VA = "0xC7A194")]
		private static int RemNeibRandom(RFCluster cluster, int percent, int seed)
		{
			return default(int);
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0xC7A918", Offset = "0xC7A918", VA = "0xC7A918")]
		public static void SetRangeData(RFCluster cluster, int perc = 0, int seed = 0)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200011F")]
	public class RFDamage
	{
		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576E88", Offset = "0x576E88")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576E88", Offset = "0x576E88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576E88", Offset = "0x576E88")]
		public bool enable;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576EFC", Offset = "0x576EFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576EFC", Offset = "0x576EFC")]
		public float maxDamage;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576F4C", Offset = "0x576F4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576F4C", Offset = "0x576F4C")]
		public float currentDamage;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576F9C", Offset = "0x576F9C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x576F9C", Offset = "0x576F9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x576F9C", Offset = "0x576F9C")]
		public bool collect;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577010", Offset = "0x577010")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577010", Offset = "0x577010")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577010", Offset = "0x577010")]
		public float multiplier;

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0xC7B4EC", Offset = "0xC7B4EC", VA = "0xC7B4EC")]
		public RFDamage()
		{
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0xC7B534", Offset = "0xC7B534", VA = "0xC7B534")]
		public void CopyFrom(RFDamage damage)
		{
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0xC7B52C", Offset = "0xC7B52C", VA = "0xC7B52C")]
		public void Reset()
		{
		}

		[Token(Token = "0x60004B8")]
		[Address(RVA = "0xC7B56C", Offset = "0xC7B56C", VA = "0xC7B56C")]
		public static bool Apply(RayfireRigid scr, float damageValue)
		{
			return default(bool);
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0xC7B5C0", Offset = "0xC7B5C0", VA = "0xC7B5C0")]
		public static bool ApplyDamage(RayfireRigid scr, float damageValue, Vector3 damagePoint, float damageRadius = 0f)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000120")]
	public class RFDemolitionCluster
	{
		[Token(Token = "0x200048B")]
		public enum RFDetachType
		{
			[Token(Token = "0x4002B54")]
			RatioToSize = 0,
			[Token(Token = "0x4002B55")]
			WorldUnits = 3
		}

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57707C", Offset = "0x57707C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57707C", Offset = "0x57707C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57707C", Offset = "0x57707C")]
		public ConnectivityType connectivity;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5770F0", Offset = "0x5770F0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5770F0", Offset = "0x5770F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5770F0", Offset = "0x5770F0")]
		public float minimumArea;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577158", Offset = "0x577158")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577158", Offset = "0x577158")]
		public float minimumSize;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57719C", Offset = "0x57719C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57719C", Offset = "0x57719C")]
		public int percentage;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5771E4", Offset = "0x5771E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5771E4", Offset = "0x5771E4")]
		public int seed;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57722C", Offset = "0x57722C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57722C", Offset = "0x57722C")]
		public RFDetachType type;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57727C", Offset = "0x57727C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57727C", Offset = "0x57727C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57727C", Offset = "0x57727C")]
		public int ratio;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5772E8", Offset = "0x5772E8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5772E8", Offset = "0x5772E8")]
		public float units;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57732C", Offset = "0x57732C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57732C", Offset = "0x57732C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57732C", Offset = "0x57732C")]
		public int shardArea;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577398", Offset = "0x577398")]
		public bool shardDemolition;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5773AC", Offset = "0x5773AC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5773AC", Offset = "0x5773AC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5773AC", Offset = "0x5773AC")]
		public int minAmount;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577414", Offset = "0x577414")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577414", Offset = "0x577414")]
		public int maxAmount;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577464", Offset = "0x577464")]
		public bool demolishable;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577478", Offset = "0x577478")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577478", Offset = "0x577478")]
		public RFCollapse collapse;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public int clsCount;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public RFCluster cluster;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public List<RFCluster> minorClusters;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public bool cn;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[HideInInspector]
		public bool nd;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		public int am;

		[NonSerialized]
		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public RFBackupCluster backup;

		[NonSerialized]
		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float damageRadius;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string nameApp;

		[Token(Token = "0x1700001A")]
		public bool HasChildClusters
		{
			[Token(Token = "0x60004D7")]
			[Address(RVA = "0xC80118", Offset = "0xC80118", VA = "0xC80118")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700001B")]
		public bool HasMinorClusters
		{
			[Token(Token = "0x60004D8")]
			[Address(RVA = "0xC7BF14", Offset = "0xC7BF14", VA = "0xC7BF14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0xC7B744", Offset = "0xC7B744", VA = "0xC7B744")]
		public RFDemolitionCluster()
		{
		}

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0xC7B7B0", Offset = "0xC7B7B0", VA = "0xC7B7B0")]
		public void CopyFrom(RFDemolitionCluster demolition)
		{
		}

		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xC7B7A8", Offset = "0xC7B7A8", VA = "0xC7B7A8")]
		public void Reset()
		{
		}

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0xC7B840", Offset = "0xC7B840", VA = "0xC7B840")]
		public static bool SetupCluster(RayfireRigid scr)
		{
			return default(bool);
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0xC7B99C", Offset = "0xC7B99C", VA = "0xC7B99C")]
		public static bool Clusterize(RayfireRigid scr)
		{
			return default(bool);
		}

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0xC7BB10", Offset = "0xC7BB10", VA = "0xC7BB10")]
		private static void ClusterizeNested(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0xC7BF6C", Offset = "0xC7BF6C", VA = "0xC7BF6C")]
		private static void ClusterizeNestedRecursive(RayfireRigid scr, Transform transform, RFCluster cluster, ConnectivityType connectivity)
		{
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0xC7BD54", Offset = "0xC7BD54", VA = "0xC7BD54")]
		private static void ClusterizeConnected(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0xC7C2D8", Offset = "0xC7C2D8", VA = "0xC7C2D8")]
		public static bool DemolishCluster(RayfireRigid scr)
		{
			return default(bool);
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0xC7A544", Offset = "0xC7A544", VA = "0xC7A544")]
		public static void PostDemolitionCluster(RayfireRigid scr, List<RFShard> detachShards)
		{
		}

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0xC7C748", Offset = "0xC7C748", VA = "0xC7C748")]
		private static void CreateRigidShards(RayfireRigid scr, List<RFShard> detachShards)
		{
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0xC7C890", Offset = "0xC7C890", VA = "0xC7C890")]
		private static void CreateChildClusters(RayfireRigid scr, List<RFCluster> childClusters)
		{
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0xC7C9A0", Offset = "0xC7C9A0", VA = "0xC7C9A0")]
		private static void UpdateOriginalCluster(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xC7C408", Offset = "0xC7C408", VA = "0xC7C408")]
		private static void DemolishClusterNested(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0xC7C594", Offset = "0xC7C594", VA = "0xC7C594")]
		public static List<RFShard> DemolishConnectedCluster(RayfireRigid scr, [Optional] Collider[] detachColliders)
		{
			return null;
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0xC7D588", Offset = "0xC7D588", VA = "0xC7D588")]
		private static Collider[] GetDetachColliders(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0xC7D740", Offset = "0xC7D740", VA = "0xC7D740")]
		private static List<RFShard> DetachShardsByColliders(RayfireRigid scr, Collider[] detachColliders)
		{
			return null;
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0xC7DF20", Offset = "0xC7DF20", VA = "0xC7DF20")]
		public static void SliceConnectedCluster(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0xC7E68C", Offset = "0xC7E68C", VA = "0xC7E68C")]
		private static void SetupPlaneShards(RayfireRigid scr, List<RFShard> clusterShards, List<RFShard> detachShards)
		{
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0xC7DB48", Offset = "0xC7DB48", VA = "0xC7DB48")]
		private static void ClusterizeDetachShards(RayfireRigid scr, List<RFShard> detachShards, int clusterAmount, int sortType)
		{
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0xC7CD18", Offset = "0xC7CD18", VA = "0xC7CD18")]
		public static void CreateClusterRuntime(RayfireRigid scr, RFCluster cluster)
		{
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0xC7E9D0", Offset = "0xC7E9D0", VA = "0xC7E9D0")]
		private static void DivideAllShards(RFCluster cluster, List<RFShard> detachShards, int amount)
		{
		}

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0xC7F260", Offset = "0xC7F260", VA = "0xC7F260")]
		private static void DivideShards(RFCluster cluster, RFCluster childCluster)
		{
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0xC7F620", Offset = "0xC7F620", VA = "0xC7F620")]
		private static void DetachEdgeShards(RayfireRigid scr, RFCluster cluster, List<RFShard> detachShards, int edgeShardArea)
		{
		}

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0xC7F140", Offset = "0xC7F140", VA = "0xC7F140")]
		private static void DetachOneNeibShards(List<RFCluster> childClusters, List<RFShard> detachShards, int edgeAmount, int startIndex)
		{
		}

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0xC7F9B4", Offset = "0xC7F9B4", VA = "0xC7F9B4")]
		private static void DetachOneNeibShard(RFCluster cls, List<RFShard> detachShards)
		{
		}

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0xC7CC38", Offset = "0xC7CC38", VA = "0xC7CC38")]
		private static void AddRigidComponent(RayfireRigid scr, List<RFShard> shardList, Transform parent)
		{
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0xC7FC8C", Offset = "0xC7FC8C", VA = "0xC7FC8C")]
		private static void AddRigidComponent(RayfireRigid scr, RFShard shard, Transform parent)
		{
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0xC7FFB4", Offset = "0xC7FFB4", VA = "0xC7FFB4")]
		private static bool SameClusterCheck(RayfireRigid scr, List<RFShard> detachShards, int shardAmount, int clusterAmount)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000121")]
	public class RFDemolitionSkin
	{
		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Transform> bones;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SkinnedMeshRenderer> skins;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SkinnedMeshRenderer> skins0;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<SkinnedMeshRenderer> skins1;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<SkinnedMeshRenderer> skins2;

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0xF62878", Offset = "0xF62878", VA = "0xF62878")]
		public void SetupSkin(RayfireRigid rigid)
		{
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0xF62920", Offset = "0xF62920", VA = "0xF62920")]
		public void SeparateSkins(Vector3 planeNormal, Vector3 planePoint)
		{
		}

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0xF62B3C", Offset = "0xF62B3C", VA = "0xF62B3C")]
		public RFDemolitionSkin()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000122")]
	public class RFDemolitionMesh
	{
		[Token(Token = "0x200048C")]
		public enum MeshInputType
		{
			[Token(Token = "0x4002B57")]
			AtStart = 3,
			[Token(Token = "0x4002B58")]
			AtInitialization = 6,
			[Token(Token = "0x4002B59")]
			AtDemolition = 9
		}

		[Token(Token = "0x200048D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572928", Offset = "0x572928")]
		private sealed class <RuntimeCachingCor>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireRigid scr;

			[Token(Token = "0x4002B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RFDemolitionMesh <>4__this;

			[Token(Token = "0x4002B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <demolitionShouldLocal>5__2;

			[Token(Token = "0x4002B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<int> <batchAmount>5__3;

			[Token(Token = "0x4002B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private GameObject <tmRefGo>5__4;

			[Token(Token = "0x4002B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<Mesh> <meshesList>5__5;

			[Token(Token = "0x4002B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<Vector3> <pivotsList>5__6;

			[Token(Token = "0x4002B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private List<RFDictionary> <subList>5__7;

			[Token(Token = "0x4002B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <i>5__8;

			[Token(Token = "0x17000388")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600216C")]
				[Address(RVA = "0x86B358", Offset = "0x86B358", VA = "0x86B358", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000389")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600216E")]
				[Address(RVA = "0x86B3A0", Offset = "0x86B3A0", VA = "0x86B3A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002169")]
			[Address(RVA = "0x86AEA4", Offset = "0x86AEA4", VA = "0x86AEA4")]
			[DebuggerHidden]
			public <RuntimeCachingCor>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x600216A")]
			[Address(RVA = "0x86AED0", Offset = "0x86AED0", VA = "0x86AED0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600216B")]
			[Address(RVA = "0x86AED4", Offset = "0x86AED4", VA = "0x86AED4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600216D")]
			[Address(RVA = "0x86B360", Offset = "0x86B360", VA = "0x86B360", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577528", Offset = "0x577528")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577528", Offset = "0x577528")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577528", Offset = "0x577528")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577528", Offset = "0x577528")]
		public int amount;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5775C4", Offset = "0x5775C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5775C4", Offset = "0x5775C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5775C4", Offset = "0x5775C4")]
		public int variation;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577630", Offset = "0x577630")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577630", Offset = "0x577630")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577630", Offset = "0x577630")]
		public float depthFade;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5776A8", Offset = "0x5776A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5776A8", Offset = "0x5776A8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5776A8", Offset = "0x5776A8")]
		public float contactBias;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577710", Offset = "0x577710")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577710", Offset = "0x577710")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577710", Offset = "0x577710")]
		public int seed;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577788", Offset = "0x577788")]
		public bool useShatter;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5777C0", Offset = "0x5777C0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5777C0", Offset = "0x5777C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5777C0", Offset = "0x5777C0")]
		public MeshInputType meshInput;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RFFragmentProperties properties;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RFRuntimeCaching runtimeCaching;

		[NonSerialized]
		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int badMesh;

		[NonSerialized]
		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int shatterMode;

		[NonSerialized]
		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int totalAmount;

		[NonSerialized]
		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int innerSubId;

		[NonSerialized]
		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool compressPrefab;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public Quaternion cacheRotationStart;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Mesh mesh;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public RFShatter rfShatter;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public RayfireShatter scrShatter;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string fragmentStr;

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0xF5F938", Offset = "0xF5F938", VA = "0xF5F938")]
		public RFDemolitionMesh()
		{
		}

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0xF5FA88", Offset = "0xF5FA88", VA = "0xF5FA88")]
		public void CopyFrom(RFDemolitionMesh demolition)
		{
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0xF5FA7C", Offset = "0xF5FA7C", VA = "0xF5FA7C")]
		public void Reset()
		{
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0xF5FBC0", Offset = "0xF5FBC0", VA = "0xF5FBC0")]
		public static bool DemolishMesh(RayfireRigid scr)
		{
			return default(bool);
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0xF5FF80", Offset = "0xF5FF80", VA = "0xF5FF80")]
		public static List<RayfireRigid> CreateFragments(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0xF611F8", Offset = "0xF611F8", VA = "0xF611F8")]
		public static void SliceMesh(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0xF61C34", Offset = "0xF61C34", VA = "0xF61C34")]
		public static List<RayfireRigid> CreateSlices(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0xF608A0", Offset = "0xF608A0", VA = "0xF608A0")]
		private static void CacheRuntime(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xF62304", Offset = "0xF62304", VA = "0xF62304")]
		public static void CacheInstant(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xF60AEC", Offset = "0xF60AEC", VA = "0xF60AEC")]
		public int GetLayer(RayfireRigid scr)
		{
			return default(int);
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xF62710", Offset = "0xF62710", VA = "0xF62710")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58F660", Offset = "0x58F660")]
		public IEnumerator RuntimeCachingCor(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0xF62788", Offset = "0xF62788", VA = "0xF62788")]
		public void StopRuntimeCaching()
		{
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xF627B0", Offset = "0xF627B0", VA = "0xF627B0")]
		private void ResetRuntimeCaching(RayfireRigid scr, GameObject tmRefGo)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000123")]
	public class RFFade
	{
		[Token(Token = "0x200048E")]
		public enum RFFadeLifeType
		{
			[Token(Token = "0x4002B66")]
			ByLifeTime = 4,
			[Token(Token = "0x4002B67")]
			BySimulationAndLifeTime = 8
		}

		[Token(Token = "0x200048F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572938", Offset = "0x572938")]
		private sealed class <LivingCor>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireRigid scr;

			[Token(Token = "0x4002B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RFFade <>4__this;

			[Token(Token = "0x1700038A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002172")]
				[Address(RVA = "0x86C744", Offset = "0x86C744", VA = "0x86C744", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002174")]
				[Address(RVA = "0x86C78C", Offset = "0x86C78C", VA = "0x86C78C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600216F")]
			[Address(RVA = "0x86C4CC", Offset = "0x86C4CC", VA = "0x86C4CC")]
			[DebuggerHidden]
			public <LivingCor>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002170")]
			[Address(RVA = "0x86C4F8", Offset = "0x86C4F8", VA = "0x86C4F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002171")]
			[Address(RVA = "0x86C4FC", Offset = "0x86C4FC", VA = "0x86C4FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002173")]
			[Address(RVA = "0x86C74C", Offset = "0x86C74C", VA = "0x86C74C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572948", Offset = "0x572948")]
		private sealed class <LivingCor>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireRigidRoot root;

			[Token(Token = "0x4002B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RFShard shard;

			[Token(Token = "0x1700038C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002178")]
				[Address(RVA = "0x86C9E8", Offset = "0x86C9E8", VA = "0x86C9E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600217A")]
				[Address(RVA = "0x86CA30", Offset = "0x86CA30", VA = "0x86CA30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002175")]
			[Address(RVA = "0x86C794", Offset = "0x86C794", VA = "0x86C794")]
			[DebuggerHidden]
			public <LivingCor>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002176")]
			[Address(RVA = "0x86C7C0", Offset = "0x86C7C0", VA = "0x86C7C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002177")]
			[Address(RVA = "0x86C7C4", Offset = "0x86C7C4", VA = "0x86C7C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002179")]
			[Address(RVA = "0x86C9F0", Offset = "0x86C9F0", VA = "0x86C9F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000491")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572958", Offset = "0x572958")]
		private sealed class <FadeMoveDown>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireRigid rigid;

			[Token(Token = "0x1700038E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600217E")]
				[Address(RVA = "0x86BD94", Offset = "0x86BD94", VA = "0x86BD94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002180")]
				[Address(RVA = "0x86BDDC", Offset = "0x86BDDC", VA = "0x86BDDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600217B")]
			[Address(RVA = "0x86BB10", Offset = "0x86BB10", VA = "0x86BB10")]
			[DebuggerHidden]
			public <FadeMoveDown>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x600217C")]
			[Address(RVA = "0x86BB3C", Offset = "0x86BB3C", VA = "0x86BB3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600217D")]
			[Address(RVA = "0x86BB40", Offset = "0x86BB40", VA = "0x86BB40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600217F")]
			[Address(RVA = "0x86BD9C", Offset = "0x86BD9C", VA = "0x86BD9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000492")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572968", Offset = "0x572968")]
		private sealed class <FadeMoveDown>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RFShard shard;

			[Token(Token = "0x4002B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RayfireRigidRoot root;

			[Token(Token = "0x17000390")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002184")]
				[Address(RVA = "0x86BFBC", Offset = "0x86BFBC", VA = "0x86BFBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000391")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002186")]
				[Address(RVA = "0x86C004", Offset = "0x86C004", VA = "0x86C004", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002181")]
			[Address(RVA = "0x86BDE4", Offset = "0x86BDE4", VA = "0x86BDE4")]
			[DebuggerHidden]
			public <FadeMoveDown>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6002182")]
			[Address(RVA = "0x86BE10", Offset = "0x86BE10", VA = "0x86BE10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002183")]
			[Address(RVA = "0x86BE14", Offset = "0x86BE14", VA = "0x86BE14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002185")]
			[Address(RVA = "0x86BFC4", Offset = "0x86BFC4", VA = "0x86BFC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000493")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572978", Offset = "0x572978")]
		private sealed class <FadeScaleDownCor>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireRigid scr;

			[Token(Token = "0x4002B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <waitStep>5__2;

			[Token(Token = "0x4002B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <steps>5__3;

			[Token(Token = "0x4002B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <vectorStep>5__4;

			[Token(Token = "0x17000392")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600218A")]
				[Address(RVA = "0x86C1F0", Offset = "0x86C1F0", VA = "0x86C1F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000393")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600218C")]
				[Address(RVA = "0x86C238", Offset = "0x86C238", VA = "0x86C238", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002187")]
			[Address(RVA = "0x86C00C", Offset = "0x86C00C", VA = "0x86C00C")]
			[DebuggerHidden]
			public <FadeScaleDownCor>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002188")]
			[Address(RVA = "0x86C038", Offset = "0x86C038", VA = "0x86C038", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002189")]
			[Address(RVA = "0x86C03C", Offset = "0x86C03C", VA = "0x86C03C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600218B")]
			[Address(RVA = "0x86C1F8", Offset = "0x86C1F8", VA = "0x86C1F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572988", Offset = "0x572988")]
		private sealed class <FadeScaleDownCor>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireRigidRoot root;

			[Token(Token = "0x4002B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RFShard shard;

			[Token(Token = "0x4002B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <waitStep>5__2;

			[Token(Token = "0x4002B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <steps>5__3;

			[Token(Token = "0x4002B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 <vectorStep>5__4;

			[Token(Token = "0x17000394")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002190")]
				[Address(RVA = "0x86C47C", Offset = "0x86C47C", VA = "0x86C47C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000395")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002192")]
				[Address(RVA = "0x86C4C4", Offset = "0x86C4C4", VA = "0x86C4C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600218D")]
			[Address(RVA = "0x86C240", Offset = "0x86C240", VA = "0x86C240")]
			[DebuggerHidden]
			public <FadeScaleDownCor>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x600218E")]
			[Address(RVA = "0x86C26C", Offset = "0x86C26C", VA = "0x86C26C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600218F")]
			[Address(RVA = "0x86C270", Offset = "0x86C270", VA = "0x86C270", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002191")]
			[Address(RVA = "0x86C484", Offset = "0x86C484", VA = "0x86C484", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000495")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572998", Offset = "0x572998")]
		private sealed class <SimulationCor>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform tm;

			[Token(Token = "0x4002B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timeStep>5__2;

			[Token(Token = "0x4002B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Vector3 <oldPos>5__3;

			[Token(Token = "0x4002B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <distanceThreshold>5__4;

			[Token(Token = "0x17000396")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002196")]
				[Address(RVA = "0x86CB90", Offset = "0x86CB90", VA = "0x86CB90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000397")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002198")]
				[Address(RVA = "0x86CBD8", Offset = "0x86CBD8", VA = "0x86CBD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002193")]
			[Address(RVA = "0x86CA38", Offset = "0x86CA38", VA = "0x86CA38")]
			[DebuggerHidden]
			public <SimulationCor>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002194")]
			[Address(RVA = "0x86CA64", Offset = "0x86CA64", VA = "0x86CA64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002195")]
			[Address(RVA = "0x86CA68", Offset = "0x86CA68", VA = "0x86CA68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002197")]
			[Address(RVA = "0x86CB98", Offset = "0x86CB98", VA = "0x86CB98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577874", Offset = "0x577874")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577874", Offset = "0x577874")]
		public bool onDemolition;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool onActivation;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5778C4", Offset = "0x5778C4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5778C4", Offset = "0x5778C4")]
		public RFFadeLifeType lifeType;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577914", Offset = "0x577914")]
		public float lifeTime;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577930", Offset = "0x577930")]
		public float lifeVariation;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577948", Offset = "0x577948")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577948", Offset = "0x577948")]
		public FadeType fadeType;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577998", Offset = "0x577998")]
		public float fadeTime;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5779B0", Offset = "0x5779B0")]
		public float sizeFilter;

		[NonSerialized]
		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int state;

		[NonSerialized]
		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool stop;

		[NonSerialized]
		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 position;

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0xF6384C", Offset = "0xF6384C", VA = "0xF6384C")]
		public RFFade()
		{
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0xF638A4", Offset = "0xF638A4", VA = "0xF638A4")]
		public void CopyFrom(RFFade fade)
		{
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0xF63898", Offset = "0xF63898", VA = "0xF63898")]
		public void Reset()
		{
		}

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0xF638FC", Offset = "0xF638FC", VA = "0xF638FC")]
		public void DemolitionFade(List<RayfireRigid> fadeObjects)
		{
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0xF63A28", Offset = "0xF63A28", VA = "0xF63A28")]
		public static void FadeRigid(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0xF63B58", Offset = "0xF63B58", VA = "0xF63B58")]
		public static void FadeShard(RayfireRigidRoot scr, RFShard shard)
		{
		}

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0xF63AE0", Offset = "0xF63AE0", VA = "0xF63AE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58F6C0", Offset = "0x58F6C0")]
		private IEnumerator LivingCor(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0xF63BCC", Offset = "0xF63BCC", VA = "0xF63BCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58F720", Offset = "0x58F720")]
		private IEnumerator LivingCor(RayfireRigidRoot root, RFShard shard)
		{
			return null;
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0xF63C44", Offset = "0xF63C44", VA = "0xF63C44")]
		private static void FadeExclude(RayfireRigid rigid)
		{
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0xF63D5C", Offset = "0xF63D5C", VA = "0xF63D5C")]
		private static void FadeExclude(RayfireRigidRoot root, RFShard shard)
		{
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0xF63E48", Offset = "0xF63E48", VA = "0xF63E48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58F780", Offset = "0x58F780")]
		private static IEnumerator FadeMoveDown(RayfireRigid rigid)
		{
			return null;
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0xF63EB4", Offset = "0xF63EB4", VA = "0xF63EB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58F7E0", Offset = "0x58F7E0")]
		private static IEnumerator FadeMoveDown(RayfireRigidRoot root, RFShard shard)
		{
			return null;
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0xF63F2C", Offset = "0xF63F2C", VA = "0xF63F2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58F840", Offset = "0x58F840")]
		private static IEnumerator FadeScaleDownCor(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0xF63F98", Offset = "0xF63F98", VA = "0xF63F98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58F8A0", Offset = "0x58F8A0")]
		private static IEnumerator FadeScaleDownCor(RayfireRigidRoot root, RFShard shard)
		{
			return null;
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0xF64010", Offset = "0xF64010", VA = "0xF64010")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58F900", Offset = "0x58F900")]
		private static IEnumerator SimulationCor(Transform tm)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000124")]
	public class RFFragmentProperties
	{
		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5779C8", Offset = "0x5779C8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5779C8", Offset = "0x5779C8")]
		public RFColliderType colliderType;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577A18", Offset = "0x577A18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577A18", Offset = "0x577A18")]
		public float sizeFilter;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577A6C", Offset = "0x577A6C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577A6C", Offset = "0x577A6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577A6C", Offset = "0x577A6C")]
		public bool decompose;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577AE0", Offset = "0x577AE0")]
		public bool removeCollinear;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577B18", Offset = "0x577B18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577B18", Offset = "0x577B18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577B18", Offset = "0x577B18")]
		public string layer;

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0xF5FA1C", Offset = "0xF5FA1C", VA = "0xF5FA1C")]
		public RFFragmentProperties()
		{
		}

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0xF5FB88", Offset = "0xF5FB88", VA = "0xF5FB88")]
		public void CopyFrom(RFFragmentProperties fragmentProperties)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000125")]
	public class RFLimitations
	{
		[Token(Token = "0x2000496")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5729A8", Offset = "0x5729A8")]
		private sealed class <DemolishableCor>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RFLimitations <>4__this;

			[Token(Token = "0x4002B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RayfireRigid scr;

			[Token(Token = "0x17000398")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600219C")]
				[Address(RVA = "0x86CDD4", Offset = "0x86CDD4", VA = "0x86CDD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000399")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600219E")]
				[Address(RVA = "0x86CE1C", Offset = "0x86CE1C", VA = "0x86CE1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002199")]
			[Address(RVA = "0x86CC88", Offset = "0x86CC88", VA = "0x86CC88")]
			[DebuggerHidden]
			public <DemolishableCor>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x600219A")]
			[Address(RVA = "0x86CCB4", Offset = "0x86CCB4", VA = "0x86CCB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600219B")]
			[Address(RVA = "0x86CCB8", Offset = "0x86CCB8", VA = "0x86CCB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600219D")]
			[Address(RVA = "0x86CDDC", Offset = "0x86CDDC", VA = "0x86CDDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577B8C", Offset = "0x577B8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577B8C", Offset = "0x577B8C")]
		public float solidity;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577BE0", Offset = "0x577BE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577BE0", Offset = "0x577BE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577BE0", Offset = "0x577BE0")]
		public int depth;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577C48", Offset = "0x577C48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577C48", Offset = "0x577C48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577C48", Offset = "0x577C48")]
		public float time;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577CB4", Offset = "0x577CB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577CB4", Offset = "0x577CB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577CB4", Offset = "0x577CB4")]
		public float size;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577D20", Offset = "0x577D20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577D20", Offset = "0x577D20")]
		public bool visible;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577D70", Offset = "0x577D70")]
		public bool sliceByBlade;

		[NonSerialized]
		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Vector3> slicePlanes;

		[NonSerialized]
		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ContactPoint contactPoint;

		[NonSerialized]
		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 contactVector3;

		[NonSerialized]
		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 contactNormal;

		[NonSerialized]
		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool demolitionShould;

		[NonSerialized]
		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool demolished;

		[NonSerialized]
		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float birthTime;

		[NonSerialized]
		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float bboxSize;

		[NonSerialized]
		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int currentDepth;

		[NonSerialized]
		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool demolishableCorState;

		[NonSerialized]
		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float sliceForce;

		[NonSerialized]
		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool affectInactive;

		[NonSerialized]
		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public RayfireRigid ancestor;

		[NonSerialized]
		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<RayfireRigid> descendants;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Bounds bound;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string rootStr;

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0xF67C60", Offset = "0xF67C60", VA = "0xF67C60")]
		public RFLimitations()
		{
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0xF67D4C", Offset = "0xF67D4C", VA = "0xF67D4C")]
		public void CopyFrom(RFLimitations limitations)
		{
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0xF67CB8", Offset = "0xF67CB8", VA = "0xF67CB8")]
		public void Reset()
		{
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0xF67D90", Offset = "0xF67D90", VA = "0xF67D90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58F960", Offset = "0x58F960")]
		public IEnumerator DemolishableCor(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0xF67E08", Offset = "0xF67E08", VA = "0xF67E08")]
		public static void Checks(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0xF69684", Offset = "0xF69684", VA = "0xF69684")]
		public static void SetBound(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0xF6976C", Offset = "0xF6976C", VA = "0xF6976C")]
		public static void SetAncestor(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0xF698BC", Offset = "0xF698BC", VA = "0xF698BC")]
		public static void SetDescendants(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0xF6097C", Offset = "0xF6097C", VA = "0xF6097C")]
		public static void CreateRoot(RayfireRigid rfScr)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000126")]
	public class RFPhysic
	{
		[Token(Token = "0x2000497")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5729B8", Offset = "0x5729B8")]
		private sealed class <PhysicsDataCor>d__58 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RFPhysic <>4__this;

			[Token(Token = "0x4002B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RayfireRigid scr;

			[Token(Token = "0x1700039A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021A2")]
				[Address(RVA = "0x86D08C", Offset = "0x86D08C", VA = "0x86D08C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021A4")]
				[Address(RVA = "0x86D0D4", Offset = "0x86D0D4", VA = "0x86D0D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600219F")]
			[Address(RVA = "0x86CECC", Offset = "0x86CECC", VA = "0x86CECC")]
			[DebuggerHidden]
			public <PhysicsDataCor>d__58(int <>1__state)
			{
			}

			[Token(Token = "0x60021A0")]
			[Address(RVA = "0x86CEF8", Offset = "0x86CEF8", VA = "0x86CEF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021A1")]
			[Address(RVA = "0x86CEFC", Offset = "0x86CEFC", VA = "0x86CEFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021A3")]
			[Address(RVA = "0x86D094", Offset = "0x86D094", VA = "0x86D094", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577DB8", Offset = "0x577DB8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577DB8", Offset = "0x577DB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577DB8", Offset = "0x577DB8")]
		public MaterialType materialType;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577E2C", Offset = "0x577E2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577E2C", Offset = "0x577E2C")]
		public PhysicMaterial material;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577E7C", Offset = "0x577E7C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577E7C", Offset = "0x577E7C")]
		public MassType massBy;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577ECC", Offset = "0x577ECC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577ECC", Offset = "0x577ECC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577ECC", Offset = "0x577ECC")]
		public float mass;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577F3C", Offset = "0x577F3C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577F3C", Offset = "0x577F3C")]
		public RFColliderType colliderType;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577F8C", Offset = "0x577F8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577F8C", Offset = "0x577F8C")]
		public bool planarCheck;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x577FDC", Offset = "0x577FDC")]
		[HideInInspector]
		public bool ignoreNeighbour;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x578018", Offset = "0x578018")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578018", Offset = "0x578018")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578018", Offset = "0x578018")]
		public bool useGravity;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57808C", Offset = "0x57808C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57808C", Offset = "0x57808C")]
		public int solverIterations;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5780D0", Offset = "0x5780D0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5780D0", Offset = "0x5780D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5780D0", Offset = "0x5780D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5780D0", Offset = "0x5780D0")]
		public float dampening;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Rigidbody rigidBody;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Collider meshCollider;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public List<Collider> clusterColliders;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public List<int> ignoreList;

		[NonSerialized]
		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool rec;

		[NonSerialized]
		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool exclude;

		[NonSerialized]
		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int solidity;

		[NonSerialized]
		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool destructible;

		[NonSerialized]
		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool physicsDataCorState;

		[NonSerialized]
		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Quaternion rotation;

		[NonSerialized]
		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 position;

		[NonSerialized]
		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 velocity;

		[NonSerialized]
		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Vector3 initScale;

		[NonSerialized]
		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 initPosition;

		[NonSerialized]
		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Quaternion initRotation;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int coplanarVertLimit;

		[Token(Token = "0x1700001C")]
		public bool HasIgnore
		{
			[Token(Token = "0x6000527")]
			[Address(RVA = "0xF73CB4", Offset = "0xF73CB4", VA = "0xF73CB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700001D")]
		public bool HasClusterColliders
		{
			[Token(Token = "0x6000528")]
			[Address(RVA = "0xF72EA0", Offset = "0xF72EA0", VA = "0xF72EA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700001E")]
		public bool Destructible
		{
			[Token(Token = "0x6000529")]
			[Address(RVA = "0xF7409C", Offset = "0xF7409C", VA = "0xF7409C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700001F")]
		public int Solidity
		{
			[Token(Token = "0x600052A")]
			[Address(RVA = "0xF74118", Offset = "0xF74118", VA = "0xF74118")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000020")]
		public PhysicMaterial PhysMaterial
		{
			[Token(Token = "0x600052B")]
			[Address(RVA = "0xF73694", Offset = "0xF73694", VA = "0xF73694")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0xF71738", Offset = "0xF71738", VA = "0xF71738")]
		public RFPhysic()
		{
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0xF71800", Offset = "0xF71800", VA = "0xF71800")]
		public void CopyFrom(RFPhysic physics)
		{
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0xF717F8", Offset = "0xF717F8", VA = "0xF717F8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0xF71850", Offset = "0xF71850", VA = "0xF71850")]
		public static void SetSimulationType(Rigidbody rb, SimType simulationType, ObjectType objectType, bool useGravity, int solver)
		{
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0xF71AD8", Offset = "0xF71AD8", VA = "0xF71AD8")]
		private static void SetDynamic(Rigidbody rb, bool useGravity)
		{
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0xF71B18", Offset = "0xF71B18", VA = "0xF71B18")]
		private static void SetSleeping(Rigidbody rb, bool useGravity)
		{
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0xF71B64", Offset = "0xF71B64", VA = "0xF71B64")]
		private static void SetInactive(Rigidbody rb)
		{
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0xF71BAC", Offset = "0xF71BAC", VA = "0xF71BAC")]
		private static void SetKinematic(Rigidbody rb, bool useGravity)
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0xF71BFC", Offset = "0xF71BFC", VA = "0xF71BFC")]
		public static void SetDensity(RayfireRigid scr)
		{
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0xF720A0", Offset = "0xF720A0", VA = "0xF720A0")]
		public static void SetDensity(RayfireRigidRoot scr, RFShard shard, float density)
		{
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0xF71F34", Offset = "0xF71F34", VA = "0xF71F34")]
		private static float MassLimit(float m)
		{
			return default(float);
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0xF611B8", Offset = "0xF611B8", VA = "0xF611B8")]
		public static void SetMassByParent(RFPhysic target, float targetSize, float parentMass, float parentSize)
		{
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0xF7219C", Offset = "0xF7219C", VA = "0xF7219C")]
		public static void SetDrag(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0xF72284", Offset = "0xF72284", VA = "0xF72284")]
		public static void SetDrag(RFShard shard, float drag, float dragAngular)
		{
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0xF722D4", Offset = "0xF722D4", VA = "0xF722D4")]
		public static void SetFragmentsVelocity(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0xF61078", Offset = "0xF61078", VA = "0xF61078")]
		public static void SetFragmentMeshCollider(RayfireRigid scr, Mesh mesh)
		{
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0xF72594", Offset = "0xF72594", VA = "0xF72594")]
		public static void SetCollider(RayfireRigid scr, [Optional] Mesh mesh)
		{
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0xF72A34", Offset = "0xF72A34", VA = "0xF72A34")]
		public static void SetCollider(RayfireRigidRoot scr, RFShard shard)
		{
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0xF72BC0", Offset = "0xF72BC0", VA = "0xF72BC0")]
		public static bool SetClusterCollidersByShards(RayfireRigid scr)
		{
			return default(bool);
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0xF72EFC", Offset = "0xF72EFC", VA = "0xF72EFC")]
		private static void SetShardColliders(RayfireRigid scr, RFCluster cluster)
		{
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0xF73140", Offset = "0xF73140", VA = "0xF73140")]
		private static void SetDeepShardColliders(RayfireRigid scr, RFCluster cluster)
		{
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0xF73254", Offset = "0xF73254", VA = "0xF73254")]
		public static void CollectClusterColliders(RayfireRigid scr, RFCluster cluster)
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0xF7333C", Offset = "0xF7333C", VA = "0xF7333C")]
		private static void CollectDeepColliders(RayfireRigid scr, RFCluster cluster)
		{
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0xF734D0", Offset = "0xF734D0", VA = "0xF734D0")]
		public static void SetColliderMaterial(RayfireRigid scr)
		{
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0xF7371C", Offset = "0xF7371C", VA = "0xF7371C")]
		public static void SetColliderMaterial(RayfireRigidRoot scr, RFShard shard)
		{
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0xF737D0", Offset = "0xF737D0", VA = "0xF737D0")]
		public static void SetParticleColliderMaterial(List<RayfireDebris> debris)
		{
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0xF738FC", Offset = "0xF738FC", VA = "0xF738FC")]
		public static void SetColliderConvex(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0xF739FC", Offset = "0xF739FC", VA = "0xF739FC")]
		public static void DestroyColliders(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0xF72D34", Offset = "0xF72D34", VA = "0xF72D34")]
		public void CollidersRemoveNull(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0xF73BBC", Offset = "0xF73BBC", VA = "0xF73BBC")]
		public static void SetIgnoreColliders(RFPhysic physics, List<RFShard> shards)
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0xF73D0C", Offset = "0xF73D0C", VA = "0xF73D0C")]
		public static List<int> GetIgnoreList(List<RFShard> shards)
		{
			return null;
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0xF73EDC", Offset = "0xF73EDC", VA = "0xF73EDC")]
		public static void IgnoreNeibCollision(List<RFShard> shards, List<int> pr)
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0xF74024", Offset = "0xF74024", VA = "0xF74024")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58F9C0", Offset = "0x58F9C0")]
		public IEnumerator PhysicsDataCor(RayfireRigid scr)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000127")]
	public class RFReferenceDemolition
	{
		[Token(Token = "0x2000498")]
		public enum ActionType
		{
			[Token(Token = "0x4002B93")]
			Instantiate,
			[Token(Token = "0x4002B94")]
			SetActive
		}

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57819C", Offset = "0x57819C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57819C", Offset = "0x57819C")]
		public GameObject reference;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5781EC", Offset = "0x5781EC")]
		public List<GameObject> randomList;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x578200", Offset = "0x578200")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578200", Offset = "0x578200")]
		public ActionType action;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578250", Offset = "0x578250")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578250", Offset = "0x578250")]
		public bool addRigid;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5782A0", Offset = "0x5782A0")]
		public bool inheritScale;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5782B4", Offset = "0x5782B4")]
		public bool inheritMaterials;

		[Token(Token = "0x600052D")]
		[Address(RVA = "0xC3F3A4", Offset = "0xC3F3A4", VA = "0xC3F3A4")]
		public RFReferenceDemolition()
		{
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0xC3F3D8", Offset = "0xC3F3D8", VA = "0xC3F3D8")]
		public void CopyFrom(RFReferenceDemolition referenceDemolitionDml)
		{
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0xC3F4AC", Offset = "0xC3F4AC", VA = "0xC3F4AC")]
		public GameObject GetReference()
		{
			return null;
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0xC3F718", Offset = "0xC3F718", VA = "0xC3F718")]
		public static bool DemolishReference(RayfireRigid scr)
		{
			return default(bool);
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0xC3FCC8", Offset = "0xC3FCC8", VA = "0xC3FCC8")]
		private static GameObject GetInstance(RayfireRigid scr, GameObject refGo)
		{
			return null;
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0xC3FE88", Offset = "0xC3FE88", VA = "0xC3FE88")]
		private static void InheritMaterials(RayfireRigid scr, GameObject instGo)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000128")]
	public class RFReset
	{
		[Token(Token = "0x2000499")]
		public enum PostDemolitionType
		{
			[Token(Token = "0x4002B96")]
			DestroyWithDelay,
			[Token(Token = "0x4002B97")]
			DeactivateToReset
		}

		[Token(Token = "0x200049A")]
		public enum MeshResetType
		{
			[Token(Token = "0x4002B99")]
			Destroy = 0,
			[Token(Token = "0x4002B9A")]
			ReuseInputMesh = 2,
			[Token(Token = "0x4002B9B")]
			ReuseFragmentMeshes = 4
		}

		[Token(Token = "0x200049B")]
		public enum FragmentsResetType
		{
			[Token(Token = "0x4002B9D")]
			Destroy = 0,
			[Token(Token = "0x4002B9E")]
			Reuse = 2,
			[Token(Token = "0x4002B9F")]
			Preserve = 4
		}

		[Token(Token = "0x200049C")]
		public enum ShardsResetType
		{
			[Token(Token = "0x4002BA1")]
			DestroyRigid = 0,
			[Token(Token = "0x4002BA2")]
			ReuseRigid = 2
		}

		[Serializable]
		[Token(Token = "0x200049D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5729C8", Offset = "0x5729C8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<RayfireRigid, bool> <>9__19_0;

			[Token(Token = "0x4002BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<RayfireRigid, bool> <>9__19_1;

			[Token(Token = "0x4002BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<RayfireRigid, bool> <>9__25_0;

			[Token(Token = "0x4002BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<RayfireRigid, bool> <>9__25_1;

			[Token(Token = "0x4002BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<RayfireRigid, bool> <>9__25_2;

			[Token(Token = "0x60021A6")]
			[Address(RVA = "0x86D570", Offset = "0x86D570", VA = "0x86D570")]
			public <>c()
			{
			}

			[Token(Token = "0x60021A7")]
			[Address(RVA = "0x86D578", Offset = "0x86D578", VA = "0x86D578")]
			internal bool <DestroyFragments>b__19_0(RayfireRigid t)
			{
				return default(bool);
			}

			[Token(Token = "0x60021A8")]
			[Address(RVA = "0x86D5E0", Offset = "0x86D5E0", VA = "0x86D5E0")]
			internal bool <DestroyFragments>b__19_1(RayfireRigid t)
			{
				return default(bool);
			}

			[Token(Token = "0x60021A9")]
			[Address(RVA = "0x86D648", Offset = "0x86D648", VA = "0x86D648")]
			internal bool <FragmentReuseState>b__25_0(RayfireRigid t)
			{
				return default(bool);
			}

			[Token(Token = "0x60021AA")]
			[Address(RVA = "0x86D6B0", Offset = "0x86D6B0", VA = "0x86D6B0")]
			internal bool <FragmentReuseState>b__25_1(RayfireRigid t)
			{
				return default(bool);
			}

			[Token(Token = "0x60021AB")]
			[Address(RVA = "0x86D6D4", Offset = "0x86D6D4", VA = "0x86D6D4")]
			internal bool <FragmentReuseState>b__25_2(RayfireRigid t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5782C8", Offset = "0x5782C8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5782C8", Offset = "0x5782C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5782C8", Offset = "0x5782C8")]
		public bool transform;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57833C", Offset = "0x57833C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57833C", Offset = "0x57833C")]
		public bool damage;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57838C", Offset = "0x57838C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57838C", Offset = "0x57838C")]
		public PostDemolitionType action;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5783DC", Offset = "0x5783DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5783DC", Offset = "0x5783DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5783DC", Offset = "0x5783DC")]
		public float destroyDelay;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x578448", Offset = "0x578448")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578448", Offset = "0x578448")]
		public MeshResetType mesh;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578498", Offset = "0x578498")]
		public FragmentsResetType fragments;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5784AC", Offset = "0x5784AC")]
		[HideInInspector]
		public ShardsResetType shards;

		[NonSerialized]
		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool toBeDestroyed;

		[Token(Token = "0x6000533")]
		[Address(RVA = "0xC40074", Offset = "0xC40074", VA = "0xC40074")]
		public RFReset()
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0xC400B8", Offset = "0xC400B8", VA = "0xC400B8")]
		public void CopyFrom(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0xC40180", Offset = "0xC40180", VA = "0xC40180")]
		private static bool MeshRootReset(RayfireRigid scr)
		{
			return default(bool);
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0xC402B4", Offset = "0xC402B4", VA = "0xC402B4")]
		public static void ResetRigid(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0xC407D8", Offset = "0xC407D8", VA = "0xC407D8")]
		private static void ResetFade(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0xC409A0", Offset = "0xC409A0", VA = "0xC409A0")]
		public static void ResetRigidRoot(RayfireRigidRoot scr)
		{
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0xC408B0", Offset = "0xC408B0", VA = "0xC408B0")]
		private static void ResetMeshDemolition(RayfireRigid scr)
		{
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0xC410C0", Offset = "0xC410C0", VA = "0xC410C0")]
		private static void DestroyFragments(RayfireRigid scr)
		{
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0xC418F0", Offset = "0xC418F0", VA = "0xC418F0")]
		private static void DestroyParticles(RayfireRigid scr)
		{
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0xC40C58", Offset = "0xC40C58", VA = "0xC40C58")]
		private static void ReuseFragments(RayfireRigid scr)
		{
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0xC41888", Offset = "0xC41888", VA = "0xC41888")]
		private static void PreserveFragments(RayfireRigid scr)
		{
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0xC40974", Offset = "0xC40974", VA = "0xC40974")]
		private static void ResetClusterDemolition(RayfireRigid scr)
		{
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0xC403C4", Offset = "0xC403C4", VA = "0xC403C4")]
		private static bool ObjectReuseState(RayfireRigid scr)
		{
			return default(bool);
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0xC409A4", Offset = "0xC409A4", VA = "0xC409A4")]
		private static bool FragmentReuseState(RayfireRigid scr)
		{
			return default(bool);
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0xC40510", Offset = "0xC40510", VA = "0xC40510")]
		private static void RestoreTransform(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0xC4065C", Offset = "0xC4065C", VA = "0xC4065C")]
		private static void Reset(RayfireRigid scr)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000129")]
	public class RFRuntimeCaching
	{
		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CachingType type;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5784E8", Offset = "0x5784E8")]
		public int frames;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x578504", Offset = "0x578504")]
		public int fragments;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool skipFirstDemolition;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[HideInInspector]
		public bool inProgress;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		[HideInInspector]
		public bool wasUsed;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		[HideInInspector]
		public bool stop;

		[Token(Token = "0x6000543")]
		[Address(RVA = "0xC41F28", Offset = "0xC41F28", VA = "0xC41F28")]
		public RFRuntimeCaching()
		{
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0xC41F58", Offset = "0xC41F58", VA = "0xC41F58")]
		public static List<int> GetBatchByFrames(int frames, int amount)
		{
			return null;
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0xC4211C", Offset = "0xC4211C", VA = "0xC4211C")]
		public static List<int> GetBatchByFragments(int fragments, int amount)
		{
			return null;
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0xC42208", Offset = "0xC42208", VA = "0xC42208")]
		public static List<int> GetMarkedElements(int batchInd, List<int> batchAmount)
		{
			return null;
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0xC42358", Offset = "0xC42358", VA = "0xC42358")]
		public static GameObject CreateTmRef(RayfireRigid rfScr)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200012A")]
	public class RFCustom
	{
		[Token(Token = "0x200049E")]
		public enum RFPointCloudSourceType
		{
			[Token(Token = "0x4002BAA")]
			ChildrenTransform = 4,
			[Token(Token = "0x4002BAB")]
			TransformArray = 8,
			[Token(Token = "0x4002BAC")]
			Vector3Array = 12
		}

		[Token(Token = "0x200049F")]
		public enum RFPointCloudUseType
		{
			[Token(Token = "0x4002BAE")]
			VolumePoints = 4,
			[Token(Token = "0x4002BAF")]
			PointCloud = 12
		}

		[Token(Token = "0x20004A0")]
		public enum RFModifierType
		{
			[Token(Token = "0x4002BB1")]
			None = 0,
			[Token(Token = "0x4002BB2")]
			Splinters = 3,
			[Token(Token = "0x4002BB3")]
			Slabs = 6
		}

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57854C", Offset = "0x57854C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57854C", Offset = "0x57854C")]
		public RFPointCloudSourceType source;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57859C", Offset = "0x57859C")]
		public RFPointCloudUseType useAs;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5785B0", Offset = "0x5785B0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5785B0", Offset = "0x5785B0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5785B0", Offset = "0x5785B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5785B0", Offset = "0x5785B0")]
		public int amount;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57863C", Offset = "0x57863C")]
		public float radius;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x578658", Offset = "0x578658")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578658", Offset = "0x578658")]
		public bool enable;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5786A8", Offset = "0x5786A8")]
		public float size;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5786C8", Offset = "0x5786C8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5786C8", Offset = "0x5786C8")]
		public Transform[] transforms;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3[] vector3;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool noPoints;

		[Token(Token = "0x6000548")]
		[Address(RVA = "0xC7ACD4", Offset = "0xC7ACD4", VA = "0xC7ACD4")]
		public RFCustom()
		{
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0xC7AD24", Offset = "0xC7AD24", VA = "0xC7AD24")]
		public RFCustom(RFCustom src)
		{
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0xC7AD90", Offset = "0xC7AD90", VA = "0xC7AD90")]
		public static List<Vector3> GetCustomPointCLoud(RFCustom custom, Transform tm, int seed, Bounds bound)
		{
			return null;
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0xC7AE58", Offset = "0xC7AE58", VA = "0xC7AE58")]
		private static List<Vector3> GetCustomInputCloud(RFCustom custom, Transform tm)
		{
			return null;
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0xC7B0D4", Offset = "0xC7B0D4", VA = "0xC7B0D4")]
		private static List<Vector3> GetCustomOutputCloud(RFCustom custom, List<Vector3> inputPoints, int seed, Bounds bound)
		{
			return null;
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0xC7B314", Offset = "0xC7B314", VA = "0xC7B314")]
		private static List<Vector3> GetCustomBoundPoints(List<Vector3> inputPoints, Bounds bound)
		{
			return null;
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0xC7B408", Offset = "0xC7B408", VA = "0xC7B408")]
		private static Vector3 RandomPointInRadius(Vector3 point, float radius)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0xC7B480", Offset = "0xC7B480", VA = "0xC7B480")]
		private static Vector3 RandomVector()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200012B")]
	public static class RFFragment
	{
		[Token(Token = "0x20004A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5729D8", Offset = "0x5729D8")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4002BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RFSlice slices;

			[Token(Token = "0x60021AC")]
			[Address(RVA = "0x86CC64", Offset = "0x86CC64", VA = "0x86CC64")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x60021AD")]
			[Address(RVA = "0x86CC6C", Offset = "0x86CC6C", VA = "0x86CC6C")]
			internal Vector3 <SetSlices>b__1(Transform t)
			{
				return default(Vector3);
			}
		}

		[Serializable]
		[Token(Token = "0x20004A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5729E8", Offset = "0x5729E8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Transform, Vector3> <>9__27_0;

			[Token(Token = "0x60021AF")]
			[Address(RVA = "0x86CC40", Offset = "0x86CC40", VA = "0x86CC40")]
			public <>c()
			{
			}

			[Token(Token = "0x60021B0")]
			[Address(RVA = "0x86CC48", Offset = "0x86CC48", VA = "0x86CC48")]
			internal Vector3 <SetSlices>b__27_0(Transform t)
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool silentMode;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Mesh> meshListStatic;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<Vector3> pivotListStatic;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<Dictionary<int, int>> subIdsListStatic;

		[Token(Token = "0x6000550")]
		[Address(RVA = "0xF640F0", Offset = "0xF640F0", VA = "0xF640F0")]
		public static void CacheMeshes(ref Mesh[] meshes, ref Vector3[] pivots, ref List<RFDictionary> origSubMeshIdsRf, RayfireShatter scrShatter)
		{
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0xF656F0", Offset = "0xF656F0", VA = "0xF656F0")]
		private static void RemovePlanar(ref Mesh[] meshes, ref Vector3[] pivots, ref List<RFDictionary> origSubMeshIdsRf, RayfireShatter scrShatter)
		{
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0xF659FC", Offset = "0xF659FC", VA = "0xF659FC")]
		private static void RemoveBySize(ref Mesh[] meshes, ref Vector3[] pivots, ref List<RFDictionary> origSubMeshIdsRf, RayfireShatter scr)
		{
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0xF623C0", Offset = "0xF623C0", VA = "0xF623C0")]
		public static bool InputMesh(RayfireRigid scr)
		{
			return default(bool);
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0xF65EE0", Offset = "0xF65EE0", VA = "0xF65EE0")]
		private static bool SetRigidShatter(RayfireRigid scr)
		{
			return default(bool);
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0xF62490", Offset = "0xF62490", VA = "0xF62490")]
		public static void CacheMeshesInst(ref Mesh[] meshes, ref Vector3[] pivots, ref List<RFDictionary> origSubMeshIdsRf, RayfireRigid scrRigid)
		{
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0xF66278", Offset = "0xF66278", VA = "0xF66278")]
		public static void CacheMeshesMult(Transform tmSaved, ref List<Mesh> meshesList, ref List<Vector3> pivotsList, ref List<RFDictionary> subList, RayfireRigid scrRigid, List<int> batchAmount, int batchInd)
		{
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0xF660F4", Offset = "0xF660F4", VA = "0xF660F4")]
		private static void FinalCacheMeshes(ref Mesh[] meshes, RayfireRigid scrRigid, bool successState)
		{
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0xF6605C", Offset = "0xF6605C", VA = "0xF6605C")]
		private static Mesh GetDemolitionMesh(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0xF64704", Offset = "0xF64704", VA = "0xF64704")]
		private static Mesh GetDemolitionMesh(RayfireShatter scr)
		{
			return null;
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0xF61664", Offset = "0xF61664", VA = "0xF61664")]
		public static void SliceMeshes(ref Mesh[] meshes, ref Vector3[] pivots, ref List<RFDictionary> origSubMeshIdsRf, RayfireRigid scr, List<Vector3> sliceData)
		{
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0xF651A0", Offset = "0xF651A0", VA = "0xF651A0")]
		private static bool Compute(int shatterMode, RFShatter shatter, Transform tm, ref Mesh[] meshes, ref Vector3[] pivots, Mesh mesh, int innerSubId, ref List<Dictionary<int, int>> subIds, UnityEngine.Object obj, [Optional] List<int> markedElements)
		{
			return default(bool);
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0xF64644", Offset = "0xF64644", VA = "0xF64644")]
		private static int GetShatterMode([Optional] RayfireShatter scrShatter)
		{
			return default(int);
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0xF6665C", Offset = "0xF6665C", VA = "0xF6665C")]
		private static bool EmptyMeshState(Mesh[] meshes)
		{
			return default(bool);
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0xF64B10", Offset = "0xF64B10", VA = "0xF64B10")]
		private static void SetFragmentProperties(RFShatter shatter, RayfireShatter scrSh, RayfireRigid scrRigid)
		{
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0xF6479C", Offset = "0xF6479C", VA = "0xF6479C")]
		private static RFShatter SetShatter(int shatterMode, Mesh mesh, Transform transform, RFSurface interior, bool decompose, bool deleteCol, int seed = 1, FragmentMode mode = FragmentMode.Runtime, bool preCap = true, bool remCap = false, bool remDbl = true, bool exInside = false, int percSize = 3)
		{
			return null;
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0xF676FC", Offset = "0xF676FC", VA = "0xF676FC")]
		private static void SetShatterEditorMode(RFShatter shatter, float sizeFilter, bool preCap, bool remCap, bool remDbl, bool exInside)
		{
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0xF67860", Offset = "0xF67860", VA = "0xF67860")]
		private static void SetShatterRuntimeMode(RFShatter shatter)
		{
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0xF666DC", Offset = "0xF666DC", VA = "0xF666DC")]
		private static void SetVoronoi(RFShatter shatter, int numFragments, Transform tm, Vector3 centerPos, float centerBias)
		{
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0xF66820", Offset = "0xF66820", VA = "0xF66820")]
		private static void SetSplinters(RFShatter shatter, RFSplinters splint, Transform tm, Vector3 centerPos, float centerBias)
		{
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0xF66984", Offset = "0xF66984", VA = "0xF66984")]
		private static void SetSlabs(RFShatter shatter, RFSplinters slabs, Transform tm, Vector3 centerPos, float centerBias)
		{
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0xF66AE8", Offset = "0xF66AE8", VA = "0xF66AE8")]
		private static void SetRadial(RFShatter shatter, RFRadial radial, Transform tm, Vector3 centerPos, Quaternion centerDirection)
		{
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0xF66D48", Offset = "0xF66D48", VA = "0xF66D48")]
		private static void SetCustom(RFShatter shatter, RFCustom custom, Transform tm, MeshFilter mf, Bounds bound, RFSplinters splint, RFSplinters slabs, int seed)
		{
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0xF66E40", Offset = "0xF66E40", VA = "0xF66E40")]
		private static void SetSlices(RFShatter shatter, Transform tm, RFSlice slices)
		{
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0xF671A0", Offset = "0xF671A0", VA = "0xF671A0")]
		private static void SetTet(RFShatter shatter, Bounds bounds, RFTets tets)
		{
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0xF674C0", Offset = "0xF674C0", VA = "0xF674C0")]
		private static void SetDecompose(RFShatter shatter)
		{
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0xF6751C", Offset = "0xF6751C", VA = "0xF6751C")]
		private static void SetClusters(RFShatter shatter, RFShatterCluster gluing)
		{
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0xF6791C", Offset = "0xF6791C", VA = "0xF6791C")]
		private static void SetStretching(RFShatter shatter, AxisType axis, float strength, FragType fragType)
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0xF67A38", Offset = "0xF67A38", VA = "0xF67A38")]
		private static Vector3 DirectionAxis(AxisType axisType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0xF67A60", Offset = "0xF67A60", VA = "0xF67A60")]
		public static void RescaleMesh(Mesh mesh, float scale)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012C")]
	public class RFMeshExport
	{
		[Token(Token = "0x20004A3")]
		public enum MeshExportType
		{
			[Token(Token = "0x4002BB8")]
			LastFragments = 0,
			[Token(Token = "0x4002BB9")]
			Children = 3
		}

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshExportType source;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string suffix;

		[Token(Token = "0x600056F")]
		[Address(RVA = "0xF6B4E0", Offset = "0xF6B4E0", VA = "0xF6B4E0")]
		public RFMeshExport()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012D")]
	public class RFShatterAdvanced
	{
		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x578728", Offset = "0x578728")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578728", Offset = "0x578728")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578728", Offset = "0x578728")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x578728", Offset = "0x578728")]
		public int seed;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5787B8", Offset = "0x5787B8")]
		public bool decompose;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5787CC", Offset = "0x5787CC")]
		public bool removeCollinear;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5787E0", Offset = "0x5787E0")]
		public bool copyComponents;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5787F4", Offset = "0x5787F4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5787F4", Offset = "0x5787F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5787F4", Offset = "0x5787F4")]
		public bool inputPrecap;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578868", Offset = "0x578868")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578868", Offset = "0x578868")]
		public bool outputPrecap;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5788B8", Offset = "0x5788B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5788B8", Offset = "0x5788B8")]
		public bool removeDoubleFaces;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578908", Offset = "0x578908")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578908", Offset = "0x578908")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x578908", Offset = "0x578908")]
		public int elementSizeThreshold;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x578980", Offset = "0x578980")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578980", Offset = "0x578980")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578980", Offset = "0x578980")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578980", Offset = "0x578980")]
		public bool inner;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578A08", Offset = "0x578A08")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578A08", Offset = "0x578A08")]
		public bool planar;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578A58", Offset = "0x578A58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578A58", Offset = "0x578A58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x578A58", Offset = "0x578A58")]
		public int relativeSize;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578AC0", Offset = "0x578AC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578AC0", Offset = "0x578AC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x578AC0", Offset = "0x578AC0")]
		public float absoluteSize;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x578B34", Offset = "0x578B34")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578B34", Offset = "0x578B34")]
		public bool vertexLimitation;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578B84", Offset = "0x578B84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x578B84", Offset = "0x578B84")]
		public int vertexAmount;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float planarThreshold;

		[Token(Token = "0x6000570")]
		[Address(RVA = "0xC45138", Offset = "0xC45138", VA = "0xC45138")]
		public RFShatterAdvanced()
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0xC45198", Offset = "0xC45198", VA = "0xC45198")]
		public RFShatterAdvanced(RFShatterAdvanced src)
		{
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0xC45220", Offset = "0xC45220", VA = "0xC45220")]
		public static bool IsCoplanar(Mesh mesh, float threshold)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200012E")]
	public class RFSurface
	{
		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x578BD0", Offset = "0x578BD0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578BD0", Offset = "0x578BD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578BD0", Offset = "0x578BD0")]
		public Material innerMaterial;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578C44", Offset = "0x578C44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578C44", Offset = "0x578C44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x578C44", Offset = "0x578C44")]
		public float mappingScale;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x578CB0", Offset = "0x578CB0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578CB0", Offset = "0x578CB0")]
		public Material outerMaterial;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool needNewMat;

		[Token(Token = "0x6000574")]
		[Address(RVA = "0xC41EEC", Offset = "0xC41EEC", VA = "0xC41EEC")]
		public RFSurface()
		{
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0xC4A460", Offset = "0xC4A460", VA = "0xC4A460")]
		public void CopyFrom(RFSurface interior)
		{
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0xC4A494", Offset = "0xC4A494", VA = "0xC4A494")]
		public static void SetMaterial(List<RFDictionary> origSubMeshIdsRF, Material[] sharedMaterials, RFSurface interior, MeshRenderer targetRend, int i, int amount)
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0xC4A72C", Offset = "0xC4A72C", VA = "0xC4A72C")]
		public static int SetInnerSubId(RayfireRigid scr)
		{
			return default(int);
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0xC4A8A4", Offset = "0xC4A8A4", VA = "0xC4A8A4")]
		public static int SetInnerSubId(RayfireShatter scr)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200012F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x570F7C", Offset = "0x570F7C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x570F7C", Offset = "0x570F7C")]
	public class RayfireActivator : MonoBehaviour
	{
		[Token(Token = "0x20004A4")]
		public enum ActivationType
		{
			[Token(Token = "0x4002BBB")]
			OnEnter,
			[Token(Token = "0x4002BBC")]
			OnExit
		}

		[Token(Token = "0x20004A5")]
		public enum AnimationType
		{
			[Token(Token = "0x4002BBE")]
			ByGlobalPositionList = 0,
			[Token(Token = "0x4002BBF")]
			ByStaticLine = 1,
			[Token(Token = "0x4002BC0")]
			ByDynamicLine = 2,
			[Token(Token = "0x4002BC1")]
			ByLocalPositionList = 5
		}

		[Token(Token = "0x20004A6")]
		public enum GizmoType
		{
			[Token(Token = "0x4002BC3")]
			Sphere,
			[Token(Token = "0x4002BC4")]
			Box,
			[Token(Token = "0x4002BC5")]
			Collider
		}

		[Token(Token = "0x20004A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5729F8", Offset = "0x5729F8")]
		private sealed class <DelayedActivationCor>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002BC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireActivator <>4__this;

			[Token(Token = "0x4002BC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RayfireRigid rigid;

			[Token(Token = "0x1700039C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021B4")]
				[Address(RVA = "0x86ED20", Offset = "0x86ED20", VA = "0x86ED20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021B6")]
				[Address(RVA = "0x86ED68", Offset = "0x86ED68", VA = "0x86ED68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021B1")]
			[Address(RVA = "0x86EBF0", Offset = "0x86EBF0", VA = "0x86EBF0")]
			[DebuggerHidden]
			public <DelayedActivationCor>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x60021B2")]
			[Address(RVA = "0x86EC1C", Offset = "0x86EC1C", VA = "0x86EC1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021B3")]
			[Address(RVA = "0x86EC20", Offset = "0x86EC20", VA = "0x86EC20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021B5")]
			[Address(RVA = "0x86ED28", Offset = "0x86ED28", VA = "0x86ED28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572A08", Offset = "0x572A08")]
		private sealed class <DelayedActivationCor>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002BCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002BCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002BCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireActivator <>4__this;

			[Token(Token = "0x4002BCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RayfireRigidRoot rigidRoot;

			[Token(Token = "0x4002BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Collider coll;

			[Token(Token = "0x1700039E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021BA")]
				[Address(RVA = "0x86EEA0", Offset = "0x86EEA0", VA = "0x86EEA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021BC")]
				[Address(RVA = "0x86EEE8", Offset = "0x86EEE8", VA = "0x86EEE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021B7")]
			[Address(RVA = "0x86ED70", Offset = "0x86ED70", VA = "0x86ED70")]
			[DebuggerHidden]
			public <DelayedActivationCor>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x60021B8")]
			[Address(RVA = "0x86ED9C", Offset = "0x86ED9C", VA = "0x86ED9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021B9")]
			[Address(RVA = "0x86EDA0", Offset = "0x86EDA0", VA = "0x86EDA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021BB")]
			[Address(RVA = "0x86EEA8", Offset = "0x86EEA8", VA = "0x86EEA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572A18", Offset = "0x572A18")]
		private sealed class <DelayedClusterCor>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireActivator <>4__this;

			[Token(Token = "0x4002BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RayfireRigid rigid;

			[Token(Token = "0x4002BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Collider coll;

			[Token(Token = "0x170003A0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021C0")]
				[Address(RVA = "0x86F0EC", Offset = "0x86F0EC", VA = "0x86F0EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021C2")]
				[Address(RVA = "0x86F134", Offset = "0x86F134", VA = "0x86F134", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021BD")]
			[Address(RVA = "0x86EEF0", Offset = "0x86EEF0", VA = "0x86EEF0")]
			[DebuggerHidden]
			public <DelayedClusterCor>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x60021BE")]
			[Address(RVA = "0x86EF1C", Offset = "0x86EF1C", VA = "0x86EF1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021BF")]
			[Address(RVA = "0x86EF20", Offset = "0x86EF20", VA = "0x86EF20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021C1")]
			[Address(RVA = "0x86F0F4", Offset = "0x86F0F4", VA = "0x86F0F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572A28", Offset = "0x572A28")]
		private sealed class <AnimationCor>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002BD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireActivator <>4__this;

			[Token(Token = "0x170003A2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021C6")]
				[Address(RVA = "0x86EBA0", Offset = "0x86EBA0", VA = "0x86EBA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021C8")]
				[Address(RVA = "0x86EBE8", Offset = "0x86EBE8", VA = "0x86EBE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021C3")]
			[Address(RVA = "0x86E7BC", Offset = "0x86E7BC", VA = "0x86E7BC")]
			[DebuggerHidden]
			public <AnimationCor>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x60021C4")]
			[Address(RVA = "0x86E7E8", Offset = "0x86E7E8", VA = "0x86E7E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021C5")]
			[Address(RVA = "0x86E7EC", Offset = "0x86E7EC", VA = "0x86E7EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021C7")]
			[Address(RVA = "0x86EBA8", Offset = "0x86EBA8", VA = "0x86EBA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x578D10", Offset = "0x578D10")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578D10", Offset = "0x578D10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578D10", Offset = "0x578D10")]
		public GizmoType gizmoType;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578D84", Offset = "0x578D84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578D84", Offset = "0x578D84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x578D84", Offset = "0x578D84")]
		public float sphereRadius;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578DF4", Offset = "0x578DF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578DF4", Offset = "0x578DF4")]
		public Vector3 boxSize;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x578E44", Offset = "0x578E44")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578E44", Offset = "0x578E44")]
		public bool checkRigid;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578E94", Offset = "0x578E94")]
		public bool checkRigidRoot;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x578EA8", Offset = "0x578EA8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578EA8", Offset = "0x578EA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578EA8", Offset = "0x578EA8")]
		public ActivationType type;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578F1C", Offset = "0x578F1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578F1C", Offset = "0x578F1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x578F1C", Offset = "0x578F1C")]
		public float delay;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578F88", Offset = "0x578F88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578F88", Offset = "0x578F88")]
		public bool demolishCluster;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x578FD8", Offset = "0x578FD8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x578FD8", Offset = "0x578FD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578FD8", Offset = "0x578FD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x578FD8", Offset = "0x578FD8")]
		public float duration;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57906C", Offset = "0x57906C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57906C", Offset = "0x57906C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57906C", Offset = "0x57906C")]
		public float scaleAnimation;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5790D8", Offset = "0x5790D8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5790D8", Offset = "0x5790D8")]
		public AnimationType positionAnimation;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579128", Offset = "0x579128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579128", Offset = "0x579128")]
		public LineRenderer line;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579178", Offset = "0x579178")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579178", Offset = "0x579178")]
		public List<Vector3> positionList;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public bool showGizmo;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool animating;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float pathRatio;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float lineLength;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<float> checkpoints;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float delta;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float deltaRatioStep;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float distDeltaStep;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float distRatio;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float timePassed;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int activeSegment;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 positionStart;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 scaleStart;

		[Token(Token = "0x6000579")]
		[Address(RVA = "0xD25A00", Offset = "0xD25A00", VA = "0xD25A00")]
		private void Awake()
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0xD25C6C", Offset = "0xD25C6C", VA = "0xD25C6C")]
		private void OnTriggerEnter(Collider coll)
		{
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0xD25CCC", Offset = "0xD25CCC", VA = "0xD25CCC")]
		private void OnTriggerExit(Collider coll)
		{
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0xD25C7C", Offset = "0xD25C7C", VA = "0xD25C7C")]
		private void ActivationCheck(Collider coll)
		{
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0xD25CE0", Offset = "0xD25CE0", VA = "0xD25CE0")]
		private void RigidListActivationCheck(Collider coll)
		{
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0xD25F34", Offset = "0xD25F34", VA = "0xD25F34")]
		private void RigidRootActivationCheck(Collider coll)
		{
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0xD26108", Offset = "0xD26108", VA = "0xD26108")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58FA20", Offset = "0x58FA20")]
		private IEnumerator DelayedActivationCor(RayfireRigid rigid)
		{
			return null;
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0xD26200", Offset = "0xD26200", VA = "0xD26200")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58FA80", Offset = "0x58FA80")]
		private IEnumerator DelayedActivationCor(RayfireRigidRoot rigidRoot, Collider coll)
		{
			return null;
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0xD26180", Offset = "0xD26180", VA = "0xD26180")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58FAE0", Offset = "0x58FAE0")]
		private IEnumerator DelayedClusterCor(RayfireRigid rigid, Collider coll)
		{
			return null;
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0xD25A64", Offset = "0xD25A64", VA = "0xD25A64")]
		private void ColliderCheck()
		{
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0xD26280", Offset = "0xD26280", VA = "0xD26280")]
		public void TriggerAnimation()
		{
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0xD26368", Offset = "0xD26368", VA = "0xD26368")]
		private void SetAnimation()
		{
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0xD26420", Offset = "0xD26420", VA = "0xD26420")]
		private void SetWorldPointsByLine()
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0xD26634", Offset = "0xD26634", VA = "0xD26634")]
		private void SetWorldPointsByLocal()
		{
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0xD267E0", Offset = "0xD267E0", VA = "0xD267E0")]
		private void SetCheckPoints()
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0xD263B4", Offset = "0xD263B4", VA = "0xD263B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58FB40", Offset = "0x58FB40")]
		private IEnumerator AnimationCor()
		{
			return null;
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0xD26A78", Offset = "0xD26A78", VA = "0xD26A78")]
		private int GetSegment(float ration)
		{
			return default(int);
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0xD26B8C", Offset = "0xD26B8C", VA = "0xD26B8C")]
		private void ResetData()
		{
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0xD26BF4", Offset = "0xD26BF4", VA = "0xD26BF4")]
		public void StopAnimation()
		{
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0xD26BFC", Offset = "0xD26BFC", VA = "0xD26BFC")]
		public void ResetAnimation()
		{
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0xD26C3C", Offset = "0xD26C3C", VA = "0xD26C3C")]
		public void AddPosition(Vector3 newPos)
		{
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0xD26EB4", Offset = "0xD26EB4", VA = "0xD26EB4")]
		public RayfireActivator()
		{
		}
	}
	[Token(Token = "0x2000130")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x570FDC", Offset = "0x570FDC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x570FDC", Offset = "0x570FDC")]
	public class RayfireBlade : MonoBehaviour
	{
		[Token(Token = "0x20004AB")]
		public enum CutType
		{
			[Token(Token = "0x4002BD8")]
			Enter,
			[Token(Token = "0x4002BD9")]
			Exit,
			[Token(Token = "0x4002BDA")]
			EnterExit
		}

		[Token(Token = "0x20004AC")]
		public enum ActionType
		{
			[Token(Token = "0x4002BDC")]
			Slice,
			[Token(Token = "0x4002BDD")]
			Demolish
		}

		[Token(Token = "0x20004AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572A38", Offset = "0x572A38")]
		private sealed class <CooldownCor>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireBlade <>4__this;

			[Token(Token = "0x170003A4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021CC")]
				[Address(RVA = "0x86F244", Offset = "0x86F244", VA = "0x86F244", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021CE")]
				[Address(RVA = "0x86F28C", Offset = "0x86F28C", VA = "0x86F28C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021C9")]
			[Address(RVA = "0x86F13C", Offset = "0x86F13C", VA = "0x86F13C")]
			[DebuggerHidden]
			public <CooldownCor>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60021CA")]
			[Address(RVA = "0x86F168", Offset = "0x86F168", VA = "0x86F168", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021CB")]
			[Address(RVA = "0x86F16C", Offset = "0x86F16C", VA = "0x86F16C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021CD")]
			[Address(RVA = "0x86F24C", Offset = "0x86F24C", VA = "0x86F24C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5791D8", Offset = "0x5791D8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5791D8", Offset = "0x5791D8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5791D8", Offset = "0x5791D8")]
		public ActionType actionType;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57924C", Offset = "0x57924C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57924C", Offset = "0x57924C")]
		public CutType onTrigger;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57929C", Offset = "0x57929C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57929C", Offset = "0x57929C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57929C", Offset = "0x57929C")]
		public PlaneType sliceType;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579310", Offset = "0x579310")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579310", Offset = "0x579310")]
		public GameObject target;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579360", Offset = "0x579360")]
		public List<GameObject> targets;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x579374", Offset = "0x579374")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579374", Offset = "0x579374")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579374", Offset = "0x579374")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579374", Offset = "0x579374")]
		public float force;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579400", Offset = "0x579400")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579400", Offset = "0x579400")]
		public bool affectInactive;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x579450", Offset = "0x579450")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579450", Offset = "0x579450")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579450", Offset = "0x579450")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579450", Offset = "0x579450")]
		public float damage;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5794E0", Offset = "0x5794E0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5794E0", Offset = "0x5794E0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5794E0", Offset = "0x5794E0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5794E0", Offset = "0x5794E0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5794E0", Offset = "0x5794E0")]
		public float cooldown;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Transform transForm;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Vector3[] enterPlane;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Vector3[] exitPlane;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Collider colLider;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public int mask;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public string tagFilter;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public bool coolDownState;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public RFSliceEvent sliceEvent;

		[Token(Token = "0x600058F")]
		[Address(RVA = "0xD26F54", Offset = "0xD26F54", VA = "0xD26F54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0xD26F58", Offset = "0xD26F58", VA = "0xD26F58")]
		private void DefineComponents()
		{
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0xD270BC", Offset = "0xD270BC", VA = "0xD270BC")]
		private void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0xD27164", Offset = "0xD27164", VA = "0xD27164")]
		private void OnTriggerExit(Collider col)
		{
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0xD270C0", Offset = "0xD270C0", VA = "0xD270C0")]
		private void TriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0xD27168", Offset = "0xD27168", VA = "0xD27168")]
		private void TriggerExit(Collider col)
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0xD275C8", Offset = "0xD275C8", VA = "0xD275C8")]
		private void Demolish(GameObject targetObject)
		{
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0xD277BC", Offset = "0xD277BC", VA = "0xD277BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58FBA0", Offset = "0x58FBA0")]
		private IEnumerator CooldownCor()
		{
			return null;
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0xD27828", Offset = "0xD27828", VA = "0xD27828")]
		private void SetCooldown(bool state)
		{
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0xD276E4", Offset = "0xD276E4", VA = "0xD276E4")]
		private bool FilterCheck(GameObject targetObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0xD27850", Offset = "0xD27850", VA = "0xD27850")]
		public void SliceTarget()
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0xD27440", Offset = "0xD27440", VA = "0xD27440")]
		private void Slice(GameObject targetObject, Vector3[] slicePlane)
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0xD277A0", Offset = "0xD277A0", VA = "0xD277A0")]
		private bool ApplyDamage(RayfireRigid scr, float damageValue)
		{
			return default(bool);
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0xD2734C", Offset = "0xD2734C", VA = "0xD2734C")]
		private Vector3[] GetSlicePlane()
		{
			return null;
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0xD27834", Offset = "0xD27834", VA = "0xD27834")]
		private bool LayerCheck(int layerId)
		{
			return default(bool);
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0xD279C4", Offset = "0xD279C4", VA = "0xD279C4")]
		public RayfireBlade()
		{
		}
	}
	[Token(Token = "0x2000131")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x57103C", Offset = "0x57103C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x57103C", Offset = "0x57103C")]
	public class RayfireBomb : MonoBehaviour
	{
		[Token(Token = "0x20004AE")]
		public enum RangeType
		{
			[Token(Token = "0x4002BE2")]
			Spherical
		}

		[Token(Token = "0x20004AF")]
		public enum FadeType
		{
			[Token(Token = "0x4002BE4")]
			Linear,
			[Token(Token = "0x4002BE5")]
			Exponential,
			[Token(Token = "0x4002BE6")]
			None
		}

		[Serializable]
		[Token(Token = "0x20004B0")]
		public class Projectile
		{
			[Token(Token = "0x4002BE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 positionPivot;

			[Token(Token = "0x4002BE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 positionClosest;

			[Token(Token = "0x4002BE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float fade;

			[Token(Token = "0x4002BEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Rigidbody rb;

			[Token(Token = "0x4002BEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public RayfireRigid scrRigid;

			[Token(Token = "0x4002BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Quaternion rotation;

			[Token(Token = "0x60021CF")]
			[Address(RVA = "0x86F3C8", Offset = "0x86F3C8", VA = "0x86F3C8")]
			public Projectile()
			{
			}
		}

		[Token(Token = "0x20004B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572A48", Offset = "0x572A48")]
		private sealed class <ExplodeCor>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002BED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireBomb <>4__this;

			[Token(Token = "0x170003A6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021D3")]
				[Address(RVA = "0x86F378", Offset = "0x86F378", VA = "0x86F378", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021D5")]
				[Address(RVA = "0x86F3C0", Offset = "0x86F3C0", VA = "0x86F3C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021D0")]
			[Address(RVA = "0x86F294", Offset = "0x86F294", VA = "0x86F294")]
			[DebuggerHidden]
			public <ExplodeCor>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x60021D1")]
			[Address(RVA = "0x86F2C0", Offset = "0x86F2C0", VA = "0x86F2C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021D2")]
			[Address(RVA = "0x86F2C4", Offset = "0x86F2C4", VA = "0x86F2C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021D4")]
			[Address(RVA = "0x86F380", Offset = "0x86F380", VA = "0x86F380", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5795F0", Offset = "0x5795F0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5795F0", Offset = "0x5795F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5795F0", Offset = "0x5795F0")]
		public RangeType rangeType;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579664", Offset = "0x579664")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579664", Offset = "0x579664")]
		public FadeType fadeType;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5796B4", Offset = "0x5796B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5796B4", Offset = "0x5796B4")]
		public float range;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x579704", Offset = "0x579704")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579704", Offset = "0x579704")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579704", Offset = "0x579704")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579704", Offset = "0x579704")]
		public float strength;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579790", Offset = "0x579790")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579790", Offset = "0x579790")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579790", Offset = "0x579790")]
		public int variation;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5797FC", Offset = "0x5797FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5797FC", Offset = "0x5797FC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5797FC", Offset = "0x5797FC")]
		public int chaos;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579868", Offset = "0x579868")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579868", Offset = "0x579868")]
		public bool forceByMass;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5798B8", Offset = "0x5798B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5798B8", Offset = "0x5798B8")]
		public bool affectKinematic;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x579908", Offset = "0x579908")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579908", Offset = "0x579908")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579908", Offset = "0x579908")]
		public float heightOffset;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57997C", Offset = "0x57997C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57997C", Offset = "0x57997C")]
		public float delay;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5799CC", Offset = "0x5799CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5799CC", Offset = "0x5799CC")]
		public bool destroy;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579A1C", Offset = "0x579A1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x579A1C", Offset = "0x579A1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579A1C", Offset = "0x579A1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579A1C", Offset = "0x579A1C")]
		public bool applyDamage;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579AA4", Offset = "0x579AA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579AA4", Offset = "0x579AA4")]
		public float damageValue;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x579AF4", Offset = "0x579AF4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579AF4", Offset = "0x579AF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579AF4", Offset = "0x579AF4")]
		public bool play;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579B68", Offset = "0x579B68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579B68", Offset = "0x579B68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579B68", Offset = "0x579B68")]
		public float volume;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579BE0", Offset = "0x579BE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579BE0", Offset = "0x579BE0")]
		public AudioClip clip;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public RFExplosionEvent explosionEvent;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Transform transForm;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Vector3 bombPosition;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public Vector3 explPosition;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Collider[] colliders;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public List<Projectile> projectiles;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public List<Rigidbody> rigidbodies;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public bool showGizmo;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[HideInInspector]
		public int mask;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public string tagFilter;

		[Token(Token = "0x600059F")]
		[Address(RVA = "0xD27A64", Offset = "0xD27A64", VA = "0xD27A64")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xD27A88", Offset = "0xD27A88", VA = "0xD27A88")]
		private void DefineComponents()
		{
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0xD27B58", Offset = "0xD27B58", VA = "0xD27B58")]
		public void CopyFrom(RayfireBomb scr)
		{
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0xD27BDC", Offset = "0xD27BDC", VA = "0xD27BDC")]
		public void Explode(float delayLoc)
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xD27D38", Offset = "0xD27D38", VA = "0xD27D38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58FC00", Offset = "0x58FC00")]
		private IEnumerator ExplodeCor()
		{
			return null;
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xD27C34", Offset = "0xD27C34", VA = "0xD27C34")]
		private void Explode()
		{
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xD2831C", Offset = "0xD2831C", VA = "0xD2831C")]
		private void PlayAudio()
		{
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xD27E18", Offset = "0xD27E18", VA = "0xD27E18")]
		private bool Setup()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0xD28720", Offset = "0xD28720", VA = "0xD28720")]
		public void Restore()
		{
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0xD27ADC", Offset = "0xD27ADC", VA = "0xD27ADC")]
		private void ClearLists()
		{
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xD27DA4", Offset = "0xD27DA4", VA = "0xD27DA4")]
		private void SetPositions()
		{
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xD283E4", Offset = "0xD283E4", VA = "0xD283E4")]
		private void SetColliders()
		{
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0xD28428", Offset = "0xD28428", VA = "0xD28428")]
		private void SetProjectiles()
		{
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xD27E84", Offset = "0xD27E84", VA = "0xD27E84")]
		private bool SetRigidDamage()
		{
			return default(bool);
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xD280BC", Offset = "0xD280BC", VA = "0xD280BC")]
		private void SetForce()
		{
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xD28A30", Offset = "0xD28A30", VA = "0xD28A30")]
		private void SetKinematic(Projectile projectile)
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xD28960", Offset = "0xD28960", VA = "0xD28960")]
		private float Fade(Vector3 bombPos, Vector3 fragPos)
		{
			return default(float);
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0xD289D4", Offset = "0xD289D4", VA = "0xD289D4")]
		private Vector3 Vector(Projectile projectile)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0xD28BA8", Offset = "0xD28BA8", VA = "0xD28BA8")]
		public RayfireBomb()
		{
		}
	}
	[Token(Token = "0x2000132")]
	[SelectionBase]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x57109C", Offset = "0x57109C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x57109C", Offset = "0x57109C")]
	public class RayfireCluster : MonoBehaviour
	{
		[Token(Token = "0x20004B2")]
		public enum ClusterType
		{
			[Token(Token = "0x4002BF1")]
			ByPointCloud,
			[Token(Token = "0x4002BF2")]
			BySharedArea
		}

		[Token(Token = "0x20004B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572A58", Offset = "0x572A58")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4002BF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RFShard biggestShard;

			[Token(Token = "0x60021D6")]
			[Address(RVA = "0x86F3D0", Offset = "0x86F3D0", VA = "0x86F3D0")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x60021D7")]
			[Address(RVA = "0x86F3D8", Offset = "0x86F3D8", VA = "0x86F3D8")]
			internal bool <ClusterizeRangeShards>b__0(RFShard t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572A68", Offset = "0x572A68")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4002BF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RFCluster biggestCluster;

			[Token(Token = "0x60021D8")]
			[Address(RVA = "0x86F408", Offset = "0x86F408", VA = "0x86F408")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x60021D9")]
			[Address(RVA = "0x86F410", Offset = "0x86F410", VA = "0x86F410")]
			internal bool <ClusterizeRangeClusters>b__0(RFCluster t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579CC0", Offset = "0x579CC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x579CC0", Offset = "0x579CC0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579CC0", Offset = "0x579CC0")]
		public ClusterType type;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579D30", Offset = "0x579D30")]
		public int depth;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579D48", Offset = "0x579D48")]
		public int seed;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579D64", Offset = "0x579D64")]
		public int smoothPass;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x579D7C", Offset = "0x579D7C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579D7C", Offset = "0x579D7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579D7C", Offset = "0x579D7C")]
		public int baseAmount;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579DF4", Offset = "0x579DF4")]
		public int depthAmount;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ConnectivityType connectivity;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x579E10", Offset = "0x579E10")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579E10", Offset = "0x579E10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579E10", Offset = "0x579E10")]
		public int minimumAmount;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579E84", Offset = "0x579E84")]
		public int maximumAmount;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public bool showGizmo;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[HideInInspector]
		public bool colorPreview;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[HideInInspector]
		public bool scalePreview;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Color wireColor;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float previewScale;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public List<RFCluster> allClusters;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public List<RFShard> allShards;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int clusterId;

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0xD28CDC", Offset = "0xD28CDC", VA = "0xD28CDC")]
		public void Extract()
		{
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0xD28F4C", Offset = "0xD28F4C", VA = "0xD28F4C")]
		public void Clusterize()
		{
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xD28FDC", Offset = "0xD28FDC", VA = "0xD28FDC")]
		private void ClusterizeVoronoi()
		{
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xD29870", Offset = "0xD29870", VA = "0xD29870")]
		private List<RFCluster> ClusterizeClusterByAmount(RFCluster parentCluster, int amount)
		{
			return null;
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0xD2B01C", Offset = "0xD2B01C", VA = "0xD2B01C")]
		private void ConnectivityCheck(List<RFCluster> childClusters)
		{
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0xD2920C", Offset = "0xD2920C", VA = "0xD2920C")]
		private void ClusterizeRange()
		{
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0xD2BC60", Offset = "0xD2BC60", VA = "0xD2BC60")]
		private List<RFCluster> ClusterizeRangeShards(RFCluster mainCluster)
		{
			return null;
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0xD2C0F8", Offset = "0xD2C0F8", VA = "0xD2C0F8")]
		private List<RFCluster> ClusterizeRangeClusters(RFCluster parentCluster)
		{
			return null;
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0xD2A66C", Offset = "0xD2A66C", VA = "0xD2A66C")]
		private static void RoughnessPassShards(List<RFCluster> clusters)
		{
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0xD2CA48", Offset = "0xD2CA48", VA = "0xD2CA48")]
		private void RoughnessPassClusters(List<RFCluster> clusters)
		{
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0xD2A440", Offset = "0xD2A440", VA = "0xD2A440")]
		private void SetSoloShardToCluster(List<RFShard> soloShards, List<RFCluster> childClusters)
		{
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0xD2D3EC", Offset = "0xD2D3EC", VA = "0xD2D3EC")]
		private int GetNeibIndArea(RFShard shard, [Optional] List<RFShard> shardList)
		{
			return default(int);
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0xD2C82C", Offset = "0xD2C82C", VA = "0xD2C82C")]
		private void SetSoloClusterToCluster(List<RFCluster> soloClusters, List<RFCluster> childClusters)
		{
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0xD29770", Offset = "0xD29770", VA = "0xD29770")]
		private RFCluster SetupMainCluster(ConnectivityType connect)
		{
			return null;
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0xD2A0A8", Offset = "0xD2A0A8", VA = "0xD2A0A8")]
		private void SetClusterNames()
		{
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0xD2BA78", Offset = "0xD2BA78", VA = "0xD2BA78")]
		private void CreateRoot(RFCluster childCluster, Transform parentTm)
		{
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0xD2D53C", Offset = "0xD2D53C", VA = "0xD2D53C")]
		private Bounds GetShardsBound(List<RFShard> shards, [Optional] List<RFCluster> clusters)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0xD2C494", Offset = "0xD2C494", VA = "0xD2C494")]
		private static RFShard GetNeibShardArea(List<RFShard> shardGroup, List<RFShard> shardList)
		{
			return null;
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0xD2A2C0", Offset = "0xD2A2C0", VA = "0xD2A2C0")]
		private List<Vector3> VoronoiPointCloud(Bounds bound, int am)
		{
			return null;
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0xD2D894", Offset = "0xD2D894", VA = "0xD2D894")]
		public RayfireCluster()
		{
		}
	}
	[Token(Token = "0x2000133")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x57110C", Offset = "0x57110C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x57110C", Offset = "0x57110C")]
	public class RayfireCombine : MonoBehaviour
	{
		[Token(Token = "0x20004B5")]
		public enum CombType
		{
			[Token(Token = "0x4002BF6")]
			Children,
			[Token(Token = "0x4002BF7")]
			ObjectsList
		}

		[Token(Token = "0x20004B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572A78", Offset = "0x572A78")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4002BF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RayfireCombine <>4__this;

			[Token(Token = "0x4002BF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int m;

			[Token(Token = "0x4002BFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<Vector3, Vector3> <>9__0;

			[Token(Token = "0x60021DA")]
			[Address(RVA = "0x86F4B8", Offset = "0x86F4B8", VA = "0x86F4B8")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x60021DB")]
			[Address(RVA = "0x86F4C0", Offset = "0x86F4C0", VA = "0x86F4C0")]
			internal Vector3 <SetCombinedMesh>b__0(Vector3 t)
			{
				return default(Vector3);
			}
		}

		[Serializable]
		[Token(Token = "0x20004B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572A88", Offset = "0x572A88")]
		private sealed class <>c
		{
			[Token(Token = "0x4002BFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002BFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Vector3, Vector3> <>9__28_1;

			[Token(Token = "0x60021DD")]
			[Address(RVA = "0x86F4A0", Offset = "0x86F4A0", VA = "0x86F4A0")]
			public <>c()
			{
			}

			[Token(Token = "0x60021DE")]
			[Address(RVA = "0x86F4A8", Offset = "0x86F4A8", VA = "0x86F4A8")]
			internal Vector3 <SetCombinedMesh>b__28_1(Vector3 o)
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x579F0C", Offset = "0x579F0C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579F0C", Offset = "0x579F0C")]
		public CombType type;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579F5C", Offset = "0x579F5C")]
		public List<GameObject> objects;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x579F70", Offset = "0x579F70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579F70", Offset = "0x579F70")]
		public bool meshFilters;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579FC0", Offset = "0x579FC0")]
		public bool skinnedMeshes;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579FD4", Offset = "0x579FD4")]
		public bool particleSystems;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579FE8", Offset = "0x579FE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x579FE8", Offset = "0x579FE8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x579FE8", Offset = "0x579FE8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579FE8", Offset = "0x579FE8")]
		public float sizeThreshold;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A070", Offset = "0x57A070")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A070", Offset = "0x57A070")]
		public int vertexThreshold;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform transForm;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MeshFilter mFilter;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<bool> invertNormals;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Transform> transForms;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<MeshFilter> mFilters;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<SkinnedMeshRenderer> skinnedMeshRends;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<ParticleSystemRenderer> particleRends;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Mesh> meshList;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<List<int>> matIdList;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<List<Material>> matList;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<Material> allMaterials;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<int> combTrianglesSubId;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<List<int>> combTriangles;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<Vector3> combVertices;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<Vector3> combNormals;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<Vector2> combUvs;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<Vector4> combTangents;

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0xD2D9AC", Offset = "0xD2D9AC", VA = "0xD2D9AC")]
		public void Combine()
		{
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xD2D9D8", Offset = "0xD2D9D8", VA = "0xD2D9D8")]
		private void SetData()
		{
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xD2F27C", Offset = "0xD2F27C", VA = "0xD2F27C")]
		private void SetCombinedMesh()
		{
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0xD2FAE4", Offset = "0xD2FAE4", VA = "0xD2FAE4")]
		private void CreateMesh()
		{
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0xD2FD0C", Offset = "0xD2FD0C", VA = "0xD2FD0C")]
		public RayfireCombine()
		{
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0xD2FD34", Offset = "0xD2FD34", VA = "0xD2FD34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58FC60", Offset = "0x58FC60")]
		private int <SetData>b__27_0(Material t)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000134")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x57116C", Offset = "0x57116C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x57116C", Offset = "0x57116C")]
	public class RayfireConnectivity : MonoBehaviour
	{
		[Token(Token = "0x20004B8")]
		public enum RFConnInitType
		{
			[Token(Token = "0x4002BFE")]
			AtStart = 1,
			[Token(Token = "0x4002BFF")]
			ByMethod = 3,
			[Token(Token = "0x4002C00")]
			ByIntegrity = 5
		}

		[Token(Token = "0x20004B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572A98", Offset = "0x572A98")]
		private sealed class <ConnectivityCor>d__45 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireConnectivity <>4__this;

			[Token(Token = "0x170003A8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021E2")]
				[Address(RVA = "0x86F76C", Offset = "0x86F76C", VA = "0x86F76C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021E4")]
				[Address(RVA = "0x86F7B4", Offset = "0x86F7B4", VA = "0x86F7B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021DF")]
			[Address(RVA = "0x86F68C", Offset = "0x86F68C", VA = "0x86F68C")]
			[DebuggerHidden]
			public <ConnectivityCor>d__45(int <>1__state)
			{
			}

			[Token(Token = "0x60021E0")]
			[Address(RVA = "0x86F6B8", Offset = "0x86F6B8", VA = "0x86F6B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021E1")]
			[Address(RVA = "0x86F6BC", Offset = "0x86F6BC", VA = "0x86F6BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021E3")]
			[Address(RVA = "0x86F774", Offset = "0x86F774", VA = "0x86F774", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572AA8", Offset = "0x572AA8")]
		private sealed class <ChildrenCor>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireConnectivity <>4__this;

			[Token(Token = "0x4002C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <checkChildren>5__2;

			[Token(Token = "0x170003AA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021E8")]
				[Address(RVA = "0x86F63C", Offset = "0x86F63C", VA = "0x86F63C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021EA")]
				[Address(RVA = "0x86F684", Offset = "0x86F684", VA = "0x86F684", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021E5")]
			[Address(RVA = "0x86F580", Offset = "0x86F580", VA = "0x86F580")]
			[DebuggerHidden]
			public <ChildrenCor>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x60021E6")]
			[Address(RVA = "0x86F5AC", Offset = "0x86F5AC", VA = "0x86F5AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021E7")]
			[Address(RVA = "0x86F5B0", Offset = "0x86F5B0", VA = "0x86F5B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021E9")]
			[Address(RVA = "0x86F644", Offset = "0x86F644", VA = "0x86F644", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57A0B8", Offset = "0x57A0B8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A0B8", Offset = "0x57A0B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A0B8", Offset = "0x57A0B8")]
		public ConnectivityType type;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57A12C", Offset = "0x57A12C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A12C", Offset = "0x57A12C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A12C", Offset = "0x57A12C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A12C", Offset = "0x57A12C")]
		public float minimumArea;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A1B8", Offset = "0x57A1B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A1B8", Offset = "0x57A1B8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A1B8", Offset = "0x57A1B8")]
		public float minimumSize;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A220", Offset = "0x57A220")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A220", Offset = "0x57A220")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A220", Offset = "0x57A220")]
		public int percentage;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A28C", Offset = "0x57A28C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A28C", Offset = "0x57A28C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A28C", Offset = "0x57A28C")]
		public int seed;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57A2F8", Offset = "0x57A2F8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A2F8", Offset = "0x57A2F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A2F8", Offset = "0x57A2F8")]
		public bool clusterize;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A36C", Offset = "0x57A36C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A36C", Offset = "0x57A36C")]
		public bool demolishable;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57A3BC", Offset = "0x57A3BC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A3BC", Offset = "0x57A3BC")]
		public RFConnInitType startCollapse;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A40C", Offset = "0x57A40C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A40C", Offset = "0x57A40C")]
		public int collapseByIntegrity;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A454", Offset = "0x57A454")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A454", Offset = "0x57A454")]
		public RFCollapse collapse;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57A4A4", Offset = "0x57A4A4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A4A4", Offset = "0x57A4A4")]
		public RFConnInitType startStress;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A4F4", Offset = "0x57A4F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A4F4", Offset = "0x57A4F4")]
		public int stressByIntegrity;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A53C", Offset = "0x57A53C")]
		public RFStress stress;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public bool showConnections;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[HideInInspector]
		public bool showNodes;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[HideInInspector]
		public bool showStress;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		[HideInInspector]
		public bool showGizmo;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public bool checkConnectivity;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[HideInInspector]
		public bool connectivityCheckNeed;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public List<RayfireRigid> rigidList;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public RFCluster cluster;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public int initShardAmount;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		public int clsCount;

		[NonSerialized]
		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public RayfireRigid rigidHost;

		[NonSerialized]
		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public RayfireRigidRoot rigidRootHost;

		[NonSerialized]
		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool childrenChanged;

		[NonSerialized]
		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool childrenCorState;

		[NonSerialized]
		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		private bool connectivityCorState;

		[Token(Token = "0x17000021")]
		public float AmountIntegrity
		{
			[Token(Token = "0x60005EB")]
			[Address(RVA = "0xD3177C", Offset = "0xD3177C", VA = "0xD3177C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xD2FD98", Offset = "0xD2FD98", VA = "0xD2FD98")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xD2FD9C", Offset = "0xD2FD9C", VA = "0xD2FD9C")]
		private void InitializeRigidList()
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xD2FE3C", Offset = "0xD2FE3C", VA = "0xD2FE3C")]
		private void SetComponents()
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xD3004C", Offset = "0xD3004C", VA = "0xD3004C")]
		private bool Check()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0xD301CC", Offset = "0xD301CC", VA = "0xD301CC")]
		public void StartAllCoroutines()
		{
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xD30338", Offset = "0xD30338", VA = "0xD30338")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xD30340", Offset = "0xD30340", VA = "0xD30340")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0xD30438", Offset = "0xD30438", VA = "0xD30438")]
		private List<Transform> SetChildren()
		{
			return null;
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0xD30530", Offset = "0xD30530", VA = "0xD30530")]
		private void SetRigids(List<Transform> tmList)
		{
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0xD30744", Offset = "0xD30744", VA = "0xD30744")]
		private void PrepareCluster()
		{
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xD3084C", Offset = "0xD3084C", VA = "0xD3084C")]
		private void CreateCluster()
		{
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0xD30954", Offset = "0xD30954", VA = "0xD30954")]
		public void SetCLuster()
		{
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0xD2FEB4", Offset = "0xD2FEB4", VA = "0xD2FEB4")]
		private void SetClusterRigidList()
		{
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0xD30EDC", Offset = "0xD30EDC", VA = "0xD30EDC")]
		public void SetClusterRigidRoot()
		{
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0xD309F0", Offset = "0xD309F0", VA = "0xD309F0")]
		private static bool InitCachedShardsByRigidList(List<RayfireRigid> rigids, RFCluster cluster)
		{
			return default(bool);
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0xD311A0", Offset = "0xD311A0", VA = "0xD311A0")]
		private static bool InitCachedShardsByRigidRoot(RayfireRigidRoot root, RFCluster cluster)
		{
			return default(bool);
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0xD302CC", Offset = "0xD302CC", VA = "0xD302CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58FC70", Offset = "0x58FC70")]
		private IEnumerator ConnectivityCor()
		{
			return null;
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0xD314A0", Offset = "0xD314A0", VA = "0xD314A0")]
		public void CheckConnectivity()
		{
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0xD31688", Offset = "0xD31688", VA = "0xD31688")]
		private void CheckConnectivityRigidList()
		{
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0xD31594", Offset = "0xD31594", VA = "0xD31594")]
		private void CheckConnectivityRigidRoot()
		{
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0xD31C14", Offset = "0xD31C14", VA = "0xD31C14")]
		private void ActivateShards(List<RFShard> soloShards)
		{
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0xD320B8", Offset = "0xD320B8", VA = "0xD320B8")]
		private void Clusterize()
		{
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0xD317EC", Offset = "0xD317EC", VA = "0xD317EC")]
		private static void CleanUpActivatedShardsRigidList(RFCluster cluster)
		{
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0xD31A0C", Offset = "0xD31A0C", VA = "0xD31A0C")]
		private static void CheckUnyieldingRigidList(RFCluster cluster)
		{
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0xD31DF8", Offset = "0xD31DF8", VA = "0xD31DF8")]
		private static void CleanUpActivatedShardsRigidRoot(RFCluster cluster)
		{
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0xD31F04", Offset = "0xD31F04", VA = "0xD31F04")]
		private static void CheckUnyieldingRigidRoot(RFCluster cluster)
		{
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0xD32BF4", Offset = "0xD32BF4", VA = "0xD32BF4")]
		private void OnTransformChildrenChanged()
		{
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0xD30260", Offset = "0xD30260", VA = "0xD30260")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58FCD0", Offset = "0x58FCD0")]
		private IEnumerator ChildrenCor()
		{
			return null;
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0xD32C00", Offset = "0xD32C00", VA = "0xD32C00")]
		private void ChildrenCheck()
		{
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0xD32F9C", Offset = "0xD32F9C", VA = "0xD32F9C")]
		public void ResetCluster()
		{
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0xD33080", Offset = "0xD33080", VA = "0xD33080")]
		public void ResetShards()
		{
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xD331EC", Offset = "0xD331EC", VA = "0xD331EC")]
		public RayfireConnectivity()
		{
		}
	}
	[Token(Token = "0x2000135")]
	[SelectionBase]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5711CC", Offset = "0x5711CC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x5711CC", Offset = "0x5711CC")]
	public class RayfireDebris : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572AB8", Offset = "0x572AB8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MeshFilter, bool> <>9__27_0;

			[Token(Token = "0x4002C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<MeshFilter, Mesh> <>9__27_1;

			[Token(Token = "0x60021EC")]
			[Address(RVA = "0x86F81C", Offset = "0x86F81C", VA = "0x86F81C")]
			public <>c()
			{
			}

			[Token(Token = "0x60021ED")]
			[Address(RVA = "0x86F824", Offset = "0x86F824", VA = "0x86F824")]
			internal bool <SetReferenceMeshes>b__27_0(MeshFilter mf)
			{
				return default(bool);
			}

			[Token(Token = "0x60021EE")]
			[Address(RVA = "0x86F8D8", Offset = "0x86F8D8", VA = "0x86F8D8")]
			internal Mesh <SetReferenceMeshes>b__27_1(MeshFilter mf)
			{
				return null;
			}
		}

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57A5F0", Offset = "0x57A5F0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A5F0", Offset = "0x57A5F0")]
		public bool onDemolition;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A640", Offset = "0x57A640")]
		public bool onActivation;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A654", Offset = "0x57A654")]
		public bool onImpact;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57A668", Offset = "0x57A668")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A668", Offset = "0x57A668")]
		public GameObject debrisReference;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A6B8", Offset = "0x57A6B8")]
		public Material debrisMaterial;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A6CC", Offset = "0x57A6CC")]
		public Material emissionMaterial;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57A6E0", Offset = "0x57A6E0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A6E0", Offset = "0x57A6E0")]
		public RFParticleEmission emission;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A730", Offset = "0x57A730")]
		public RFParticleDynamicDebris dynamic;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A744", Offset = "0x57A744")]
		public RFParticleNoise noise;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A758", Offset = "0x57A758")]
		public RFParticleCollisionDebris collision;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A76C", Offset = "0x57A76C")]
		public RFParticleLimitations limitations;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A780", Offset = "0x57A780")]
		public RFParticleRendering rendering;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public RayfireRigid rigid;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public ParticleSystem pSystem;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Transform hostTm;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public bool initialized;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public List<Mesh> debrisMeshList;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Vector3 refScale;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public List<RayfireDebris> children;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public int amountFinal;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[HideInInspector]
		public bool oldChild;

		[Token(Token = "0x17000022")]
		public bool HasChildren
		{
			[Token(Token = "0x60005F5")]
			[Address(RVA = "0xD34278", Offset = "0xD34278", VA = "0xD34278")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0xD33220", Offset = "0xD33220", VA = "0xD33220")]
		public RayfireDebris()
		{
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0xD333D0", Offset = "0xD333D0", VA = "0xD333D0")]
		public void CopyFrom(RayfireDebris source)
		{
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0xD334B0", Offset = "0xD334B0", VA = "0xD334B0")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0xD33A04", Offset = "0xD33A04", VA = "0xD33A04")]
		public void Emit()
		{
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0xD33B48", Offset = "0xD33B48", VA = "0xD33B48")]
		public void CreateDebris(RayfireDebris scr, MeshFilter emitMeshFilter, int emitMatIndex, ParticleSystem ps)
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0xD33E70", Offset = "0xD33E70", VA = "0xD33E70")]
		public void SetParticleRendererDebris(ParticleSystemRenderer rend, RayfireDebris scr)
		{
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0xD334C4", Offset = "0xD334C4", VA = "0xD334C4")]
		private void SetReferenceMeshes(GameObject refs)
		{
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0xD3409C", Offset = "0xD3409C", VA = "0xD3409C")]
		private void SetDebrisMaterial(List<MeshFilter> mfs)
		{
		}
	}
	[Token(Token = "0x2000136")]
	[SelectionBase]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x57123C", Offset = "0x57123C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x57123C", Offset = "0x57123C")]
	public class RayfireDust : MonoBehaviour
	{
		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57A824", Offset = "0x57A824")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A824", Offset = "0x57A824")]
		public bool onDemolition;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A874", Offset = "0x57A874")]
		public bool onActivation;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A888", Offset = "0x57A888")]
		public bool onImpact;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57A89C", Offset = "0x57A89C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A89C", Offset = "0x57A89C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57A89C", Offset = "0x57A89C")]
		public float opacity;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A908", Offset = "0x57A908")]
		public Material dustMaterial;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A91C", Offset = "0x57A91C")]
		public Material[] dustMaterials;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A930", Offset = "0x57A930")]
		public Material emissionMaterial;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57A944", Offset = "0x57A944")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A944", Offset = "0x57A944")]
		public RFParticleEmission emission;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A994", Offset = "0x57A994")]
		public RFParticleDynamicDust dynamic;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A9A8", Offset = "0x57A9A8")]
		public RFParticleNoise noise;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A9BC", Offset = "0x57A9BC")]
		public RFParticleCollisionDust collision;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A9D0", Offset = "0x57A9D0")]
		public RFParticleLimitations limitations;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57A9E4", Offset = "0x57A9E4")]
		public RFParticleRendering rendering;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public RayfireRigid rigid;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public ParticleSystem pSystem;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Transform hostTm;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public bool initialized;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public List<RayfireDust> children;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public int amountFinal;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[HideInInspector]
		public bool oldChild;

		[Token(Token = "0x17000023")]
		public bool HasChildren
		{
			[Token(Token = "0x60005FD")]
			[Address(RVA = "0xD34CBC", Offset = "0xD34CBC", VA = "0xD34CBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0xD342D0", Offset = "0xD342D0", VA = "0xD342D0")]
		public RayfireDust()
		{
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xD34440", Offset = "0xD34440", VA = "0xD34440")]
		public void CopyFrom(RayfireDust source)
		{
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0xD34520", Offset = "0xD34520", VA = "0xD34520")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0xD3464C", Offset = "0xD3464C", VA = "0xD3464C")]
		public void Emit()
		{
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0xD34770", Offset = "0xD34770", VA = "0xD34770")]
		public void CreateDust(RayfireDust scr, MeshFilter emitMeshFilter, int emitMatIndex, ParticleSystem ps)
		{
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0xD34A70", Offset = "0xD34A70", VA = "0xD34A70")]
		private void SetParticleRendererDust(ParticleSystemRenderer rend, RayfireDust scr)
		{
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0xD34BB0", Offset = "0xD34BB0", VA = "0xD34BB0")]
		private void SetMaterialDust(ParticleSystemRenderer rend, List<Material> mats)
		{
		}
	}
	[Token(Token = "0x2000137")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5712AC", Offset = "0x5712AC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x5712AC", Offset = "0x5712AC")]
	public class RayfireGun : MonoBehaviour
	{
		[Token(Token = "0x20004BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572AC8", Offset = "0x572AC8")]
		private sealed class <StartShootCor>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireGun <>4__this;

			[Token(Token = "0x4002C0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <shootId>5__2;

			[Token(Token = "0x170003AC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021F2")]
				[Address(RVA = "0x86FB70", Offset = "0x86FB70", VA = "0x86FB70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021F4")]
				[Address(RVA = "0x86FBB8", Offset = "0x86FBB8", VA = "0x86FBB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021EF")]
			[Address(RVA = "0x86FA60", Offset = "0x86FA60", VA = "0x86FA60")]
			[DebuggerHidden]
			public <StartShootCor>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60021F0")]
			[Address(RVA = "0x86FA8C", Offset = "0x86FA8C", VA = "0x86FA8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021F1")]
			[Address(RVA = "0x86FA90", Offset = "0x86FA90", VA = "0x86FA90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021F3")]
			[Address(RVA = "0x86FB78", Offset = "0x86FB78", VA = "0x86FB78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572AD8", Offset = "0x572AD8")]
		private sealed class <BurstCor>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireGun <>4__this;

			[Token(Token = "0x4002C12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170003AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021F8")]
				[Address(RVA = "0x86FA10", Offset = "0x86FA10", VA = "0x86FA10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021FA")]
				[Address(RVA = "0x86FA58", Offset = "0x86FA58", VA = "0x86FA58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021F5")]
			[Address(RVA = "0x86F8F4", Offset = "0x86F8F4", VA = "0x86F8F4")]
			[DebuggerHidden]
			public <BurstCor>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60021F6")]
			[Address(RVA = "0x86F920", Offset = "0x86F920", VA = "0x86F920", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021F7")]
			[Address(RVA = "0x86F924", Offset = "0x86F924", VA = "0x86F924", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021F9")]
			[Address(RVA = "0x86FA18", Offset = "0x86FA18", VA = "0x86FA18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57AA68", Offset = "0x57AA68")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57AA68", Offset = "0x57AA68")]
		public AxisType axis;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57AAB8", Offset = "0x57AAB8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57AAB8", Offset = "0x57AAB8")]
		public float maxDistance;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57AB00", Offset = "0x57AB00")]
		public Transform target;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57AB14", Offset = "0x57AB14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57AB14", Offset = "0x57AB14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57AB14", Offset = "0x57AB14")]
		public int rounds;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57AB7C", Offset = "0x57AB7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57AB7C", Offset = "0x57AB7C")]
		public float rate;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57ABC4", Offset = "0x57ABC4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57ABC4", Offset = "0x57ABC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57ABC4", Offset = "0x57ABC4")]
		public float strength;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57AC2C", Offset = "0x57AC2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57AC2C", Offset = "0x57AC2C")]
		public float radius;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57AC70", Offset = "0x57AC70")]
		public bool demolishCluster;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57AC84", Offset = "0x57AC84")]
		public bool affectInactive;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57AC98", Offset = "0x57AC98")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57AC98", Offset = "0x57AC98")]
		public bool rigid;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public bool rigidRoot;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x57ACE8", Offset = "0x57ACE8")]
		public bool rigidBody;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57AD20", Offset = "0x57AD20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57AD20", Offset = "0x57AD20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57AD20", Offset = "0x57AD20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57AD20", Offset = "0x57AD20")]
		public float damage;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57ADA0", Offset = "0x57ADA0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57ADA0", Offset = "0x57ADA0")]
		public bool debris;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57ADF0", Offset = "0x57ADF0")]
		public bool dust;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57AE04", Offset = "0x57AE04")]
		public bool flash;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57AE18", Offset = "0x57AE18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57AE18", Offset = "0x57AE18")]
		public RFFlash Flash;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public int mask;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public string tagFilter;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public bool showRay;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[HideInInspector]
		public bool showHit;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[HideInInspector]
		public bool shooting;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string untagged;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public RFShotEvent shotEvent;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Collider[] impactColliders;

		[Token(Token = "0x17000024")]
		public Vector3 ShootVector
		{
			[Token(Token = "0x600060E")]
			[Address(RVA = "0xD34E3C", Offset = "0xD34E3C", VA = "0xD34E3C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0xD34D14", Offset = "0xD34D14", VA = "0xD34D14")]
		public void StartShooting()
		{
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0xD34D4C", Offset = "0xD34D4C", VA = "0xD34D4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58FD30", Offset = "0x58FD30")]
		private IEnumerator StartShootCor()
		{
			return null;
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0xD34DB8", Offset = "0xD34DB8", VA = "0xD34DB8")]
		public void StopShooting()
		{
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0xD34DC0", Offset = "0xD34DC0", VA = "0xD34DC0")]
		public void Shoot(int shootId = 1)
		{
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0xD354B8", Offset = "0xD354B8", VA = "0xD354B8")]
		public void Burst()
		{
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0xD354F0", Offset = "0xD354F0", VA = "0xD354F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58FD90", Offset = "0x58FD90")]
		private IEnumerator BurstCor()
		{
			return null;
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0xD34F8C", Offset = "0xD34F8C", VA = "0xD34F8C")]
		public void Shoot(Vector3 shootPos, Vector3 shootVector)
		{
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0xD367B8", Offset = "0xD367B8", VA = "0xD367B8")]
		public void ShootOld(Vector3 shootPos, Vector3 shootVector)
		{
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0xD35CA0", Offset = "0xD35CA0", VA = "0xD35CA0")]
		private void ImpactRigid(RayfireRigid rigidScr, RaycastHit hit, Vector3 impactPoint, Vector3 shootVector)
		{
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0xD36428", Offset = "0xD36428", VA = "0xD36428")]
		private void ImpactRoot(RayfireRigidRoot rootScr, RaycastHit hit, Vector3 impactPoint, Vector3 shootVector)
		{
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0xD36B40", Offset = "0xD36B40", VA = "0xD36B40")]
		private void AddForce(List<Rigidbody> impactRbList, Vector3 impactPoint, Vector3 shootVector)
		{
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0xD35AA8", Offset = "0xD35AA8", VA = "0xD35AA8")]
		private RayfireRigid ApplyDamage(RayfireRigid scrRigid, RaycastHit hit, Vector3 shootPos, Vector3 shootVector, Vector3 impactPoint)
		{
			return null;
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0xD3555C", Offset = "0xD3555C", VA = "0xD3555C")]
		private void VfxFlash(Vector3 position, Vector3 normal)
		{
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0xD35748", Offset = "0xD35748", VA = "0xD35748")]
		private void VfxDebris(List<RayfireDebris> debrisList, Vector3 impactPos, Vector3 impactNormal)
		{
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0xD358F8", Offset = "0xD358F8", VA = "0xD358F8")]
		private void VfxDust(List<RayfireDust> dustList, Vector3 impactPos, Vector3 impactNormal)
		{
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0xD36CC8", Offset = "0xD36CC8", VA = "0xD36CC8")]
		private List<RayfireRigid> ActivationCheck(RayfireRigid scrTarget, Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0xD37064", Offset = "0xD37064", VA = "0xD37064")]
		public RayfireGun()
		{
		}
	}
	[Token(Token = "0x2000138")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x57130C", Offset = "0x57130C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x57130C", Offset = "0x57130C")]
	public class RayfireMan : MonoBehaviour
	{
		[Token(Token = "0x20004BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572AE8", Offset = "0x572AE8")]
		private sealed class <InactiveCor>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireMan <>4__this;

			[Token(Token = "0x170003B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021FE")]
				[Address(RVA = "0x870078", Offset = "0x870078", VA = "0x870078", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002200")]
				[Address(RVA = "0x8700C0", Offset = "0x8700C0", VA = "0x8700C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021FB")]
			[Address(RVA = "0x86FE9C", Offset = "0x86FE9C", VA = "0x86FE9C")]
			[DebuggerHidden]
			public <InactiveCor>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x60021FC")]
			[Address(RVA = "0x86FEC8", Offset = "0x86FEC8", VA = "0x86FEC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021FD")]
			[Address(RVA = "0x86FECC", Offset = "0x86FECC", VA = "0x86FECC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021FF")]
			[Address(RVA = "0x870080", Offset = "0x870080", VA = "0x870080", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572AF8", Offset = "0x572AF8")]
		private sealed class <ActivationOffsetCor>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireMan <>4__this;

			[Token(Token = "0x170003B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002204")]
				[Address(RVA = "0x86FE4C", Offset = "0x86FE4C", VA = "0x86FE4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002206")]
				[Address(RVA = "0x86FE94", Offset = "0x86FE94", VA = "0x86FE94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002201")]
			[Address(RVA = "0x86FBC0", Offset = "0x86FBC0", VA = "0x86FBC0")]
			[DebuggerHidden]
			public <ActivationOffsetCor>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6002202")]
			[Address(RVA = "0x86FBEC", Offset = "0x86FBEC", VA = "0x86FBEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002203")]
			[Address(RVA = "0x86FBF0", Offset = "0x86FBF0", VA = "0x86FBF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002205")]
			[Address(RVA = "0x86FE54", Offset = "0x86FE54", VA = "0x86FE54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RayfireMan inst;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57AEB8", Offset = "0x57AEB8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57AEB8", Offset = "0x57AEB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AEB8", Offset = "0x57AEB8")]
		public bool setGravity;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57AF2C", Offset = "0x57AF2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AF2C", Offset = "0x57AF2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57AF2C", Offset = "0x57AF2C")]
		public float multiplier;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57AF94", Offset = "0x57AF94")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57AF94", Offset = "0x57AF94")]
		public RigidbodyInterpolation interpolation;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57AFE4", Offset = "0x57AFE4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57AFE4", Offset = "0x57AFE4")]
		public float colliderSize;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float colliderSizeStatic;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57B028", Offset = "0x57B028")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B028", Offset = "0x57B028")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x57B028", Offset = "0x57B028")]
		public CollisionDetectionMode meshCollision;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B09C", Offset = "0x57B09C")]
		public CollisionDetectionMode clusterCollision;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57B0B0", Offset = "0x57B0B0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B0B0", Offset = "0x57B0B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B0B0", Offset = "0x57B0B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57B0B0", Offset = "0x57B0B0")]
		public float minimumMass;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B13C", Offset = "0x57B13C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B13C", Offset = "0x57B13C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57B13C", Offset = "0x57B13C")]
		public float maximumMass;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B1A8", Offset = "0x57B1A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B1A8", Offset = "0x57B1A8")]
		public RFMaterialPresets materialPresets;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57B1F8", Offset = "0x57B1F8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B1F8", Offset = "0x57B1F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B1F8", Offset = "0x57B1F8")]
		public GameObject parent;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57B26C", Offset = "0x57B26C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B26C", Offset = "0x57B26C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B26C", Offset = "0x57B26C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57B26C", Offset = "0x57B26C")]
		public float globalSolidity;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B2F8", Offset = "0x57B2F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B2F8", Offset = "0x57B2F8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57B2F8", Offset = "0x57B2F8")]
		public float timeQuota;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B364", Offset = "0x57B364")]
		public RFManDemolition advancedDemolitionProperties;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57B378", Offset = "0x57B378")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B378", Offset = "0x57B378")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B378", Offset = "0x57B378")]
		public RFPoolingFragment fragments;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B3EC", Offset = "0x57B3EC")]
		public RFPoolingParticles particles;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57B400", Offset = "0x57B400")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B400", Offset = "0x57B400")]
		public static int buildMajor;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int buildMinor;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Transform transForm;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public List<string> layers;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public float maxTimeThisFrame;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<RFUny> unyList;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<RayfireRigid> activationOffset;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<RayfireRigid> inactive;

		[Token(Token = "0x17000025")]
		public static bool MaxAmountCheck
		{
			[Token(Token = "0x6000619")]
			[Address(RVA = "0xB87754", Offset = "0xB87754", VA = "0xB87754")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0xB87048", Offset = "0xB87048", VA = "0xB87048")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0xB87274", Offset = "0xB87274", VA = "0xB87274")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0xB8704C", Offset = "0xB8704C", VA = "0xB8704C")]
		private void SetInstance()
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0xB8727C", Offset = "0xB8727C", VA = "0xB8727C")]
		private void SetVariables()
		{
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0xB87460", Offset = "0xB87460", VA = "0xB87460")]
		private void SetGravity()
		{
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0xB8757C", Offset = "0xB8757C", VA = "0xB8757C")]
		public static void RayFireManInit()
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0xB876D0", Offset = "0xB876D0", VA = "0xB876D0")]
		private static void EditorCreate()
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0xB874AC", Offset = "0xB874AC", VA = "0xB874AC")]
		private void SetLayers()
		{
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0xB877D8", Offset = "0xB877D8", VA = "0xB877D8")]
		public static void SetParent(Transform tm, Transform original)
		{
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0xB8733C", Offset = "0xB8733C", VA = "0xB8733C")]
		private void StartPooling()
		{
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0xB87920", Offset = "0xB87920", VA = "0xB87920")]
		public static void DestroyFragment(RayfireRigid scr, Transform tm, float time = 0f)
		{
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0xB87BEC", Offset = "0xB87BEC", VA = "0xB87BEC")]
		public static void DestroyGo(GameObject go)
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0xB87A6C", Offset = "0xB87A6C", VA = "0xB87A6C")]
		private static void DestroyOp(RayfireRigid scr, Transform tm, float time = 0f)
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0xB87C50", Offset = "0xB87C50", VA = "0xB87C50")]
		public void AddInactive(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0xB87CF0", Offset = "0xB87CF0", VA = "0xB87CF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58FDF0", Offset = "0x58FDF0")]
		private IEnumerator InactiveCor()
		{
			return null;
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0xB87D5C", Offset = "0xB87D5C", VA = "0xB87D5C")]
		public void AddActivationOffset(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0xB87DFC", Offset = "0xB87DFC", VA = "0xB87DFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58FE50", Offset = "0x58FE50")]
		private IEnumerator ActivationOffsetCor()
		{
			return null;
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0xB87E68", Offset = "0xB87E68", VA = "0xB87E68")]
		public RayfireMan()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000139")]
	public class RFCache
	{
		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<bool> act;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Vector3> pos;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Quaternion> rot;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform transform;

		[Token(Token = "0x6000625")]
		[Address(RVA = "0xC75600", Offset = "0xC75600", VA = "0xC75600")]
		public RFCache(Transform parent, Transform tm)
		{
		}
	}
	[Token(Token = "0x200013A")]
	[SelectionBase]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x57137C", Offset = "0x57137C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x57137C", Offset = "0x57137C")]
	public class RayfireRecorder : MonoBehaviour
	{
		[Token(Token = "0x20004C0")]
		public enum AnimatorType
		{
			[Token(Token = "0x4002C1A")]
			None = 0,
			[Token(Token = "0x4002C1B")]
			Record = 2,
			[Token(Token = "0x4002C1C")]
			Play = 8
		}

		[Token(Token = "0x20004C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572B08", Offset = "0x572B08")]
		private sealed class <RecordCor>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireRecorder <>4__this;

			[Token(Token = "0x170003B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600220A")]
				[Address(RVA = "0x870468", Offset = "0x870468", VA = "0x870468", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600220C")]
				[Address(RVA = "0x8704B0", Offset = "0x8704B0", VA = "0x8704B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002207")]
			[Address(RVA = "0x8700C8", Offset = "0x8700C8", VA = "0x8700C8")]
			[DebuggerHidden]
			public <RecordCor>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6002208")]
			[Address(RVA = "0x8700F4", Offset = "0x8700F4", VA = "0x8700F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002209")]
			[Address(RVA = "0x8700F8", Offset = "0x8700F8", VA = "0x8700F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600220B")]
			[Address(RVA = "0x870470", Offset = "0x870470", VA = "0x870470", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B480", Offset = "0x57B480")]
		public AnimatorType mode;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57B494", Offset = "0x57B494")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B494", Offset = "0x57B494")]
		public bool recordOnStart;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B4E4", Offset = "0x57B4E4")]
		public string clipName;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B4F8", Offset = "0x57B4F8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57B4F8", Offset = "0x57B4F8")]
		public float duration;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B540", Offset = "0x57B540")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57B540", Offset = "0x57B540")]
		public int rate;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B594", Offset = "0x57B594")]
		public bool reduceKeys;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B5A8", Offset = "0x57B5A8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57B5A8", Offset = "0x57B5A8")]
		public float threshold;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57B5EC", Offset = "0x57B5EC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B5EC", Offset = "0x57B5EC")]
		public bool playOnStart;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B63C", Offset = "0x57B63C")]
		public AnimationClip animationClip;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B650", Offset = "0x57B650")]
		public RuntimeAnimatorController controller;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57B664", Offset = "0x57B664")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B664", Offset = "0x57B664")]
		public bool setToKinematic;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[HideInInspector]
		public bool recorder;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public float recordedTime;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int stateNameHash;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string assetFolder;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string clipFolder;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float stepTime;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator animator;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Transform> tmList;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<RFCache> cacheList;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<float> timeList;

		[Token(Token = "0x6000626")]
		[Address(RVA = "0xB8808C", Offset = "0xB8808C", VA = "0xB8808C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0xB883DC", Offset = "0xB883DC", VA = "0xB883DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0xB88440", Offset = "0xB88440", VA = "0xB88440")]
		private void SetRigid()
		{
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0xB88090", Offset = "0xB88090", VA = "0xB88090")]
		private void SetVariables()
		{
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0xB88744", Offset = "0xB88744", VA = "0xB88744")]
		private void SetModeRecord()
		{
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0xB8898C", Offset = "0xB8898C", VA = "0xB8898C")]
		private void SetModePlay()
		{
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0xB89024", Offset = "0xB89024", VA = "0xB89024")]
		private void Reset()
		{
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0xB88678", Offset = "0xB88678", VA = "0xB88678")]
		public void StartRecord()
		{
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0xB8905C", Offset = "0xB8905C", VA = "0xB8905C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58FEB0", Offset = "0x58FEB0")]
		private IEnumerator RecordCor()
		{
			return null;
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0xB890C8", Offset = "0xB890C8", VA = "0xB890C8")]
		public void StopRecord()
		{
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0xB886E8", Offset = "0xB886E8", VA = "0xB886E8")]
		public void StartPlay()
		{
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0xB890D0", Offset = "0xB890D0", VA = "0xB890D0")]
		public RayfireRecorder()
		{
		}
	}
	[Token(Token = "0x200013B")]
	[SelectionBase]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5713FC", Offset = "0x5713FC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x5713FC", Offset = "0x5713FC")]
	public class RayfireRestriction : MonoBehaviour
	{
		[Token(Token = "0x20004C2")]
		public enum RFBoundActionType
		{
			[Token(Token = "0x4002C21")]
			Fade = 2,
			[Token(Token = "0x4002C22")]
			Reset = 4,
			[Token(Token = "0x4002C23")]
			PostDemolitionAction = 9
		}

		[Token(Token = "0x20004C3")]
		public enum RFDistanceType
		{
			[Token(Token = "0x4002C25")]
			InitializePosition = 0,
			[Token(Token = "0x4002C26")]
			TargetPosition = 2
		}

		[Token(Token = "0x20004C4")]
		public enum RFBoundTriggerType
		{
			[Token(Token = "0x4002C28")]
			Inside = 0,
			[Token(Token = "0x4002C29")]
			Outside = 2
		}

		[Token(Token = "0x20004C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572B18", Offset = "0x572B18")]
		private sealed class <RestrictionDistanceCor>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireRigid scr;

			[Token(Token = "0x4002C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <intervalDelay>5__2;

			[Token(Token = "0x4002C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WaitForSeconds <actionDelay>5__3;

			[Token(Token = "0x4002C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 <checkPosition>5__4;

			[Token(Token = "0x170003B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002210")]
				[Address(RVA = "0x870798", Offset = "0x870798", VA = "0x870798", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002212")]
				[Address(RVA = "0x8707E0", Offset = "0x8707E0", VA = "0x8707E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600220D")]
			[Address(RVA = "0x8704B8", Offset = "0x8704B8", VA = "0x8704B8")]
			[DebuggerHidden]
			public <RestrictionDistanceCor>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600220E")]
			[Address(RVA = "0x8704E4", Offset = "0x8704E4", VA = "0x8704E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600220F")]
			[Address(RVA = "0x8704E8", Offset = "0x8704E8", VA = "0x8704E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002211")]
			[Address(RVA = "0x8707A0", Offset = "0x8707A0", VA = "0x8707A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572B28", Offset = "0x572B28")]
		private sealed class <RestrictionTriggerCor>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireRigid scr;

			[Token(Token = "0x4002C33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <intervalDelay>5__2;

			[Token(Token = "0x4002C34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WaitForSeconds <actionDelay>5__3;

			[Token(Token = "0x4002C35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <brokeState>5__4;

			[Token(Token = "0x170003B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002216")]
				[Address(RVA = "0x870B8C", Offset = "0x870B8C", VA = "0x870B8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002218")]
				[Address(RVA = "0x870BD4", Offset = "0x870BD4", VA = "0x870BD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002213")]
			[Address(RVA = "0x8707E8", Offset = "0x8707E8", VA = "0x8707E8")]
			[DebuggerHidden]
			public <RestrictionTriggerCor>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002214")]
			[Address(RVA = "0x870814", Offset = "0x870814", VA = "0x870814", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002215")]
			[Address(RVA = "0x870818", Offset = "0x870818", VA = "0x870818", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002217")]
			[Address(RVA = "0x870B94", Offset = "0x870B94", VA = "0x870B94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57B6D4", Offset = "0x57B6D4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B6D4", Offset = "0x57B6D4")]
		public bool enable;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B724", Offset = "0x57B724")]
		public RFBoundActionType breakAction;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B738", Offset = "0x57B738")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57B738", Offset = "0x57B738")]
		public float actionDelay;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B780", Offset = "0x57B780")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57B780", Offset = "0x57B780")]
		public float checkInterval;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57B7CC", Offset = "0x57B7CC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B7CC", Offset = "0x57B7CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57B7CC", Offset = "0x57B7CC")]
		public float distance;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B838", Offset = "0x57B838")]
		public RFDistanceType position;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B84C", Offset = "0x57B84C")]
		public Transform target;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57B860", Offset = "0x57B860")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B860", Offset = "0x57B860")]
		public Collider Collider;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B8B0", Offset = "0x57B8B0")]
		public RFBoundTriggerType region;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public bool broke;

		[Token(Token = "0x6000632")]
		[Address(RVA = "0xB89140", Offset = "0xB89140", VA = "0xB89140")]
		public RayfireRestriction()
		{
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0xB89194", Offset = "0xB89194", VA = "0xB89194")]
		public void CopyFrom(RayfireRestriction rest)
		{
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0xB8918C", Offset = "0xB8918C", VA = "0xB8918C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0xB891EC", Offset = "0xB891EC", VA = "0xB891EC")]
		public static void InitRestriction(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0xB894F4", Offset = "0xB894F4", VA = "0xB894F4")]
		private static void BrokeRestriction(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0xB8941C", Offset = "0xB8941C", VA = "0xB8941C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58FF10", Offset = "0x58FF10")]
		private static IEnumerator RestrictionDistanceCor(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0xB89488", Offset = "0xB89488", VA = "0xB89488")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58FF70", Offset = "0x58FF70")]
		private static IEnumerator RestrictionTriggerCor(RayfireRigid scr)
		{
			return null;
		}
	}
	[Token(Token = "0x200013C")]
	[SelectionBase]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x57147C", Offset = "0x57147C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x57147C", Offset = "0x57147C")]
	public class RayfireRigid : MonoBehaviour
	{
		[Token(Token = "0x20004C7")]
		public enum InitType
		{
			[Token(Token = "0x4002C37")]
			ByMethod,
			[Token(Token = "0x4002C38")]
			AtStart
		}

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B8D4", Offset = "0x57B8D4")]
		public InitType initialization;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57B8E8", Offset = "0x57B8E8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B8E8", Offset = "0x57B8E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B8E8", Offset = "0x57B8E8")]
		public SimType simulationType;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B95C", Offset = "0x57B95C")]
		public ObjectType objectType;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B970", Offset = "0x57B970")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B970", Offset = "0x57B970")]
		public DemolitionType demolitionType;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57B9C0", Offset = "0x57B9C0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57B9C0", Offset = "0x57B9C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B9C0", Offset = "0x57B9C0")]
		public RFPhysic physics;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BA34", Offset = "0x57BA34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BA34", Offset = "0x57BA34")]
		public RFActivation activation;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57BA84", Offset = "0x57BA84")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BA84", Offset = "0x57BA84")]
		public RFLimitations limitations;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BAD4", Offset = "0x57BAD4")]
		public RFDemolitionMesh meshDemolition;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BAE8", Offset = "0x57BAE8")]
		public RFDemolitionCluster clusterDemolition;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BAFC", Offset = "0x57BAFC")]
		public RFReferenceDemolition referenceDemolition;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BB10", Offset = "0x57BB10")]
		public RFSurface materials;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BB24", Offset = "0x57BB24")]
		public RFDamage damage;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57BB38", Offset = "0x57BB38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BB38", Offset = "0x57BB38")]
		public RFFade fading;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BB88", Offset = "0x57BB88")]
		public RFReset reset;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57BB9C", Offset = "0x57BB9C")]
		[HideInInspector]
		public bool initialized;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Mesh[] meshes;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public Vector3[] pivots;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public RFMesh[] rfMeshes;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public List<RFDictionary> subIds;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public List<RayfireRigid> fragments;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public Quaternion cacheRotation;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public Transform transForm;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public Transform rootChild;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public Transform rootParent;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public SkinnedMeshRenderer skinnedMeshRend;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public List<RayfireDebris> debrisList;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public List<RayfireDust> dustList;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public RayfireRestriction restriction;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		public RayfireSound sound;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public RFDemolitionEvent demolitionEvent;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public RFActivationEvent activationEvent;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public RFRestrictionEvent restrictionEvent;

		[Token(Token = "0x17000026")]
		public bool HasFragments
		{
			[Token(Token = "0x600065F")]
			[Address(RVA = "0xB8BD9C", Offset = "0xB8BD9C", VA = "0xB8BD9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000027")]
		public bool HasMeshes
		{
			[Token(Token = "0x6000660")]
			[Address(RVA = "0xB8C438", Offset = "0xB8C438", VA = "0xB8C438")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000028")]
		public bool HasRfMeshes
		{
			[Token(Token = "0x6000661")]
			[Address(RVA = "0xB8C458", Offset = "0xB8C458", VA = "0xB8C458")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000029")]
		public bool HasDebris
		{
			[Token(Token = "0x6000662")]
			[Address(RVA = "0xB8C478", Offset = "0xB8C478", VA = "0xB8C478")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700002A")]
		public bool HasDust
		{
			[Token(Token = "0x6000663")]
			[Address(RVA = "0xB8C4D0", Offset = "0xB8C4D0", VA = "0xB8C4D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700002B")]
		public bool IsCluster
		{
			[Token(Token = "0x6000664")]
			[Address(RVA = "0xB8C528", Offset = "0xB8C528", VA = "0xB8C528")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700002C")]
		public float AmountIntegrity
		{
			[Token(Token = "0x6000665")]
			[Address(RVA = "0xB8C53C", Offset = "0xB8C53C", VA = "0xB8C53C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0xB895F0", Offset = "0xB895F0", VA = "0xB895F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0xB896DC", Offset = "0xB896DC", VA = "0xB896DC")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0xB89728", Offset = "0xB89728", VA = "0xB89728")]
		private void AwakeMethods()
		{
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0xB8A4E4", Offset = "0xB8A4E4", VA = "0xB8A4E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0xB8A51C", Offset = "0xB8A51C", VA = "0xB8A51C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0xB8A56C", Offset = "0xB8A56C", VA = "0xB8A56C")]
		public void SetActive(bool state)
		{
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0xB89B84", Offset = "0xB89B84", VA = "0xB89B84")]
		private bool SetRootMesh()
		{
			return default(bool);
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0xB898EC", Offset = "0xB898EC", VA = "0xB898EC")]
		public void SetComponentsBasic()
		{
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0xB89F88", Offset = "0xB89F88", VA = "0xB89F88")]
		private void SetComponentsPhysics()
		{
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0xB8AE68", Offset = "0xB8AE68", VA = "0xB8AE68")]
		private void Clusterize()
		{
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0xB8A348", Offset = "0xB8A348", VA = "0xB8A348")]
		private void SetObjectType()
		{
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0xB8A218", Offset = "0xB8A218", VA = "0xB8A218")]
		public void Default()
		{
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0xB8AFB8", Offset = "0xB8AFB8", VA = "0xB8AFB8")]
		private void SetPhysics()
		{
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0xB8A390", Offset = "0xB8A390", VA = "0xB8A390")]
		public void StartAllCoroutines()
		{
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0xB8965C", Offset = "0xB8965C", VA = "0xB8965C")]
		public void MeshInput()
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0xB8A108", Offset = "0xB8A108", VA = "0xB8A108")]
		private void AwakePrecache()
		{
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0xB8A18C", Offset = "0xB8A18C", VA = "0xB8A18C")]
		private void AwakePrefragment()
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0xB8B2C4", Offset = "0xB8B2C4", VA = "0xB8B2C4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0xB8B4A4", Offset = "0xB8B4A4", VA = "0xB8B4A4")]
		private bool CollisionDemolition(Collision collision)
		{
			return default(bool);
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0xB8B898", Offset = "0xB8B898", VA = "0xB8B898")]
		public bool State()
		{
			return default(bool);
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0xB8B310", Offset = "0xB8B310", VA = "0xB8B310")]
		public bool DemolitionState()
		{
			return default(bool);
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0xB8B9E8", Offset = "0xB8B9E8", VA = "0xB8B9E8")]
		public void Demolish()
		{
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0xB8A600", Offset = "0xB8A600", VA = "0xB8A600")]
		public void CopyPropertiesTo(RayfireRigid toScr)
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0xB8BC18", Offset = "0xB8BC18", VA = "0xB8BC18")]
		public void InitMeshFragments()
		{
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0xB8B0DC", Offset = "0xB8B0DC", VA = "0xB8B0DC")]
		private void Prefragment()
		{
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0xB8BEF0", Offset = "0xB8BEF0", VA = "0xB8BEF0")]
		public void DeleteCache()
		{
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0xB8BDF4", Offset = "0xB8BDF4", VA = "0xB8BDF4")]
		public void DeleteFragments()
		{
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0xB8BF68", Offset = "0xB8BF68", VA = "0xB8BF68")]
		public void AddSlicePlane(Vector3[] slicePlane)
		{
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0xB8C004", Offset = "0xB8C004", VA = "0xB8C004")]
		public void Slice()
		{
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0xB8C0CC", Offset = "0xB8C0CC", VA = "0xB8C0CC")]
		public void CacheFrames()
		{
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0xB8B890", Offset = "0xB8B890", VA = "0xB8B890")]
		public bool ApplyDamage(float damageValue, Vector3 damagePoint, float damageRadius = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0xB8C10C", Offset = "0xB8C10C", VA = "0xB8C10C")]
		public void Activate(bool connCheck = true)
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0xB8C1DC", Offset = "0xB8C1DC", VA = "0xB8C1DC")]
		public void Fade()
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0xB8C2A0", Offset = "0xB8C2A0", VA = "0xB8C2A0")]
		public void ResetRigid()
		{
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0xB8C2A8", Offset = "0xB8C2A8", VA = "0xB8C2A8")]
		public void DestroyCollider(Collider col)
		{
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0xB8C30C", Offset = "0xB8C30C", VA = "0xB8C30C")]
		public void DestroyObject(GameObject go)
		{
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0xB8C370", Offset = "0xB8C370", VA = "0xB8C370")]
		public void DestroyRigid(RayfireRigid rigid)
		{
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0xB8C3D4", Offset = "0xB8C3D4", VA = "0xB8C3D4")]
		public void DestroyRb(Rigidbody rb)
		{
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0xB8C5C4", Offset = "0xB8C5C4", VA = "0xB8C5C4")]
		public RayfireRigid()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200013D")]
	public class RFRigidRootDemolition
	{
		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BCE8", Offset = "0x57BCE8")]
		public RFLimitations limitations;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BCFC", Offset = "0x57BCFC")]
		public RFDemolitionMesh meshDemolition;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BD10", Offset = "0x57BD10")]
		public RFDemolitionCluster clusterDemolition;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BD24", Offset = "0x57BD24")]
		public RFSurface materials;

		[Token(Token = "0x6000667")]
		[Address(RVA = "0xC41DEC", Offset = "0xC41DEC", VA = "0xC41DEC")]
		public RFRigidRootDemolition()
		{
		}
	}
	[Token(Token = "0x200013E")]
	[SelectionBase]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5714FC", Offset = "0x5714FC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x5714FC", Offset = "0x5714FC")]
	public class RayfireRigidRoot : MonoBehaviour
	{
		[Token(Token = "0x20004C8")]
		public enum InitType
		{
			[Token(Token = "0x4002C3A")]
			ByMethod,
			[Token(Token = "0x4002C3B")]
			AtStart
		}

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BD38", Offset = "0x57BD38")]
		public InitType initialization;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57BD4C", Offset = "0x57BD4C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BD4C", Offset = "0x57BD4C")]
		public SimType simulationType;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BD9C", Offset = "0x57BD9C")]
		public RFPhysic physics;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BDB0", Offset = "0x57BDB0")]
		public RFActivation activation;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BDC4", Offset = "0x57BDC4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57BDC4", Offset = "0x57BDC4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BDC4", Offset = "0x57BDC4")]
		public RFRigidRootDemolition demolition;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57BE28", Offset = "0x57BE28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BE28", Offset = "0x57BE28")]
		public RFFade fading;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BE78", Offset = "0x57BE78")]
		public RFReset reset;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public RFCluster cluster;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public List<RFCluster> clusters;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public List<RFShard> inactiveShards;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public List<RFShard> rigidShards;

		[NonSerialized]
		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<RFShard> destroyShards;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool initialized;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool cached;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public float sizeBox;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public float sizeSum;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Transform tm;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public RayfireSound sound;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public RayfireConnectivity connect;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public List<RayfireDebris> debrisList;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public List<RayfireDust> dustList;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public List<RayfireUnyielding> unyList;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string strRoot;

		[Token(Token = "0x1700002D")]
		public bool HasDebris
		{
			[Token(Token = "0x600067E")]
			[Address(RVA = "0xB8EDA4", Offset = "0xB8EDA4", VA = "0xB8EDA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700002E")]
		public bool HasDust
		{
			[Token(Token = "0x600067F")]
			[Address(RVA = "0xB8EDFC", Offset = "0xB8EDFC", VA = "0xB8EDFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0xB8C838", Offset = "0xB8C838", VA = "0xB8C838")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0xB8C8C0", Offset = "0xB8C8C0", VA = "0xB8C8C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0xB8C8DC", Offset = "0xB8C8DC", VA = "0xB8C8DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0xB8C84C", Offset = "0xB8C84C", VA = "0xB8C84C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0xB8CB18", Offset = "0xB8CB18", VA = "0xB8CB18")]
		private void InitConnectivity()
		{
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0xB8CBD0", Offset = "0xB8CBD0", VA = "0xB8CBD0")]
		public void ResetRigidRoot()
		{
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0xB8CBD8", Offset = "0xB8CBD8", VA = "0xB8CBD8")]
		public void ResetRoot()
		{
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0xB8CD00", Offset = "0xB8CD00", VA = "0xB8CD00")]
		public void SetupRoot()
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0xB8C9BC", Offset = "0xB8C9BC", VA = "0xB8C9BC")]
		private void AwakeMethods()
		{
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0xB8CED8", Offset = "0xB8CED8", VA = "0xB8CED8")]
		private void SetComponents()
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0xB8D01C", Offset = "0xB8D01C", VA = "0xB8D01C")]
		private void SetShards()
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0xB8D5A4", Offset = "0xB8D5A4", VA = "0xB8D5A4")]
		private void SetColliders()
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0xB8D85C", Offset = "0xB8D85C", VA = "0xB8D85C")]
		private void SetCollidersMaterial()
		{
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0xB8DA34", Offset = "0xB8DA34", VA = "0xB8DA34")]
		private void SetPhysics()
		{
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0xB8DDFC", Offset = "0xB8DDFC", VA = "0xB8DDFC")]
		private void SetInactive()
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0xB8D6F8", Offset = "0xB8D6F8", VA = "0xB8D6F8")]
		private void SetUnyielding()
		{
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0xB8C92C", Offset = "0xB8C92C", VA = "0xB8C92C")]
		private void StartAllCoroutines()
		{
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0xB8E8DC", Offset = "0xB8E8DC", VA = "0xB8E8DC")]
		private static void SetShardsByRigids(RFCluster cluster, List<RayfireRigid> rigidList, ConnectivityType connectivity)
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0xB8EB6C", Offset = "0xB8EB6C", VA = "0xB8EB6C")]
		public void ActivateCollider(Collider coll)
		{
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0xB8ECC4", Offset = "0xB8ECC4", VA = "0xB8ECC4")]
		public void CopyPropertiesTo(RayfireRigid toScr)
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0xB8E4B4", Offset = "0xB8E4B4", VA = "0xB8E4B4")]
		private static bool IsNestedCluster(Transform trans)
		{
			return default(bool);
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0xB8DFC0", Offset = "0xB8DFC0", VA = "0xB8DFC0")]
		private static bool ShardFilter(RFShard shard, RayfireRigidRoot scr)
		{
			return default(bool);
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0xB8EE54", Offset = "0xB8EE54", VA = "0xB8EE54")]
		public void CollideTest()
		{
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0xB8EE60", Offset = "0xB8EE60", VA = "0xB8EE60")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0xB8EEEC", Offset = "0xB8EEEC", VA = "0xB8EEEC")]
		public RayfireRigidRoot()
		{
		}
	}
	[Token(Token = "0x200013F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x57157C", Offset = "0x57157C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x57157C", Offset = "0x57157C")]
	public class RayfireShatter : MonoBehaviour
	{
		[Token(Token = "0x20004C9")]
		private enum PrefabMode
		{
			[Token(Token = "0x4002C3D")]
			Scene,
			[Token(Token = "0x4002C3E")]
			Asset,
			[Token(Token = "0x4002C3F")]
			PrefabEditingMode
		}

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57BF4C", Offset = "0x57BF4C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BF4C", Offset = "0x57BF4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BF4C", Offset = "0x57BF4C")]
		public FragType type;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57BFC0", Offset = "0x57BFC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BFC0", Offset = "0x57BFC0")]
		public RFVoronoi voronoi;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57C010", Offset = "0x57C010")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C010", Offset = "0x57C010")]
		public RFSplinters splinters;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57C060", Offset = "0x57C060")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C060", Offset = "0x57C060")]
		public RFSplinters slabs;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57C0B0", Offset = "0x57C0B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C0B0", Offset = "0x57C0B0")]
		public RFRadial radial;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57C100", Offset = "0x57C100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C100", Offset = "0x57C100")]
		public RFCustom custom;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57C150", Offset = "0x57C150")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C150", Offset = "0x57C150")]
		public RFSlice slice;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57C1A0", Offset = "0x57C1A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C1A0", Offset = "0x57C1A0")]
		public RFTets tets;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57C1F0", Offset = "0x57C1F0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57C1F0", Offset = "0x57C1F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C1F0", Offset = "0x57C1F0")]
		public FragmentMode mode;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57C264", Offset = "0x57C264")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C264", Offset = "0x57C264")]
		public RFSurface material;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57C2B4", Offset = "0x57C2B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C2B4", Offset = "0x57C2B4")]
		public RFShatterCluster clusters;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57C304", Offset = "0x57C304")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C304", Offset = "0x57C304")]
		public RFShatterAdvanced advanced;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57C354", Offset = "0x57C354")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57C354", Offset = "0x57C354")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C354", Offset = "0x57C354")]
		public RFMeshExport export;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57C3C8", Offset = "0x57C3C8")]
		[HideInInspector]
		public bool showCenter;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[HideInInspector]
		public Vector3 centerPosition;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Quaternion centerDirection;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57C434", Offset = "0x57C434")]
		[HideInInspector]
		public Transform transForm;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public SkinnedMeshRenderer skinnedMeshRend;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57C4B0", Offset = "0x57C4B0")]
		[HideInInspector]
		public Mesh[] meshes;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public Vector3[] pivots;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public List<Transform> rootChildList;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public List<GameObject> fragmentsAll;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public List<GameObject> fragmentsLast;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public List<RFDictionary> origSubMeshIdsRF;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public int shatterMode;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[HideInInspector]
		public bool colorPreview;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		[HideInInspector]
		public bool scalePreview;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public float previewScale;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[HideInInspector]
		public float size;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		public float rescaleFix;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[HideInInspector]
		public Vector3 originalScale;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public Bounds bound;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float minSize;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public bool resetState;

		[Token(Token = "0x6000684")]
		[Address(RVA = "0xB8F06C", Offset = "0xB8F06C", VA = "0xB8F06C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0xB8F19C", Offset = "0xB8F19C", VA = "0xB8F19C")]
		private void SetVariables()
		{
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0xB8F1E4", Offset = "0xB8F1E4", VA = "0xB8F1E4")]
		private bool DefineComponents()
		{
			return default(bool);
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0xB8F6EC", Offset = "0xB8F6EC", VA = "0xB8F6EC")]
		public Bounds GetBound()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0xB8F888", Offset = "0xB8F888", VA = "0xB8F888")]
		private static PrefabMode GetPrefabMode(GameObject go)
		{
			return default(PrefabMode);
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0xB8F948", Offset = "0xB8F948", VA = "0xB8F948")]
		public void Fragment(int fragmentMode = 0)
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0xB8FDBC", Offset = "0xB8FDBC", VA = "0xB8FDBC")]
		private List<GameObject> CreateFragments([Optional] GameObject lastRoot)
		{
			return null;
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0xB90824", Offset = "0xB90824", VA = "0xB90824")]
		public void DeleteFragmentsLast(int destroyMode = 0)
		{
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0xB90C24", Offset = "0xB90C24", VA = "0xB90C24")]
		public void DeleteFragmentsAll()
		{
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0xB8F070", Offset = "0xB8F070", VA = "0xB8F070")]
		public void ResetCenter()
		{
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0xB8FB3C", Offset = "0xB8FB3C", VA = "0xB8FB3C")]
		private void ScaleCheck()
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0xB90DB4", Offset = "0xB90DB4", VA = "0xB90DB4")]
		public void ResetScale(float scaleValue)
		{
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0xB8A82C", Offset = "0xB8A82C", VA = "0xB8A82C")]
		public static void CopyRootMeshShatter(RayfireRigid source, List<RayfireRigid> targets)
		{
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0xB9101C", Offset = "0xB9101C", VA = "0xB9101C")]
		private void CopyFrom(RayfireShatter shatter)
		{
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0xB905B0", Offset = "0xB905B0", VA = "0xB905B0")]
		private void VertexLimitation()
		{
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0xB9124C", Offset = "0xB9124C", VA = "0xB9124C")]
		public RayfireShatter()
		{
		}
	}
	[Token(Token = "0x2000140")]
	[SelectionBase]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5715DC", Offset = "0x5715DC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x5715DC", Offset = "0x5715DC")]
	public class RayfireSnapshot : MonoBehaviour
	{
		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57C5DC", Offset = "0x57C5DC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57C5DC", Offset = "0x57C5DC")]
		public string assetName;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool compress;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57C62C", Offset = "0x57C62C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57C62C", Offset = "0x57C62C")]
		public UnityEngine.Object snapshotAsset;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57C67C", Offset = "0x57C67C")]
		public float sizeFilter;

		[Token(Token = "0x6000695")]
		[Address(RVA = "0xB915A8", Offset = "0xB915A8", VA = "0xB915A8")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0xB915E0", Offset = "0xB915E0", VA = "0xB915E0")]
		public RayfireSnapshot()
		{
		}
	}
	[Token(Token = "0x2000141")]
	[SelectionBase]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x57165C", Offset = "0x57165C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x57165C", Offset = "0x57165C")]
	public class RayfireSound : MonoBehaviour
	{
		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57C694", Offset = "0x57C694")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57C694", Offset = "0x57C694")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C694", Offset = "0x57C694")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57C694", Offset = "0x57C694")]
		public float baseVolume;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57C724", Offset = "0x57C724")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C724", Offset = "0x57C724")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57C724", Offset = "0x57C724")]
		public float sizeVolume;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57C798", Offset = "0x57C798")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57C798", Offset = "0x57C798")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C798", Offset = "0x57C798")]
		public RFSound initialization;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57C80C", Offset = "0x57C80C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C80C", Offset = "0x57C80C")]
		public RFSound activation;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57C85C", Offset = "0x57C85C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C85C", Offset = "0x57C85C")]
		public RFSound demolition;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57C8AC", Offset = "0x57C8AC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57C8AC", Offset = "0x57C8AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C8AC", Offset = "0x57C8AC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57C8AC", Offset = "0x57C8AC")]
		public float minimumSize;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57C938", Offset = "0x57C938")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C938", Offset = "0x57C938")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57C938", Offset = "0x57C938")]
		public float cameraDistance;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public RayfireRigid rigid;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public RayfireRigidRoot rigidRoot;

		[Token(Token = "0x6000697")]
		[Address(RVA = "0xB915E8", Offset = "0xB915E8", VA = "0xB915E8")]
		public RayfireSound()
		{
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0xB8A9C0", Offset = "0xB8A9C0", VA = "0xB8A9C0")]
		public void Check()
		{
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0xB9161C", Offset = "0xB9161C", VA = "0xB9161C")]
		public void CopyFrom(RayfireSound source)
		{
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0xB916FC", Offset = "0xB916FC", VA = "0xB916FC")]
		private void CreateSource(RayfireRigid scr)
		{
		}
	}
	[Token(Token = "0x2000142")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5716CC", Offset = "0x5716CC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x5716CC", Offset = "0x5716CC")]
	public class RayfireUnyielding : MonoBehaviour
	{
		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57C9C4", Offset = "0x57C9C4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57C9C4", Offset = "0x57C9C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C9C4", Offset = "0x57C9C4")]
		public bool unyielding;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57CA38", Offset = "0x57CA38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CA38", Offset = "0x57CA38")]
		public bool activatable;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57CA88", Offset = "0x57CA88")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57CA88", Offset = "0x57CA88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CA88", Offset = "0x57CA88")]
		public Vector3 centerPosition;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57CAFC", Offset = "0x57CAFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CAFC", Offset = "0x57CAFC")]
		public Vector3 size;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public RayfireConnectivity connHost;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public RayfireRigid rigidHost;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public List<RayfireRigid> rigidList;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public List<RFShard> shardList;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public bool showGizmo;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[HideInInspector]
		public bool showCenter;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public int id;

		[Token(Token = "0x1700002F")]
		private bool HasRigids
		{
			[Token(Token = "0x60006A7")]
			[Address(RVA = "0xB929E8", Offset = "0xB929E8", VA = "0xB929E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000030")]
		private bool HasShards
		{
			[Token(Token = "0x60006A8")]
			[Address(RVA = "0xB92A40", Offset = "0xB92A40", VA = "0xB92A40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000031")]
		private Vector3 Extents
		{
			[Token(Token = "0x60006A9")]
			[Address(RVA = "0xB91F20", Offset = "0xB91F20", VA = "0xB91F20")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0xB9195C", Offset = "0xB9195C", VA = "0xB9195C")]
		public static void ClusterSetup(RayfireRigid rigid)
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0xB91A4C", Offset = "0xB91A4C", VA = "0xB91A4C")]
		private static void ClusterOverlap(RayfireUnyielding uny)
		{
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0xB91DA8", Offset = "0xB91DA8", VA = "0xB91DA8")]
		public static int ClusterLayerMask(RayfireRigid rigid)
		{
			return default(int);
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0xB91FD0", Offset = "0xB91FD0", VA = "0xB91FD0")]
		private static void SetShardUnyState(RFShard shard, bool unyielding, bool activatable)
		{
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0xB91FF4", Offset = "0xB91FF4", VA = "0xB91FF4")]
		public static void ConnectivitySetup(RayfireConnectivity connectivity)
		{
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0xB920D4", Offset = "0xB920D4", VA = "0xB920D4")]
		private static void ConnectivityOverlap(RayfireUnyielding uny)
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0xB92408", Offset = "0xB92408", VA = "0xB92408")]
		private static int ConnectivityLayerMask(RayfireConnectivity connectivity)
		{
			return default(int);
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0xB92558", Offset = "0xB92558", VA = "0xB92558")]
		public static void SetRigidUnyState(RayfireRigid rigid, int unyId, bool unyielding, bool activatable)
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0xB8E534", Offset = "0xB8E534", VA = "0xB8E534")]
		public void SetRigidRootUnyByOverlap(RayfireRigidRoot rigidRoot)
		{
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0xB92648", Offset = "0xB92648", VA = "0xB92648")]
		public void Activate()
		{
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0xB92A98", Offset = "0xB92A98", VA = "0xB92A98")]
		private void Register()
		{
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0xB92BD0", Offset = "0xB92BD0", VA = "0xB92BD0")]
		private static int GetUnyId()
		{
			return default(int);
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0xB92C58", Offset = "0xB92C58", VA = "0xB92C58")]
		public RayfireUnyielding()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000143")]
	public class RFUny
	{
		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RayfireUnyielding scr;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 size;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 center;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Quaternion rotation;

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0xC4AD14", Offset = "0xC4AD14", VA = "0xC4AD14")]
		public RFUny()
		{
		}
	}
	[Token(Token = "0x2000144")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x57172C", Offset = "0x57172C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x57172C", Offset = "0x57172C")]
	public class RayfireVortex : MonoBehaviour
	{
		[Token(Token = "0x20004CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572B38", Offset = "0x572B38")]
		private sealed class <VortexForceCor>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireVortex <>4__this;

			[Token(Token = "0x170003BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600221C")]
				[Address(RVA = "0x870ED0", Offset = "0x870ED0", VA = "0x870ED0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600221E")]
				[Address(RVA = "0x870F18", Offset = "0x870F18", VA = "0x870F18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002219")]
			[Address(RVA = "0x870D8C", Offset = "0x870D8C", VA = "0x870D8C")]
			[DebuggerHidden]
			public <VortexForceCor>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x600221A")]
			[Address(RVA = "0x870DB8", Offset = "0x870DB8", VA = "0x870DB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600221B")]
			[Address(RVA = "0x870DBC", Offset = "0x870DBC", VA = "0x870DBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600221D")]
			[Address(RVA = "0x870ED8", Offset = "0x870ED8", VA = "0x870ED8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572B48", Offset = "0x572B48")]
		private sealed class <SetCollidersCor>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireVortex <>4__this;

			[Token(Token = "0x170003BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002222")]
				[Address(RVA = "0x870D3C", Offset = "0x870D3C", VA = "0x870D3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002224")]
				[Address(RVA = "0x870D84", Offset = "0x870D84", VA = "0x870D84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600221F")]
			[Address(RVA = "0x870BDC", Offset = "0x870BDC", VA = "0x870BDC")]
			[DebuggerHidden]
			public <SetCollidersCor>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6002220")]
			[Address(RVA = "0x870C08", Offset = "0x870C08", VA = "0x870C08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002221")]
			[Address(RVA = "0x870C0C", Offset = "0x870C0C", VA = "0x870C0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002223")]
			[Address(RVA = "0x870D44", Offset = "0x870D44", VA = "0x870D44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57CBBC", Offset = "0x57CBBC")]
		[HideInInspector]
		public Transform transForm;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Collider[] colliders;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public List<Rigidbody> rigidbodies;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<Rigidbody> myRigidbodies;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 bot;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 top;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 normal;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 direction;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 rbPos;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 linePoint;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 vectorUp;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 centerOutVector;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 vectorCenter;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 perpend;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 vectorSwirl;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 forceVector;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float distancePerpend;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float distanceBottom;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float upRateNow;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float localRadius;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float upRateOwn;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float centerRateOwn;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float centerRateNow;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float upRateDif;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float centerRateDif;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float maxRadius;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float axisDistance;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Plane bottomPlane;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float torqueVal;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57CC38", Offset = "0x57CC38")]
		public Vector3 topAnchor;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public Vector3 bottomAnchor;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57CC70", Offset = "0x57CC70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57CC70", Offset = "0x57CC70")]
		public float topRadius;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57CCCC", Offset = "0x57CCCC")]
		public float bottomRadius;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57CCE8", Offset = "0x57CCE8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57CCE8", Offset = "0x57CCE8")]
		public float eye;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57CD44", Offset = "0x57CD44")]
		public bool forceByMass;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57CD7C", Offset = "0x57CD7C")]
		public float stiffness;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57CD94", Offset = "0x57CD94")]
		public float swirlStrength;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57CDB4", Offset = "0x57CDB4")]
		public bool enableTorque;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57CDEC", Offset = "0x57CDEC")]
		public float torqueStrength;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57CE04", Offset = "0x57CE04")]
		public float torqueVariation;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57CE1C", Offset = "0x57CE1C")]
		public bool enableHeightBias;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57CE54", Offset = "0x57CE54")]
		public float biasSpeed;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57CE6C", Offset = "0x57CE6C")]
		public float biasSpread;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57CE84", Offset = "0x57CE84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57CE84", Offset = "0x57CE84")]
		public int seed;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57CEDC", Offset = "0x57CEDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57CEDC", Offset = "0x57CEDC")]
		public int circles;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[HideInInspector]
		public bool showGizmo;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
		[HideInInspector]
		public bool topHandle;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57CF50", Offset = "0x57CF50")]
		[HideInInspector]
		public int mask;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[HideInInspector]
		public string tagFilter;

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0xB92C7C", Offset = "0xB92C7C", VA = "0xB92C7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0xB92C80", Offset = "0xB92C80", VA = "0xB92C80")]
		private void DefineComponents()
		{
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0xB92CF8", Offset = "0xB92CF8", VA = "0xB92CF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58FFD0", Offset = "0x58FFD0")]
		private IEnumerator VortexForceCor()
		{
			return null;
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0xB92D64", Offset = "0xB92D64", VA = "0xB92D64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x590030", Offset = "0x590030")]
		private IEnumerator SetCollidersCor()
		{
			return null;
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0xB92DD0", Offset = "0xB92DD0", VA = "0xB92DD0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0xB92E14", Offset = "0xB92E14", VA = "0xB92E14")]
		private void SetColliders()
		{
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0xB92F14", Offset = "0xB92F14", VA = "0xB92F14")]
		private void SetColliderGizmo()
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0xB93018", Offset = "0xB93018", VA = "0xB93018")]
		private void SetRigidBodies()
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0xB93210", Offset = "0xB93210", VA = "0xB93210")]
		private void SetForce()
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xB9372C", Offset = "0xB9372C", VA = "0xB9372C")]
		private Vector3 GetClosetLinePoint(Vector3 worldPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xB9385C", Offset = "0xB9385C", VA = "0xB9385C")]
		private Vector3 GetParallelLinePoint(Vector3 worldPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0xB938B0", Offset = "0xB938B0", VA = "0xB938B0")]
		public static bool LinePlaneIntersection(out Vector3 intersection, Vector3 linePoint, Vector3 lineVec, Vector3 planeNormal, Vector3 planePoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0xB939B0", Offset = "0xB939B0", VA = "0xB939B0")]
		private static Vector3 SetVectorLength(Vector3 vector, float size)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0xB93780", Offset = "0xB93780", VA = "0xB93780")]
		private float HeightBias(float upRateOwnLoc, float centerRateOwnLoc)
		{
			return default(float);
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0xB939E0", Offset = "0xB939E0", VA = "0xB939E0")]
		public RayfireVortex()
		{
		}
	}
	[Token(Token = "0x2000145")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x57178C", Offset = "0x57178C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x57178C", Offset = "0x57178C")]
	public class RayfireWind : MonoBehaviour
	{
		[Token(Token = "0x20004CC")]
		public enum DirType
		{
			[Token(Token = "0x4002C47")]
			Directional,
			[Token(Token = "0x4002C48")]
			Point
		}

		[Token(Token = "0x20004CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572B58", Offset = "0x572B58")]
		private sealed class <WindForceCor>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireWind <>4__this;

			[Token(Token = "0x170003BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002228")]
				[Address(RVA = "0x871018", Offset = "0x871018", VA = "0x871018", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600222A")]
				[Address(RVA = "0x871060", Offset = "0x871060", VA = "0x871060", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002225")]
			[Address(RVA = "0x870F20", Offset = "0x870F20", VA = "0x870F20")]
			[DebuggerHidden]
			public <WindForceCor>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002226")]
			[Address(RVA = "0x870F4C", Offset = "0x870F4C", VA = "0x870F4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002227")]
			[Address(RVA = "0x870F50", Offset = "0x870F50", VA = "0x870F50", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002229")]
			[Address(RVA = "0x871020", Offset = "0x871020", VA = "0x871020", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform transForm;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider[] colliders;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 halfExtents;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 center;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float offset;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57CFAC", Offset = "0x57CFAC")]
		public Vector3 gizmoSize;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public bool showGizmo;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57CFF4", Offset = "0x57CFF4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57CFF4", Offset = "0x57CFF4")]
		public float globalScale;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57D04C", Offset = "0x57D04C")]
		public float lengthScale;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57D068", Offset = "0x57D068")]
		public float widthScale;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57D084", Offset = "0x57D084")]
		public float speed;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		public bool showNoise;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57D0B4", Offset = "0x57D0B4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57D0B4", Offset = "0x57D0B4")]
		public float minimum;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57D108", Offset = "0x57D108")]
		public float maximum;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57D120", Offset = "0x57D120")]
		public float torque;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool forceByMass;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57D138", Offset = "0x57D138")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57D138", Offset = "0x57D138")]
		public float divergency;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57D190", Offset = "0x57D190")]
		public float turbulence;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57D1AC", Offset = "0x57D1AC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57D1AC", Offset = "0x57D1AC")]
		public float previewDensity;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57D200", Offset = "0x57D200")]
		public float previewSize;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57D21C", Offset = "0x57D21C")]
		[HideInInspector]
		public List<Rigidbody> rigidbodies;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public int mask;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public string tagFilter;

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0xB93B08", Offset = "0xB93B08", VA = "0xB93B08")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xB93B0C", Offset = "0xB93B0C", VA = "0xB93B0C")]
		private void DefineComponents()
		{
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xB93B84", Offset = "0xB93B84", VA = "0xB93B84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x590090", Offset = "0x590090")]
		private IEnumerator WindForceCor()
		{
			return null;
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0xB93BF0", Offset = "0xB93BF0", VA = "0xB93BF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0xB93C1C", Offset = "0xB93C1C", VA = "0xB93C1C")]
		private void Reset()
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xB93C28", Offset = "0xB93C28", VA = "0xB93C28")]
		private void SetColliders()
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xB93DF0", Offset = "0xB93DF0", VA = "0xB93DF0")]
		private void SetColliderGizmo()
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xB93E50", Offset = "0xB93E50", VA = "0xB93E50")]
		private void SetRigidBodies()
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xB94048", Offset = "0xB94048", VA = "0xB94048")]
		private void SetForce()
		{
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0xB9435C", Offset = "0xB9435C", VA = "0xB9435C")]
		private Vector3 GetVectorGlobal(Vector3 worldPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0xB94390", Offset = "0xB94390", VA = "0xB94390")]
		public Vector3 GetVectorLocal(Vector3 localPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0xB94310", Offset = "0xB94310", VA = "0xB94310")]
		private float PerlinFixedGlobal(Vector3 worldPos)
		{
			return default(float);
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0xB944D0", Offset = "0xB944D0", VA = "0xB944D0")]
		public float PerlinFixedLocal(Vector3 localPos)
		{
			return default(float);
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0xB94510", Offset = "0xB94510", VA = "0xB94510")]
		public float PerlinCustomGlobal(Vector3 worldPos, float SizeX, float SizeZ, float WidthScale, float LengthScale, float GlobalScale, float Offset)
		{
			return default(float);
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0xB9449C", Offset = "0xB9449C", VA = "0xB9449C")]
		public float PerlinCustomLocal(Vector3 localPos, float SizeX, float SizeZ, float WidthScale, float LengthScale, float GlobalScale, float Offset)
		{
			return default(float);
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0xB94344", Offset = "0xB94344", VA = "0xB94344")]
		public float WindStrength(float val)
		{
			return default(float);
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0xB942C8", Offset = "0xB942C8", VA = "0xB942C8")]
		private void SetSpeed()
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0xB94590", Offset = "0xB94590", VA = "0xB94590")]
		public RayfireWind()
		{
		}
	}
}
namespace GeNa
{
	[Token(Token = "0x2000146")]
	public static class Constants
	{
		[Token(Token = "0x20004CE")]
		public enum SpawnerType
		{
			[Token(Token = "0x4002C4D")]
			Regular,
			[Token(Token = "0x4002C4E")]
			Structured
		}

		[Token(Token = "0x20004CF")]
		public enum ChildSpawnMode
		{
			[Token(Token = "0x4002C50")]
			All,
			[Token(Token = "0x4002C51")]
			Random
		}

		[Token(Token = "0x20004D0")]
		public enum SpawnMode
		{
			[Token(Token = "0x4002C53")]
			Single,
			[Token(Token = "0x4002C54")]
			Paint
		}

		[Token(Token = "0x20004D1")]
		public enum SpawnRangeShape
		{
			[Token(Token = "0x4002C56")]
			Circle,
			[Token(Token = "0x4002C57")]
			Square
		}

		[Token(Token = "0x20004D2")]
		public enum LocationAlgorithm
		{
			[Token(Token = "0x4002C59")]
			Centered,
			[Token(Token = "0x4002C5A")]
			Every,
			[Token(Token = "0x4002C5B")]
			LastSpawn,
			[Token(Token = "0x4002C5C")]
			Organic
		}

		[Token(Token = "0x20004D3")]
		public enum RotationAlgorithm
		{
			[Token(Token = "0x4002C5E")]
			Ranged,
			[Token(Token = "0x4002C5F")]
			Fixed,
			[Token(Token = "0x4002C60")]
			LastSpawnCenter,
			[Token(Token = "0x4002C61")]
			LastSpawnClosest
		}

		[Token(Token = "0x20004D4")]
		public enum VirginCheckType
		{
			[Token(Token = "0x4002C63")]
			None,
			[Token(Token = "0x4002C64")]
			Point,
			[Token(Token = "0x4002C65")]
			Bounds
		}

		[Token(Token = "0x20004D5")]
		public enum CriteriaRangeType
		{
			[Token(Token = "0x4002C67")]
			None,
			[Token(Token = "0x4002C68")]
			Range,
			[Token(Token = "0x4002C69")]
			MinMax,
			[Token(Token = "0x4002C6A")]
			Mixed
		}

		[Token(Token = "0x20004D6")]
		public enum ResourceType
		{
			[Token(Token = "0x4002C6C")]
			Prefab,
			[Token(Token = "0x4002C6D")]
			TerrainTree,
			[Token(Token = "0x4002C6E")]
			TerrainGrass,
			[Token(Token = "0x4002C6F")]
			TerrainTexture
		}

		[Token(Token = "0x20004D7")]
		public enum MaskType
		{
			[Token(Token = "0x4002C71")]
			Perlin,
			[Token(Token = "0x4002C72")]
			Billow,
			[Token(Token = "0x4002C73")]
			Ridged,
			[Token(Token = "0x4002C74")]
			Image
		}

		[Token(Token = "0x20004D8")]
		public enum AVSVegetationType
		{
			[Token(Token = "0x4002C76")]
			Grass,
			[Token(Token = "0x4002C77")]
			Plant,
			[Token(Token = "0x4002C78")]
			Tree,
			[Token(Token = "0x4002C79")]
			Objects,
			[Token(Token = "0x4002C7A")]
			LargeObjects
		}

		[Token(Token = "0x20004D9")]
		public enum ResourceStatic
		{
			[Token(Token = "0x4002C7C")]
			Static,
			[Token(Token = "0x4002C7D")]
			Dynamic
		}

		[Token(Token = "0x4000BD3")]
		public const float MinimimProbeGroupDistance = 100f;

		[Token(Token = "0x4000BD4")]
		public const float MinimimProbeDistance = 15f;

		[Token(Token = "0x4000BD5")]
		public const float MaximumOptimisationSize = 10f;

		[Token(Token = "0x4000BD6")]
		public const float MIN_TX_BRUSH_SIZE_IN_PIX = 1f;
	}
	[Token(Token = "0x2000147")]
	public static class Defaults
	{
		[Token(Token = "0x4000BD7")]
		public const string UNDO_STEPS_KEY = "GeNa_UndoSteps";

		[Token(Token = "0x4000BD8")]
		public const int DEF_UNDO_STEPS = 50;

		[Token(Token = "0x4000BD9")]
		public const string UNDO_PURGE_TIME_KEY = "GeNa_UndoPurgeTime";

		[Token(Token = "0x4000BDA")]
		public const int DEF_UNDO_PURGE_TIME = 60;

		[Token(Token = "0x4000BDB")]
		public const string UNDO_GROUPING_TIME_KEY = "GeNa_UndoGroupingTime";

		[Token(Token = "0x4000BDC")]
		public const int DEF_UNDO_GROUPING_TIME = 3;

		[Token(Token = "0x4000BDD")]
		public const string UNDO_SHOW_EXPIRED_MSGS_KEY = "GeNa_UndoShowExpiredMessages";

		[Token(Token = "0x4000BDE")]
		public const string DEF_SPAWN_TO_TARGET_KEY = "GeNa_DefaultSpawnToTarget";
	}
	[Token(Token = "0x2000148")]
	public class DisableColliderOnAwake : MonoBehaviour
	{
		[Token(Token = "0x60006CD")]
		[Address(RVA = "0xA1DC44", Offset = "0xA1DC44", VA = "0xA1DC44")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xA1DCFC", Offset = "0xA1DCFC", VA = "0xA1DCFC")]
		public DisableColliderOnAwake()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000149")]
	internal struct ExtensionInstance
	{
		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Resource Parent;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsStateless;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int Index;

		[NonSerialized]
		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IGeNaExtension Instance;

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x8AFA48", Offset = "0x8AFA48", VA = "0x8AFA48")]
		public ExtensionInstance(Resource parentRes, bool isStateless, int index, IGeNaExtension instance)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014A")]
	public class Fractal
	{
		[Token(Token = "0x20004DA")]
		public enum GeneratedFractalType
		{
			[Token(Token = "0x4002C7F")]
			Perlin,
			[Token(Token = "0x4002C80")]
			Billow,
			[Token(Token = "0x4002C81")]
			RidgeMulti
		}

		[Token(Token = "0x20004DB")]
		private delegate float GetCalcValue(float x, float z);

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float m_seed;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int m_octaves;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_persistence;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_frequency;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_lacunarity;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_XOffset;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_ZOffset;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_YOffset;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GeneratedFractalType m_fractalType;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] m_spectralWeights;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GetCalcValue m_noiseCalculator;

		[Token(Token = "0x17000032")]
		public float Seed
		{
			[Token(Token = "0x60006D0")]
			[Address(RVA = "0x8B70F4", Offset = "0x8B70F4", VA = "0x8B70F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60006D1")]
			[Address(RVA = "0x8B70FC", Offset = "0x8B70FC", VA = "0x8B70FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000033")]
		public int Octaves
		{
			[Token(Token = "0x60006D2")]
			[Address(RVA = "0x8B7104", Offset = "0x8B7104", VA = "0x8B7104")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60006D3")]
			[Address(RVA = "0x8B710C", Offset = "0x8B710C", VA = "0x8B710C")]
			set
			{
			}
		}

		[Token(Token = "0x17000034")]
		public float Persistence
		{
			[Token(Token = "0x60006D4")]
			[Address(RVA = "0x8B7114", Offset = "0x8B7114", VA = "0x8B7114")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60006D5")]
			[Address(RVA = "0x8B711C", Offset = "0x8B711C", VA = "0x8B711C")]
			set
			{
			}
		}

		[Token(Token = "0x17000035")]
		public float Frequency
		{
			[Token(Token = "0x60006D6")]
			[Address(RVA = "0x8B7124", Offset = "0x8B7124", VA = "0x8B7124")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60006D7")]
			[Address(RVA = "0x8B712C", Offset = "0x8B712C", VA = "0x8B712C")]
			set
			{
			}
		}

		[Token(Token = "0x17000036")]
		public float Lacunarity
		{
			[Token(Token = "0x60006D8")]
			[Address(RVA = "0x8B7134", Offset = "0x8B7134", VA = "0x8B7134")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60006D9")]
			[Address(RVA = "0x8B713C", Offset = "0x8B713C", VA = "0x8B713C")]
			set
			{
			}
		}

		[Token(Token = "0x17000037")]
		public float XOffset
		{
			[Token(Token = "0x60006DA")]
			[Address(RVA = "0x8B7144", Offset = "0x8B7144", VA = "0x8B7144")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60006DB")]
			[Address(RVA = "0x8B714C", Offset = "0x8B714C", VA = "0x8B714C")]
			set
			{
			}
		}

		[Token(Token = "0x17000038")]
		public float ZOffset
		{
			[Token(Token = "0x60006DC")]
			[Address(RVA = "0x8B7154", Offset = "0x8B7154", VA = "0x8B7154")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60006DD")]
			[Address(RVA = "0x8B715C", Offset = "0x8B715C", VA = "0x8B715C")]
			set
			{
			}
		}

		[Token(Token = "0x17000039")]
		public float YOffset
		{
			[Token(Token = "0x60006DE")]
			[Address(RVA = "0x8B7164", Offset = "0x8B7164", VA = "0x8B7164")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60006DF")]
			[Address(RVA = "0x8B716C", Offset = "0x8B716C", VA = "0x8B716C")]
			set
			{
			}
		}

		[Token(Token = "0x1700003A")]
		public GeneratedFractalType FractalType
		{
			[Token(Token = "0x60006E0")]
			[Address(RVA = "0x8B7174", Offset = "0x8B7174", VA = "0x8B7174")]
			get
			{
				return default(GeneratedFractalType);
			}
			[Token(Token = "0x60006E1")]
			[Address(RVA = "0x8B717C", Offset = "0x8B717C", VA = "0x8B717C")]
			set
			{
			}
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x8B72FC", Offset = "0x8B72FC", VA = "0x8B72FC")]
		public Fractal()
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x8B7380", Offset = "0x8B7380", VA = "0x8B7380")]
		public Fractal(Fractal srcFractal)
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x8B7440", Offset = "0x8B7440", VA = "0x8B7440")]
		public Fractal(float frequency, float lacunarity, int octaves, float persistance, float seed, GeneratedFractalType type)
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x8B7504", Offset = "0x8B7504", VA = "0x8B7504")]
		public void SetDefaults()
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x8B7638", Offset = "0x8B7638", VA = "0x8B7638")]
		public float GetValue(float x, float z)
		{
			return default(float);
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x8B7654", Offset = "0x8B7654", VA = "0x8B7654")]
		public double GetValue(double x, double z)
		{
			return default(double);
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x8B7684", Offset = "0x8B7684", VA = "0x8B7684")]
		public float GetNormalisedValue(float x, float z)
		{
			return default(float);
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x8B76BC", Offset = "0x8B76BC", VA = "0x8B76BC")]
		public double GetNormalisedValue(double x, double z)
		{
			return default(double);
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x8B76DC", Offset = "0x8B76DC", VA = "0x8B76DC")]
		public float GetValue_Perlin(float x, float z)
		{
			return default(float);
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x8B77EC", Offset = "0x8B77EC", VA = "0x8B77EC")]
		public float GetValue_Billow(float x, float z)
		{
			return default(float);
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x8B7914", Offset = "0x8B7914", VA = "0x8B7914")]
		public float GetValue_RidgedMulti(float x, float z)
		{
			return default(float);
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x8B7270", Offset = "0x8B7270", VA = "0x8B7270")]
		private void CalcSpectralWeights()
		{
		}
	}
	[Token(Token = "0x200014B")]
	public struct GTransform
	{
		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Postition;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 Rotation;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Scale;

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x8BA044", Offset = "0x8BA044", VA = "0x8BA044")]
		public GTransform(Vector3 pos, Vector3 rot, Vector3 scale)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014C")]
	public struct SpawnDetails
	{
		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform Parent;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 Position;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 LocalPosition;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 Rotation;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 LocalRotation;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 Scale;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 LocalScale;

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x8D1340", Offset = "0x8D1340", VA = "0x8D1340")]
		public SpawnDetails(GameObject parent, Vector3 position, Vector3 localPosition, Vector3 rotation, Vector3 localRotation, Vector3 scale, Vector3 localScale)
		{
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x8D1450", Offset = "0x8D1450", VA = "0x8D1450", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200014D")]
	public class GenaDefaults : ScriptableObject
	{
		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57D308", Offset = "0x57D308")]
		public KeyCode m_keyDeleteSpawnedResources;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57D340", Offset = "0x57D340")]
		public KeyCode m_keyLeft;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode m_keyRight;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public KeyCode m_keyForward;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KeyCode m_keyBackward;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57D378", Offset = "0x57D378")]
		public bool m_autoLightProbe;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_minProbeGroupDistance;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_minProbeDistance;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57D3B0", Offset = "0x57D3B0")]
		public bool m_autoOptimize;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_maxOptimizeSize;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57D3E8", Offset = "0x57D3E8")]
		public bool m_showTooltips;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool m_showDetailedHelp;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<KeyCode, string> m_keyCodeMap;

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0xBF8ACC", Offset = "0xBF8ACC", VA = "0xBF8ACC")]
		public Event KeyDeleteEvent(bool shift = false, bool control = false)
		{
			return null;
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0xBF8CB8", Offset = "0xBF8CB8", VA = "0xBF8CB8")]
		public Event KeyLeftEvent(bool shift = false, bool control = false)
		{
			return null;
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0xBF8D60", Offset = "0xBF8D60", VA = "0xBF8D60")]
		public Event KeyRightEvent(bool shift = false, bool control = false)
		{
			return null;
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0xBF8E08", Offset = "0xBF8E08", VA = "0xBF8E08")]
		public Event KeyForwardEvent(bool shift = false, bool control = false)
		{
			return null;
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0xBF8EB0", Offset = "0xBF8EB0", VA = "0xBF8EB0")]
		public Event KeyBackwardEvent(bool shift = false, bool control = false)
		{
			return null;
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0xBF8B74", Offset = "0xBF8B74", VA = "0xBF8B74")]
		private Event EventMapper(KeyCode keyCode, bool shift = false, bool control = false)
		{
			return null;
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0xBF8F58", Offset = "0xBF8F58", VA = "0xBF8F58")]
		public GenaDefaults()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class GenaGrowthScript : MonoBehaviour
	{
		[Token(Token = "0x20004DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572B68", Offset = "0x572B68")]
		private sealed class <Grow>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GenaGrowthScript <>4__this;

			[Token(Token = "0x4002C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <deltaScale>5__2;

			[Token(Token = "0x4002C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <finishTime>5__3;

			[Token(Token = "0x170003C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002232")]
				[Address(RVA = "0x921034", Offset = "0x921034", VA = "0x921034", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002234")]
				[Address(RVA = "0x92107C", Offset = "0x92107C", VA = "0x92107C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600222F")]
			[Address(RVA = "0x920E38", Offset = "0x920E38", VA = "0x920E38")]
			[DebuggerHidden]
			public <Grow>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002230")]
			[Address(RVA = "0x920E64", Offset = "0x920E64", VA = "0x920E64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002231")]
			[Address(RVA = "0x920E68", Offset = "0x920E68", VA = "0x920E68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002233")]
			[Address(RVA = "0x92103C", Offset = "0x92103C", VA = "0x92103C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57D420", Offset = "0x57D420")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57D420", Offset = "0x57D420")]
		public float m_startScale;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57D478", Offset = "0x57D478")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57D478", Offset = "0x57D478")]
		public float m_endScale;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57D4D0", Offset = "0x57D4D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57D4D0", Offset = "0x57D4D0")]
		public float m_scaleVariance;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57D524", Offset = "0x57D524")]
		public float m_growthTime;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57D55C", Offset = "0x57D55C")]
		public float m_lifeTime;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57D594", Offset = "0x57D594")]
		public bool m_disableScriptAtEndOfLife;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57D5CC", Offset = "0x57D5CC")]
		public bool m_destroyObjectAtEndOfLife;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_actualEndScale;

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0xBF976C", Offset = "0xBF976C", VA = "0xBF976C")]
		private void Start()
		{
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0xBF9778", Offset = "0xBF9778", VA = "0xBF9778", Slot = "4")]
		public virtual void Initialise()
		{
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0xBF97C8", Offset = "0xBF97C8", VA = "0xBF97C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5900F0", Offset = "0x5900F0")]
		private IEnumerator Grow()
		{
			return null;
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0xBF9834", Offset = "0xBF9834", VA = "0xBF9834", Slot = "5")]
		public virtual void Die()
		{
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0xBF98B0", Offset = "0xBF98B0", VA = "0xBF98B0")]
		public GenaGrowthScript()
		{
		}
	}
	[Token(Token = "0x200014F")]
	public class Gravity : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20004DD")]
		public class GravityInstance
		{
			[Token(Token = "0x4002C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Resource m_resource;

			[Token(Token = "0x4002C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject m_instance;

			[Token(Token = "0x4002C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 m_startPosition;

			[Token(Token = "0x4002C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 m_endPosition;

			[Token(Token = "0x4002C8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 m_startRotation;

			[Token(Token = "0x4002C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Vector3 m_endRotation;

			[Token(Token = "0x6002235")]
			[Address(RVA = "0x921084", Offset = "0x921084", VA = "0x921084")]
			public GravityInstance()
			{
			}
		}

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_haveGravity;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GravityInstance> m_instances;

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0xE48410", Offset = "0xE48410", VA = "0xE48410")]
		public void UpdateInstances()
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0xE48624", Offset = "0xE48624", VA = "0xE48624")]
		public void AddInstances(List<GravityInstance> instanceList)
		{
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0xE4868C", Offset = "0xE4868C", VA = "0xE4868C")]
		public void UpdateOriginalsToStart()
		{
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0xE48888", Offset = "0xE48888", VA = "0xE48888")]
		public void UpdateOriginalsToEnd()
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0xE48A84", Offset = "0xE48A84", VA = "0xE48A84")]
		public void FinaliseGravity(Spawner spawner)
		{
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0xE48EE0", Offset = "0xE48EE0", VA = "0xE48EE0")]
		public Gravity()
		{
		}
	}
	[Token(Token = "0x2000150")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x5717EC", Offset = "0x5717EC")]
	public class Heightmap
	{
		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected int m_widthX;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected int m_depthZ;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected float[,] m_heights;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool m_isPowerOf2;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected float m_widthInvX;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float m_depthInvZ;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected float m_statMinVal;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected float m_statMaxVal;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected double m_statSumVals;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool m_isDirty;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected byte[] m_metaData;

		[Token(Token = "0x1700003B")]
		public float Item
		{
			[Token(Token = "0x6000718")]
			[Address(RVA = "0xA628E8", Offset = "0xA628E8", VA = "0xA628E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000719")]
			[Address(RVA = "0xA62940", Offset = "0xA62940", VA = "0xA62940")]
			set
			{
			}
		}

		[Token(Token = "0x1700003C")]
		public float Item
		{
			[Token(Token = "0x600071A")]
			[Address(RVA = "0xA629A0", Offset = "0xA629A0", VA = "0xA629A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600071B")]
			[Address(RVA = "0xA629A4", Offset = "0xA629A4", VA = "0xA629A4")]
			set
			{
			}
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0xA61C50", Offset = "0xA61C50", VA = "0xA61C50")]
		public Heightmap()
		{
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0xA61D1C", Offset = "0xA61D1C", VA = "0xA61D1C")]
		public Heightmap(int width, int depth)
		{
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0xA61E38", Offset = "0xA61E38", VA = "0xA61E38")]
		public Heightmap(float[,] source)
		{
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0xA62018", Offset = "0xA62018", VA = "0xA62018")]
		public Heightmap(float[,,] source, int slice)
		{
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0xA62210", Offset = "0xA62210", VA = "0xA62210")]
		public Heightmap(int[,] source)
		{
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0xA623F4", Offset = "0xA623F4", VA = "0xA623F4")]
		public Heightmap(Heightmap source)
		{
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0xA625EC", Offset = "0xA625EC", VA = "0xA625EC")]
		public int Width()
		{
			return default(int);
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0xA625F4", Offset = "0xA625F4", VA = "0xA625F4")]
		public int Depth()
		{
			return default(int);
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0xA625FC", Offset = "0xA625FC", VA = "0xA625FC")]
		public float MinVal()
		{
			return default(float);
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0xA62604", Offset = "0xA62604", VA = "0xA62604")]
		public float MaxVal()
		{
			return default(float);
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0xA6260C", Offset = "0xA6260C", VA = "0xA6260C")]
		public double SumVal()
		{
			return default(double);
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0xA62614", Offset = "0xA62614", VA = "0xA62614")]
		public byte[] GetMetaData()
		{
			return null;
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0xA6261C", Offset = "0xA6261C", VA = "0xA6261C")]
		public bool IsDirty()
		{
			return default(bool);
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0xA62624", Offset = "0xA62624", VA = "0xA62624")]
		public void SetDirty(bool dirty = true)
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0xA62630", Offset = "0xA62630", VA = "0xA62630")]
		public void ClearDirty()
		{
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0xA62638", Offset = "0xA62638", VA = "0xA62638")]
		public void SetMetaData(byte[] metadata)
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0xA626C4", Offset = "0xA626C4", VA = "0xA626C4")]
		public float[,] Heights()
		{
			return null;
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0xA626CC", Offset = "0xA626CC", VA = "0xA626CC")]
		public float GetSafeHeight(int x, int z)
		{
			return default(float);
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0xA62748", Offset = "0xA62748", VA = "0xA62748")]
		public void SetSafeHeight(int x, int z, float height)
		{
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0xA627CC", Offset = "0xA627CC", VA = "0xA627CC")]
		protected float GetInterpolatedHeight(float x, float z)
		{
			return default(float);
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0xA62A24", Offset = "0xA62A24", VA = "0xA62A24")]
		public void SetHeight(float height)
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xA62AE4", Offset = "0xA62AE4", VA = "0xA62AE4")]
		public void GetHeightRange(ref float minHeight, ref float maxHeight)
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xA62BB0", Offset = "0xA62BB0", VA = "0xA62BB0")]
		public float GetSlope(int x, int z)
		{
			return default(float);
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0xA62CD8", Offset = "0xA62CD8", VA = "0xA62CD8")]
		public float GetSlope(float x, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0xA62E18", Offset = "0xA62E18", VA = "0xA62E18")]
		public float GetSlope_a(float x, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0xA62F2C", Offset = "0xA62F2C", VA = "0xA62F2C")]
		public float GetBaseLevel()
		{
			return default(float);
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0xA63040", Offset = "0xA63040", VA = "0xA63040")]
		public bool HasData()
		{
			return default(bool);
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0xA61CB4", Offset = "0xA61CB4", VA = "0xA61CB4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0xA630C0", Offset = "0xA630C0", VA = "0xA630C0")]
		public void UpdateStats()
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0xA63190", Offset = "0xA63190", VA = "0xA63190")]
		public void Smooth(int iterations)
		{
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0xA6330C", Offset = "0xA6330C", VA = "0xA6330C")]
		public Heightmap GetSlopeMap()
		{
			return null;
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0xA633D8", Offset = "0xA633D8", VA = "0xA633D8")]
		public void Invert()
		{
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0xA6347C", Offset = "0xA6347C", VA = "0xA6347C")]
		public void Flip()
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0xA6361C", Offset = "0xA6361C", VA = "0xA6361C")]
		public void Normalise()
		{
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0xA61E28", Offset = "0xA61E28", VA = "0xA61E28")]
		public static bool Math_IsPowerOf2(int value)
		{
			return default(bool);
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0xA62AD0", Offset = "0xA62AD0", VA = "0xA62AD0")]
		public static float Math_Clamp(float min, float max, float value)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000151")]
	public interface IGeNaExtension
	{
		[Token(Token = "0x1700003D")]
		string Name
		{
			[Token(Token = "0x600072C")]
			get;
		}

		[Token(Token = "0x1700003E")]
		GameObject gameObject
		{
			[Token(Token = "0x600072D")]
			get;
		}

		[Token(Token = "0x1700003F")]
		bool AffectsHeights
		{
			[Token(Token = "0x600072E")]
			get;
		}

		[Token(Token = "0x17000040")]
		bool AffectsTextures
		{
			[Token(Token = "0x600072F")]
			get;
		}

		[Token(Token = "0x17000041")]
		bool AffectsDetails
		{
			[Token(Token = "0x6000730")]
			get;
		}

		[Token(Token = "0x17000042")]
		bool AffectsTrees
		{
			[Token(Token = "0x6000731")]
			get;
		}

		[Token(Token = "0x6000732")]
		void Init(Spawner spawner);

		[Token(Token = "0x6000733")]
		void Spawn(Spawner spawner, Resource resource, SpawnDetails spawnDetails);

		[Token(Token = "0x6000734")]
		void Undo();
	}
	[Token(Token = "0x2000152")]
	public interface INamedType
	{
		[Token(Token = "0x17000043")]
		string Name
		{
			[Token(Token = "0x6000735")]
			get;
		}
	}
	[Token(Token = "0x2000153")]
	public class NoiseGenerator
	{
		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static byte[] perm;

		[Token(Token = "0x6000736")]
		[Address(RVA = "0xF896A4", Offset = "0xF896A4", VA = "0xF896A4")]
		public static float Generate(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0xF89824", Offset = "0xF89824", VA = "0xF89824")]
		public static float Generate(float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0xF89BFC", Offset = "0xF89BFC", VA = "0xF89BFC")]
		public static float Generate(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0xF897EC", Offset = "0xF897EC", VA = "0xF897EC")]
		private static int FastFloor(float x)
		{
			return default(int);
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0xF8A2F0", Offset = "0xF8A2F0", VA = "0xF8A2F0")]
		private static int Mod(int x, int m)
		{
			return default(int);
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0xF89800", Offset = "0xF89800", VA = "0xF89800")]
		private static float Grad(int hash, float x)
		{
			return default(float);
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0xF89BC8", Offset = "0xF89BC8", VA = "0xF89BC8")]
		private static float Grad(int hash, float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0xF8A304", Offset = "0xF8A304", VA = "0xF8A304")]
		private static float Grad(int hash, float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xF8A350", Offset = "0xF8A350", VA = "0xF8A350")]
		private static float Grad(int hash, float x, float y, float z, float t)
		{
			return default(float);
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xF8A39C", Offset = "0xF8A39C", VA = "0xF8A39C")]
		public static float GetNormalisedValue(float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xF8A428", Offset = "0xF8A428", VA = "0xF8A428")]
		public NoiseGenerator()
		{
		}
	}
	[Token(Token = "0x2000154")]
	[AttributeAttribute(Name = "XmlRootAttribute", RVA = "0x571824", Offset = "0x571824")]
	public class Preferences
	{
		[Token(Token = "0x4000C1B")]
		private const string ID = "GeNa";

		[Token(Token = "0x4000C1C")]
		private const string PREF_FILE = "Preferences-GeNa";

		[Token(Token = "0x4000C1D")]
		private const string PREF_EXTENSION = ".txt";

		[Token(Token = "0x4000C1E")]
		private const string GENA_FOLDER_NAME = "GeNa";

		[Token(Token = "0x4000C1F")]
		private const string GENA_RES_INTERNAL_PATH = "Scripts/Resources";

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool ms_dirty;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Preferences m_instance;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_undoSteps;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int m_undoPurgeTime;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_undoGroupingTime;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool m_undoExpiredMessages;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool m_defSpawnToTarget;

		[Token(Token = "0x17000044")]
		private static Preferences Instance
		{
			[Token(Token = "0x6000742")]
			[Address(RVA = "0xAA4658", Offset = "0xAA4658", VA = "0xAA4658")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000045")]
		public static int UndoSteps
		{
			[Token(Token = "0x6000743")]
			[Address(RVA = "0xAA49C8", Offset = "0xAA49C8", VA = "0xAA49C8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000744")]
			[Address(RVA = "0xAA4A30", Offset = "0xAA4A30", VA = "0xAA4A30")]
			set
			{
			}
		}

		[Token(Token = "0x17000046")]
		public static int UndoPurgeTime
		{
			[Token(Token = "0x6000745")]
			[Address(RVA = "0xAA4AE8", Offset = "0xAA4AE8", VA = "0xAA4AE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000746")]
			[Address(RVA = "0xAA4B50", Offset = "0xAA4B50", VA = "0xAA4B50")]
			set
			{
			}
		}

		[Token(Token = "0x17000047")]
		public static int UndoGroupingTime
		{
			[Token(Token = "0x6000748")]
			[Address(RVA = "0xAA4DDC", Offset = "0xAA4DDC", VA = "0xAA4DDC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000749")]
			[Address(RVA = "0xAA4E44", Offset = "0xAA4E44", VA = "0xAA4E44")]
			set
			{
			}
		}

		[Token(Token = "0x17000048")]
		public static bool UndoExpiredMessages
		{
			[Token(Token = "0x600074A")]
			[Address(RVA = "0xAA4EF8", Offset = "0xAA4EF8", VA = "0xAA4EF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600074B")]
			[Address(RVA = "0xAA4F60", Offset = "0xAA4F60", VA = "0xAA4F60")]
			set
			{
			}
		}

		[Token(Token = "0x17000049")]
		public static bool DefaultSpawnToTarget
		{
			[Token(Token = "0x600074C")]
			[Address(RVA = "0xAA5004", Offset = "0xAA5004", VA = "0xAA5004")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600074D")]
			[Address(RVA = "0xAA506C", Offset = "0xAA506C", VA = "0xAA506C")]
			set
			{
			}
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0xAA4C08", Offset = "0xAA4C08", VA = "0xAA4C08")]
		public static void SetUndoPurgeTime(string timeString)
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0xAA5110", Offset = "0xAA5110", VA = "0xAA5110")]
		private Preferences()
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0xAA5134", Offset = "0xAA5134", VA = "0xAA5134")]
		protected static void SyncWithEditor()
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0xAA46FC", Offset = "0xAA46FC", VA = "0xAA46FC")]
		public static void Load()
		{
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xAA5138", Offset = "0xAA5138", VA = "0xAA5138")]
		internal static Preferences Deserialize(string xmlString)
		{
			return null;
		}
	}
	[Token(Token = "0x2000155")]
	public class ProbeManager
	{
		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Quadtree<LightProbeGroup> m_probeLocations;

		[Token(Token = "0x6000753")]
		[Address(RVA = "0xAA5288", Offset = "0xAA5288", VA = "0xAA5288")]
		public void LoadProbesFromScene()
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xAA57C8", Offset = "0xAA57C8", VA = "0xAA57C8")]
		public void AddProbe(Vector3 position, LightProbeGroup probeGroup)
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xAA5854", Offset = "0xAA5854", VA = "0xAA5854")]
		public void RemoveProbe(Vector3 position, LightProbeGroup probeGroup)
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xAA58E0", Offset = "0xAA58E0", VA = "0xAA58E0")]
		public List<LightProbeGroup> GetProbeGroups(Vector3 position, float range)
		{
			return null;
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0xAA59F0", Offset = "0xAA59F0", VA = "0xAA59F0")]
		public int Count(Vector3 position, float range)
		{
			return default(int);
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xAA5AC0", Offset = "0xAA5AC0", VA = "0xAA5AC0")]
		public int Count()
		{
			return default(int);
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xAA5B10", Offset = "0xAA5B10", VA = "0xAA5B10")]
		public void Clear()
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xAA5B20", Offset = "0xAA5B20", VA = "0xAA5B20")]
		public ProbeManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000156")]
	public class Prototype : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Spawner m_spawner;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_id;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_name;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_active;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 m_size;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 m_extents;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x57D624", Offset = "0x57D624")]
		public float m_boundsBorder;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool m_constrainWithinMaskedBounds;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool m_invertMaskedAlpha;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool m_scaleOnMaskedAlpha;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_scaleOnMaskedAlphaMin;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_scaleOnMaskedAlphaMax;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool m_successOnMaskedAlpha;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_forwardRotation;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x57D65C", Offset = "0x57D65C")]
		public List<Resource> m_resources;

		[NonSerialized]
		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Resource> m_resourceTree;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Constants.ResourceType m_resourceType;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool m_hasColliders;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		public bool m_hasMeshes;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		public bool m_hasRigidBody;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public long m_instancesSpawned;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Color m_imageFilterColour;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float m_imageFilterFuzzyMatch;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool m_displayedInEditor;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		public bool m_showAdvancedOptions;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
		[SerializeField]
		private bool m_hasLinkedSpawner;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x97")]
		public bool ShowSpawnCriteriaOverrides;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool m_anyCritOverrideApplies;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool m_overrideCritVirginCheckType;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		public bool m_overrideCritSpawnCollisionLayers;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		public bool m_overrideCritBoundsBorder;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool m_overrideCritCheckHeight;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		public bool m_overrideCritMinSpawnHeight;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
		public bool m_overrideCritMaxSpawnHeight;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9F")]
		public bool m_overrideCritHeightVariance;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool m_overrideCritMinSpawnSlope;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool m_overrideCritMaxSpawnSlope;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		public bool m_overrideCritCheckSlope;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		public bool m_overrideCritSlopeVariance;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool m_overrideCritCheckTextures;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		public bool m_overrideCritTextureStrength;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
		public bool m_overrideCritTextureVariance;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA7")]
		public bool m_overrideCritMaskInvert;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Constants.VirginCheckType m_critVirginCheckType;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public LayerMask m_critSpawnCollisionLayers;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float m_critBoundsBorder;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public Constants.CriteriaRangeType m_critCheckHeightType;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool m_critCheckHeight;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float m_critMinSpawnHeight;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float m_critMaxSpawnHeight;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float m_critHeightVariance;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Constants.CriteriaRangeType m_critCheckSlopeType;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public bool m_critCheckSlope;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_critMinSpawnSlope;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float m_critMaxSpawnSlope;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float m_critSlopeVariance;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool m_critCheckTextures;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float m_critTextureStrength;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float m_critTextureVariance;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool m_disableCritCheckMask;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		public bool m_critMaskInvert;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float m_critMinHeight;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float m_critMaxHeight;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float m_critMinSlope;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float m_critMaxSlope;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float m_critMinTextureStrength;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float m_critMaxTextureStrength;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float m_critMaskFractalMin;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float m_critMaskFractalMax;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		private bool m_hasExtensions;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private List<Resource> _allResources;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D6E4", Offset = "0x57D6E4")]
		private Vector3 <NextBoundsCenter>k__BackingField;

		[Token(Token = "0x1700004A")]
		public Spawner Spawner
		{
			[Token(Token = "0x600075B")]
			[Address(RVA = "0xC6C1DC", Offset = "0xC6C1DC", VA = "0xC6C1DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004B")]
		public int Id
		{
			[Token(Token = "0x600075C")]
			[Address(RVA = "0xC6C1E4", Offset = "0xC6C1E4", VA = "0xC6C1E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700004C")]
		public string IdCode
		{
			[Token(Token = "0x600075D")]
			[Address(RVA = "0xC6C1EC", Offset = "0xC6C1EC", VA = "0xC6C1EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		public bool HasLinkedSpawner
		{
			[Token(Token = "0x600075E")]
			[Address(RVA = "0xC6C274", Offset = "0xC6C274", VA = "0xC6C274")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700004E")]
		public bool HasExtensions
		{
			[Token(Token = "0x600075F")]
			[Address(RVA = "0xC6C27C", Offset = "0xC6C27C", VA = "0xC6C27C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700004F")]
		public float MinSpawnSlope
		{
			[Token(Token = "0x6000760")]
			[Address(RVA = "0xC6C284", Offset = "0xC6C284", VA = "0xC6C284")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000761")]
			[Address(RVA = "0xC6C28C", Offset = "0xC6C28C", VA = "0xC6C28C")]
			set
			{
			}
		}

		[Token(Token = "0x17000050")]
		public float MaxSpawnSlope
		{
			[Token(Token = "0x6000762")]
			[Address(RVA = "0xC6C2C0", Offset = "0xC6C2C0", VA = "0xC6C2C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000763")]
			[Address(RVA = "0xC6C2C8", Offset = "0xC6C2C8", VA = "0xC6C2C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000051")]
		public bool LegacyPOI
		{
			[Token(Token = "0x6000764")]
			[Address(RVA = "0xC6C2FC", Offset = "0xC6C2FC", VA = "0xC6C2FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000052")]
		public float TopRotation
		{
			[Token(Token = "0x6000765")]
			[Address(RVA = "0xC6C350", Offset = "0xC6C350", VA = "0xC6C350")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000053")]
		public Vector3 NextBoundsCenter
		{
			[Token(Token = "0x6000766")]
			[Address(RVA = "0xC6C3C8", Offset = "0xC6C3C8", VA = "0xC6C3C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590150", Offset = "0x590150")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000767")]
			[Address(RVA = "0xC6C3D8", Offset = "0xC6C3D8", VA = "0xC6C3D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590160", Offset = "0x590160")]
			private set
			{
			}
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0xC6C3E8", Offset = "0xC6C3E8", VA = "0xC6C3E8")]
		public Prototype(Spawner spawner)
		{
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0xC6C580", Offset = "0xC6C580", VA = "0xC6C580")]
		public Prototype(Spawner parentSpawner, Prototype src)
		{
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0xC6CAB8", Offset = "0xC6CAB8", VA = "0xC6CAB8")]
		public void SetSpawner(Spawner spawner)
		{
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0xC6CC28", Offset = "0xC6CC28", VA = "0xC6CC28")]
		public void Delete()
		{
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0xC6CD58", Offset = "0xC6CD58", VA = "0xC6CD58")]
		public void UpdateHasLinkedSpawner()
		{
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0xC6CE08", Offset = "0xC6CE08", VA = "0xC6CE08")]
		public void UpdateHasExtensions()
		{
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0xC6CEB8", Offset = "0xC6CEB8", VA = "0xC6CEB8")]
		public void SetRootConformSlope(bool value)
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0xC6CF5C", Offset = "0xC6CF5C", VA = "0xC6CF5C")]
		public bool RemoveStaleLinks()
		{
			return default(bool);
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0xC6D008", Offset = "0xC6D008", VA = "0xC6D008")]
		internal void Initialise(Spawner rootSpawner)
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0xC6D0B0", Offset = "0xC6D0B0", VA = "0xC6D0B0")]
		public Vector3 GetNextExtents(Vector3 placementCritScale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0xC6D228", Offset = "0xC6D228", VA = "0xC6D228")]
		public Vector3 GetMinExtents(Vector3 placementCritScale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0xC6D388", Offset = "0xC6D388", VA = "0xC6D388")]
		public void PrecalculateOffsets(XorshiftPlus randomGen, Vector3 spawnerScale, bool scaleToNearestInt, Vector3 topResourceLocationOffset)
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0xC6D4DC", Offset = "0xC6D4DC", VA = "0xC6D4DC")]
		public float GetSuccessChance()
		{
			return default(float);
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0xC6D618", Offset = "0xC6D618", VA = "0xC6D618", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0xC6CA7C", Offset = "0xC6CA7C", VA = "0xC6CA7C")]
		public int _GetValidId()
		{
			return default(int);
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0xC6D67C", Offset = "0xC6D67C", VA = "0xC6D67C")]
		private void AddTreeToFlatList(List<Resource> resources, int parentIndex = -1)
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0xC6D7C4", Offset = "0xC6D7C4", VA = "0xC6D7C4", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}
	}
	[Token(Token = "0x2000157")]
	public class Quadtree<T>
	{
		[Token(Token = "0x20004DE")]
		private class QuadtreeNode
		{
			[Token(Token = "0x4002C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58DAC8", Offset = "0x58DAC8")]
			private Vector2 <Position>k__BackingField;

			[Token(Token = "0x4002C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58DAD8", Offset = "0x58DAD8")]
			private T <Value>k__BackingField;

			[Token(Token = "0x170003C2")]
			public Vector2 Position
			{
				[Token(Token = "0x6002236")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x594858", Offset = "0x594858")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6002237")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x594868", Offset = "0x594868")]
				private set
				{
				}
			}

			[Token(Token = "0x170003C3")]
			public T Value
			{
				[Token(Token = "0x6002238")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x594878", Offset = "0x594878")]
				get
				{
					return (T)null;
				}
				[Token(Token = "0x6002239")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x594888", Offset = "0x594888")]
				private set
				{
				}
			}

			[Token(Token = "0x600223A")]
			public QuadtreeNode(Vector2 position, T value)
			{
			}
		}

		[Token(Token = "0x20004DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572B78", Offset = "0x572B78")]
		private sealed class <Find>d__12 : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x4002C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Quadtree<T> <>4__this;

			[Token(Token = "0x4002C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Rect range;

			[Token(Token = "0x4002C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rect <>3__range;

			[Token(Token = "0x4002C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <index>5__2;

			[Token(Token = "0x4002C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator<T> <>7__wrap2;

			[Token(Token = "0x170003C4")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x600223F")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x170003C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002241")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600223B")]
			[DebuggerHidden]
			public <Find>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x600223C")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600223D")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600223E")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002240")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002242")]
			[DebuggerHidden]
			private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002243")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int nodeCapacity;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<QuadtreeNode> nodes;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Quadtree<T>[] children;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Rect boundaries;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D6F4", Offset = "0x57D6F4")]
		private int <Count>k__BackingField;

		[Token(Token = "0x17000054")]
		public int Count
		{
			[Token(Token = "0x6000779")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590170", Offset = "0x590170")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600077A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590180", Offset = "0x590180")]
			private set
			{
			}
		}

		[Token(Token = "0x600077B")]
		public Quadtree(Rect boundaries, int nodeCapacity = 32)
		{
		}

		[Token(Token = "0x600077C")]
		public bool Insert(float x, float y, T value)
		{
			return default(bool);
		}

		[Token(Token = "0x600077D")]
		public bool Insert(Vector2 position, T value)
		{
			return default(bool);
		}

		[Token(Token = "0x600077E")]
		private bool Insert(QuadtreeNode node)
		{
			return default(bool);
		}

		[Token(Token = "0x600077F")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x590190", Offset = "0x590190")]
		public IEnumerable<T> Find(Rect range)
		{
			return null;
		}

		[Token(Token = "0x6000780")]
		public bool Remove(float x, float z, T value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000781")]
		public bool Remove(Vector2 position, T value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000782")]
		private void Subdivide()
		{
		}

		[Token(Token = "0x6000783")]
		private void Combine()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000158")]
	public class Resource : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Spawner m_spawner;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_name;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Constants.ResourceType m_resourceType;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool ContainerOnly;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject m_prefab;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string m_assetID;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string m_assetName;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D714", Offset = "0x57D714")]
		private Resource <Parent>k__BackingField;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Constants.ResourceStatic m_static;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_successRate;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool m_conformToSlope;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 m_minOffset;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 m_maxOffset;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 m_minRotation;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3 m_maxRotation;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool m_sameScale;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector3 m_minScale;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector3 m_maxScale;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private List<Texture2D> m_brushTextures;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private int m_brushTXIndex;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UBrush m_baseBrush;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public IDictionary<int, UBrush> m_brushCache;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float m_opacity;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float m_targetStrength;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int m_terrainProtoIdx;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public bool m_hasColliders;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		public bool m_hasRootCollider;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		public bool m_hasMeshes;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCF")]
		public bool m_hasRigidBody;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool m_flagLightmapStatic;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		public bool m_flagBatchingStatic;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		public bool m_flagOccludeeStatic;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
		public bool m_flagOccluderStatic;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public bool m_flagNavigationStatic;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		public bool m_flagOffMeshLinkGeneration;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
		public bool m_flagReflectionProbeStatic;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD7")]
		public bool m_flagMovingObject;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool m_flagCanBeOptimised;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		public bool m_flagForceOptimise;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		public bool m_flagIsOutdoorObject;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
		public bool m_useColliderBounds;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public Vector3 m_basePosition;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Vector3 m_baseRotation;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public Vector3 m_baseScale;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Vector3 m_baseSize;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public Vector3 m_boundsCenter;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Vector3 m_baseColliderCenter;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public bool m_baseColliderUseConstScale;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float m_baseColliderConstScaleAmount;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public Vector3 m_baseColliderScale;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public long m_instancesSpawned;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public string m_avsID;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Constants.AVSVegetationType m_avsVegetationType;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public bool m_displayedInEditor;

		[NonSerialized]
		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private List<Resource> m_children;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public bool OpenedInGuiHierarchy;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public int _parentIx;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D754", Offset = "0x57D754")]
		private bool <NextSuccess>k__BackingField;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D764", Offset = "0x57D764")]
		private Vector3 <NextPosition>k__BackingField;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D774", Offset = "0x57D774")]
		private Vector3 <NextRotation>k__BackingField;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D784", Offset = "0x57D784")]
		private Vector3 <NextScale>k__BackingField;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private List<int> m_linkedSpawners;

		[NonSerialized]
		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private ExtensionInstance[] m_extensionInstances;

		[NonSerialized]
		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private IGeNaExtension[] m_extensions;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private GameObject[] _extensions;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private bool _hasStatefulExtensions;

		[NonSerialized]
		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Type[] m_statelessExtensions;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private string[] _statelessExtensions;

		[Token(Token = "0x17000055")]
		public Spawner Spawner
		{
			[Token(Token = "0x6000784")]
			[Address(RVA = "0xABE2C8", Offset = "0xABE2C8", VA = "0xABE2C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000056")]
		public Resource Parent
		{
			[Token(Token = "0x6000785")]
			[Address(RVA = "0xABE2D0", Offset = "0xABE2D0", VA = "0xABE2D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5901F0", Offset = "0x5901F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000786")]
			[Address(RVA = "0xABE2D8", Offset = "0xABE2D8", VA = "0xABE2D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590200", Offset = "0x590200")]
			private set
			{
			}
		}

		[Token(Token = "0x17000057")]
		public Constants.ResourceStatic Static
		{
			[Token(Token = "0x6000787")]
			[Address(RVA = "0xABE2E0", Offset = "0xABE2E0", VA = "0xABE2E0")]
			get
			{
				return default(Constants.ResourceStatic);
			}
			[Token(Token = "0x6000788")]
			[Address(RVA = "0xABE2E8", Offset = "0xABE2E8", VA = "0xABE2E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000058")]
		public Texture2D[] BrushTextures
		{
			[Token(Token = "0x6000789")]
			[Address(RVA = "0xABE4F4", Offset = "0xABE4F4", VA = "0xABE4F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		public int BrushIndex
		{
			[Token(Token = "0x600078A")]
			[Address(RVA = "0xABE548", Offset = "0xABE548", VA = "0xABE548")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600078B")]
			[Address(RVA = "0xABE550", Offset = "0xABE550", VA = "0xABE550")]
			set
			{
			}
		}

		[Token(Token = "0x1700005A")]
		public List<Resource> Children
		{
			[Token(Token = "0x600078C")]
			[Address(RVA = "0xABE478", Offset = "0xABE478", VA = "0xABE478")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		public bool HasChildren
		{
			[Token(Token = "0x600078D")]
			[Address(RVA = "0xABE70C", Offset = "0xABE70C", VA = "0xABE70C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005C")]
		public bool NextSuccess
		{
			[Token(Token = "0x600078E")]
			[Address(RVA = "0xABE764", Offset = "0xABE764", VA = "0xABE764")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590210", Offset = "0x590210")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600078F")]
			[Address(RVA = "0xABE76C", Offset = "0xABE76C", VA = "0xABE76C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590220", Offset = "0x590220")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005D")]
		public Vector3 NextPosition
		{
			[Token(Token = "0x6000790")]
			[Address(RVA = "0xABE778", Offset = "0xABE778", VA = "0xABE778")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590230", Offset = "0x590230")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000791")]
			[Address(RVA = "0xABE788", Offset = "0xABE788", VA = "0xABE788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590240", Offset = "0x590240")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005E")]
		public Vector3 NextRotation
		{
			[Token(Token = "0x6000792")]
			[Address(RVA = "0xABE798", Offset = "0xABE798", VA = "0xABE798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590250", Offset = "0x590250")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000793")]
			[Address(RVA = "0xABE7A8", Offset = "0xABE7A8", VA = "0xABE7A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590260", Offset = "0x590260")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005F")]
		public Vector3 NextScale
		{
			[Token(Token = "0x6000794")]
			[Address(RVA = "0xABE7B8", Offset = "0xABE7B8", VA = "0xABE7B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590270", Offset = "0x590270")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000795")]
			[Address(RVA = "0xABE7C8", Offset = "0xABE7C8", VA = "0xABE7C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590280", Offset = "0x590280")]
			private set
			{
			}
		}

		[Token(Token = "0x17000060")]
		public List<int> LinkedSpawners
		{
			[Token(Token = "0x6000796")]
			[Address(RVA = "0xABE7D8", Offset = "0xABE7D8", VA = "0xABE7D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		public bool HasLinkedSpawners
		{
			[Token(Token = "0x6000797")]
			[Address(RVA = "0xABE7E0", Offset = "0xABE7E0", VA = "0xABE7E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000062")]
		public bool HasExtensions
		{
			[Token(Token = "0x6000798")]
			[Address(RVA = "0xABE834", Offset = "0xABE834", VA = "0xABE834")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000063")]
		public bool TreeHasLinkedSpawners
		{
			[Token(Token = "0x6000799")]
			[Address(RVA = "0xABE85C", Offset = "0xABE85C", VA = "0xABE85C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000064")]
		public bool TreeHasExtensions
		{
			[Token(Token = "0x600079A")]
			[Address(RVA = "0xABE930", Offset = "0xABE930", VA = "0xABE930")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000065")]
		internal ExtensionInstance[] ExtensionInstances
		{
			[Token(Token = "0x600079B")]
			[Address(RVA = "0xABEA10", Offset = "0xABEA10", VA = "0xABEA10")]
			get
			{
				return null;
			}
			[Token(Token = "0x600079C")]
			[Address(RVA = "0xABEA18", Offset = "0xABEA18", VA = "0xABEA18")]
			set
			{
			}
		}

		[Token(Token = "0x17000066")]
		public IGeNaExtension[] Extensions
		{
			[Token(Token = "0x600079D")]
			[Address(RVA = "0xABEA20", Offset = "0xABEA20", VA = "0xABEA20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000067")]
		public Type[] StatelessExtensions
		{
			[Token(Token = "0x600079F")]
			[Address(RVA = "0xABEE0C", Offset = "0xABEE0C", VA = "0xABEE0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0xABEA44", Offset = "0xABEA44", VA = "0xABEA44")]
		private void CompleteStatefulExtensionsDeserialisation()
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xABEE14", Offset = "0xABEE14", VA = "0xABEE14")]
		public Resource(Spawner spawner)
		{
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xABF04C", Offset = "0xABF04C", VA = "0xABF04C")]
		public Resource(Spawner parentSpawner, Resource parent, Resource src)
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xABF668", Offset = "0xABF668", VA = "0xABF668")]
		public void SetSpawner(Spawner spawner)
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xABF778", Offset = "0xABF778", VA = "0xABF778")]
		public void SetParent(Resource parent)
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xABF784", Offset = "0xABF784", VA = "0xABF784")]
		public void Delete()
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xABF91C", Offset = "0xABF91C", VA = "0xABF91C")]
		public void LinkChildSpawner(int childSpawnerIndex)
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xABF8A4", Offset = "0xABF8A4", VA = "0xABF8A4")]
		public void DetachLinkedSpawner(int childSpawnerIndex)
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xABFA1C", Offset = "0xABFA1C", VA = "0xABFA1C")]
		public bool RemoveStaleLinks()
		{
			return default(bool);
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xABFBB0", Offset = "0xABFBB0", VA = "0xABFBB0")]
		public void AddBrushTexture(Texture2D texture)
		{
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xABFD28", Offset = "0xABFD28", VA = "0xABFD28")]
		public void RemoveBrushTexture(int index)
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xABFF00", Offset = "0xABFF00", VA = "0xABFF00")]
		public void ClearBrushTextures()
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xABE568", Offset = "0xABE568", VA = "0xABE568")]
		public void UpdateBrushTexture()
		{
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xABFF64", Offset = "0xABFF64", VA = "0xABFF64")]
		public bool AddExtension(Type extensionClass)
		{
			return default(bool);
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xAC0344", Offset = "0xAC0344", VA = "0xAC0344")]
		public bool AddExtension(GameObject extensionGO)
		{
			return default(bool);
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xAC0820", Offset = "0xAC0820", VA = "0xAC0820")]
		public void RemoveExtension(IGeNaExtension extension)
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xAC10EC", Offset = "0xAC10EC", VA = "0xAC10EC")]
		public void RemoveExtension(int index)
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xAC12D4", Offset = "0xAC12D4", VA = "0xAC12D4")]
		public void RemoveExtension(Type extension)
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xAC1554", Offset = "0xAC1554", VA = "0xAC1554")]
		public void RemoveStatelessExtension(int index)
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xAC17C4", Offset = "0xAC17C4", VA = "0xAC17C4")]
		public void ClearExtensions()
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xAC17F0", Offset = "0xAC17F0", VA = "0xAC17F0")]
		public void ResetInstancesSpawned()
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xAC18B8", Offset = "0xAC18B8", VA = "0xAC18B8")]
		internal void Initialise(Spawner rootSpawner)
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xAC23B4", Offset = "0xAC23B4", VA = "0xAC23B4")]
		public void RecalculateBounds()
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xAC2644", Offset = "0xAC2644", VA = "0xAC2644")]
		public void PrecalculateOffsets(XorshiftPlus randomGen, Vector3 spawnerScale, bool scaleToNearestInt)
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xAC2AE0", Offset = "0xAC2AE0", VA = "0xAC2AE0")]
		public void PrecalculateOffsets(XorshiftPlus randomGen, Vector3 spawnerScale, bool scaleToNearestInt, Vector3 locationOffset)
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xAC2774", Offset = "0xAC2774", VA = "0xAC2774")]
		private bool PrecalculateStatic(XorshiftPlus randomGen, Vector3 spawnerScale, bool scaleToNearestInt)
		{
			return default(bool);
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xAC28D8", Offset = "0xAC28D8", VA = "0xAC28D8")]
		private bool PrecalculateSuccess(XorshiftPlus randomGen)
		{
			return default(bool);
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xAC2918", Offset = "0xAC2918", VA = "0xAC2918")]
		private void CalculateOffsets(XorshiftPlus randomGen, bool scaleToNearestInt)
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xAC2B74", Offset = "0xAC2B74", VA = "0xAC2B74")]
		public void IncludeNextBounds(ref Bounds nextBounds, GTransform accumulativeTransform, bool topLevel)
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xAC33C8", Offset = "0xAC33C8", VA = "0xAC33C8")]
		private static void Encapsulate(ref Bounds target, Bounds boundsToEncapsulate)
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xAC34C4", Offset = "0xAC34C4", VA = "0xAC34C4")]
		private Bounds GetBounds(Vector3 position, Vector3 scale, Vector3 rotation)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xAC36D4", Offset = "0xAC36D4", VA = "0xAC36D4")]
		public void IncludeInMinBounds(ref Bounds minBounds, GTransform accumulativeTransform, bool topLevel)
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xAC3AB0", Offset = "0xAC3AB0", VA = "0xAC3AB0")]
		private Vector3 GetClosestPos(Vector3 target)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xAC2ED8", Offset = "0xAC2ED8", VA = "0xAC2ED8")]
		private Bounds GetRotatedBounds(Bounds bounds, Vector3 pivot, Vector3 rotation)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xAC2420", Offset = "0xAC2420", VA = "0xAC2420")]
		private Bounds GetInstantiatedBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xAC3B30", Offset = "0xAC3B30", VA = "0xAC3B30")]
		private GameObject GetBaseInstantiated(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xAC3DAC", Offset = "0xAC3DAC", VA = "0xAC3DAC", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xAC3EB0", Offset = "0xAC3EB0", VA = "0xAC3EB0", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}
	}
	[Token(Token = "0x2000159")]
	public class RuntimeSpawner : MonoBehaviour
	{
		[Token(Token = "0x20004E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572B88", Offset = "0x572B88")]
		private sealed class <RunSpawnerIteration>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float waitTime;

			[Token(Token = "0x4002C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RuntimeSpawner <>4__this;

			[Token(Token = "0x170003C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002247")]
				[Address(RVA = "0x871BE8", Offset = "0x871BE8", VA = "0x871BE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002249")]
				[Address(RVA = "0x871C30", Offset = "0x871C30", VA = "0x871C30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002244")]
			[Address(RVA = "0x871854", Offset = "0x871854", VA = "0x871854")]
			[DebuggerHidden]
			public <RunSpawnerIteration>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002245")]
			[Address(RVA = "0x871880", Offset = "0x871880", VA = "0x871880", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002246")]
			[Address(RVA = "0x871884", Offset = "0x871884", VA = "0x871884", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002248")]
			[Address(RVA = "0x871BF0", Offset = "0x871BF0", VA = "0x871BF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57D7D4", Offset = "0x57D7D4")]
		public float m_spawnInterval;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57D80C", Offset = "0x57D80C")]
		public Spawner m_spawner;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57D844", Offset = "0x57D844")]
		public bool m_updateSpawnerSettings;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57D87C", Offset = "0x57D87C")]
		public bool m_showDebug;

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x8C2394", Offset = "0x8C2394", VA = "0x8C2394")]
		private void Start()
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x8C23C4", Offset = "0x8C23C4", VA = "0x8C23C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x590290", Offset = "0x590290")]
		private IEnumerator RunSpawnerIteration(float waitTime)
		{
			return null;
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x8C2440", Offset = "0x8C2440", VA = "0x8C2440")]
		public RuntimeSpawner()
		{
		}
	}
	[Token(Token = "0x200015A")]
	public class Spawner : MonoBehaviour, ISerializationCallbackReceiver
	{
		[Token(Token = "0x20004E1")]
		private struct PaintTask
		{
			[Token(Token = "0x4002C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58DAE8", Offset = "0x58DAE8")]
			private Prototype <Prototype>k__BackingField;

			[Token(Token = "0x4002C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58DAF8", Offset = "0x58DAF8")]
			private Vector3 <HitLocation>k__BackingField;

			[Token(Token = "0x4002C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58DB08", Offset = "0x58DB08")]
			private Vector3 <HitNormal>k__BackingField;

			[Token(Token = "0x4002C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58DB18", Offset = "0x58DB18")]
			private float <HitAlpha>k__BackingField;

			[Token(Token = "0x170003C8")]
			public Prototype Prototype
			{
				[Token(Token = "0x600224A")]
				[Address(RVA = "0x876668", Offset = "0x876668", VA = "0x876668")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x594958", Offset = "0x594958")]
				readonly get
				{
					return null;
				}
				[Token(Token = "0x600224B")]
				[Address(RVA = "0x876670", Offset = "0x876670", VA = "0x876670")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x594990", Offset = "0x594990")]
				private set
				{
				}
			}

			[Token(Token = "0x170003C9")]
			public Vector3 HitLocation
			{
				[Token(Token = "0x600224C")]
				[Address(RVA = "0x876678", Offset = "0x876678", VA = "0x876678")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5949A0", Offset = "0x5949A0")]
				readonly get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600224D")]
				[Address(RVA = "0x876684", Offset = "0x876684", VA = "0x876684")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5949D8", Offset = "0x5949D8")]
				private set
				{
				}
			}

			[Token(Token = "0x170003CA")]
			public Vector3 HitNormal
			{
				[Token(Token = "0x600224E")]
				[Address(RVA = "0x876690", Offset = "0x876690", VA = "0x876690")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5949E8", Offset = "0x5949E8")]
				readonly get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600224F")]
				[Address(RVA = "0x87669C", Offset = "0x87669C", VA = "0x87669C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x594A20", Offset = "0x594A20")]
				private set
				{
				}
			}

			[Token(Token = "0x170003CB")]
			public float HitAlpha
			{
				[Token(Token = "0x6002250")]
				[Address(RVA = "0x8766A8", Offset = "0x8766A8", VA = "0x8766A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x594A30", Offset = "0x594A30")]
				readonly get
				{
					return default(float);
				}
				[Token(Token = "0x6002251")]
				[Address(RVA = "0x8766B0", Offset = "0x8766B0", VA = "0x8766B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x594A68", Offset = "0x594A68")]
				private set
				{
				}
			}

			[Token(Token = "0x6002252")]
			[Address(RVA = "0x8766B8", Offset = "0x8766B8", VA = "0x8766B8")]
			public PaintTask(Prototype prototype, Vector3 hitLocation, Vector3 hitNormal, float hitAlpha)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572B98", Offset = "0x572B98")]
		private sealed class <>c
		{
			[Token(Token = "0x4002C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<Prototype> <>9__221_0;

			[Token(Token = "0x6002254")]
			[Address(RVA = "0x876634", Offset = "0x876634", VA = "0x876634")]
			public <>c()
			{
			}

			[Token(Token = "0x6002255")]
			[Address(RVA = "0x87663C", Offset = "0x87663C", VA = "0x87663C")]
			internal int <SortPrototypesAZ>b__221_0(Prototype p1, Prototype p2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000CBD")]
		public const string LINKED_SYMBOL = "☍";

		[Token(Token = "0x4000CBE")]
		protected const string CACHE_SYMBOL = " =CACHE=";

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_majorVersion;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int m_minorVersion;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_patchVersion;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool m_isCache;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D8F4", Offset = "0x57D8F4")]
		private Spawner <Cache>k__BackingField;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_isLinked;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Constants.SpawnerType m_type;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Constants.ChildSpawnMode m_childSpawnMode;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Constants.SpawnMode m_spawnMode;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_flowDistanceSqr;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_parentName;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool m_mergeSpawns;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool m_spawnToTarget;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool m_sortPrototypes;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<Prototype> m_spawnPrototypes;

		[NonSerialized]
		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool m_affectsHeight;

		[NonSerialized]
		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool m_affectsTrees;

		[NonSerialized]
		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool m_affectsGrass;

		[NonSerialized]
		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool m_affectsTexture;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool m_hasActiveHeightProtos;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool m_hasActiveTreeProtos;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		public bool m_hasActiveGrassProtos;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
		public bool m_hasActiveTextureProtos;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool m_hasChildWithActiveHeightProtos;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool m_hasChildWithActiveTreeProtos;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool m_hasChildWithActiveGrassProtos;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool m_hasChildWithActiveTextureProtos;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject m_spawnTarget;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3 m_spawnOriginLocation;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector3 m_spawnOriginNormal;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int m_spawnOriginObjectID;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool m_spawnOriginIsTerrain;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Bounds m_spawnOriginBounds;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Transform m_spawnOriginGroundTransform;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Constants.LocationAlgorithm m_spawnAlgorithm;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float m_globalSpawnJitterPct;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public long m_minInstances;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public long m_maxInstances;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public long m_instancesSpawned;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float m_seedThrowRange;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float m_seedThrowJitter;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float m_maxSpawnRange;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public Constants.SpawnRangeShape m_spawnRangeShape;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Constants.VirginCheckType m_critVirginCheckType;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public LayerMask m_critSpawnCollisionLayers;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float m_critBoundsBorder;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public Constants.CriteriaRangeType m_critCheckHeightType;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool m_critCheckHeight;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float m_critMinSpawnHeight;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float m_critMaxSpawnHeight;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float m_critHeightVariance;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private float m_terrainYPos;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		private float m_terrainHeight;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float m_bottomBoundary;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float m_topBoundary;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Constants.CriteriaRangeType m_critCheckSlopeType;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public bool m_critCheckSlope;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private float m_critMinSpawnSlope;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		private float m_critMaxSpawnSlope;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float m_critSlopeVariance;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public bool m_critCheckTextures;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public float m_critTextureStrength;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public float m_critTextureVariance;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public int m_critSelectedTextureIdx;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public string m_critSelectedTextureName;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public int m_critMaxSelectedTexture;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public bool m_critCheckMask;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Constants.MaskType m_critMaskType;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Fractal m_critMaskFractal;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public float m_critMaskFractalMidpoint;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public float m_critMaskFractalRange;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Texture2D m_critMaskImage;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Heightmap m_critMaskImageData;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Heightmap m_critMaskAlphaData;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public bool m_critMaskInvert;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public Vector3 m_rangesOriginLocation;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Vector3 m_rangesOriginNormal;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		public float m_critMinHeight;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public float m_critMaxHeight;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public float m_critMinSlope;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public float m_critMaxSlope;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private float m_critMinTextureStrength;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private float m_critMaxTextureStrength;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private float m_critMaskFractalMin;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private float m_critMaskFractalMax;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		public Constants.RotationAlgorithm m_rotationAlgorithm;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public float m_minRotationY;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		public float m_maxRotationY;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public bool m_sameScale;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
		public bool m_scaleToNearestInt;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		public float m_minScaleX;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public float m_maxScaleX;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public float m_minScaleY;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public float m_maxScaleY;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public float m_minScaleZ;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public float m_maxScaleZ;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		public bool m_useGravity;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E5")]
		public bool m_enableRotationDragUpdate;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E6")]
		public bool m_autoOptimise;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public float m_maxSizeToOptimise;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public float m_minProbeGroupDistance;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public float m_minProbeDistance;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		public bool m_autoProbe;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public Gravity m_gravity;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public bool m_advUseLargeRanges;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x201")]
		public bool m_advShowMouseOverHelp;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x202")]
		public bool m_advShowDetailedHelp;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x203")]
		public bool m_advForcePlaceAtClickLocation;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public bool m_advAddColliderToSpawnedPrefabs;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public float m_advSpawnCheckOffset;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		public bool m_showOverview;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20D")]
		public bool m_showSpawnCriteria;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20E")]
		public bool m_showPlacementCriteria;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20F")]
		public bool m_showPrototypes;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public bool m_showGizmos;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
		public bool m_showAdvancedSettings;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
		public bool m_showCritMinSpawnHeight;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x213")]
		public bool m_showCritMaxSpawnHeight;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D964", Offset = "0x57D964")]
		private bool <VisualizationActive>k__BackingField;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public Vector3 m_visualizationLocation;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public bool m_needsVisualisationUpdate;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public int m_maxVisualisationDimensions;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		public float m_visProcessLimit;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private float[,] m_fitnessArray;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public float m_metersPerScan;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		public float m_metersPerScanVisualisation;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private TreeManager m_treeManager;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private ProbeManager m_probeManager;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private GameObject m_probeParent;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public GameObject m_lastSpawnedObject;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public List<GameObject> m_prefabUndoList;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public List<GameObject> m_parentsUndoList;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public List<GameObject> m_probeUndoList;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private List<Spawner> m_childSpawners;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private List<Spawner> m_activeChildSpawners;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private int m_nextChildIndex;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private IDictionary<int, int> m_linkedSpawners;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[SerializeField]
		private List<int> _linkedSpawnersIx;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[SerializeField]
		private List<int> _linkedSpawnersCount;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private DateTime m_lastUpdated;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public GenaDefaults m_defaults;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public bool m_defaultsSet;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		public int m_randomSeed;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public XorshiftPlus m_randomGenerator;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public bool m_spawnToAVS;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private SplatPainter m_splatPainter;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private GameObject m_spawnParent;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private UndoComponent m_undoComponent;

		[NonSerialized]
		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private UndoRecord m_undoRecord;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		internal List<ExtensionInstance> m_extensionUndoList;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public float m_ingestionGroundLevel;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		private bool m_gobalSpawning;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FD")]
		private bool m_turnedOnAutoSyncTransforms;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public Action OnUpdate;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[SerializeField]
		private int m_nextProtoId;

		[Token(Token = "0x17000068")]
		public bool IsCache
		{
			[Token(Token = "0x60007C8")]
			[Address(RVA = "0x123DF30", Offset = "0x123DF30", VA = "0x123DF30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000069")]
		public Spawner Cache
		{
			[Token(Token = "0x60007C9")]
			[Address(RVA = "0x123DF38", Offset = "0x123DF38", VA = "0x123DF38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5902F0", Offset = "0x5902F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007CA")]
			[Address(RVA = "0x123DF40", Offset = "0x123DF40", VA = "0x123DF40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590300", Offset = "0x590300")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006A")]
		public bool IsLinked
		{
			[Token(Token = "0x60007CB")]
			[Address(RVA = "0x123DF48", Offset = "0x123DF48", VA = "0x123DF48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700006B")]
		public Constants.ChildSpawnMode ChildSpawnMode
		{
			[Token(Token = "0x60007CC")]
			[Address(RVA = "0x123DF50", Offset = "0x123DF50", VA = "0x123DF50")]
			get
			{
				return default(Constants.ChildSpawnMode);
			}
			[Token(Token = "0x60007CD")]
			[Address(RVA = "0x123DF58", Offset = "0x123DF58", VA = "0x123DF58")]
			set
			{
			}
		}

		[Token(Token = "0x1700006C")]
		public bool VisualizationActive
		{
			[Token(Token = "0x60007CE")]
			[Address(RVA = "0x123DF60", Offset = "0x123DF60", VA = "0x123DF60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590310", Offset = "0x590310")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007CF")]
			[Address(RVA = "0x123DF68", Offset = "0x123DF68", VA = "0x123DF68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590320", Offset = "0x590320")]
			set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public List<Spawner> ChildSpawners
		{
			[Token(Token = "0x60007D0")]
			[Address(RVA = "0x123DF74", Offset = "0x123DF74", VA = "0x123DF74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006E")]
		public List<Spawner> ActiveChildSpawners
		{
			[Token(Token = "0x60007D1")]
			[Address(RVA = "0x123DF7C", Offset = "0x123DF7C", VA = "0x123DF7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		public List<Spawner> ChildrenToSpawnNext
		{
			[Token(Token = "0x60007D2")]
			[Address(RVA = "0x123DF84", Offset = "0x123DF84", VA = "0x123DF84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000070")]
		internal UndoDropStack UndoStack
		{
			[Token(Token = "0x60007D3")]
			[Address(RVA = "0x123E1C8", Offset = "0x123E1C8", VA = "0x123E1C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		public int UndoCount
		{
			[Token(Token = "0x60007D4")]
			[Address(RVA = "0x123E428", Offset = "0x123E428", VA = "0x123E428")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000072")]
		public UndoRecord[] UndoArrayCopy
		{
			[Token(Token = "0x60007D5")]
			[Address(RVA = "0x123E478", Offset = "0x123E478", VA = "0x123E478")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		public int UndoSteps
		{
			[Token(Token = "0x60007D6")]
			[Address(RVA = "0x123E4D0", Offset = "0x123E4D0", VA = "0x123E4D0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000074")]
		public float MinSpawnSlope
		{
			[Token(Token = "0x60007D7")]
			[Address(RVA = "0x123E528", Offset = "0x123E528", VA = "0x123E528")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007D8")]
			[Address(RVA = "0x123E530", Offset = "0x123E530", VA = "0x123E530")]
			set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public float MaxSpawnSlope
		{
			[Token(Token = "0x60007D9")]
			[Address(RVA = "0x123E564", Offset = "0x123E564", VA = "0x123E564")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007DA")]
			[Address(RVA = "0x123E56C", Offset = "0x123E56C", VA = "0x123E56C")]
			set
			{
			}
		}

		[Token(Token = "0x17000076")]
		public int NextProtoId
		{
			[Token(Token = "0x60007DB")]
			[Address(RVA = "0x123E5A0", Offset = "0x123E5A0", VA = "0x123E5A0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x123E5B4", Offset = "0x123E5B4", VA = "0x123E5B4")]
		public void CacheCopy(Spawner src)
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x123E5D4", Offset = "0x123E5D4", VA = "0x123E5D4")]
		public void DeepCopy(Spawner src)
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x123F10C", Offset = "0x123F10C", VA = "0x123F10C")]
		public void Upgrade(string majorVer, string minorVer, string patchVer)
		{
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x123F1B8", Offset = "0x123F1B8", VA = "0x123F1B8")]
		private void To210()
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x123F25C", Offset = "0x123F25C", VA = "0x123F25C")]
		private bool ParseVersion(string mav, string miv, string pav, out int majorVer, out int minorVer, out int patchVer)
		{
			return default(bool);
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x123F424", Offset = "0x123F424", VA = "0x123F424")]
		public void SetDefaults(string majorVer, string minorVer, string patchVer)
		{
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x123F65C", Offset = "0x123F65C", VA = "0x123F65C")]
		public void AddProto(Prototype proto)
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x123F8D8", Offset = "0x123F8D8", VA = "0x123F8D8")]
		public void DeleteProto(Prototype proto)
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x123F8F4", Offset = "0x123F8F4", VA = "0x123F8F4")]
		public void AddTreeProto()
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x1240528", Offset = "0x1240528", VA = "0x1240528")]
		public void AddGrassProto()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x1240854", Offset = "0x1240854", VA = "0x1240854")]
		public void AddTextureProto()
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x1240B5C", Offset = "0x1240B5C", VA = "0x1240B5C")]
		public void UpdateGoName()
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x1240C24", Offset = "0x1240C24", VA = "0x1240C24")]
		public void LinkChildSpawner(int index)
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x1240FB0", Offset = "0x1240FB0", VA = "0x1240FB0")]
		public void DetachChildSpawner(int index)
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x1240F10", Offset = "0x1240F10", VA = "0x1240F10")]
		public void UpdateWhichProtosHaveLinkedSpawners()
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x1241418", Offset = "0x1241418", VA = "0x1241418")]
		public void UpdateWhichProtosHaveExtensions()
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x12414B8", Offset = "0x12414B8", VA = "0x12414B8")]
		public void RemoveStaleLinks()
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x1241578", Offset = "0x1241578", VA = "0x1241578")]
		public bool IsChildLinked(int childSpawnerIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x1240E6C", Offset = "0x1240E6C", VA = "0x1240E6C")]
		public void Link()
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x124138C", Offset = "0x124138C", VA = "0x124138C")]
		public void Detach()
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x1241638", Offset = "0x1241638", VA = "0x1241638")]
		public void Initialise(Transform target, string description, bool recordUndo = true)
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x1241650", Offset = "0x1241650", VA = "0x1241650")]
		private void Initialise(Spawner rootSpawner, Transform target, string description, bool recordUndo = true)
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x1241B70", Offset = "0x1241B70", VA = "0x1241B70")]
		private void InitExtensionsAndAffects(Spawner rootSpawner)
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x1241CB8", Offset = "0x1241CB8", VA = "0x1241CB8")]
		public void RecordUndo(string description)
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x1241EB4", Offset = "0x1241EB4", VA = "0x1241EB4")]
		public void ClearUndoStack()
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x1241ED0", Offset = "0x1241ED0", VA = "0x1241ED0")]
		public void UpdateUndoStack(List<UndoRecord> list)
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x1241D10", Offset = "0x1241D10", VA = "0x1241D10")]
		private bool SpawnedSomething()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x1241EEC", Offset = "0x1241EEC", VA = "0x1241EEC")]
		public void SetAllProtoConformSlope(bool value)
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x1241FD0", Offset = "0x1241FD0", VA = "0x1241FD0")]
		public void SortPrototypesAZ()
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x12420F4", Offset = "0x12420F4", VA = "0x12420F4")]
		public void UpdateSpawnCritOverrides()
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x123F6D4", Offset = "0x123F6D4", VA = "0x123F6D4")]
		private void SetProtoSpawnCrits(Prototype proto)
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x1242194", Offset = "0x1242194", VA = "0x1242194")]
		public void UpdateHasActiveTerrainProto()
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x123F8B0", Offset = "0x123F8B0", VA = "0x123F8B0")]
		public void UpdateVisualisationResolution()
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x12424A8", Offset = "0x12424A8", VA = "0x12424A8")]
		public void UpdateVisualisationResolution(Vector3 minExtents)
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x1240354", Offset = "0x1240354", VA = "0x1240354")]
		public static bool HasMeshes(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x12403BC", Offset = "0x12403BC", VA = "0x12403BC")]
		public static bool HasRootCollider(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x12404C0", Offset = "0x12404C0", VA = "0x12404C0")]
		public static bool HasColliders(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x123FC98", Offset = "0x123FC98", VA = "0x123FC98")]
		public static Bounds GetInstantiatedBounds(GameObject prefab)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x12425B4", Offset = "0x12425B4", VA = "0x12425B4")]
		public static Bounds GetLocalColliderBounds(GameObject go)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x12427F0", Offset = "0x12427F0", VA = "0x12427F0")]
		public static bool HasRigidBody(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x1242858", Offset = "0x1242858", VA = "0x1242858")]
		public void SetSpawnOriginAndParent(GameObject parent, Transform groundObject, Vector3 location, Vector3 normal)
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x1242EF4", Offset = "0x1242EF4", VA = "0x1242EF4")]
		public void SetSpawnOrigin(Transform groundObject, Vector3 location, Vector3 normal, bool parentedSpawn = false)
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x1242F04", Offset = "0x1242F04", VA = "0x1242F04")]
		public void SetSpawnOriginAndParent(Spawner rootSpawner, GameObject parent, Transform groundObject, Vector3 location, Vector3 normal)
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x1242868", Offset = "0x1242868", VA = "0x1242868")]
		public void SetSpawnOrigin(Spawner rootSpawner, Transform groundObject, Vector3 location, Vector3 normal, bool parentedSpawn = false)
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x1242F18", Offset = "0x1242F18", VA = "0x1242F18")]
		public void UpdateTargetSpawnerRanges(RaycastHit hitInfo, bool doUpdateChildSpawners)
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x1243890", Offset = "0x1243890", VA = "0x1243890")]
		public void UpdateTargetSpawnerRanges(bool doUpdateChildSpawners)
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x124340C", Offset = "0x124340C", VA = "0x124340C")]
		private void UpdateRangesForSpawnerAndPrototypes()
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x1243A20", Offset = "0x1243A20", VA = "0x1243A20")]
		private void UpdateSpawnerRanges(Constants.CriteriaRangeType checkHeight, float minSpawnHeight, float maxSpawnHeight, float heightVariance, Constants.CriteriaRangeType checkSlope, float minSlope, float maxSlope, float slopeVariance, float textureStrength, float textureVariance, out float o_MinHeight, out float o_MaxHeight, out float o_MinSlope, out float o_MaxSlope, out float o_MinTextureStrength, out float o_MaxTextureStrength, out float o_MaskFractalMin, out float o_MaskFractalMax)
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x1243D98", Offset = "0x1243D98", VA = "0x1243D98")]
		private void SetSpawnOrigin(Vector3 location)
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x1243110", Offset = "0x1243110", VA = "0x1243110")]
		private void UpdateTextureTargetAndRange()
		{
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x1244080", Offset = "0x1244080", VA = "0x1244080")]
		private void UpdateSpawnerVisualisation()
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x12422C4", Offset = "0x12422C4", VA = "0x12422C4")]
		private Vector3 CalculateMinExtents(bool useScales = true)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x1241B60", Offset = "0x1241B60", VA = "0x1241B60")]
		public void UpdateChildSpawners()
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x1245328", Offset = "0x1245328", VA = "0x1245328")]
		private void UpdateChildSpawners(Spawner rootParent)
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x1246604", Offset = "0x1246604", VA = "0x1246604")]
		private void OnBeforeSpawn()
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x1246648", Offset = "0x1246648", VA = "0x1246648")]
		private void OnAfterSpawn()
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x1246664", Offset = "0x1246664", VA = "0x1246664")]
		public void GlobalSpawn(RaycastHit hitInfo)
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x12466F8", Offset = "0x12466F8", VA = "0x12466F8")]
		public void GlobalSpawn(Vector3 hitLocation, Vector3 hitNormal, Transform hitTransform)
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x12467F8", Offset = "0x12467F8", VA = "0x12467F8")]
		private void SpawnGlobally()
		{
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x1247098", Offset = "0x1247098", VA = "0x1247098")]
		public void Spawn(Vector3 location, float rotation, bool subSpawn)
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x1247030", Offset = "0x1247030", VA = "0x1247030")]
		public void Spawn(Vector3 location, bool subSpawn)
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x12470A8", Offset = "0x12470A8", VA = "0x12470A8")]
		public void Spawn(Vector3 location, float parentRotation, Vector3 parentScale, bool subSpawn)
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0x1249F70", Offset = "0x1249F70", VA = "0x1249F70")]
		private void ParentSpawned(GameObject spawnParent, Vector3 spawnLocation, ref List<GameObject> goList)
		{
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x124A918", Offset = "0x124A918", VA = "0x124A918")]
		public void LoadLightProbes()
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x1248870", Offset = "0x1248870", VA = "0x1248870")]
		private bool PaintPrototype(Prototype prototype, Vector3 location, Vector3 normal, float alpha, Vector3 scaleFactor, Vector3 rotation, bool forceSpawn, out GameObject spawnedInstance)
		{
			return default(bool);
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x124A93C", Offset = "0x124A93C", VA = "0x124A93C")]
		private bool SpawnResourceTree(GameObject parent, List<Resource> resourcesAtLevel, Vector3 location, Vector3 normal, Vector3 scale, Vector3 rotation, GTransform cumulativeTransform, bool forceSpawn, ref List<GameObject> topLevelGOs, ref List<Gravity.GravityInstance> gis, string protoIdCode)
		{
			return default(bool);
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0x124C0F8", Offset = "0x124C0F8", VA = "0x124C0F8")]
		private void SpawnLinkedSpawners(Resource res, Vector3 loc, Vector3 rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x124C274", Offset = "0x124C274", VA = "0x124C274")]
		private void SpawnExtensions(Resource res, SpawnDetails spawnDetails)
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x124BF04", Offset = "0x124BF04", VA = "0x124BF04")]
		private static GTransform CalculateCumulativeTransform(ref GTransform cumulativeTransform, Vector3 resPosition, Vector3 resScale, Vector3 resRotation)
		{
			return default(GTransform);
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x124C570", Offset = "0x124C570", VA = "0x124C570")]
		private bool CanOptimiseGameObject(Resource resource, GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x124C618", Offset = "0x124C618", VA = "0x124C618")]
		private void OptimiseGameObject(Resource resource, GameObject go)
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x124C568", Offset = "0x124C568", VA = "0x124C568")]
		public void AutoOptimiseGameObject(Resource resource, GameObject go)
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0x124C61C", Offset = "0x124C61C", VA = "0x124C61C")]
		private bool CanProbeGameObject(Resource resource, GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x124C64C", Offset = "0x124C64C", VA = "0x124C64C")]
		private void ProbeGameObject(Resource resource, GameObject go)
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x124C650", Offset = "0x124C650", VA = "0x124C650")]
		private LightProbeGroup GetOrCreateNearestProbeGroup(Vector3 position, out bool canAddNewProbes)
		{
			return null;
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x124C56C", Offset = "0x124C56C", VA = "0x124C56C")]
		public void AutoProbeGameObject(Resource resource, GameObject go)
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x124455C", Offset = "0x124455C", VA = "0x124455C")]
		private bool CheckLocationForSpawn(Vector3 location, float rotation, List<Prototype> prototypes, out Vector3 hitLocation, out Vector3 hitNormal, out float hitAlpha)
		{
			return default(bool);
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x1248E94", Offset = "0x1248E94", VA = "0x1248E94")]
		private bool CheckLocationForSpawn(Vector3 location, float rotation, List<Prototype> prototypes, ref Prototype selectedPrototype, out Vector3 hitLocation, out Vector3 hitNormal, out float hitAlpha)
		{
			return default(bool);
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x1244E00", Offset = "0x1244E00", VA = "0x1244E00")]
		private bool CheckBoundedLocationForSpawn(Vector3 location, float rotation, Vector3 extents, bool visualising)
		{
			return default(bool);
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x1249850", Offset = "0x1249850", VA = "0x1249850")]
		private bool CheckBoundedLocationForSpawn(Vector3 location, float yRotation, Prototype prototype, Vector3 extents, bool visualising)
		{
			return default(bool);
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x124C844", Offset = "0x124C844", VA = "0x124C844")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x124C95C", Offset = "0x124C95C", VA = "0x124C95C")]
		public void UnspawnParentIfEmpty(GameObject parent)
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x124CA58", Offset = "0x124CA58", VA = "0x124CA58")]
		public void UnspawnEmptyParents()
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x124CC9C", Offset = "0x124CC9C", VA = "0x124CC9C")]
		public void UnspawnProbes()
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x124A24C", Offset = "0x124A24C", VA = "0x124A24C")]
		public void UnspawnAllPrefabs()
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x124CE14", Offset = "0x124CE14", VA = "0x124CE14")]
		public void UnspawnGameObject(int protoIdx)
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x124CE90", Offset = "0x124CE90", VA = "0x124CE90")]
		public void UnspawnGrass(int protoIdx)
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x124D094", Offset = "0x124D094", VA = "0x124D094")]
		public void UnspawnTree(int protoIdx)
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x1246FBC", Offset = "0x1246FBC", VA = "0x1246FBC")]
		private float JitterAsPct(float value, float percent)
		{
			return default(float);
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x1247008", Offset = "0x1247008", VA = "0x1247008")]
		private float JitterAround(float value, float delta)
		{
			return default(float);
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x124D380", Offset = "0x124D380", VA = "0x124D380")]
		public static Vector3 ScaleToNearestInt(Vector3 sourceScale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x124D3DC", Offset = "0x124D3DC", VA = "0x124D3DC")]
		private void CombineMeshes(GameObject go)
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x1243ED8", Offset = "0x1243ED8", VA = "0x1243ED8")]
		private Terrain GetTerrain(Vector3 location)
		{
			return null;
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x124D77C", Offset = "0x124D77C", VA = "0x124D77C")]
		private bool GetTerrainBounds(Terrain terrain, ref Bounds bounds)
		{
			return default(bool);
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x124D83C", Offset = "0x124D83C", VA = "0x124D83C")]
		private bool GetTerrainBounds(Vector3 location, ref Bounds bounds)
		{
			return default(bool);
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x1246DD0", Offset = "0x1246DD0", VA = "0x1246DD0")]
		private bool GetObjectBounds(GameObject go, ref Bounds bounds)
		{
			return default(bool);
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x124A91C", Offset = "0x124A91C", VA = "0x124A91C")]
		public static bool ApproximatelyEqual(float a, float b, float delta = float.Epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x12487F0", Offset = "0x12487F0", VA = "0x12487F0")]
		public static Vector3 RotatePointAroundPivot(Vector3 point, Vector3 pivot, Vector3 angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x124C7E4", Offset = "0x124C7E4", VA = "0x124C7E4")]
		public static Vector3 RotatePointAroundPivot(Vector3 point, Vector3 pivot, Quaternion angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x124C6A4", Offset = "0x124C6A4", VA = "0x124C6A4")]
		private float RGBDifference(Color c1, Color c2)
		{
			return default(float);
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x124D978", Offset = "0x124D978", VA = "0x124D978")]
		private Vector3 RGBtoLAB(Color c)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x124D98C", Offset = "0x124D98C", VA = "0x124D98C")]
		private Vector3 RGBtoXYZ(Color c)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0x124DAE8", Offset = "0x124DAE8", VA = "0x124DAE8")]
		private Vector3 XYZtoLAB(Vector3 c)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x124DC20", Offset = "0x124DC20", VA = "0x124DC20")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x124E050", Offset = "0x124E050", VA = "0x124E050", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x124E2D0", Offset = "0x124E2D0", VA = "0x124E2D0", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x124E460", Offset = "0x124E460", VA = "0x124E460")]
		public Spawner()
		{
		}
	}
	[Token(Token = "0x200015B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x57185C", Offset = "0x57185C")]
	public class SpawnerPreset : ScriptableObject, ISerializationCallbackReceiver
	{
		[Serializable]
		[Token(Token = "0x20004E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572BA8", Offset = "0x572BA8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SpawnerPreset> <>9__2_0;

			[Token(Token = "0x6002257")]
			[Address(RVA = "0x8769E0", Offset = "0x8769E0", VA = "0x8769E0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002258")]
			[Address(RVA = "0x8769E8", Offset = "0x8769E8", VA = "0x8769E8")]
			internal bool <get_AvailablePresets>b__2_0(SpawnerPreset preset)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000D5A")]
		public const string PRESETS_FOLDER = "GeNa Presets";

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static HashSet<SpawnerPreset> ms_availablePresets;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static bool ms_dirty;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected HashSet<string> m_activeProperties;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string[] _activeProperties;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D9B4", Offset = "0x57D9B4")]
		private readonly bool <CTGRHDR_Overview>k__BackingField;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected string m_parentName;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected Constants.SpawnerType m_type;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		protected Constants.SpawnMode m_spawnMode;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected float m_flowDistance;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		protected Constants.SpawnRangeShape m_spawnRangeShape;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected int m_randomSeed;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		protected float m_maxSpawnRange;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected float m_seedThrowRange;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected long m_minInstances;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected long m_maxInstances;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected bool m_mergeSpawns;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[SerializeField]
		protected bool m_doSectorise;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		protected int m_sectorReparentingMode;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DA94", Offset = "0x57DA94")]
		private readonly bool <CTGRHDR_PlacementCriteria>k__BackingField;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		protected Constants.LocationAlgorithm m_spawnAlgorithm;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected float m_seedThrowJitter;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		protected Constants.RotationAlgorithm m_rotationAlgorithm;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected bool m_enableRotationDragUpdate;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		protected float m_minRotationY;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		protected float m_maxRotationY;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		protected bool m_sameScale;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected float m_minScaleX;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		protected float m_maxScaleX;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected float m_minScaleY;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		protected float m_maxScaleY;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		protected float m_minScaleZ;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		protected float m_maxScaleZ;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		protected bool m_useGravity;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DB84", Offset = "0x57DB84")]
		private readonly bool <CTGRHDR_SpawnCriteria>k__BackingField;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		protected Constants.VirginCheckType m_critVirginCheckType;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		protected float m_critBoundsBorder;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public LayerMask m_critSpawnCollisionLayers;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		protected Constants.CriteriaRangeType m_critCheckHeightType;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		protected float m_critMinSpawnHeight;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		protected float m_critMaxSpawnHeight;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		protected float m_critHeightVariance;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		protected Constants.CriteriaRangeType m_critCheckSlopeType;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		protected float m_critMinSpawnSlope;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		protected float m_critMaxSpawnSlope;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		protected float m_critSlopeVariance;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		protected bool m_critCheckTextures;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		protected float m_critTextureStrength;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		protected float m_critTextureVariance;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		protected bool m_critCheckMask;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		protected Constants.MaskType m_critMaskType;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		protected float m_critMaskFractalMidpoint;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		protected float m_critMaskFractalRange;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		protected bool m_critMaskInvert;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DCB4", Offset = "0x57DCB4")]
		private readonly bool <CTGRHDR_PrototypesPanel>k__BackingField;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
		[SerializeField]
		protected bool m_sortPrototypes;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DCD4", Offset = "0x57DCD4")]
		private readonly bool <CTGRHDR_Advanced>k__BackingField;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		protected bool m_spawnToAVS;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		protected Constants.ChildSpawnMode m_childSpawnMode;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		protected bool m_spawnToTarget;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		[SerializeField]
		protected bool m_advForcePlaceAtClickLocation;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		[SerializeField]
		protected bool m_advUseLargeRanges;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x103")]
		[SerializeField]
		protected bool m_scaleToNearestInt;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		protected float m_globalSpawnJitterPct;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		protected float m_advSpawnCheckOffset;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		protected bool m_autoProbe;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		protected float m_minProbeGroupDistance;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		protected float m_minProbeDistance;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		protected bool m_autoOptimise;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		protected float m_maxSizeToOptimise;

		[Token(Token = "0x17000077")]
		public static HashSet<SpawnerPreset> AvailablePresets
		{
			[Token(Token = "0x6000847")]
			[Address(RVA = "0xB464C4", Offset = "0xB464C4", VA = "0xB464C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		public static bool Dirty
		{
			[Token(Token = "0x6000848")]
			[Address(RVA = "0xB46740", Offset = "0xB46740", VA = "0xB46740")]
			set
			{
			}
		}

		[Token(Token = "0x17000079")]
		public string Name
		{
			[Token(Token = "0x6000849")]
			[Address(RVA = "0xB467A8", Offset = "0xB467A8", VA = "0xB467A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		public List<string> ActiveOptions
		{
			[Token(Token = "0x600084A")]
			[Address(RVA = "0xB467B0", Offset = "0xB467B0", VA = "0xB467B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		public int NumberOfActiveOptions
		{
			[Token(Token = "0x600084B")]
			[Address(RVA = "0xB46828", Offset = "0xB46828", VA = "0xB46828")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700007C")]
		protected bool CTGRHDR_Overview
		{
			[Token(Token = "0x600084F")]
			[Address(RVA = "0xB469A0", Offset = "0xB469A0", VA = "0xB469A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590330", Offset = "0x590330")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007D")]
		public string ParentName
		{
			[Token(Token = "0x6000850")]
			[Address(RVA = "0xB469A8", Offset = "0xB469A8", VA = "0xB469A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000851")]
			[Address(RVA = "0xB469B0", Offset = "0xB469B0", VA = "0xB469B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public Constants.SpawnerType Type
		{
			[Token(Token = "0x6000852")]
			[Address(RVA = "0xB469B8", Offset = "0xB469B8", VA = "0xB469B8")]
			get
			{
				return default(Constants.SpawnerType);
			}
			[Token(Token = "0x6000853")]
			[Address(RVA = "0xB469C0", Offset = "0xB469C0", VA = "0xB469C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700007F")]
		public Constants.SpawnMode SpawnMode
		{
			[Token(Token = "0x6000854")]
			[Address(RVA = "0xB469C8", Offset = "0xB469C8", VA = "0xB469C8")]
			get
			{
				return default(Constants.SpawnMode);
			}
			[Token(Token = "0x6000855")]
			[Address(RVA = "0xB469D0", Offset = "0xB469D0", VA = "0xB469D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000080")]
		public float FlowDistance
		{
			[Token(Token = "0x6000856")]
			[Address(RVA = "0xB469D8", Offset = "0xB469D8", VA = "0xB469D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000857")]
			[Address(RVA = "0xB469E0", Offset = "0xB469E0", VA = "0xB469E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000081")]
		public Constants.SpawnRangeShape SpawnRangeShape
		{
			[Token(Token = "0x6000858")]
			[Address(RVA = "0xB469E8", Offset = "0xB469E8", VA = "0xB469E8")]
			get
			{
				return default(Constants.SpawnRangeShape);
			}
			[Token(Token = "0x6000859")]
			[Address(RVA = "0xB469F0", Offset = "0xB469F0", VA = "0xB469F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000082")]
		public int RandomSeed
		{
			[Token(Token = "0x600085A")]
			[Address(RVA = "0xB469F8", Offset = "0xB469F8", VA = "0xB469F8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600085B")]
			[Address(RVA = "0xB46A00", Offset = "0xB46A00", VA = "0xB46A00")]
			set
			{
			}
		}

		[Token(Token = "0x17000083")]
		public float MaxSpawnRange
		{
			[Token(Token = "0x600085C")]
			[Address(RVA = "0xB46A08", Offset = "0xB46A08", VA = "0xB46A08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600085D")]
			[Address(RVA = "0xB46A10", Offset = "0xB46A10", VA = "0xB46A10")]
			set
			{
			}
		}

		[Token(Token = "0x17000084")]
		public float SeedThrowRange
		{
			[Token(Token = "0x600085E")]
			[Address(RVA = "0xB46A18", Offset = "0xB46A18", VA = "0xB46A18")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600085F")]
			[Address(RVA = "0xB46A20", Offset = "0xB46A20", VA = "0xB46A20")]
			set
			{
			}
		}

		[Token(Token = "0x17000085")]
		public long MinInstances
		{
			[Token(Token = "0x6000860")]
			[Address(RVA = "0xB46A28", Offset = "0xB46A28", VA = "0xB46A28")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000861")]
			[Address(RVA = "0xB46A30", Offset = "0xB46A30", VA = "0xB46A30")]
			set
			{
			}
		}

		[Token(Token = "0x17000086")]
		public long MaxInstances
		{
			[Token(Token = "0x6000862")]
			[Address(RVA = "0xB46A38", Offset = "0xB46A38", VA = "0xB46A38")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000863")]
			[Address(RVA = "0xB46A40", Offset = "0xB46A40", VA = "0xB46A40")]
			set
			{
			}
		}

		[Token(Token = "0x17000087")]
		public bool MergeSpawns
		{
			[Token(Token = "0x6000864")]
			[Address(RVA = "0xB46A48", Offset = "0xB46A48", VA = "0xB46A48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000865")]
			[Address(RVA = "0xB46A50", Offset = "0xB46A50", VA = "0xB46A50")]
			set
			{
			}
		}

		[Token(Token = "0x17000088")]
		public bool DoSectorise
		{
			[Token(Token = "0x6000866")]
			[Address(RVA = "0xB46A5C", Offset = "0xB46A5C", VA = "0xB46A5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000867")]
			[Address(RVA = "0xB46A64", Offset = "0xB46A64", VA = "0xB46A64")]
			set
			{
			}
		}

		[Token(Token = "0x17000089")]
		public int SectorReparentingMode
		{
			[Token(Token = "0x6000868")]
			[Address(RVA = "0xB46A70", Offset = "0xB46A70", VA = "0xB46A70")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000869")]
			[Address(RVA = "0xB46A78", Offset = "0xB46A78", VA = "0xB46A78")]
			set
			{
			}
		}

		[Token(Token = "0x1700008A")]
		protected bool CTGRHDR_PlacementCriteria
		{
			[Token(Token = "0x600086A")]
			[Address(RVA = "0xB46A80", Offset = "0xB46A80", VA = "0xB46A80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590340", Offset = "0x590340")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008B")]
		public Constants.LocationAlgorithm SpawnAlgorithm
		{
			[Token(Token = "0x600086B")]
			[Address(RVA = "0xB46A88", Offset = "0xB46A88", VA = "0xB46A88")]
			get
			{
				return default(Constants.LocationAlgorithm);
			}
			[Token(Token = "0x600086C")]
			[Address(RVA = "0xB46A90", Offset = "0xB46A90", VA = "0xB46A90")]
			set
			{
			}
		}

		[Token(Token = "0x1700008C")]
		public float SeedThrowJitter
		{
			[Token(Token = "0x600086D")]
			[Address(RVA = "0xB46A98", Offset = "0xB46A98", VA = "0xB46A98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600086E")]
			[Address(RVA = "0xB46AA0", Offset = "0xB46AA0", VA = "0xB46AA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700008D")]
		public Constants.RotationAlgorithm RotationAlgorithm
		{
			[Token(Token = "0x600086F")]
			[Address(RVA = "0xB46AA8", Offset = "0xB46AA8", VA = "0xB46AA8")]
			get
			{
				return default(Constants.RotationAlgorithm);
			}
			[Token(Token = "0x6000870")]
			[Address(RVA = "0xB46AB0", Offset = "0xB46AB0", VA = "0xB46AB0")]
			set
			{
			}
		}

		[Token(Token = "0x1700008E")]
		public bool EnableRotationDragUpdate
		{
			[Token(Token = "0x6000871")]
			[Address(RVA = "0xB46AB8", Offset = "0xB46AB8", VA = "0xB46AB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000872")]
			[Address(RVA = "0xB46AC0", Offset = "0xB46AC0", VA = "0xB46AC0")]
			set
			{
			}
		}

		[Token(Token = "0x1700008F")]
		public float MinRotationY
		{
			[Token(Token = "0x6000873")]
			[Address(RVA = "0xB46ACC", Offset = "0xB46ACC", VA = "0xB46ACC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000874")]
			[Address(RVA = "0xB46AD4", Offset = "0xB46AD4", VA = "0xB46AD4")]
			set
			{
			}
		}

		[Token(Token = "0x17000090")]
		public float MaxRotationY
		{
			[Token(Token = "0x6000875")]
			[Address(RVA = "0xB46ADC", Offset = "0xB46ADC", VA = "0xB46ADC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000876")]
			[Address(RVA = "0xB46AE4", Offset = "0xB46AE4", VA = "0xB46AE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000091")]
		public bool SameScale
		{
			[Token(Token = "0x6000877")]
			[Address(RVA = "0xB46AEC", Offset = "0xB46AEC", VA = "0xB46AEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000878")]
			[Address(RVA = "0xB46AF4", Offset = "0xB46AF4", VA = "0xB46AF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000092")]
		public float MinScaleX
		{
			[Token(Token = "0x6000879")]
			[Address(RVA = "0xB46B00", Offset = "0xB46B00", VA = "0xB46B00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600087A")]
			[Address(RVA = "0xB46B08", Offset = "0xB46B08", VA = "0xB46B08")]
			set
			{
			}
		}

		[Token(Token = "0x17000093")]
		public float MaxScaleX
		{
			[Token(Token = "0x600087B")]
			[Address(RVA = "0xB46B10", Offset = "0xB46B10", VA = "0xB46B10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600087C")]
			[Address(RVA = "0xB46B18", Offset = "0xB46B18", VA = "0xB46B18")]
			set
			{
			}
		}

		[Token(Token = "0x17000094")]
		public float MinScaleY
		{
			[Token(Token = "0x600087D")]
			[Address(RVA = "0xB46B20", Offset = "0xB46B20", VA = "0xB46B20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600087E")]
			[Address(RVA = "0xB46B28", Offset = "0xB46B28", VA = "0xB46B28")]
			set
			{
			}
		}

		[Token(Token = "0x17000095")]
		public float MaxScaleY
		{
			[Token(Token = "0x600087F")]
			[Address(RVA = "0xB46B30", Offset = "0xB46B30", VA = "0xB46B30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000880")]
			[Address(RVA = "0xB46B38", Offset = "0xB46B38", VA = "0xB46B38")]
			set
			{
			}
		}

		[Token(Token = "0x17000096")]
		public float MinScaleZ
		{
			[Token(Token = "0x6000881")]
			[Address(RVA = "0xB46B40", Offset = "0xB46B40", VA = "0xB46B40")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000882")]
			[Address(RVA = "0xB46B48", Offset = "0xB46B48", VA = "0xB46B48")]
			set
			{
			}
		}

		[Token(Token = "0x17000097")]
		public float MaxScaleZ
		{
			[Token(Token = "0x6000883")]
			[Address(RVA = "0xB46B50", Offset = "0xB46B50", VA = "0xB46B50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000884")]
			[Address(RVA = "0xB46B58", Offset = "0xB46B58", VA = "0xB46B58")]
			set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public bool UseGravity
		{
			[Token(Token = "0x6000885")]
			[Address(RVA = "0xB46B60", Offset = "0xB46B60", VA = "0xB46B60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000886")]
			[Address(RVA = "0xB46B68", Offset = "0xB46B68", VA = "0xB46B68")]
			set
			{
			}
		}

		[Token(Token = "0x17000099")]
		protected bool CTGRHDR_SpawnCriteria
		{
			[Token(Token = "0x6000887")]
			[Address(RVA = "0xB46B74", Offset = "0xB46B74", VA = "0xB46B74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590350", Offset = "0x590350")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009A")]
		public Constants.VirginCheckType CritVirginCheckType
		{
			[Token(Token = "0x6000888")]
			[Address(RVA = "0xB46B7C", Offset = "0xB46B7C", VA = "0xB46B7C")]
			get
			{
				return default(Constants.VirginCheckType);
			}
			[Token(Token = "0x6000889")]
			[Address(RVA = "0xB46B84", Offset = "0xB46B84", VA = "0xB46B84")]
			set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public float CritBoundsBorder
		{
			[Token(Token = "0x600088A")]
			[Address(RVA = "0xB46B8C", Offset = "0xB46B8C", VA = "0xB46B8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600088B")]
			[Address(RVA = "0xB46B94", Offset = "0xB46B94", VA = "0xB46B94")]
			set
			{
			}
		}

		[Token(Token = "0x1700009C")]
		public Constants.CriteriaRangeType CritCheckHeightType
		{
			[Token(Token = "0x600088C")]
			[Address(RVA = "0xB46B9C", Offset = "0xB46B9C", VA = "0xB46B9C")]
			get
			{
				return default(Constants.CriteriaRangeType);
			}
			[Token(Token = "0x600088D")]
			[Address(RVA = "0xB46BA4", Offset = "0xB46BA4", VA = "0xB46BA4")]
			set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public float CritMinSpawnHeight
		{
			[Token(Token = "0x600088E")]
			[Address(RVA = "0xB46BAC", Offset = "0xB46BAC", VA = "0xB46BAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600088F")]
			[Address(RVA = "0xB46BB4", Offset = "0xB46BB4", VA = "0xB46BB4")]
			set
			{
			}
		}

		[Token(Token = "0x1700009E")]
		public float CritMaxSpawnHeight
		{
			[Token(Token = "0x6000890")]
			[Address(RVA = "0xB46BBC", Offset = "0xB46BBC", VA = "0xB46BBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000891")]
			[Address(RVA = "0xB46BC4", Offset = "0xB46BC4", VA = "0xB46BC4")]
			set
			{
			}
		}

		[Token(Token = "0x1700009F")]
		public float CritHeightVariance
		{
			[Token(Token = "0x6000892")]
			[Address(RVA = "0xB46BCC", Offset = "0xB46BCC", VA = "0xB46BCC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000893")]
			[Address(RVA = "0xB46BD4", Offset = "0xB46BD4", VA = "0xB46BD4")]
			set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public Constants.CriteriaRangeType CritCheckSlopeType
		{
			[Token(Token = "0x6000894")]
			[Address(RVA = "0xB46BDC", Offset = "0xB46BDC", VA = "0xB46BDC")]
			get
			{
				return default(Constants.CriteriaRangeType);
			}
			[Token(Token = "0x6000895")]
			[Address(RVA = "0xB46BE4", Offset = "0xB46BE4", VA = "0xB46BE4")]
			set
			{
			}
		}

		[Token(Token = "0x170000A1")]
		public float CritMinSpawnSlope
		{
			[Token(Token = "0x6000896")]
			[Address(RVA = "0xB46BEC", Offset = "0xB46BEC", VA = "0xB46BEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000897")]
			[Address(RVA = "0xB46BF4", Offset = "0xB46BF4", VA = "0xB46BF4")]
			set
			{
			}
		}

		[Token(Token = "0x170000A2")]
		public float CritMaxSpawnSlope
		{
			[Token(Token = "0x6000898")]
			[Address(RVA = "0xB46C28", Offset = "0xB46C28", VA = "0xB46C28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000899")]
			[Address(RVA = "0xB46C30", Offset = "0xB46C30", VA = "0xB46C30")]
			set
			{
			}
		}

		[Token(Token = "0x170000A3")]
		public float CritSlopeVariance
		{
			[Token(Token = "0x600089A")]
			[Address(RVA = "0xB46C64", Offset = "0xB46C64", VA = "0xB46C64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600089B")]
			[Address(RVA = "0xB46C6C", Offset = "0xB46C6C", VA = "0xB46C6C")]
			set
			{
			}
		}

		[Token(Token = "0x170000A4")]
		public bool CritCheckTextures
		{
			[Token(Token = "0x600089C")]
			[Address(RVA = "0xB46C74", Offset = "0xB46C74", VA = "0xB46C74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600089D")]
			[Address(RVA = "0xB46C7C", Offset = "0xB46C7C", VA = "0xB46C7C")]
			set
			{
			}
		}

		[Token(Token = "0x170000A5")]
		public float CritTextureStrength
		{
			[Token(Token = "0x600089E")]
			[Address(RVA = "0xB46C88", Offset = "0xB46C88", VA = "0xB46C88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600089F")]
			[Address(RVA = "0xB46C90", Offset = "0xB46C90", VA = "0xB46C90")]
			set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		public float CritTextureVariance
		{
			[Token(Token = "0x60008A0")]
			[Address(RVA = "0xB46C98", Offset = "0xB46C98", VA = "0xB46C98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008A1")]
			[Address(RVA = "0xB46CA0", Offset = "0xB46CA0", VA = "0xB46CA0")]
			set
			{
			}
		}

		[Token(Token = "0x170000A7")]
		public bool CritCheckMask
		{
			[Token(Token = "0x60008A2")]
			[Address(RVA = "0xB46CA8", Offset = "0xB46CA8", VA = "0xB46CA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008A3")]
			[Address(RVA = "0xB46CB0", Offset = "0xB46CB0", VA = "0xB46CB0")]
			set
			{
			}
		}

		[Token(Token = "0x170000A8")]
		public Constants.MaskType CritMaskType
		{
			[Token(Token = "0x60008A4")]
			[Address(RVA = "0xB46CBC", Offset = "0xB46CBC", VA = "0xB46CBC")]
			get
			{
				return default(Constants.MaskType);
			}
			[Token(Token = "0x60008A5")]
			[Address(RVA = "0xB46CC4", Offset = "0xB46CC4", VA = "0xB46CC4")]
			set
			{
			}
		}

		[Token(Token = "0x170000A9")]
		public float CritMaskFractalMidpoint
		{
			[Token(Token = "0x60008A6")]
			[Address(RVA = "0xB46CCC", Offset = "0xB46CCC", VA = "0xB46CCC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008A7")]
			[Address(RVA = "0xB46CD4", Offset = "0xB46CD4", VA = "0xB46CD4")]
			set
			{
			}
		}

		[Token(Token = "0x170000AA")]
		public float CritMaskFractalRange
		{
			[Token(Token = "0x60008A8")]
			[Address(RVA = "0xB46CDC", Offset = "0xB46CDC", VA = "0xB46CDC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008A9")]
			[Address(RVA = "0xB46CE4", Offset = "0xB46CE4", VA = "0xB46CE4")]
			set
			{
			}
		}

		[Token(Token = "0x170000AB")]
		public bool CritMaskInvert
		{
			[Token(Token = "0x60008AA")]
			[Address(RVA = "0xB46CEC", Offset = "0xB46CEC", VA = "0xB46CEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008AB")]
			[Address(RVA = "0xB46CF4", Offset = "0xB46CF4", VA = "0xB46CF4")]
			set
			{
			}
		}

		[Token(Token = "0x170000AC")]
		protected bool CTGRHDR_PrototypesPanel
		{
			[Token(Token = "0x60008AC")]
			[Address(RVA = "0xB46D00", Offset = "0xB46D00", VA = "0xB46D00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590360", Offset = "0x590360")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AD")]
		public bool SortPrototypes
		{
			[Token(Token = "0x60008AD")]
			[Address(RVA = "0xB46D08", Offset = "0xB46D08", VA = "0xB46D08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008AE")]
			[Address(RVA = "0xB46D10", Offset = "0xB46D10", VA = "0xB46D10")]
			set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		protected bool CTGRHDR_Advanced
		{
			[Token(Token = "0x60008AF")]
			[Address(RVA = "0xB46D1C", Offset = "0xB46D1C", VA = "0xB46D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590370", Offset = "0x590370")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AF")]
		public bool SpawnToAVS
		{
			[Token(Token = "0x60008B0")]
			[Address(RVA = "0xB46D24", Offset = "0xB46D24", VA = "0xB46D24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008B1")]
			[Address(RVA = "0xB46D2C", Offset = "0xB46D2C", VA = "0xB46D2C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B0")]
		public Constants.ChildSpawnMode ChildSpawnMode
		{
			[Token(Token = "0x60008B2")]
			[Address(RVA = "0xB46D38", Offset = "0xB46D38", VA = "0xB46D38")]
			get
			{
				return default(Constants.ChildSpawnMode);
			}
			[Token(Token = "0x60008B3")]
			[Address(RVA = "0xB46D40", Offset = "0xB46D40", VA = "0xB46D40")]
			set
			{
			}
		}

		[Token(Token = "0x170000B1")]
		public bool SpawnToTarget
		{
			[Token(Token = "0x60008B4")]
			[Address(RVA = "0xB46D48", Offset = "0xB46D48", VA = "0xB46D48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008B5")]
			[Address(RVA = "0xB46D50", Offset = "0xB46D50", VA = "0xB46D50")]
			set
			{
			}
		}

		[Token(Token = "0x170000B2")]
		public bool AdvForcePlaceAtClickLocation
		{
			[Token(Token = "0x60008B6")]
			[Address(RVA = "0xB46D5C", Offset = "0xB46D5C", VA = "0xB46D5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008B7")]
			[Address(RVA = "0xB46D64", Offset = "0xB46D64", VA = "0xB46D64")]
			set
			{
			}
		}

		[Token(Token = "0x170000B3")]
		public bool AdvUseLargeRanges
		{
			[Token(Token = "0x60008B8")]
			[Address(RVA = "0xB46D70", Offset = "0xB46D70", VA = "0xB46D70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008B9")]
			[Address(RVA = "0xB46D78", Offset = "0xB46D78", VA = "0xB46D78")]
			set
			{
			}
		}

		[Token(Token = "0x170000B4")]
		public bool ScaleToNearestInt
		{
			[Token(Token = "0x60008BA")]
			[Address(RVA = "0xB46D84", Offset = "0xB46D84", VA = "0xB46D84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008BB")]
			[Address(RVA = "0xB46D8C", Offset = "0xB46D8C", VA = "0xB46D8C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B5")]
		public float GlobalSpawnJitterPct
		{
			[Token(Token = "0x60008BC")]
			[Address(RVA = "0xB46D98", Offset = "0xB46D98", VA = "0xB46D98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008BD")]
			[Address(RVA = "0xB46DA0", Offset = "0xB46DA0", VA = "0xB46DA0")]
			set
			{
			}
		}

		[Token(Token = "0x170000B6")]
		public float AdvSpawnCheckOffset
		{
			[Token(Token = "0x60008BE")]
			[Address(RVA = "0xB46DA8", Offset = "0xB46DA8", VA = "0xB46DA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008BF")]
			[Address(RVA = "0xB46DB0", Offset = "0xB46DB0", VA = "0xB46DB0")]
			set
			{
			}
		}

		[Token(Token = "0x170000B7")]
		public bool AutoProbe
		{
			[Token(Token = "0x60008C0")]
			[Address(RVA = "0xB46DB8", Offset = "0xB46DB8", VA = "0xB46DB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008C1")]
			[Address(RVA = "0xB46DC0", Offset = "0xB46DC0", VA = "0xB46DC0")]
			set
			{
			}
		}

		[Token(Token = "0x170000B8")]
		public float MinProbeGroupDistance
		{
			[Token(Token = "0x60008C2")]
			[Address(RVA = "0xB46DCC", Offset = "0xB46DCC", VA = "0xB46DCC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008C3")]
			[Address(RVA = "0xB46DD4", Offset = "0xB46DD4", VA = "0xB46DD4")]
			set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		public float MinProbeDistance
		{
			[Token(Token = "0x60008C4")]
			[Address(RVA = "0xB46DDC", Offset = "0xB46DDC", VA = "0xB46DDC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008C5")]
			[Address(RVA = "0xB46DE4", Offset = "0xB46DE4", VA = "0xB46DE4")]
			set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public bool AutoOptimise
		{
			[Token(Token = "0x60008C6")]
			[Address(RVA = "0xB46DEC", Offset = "0xB46DEC", VA = "0xB46DEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008C7")]
			[Address(RVA = "0xB46DF4", Offset = "0xB46DF4", VA = "0xB46DF4")]
			set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public float MaxSizeToOptimise
		{
			[Token(Token = "0x60008C8")]
			[Address(RVA = "0xB46E00", Offset = "0xB46E00", VA = "0xB46E00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008C9")]
			[Address(RVA = "0xB46E08", Offset = "0xB46E08", VA = "0xB46E08")]
			set
			{
			}
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0xB46874", Offset = "0xB46874", VA = "0xB46874")]
		public bool IsActiveProperty(string propertyName)
		{
			return default(bool);
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0xB468D8", Offset = "0xB468D8", VA = "0xB468D8")]
		public void ActivateOption(string propertyName)
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0xB4693C", Offset = "0xB4693C", VA = "0xB4693C")]
		public void DeactivateOption(string propertyName)
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xB46E10", Offset = "0xB46E10", VA = "0xB46E10", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0xB46E18", Offset = "0xB46E18", VA = "0xB46E18")]
		public void Awake()
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xB46E80", Offset = "0xB46E80", VA = "0xB46E80")]
		public void Apply(Spawner target)
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xB47984", Offset = "0xB47984", VA = "0xB47984")]
		public void FromSpawner(Spawner source)
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xB47BB8", Offset = "0xB47BB8", VA = "0xB47BB8", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xB47C64", Offset = "0xB47C64", VA = "0xB47C64", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xB47D10", Offset = "0xB47D10", VA = "0xB47D10")]
		public SpawnerPreset()
		{
		}
	}
	[Token(Token = "0x200015C")]
	public class SplatPainter
	{
		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DDB4", Offset = "0x57DDB4")]
		private int <Size>k__BackingField;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DDC4", Offset = "0x57DDC4")]
		private float <Opacity>k__BackingField;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DDD4", Offset = "0x57DDD4")]
		private float <TargetStrength>k__BackingField;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DDE4", Offset = "0x57DDE4")]
		private UBrush <Brush>k__BackingField;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DDF4", Offset = "0x57DDF4")]
		private TerrainData <TerrainData>k__BackingField;

		[Token(Token = "0x170000BC")]
		public int Size
		{
			[Token(Token = "0x60008D2")]
			[Address(RVA = "0xB4874C", Offset = "0xB4874C", VA = "0xB4874C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590380", Offset = "0x590380")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008D3")]
			[Address(RVA = "0xB48754", Offset = "0xB48754", VA = "0xB48754")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590390", Offset = "0x590390")]
			set
			{
			}
		}

		[Token(Token = "0x170000BD")]
		public float Opacity
		{
			[Token(Token = "0x60008D4")]
			[Address(RVA = "0xB4875C", Offset = "0xB4875C", VA = "0xB4875C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5903A0", Offset = "0x5903A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008D5")]
			[Address(RVA = "0xB48764", Offset = "0xB48764", VA = "0xB48764")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5903B0", Offset = "0x5903B0")]
			set
			{
			}
		}

		[Token(Token = "0x170000BE")]
		public float TargetStrength
		{
			[Token(Token = "0x60008D6")]
			[Address(RVA = "0xB4876C", Offset = "0xB4876C", VA = "0xB4876C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5903C0", Offset = "0x5903C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008D7")]
			[Address(RVA = "0xB48774", Offset = "0xB48774", VA = "0xB48774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5903D0", Offset = "0x5903D0")]
			set
			{
			}
		}

		[Token(Token = "0x170000BF")]
		public UBrush Brush
		{
			[Token(Token = "0x60008D8")]
			[Address(RVA = "0xB4877C", Offset = "0xB4877C", VA = "0xB4877C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5903E0", Offset = "0x5903E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008D9")]
			[Address(RVA = "0xB48784", Offset = "0xB48784", VA = "0xB48784")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5903F0", Offset = "0x5903F0")]
			set
			{
			}
		}

		[Token(Token = "0x170000C0")]
		public TerrainData TerrainData
		{
			[Token(Token = "0x60008DA")]
			[Address(RVA = "0xB4878C", Offset = "0xB4878C", VA = "0xB4878C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590400", Offset = "0x590400")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008DB")]
			[Address(RVA = "0xB48794", Offset = "0xB48794", VA = "0xB48794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590410", Offset = "0x590410")]
			private set
			{
			}
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xB4879C", Offset = "0xB4879C", VA = "0xB4879C")]
		public SplatPainter(TerrainData terrainData)
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xB487C8", Offset = "0xB487C8", VA = "0xB487C8")]
		public void Paint(float xCenterNormalized, float yCenterNormalized, int splatIndex)
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xB48BD0", Offset = "0xB48BD0", VA = "0xB48BD0")]
		private float ApplyBrush(float alpha, float brushStrength)
		{
			return default(float);
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xB48BFC", Offset = "0xB48BFC", VA = "0xB48BFC")]
		private void Normalize(int x, int y, int splatIndex, float[,,] alphamap)
		{
		}
	}
	[Token(Token = "0x200015D")]
	[ExecuteInEditMode]
	public class TerrainEvents : MonoBehaviour
	{
		[Token(Token = "0x20004E4")]
		[Flags]
		internal enum TerrainChangedFlags
		{
			[Token(Token = "0x4002CA4")]
			NoChange = 0,
			[Token(Token = "0x4002CA5")]
			Heightmap = 1,
			[Token(Token = "0x4002CA6")]
			TreeInstances = 2,
			[Token(Token = "0x4002CA7")]
			DelayedHeightmapUpdate = 4,
			[Token(Token = "0x4002CA8")]
			FlushEverythingImmediately = 8,
			[Token(Token = "0x4002CA9")]
			RemoveDirtyDetailsImmediately = 0x10,
			[Token(Token = "0x4002CAA")]
			WillBeDestroyed = 0x100
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xB06014", Offset = "0xB06014", VA = "0xB06014")]
		private void OnTerrainChanged(int flags)
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xB060B0", Offset = "0xB060B0", VA = "0xB060B0")]
		public TerrainEvents()
		{
		}
	}
	[Token(Token = "0x200015E")]
	public class TreeManager
	{
		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<TreePrototype> m_terrainTrees;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Quadtree<int> m_terrainTreeLocations;

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xA2BBF4", Offset = "0xA2BBF4", VA = "0xA2BBF4")]
		public void LoadTreesFromTerrain()
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xA2C154", Offset = "0xA2C154", VA = "0xA2C154")]
		public void AddTree(Vector3 position, int prototypeIdx)
		{
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xA2C1E0", Offset = "0xA2C1E0", VA = "0xA2C1E0")]
		public int Count(Vector3 position, float range)
		{
			return default(int);
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xA2C2B0", Offset = "0xA2C2B0", VA = "0xA2C2B0")]
		public int Count()
		{
			return default(int);
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xA2C300", Offset = "0xA2C300", VA = "0xA2C300")]
		public TreeManager()
		{
		}
	}
	[Token(Token = "0x200015F")]
	public class XorshiftPlus
	{
		[Token(Token = "0x4000DA7")]
		private const ulong m_A_Init = 181353uL;

		[Token(Token = "0x4000DA8")]
		private const ulong m_B_Init = 7uL;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_seed;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong m_stateA;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ulong m_stateB;

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x945050", Offset = "0x945050", VA = "0x945050")]
		public XorshiftPlus(int seed = 1)
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x9450A4", Offset = "0x9450A4", VA = "0x9450A4")]
		public void Reset()
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x9450CC", Offset = "0x9450CC", VA = "0x9450CC")]
		public void Reset(int seed)
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x9450FC", Offset = "0x9450FC", VA = "0x9450FC")]
		public void Reset(ulong stateA, ulong stateB)
		{
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x9451E8", Offset = "0x9451E8", VA = "0x9451E8")]
		public void GetState(out int seed, out ulong stateA, out ulong stateB)
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x945204", Offset = "0x945204", VA = "0x945204")]
		public float Next()
		{
			return default(float);
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x945238", Offset = "0x945238", VA = "0x945238")]
		public int NextInt()
		{
			return default(int);
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x945274", Offset = "0x945274", VA = "0x945274")]
		public float Next(float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x9452B8", Offset = "0x9452B8", VA = "0x9452B8")]
		public int Next(int min, int max)
		{
			return default(int);
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x94531C", Offset = "0x94531C", VA = "0x94531C")]
		public Vector3 NextVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x945390", Offset = "0x945390", VA = "0x945390")]
		public Vector3 NextVector(float min, float max)
		{
			return default(Vector3);
		}
	}
}
namespace GeNa.Internal
{
	[Token(Token = "0x2000160")]
	public static class GeNaUndo
	{
		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xBF6044", Offset = "0xBF6044", VA = "0xBF6044")]
		internal static UndoDropStack NewStack()
		{
			return null;
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xBF60DC", Offset = "0xBF60DC", VA = "0xBF60DC")]
		internal static UndoDropStack NewStack(List<UndoRecord> records)
		{
			return null;
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xBF6184", Offset = "0xBF6184", VA = "0xBF6184")]
		public static void RecordUndo(UndoRecord record)
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xBF6330", Offset = "0xBF6330", VA = "0xBF6330")]
		public static void RecordRedo(UndoRecord record)
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xBF6334", Offset = "0xBF6334", VA = "0xBF6334")]
		public static string GetUndoDescription(Spawner spawner)
		{
			return null;
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0xBF63A0", Offset = "0xBF63A0", VA = "0xBF63A0")]
		public static void Undo(Spawner spawner)
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xBF832C", Offset = "0xBF832C", VA = "0xBF832C")]
		public static void Undo(Spawner spawner, int count)
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xBF8368", Offset = "0xBF8368", VA = "0xBF8368")]
		public static void UndoAll(Spawner spawner)
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xBF65D0", Offset = "0xBF65D0", VA = "0xBF65D0")]
		private static void ProcessUndo(UndoRecord record)
		{
		}
	}
	[Token(Token = "0x2000161")]
	internal class GeNaUndoSnapshot
	{
		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DE04", Offset = "0x57DE04")]
		private int <PrefabUndoCount>k__BackingField;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DE14", Offset = "0x57DE14")]
		private int <ProbeUndoCount>k__BackingField;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DE24", Offset = "0x57DE24")]
		private int <ParentUndoCount>k__BackingField;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DE34", Offset = "0x57DE34")]
		private long <SpawnerInstanceCount>k__BackingField;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DE44", Offset = "0x57DE44")]
		private long[] <ProtoInstanceCounts>k__BackingField;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DE54", Offset = "0x57DE54")]
		private long[][] <ResourceInstanceCounts>k__BackingField;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DE64", Offset = "0x57DE64")]
		private float[,] <Heightmap>k__BackingField;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DE74", Offset = "0x57DE74")]
		private float[,,] <Splatmap>k__BackingField;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DE84", Offset = "0x57DE84")]
		private int[][,] <Detailmap>k__BackingField;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DE94", Offset = "0x57DE94")]
		private TreeInstance[] <TreeInstances>k__BackingField;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DEA4", Offset = "0x57DEA4")]
		private Spawner <Spawner>k__BackingField;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DEB4", Offset = "0x57DEB4")]
		private Transform <Target>k__BackingField;

		[Token(Token = "0x170000C1")]
		public int PrefabUndoCount
		{
			[Token(Token = "0x60008FB")]
			[Address(RVA = "0xBF83DC", Offset = "0xBF83DC", VA = "0xBF83DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590420", Offset = "0x590420")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008FC")]
			[Address(RVA = "0xBF83E4", Offset = "0xBF83E4", VA = "0xBF83E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590430", Offset = "0x590430")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C2")]
		public int ProbeUndoCount
		{
			[Token(Token = "0x60008FD")]
			[Address(RVA = "0xBF83EC", Offset = "0xBF83EC", VA = "0xBF83EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590440", Offset = "0x590440")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008FE")]
			[Address(RVA = "0xBF83F4", Offset = "0xBF83F4", VA = "0xBF83F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590450", Offset = "0x590450")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C3")]
		public int ParentUndoCount
		{
			[Token(Token = "0x60008FF")]
			[Address(RVA = "0xBF83FC", Offset = "0xBF83FC", VA = "0xBF83FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590460", Offset = "0x590460")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000900")]
			[Address(RVA = "0xBF8404", Offset = "0xBF8404", VA = "0xBF8404")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590470", Offset = "0x590470")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C4")]
		public long SpawnerInstanceCount
		{
			[Token(Token = "0x6000901")]
			[Address(RVA = "0xBF840C", Offset = "0xBF840C", VA = "0xBF840C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590480", Offset = "0x590480")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000902")]
			[Address(RVA = "0xBF8414", Offset = "0xBF8414", VA = "0xBF8414")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590490", Offset = "0x590490")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C5")]
		public long[] ProtoInstanceCounts
		{
			[Token(Token = "0x6000903")]
			[Address(RVA = "0xBF841C", Offset = "0xBF841C", VA = "0xBF841C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5904A0", Offset = "0x5904A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000904")]
			[Address(RVA = "0xBF8424", Offset = "0xBF8424", VA = "0xBF8424")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5904B0", Offset = "0x5904B0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C6")]
		public long[][] ResourceInstanceCounts
		{
			[Token(Token = "0x6000905")]
			[Address(RVA = "0xBF842C", Offset = "0xBF842C", VA = "0xBF842C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5904C0", Offset = "0x5904C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000906")]
			[Address(RVA = "0xBF8434", Offset = "0xBF8434", VA = "0xBF8434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5904D0", Offset = "0x5904D0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C7")]
		public float[,] Heightmap
		{
			[Token(Token = "0x6000907")]
			[Address(RVA = "0xBF843C", Offset = "0xBF843C", VA = "0xBF843C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5904E0", Offset = "0x5904E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000908")]
			[Address(RVA = "0xBF8444", Offset = "0xBF8444", VA = "0xBF8444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5904F0", Offset = "0x5904F0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C8")]
		public float[,,] Splatmap
		{
			[Token(Token = "0x6000909")]
			[Address(RVA = "0xBF844C", Offset = "0xBF844C", VA = "0xBF844C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590500", Offset = "0x590500")]
			get
			{
				return null;
			}
			[Token(Token = "0x600090A")]
			[Address(RVA = "0xBF8454", Offset = "0xBF8454", VA = "0xBF8454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590510", Offset = "0x590510")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public int[][,] Detailmap
		{
			[Token(Token = "0x600090B")]
			[Address(RVA = "0xBF845C", Offset = "0xBF845C", VA = "0xBF845C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590520", Offset = "0x590520")]
			get
			{
				return null;
			}
			[Token(Token = "0x600090C")]
			[Address(RVA = "0xBF8464", Offset = "0xBF8464", VA = "0xBF8464")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590530", Offset = "0x590530")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public TreeInstance[] TreeInstances
		{
			[Token(Token = "0x600090D")]
			[Address(RVA = "0xBF846C", Offset = "0xBF846C", VA = "0xBF846C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590540", Offset = "0x590540")]
			get
			{
				return null;
			}
			[Token(Token = "0x600090E")]
			[Address(RVA = "0xBF8474", Offset = "0xBF8474", VA = "0xBF8474")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590550", Offset = "0x590550")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CB")]
		public Spawner Spawner
		{
			[Token(Token = "0x600090F")]
			[Address(RVA = "0xBF847C", Offset = "0xBF847C", VA = "0xBF847C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590560", Offset = "0x590560")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000910")]
			[Address(RVA = "0xBF8484", Offset = "0xBF8484", VA = "0xBF8484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590570", Offset = "0x590570")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public Transform Target
		{
			[Token(Token = "0x6000911")]
			[Address(RVA = "0xBF848C", Offset = "0xBF848C", VA = "0xBF848C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590580", Offset = "0x590580")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000912")]
			[Address(RVA = "0xBF8494", Offset = "0xBF8494", VA = "0xBF8494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590590", Offset = "0x590590")]
			private set
			{
			}
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0xBF849C", Offset = "0xBF849C", VA = "0xBF849C")]
		public GeNaUndoSnapshot(Spawner spawner, Transform target)
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xBF84DC", Offset = "0xBF84DC", VA = "0xBF84DC")]
		public void Init(Spawner spawner, Transform target)
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0xBF8A54", Offset = "0xBF8A54", VA = "0xBF8A54")]
		protected GeNaUndoSnapshot()
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0xBF8A5C", Offset = "0xBF8A5C", VA = "0xBF8A5C")]
		public static UndoSnapshotDiff operator -(GeNaUndoSnapshot a, GeNaUndoSnapshot b)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000162")]
	public struct STreeInstance : IEquatable<STreeInstance>, IEquatable<TreeInstance>
	{
		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rotation;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int prototypeIndex;

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x8C2AC4", Offset = "0x8C2AC4", VA = "0x8C2AC4")]
		public STreeInstance(TreeInstance instance)
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x8C2AE8", Offset = "0x8C2AE8", VA = "0x8C2AE8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x8C2BE0", Offset = "0x8C2BE0", VA = "0x8C2BE0")]
		public static implicit operator STreeInstance(TreeInstance treeInstance)
		{
			return default(STreeInstance);
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x8C2C00", Offset = "0x8C2C00", VA = "0x8C2C00", Slot = "4")]
		public bool Equals(STreeInstance other)
		{
			return default(bool);
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x8C2C70", Offset = "0x8C2C70", VA = "0x8C2C70", Slot = "5")]
		public bool Equals(TreeInstance other)
		{
			return default(bool);
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x8C2CEC", Offset = "0x8C2CEC", VA = "0x8C2CEC")]
		private static bool CloseEnough(Vector3 a, Vector3 b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000163")]
	public class UndoComponent : MonoBehaviour
	{
		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UndoDropStack m_undoStack;

		[Token(Token = "0x170000CD")]
		public UndoDropStack UndoStack
		{
			[Token(Token = "0x600091D")]
			[Address(RVA = "0xC5A0C0", Offset = "0xC5A0C0", VA = "0xC5A0C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0xC5A0EC", Offset = "0xC5A0EC", VA = "0xC5A0EC")]
		public void ClearUndoStack()
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0xC5A114", Offset = "0xC5A114", VA = "0xC5A114")]
		public void UpdateUndoStack(List<UndoRecord> list)
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0xC5A140", Offset = "0xC5A140", VA = "0xC5A140")]
		public UndoComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000164")]
	public class UndoDropStack : DropStack<UndoRecord>
	{
		[Token(Token = "0x6000921")]
		[Address(RVA = "0xC5A148", Offset = "0xC5A148", VA = "0xC5A148")]
		public UndoDropStack(int capacity)
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0xC5A1A4", Offset = "0xC5A1A4", VA = "0xC5A1A4")]
		public UndoDropStack(int capacity, List<UndoRecord> records)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000165")]
	public class UndoRecord : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DED4", Offset = "0x57DED4")]
		private GeNaUndoSnapshot <Before>k__BackingField;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DEE4", Offset = "0x57DEE4")]
		private GeNaUndoSnapshot <After>k__BackingField;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UndoSnapshotDiff m_diffs;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ExtensionInstance[] m_spawnedExtensions;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Spawner m_actingSpawner;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_target;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string m_description;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int m_time;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Spawner[] m_childSpawners;

		[Token(Token = "0x170000CE")]
		internal GeNaUndoSnapshot Before
		{
			[Token(Token = "0x6000923")]
			[Address(RVA = "0xC5A208", Offset = "0xC5A208", VA = "0xC5A208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5905A0", Offset = "0x5905A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000924")]
			[Address(RVA = "0xC5A210", Offset = "0xC5A210", VA = "0xC5A210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5905B0", Offset = "0x5905B0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		internal GeNaUndoSnapshot After
		{
			[Token(Token = "0x6000925")]
			[Address(RVA = "0xC5A218", Offset = "0xC5A218", VA = "0xC5A218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5905C0", Offset = "0x5905C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000926")]
			[Address(RVA = "0xC5A220", Offset = "0xC5A220", VA = "0xC5A220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5905D0", Offset = "0x5905D0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		internal UndoSnapshotDiff Diffs
		{
			[Token(Token = "0x6000927")]
			[Address(RVA = "0xC5A228", Offset = "0xC5A228", VA = "0xC5A228")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D1")]
		internal ExtensionInstance[] SpawnedExtensions
		{
			[Token(Token = "0x6000928")]
			[Address(RVA = "0xC5A288", Offset = "0xC5A288", VA = "0xC5A288")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D2")]
		public string Description
		{
			[Token(Token = "0x6000929")]
			[Address(RVA = "0xC5A290", Offset = "0xC5A290", VA = "0xC5A290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D3")]
		public int Time
		{
			[Token(Token = "0x600092A")]
			[Address(RVA = "0xC5A298", Offset = "0xC5A298", VA = "0xC5A298")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D4")]
		public Spawner[] Childs
		{
			[Token(Token = "0x600092B")]
			[Address(RVA = "0xC5A2A0", Offset = "0xC5A2A0", VA = "0xC5A2A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D5")]
		public bool ContainSpawns
		{
			[Token(Token = "0x600092C")]
			[Address(RVA = "0xC5A2A8", Offset = "0xC5A2A8", VA = "0xC5A2A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0xC5A780", Offset = "0xC5A780", VA = "0xC5A780")]
		private UndoRecord()
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0xC5A7D4", Offset = "0xC5A7D4", VA = "0xC5A7D4")]
		public UndoRecord(Spawner spawner, Transform target, string description)
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0xC5A858", Offset = "0xC5A858", VA = "0xC5A858")]
		public void RecordBefore(Spawner spawner, Transform target, string description)
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0xC5A910", Offset = "0xC5A910", VA = "0xC5A910")]
		public void RecordAfter(string description)
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0xC5A25C", Offset = "0xC5A25C", VA = "0xC5A25C")]
		protected void GetDiffs()
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0xC5ABEC", Offset = "0xC5ABEC", VA = "0xC5ABEC", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0xC5AC24", Offset = "0xC5AC24", VA = "0xC5AC24", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000166")]
	internal class UndoSnapshotDiff : ISerializationCallbackReceiver
	{
		[Serializable]
		[Token(Token = "0x20004E5")]
		internal struct DetailDiff : ISerializationCallbackReceiver
		{
			[Token(Token = "0x4002CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			private int m_layerIndex;

			[Token(Token = "0x4002CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[SerializeField]
			private int m_baseX;

			[Token(Token = "0x4002CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			private int m_baseY;

			[Token(Token = "0x4002CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[SerializeField]
			private int m_width;

			[Token(Token = "0x4002CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private int m_height;

			[Token(Token = "0x4002CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58DB78", Offset = "0x58DB78")]
			private int[,] <Values>k__BackingField;

			[Token(Token = "0x4002CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private int[] _flatValues;

			[Token(Token = "0x170003CC")]
			public int LayerIndex
			{
				[Token(Token = "0x6002259")]
				[Address(RVA = "0x1376844", Offset = "0x1376844", VA = "0x1376844")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170003CD")]
			public int BaseX
			{
				[Token(Token = "0x600225A")]
				[Address(RVA = "0x137684C", Offset = "0x137684C", VA = "0x137684C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170003CE")]
			public int BaseY
			{
				[Token(Token = "0x600225B")]
				[Address(RVA = "0x1376854", Offset = "0x1376854", VA = "0x1376854")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170003CF")]
			public int Width
			{
				[Token(Token = "0x600225C")]
				[Address(RVA = "0x137685C", Offset = "0x137685C", VA = "0x137685C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170003D0")]
			public int Height
			{
				[Token(Token = "0x600225D")]
				[Address(RVA = "0x1376864", Offset = "0x1376864", VA = "0x1376864")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170003D1")]
			public int[,] Values
			{
				[Token(Token = "0x600225E")]
				[Address(RVA = "0x137686C", Offset = "0x137686C", VA = "0x137686C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x594A78", Offset = "0x594A78")]
				readonly get
				{
					return null;
				}
				[Token(Token = "0x600225F")]
				[Address(RVA = "0x1376874", Offset = "0x1376874", VA = "0x1376874")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x594AB0", Offset = "0x594AB0")]
				private set
				{
				}
			}

			[Token(Token = "0x6002260")]
			[Address(RVA = "0x137687C", Offset = "0x137687C", VA = "0x137687C")]
			public DetailDiff(int layerIndex, int baseX, int baseY, int[,] values)
			{
			}

			[Token(Token = "0x6002261")]
			[Address(RVA = "0x13768D8", Offset = "0x13768D8", VA = "0x13768D8", Slot = "4")]
			public void OnBeforeSerialize()
			{
			}

			[Token(Token = "0x6002262")]
			[Address(RVA = "0x13769D4", Offset = "0x13769D4", VA = "0x13769D4", Slot = "5")]
			public void OnAfterDeserialize()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572BC8", Offset = "0x572BC8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Converter<TreeInstance, STreeInstance> <>9__105_0;

			[Token(Token = "0x6002264")]
			[Address(RVA = "0x13767E8", Offset = "0x13767E8", VA = "0x13767E8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002265")]
			[Address(RVA = "0x13767F0", Offset = "0x13767F0", VA = "0x13767F0")]
			internal STreeInstance <Init>b__105_0(TreeInstance item)
			{
				return default(STreeInstance);
			}
		}

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private long m_spawnerInstanceCount;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private long[] m_protoInstanceCounts;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DF84", Offset = "0x57DF84")]
		private long[][] <ResourceInstanceCounts>k__BackingField;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private long[] _allResourceInstanceCounts;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int[] _resourceInstanceCountsLengths;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int m_heightmapWidth;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private int m_heightmapHeight;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57DFD4", Offset = "0x57DFD4")]
		private float[,] <HeightDiffs>k__BackingField;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float[] _flatHeightmap;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private int m_heightsBaseX;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private int m_heightsBaseY;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int m_heightsWidth;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private int m_heightsHeight;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private int m_splatmapWidth;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private int m_splatmapHeight;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int m_splatmapLayers;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E064", Offset = "0x57E064")]
		private float[,,] <SplatDiffs>k__BackingField;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float[] _flatSplatmap;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private int m_splatBaseX;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private int m_splatBaseY;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private int m_splatWidth;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private int m_splatHeight;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private int m_detailmapWidth;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private int m_detailmapHeight;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private int m_detailmapLayers;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private List<DetailDiff> m_detailDiffs;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E104", Offset = "0x57E104")]
		private HashSet<STreeInstance> <TreesAdded>k__BackingField;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private STreeInstance[] _treesAdded;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E124", Offset = "0x57E124")]
		private HashSet<STreeInstance> <TreesRemoved>k__BackingField;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private STreeInstance[] _treesRemoved;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Spawner m_spawner;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Transform m_target;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E164", Offset = "0x57E164")]
		private HashSet<GameObject> <SpawnedPrefabs>k__BackingField;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GameObject[] _spawnedPrefabsArray;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E184", Offset = "0x57E184")]
		private HashSet<GameObject> <SpawnedProbes>k__BackingField;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private GameObject[] _spawnedProbesArray;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E1A4", Offset = "0x57E1A4")]
		private HashSet<GameObject> <ParentsAdded>k__BackingField;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private GameObject[] _parentsAddedArray;

		[Token(Token = "0x170000D6")]
		public long SpawnerInstanceCount
		{
			[Token(Token = "0x6000934")]
			[Address(RVA = "0xC5AC30", Offset = "0xC5AC30", VA = "0xC5AC30")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170000D7")]
		public long[] ProtoInstanceCounts
		{
			[Token(Token = "0x6000935")]
			[Address(RVA = "0xC5AC38", Offset = "0xC5AC38", VA = "0xC5AC38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		public long[][] ResourceInstanceCounts
		{
			[Token(Token = "0x6000936")]
			[Address(RVA = "0xC5AC40", Offset = "0xC5AC40", VA = "0xC5AC40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5905E0", Offset = "0x5905E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000937")]
			[Address(RVA = "0xC5AC48", Offset = "0xC5AC48", VA = "0xC5AC48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5905F0", Offset = "0x5905F0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public int HeightmapWidth
		{
			[Token(Token = "0x6000938")]
			[Address(RVA = "0xC5AC50", Offset = "0xC5AC50", VA = "0xC5AC50")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000DA")]
		public int HeightmapHeight
		{
			[Token(Token = "0x6000939")]
			[Address(RVA = "0xC5AC58", Offset = "0xC5AC58", VA = "0xC5AC58")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000DB")]
		public float[,] HeightDiffs
		{
			[Token(Token = "0x600093A")]
			[Address(RVA = "0xC5AC60", Offset = "0xC5AC60", VA = "0xC5AC60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590600", Offset = "0x590600")]
			get
			{
				return null;
			}
			[Token(Token = "0x600093B")]
			[Address(RVA = "0xC5AC68", Offset = "0xC5AC68", VA = "0xC5AC68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590610", Offset = "0x590610")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public int HeightsBaseX
		{
			[Token(Token = "0x600093C")]
			[Address(RVA = "0xC5AC70", Offset = "0xC5AC70", VA = "0xC5AC70")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000DD")]
		public int HeightsBaseY
		{
			[Token(Token = "0x600093D")]
			[Address(RVA = "0xC5AC78", Offset = "0xC5AC78", VA = "0xC5AC78")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000DE")]
		public int HeightsWidth
		{
			[Token(Token = "0x600093E")]
			[Address(RVA = "0xC5AC80", Offset = "0xC5AC80", VA = "0xC5AC80")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000DF")]
		public int HeightsHeight
		{
			[Token(Token = "0x600093F")]
			[Address(RVA = "0xC5AC88", Offset = "0xC5AC88", VA = "0xC5AC88")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E0")]
		public int SplatmapWidth
		{
			[Token(Token = "0x6000940")]
			[Address(RVA = "0xC5AC90", Offset = "0xC5AC90", VA = "0xC5AC90")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E1")]
		public int SplatmapHeight
		{
			[Token(Token = "0x6000941")]
			[Address(RVA = "0xC5AC98", Offset = "0xC5AC98", VA = "0xC5AC98")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E2")]
		public int SplatmapLayers
		{
			[Token(Token = "0x6000942")]
			[Address(RVA = "0xC5ACA0", Offset = "0xC5ACA0", VA = "0xC5ACA0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E3")]
		public float[,,] SplatDiffs
		{
			[Token(Token = "0x6000943")]
			[Address(RVA = "0xC5ACA8", Offset = "0xC5ACA8", VA = "0xC5ACA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590620", Offset = "0x590620")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000944")]
			[Address(RVA = "0xC5ACB0", Offset = "0xC5ACB0", VA = "0xC5ACB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590630", Offset = "0x590630")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public int SplatBaseX
		{
			[Token(Token = "0x6000945")]
			[Address(RVA = "0xC5ACB8", Offset = "0xC5ACB8", VA = "0xC5ACB8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E5")]
		public int SplatBaseY
		{
			[Token(Token = "0x6000946")]
			[Address(RVA = "0xC5ACC0", Offset = "0xC5ACC0", VA = "0xC5ACC0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E6")]
		public int SplatWidth
		{
			[Token(Token = "0x6000947")]
			[Address(RVA = "0xC5ACC8", Offset = "0xC5ACC8", VA = "0xC5ACC8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E7")]
		public int SplatHeight
		{
			[Token(Token = "0x6000948")]
			[Address(RVA = "0xC5ACD0", Offset = "0xC5ACD0", VA = "0xC5ACD0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E8")]
		public int DetailmapWidth
		{
			[Token(Token = "0x6000949")]
			[Address(RVA = "0xC5ACD8", Offset = "0xC5ACD8", VA = "0xC5ACD8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E9")]
		public int DetailmapHeight
		{
			[Token(Token = "0x600094A")]
			[Address(RVA = "0xC5ACE0", Offset = "0xC5ACE0", VA = "0xC5ACE0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000EA")]
		public int DetailmapLayers
		{
			[Token(Token = "0x600094B")]
			[Address(RVA = "0xC5ACE8", Offset = "0xC5ACE8", VA = "0xC5ACE8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000EB")]
		public List<DetailDiff> DetailDiffs
		{
			[Token(Token = "0x600094C")]
			[Address(RVA = "0xC5ACF0", Offset = "0xC5ACF0", VA = "0xC5ACF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		public HashSet<STreeInstance> TreesAdded
		{
			[Token(Token = "0x600094D")]
			[Address(RVA = "0xC5ACF8", Offset = "0xC5ACF8", VA = "0xC5ACF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590640", Offset = "0x590640")]
			get
			{
				return null;
			}
			[Token(Token = "0x600094E")]
			[Address(RVA = "0xC5AD00", Offset = "0xC5AD00", VA = "0xC5AD00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590650", Offset = "0x590650")]
			private set
			{
			}
		}

		[Token(Token = "0x170000ED")]
		public HashSet<STreeInstance> TreesRemoved
		{
			[Token(Token = "0x600094F")]
			[Address(RVA = "0xC5AD08", Offset = "0xC5AD08", VA = "0xC5AD08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590660", Offset = "0x590660")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000950")]
			[Address(RVA = "0xC5AD10", Offset = "0xC5AD10", VA = "0xC5AD10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590670", Offset = "0x590670")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EE")]
		public Spawner Spawner
		{
			[Token(Token = "0x6000951")]
			[Address(RVA = "0xC5AD18", Offset = "0xC5AD18", VA = "0xC5AD18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		public Transform Target
		{
			[Token(Token = "0x6000952")]
			[Address(RVA = "0xC5AD20", Offset = "0xC5AD20", VA = "0xC5AD20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		internal HashSet<GameObject> SpawnedPrefabs
		{
			[Token(Token = "0x6000953")]
			[Address(RVA = "0xC5AD28", Offset = "0xC5AD28", VA = "0xC5AD28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590680", Offset = "0x590680")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000954")]
			[Address(RVA = "0xC5AD30", Offset = "0xC5AD30", VA = "0xC5AD30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590690", Offset = "0x590690")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		internal HashSet<GameObject> SpawnedProbes
		{
			[Token(Token = "0x6000955")]
			[Address(RVA = "0xC5AD38", Offset = "0xC5AD38", VA = "0xC5AD38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5906A0", Offset = "0x5906A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000956")]
			[Address(RVA = "0xC5AD40", Offset = "0xC5AD40", VA = "0xC5AD40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5906B0", Offset = "0x5906B0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		internal HashSet<GameObject> ParentsAdded
		{
			[Token(Token = "0x6000957")]
			[Address(RVA = "0xC5AD48", Offset = "0xC5AD48", VA = "0xC5AD48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5906C0", Offset = "0x5906C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000958")]
			[Address(RVA = "0xC5AD50", Offset = "0xC5AD50", VA = "0xC5AD50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5906D0", Offset = "0x5906D0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0xC5AD58", Offset = "0xC5AD58", VA = "0xC5AD58")]
		public UndoSnapshotDiff(GeNaUndoSnapshot before, GeNaUndoSnapshot after)
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0xC5AD98", Offset = "0xC5AD98", VA = "0xC5AD98")]
		public void Init(GeNaUndoSnapshot before, GeNaUndoSnapshot after)
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0xC5D010", Offset = "0xC5D010", VA = "0xC5D010")]
		private static bool MeaningfulDiff(float diff)
		{
			return default(bool);
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0xC5D170", Offset = "0xC5D170", VA = "0xC5D170")]
		protected UndoSnapshotDiff()
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0xC5D028", Offset = "0xC5D028", VA = "0xC5D028")]
		private static HashSet<TreeInstance> GetTreeArrayDiff(TreeInstance[] superset, TreeInstance[] smallerSet)
		{
			return null;
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0xC5D178", Offset = "0xC5D178", VA = "0xC5D178", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0xC5D704", Offset = "0xC5D704", VA = "0xC5D704", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}
	}
}
namespace Gaia
{
	[Token(Token = "0x2000167")]
	public class MaskMapExport : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572BD8", Offset = "0x572BD8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<TerrainScene, string> <>9__41_0;

			[Token(Token = "0x4002CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ImageMask, bool> <>9__46_0;

			[Token(Token = "0x4002CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<ImageMask, bool> <>9__46_1;

			[Token(Token = "0x4002CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<ImageMask, bool> <>9__46_2;

			[Token(Token = "0x6002267")]
			[Address(RVA = "0x868000", Offset = "0x868000", VA = "0x868000")]
			public <>c()
			{
			}

			[Token(Token = "0x6002268")]
			[Address(RVA = "0x868008", Offset = "0x868008", VA = "0x868008")]
			internal string <StartExport>b__41_0(TerrainScene x)
			{
				return null;
			}

			[Token(Token = "0x6002269")]
			[Address(RVA = "0x868060", Offset = "0x868060", VA = "0x868060")]
			internal bool <LoadSettings>b__46_0(ImageMask x)
			{
				return default(bool);
			}

			[Token(Token = "0x600226A")]
			[Address(RVA = "0x868080", Offset = "0x868080", VA = "0x868080")]
			internal bool <LoadSettings>b__46_1(ImageMask x)
			{
				return default(bool);
			}

			[Token(Token = "0x600226B")]
			[Address(RVA = "0x8680A0", Offset = "0x8680A0", VA = "0x8680A0")]
			internal bool <LoadSettings>b__46_2(ImageMask x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> m_previewRGBAIds;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_drawPreview;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_maxWorldHeight;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_minWorldHeight;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool m_previewDirty;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool m_showSeaLevelinStampPreview;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool m_showSeaLevelPlane;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		public bool m_showBoundingBox;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RenderTexture m_cachedExportTexture;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int m_impostorLoadingRange;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool m_highlightLoadingSettings;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long m_highlightLoadingSettingsStartedTimeStamp;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_currentTerrainCount;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture[] m_cachedPreviewColorRenderTextures;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RenderTexture m_exportRT;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BoundsDouble m_bounds;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private MaskMapExportSettings settings;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GaiaSessionManager m_sessionManager;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GaiaSettings m_gaiaSettings;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public LoadMode m_loadTerrainMode;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private TerrainLoader m_terrainLoader;

		[Token(Token = "0x170000F3")]
		public MaskMapExportSettings m_settings
		{
			[Token(Token = "0x6000960")]
			[Address(RVA = "0xA409C0", Offset = "0xA409C0", VA = "0xA409C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000961")]
			[Address(RVA = "0xA40B68", Offset = "0xA40B68", VA = "0xA40B68")]
			set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		private GaiaSessionManager SessionManager
		{
			[Token(Token = "0x6000962")]
			[Address(RVA = "0xA40AD8", Offset = "0xA40AD8", VA = "0xA40AD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		private GaiaSettings GaiaSettings
		{
			[Token(Token = "0x6000963")]
			[Address(RVA = "0xA40B70", Offset = "0xA40B70", VA = "0xA40B70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		public TerrainLoader TerrainLoader
		{
			[Token(Token = "0x6000964")]
			[Address(RVA = "0xA40BF8", Offset = "0xA40BF8", VA = "0xA40BF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0xA40D48", Offset = "0xA40D48", VA = "0xA40D48")]
		private MaskMapChannelSettings GetChannelSettingsByRGBAIndex(int rgbaIndex)
		{
			return null;
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0xA40DC4", Offset = "0xA40DC4", VA = "0xA40DC4")]
		public ImageMask[] GetImageMaskListByRGBAIndex(int rgbaIndex)
		{
			return null;
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0xA40FAC", Offset = "0xA40FAC", VA = "0xA40FAC")]
		public Terrain GetCurrentTerrain()
		{
			return null;
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0xA40FDC", Offset = "0xA40FDC", VA = "0xA40FDC")]
		public float GetMaxSpawnerRange()
		{
			return default(float);
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0xA41140", Offset = "0xA41140", VA = "0xA41140")]
		public void UpdateAutoLoadRange()
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0xA412BC", Offset = "0xA412BC", VA = "0xA412BC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0xA4143C", Offset = "0xA4143C", VA = "0xA4143C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0xA41440", Offset = "0xA41440", VA = "0xA41440")]
		public void DrawMaskMapPreview(bool simulate)
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0xA41BFC", Offset = "0xA41BFC", VA = "0xA41BFC")]
		private RenderTexture ApplyBrush(GaiaMultiTerrainOperation operation, MultiTerrainOperationType opType, MaskMapChannelSettings channelSettings, int rgbaIndex)
		{
			return null;
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0xA41EE0", Offset = "0xA41EE0", VA = "0xA41EE0")]
		public void UpdateCachedExportTexture()
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0xA423F4", Offset = "0xA423F4", VA = "0xA423F4")]
		public void FitToTerrain([Optional] Terrain t)
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0xA4260C", Offset = "0xA4260C", VA = "0xA4260C")]
		public void StartExport(bool allTerrains)
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0xA42934", Offset = "0xA42934", VA = "0xA42934")]
		public void ExecuteExport(bool allTerrains, List<string> terrainNames)
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0xA42FAC", Offset = "0xA42FAC", VA = "0xA42FAC")]
		private void ExportMultiTerrain(Terrain terrain)
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0xA42C98", Offset = "0xA42C98", VA = "0xA42C98")]
		private void ExportSingleTerrain(Terrain terrain, bool fitToTerrain = true)
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0xA42E38", Offset = "0xA42E38", VA = "0xA42E38")]
		private void WriteExportedTexture(string nameSuffix, RenderTexture textureToWrite)
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0xA43464", Offset = "0xA43464", VA = "0xA43464")]
		public void LoadSettings(MaskMapExportSettings settingsToLoad)
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0xA42D64", Offset = "0xA42D64", VA = "0xA42D64")]
		public void FitToAllTerrains()
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0xA43ED0", Offset = "0xA43ED0", VA = "0xA43ED0")]
		public void UpdateMinMaxHeight()
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0xA441CC", Offset = "0xA441CC", VA = "0xA441CC")]
		public void HighlightLoadingSettings()
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0xA42FDC", Offset = "0xA42FDC", VA = "0xA42FDC")]
		private void CopyLocalResultToRenderTexture(Terrain t)
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0xA41B14", Offset = "0xA41B14", VA = "0xA41B14")]
		private void InitialiseColorTextureCache(int index, RenderTexture rtToInitialiseFrom)
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0xA41AB0", Offset = "0xA41AB0", VA = "0xA41AB0")]
		private void ClearColorTextureCache()
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0xA4439C", Offset = "0xA4439C", VA = "0xA4439C")]
		private void ClearCachedTexture(RenderTexture cachedRT)
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0xA42370", Offset = "0xA42370", VA = "0xA42370")]
		private void ReleaseRenderTexture(RenderTexture texture)
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0xA444B0", Offset = "0xA444B0", VA = "0xA444B0")]
		public MaskMapExport()
		{
		}
	}
	[Token(Token = "0x2000168")]
	public class RigidbodyWaitForTerrainLoad : MonoBehaviour
	{
		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody m_watchedRigidbody;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TerrainScene m_terrainScene;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_invokeStarted;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_activateDelay;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<MonoBehaviour> m_componentsToActivate;

		[Token(Token = "0x600097F")]
		[Address(RVA = "0xAC73D0", Offset = "0xAC73D0", VA = "0xAC73D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0xAC7640", Offset = "0xAC7640", VA = "0xAC7640")]
		private void Update()
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0xAC76D8", Offset = "0xAC76D8", VA = "0xAC76D8")]
		private void ActivateRigidbody()
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0xAC7840", Offset = "0xAC7840", VA = "0xAC7840")]
		public RigidbodyWaitForTerrainLoad()
		{
		}
	}
	[Token(Token = "0x2000169")]
	public enum LoadMode
	{
		[Token(Token = "0x4000E06")]
		Disabled,
		[Token(Token = "0x4000E07")]
		EditorSelected,
		[Token(Token = "0x4000E08")]
		EditorAlways,
		[Token(Token = "0x4000E09")]
		RuntimeAlways
	}
	[Token(Token = "0x200016A")]
	[ExecuteInEditMode]
	public class TerrainLoader : MonoBehaviour
	{
		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoundsDouble m_loadingBoundsRegular;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoundsDouble m_loadingBoundsImpostor;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BoundsDouble m_loadingBoundsCollider;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private LoadMode m_loadMode;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public bool m_isSelected;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[HideInInspector]
		public bool m_beingDragged;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_minRefreshDistance;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_maxRefreshDistance;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_minRefreshMS;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_maxRefreshMS;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool m_followTransform;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoundsDouble m_shiftedBoundsRegular;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoundsDouble m_shiftedBoundsImpostor;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BoundsDouble m_shiftedBoundsCollider;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GaiaSessionManager m_sessionManager;

		[Token(Token = "0x170000F7")]
		public LoadMode LoadMode
		{
			[Token(Token = "0x6000983")]
			[Address(RVA = "0xB0D4F0", Offset = "0xB0D4F0", VA = "0xB0D4F0")]
			get
			{
				return default(LoadMode);
			}
			[Token(Token = "0x6000984")]
			[Address(RVA = "0xB0D4F8", Offset = "0xB0D4F8", VA = "0xB0D4F8")]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		private GaiaSessionManager SessionManager
		{
			[Token(Token = "0x6000985")]
			[Address(RVA = "0xB0D924", Offset = "0xB0D924", VA = "0xB0D924")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0xB0D9B4", Offset = "0xB0D9B4", VA = "0xB0D9B4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0xB0D9B8", Offset = "0xB0D9B8", VA = "0xB0D9B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0xB0DA5C", Offset = "0xB0DA5C", VA = "0xB0DA5C")]
		public void Start()
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0xB0DA60", Offset = "0xB0DA60", VA = "0xB0DA60")]
		public void Awake()
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0xB0DA64", Offset = "0xB0DA64", VA = "0xB0DA64")]
		public void UnloadTerrains()
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0xB0D500", Offset = "0xB0D500", VA = "0xB0D500")]
		public void UpdateTerrains()
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0xB0E7F4", Offset = "0xB0E7F4", VA = "0xB0E7F4")]
		public void Teleport(Vector3Double newLocation)
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0xB0E858", Offset = "0xB0E858", VA = "0xB0E858")]
		public TerrainLoader()
		{
		}
	}
	[Token(Token = "0x200016B")]
	public class TerrainSceneCreator : MonoBehaviour
	{
		[Token(Token = "0x600098E")]
		[Address(RVA = "0xA22F74", Offset = "0xA22F74", VA = "0xA22F74")]
		public static TerrainScene CreateTerrainScene(Scene originalScene, TerrainSceneStorage terrainSceneStorage, GaiaSession session, GameObject terrainGO, WorldCreationSettings worldCreationSettings)
		{
			return null;
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0xA22F7C", Offset = "0xA22F7C", VA = "0xA22F7C")]
		public static void CopyLightingSettingsToNewScene(Scene sourceScene, Scene targetScene)
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0xA22F80", Offset = "0xA22F80", VA = "0xA22F80")]
		public static Scene CreateReplacementScene(Scene originalScene, GameObject impostorGO, GaiaSession session, string basePath)
		{
			return default(Scene);
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0xA22F88", Offset = "0xA22F88", VA = "0xA22F88")]
		public static Scene CreateBackupScene(Scene originalScene, GameObject terrainGO, GaiaSession session)
		{
			return default(Scene);
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0xA22F90", Offset = "0xA22F90", VA = "0xA22F90")]
		public TerrainSceneCreator()
		{
		}
	}
	[Token(Token = "0x200016C")]
	public delegate void ResetTool();
	[Token(Token = "0x200016D")]
	public interface ITerrainEroder
	{
		[Token(Token = "0x170000F9")]
		Dictionary<string, RenderTexture> inputTextures
		{
			[Token(Token = "0x6000999")]
			get;
			[Token(Token = "0x600099A")]
			set;
		}

		[Token(Token = "0x170000FA")]
		Dictionary<string, RenderTexture> outputTextures
		{
			[Token(Token = "0x600099B")]
			get;
		}

		[Token(Token = "0x6000997")]
		void OnEnable();

		[Token(Token = "0x6000998")]
		void ErodeHeightmap(Vector3 terrainDimensions, Rect domainRect, Vector2 texelSize, bool invertEffect = false);
	}
	[Token(Token = "0x200016E")]
	public class FloatingPointFix : MonoBehaviour
	{
		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GaiaSessionManager m_sessionManager;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FloatingPointFix instance;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float threshold;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 totalOffset;

		[Token(Token = "0x170000FB")]
		private static GaiaSessionManager SessionManager
		{
			[Token(Token = "0x600099C")]
			[Address(RVA = "0x8B33E8", Offset = "0x8B33E8", VA = "0x8B33E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		public static FloatingPointFix Instance
		{
			[Token(Token = "0x600099D")]
			[Address(RVA = "0x8B34F0", Offset = "0x8B34F0", VA = "0x8B34F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		public static bool IsActive
		{
			[Token(Token = "0x600099E")]
			[Address(RVA = "0x8B3750", Offset = "0x8B3750", VA = "0x8B3750")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x8B392C", Offset = "0x8B392C", VA = "0x8B392C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x8B3A9C", Offset = "0x8B3A9C", VA = "0x8B3A9C")]
		public void AddMember(FloatingPointFixMember member)
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x8B3B88", Offset = "0x8B3B88", VA = "0x8B3B88")]
		public void RemoveMember(FloatingPointFixMember member)
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x8B3CEC", Offset = "0x8B3CEC", VA = "0x8B3CEC")]
		public void AddWorldSpaceParticleSystem(ParticleSystem ps)
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x8B3DD8", Offset = "0x8B3DD8", VA = "0x8B3DD8")]
		public void RemoveWorldSpaceParticleSystem(ParticleSystem ps)
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x8B3F3C", Offset = "0x8B3F3C", VA = "0x8B3F3C")]
		public Vector3 ConvertToOriginalSpace(Vector3 position)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x8B3F54", Offset = "0x8B3F54", VA = "0x8B3F54")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x8B40CC", Offset = "0x8B40CC", VA = "0x8B40CC")]
		public FloatingPointFix()
		{
		}
	}
	[Token(Token = "0x200016F")]
	public class FloatingPointFixMember : MonoBehaviour
	{
		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x8B410C", Offset = "0x8B410C", VA = "0x8B410C")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x8B4178", Offset = "0x8B4178", VA = "0x8B4178")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x8B4210", Offset = "0x8B4210", VA = "0x8B4210")]
		public FloatingPointFixMember()
		{
		}
	}
	[Token(Token = "0x2000170")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5718C8", Offset = "0x5718C8")]
	public class FloatingPointFixParticleSystem : FloatingPointFixMember
	{
		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x8B4218", Offset = "0x8B4218", VA = "0x8B4218")]
		protected new void OnEnable()
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x8B4320", Offset = "0x8B4320", VA = "0x8B4320")]
		protected new void OnDestroy()
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x8B441C", Offset = "0x8B441C", VA = "0x8B441C")]
		private void Start()
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x8B4420", Offset = "0x8B4420", VA = "0x8B4420")]
		private void Update()
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x8B4424", Offset = "0x8B4424", VA = "0x8B4424")]
		public FloatingPointFixParticleSystem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000171")]
	[ExecuteInEditMode]
	public class GaiaAudioManager : MonoBehaviour
	{
		[Token(Token = "0x20004E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572BE8", Offset = "0x572BE8")]
		private sealed class <UpdateAudioZoneStates>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GaiaAudioManager <>4__this;

			[Token(Token = "0x4002CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <maxUpdatesPerIteration>5__2;

			[Token(Token = "0x4002CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <currentZone>5__3;

			[Token(Token = "0x4002CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <currentIteration>5__4;

			[Token(Token = "0x4002CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <playerLocation>5__5;

			[Token(Token = "0x170003D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600226F")]
				[Address(RVA = "0x91D8AC", Offset = "0x91D8AC", VA = "0x91D8AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002271")]
				[Address(RVA = "0x91D8F4", Offset = "0x91D8F4", VA = "0x91D8F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600226C")]
			[Address(RVA = "0x91D338", Offset = "0x91D338", VA = "0x91D338")]
			[DebuggerHidden]
			public <UpdateAudioZoneStates>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x600226D")]
			[Address(RVA = "0x91D364", Offset = "0x91D364", VA = "0x91D364", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600226E")]
			[Address(RVA = "0x91D368", Offset = "0x91D368", VA = "0x91D368", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002270")]
			[Address(RVA = "0x91D8B4", Offset = "0x91D8B4", VA = "0x91D8B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_masterVolume;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_rainVolume;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_snowVolume;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_thunderVolume;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject m_player;

		[NonSerialized]
		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GaiaAudioZone> m_activeAudioZones;

		[NonSerialized]
		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<GaiaAudioZone> m_becomingInActiveAudioZones;

		[NonSerialized]
		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<GaiaAudioZone> m_inactiveAudioZones;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool m_showGizmos;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GaiaAudioManager m_instance;

		[Token(Token = "0x170000FE")]
		public static GaiaAudioManager Instance
		{
			[Token(Token = "0x60009B0")]
			[Address(RVA = "0x8C0298", Offset = "0x8C0298", VA = "0x8C0298")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x8C02FC", Offset = "0x8C02FC", VA = "0x8C02FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x8C03D4", Offset = "0x8C03D4", VA = "0x8C03D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x8C04AC", Offset = "0x8C04AC", VA = "0x8C04AC")]
		private void Start()
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x8C04FC", Offset = "0x8C04FC", VA = "0x8C04FC")]
		private void Update()
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x8C077C", Offset = "0x8C077C", VA = "0x8C077C")]
		public void UpdateSceneGizmos()
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x8C0888", Offset = "0x8C0888", VA = "0x8C0888")]
		public void RegisterAudioZone(GaiaAudioZone az)
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x8C0964", Offset = "0x8C0964", VA = "0x8C0964")]
		public void DeRegisterAudioZone(GaiaAudioZone az)
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x8C0AA0", Offset = "0x8C0AA0", VA = "0x8C0AA0")]
		protected void ActivateAudioZone(GaiaAudioZone az)
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x8C0BD4", Offset = "0x8C0BD4", VA = "0x8C0BD4")]
		protected void FlagAudioZoneForDeactivation(GaiaAudioZone az)
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x8C0D08", Offset = "0x8C0D08", VA = "0x8C0D08")]
		protected void DeActivateAudioZone(GaiaAudioZone az)
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x8C0E04", Offset = "0x8C0E04", VA = "0x8C0E04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5906E0", Offset = "0x5906E0")]
		private IEnumerator UpdateAudioZoneStates()
		{
			return null;
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x8C0E70", Offset = "0x8C0E70", VA = "0x8C0E70")]
		public GaiaAudioManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000172")]
	public class GaiaAudioZoneItem
	{
		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip m_audioClip;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_volume;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_fadeInTime;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_fadeOutTime;

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x8C1A88", Offset = "0x8C1A88", VA = "0x8C1A88")]
		public GaiaAudioZoneItem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000173")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x571938", Offset = "0x571938")]
	[ExecuteInEditMode]
	public class GaiaAudioZone : MonoBehaviour
	{
		[Token(Token = "0x20004E9")]
		public enum AudioZoneState
		{
			[Token(Token = "0x4002CC1")]
			Active,
			[Token(Token = "0x4002CC2")]
			BecomingInactive,
			[Token(Token = "0x4002CC3")]
			Inactive
		}

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_currentZoneVolume;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GaiaAudioZoneItem> m_audioList;

		[NonSerialized]
		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GaiaAudioZoneItem m_currentAudioItem;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_isGlobalAudioSource;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_minimumBreakTime;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_maximumBreakTime;

		[NonSerialized]
		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public AudioZoneState m_audioZoneState;

		[NonSerialized]
		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AudioSource m_audioSource;

		[NonSerialized]
		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool m_audioIsPlaying;

		[NonSerialized]
		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int m_selectedTrackIndex;

		[NonSerialized]
		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool m_showGizmos;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Color m_gizmoColor;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float m_zoneRadius;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_zoneRadiusSqr;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_timeWhenTrackStarted;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_timeWhenFadeInEnds;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_timeWhenFadeOutBegins;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_timeWhenFadeOutEnds;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_timeWhenNextTrackStarts;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_timeWhenDeactivating;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool m_showDebug;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_deactivationTime;

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x8C0F30", Offset = "0x8C0F30", VA = "0x8C0F30")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x8C102C", Offset = "0x8C102C", VA = "0x8C102C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x8C0F78", Offset = "0x8C0F78", VA = "0x8C0F78")]
		private void DrawGizmos()
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x8C1030", Offset = "0x8C1030", VA = "0x8C1030")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x8C1150", Offset = "0x8C1150", VA = "0x8C1150")]
		private void Start()
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x8C13F8", Offset = "0x8C13F8", VA = "0x8C13F8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x8C12B8", Offset = "0x8C12B8", VA = "0x8C12B8")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x8C0624", Offset = "0x8C0624", VA = "0x8C0624")]
		public void ProcessActiveUpdate(float masterVolume, bool showGizmos)
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x8C1558", Offset = "0x8C1558", VA = "0x8C1558")]
		public void PlayNextRandomTrack()
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x8C15DC", Offset = "0x8C15DC", VA = "0x8C15DC")]
		public void PlayTrack(int trackIdx)
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x8C18D0", Offset = "0x8C18D0", VA = "0x8C18D0")]
		public bool InRange(Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x8C09FC", Offset = "0x8C09FC", VA = "0x8C09FC")]
		public void Stop()
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x8C0BAC", Offset = "0x8C0BAC", VA = "0x8C0BAC")]
		public void Activate()
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x8C0CD0", Offset = "0x8C0CD0", VA = "0x8C0CD0")]
		public void FlagForDeactivation()
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x8C196C", Offset = "0x8C196C", VA = "0x8C196C")]
		public bool CanDeactivateNow()
		{
			return default(bool);
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x8C0DF8", Offset = "0x8C0DF8", VA = "0x8C0DF8")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x8C199C", Offset = "0x8C199C", VA = "0x8C199C")]
		public GaiaAudioZone()
		{
		}
	}
	[Token(Token = "0x2000174")]
	public class GaiaLoadingScreen : MonoBehaviour
	{
		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Slider m_progressBar;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas m_canvas;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image m_image;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text m_text;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool m_initialized;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_fadeOutSpeed;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_fadeout;

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x82AF0C", Offset = "0x82AF0C", VA = "0x82AF0C")]
		private void Start()
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x82B0FC", Offset = "0x82B0FC", VA = "0x82B0FC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x82B2EC", Offset = "0x82B2EC", VA = "0x82B2EC")]
		private void OnLoadProgressStarted()
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x82B3D8", Offset = "0x82B3D8", VA = "0x82B3D8")]
		private void OnLoadProgressUpdated(float progress)
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x82B454", Offset = "0x82B454", VA = "0x82B454")]
		private void OnLoadProgressEnded()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x82B4AC", Offset = "0x82B4AC", VA = "0x82B4AC")]
		private void OnLoadProgressTimeOut(List<TerrainScene> missingScenes)
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x82BEB0", Offset = "0x82BEB0", VA = "0x82BEB0")]
		private void Update()
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x82BFE8", Offset = "0x82BFE8", VA = "0x82BFE8")]
		public GaiaLoadingScreen()
		{
		}
	}
	[Token(Token = "0x2000175")]
	[ExecuteAlways]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5719A8", Offset = "0x5719A8")]
	public class ReflectionProbeCuller : MonoBehaviour
	{
		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57E22C", Offset = "0x57E22C")]
		public bool m_systemActive;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_syncToManager;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReflectionProbe m_probe;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_maxRenderDistance;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int CheckPeriodMin;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int checkPeriodMax;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float currentDistance;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int checkPeriod;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int currentCheckPriod;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_probeExists;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_gaiaGlobalCameraExists;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool m_managerExists;

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0xB959D0", Offset = "0xB959D0", VA = "0xB959D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0xB95A7C", Offset = "0xB95A7C", VA = "0xB95A7C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xB95E9C", Offset = "0xB95E9C", VA = "0xB95E9C")]
		private void DistanceCheck()
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0xB95ED0", Offset = "0xB95ED0", VA = "0xB95ED0")]
		private void DistanceCalculate()
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xB95DF8", Offset = "0xB95DF8", VA = "0xB95DF8")]
		private void DistanceApprove()
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0xB95FA8", Offset = "0xB95FA8", VA = "0xB95FA8")]
		public ReflectionProbeCuller()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000176")]
	public class GaiaLightCheckData
	{
		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color m_sunColor;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_sunIntensity;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 m_sunRotation;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color m_skyAmbientColor;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color m_equatorAmbientColor;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color m_groundAmbientColor;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float m_ambientIntensity;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Color m_skyTintColor;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float m_skyExposure;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float m_skyRotation;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Cubemap m_skyHDRITexture;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float m_skyAtmosphereThickness;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Color m_skyGroundColor;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float m_minute;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float m_checkMinuteTime;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int m_hour;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int m_checkHourTime;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool m_snowEnabled;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		public bool m_rainEnabled;

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x82A6E4", Offset = "0x82A6E4", VA = "0x82A6E4")]
		public GaiaLightCheckData()
		{
		}
	}
	[Token(Token = "0x2000177")]
	[ExecuteAlways]
	public class ReflectionProbeManager : MonoBehaviour
	{
		[Token(Token = "0x20004EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572BF8", Offset = "0x572BF8")]
		private sealed class <ProcessPriorityProbes>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ReflectionProbeManager <>4__this;

			[Token(Token = "0x4002CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170003D4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002275")]
				[Address(RVA = "0x871660", Offset = "0x871660", VA = "0x871660", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002277")]
				[Address(RVA = "0x8716A8", Offset = "0x8716A8", VA = "0x8716A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002272")]
			[Address(RVA = "0x871380", Offset = "0x871380", VA = "0x871380")]
			[DebuggerHidden]
			public <ProcessPriorityProbes>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6002273")]
			[Address(RVA = "0x8713AC", Offset = "0x8713AC", VA = "0x8713AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002274")]
			[Address(RVA = "0x8713B0", Offset = "0x8713B0", VA = "0x8713B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002276")]
			[Address(RVA = "0x871668", Offset = "0x871668", VA = "0x871668", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572C08", Offset = "0x572C08")]
		private sealed class <ProcessNonPriorityProbes>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ReflectionProbeManager <>4__this;

			[Token(Token = "0x4002CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170003D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600227B")]
				[Address(RVA = "0x871330", Offset = "0x871330", VA = "0x871330", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600227D")]
				[Address(RVA = "0x871378", Offset = "0x871378", VA = "0x871378", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002278")]
			[Address(RVA = "0x871068", Offset = "0x871068", VA = "0x871068")]
			[DebuggerHidden]
			public <ProcessNonPriorityProbes>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6002279")]
			[Address(RVA = "0x871094", Offset = "0x871094", VA = "0x871094", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600227A")]
			[Address(RVA = "0x871098", Offset = "0x871098", VA = "0x871098", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600227C")]
			[Address(RVA = "0x871338", Offset = "0x871338", VA = "0x871338", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private static ReflectionProbeManager m_instance;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_enableSystem;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_useReflectionProbeCuller;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_reflectionProbeCullingDistance;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LayerMask m_probeLayerMask;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool m_checkTODEveryFrame;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool m_probeCullingNeedsUpdating;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool m_isProcessing;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<ReflectionProbe> m_sceneReflectionProbes;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<ReflectionProbe> m_priorityReflectionProbes;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<ReflectionProbe> m_nonPriorityReflectionProbes;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GaiaLightCheckData m_lightCheckData;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 m_playerBoundsSize;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Bounds m_playerBounds;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform m_player;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float m_probePriorityCheck;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float m_probeProcessTime;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Light m_sunLight;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Material m_skyMaterial;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ProceduralWorldsGlobalWeather WeatherSystem;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_currentProbePriorityCheck;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int m_priorityProbesCount;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int m_currentPriorityProbesCount;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int m_nonPriorityProbesCount;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int m_currentNonPriorityProbesCount;

		[Token(Token = "0x170000FF")]
		public static ReflectionProbeManager Instance
		{
			[Token(Token = "0x60009DF")]
			[Address(RVA = "0xB96058", Offset = "0xB96058", VA = "0xB96058")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000100")]
		public bool EnableSystem
		{
			[Token(Token = "0x60009E0")]
			[Address(RVA = "0xB960A4", Offset = "0xB960A4", VA = "0xB960A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009E1")]
			[Address(RVA = "0xB960AC", Offset = "0xB960AC", VA = "0xB960AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public bool UseReflectionProbeCuller
		{
			[Token(Token = "0x60009E2")]
			[Address(RVA = "0xB96130", Offset = "0xB96130", VA = "0xB96130")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009E3")]
			[Address(RVA = "0xB96138", Offset = "0xB96138", VA = "0xB96138")]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public float ReflectionProbeCullingDistance
		{
			[Token(Token = "0x60009E4")]
			[Address(RVA = "0xB96228", Offset = "0xB96228", VA = "0xB96228")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009E5")]
			[Address(RVA = "0xB96230", Offset = "0xB96230", VA = "0xB96230")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public LayerMask ProbeLayerMask
		{
			[Token(Token = "0x60009E6")]
			[Address(RVA = "0xB96278", Offset = "0xB96278", VA = "0xB96278")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60009E7")]
			[Address(RVA = "0xB96280", Offset = "0xB96280", VA = "0xB96280")]
			set
			{
			}
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0xB96454", Offset = "0xB96454", VA = "0xB96454")]
		private void Start()
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xB96C80", Offset = "0xB96C80", VA = "0xB96C80")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0xB96D4C", Offset = "0xB96D4C", VA = "0xB96D4C")]
		private void Update()
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0xB97128", Offset = "0xB97128", VA = "0xB97128")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x590740", Offset = "0x590740")]
		private IEnumerator ProcessPriorityProbes()
		{
			return null;
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xB973F4", Offset = "0xB973F4", VA = "0xB973F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5907A0", Offset = "0x5907A0")]
		private IEnumerator ProcessNonPriorityProbes()
		{
			return null;
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xB97254", Offset = "0xB97254", VA = "0xB97254")]
		private Light GetSunOrMoonLight()
		{
			return null;
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xB96100", Offset = "0xB96100", VA = "0xB96100")]
		private void CleanUp()
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0xB97194", Offset = "0xB97194", VA = "0xB97194")]
		private void UpdateBounds()
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xB96518", Offset = "0xB96518", VA = "0xB96518")]
		private List<ReflectionProbe> GetAllSceneProbes(bool renderProbes = false)
		{
			return null;
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xB97308", Offset = "0xB97308", VA = "0xB97308")]
		private void CheckProbeDistance(Bounds playerBounds, ReflectionProbe probe)
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xB966A8", Offset = "0xB966A8", VA = "0xB966A8")]
		private void SetAllLightCheckData()
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0xB96F7C", Offset = "0xB96F7C", VA = "0xB96F7C")]
		private bool CheckTimeOfDay()
		{
			return default(bool);
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0xB962E4", Offset = "0xB962E4", VA = "0xB962E4")]
		private void SyncProbeLayerMask()
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0xB9618C", Offset = "0xB9618C", VA = "0xB9618C")]
		public void SetReflectionProbeCuller()
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0xB97460", Offset = "0xB97460", VA = "0xB97460")]
		private void ProcessProbeCuller(Terrain terrain)
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0xB977D4", Offset = "0xB977D4", VA = "0xB977D4")]
		public bool CheckIfHasChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0xB97EEC", Offset = "0xB97EEC", VA = "0xB97EEC")]
		public static ReflectionProbeManager GetOrCreateProbeManager()
		{
			return null;
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0xB98128", Offset = "0xB98128", VA = "0xB98128")]
		public static void RemoveReflectionProbeManager()
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0xB981E8", Offset = "0xB981E8", VA = "0xB981E8")]
		public ReflectionProbeManager()
		{
		}
	}
	[Token(Token = "0x2000178")]
	public class GroundParticlesCulling : MonoBehaviour
	{
		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Transform Player;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private int m_radius;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		[SerializeField]
		private CollisionDetectionType m_collisionDetectionType;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		private bool m_hideColliders;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private GameObject m_instance;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[SerializeField]
		private Collider m_collider;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[SerializeField]
		private ParticleSystem m_particleSystem;

		[Token(Token = "0x17000104")]
		[HideInInspector]
		public int Radius
		{
			[Token(Token = "0x60009FB")]
			[Address(RVA = "0xE48F58", Offset = "0xE48F58", VA = "0xE48F58")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60009FC")]
			[Address(RVA = "0xE48F60", Offset = "0xE48F60", VA = "0xE48F60")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		[HideInInspector]
		public CollisionDetectionType CollisionDetectionType
		{
			[Token(Token = "0x60009FD")]
			[Address(RVA = "0xE490D4", Offset = "0xE490D4", VA = "0xE490D4")]
			get
			{
				return default(CollisionDetectionType);
			}
			[Token(Token = "0x60009FE")]
			[Address(RVA = "0xE490DC", Offset = "0xE490DC", VA = "0xE490DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000106")]
		[HideInInspector]
		public bool HideColliders
		{
			[Token(Token = "0x60009FF")]
			[Address(RVA = "0xE494BC", Offset = "0xE494BC", VA = "0xE494BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A00")]
			[Address(RVA = "0xE494C4", Offset = "0xE494C4", VA = "0xE494C4")]
			set
			{
			}
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0xE494E8", Offset = "0xE494E8", VA = "0xE494E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0xE490F4", Offset = "0xE490F4", VA = "0xE490F4")]
		public void SetCollider()
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0xE48F78", Offset = "0xE48F78", VA = "0xE48F78")]
		public void SetRadius()
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0xE496C0", Offset = "0xE496C0", VA = "0xE496C0")]
		private void GetParticleSystem()
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0xE49760", Offset = "0xE49760", VA = "0xE49760")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xE498F0", Offset = "0xE498F0", VA = "0xE498F0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0xE4958C", Offset = "0xE4958C", VA = "0xE4958C")]
		private void LoadFromWeatherSystem()
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0xE49A80", Offset = "0xE49A80", VA = "0xE49A80")]
		public GroundParticlesCulling()
		{
		}
	}
	[Token(Token = "0x2000179")]
	public class InteriorWeatherController : MonoBehaviour
	{
		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioReverbPreset m_interiorAudioRevertPreset;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AudioReverbPreset m_exteriorAudioRevertPreset;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_enableWeatherParticleColliders;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ParticleSystemCollisionQuality m_colliderQuality;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask m_collideLayers;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private CollisionDetectionType m_triggerType;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 m_triggerSize;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_triggerRadius;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Camera m_playerCamera;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioReverbFilter m_reverbFilter;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_rainParticles;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_snowParticles;

		[Token(Token = "0x4000E93")]
		private const string m_createVolumeMenuItem = "GameObject/Procedural Worlds/Gaia/Interior Weather Volume";

		[Token(Token = "0x17000107")]
		public CollisionDetectionType TriggerType
		{
			[Token(Token = "0x6000A09")]
			[Address(RVA = "0xA6D214", Offset = "0xA6D214", VA = "0xA6D214")]
			get
			{
				return default(CollisionDetectionType);
			}
			[Token(Token = "0x6000A0A")]
			[Address(RVA = "0xA6D21C", Offset = "0xA6D21C", VA = "0xA6D21C")]
			set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public Vector3 TriggerSize
		{
			[Token(Token = "0x6000A0B")]
			[Address(RVA = "0xA6D250", Offset = "0xA6D250", VA = "0xA6D250")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000A0C")]
			[Address(RVA = "0xA6D25C", Offset = "0xA6D25C", VA = "0xA6D25C")]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public float TriggerRadius
		{
			[Token(Token = "0x6000A0D")]
			[Address(RVA = "0xA6D2D8", Offset = "0xA6D2D8", VA = "0xA6D2D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A0E")]
			[Address(RVA = "0xA6D2E0", Offset = "0xA6D2E0", VA = "0xA6D2E0")]
			set
			{
			}
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xA6D2F8", Offset = "0xA6D2F8", VA = "0xA6D2F8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xA6D598", Offset = "0xA6D598", VA = "0xA6D598")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xA6D7D0", Offset = "0xA6D7D0", VA = "0xA6D7D0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xA6DBF8", Offset = "0xA6DBF8", VA = "0xA6DBF8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xA6D59C", Offset = "0xA6D59C", VA = "0xA6D59C")]
		public void SetupReverbFilter()
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xA6D234", Offset = "0xA6D234", VA = "0xA6D234")]
		private void UpdateColliderType()
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xA6DD3C", Offset = "0xA6DD3C", VA = "0xA6DD3C")]
		private void AddBoxCollider()
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xA6DF10", Offset = "0xA6DF10", VA = "0xA6DF10")]
		private void AddSphericalCollider()
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xA6D914", Offset = "0xA6D914", VA = "0xA6D914")]
		private void UpdateParticleColliders(bool enabled)
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xA6E0E0", Offset = "0xA6E0E0", VA = "0xA6E0E0")]
		public InteriorWeatherController()
		{
		}
	}
	[Token(Token = "0x200017A")]
	[ExecuteAlways]
	public class PW_VFX_Atmosphere : MonoBehaviour
	{
		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private static PW_VFX_Atmosphere m_instance;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AdditionalFogDistanceLinear;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float AdditionalFogDistanceExponential;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color AdditionalFogColor;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_sunRotation;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material SkyboxMaterial;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Light SunLight;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform SunAxisTransform;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform EarthAxisTransform;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Gradient TimeOfDaySunColor;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve SunBrightnessIntensity;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Gradient TimeOfDayFogColor;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve TimeOfDayShadowStrength;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Gradient TimeOfDaySkyColor;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Gradient TimeOfDayEqutorColor;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Gradient TimeOfDayGroundColor;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AnimationCurve CloudsHightLevelDensity;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AnimationCurve CloudsHightLevelThickness;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AnimationCurve CloudsHightLevelSpeed;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AnimationCurve CloudOpacity;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AnimationCurve AmbientIntensity;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AnimationCurve AtmosphereThickness;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public AnimationCurve FogDensityColor;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public AnimationCurve FogStartDistance;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public AnimationCurve FogEndDistance;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AnimationCurve SunSize;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AnimationCurve SunSizeConvergence;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Gradient SkyboxTint;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public AnimationCurve SkyboxExposure;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AnimationCurve TODSkyboxFogHeight;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public AnimationCurve TODSkyboxFogGradient;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Gradient HDRPGroundColor;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Gradient HDRPFogAlbedo;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public AnimationCurve HDRPFogBaseHeight;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public AnimationCurve HDRPFogAnisotropy;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public AnimationCurve HDRPFogLightProbeDimmer;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public AnimationCurve HDRPFogDepthExtent;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Vector3 FinalSunRotation;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[HideInInspector]
		public List<Material> CloudLayerMaterials;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private GameObject SeasonAxis;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public bool m_weatherManagerExists;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
		private bool m_skyboxMaterialExists;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15A")]
		private bool m_underwaterExists;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15B")]
		private bool m_gradientOrCurvesExists;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private bool m_sunLightExists;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private float m_currentTime;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private ProceduralWorldsGlobalWeather WeatherSystem;

		[Token(Token = "0x1700010A")]
		public static PW_VFX_Atmosphere Instance
		{
			[Token(Token = "0x6000A19")]
			[Address(RVA = "0xFD0BA8", Offset = "0xFD0BA8", VA = "0xFD0BA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xFD0BF4", Offset = "0xFD0BF4", VA = "0xFD0BF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xFD1D14", Offset = "0xFD1D14", VA = "0xFD1D14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xFD1DE8", Offset = "0xFD1DE8", VA = "0xFD1DE8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xFD0C50", Offset = "0xFD0C50", VA = "0xFD0C50")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xFD1FAC", Offset = "0xFD1FAC", VA = "0xFD1FAC")]
		private void AmbientCalculation()
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xFD2B5C", Offset = "0xFD2B5C", VA = "0xFD2B5C")]
		private bool SetSunLight(bool isNight)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xFD2A6C", Offset = "0xFD2A6C", VA = "0xFD2A6C")]
		private bool CheckIfGradientsAndAnimationCruvesExist()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xFD122C", Offset = "0xFD122C", VA = "0xFD122C")]
		public void UpdateSystem()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xFD2C10", Offset = "0xFD2C10", VA = "0xFD2C10")]
		public void UpdateSunPosition()
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xFD2CF4", Offset = "0xFD2CF4", VA = "0xFD2CF4")]
		public void SetCloudShaderSettings(GaiaLightingProfileValues profile, string shaderName, GaiaConstants.EnvironmentRenderer renderPipeline)
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xFD3140", Offset = "0xFD3140", VA = "0xFD3140")]
		public PW_VFX_Atmosphere()
		{
		}
	}
	[Token(Token = "0x200017B")]
	[ExecuteAlways]
	public class PW_VFX_Clouds : MonoBehaviour
	{
		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private static PW_VFX_Clouds m_instance;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57E53C", Offset = "0x57E53C")]
		public Light SunLight;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57E574", Offset = "0x57E574")]
		public bool m_trackPlayer;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_yOffset;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_followCamOnYAxis;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int UpdateTicks;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color AmbColor;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 SunDirection;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector4 PW_Wind_Cloud_Dir;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector4 PW_SkyDome_Opacity;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Cubemap PW_Clouds_HDRI;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float PW_Cloud_Brightness;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float PW_Clouds_HDRI_Blur_Level;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float PW_Clouds_Clouds_Blur_Level;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float PW_Clouds_Clouds_Distortion_Level;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float PW_Clouds_Height_Mask;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AnimationCurve PW_SkyDome_Brightness;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float PW_Clouds_Fade;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Camera GameCam;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform CloudsPrefab;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float m_seaLevel;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float m_scale;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float m_cloudRotationSpeedLow;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float m_cloudRotationSpeedMiddle;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float m_cloudRotationSpeedFar;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Material CloudParticleMateiral;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<Material> CloudLayerMaterials;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Material SpaceMaterial;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GameObject SkyDomeLow;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private GameObject SkyDomeMiddle;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private GameObject SkyDomeFar;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private GameObject SkyDome;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int currentTick;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private bool m_cloudLowExists;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		[SerializeField]
		private bool m_cloudMidExists;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x106")]
		[SerializeField]
		private bool m_cloudFarExists;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x107")]
		[SerializeField]
		private bool m_cloudMaterialExists;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private bool m_gradientOrCurvesExists;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		[SerializeField]
		private bool m_sunExists;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
		[SerializeField]
		private bool m_cameraExists;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Camera m_editorSceneViewCamera;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool m_editorCameraExists;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private ProceduralWorldsGlobalWeather WeatherSystem;

		[Token(Token = "0x1700010B")]
		public static PW_VFX_Clouds Instance
		{
			[Token(Token = "0x6000A25")]
			[Address(RVA = "0xFD31C8", Offset = "0xFD31C8", VA = "0xFD31C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xFD3214", Offset = "0xFD3214", VA = "0xFD3214")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xFD3AB8", Offset = "0xFD3AB8", VA = "0xFD3AB8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xFD3D00", Offset = "0xFD3D00", VA = "0xFD3D00")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xFD3E8C", Offset = "0xFD3E8C", VA = "0xFD3E8C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xFD3E90", Offset = "0xFD3E90", VA = "0xFD3E90")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xFD369C", Offset = "0xFD369C", VA = "0xFD369C")]
		public void CloudsUpdate()
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xFD33B0", Offset = "0xFD33B0", VA = "0xFD33B0")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xFD4094", Offset = "0xFD4094", VA = "0xFD4094")]
		public void SetCloudRenderer(bool enabled)
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xFD3FF8", Offset = "0xFD3FF8", VA = "0xFD3FF8")]
		private void UpdateCloudPosition(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xFD368C", Offset = "0xFD368C", VA = "0xFD368C")]
		private bool CheckIfGradientsAndAnimationCruvesExist()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xFD3E94", Offset = "0xFD3E94", VA = "0xFD3E94")]
		private bool SetSunLight(bool isNight)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xFD41C4", Offset = "0xFD41C4", VA = "0xFD41C4")]
		public PW_VFX_Clouds()
		{
		}
	}
	[Token(Token = "0x200017C")]
	[ExecuteInEditMode]
	public class PW_VFX_Manager : MonoBehaviour
	{
		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57E67C", Offset = "0x57E67C")]
		public ParticleSystem TargetParticleSystem;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RenderDistance;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int CheckPeriodMin;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int checkPeriodMax;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float checkPeriod;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_particlesExist;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_gaiaGlobalCameraExists;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private ParticleSystem.EmissionModule EmissionModule;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float currentDistance;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int currentCheckPriod;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_lastPlayerPosition;

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xFD42CC", Offset = "0xFD42CC", VA = "0xFD42CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xFD4634", Offset = "0xFD4634", VA = "0xFD4634")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xFD4360", Offset = "0xFD4360", VA = "0xFD4360")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xFD4760", Offset = "0xFD4760", VA = "0xFD4760")]
		private void DistanceCheck()
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xFD47C4", Offset = "0xFD47C4", VA = "0xFD47C4")]
		private bool HasPlayerMoved()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xFD4844", Offset = "0xFD4844", VA = "0xFD4844")]
		private void DistanceCalculate()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xFD46A4", Offset = "0xFD46A4", VA = "0xFD46A4")]
		private void DistanceApprove()
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xFD491C", Offset = "0xFD491C", VA = "0xFD491C")]
		public PW_VFX_Manager()
		{
		}
	}
	[Token(Token = "0x200017D")]
	[ExecuteInEditMode]
	public class PW_VFX_Snow_Controller : MonoBehaviour
	{
		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem PW_Snow_Particles;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 SnowWindDir;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem.VelocityOverLifetimeModule VelocityOverLifetime;

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xFD4940", Offset = "0xFD4940", VA = "0xFD4940")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xFD4AE0", Offset = "0xFD4AE0", VA = "0xFD4AE0")]
		public PW_VFX_Snow_Controller()
		{
		}
	}
	[Token(Token = "0x200017E")]
	public enum SeasonMode
	{
		[Token(Token = "0x4000EFD")]
		Autumn,
		[Token(Token = "0x4000EFE")]
		Winter,
		[Token(Token = "0x4000EFF")]
		Spring,
		[Token(Token = "0x4000F00")]
		Summer
	}
	[Token(Token = "0x200017F")]
	public enum RainMode
	{
		[Token(Token = "0x4000F02")]
		RandomChance,
		[Token(Token = "0x4000F03")]
		SampledHeight
	}
	[Token(Token = "0x2000180")]
	public enum SnowMode
	{
		[Token(Token = "0x4000F05")]
		RandomChance,
		[Token(Token = "0x4000F06")]
		SampledHeight
	}
	[Token(Token = "0x2000181")]
	public enum ChannelSelection
	{
		[Token(Token = "0x4000F08")]
		R,
		[Token(Token = "0x4000F09")]
		G,
		[Token(Token = "0x4000F0A")]
		B,
		[Token(Token = "0x4000F0B")]
		A
	}
	[Token(Token = "0x2000182")]
	public enum CollisionDetectionType
	{
		[Token(Token = "0x4000F0D")]
		Box,
		[Token(Token = "0x4000F0E")]
		Spherical
	}
	[Token(Token = "0x2000183")]
	public enum SurfaceType
	{
		[Token(Token = "0x4000F10")]
		Opaque,
		[Token(Token = "0x4000F11")]
		Transparent
	}
	[Token(Token = "0x2000184")]
	public enum BlendMode
	{
		[Token(Token = "0x4000F13")]
		Alpha,
		[Token(Token = "0x4000F14")]
		Premultiply,
		[Token(Token = "0x4000F15")]
		Additive,
		[Token(Token = "0x4000F16")]
		Multiply
	}
	[Serializable]
	[Token(Token = "0x2000185")]
	public class WeatherSettings
	{
		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ChannelSelection m_channelSelection;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip m_ambientAudio;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D m_noiseMask;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient m_fogColor;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve m_fogStartDistance;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve m_fogEndDistance;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve m_fogDensity;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve m_skyboxExposure;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Gradient m_skyboxTint;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve m_skyboxAtmosphereThickness;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve m_skyboxSkyboxFogHeight;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve m_skyboxSkyboxFogGradient;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Gradient m_sunColor;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve m_sunIntensity;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AnimationCurve m_fXTemerature;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AnimationCurve m_fXTint;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Gradient m_fXColorFilter;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AnimationCurve m_fXBloomIntensity;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AnimationCurve m_fXVignetteIntensity;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float m_windSpeed;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AnimationCurve m_ambientIntensity;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Gradient m_ambientSkyColor;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Gradient m_ambientEquatorColor;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Gradient m_ambientGroundColor;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float m_chance;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float m_minWaitTime;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float m_maxWaitTime;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float m_durationMinWaitTime;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float m_durationMaxWaitTime;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AnimationCurve m_volumetricDepthExtent;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public AnimationCurve m_volumetricGlobalAnisotropy;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AnimationCurve m_volumetricGlobalProbeDimmer;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public AnimationCurve m_fogHeight;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public AnimationCurve m_cloudDomeBrightness;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AnimationCurve m_cloudDensity;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public AnimationCurve m_cloudThickness;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public AnimationCurve m_cloudSpeed;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public AnimationCurve m_newCloudOpacity;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public AnimationCurve m_weatherParticleAlpha;

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x940A38", Offset = "0x940A38", VA = "0x940A38")]
		public void Load(WeatherSettings settings, ProceduralWorldsGlobalWeather globalWeather, bool isRain)
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x940CD4", Offset = "0x940CD4", VA = "0x940CD4")]
		public void Save(WeatherSettings settings, ProceduralWorldsGlobalWeather globalWeather, bool isRain)
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x940F70", Offset = "0x940F70", VA = "0x940F70")]
		public WeatherSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000186")]
	public class WeatherCurrentSettings
	{
		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color m_fogColor;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_fogDensity;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_fogStart;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_fogEnd;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color m_sunColor;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_sunIntensity;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_snowHeight;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Color m_skyAmbient;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Color m_equatorAmbient;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Color m_groundAmbient;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float m_intensityAmbient;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float m_skyboxExposure;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Color m_skyboxTint;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float m_skyboxAtmosphereThickness;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float m_skyboxFogHeight;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float m_skyboxFogGradient;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float m_cloudDomeBrightness;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float m_startCloudDomeBrightness;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float m_cloudDensity;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float m_cloudThickness;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float m_cloudSpeed;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float m_cloudOpacity;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float m_fxBloomIntensity;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float m_fxTemperature;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float m_fxTint;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float m_fxVignetteIntensity;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Color m_fxColorFilter;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float m_rainAudioVolume;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float m_snowAudioVolume;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float m_windSpeed;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float m_windTurbulence;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float m_windFrequency;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float m_windMultiplier;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float m_hdrpFogHeight;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float m_hdrpFogAnisotropy;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float m_hdrpFogLightProbeDimmer;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float m_hdrpFogDepthExtent;

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x940A28", Offset = "0x940A28", VA = "0x940A28")]
		public WeatherCurrentSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000187")]
	public class WeatherPostFXSceneSettings
	{
		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m_fxBloomIntensity;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m_fxTemperature;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_fxTint;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_fxVignetteIntensity;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color m_fxColorFilter;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_windSpeed;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_windTurbulence;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_windFrequency;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_windMultiplier;

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x940A30", Offset = "0x940A30", VA = "0x940A30")]
		public WeatherPostFXSceneSettings()
		{
		}
	}
	[Token(Token = "0x2000188")]
	[ExecuteAlways]
	public class ProceduralWorldsGlobalWeather : MonoBehaviour
	{
		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private static ProceduralWorldsGlobalWeather m_instance;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_enableAutoDOF;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera m_camera;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask m_depthOfFieldDetectionLayers;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_thunderVolume;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_additionalFogDistanceLinear;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_additionalFogDistanceExponential;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color m_additionalFogColor;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool m_instantStartStop;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool m_instantVFX;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool m_disableWeatherFX;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		public bool m_weatherSystemActive;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool m_getCurrentSnowValue;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_currentSnowIntensity;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_currentSnowVolume;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool m_getCurrentRainValue;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_currentRainVolume;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float m_currentRainIntensity;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float m_currentRainParticleAlpha;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GaiaConstants.EnvironmentRenderer m_renderPipeline;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool IsRaining;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool IsSnowing;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		public bool DoesAtmosphereNeedUpdate;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public WeatherCurrentSettings CurrentSettings;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public WeatherPostFXSceneSettings CurrentScenePostFXSettings;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool IsNetworkSynced;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool ForceUpdateSystem;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform m_player;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ParticleSystem m_snowParticles;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ParticleSystem.EmissionModule m_snowParticleEmission;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ParticleSystem m_snowVFX;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ParticleSystem.EmissionModule m_snowVFXEmission;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public MeshRenderer m_rainParticles;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public ParticleSystem m_rainVFX;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject m_cloudsMeshRenderer;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float m_snowStormChance;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float m_snowStepSize;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public SnowMode m_snowMode;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public WeatherSettings m_snowWeatherSettings;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public RainMode m_rainMode;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float m_rainHeight;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float m_rainStepSize;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public WeatherSettings m_rainWeatherSettings;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public GaiaConstants.ThunderStormType m_stormType;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public bool m_enableThunder;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float ThunderWaitDuration;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float m_thunderChance;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float m_weatherFadeDuration;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public bool m_modifyFog;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
		public bool m_modifyWind;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10E")]
		public bool m_modifySkybox;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10F")]
		public bool m_modifyPostProcessing;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public bool m_modifySun;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		public bool m_modifyAmbient;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
		public bool m_modifyClouds;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float m_seasonTransitionDuration;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public bool m_panelWindSettings;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		public bool m_panelWeatherSettings;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
		public bool m_panelSeasonSettings;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11B")]
		public bool m_panelAtmosphereSettings;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public bool m_panelParticlesSettings;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
		public bool m_panelCloudSettings;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11E")]
		public bool m_panelSnowSettings;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11F")]
		public bool m_panelRainSettings;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool m_panelThunderSettings;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private AudioReverbFilter AudioReverbFilter;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private AudioReverbPreset AudioReverbPreset;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		private float m_globalVolume;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private float m_rainVolume;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		private float m_snowVolume;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private bool m_runInEditor;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		private float m_stepStepSize;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private float TransationTime;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		private float m_currentTime;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private Vector3 m_lastKnownLocation;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private Gradient m_todSkyboxTint;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private AnimationCurve m_todSkyboxFogHeight;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private AnimationCurve m_todSkyboxFogGradient;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private AnimationCurve m_todSkyboxExposure;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private Gradient m_todSunColor;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private Gradient m_todFogColor;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private Gradient m_todAmbientSkyColor;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private Gradient m_todAmbientEquatorColor;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private Gradient m_todAmbientGroundColor;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private AnimationCurve m_todSunIntensity;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private AnimationCurve m_todSunShadowStrength;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private AnimationCurve m_todCloudHeightLevelDensity;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private AnimationCurve m_todCloudHeightLevelThickness;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private AnimationCurve m_todCloudHeightLevelSpeed;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private AnimationCurve m_todCloudOpacity;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private AnimationCurve m_todAmbientIntensity;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private AnimationCurve m_todAtmosphereThickness;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private AnimationCurve m_todFogDensity;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private AnimationCurve m_todFogStartDistance;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private AnimationCurve m_todFogEndDistance;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private AnimationCurve m_todHDRPFogBaseHeight;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private AnimationCurve m_todHDRPFogAnisotropy;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private AnimationCurve m_todHDRPFogLightProbeDimmer;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		private AnimationCurve m_todHDRPFogDepthExtent;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		private Gradient m_todHDRPGroundTint;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		private Gradient m_todHDRPFogAlbedo;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		private float m_todHorizonalAngle;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		[SerializeField]
		private bool m_todEnabled;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private AnimationCurve m_todSunSize;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private AnimationCurve m_todSunSizeConvergence;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		public AnimationCurve m_todPostProcessExposure;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		private WindZone m_windZone;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[SerializeField]
		private float m_windSpeed;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		[SerializeField]
		private float m_windDirection;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[SerializeField]
		private float m_minTerrainWind;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		[SerializeField]
		private float m_maxTerrainWind;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[SerializeField]
		private bool m_enableSnow;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x269")]
		[SerializeField]
		private bool m_snowCoverAlwaysEnabled;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		[SerializeField]
		private float m_snowIntensity;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[SerializeField]
		private float m_snowHeight;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		[SerializeField]
		private float m_permanentSnowHeight;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[SerializeField]
		private float m_snowingHeight;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		[SerializeField]
		private float m_snowFadeHeight;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[SerializeField]
		private float m_snowDuration;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		public float m_snowWaitTime;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public float m_snowSampleStrength;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		private float m_snowActualChance;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private float m_snowRandomValue;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		private float m_newSnowIntensity;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private float m_savedSnowingHeight;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		[SerializeField]
		private bool m_enableRain;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[SerializeField]
		private float m_rainIntensity;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		public float m_rainSampleStrength;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[SerializeField]
		private float m_rainDuration;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		public float m_rainWaitTime;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private float m_actualChance;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		private float m_randomValue;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private float m_newRainIntensity;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private float m_thunderWaitDuration;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		[SerializeField]
		private Color m_thunderLightColor;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		[SerializeField]
		private float m_thunderLightIntensity;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		[SerializeField]
		private List<AudioClip> m_thunderAudioSources;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		[SerializeField]
		public float m_thunderLightRadius;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		private float m_thunderActualChance;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private float m_thunderRandomValue;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		[SerializeField]
		private bool m_enableClouds;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		[SerializeField]
		private int m_cloudHeight;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		[SerializeField]
		private Color m_cloudAmbientColor;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		[SerializeField]
		private float m_cloudScale;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[SerializeField]
		private float m_cloudOffset;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[SerializeField]
		private AnimationCurve m_cloudDomeBrightness;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[SerializeField]
		private float m_cloudBrightness;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		[SerializeField]
		private float m_cloudFade;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		[SerializeField]
		private Vector4 m_cloudTilingAndWind;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		[SerializeField]
		private Vector4 m_cloudOpacity;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		[SerializeField]
		private float m_cloudRotationSpeedLow;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		[SerializeField]
		private float m_cloudRotationSpeedMiddle;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		[SerializeField]
		private float m_cloudRotationSpeedFar;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		[SerializeField]
		private bool m_enableSeasons;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		[SerializeField]
		private SeasonMode m_seasonMode;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
		[SerializeField]
		private float m_season;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		[SerializeField]
		private Color m_seasonWinterTint;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		[SerializeField]
		private Color m_seasonSpringTint;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		[SerializeField]
		private Color m_seasonSummerTint;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		[SerializeField]
		private Color m_seasonAutumnTint;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		[SerializeField]
		private Material m_waterMaterial;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		[SerializeField]
		private GaiaAudioManager GaiaAudioManager;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		private float m_newSkyboxExposure;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
		private float m_newAmbientIntensity;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		private float m_newSunIntensity;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
		private float m_newWindSpeed;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		[SerializeField]
		private GameObject m_thunderObject;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		[SerializeField]
		private ThunderStrike m_thunderComponent;

		[Token(Token = "0x4001014")]
		private const string m_windZoneObjectName = "PW Wind Zone";

		[Token(Token = "0x4001015")]
		private const string m_globalWindSpeed = "_PW_Global_WindSpeed";

		[Token(Token = "0x4001016")]
		private const string m_globalWindFrequency = "_PW_Global_WindFrequency";

		[Token(Token = "0x4001017")]
		private const string m_globalWindGustDistance = "_PW_Global_WindGustDistance";

		[Token(Token = "0x4001018")]
		private const string m_globalBillboardWind = "PWSF_ BillboardWindStrength";

		[Token(Token = "0x4001019")]
		private const string m_globalWindDirection = "_PW_Global_WindDirection";

		[Token(Token = "0x400101A")]
		public const string m_globalSeasonTint = "_PW_Global_SeasonalTint";

		[Token(Token = "0x400101B")]
		private const string m_globalWaveSpeed = "PWSF_GlobalWindIntensityWater";

		[Token(Token = "0x400101C")]
		private const string m_shaderRainIntensity = "Dynamic Rain Intensity";

		[Token(Token = "0x400101D")]
		public const string m_globalSnowIntensity = "_PW_Global_CoverLayer1Progress";

		[Token(Token = "0x400101E")]
		public const string m_globalCoverLayer1FadeStart = "_PW_Global_CoverLayer1FadeStart";

		[Token(Token = "0x400101F")]
		public const string m_globalCoverLayer1FadeDist = "_PW_Global_CoverLayer1FadeDist";

		[Token(Token = "0x4001020")]
		private const string m_shaderSeasonColorShift = "_PW_SeasonalTintAmount";

		[Token(Token = "0x4001021")]
		private const string m_builtInParticleShader = "Particles/Standard Surface";

		[Token(Token = "0x4001022")]
		private const string m_lightweightParticleShader = "Legacy Shaders/Particles/Additive";

		[Token(Token = "0x4001023")]
		private const string m_universalParticleShader = "Legacy Shaders/Particles/Additive";

		[Token(Token = "0x4001024")]
		private const string m_highDefinitionParticleShader = "Legacy Shaders/Particles/Additive";

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		private bool m_updateWind;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C9")]
		private bool m_updateSnow;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CA")]
		private bool m_updateRain;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CB")]
		private bool m_updateSeason;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
		private bool m_updateClouds;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CD")]
		private bool IsCurrentSettingsSet;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CE")]
		public bool IsSnowingFinished;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CF")]
		public bool IsRainingFinished;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		public bool SkyboxShaderValid;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D1")]
		private bool IsThundering;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D2")]
		public bool CloudSystemValid;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D3")]
		public bool WaterSystemValid;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
		public bool AtmosphereSystemValid;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D5")]
		private bool GaiaSceneProfileValid;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		[SerializeField]
		private AudioSource m_snowAudioSource;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		[SerializeField]
		private AudioSource m_rainAudioSource;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		[SerializeField]
		private Terrain[] m_terrains;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		[SerializeField]
		private GroundParticlesCulling[] m_groundParticlesCullings;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Camera[] m_mainCameras;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		[SerializeField]
		private Material m_skyboxMaterial;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		public Light m_sunLight;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		public Light m_moonLight;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		private PostProcessProfile m_processProfile;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		private PostProcessVolume[] m_volumes;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		[SerializeField]
		private SceneProfile m_sceneProfile;

		[Token(Token = "0x1700010C")]
		public static ProceduralWorldsGlobalWeather Instance
		{
			[Token(Token = "0x6000A41")]
			[Address(RVA = "0xAA5BD0", Offset = "0xAA5BD0", VA = "0xAA5BD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010D")]
		public float GlobalVolume
		{
			[Token(Token = "0x6000A42")]
			[Address(RVA = "0xAA5CBC", Offset = "0xAA5CBC", VA = "0xAA5CBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A43")]
			[Address(RVA = "0xAA5CC4", Offset = "0xAA5CC4", VA = "0xAA5CC4")]
			set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public float RainVolume
		{
			[Token(Token = "0x6000A44")]
			[Address(RVA = "0xAA60B4", Offset = "0xAA60B4", VA = "0xAA60B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A45")]
			[Address(RVA = "0xAA60BC", Offset = "0xAA60BC", VA = "0xAA60BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public float SnowVolume
		{
			[Token(Token = "0x6000A46")]
			[Address(RVA = "0xAA60D4", Offset = "0xAA60D4", VA = "0xAA60D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A47")]
			[Address(RVA = "0xAA60DC", Offset = "0xAA60DC", VA = "0xAA60DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000110")]
		public float AdditionalFogDistanceLinear
		{
			[Token(Token = "0x6000A48")]
			[Address(RVA = "0xAA60F4", Offset = "0xAA60F4", VA = "0xAA60F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A49")]
			[Address(RVA = "0xAA60FC", Offset = "0xAA60FC", VA = "0xAA60FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000111")]
		public float AdditionalFogDistanceExponential
		{
			[Token(Token = "0x6000A4A")]
			[Address(RVA = "0xAA6198", Offset = "0xAA6198", VA = "0xAA6198")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A4B")]
			[Address(RVA = "0xAA61A0", Offset = "0xAA61A0", VA = "0xAA61A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000112")]
		public Color AdditionalFogColor
		{
			[Token(Token = "0x6000A4C")]
			[Address(RVA = "0xAA623C", Offset = "0xAA623C", VA = "0xAA623C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000A4D")]
			[Address(RVA = "0xAA6248", Offset = "0xAA6248", VA = "0xAA6248")]
			set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public bool RunInEditor
		{
			[Token(Token = "0x6000A4E")]
			[Address(RVA = "0xAA631C", Offset = "0xAA631C", VA = "0xAA631C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A4F")]
			[Address(RVA = "0xAA6324", Offset = "0xAA6324", VA = "0xAA6324")]
			set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public float SystemStepSize
		{
			[Token(Token = "0x6000A50")]
			[Address(RVA = "0xAA6618", Offset = "0xAA6618", VA = "0xAA6618")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A51")]
			[Address(RVA = "0xAA6620", Offset = "0xAA6620", VA = "0xAA6620")]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public Vector3 LastKnownLocation
		{
			[Token(Token = "0x6000A52")]
			[Address(RVA = "0xAA663C", Offset = "0xAA663C", VA = "0xAA663C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000A53")]
			[Address(RVA = "0xAA664C", Offset = "0xAA664C", VA = "0xAA664C")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public Gradient TODSkyboxTint
		{
			[Token(Token = "0x6000A54")]
			[Address(RVA = "0xAA6AB8", Offset = "0xAA6AB8", VA = "0xAA6AB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A55")]
			[Address(RVA = "0xAA6AC0", Offset = "0xAA6AC0", VA = "0xAA6AC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public AnimationCurve TODSkyboxFogHeight
		{
			[Token(Token = "0x6000A56")]
			[Address(RVA = "0xAA6D30", Offset = "0xAA6D30", VA = "0xAA6D30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A57")]
			[Address(RVA = "0xAA6D38", Offset = "0xAA6D38", VA = "0xAA6D38")]
			set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public AnimationCurve TODSkyboxFogGradient
		{
			[Token(Token = "0x6000A58")]
			[Address(RVA = "0xAA6D58", Offset = "0xAA6D58", VA = "0xAA6D58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A59")]
			[Address(RVA = "0xAA6D60", Offset = "0xAA6D60", VA = "0xAA6D60")]
			set
			{
			}
		}

		[Token(Token = "0x17000119")]
		public AnimationCurve TODSkyboxExposure
		{
			[Token(Token = "0x6000A5A")]
			[Address(RVA = "0xAA6D80", Offset = "0xAA6D80", VA = "0xAA6D80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A5B")]
			[Address(RVA = "0xAA6D88", Offset = "0xAA6D88", VA = "0xAA6D88")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public Gradient TODSunColor
		{
			[Token(Token = "0x6000A5C")]
			[Address(RVA = "0xAA6DA8", Offset = "0xAA6DA8", VA = "0xAA6DA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0xAA6DB0", Offset = "0xAA6DB0", VA = "0xAA6DB0")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public Gradient TODFogColor
		{
			[Token(Token = "0x6000A5E")]
			[Address(RVA = "0xAA6DD0", Offset = "0xAA6DD0", VA = "0xAA6DD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A5F")]
			[Address(RVA = "0xAA6DD8", Offset = "0xAA6DD8", VA = "0xAA6DD8")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public Gradient TODAmbientSkyColor
		{
			[Token(Token = "0x6000A60")]
			[Address(RVA = "0xAA6DF8", Offset = "0xAA6DF8", VA = "0xAA6DF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A61")]
			[Address(RVA = "0xAA6E00", Offset = "0xAA6E00", VA = "0xAA6E00")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public Gradient TODAmbientEquatorColor
		{
			[Token(Token = "0x6000A62")]
			[Address(RVA = "0xAA6E20", Offset = "0xAA6E20", VA = "0xAA6E20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A63")]
			[Address(RVA = "0xAA6E28", Offset = "0xAA6E28", VA = "0xAA6E28")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public Gradient TODAmbientGroundColor
		{
			[Token(Token = "0x6000A64")]
			[Address(RVA = "0xAA6E48", Offset = "0xAA6E48", VA = "0xAA6E48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A65")]
			[Address(RVA = "0xAA6E50", Offset = "0xAA6E50", VA = "0xAA6E50")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public AnimationCurve TODSunIntensity
		{
			[Token(Token = "0x6000A66")]
			[Address(RVA = "0xAA6E70", Offset = "0xAA6E70", VA = "0xAA6E70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A67")]
			[Address(RVA = "0xAA6E78", Offset = "0xAA6E78", VA = "0xAA6E78")]
			set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public AnimationCurve TODSunShadowStrength
		{
			[Token(Token = "0x6000A68")]
			[Address(RVA = "0xAA6E98", Offset = "0xAA6E98", VA = "0xAA6E98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A69")]
			[Address(RVA = "0xAA6EA0", Offset = "0xAA6EA0", VA = "0xAA6EA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000121")]
		public AnimationCurve TODCloudHeightLevelDensity
		{
			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0xAA6EC0", Offset = "0xAA6EC0", VA = "0xAA6EC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A6B")]
			[Address(RVA = "0xAA6EC8", Offset = "0xAA6EC8", VA = "0xAA6EC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000122")]
		public AnimationCurve TODCloudHeightLevelThickness
		{
			[Token(Token = "0x6000A6C")]
			[Address(RVA = "0xAA6EE8", Offset = "0xAA6EE8", VA = "0xAA6EE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A6D")]
			[Address(RVA = "0xAA6EF0", Offset = "0xAA6EF0", VA = "0xAA6EF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000123")]
		public AnimationCurve TODCloudHeightLevelSpeed
		{
			[Token(Token = "0x6000A6E")]
			[Address(RVA = "0xAA6F10", Offset = "0xAA6F10", VA = "0xAA6F10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A6F")]
			[Address(RVA = "0xAA6F18", Offset = "0xAA6F18", VA = "0xAA6F18")]
			set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public AnimationCurve TODCloudOpacity
		{
			[Token(Token = "0x6000A70")]
			[Address(RVA = "0xAA6F38", Offset = "0xAA6F38", VA = "0xAA6F38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A71")]
			[Address(RVA = "0xAA6F40", Offset = "0xAA6F40", VA = "0xAA6F40")]
			set
			{
			}
		}

		[Token(Token = "0x17000125")]
		public AnimationCurve TODAmbientIntensity
		{
			[Token(Token = "0x6000A72")]
			[Address(RVA = "0xAA6F60", Offset = "0xAA6F60", VA = "0xAA6F60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A73")]
			[Address(RVA = "0xAA6F68", Offset = "0xAA6F68", VA = "0xAA6F68")]
			set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public AnimationCurve TODAtmosphereThickness
		{
			[Token(Token = "0x6000A74")]
			[Address(RVA = "0xAA6F88", Offset = "0xAA6F88", VA = "0xAA6F88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A75")]
			[Address(RVA = "0xAA6F90", Offset = "0xAA6F90", VA = "0xAA6F90")]
			set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public AnimationCurve TODFogDensity
		{
			[Token(Token = "0x6000A76")]
			[Address(RVA = "0xAA6FB0", Offset = "0xAA6FB0", VA = "0xAA6FB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A77")]
			[Address(RVA = "0xAA6FB8", Offset = "0xAA6FB8", VA = "0xAA6FB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public AnimationCurve TODFogStartDistance
		{
			[Token(Token = "0x6000A78")]
			[Address(RVA = "0xAA6FD8", Offset = "0xAA6FD8", VA = "0xAA6FD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A79")]
			[Address(RVA = "0xAA6FE0", Offset = "0xAA6FE0", VA = "0xAA6FE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public AnimationCurve TODFogEndDistance
		{
			[Token(Token = "0x6000A7A")]
			[Address(RVA = "0xAA7000", Offset = "0xAA7000", VA = "0xAA7000")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A7B")]
			[Address(RVA = "0xAA7008", Offset = "0xAA7008", VA = "0xAA7008")]
			set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public AnimationCurve TODHDRPFogBaseHeight
		{
			[Token(Token = "0x6000A7C")]
			[Address(RVA = "0xAA7028", Offset = "0xAA7028", VA = "0xAA7028")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0xAA7030", Offset = "0xAA7030", VA = "0xAA7030")]
			set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public AnimationCurve TODHDRPFogAnisotropy
		{
			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0xAA7050", Offset = "0xAA7050", VA = "0xAA7050")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A7F")]
			[Address(RVA = "0xAA7058", Offset = "0xAA7058", VA = "0xAA7058")]
			set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public AnimationCurve TODHDRPFogLightProbeDimmer
		{
			[Token(Token = "0x6000A80")]
			[Address(RVA = "0xAA7078", Offset = "0xAA7078", VA = "0xAA7078")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A81")]
			[Address(RVA = "0xAA7080", Offset = "0xAA7080", VA = "0xAA7080")]
			set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public AnimationCurve TODHDRPFogDepthExtent
		{
			[Token(Token = "0x6000A82")]
			[Address(RVA = "0xAA70A0", Offset = "0xAA70A0", VA = "0xAA70A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A83")]
			[Address(RVA = "0xAA70A8", Offset = "0xAA70A8", VA = "0xAA70A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public Gradient TODHDRPGroundTint
		{
			[Token(Token = "0x6000A84")]
			[Address(RVA = "0xAA70C8", Offset = "0xAA70C8", VA = "0xAA70C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A85")]
			[Address(RVA = "0xAA70D0", Offset = "0xAA70D0", VA = "0xAA70D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public Gradient TODHDRPFogAlbedo
		{
			[Token(Token = "0x6000A86")]
			[Address(RVA = "0xAA70F0", Offset = "0xAA70F0", VA = "0xAA70F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A87")]
			[Address(RVA = "0xAA70F8", Offset = "0xAA70F8", VA = "0xAA70F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public AnimationCurve TODSunSize
		{
			[Token(Token = "0x6000A88")]
			[Address(RVA = "0xAA7118", Offset = "0xAA7118", VA = "0xAA7118")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A89")]
			[Address(RVA = "0xAA7120", Offset = "0xAA7120", VA = "0xAA7120")]
			set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public AnimationCurve TODSunSizeConvergence
		{
			[Token(Token = "0x6000A8A")]
			[Address(RVA = "0xAA7140", Offset = "0xAA7140", VA = "0xAA7140")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A8B")]
			[Address(RVA = "0xAA7148", Offset = "0xAA7148", VA = "0xAA7148")]
			set
			{
			}
		}

		[Token(Token = "0x17000132")]
		public AnimationCurve TODPostProcessExposure
		{
			[Token(Token = "0x6000A8C")]
			[Address(RVA = "0xAA7168", Offset = "0xAA7168", VA = "0xAA7168")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A8D")]
			[Address(RVA = "0xAA7170", Offset = "0xAA7170", VA = "0xAA7170")]
			set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public WindZone WindZone
		{
			[Token(Token = "0x6000A8E")]
			[Address(RVA = "0xAA7190", Offset = "0xAA7190", VA = "0xAA7190")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A8F")]
			[Address(RVA = "0xAA7198", Offset = "0xAA7198", VA = "0xAA7198")]
			set
			{
			}
		}

		[Token(Token = "0x17000134")]
		public float WindSpeed
		{
			[Token(Token = "0x6000A90")]
			[Address(RVA = "0xAA7238", Offset = "0xAA7238", VA = "0xAA7238")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A91")]
			[Address(RVA = "0xAA7240", Offset = "0xAA7240", VA = "0xAA7240")]
			set
			{
			}
		}

		[Token(Token = "0x17000135")]
		public float WindDirection
		{
			[Token(Token = "0x6000A92")]
			[Address(RVA = "0xAA7260", Offset = "0xAA7260", VA = "0xAA7260")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A93")]
			[Address(RVA = "0xAA7268", Offset = "0xAA7268", VA = "0xAA7268")]
			set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public float MinTerrainWind
		{
			[Token(Token = "0x6000A94")]
			[Address(RVA = "0xAA7288", Offset = "0xAA7288", VA = "0xAA7288")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A95")]
			[Address(RVA = "0xAA7290", Offset = "0xAA7290", VA = "0xAA7290")]
			set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public float MaxTerrainWind
		{
			[Token(Token = "0x6000A96")]
			[Address(RVA = "0xAA72B0", Offset = "0xAA72B0", VA = "0xAA72B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0xAA72B8", Offset = "0xAA72B8", VA = "0xAA72B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public bool EnableSnow
		{
			[Token(Token = "0x6000A98")]
			[Address(RVA = "0xAA72D8", Offset = "0xAA72D8", VA = "0xAA72D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A99")]
			[Address(RVA = "0xAA72E0", Offset = "0xAA72E0", VA = "0xAA72E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public bool SnowCoverAlwaysEnabled
		{
			[Token(Token = "0x6000A9A")]
			[Address(RVA = "0xAA730C", Offset = "0xAA730C", VA = "0xAA730C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A9B")]
			[Address(RVA = "0xAA7314", Offset = "0xAA7314", VA = "0xAA7314")]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public float SnowIntensity
		{
			[Token(Token = "0x6000A9C")]
			[Address(RVA = "0xAA7340", Offset = "0xAA7340", VA = "0xAA7340")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A9D")]
			[Address(RVA = "0xAA7348", Offset = "0xAA7348", VA = "0xAA7348")]
			set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public float SnowHeight
		{
			[Token(Token = "0x6000A9E")]
			[Address(RVA = "0xAA736C", Offset = "0xAA736C", VA = "0xAA736C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A9F")]
			[Address(RVA = "0xAA7374", Offset = "0xAA7374", VA = "0xAA7374")]
			set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public float PermanentSnowHeight
		{
			[Token(Token = "0x6000AA0")]
			[Address(RVA = "0xAA7394", Offset = "0xAA7394", VA = "0xAA7394")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AA1")]
			[Address(RVA = "0xAA739C", Offset = "0xAA739C", VA = "0xAA739C")]
			set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public float SnowingHeight
		{
			[Token(Token = "0x6000AA2")]
			[Address(RVA = "0xAA73BC", Offset = "0xAA73BC", VA = "0xAA73BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AA3")]
			[Address(RVA = "0xAA73C4", Offset = "0xAA73C4", VA = "0xAA73C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700013E")]
		public float SnowFadeHeight
		{
			[Token(Token = "0x6000AA4")]
			[Address(RVA = "0xAA73E4", Offset = "0xAA73E4", VA = "0xAA73E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0xAA73EC", Offset = "0xAA73EC", VA = "0xAA73EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700013F")]
		public bool EnableRain
		{
			[Token(Token = "0x6000AA6")]
			[Address(RVA = "0xAA740C", Offset = "0xAA740C", VA = "0xAA740C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0xAA7414", Offset = "0xAA7414", VA = "0xAA7414")]
			set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public float RainIntensity
		{
			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0xAA7440", Offset = "0xAA7440", VA = "0xAA7440")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AA9")]
			[Address(RVA = "0xAA7448", Offset = "0xAA7448", VA = "0xAA7448")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public Color ThunderLightColor
		{
			[Token(Token = "0x6000AAA")]
			[Address(RVA = "0xAA746C", Offset = "0xAA746C", VA = "0xAA746C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000AAB")]
			[Address(RVA = "0xAA7480", Offset = "0xAA7480", VA = "0xAA7480")]
			set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public float ThunderLightIntensity
		{
			[Token(Token = "0x6000AAC")]
			[Address(RVA = "0xAA7704", Offset = "0xAA7704", VA = "0xAA7704")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0xAA770C", Offset = "0xAA770C", VA = "0xAA770C")]
			set
			{
			}
		}

		[Token(Token = "0x17000143")]
		public List<AudioClip> ThunderAudioSources
		{
			[Token(Token = "0x6000AAE")]
			[Address(RVA = "0xAA7724", Offset = "0xAA7724", VA = "0xAA7724")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AAF")]
			[Address(RVA = "0xAA772C", Offset = "0xAA772C", VA = "0xAA772C")]
			set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public float ThunderLightRadius
		{
			[Token(Token = "0x6000AB0")]
			[Address(RVA = "0xAA7744", Offset = "0xAA7744", VA = "0xAA7744")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0xAA774C", Offset = "0xAA774C", VA = "0xAA774C")]
			set
			{
			}
		}

		[Token(Token = "0x17000145")]
		public bool EnableClouds
		{
			[Token(Token = "0x6000AB2")]
			[Address(RVA = "0xAA7764", Offset = "0xAA7764", VA = "0xAA7764")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0xAA776C", Offset = "0xAA776C", VA = "0xAA776C")]
			set
			{
			}
		}

		[Token(Token = "0x17000146")]
		public int CloudHeight
		{
			[Token(Token = "0x6000AB4")]
			[Address(RVA = "0xAA7F24", Offset = "0xAA7F24", VA = "0xAA7F24")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000AB5")]
			[Address(RVA = "0xAA7F2C", Offset = "0xAA7F2C", VA = "0xAA7F2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public Color CloudAmbientColor
		{
			[Token(Token = "0x6000AB6")]
			[Address(RVA = "0xAA7F4C", Offset = "0xAA7F4C", VA = "0xAA7F4C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000AB7")]
			[Address(RVA = "0xAA7F60", Offset = "0xAA7F60", VA = "0xAA7F60")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public float CloudScale
		{
			[Token(Token = "0x6000AB8")]
			[Address(RVA = "0xAA7FFC", Offset = "0xAA7FFC", VA = "0xAA7FFC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AB9")]
			[Address(RVA = "0xAA8004", Offset = "0xAA8004", VA = "0xAA8004")]
			set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public float CloudOffset
		{
			[Token(Token = "0x6000ABA")]
			[Address(RVA = "0xAA8024", Offset = "0xAA8024", VA = "0xAA8024")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ABB")]
			[Address(RVA = "0xAA802C", Offset = "0xAA802C", VA = "0xAA802C")]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public float CloudBrightness
		{
			[Token(Token = "0x6000ABC")]
			[Address(RVA = "0xAA804C", Offset = "0xAA804C", VA = "0xAA804C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ABD")]
			[Address(RVA = "0xAA8054", Offset = "0xAA8054", VA = "0xAA8054")]
			set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public AnimationCurve CloudDomeBrightness
		{
			[Token(Token = "0x6000ABE")]
			[Address(RVA = "0xAA8074", Offset = "0xAA8074", VA = "0xAA8074")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ABF")]
			[Address(RVA = "0xAA807C", Offset = "0xAA807C", VA = "0xAA807C")]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public float CloudFade
		{
			[Token(Token = "0x6000AC0")]
			[Address(RVA = "0xAA809C", Offset = "0xAA809C", VA = "0xAA809C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AC1")]
			[Address(RVA = "0xAA80A4", Offset = "0xAA80A4", VA = "0xAA80A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public Vector4 CloudTilingAndWind
		{
			[Token(Token = "0x6000AC2")]
			[Address(RVA = "0xAA80C4", Offset = "0xAA80C4", VA = "0xAA80C4")]
			get
			{
				return default(Vector4);
			}
			[Token(Token = "0x6000AC3")]
			[Address(RVA = "0xAA80D8", Offset = "0xAA80D8", VA = "0xAA80D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public Vector4 CloudOpacity
		{
			[Token(Token = "0x6000AC4")]
			[Address(RVA = "0xAA8144", Offset = "0xAA8144", VA = "0xAA8144")]
			get
			{
				return default(Vector4);
			}
			[Token(Token = "0x6000AC5")]
			[Address(RVA = "0xAA8158", Offset = "0xAA8158", VA = "0xAA8158")]
			set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public float CloudRotationSpeedLow
		{
			[Token(Token = "0x6000AC6")]
			[Address(RVA = "0xAA81C4", Offset = "0xAA81C4", VA = "0xAA81C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AC7")]
			[Address(RVA = "0xAA81CC", Offset = "0xAA81CC", VA = "0xAA81CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public float CloudRotationSpeedMiddle
		{
			[Token(Token = "0x6000AC8")]
			[Address(RVA = "0xAA81EC", Offset = "0xAA81EC", VA = "0xAA81EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AC9")]
			[Address(RVA = "0xAA81F4", Offset = "0xAA81F4", VA = "0xAA81F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public float CloudRotationSpeedFar
		{
			[Token(Token = "0x6000ACA")]
			[Address(RVA = "0xAA8214", Offset = "0xAA8214", VA = "0xAA8214")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ACB")]
			[Address(RVA = "0xAA821C", Offset = "0xAA821C", VA = "0xAA821C")]
			set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public bool EnableSeasons
		{
			[Token(Token = "0x6000ACC")]
			[Address(RVA = "0xAA823C", Offset = "0xAA823C", VA = "0xAA823C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000ACD")]
			[Address(RVA = "0xAA8244", Offset = "0xAA8244", VA = "0xAA8244")]
			set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public SeasonMode SeasonMode
		{
			[Token(Token = "0x6000ACE")]
			[Address(RVA = "0xAA8270", Offset = "0xAA8270", VA = "0xAA8270")]
			get
			{
				return default(SeasonMode);
			}
			[Token(Token = "0x6000ACF")]
			[Address(RVA = "0xAA8278", Offset = "0xAA8278", VA = "0xAA8278")]
			set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public float Season
		{
			[Token(Token = "0x6000AD0")]
			[Address(RVA = "0xAA8298", Offset = "0xAA8298", VA = "0xAA8298")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AD1")]
			[Address(RVA = "0xAA82A0", Offset = "0xAA82A0", VA = "0xAA82A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public Color SeasonWinterTint
		{
			[Token(Token = "0x6000AD2")]
			[Address(RVA = "0xAA82C0", Offset = "0xAA82C0", VA = "0xAA82C0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000AD3")]
			[Address(RVA = "0xAA82D4", Offset = "0xAA82D4", VA = "0xAA82D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public Color SeasonSpringTint
		{
			[Token(Token = "0x6000AD4")]
			[Address(RVA = "0xAA8370", Offset = "0xAA8370", VA = "0xAA8370")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000AD5")]
			[Address(RVA = "0xAA8384", Offset = "0xAA8384", VA = "0xAA8384")]
			set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public Color SeasonSummerTint
		{
			[Token(Token = "0x6000AD6")]
			[Address(RVA = "0xAA8420", Offset = "0xAA8420", VA = "0xAA8420")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000AD7")]
			[Address(RVA = "0xAA8434", Offset = "0xAA8434", VA = "0xAA8434")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public Color SeasonAutumnTint
		{
			[Token(Token = "0x6000AD8")]
			[Address(RVA = "0xAA84D0", Offset = "0xAA84D0", VA = "0xAA84D0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000AD9")]
			[Address(RVA = "0xAA84E4", Offset = "0xAA84E4", VA = "0xAA84E4")]
			set
			{
			}
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xAA8580", Offset = "0xAA8580", VA = "0xAA8580")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xAAAD74", Offset = "0xAAAD74", VA = "0xAAAD74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xAAB40C", Offset = "0xAAB40C", VA = "0xAAB40C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xAAB7EC", Offset = "0xAAB7EC", VA = "0xAAB7EC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0xAAB8C0", Offset = "0xAAB8C0", VA = "0xAAB8C0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0xAA8630", Offset = "0xAA8630", VA = "0xAA8630")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0xAA95C0", Offset = "0xAA95C0", VA = "0xAA95C0")]
		public void InitializeShaderSetup()
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xAAAE48", Offset = "0xAAAE48", VA = "0xAAAE48")]
		private void DeInitialize()
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0xAAB410", Offset = "0xAAB410", VA = "0xAAB410")]
		private void DeinitializePostFX()
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0xAAC104", Offset = "0xAAC104", VA = "0xAAC104")]
		private void CheckRainConditions()
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0xAABE2C", Offset = "0xAABE2C", VA = "0xAABE2C")]
		private void CheckSnowConditions()
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0xAAC468", Offset = "0xAAC468", VA = "0xAAC468")]
		private void CheckThunderConditions()
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0xAABCA0", Offset = "0xAABCA0", VA = "0xAABCA0")]
		public void UpdateAllSystems(bool revertDefault)
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xAAFCC4", Offset = "0xAAFCC4", VA = "0xAAFCC4")]
		public void ForceUpdateSkyShaders()
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xAA5CDC", Offset = "0xAA5CDC", VA = "0xAA5CDC")]
		private void UpdateAudioVolume()
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xAA6AE0", Offset = "0xAA6AE0", VA = "0xAA6AE0")]
		private void UpdateWeatherEvents()
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xAAF750", Offset = "0xAAF750", VA = "0xAAF750")]
		private void UpdateWindSettings(WindZone windZone)
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xAAF31C", Offset = "0xAAF31C", VA = "0xAAF31C")]
		public void UpdateWindValues(GaiaConstants.GaiaGlobalWindType windType)
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xAAFF10", Offset = "0xAAFF10", VA = "0xAAFF10")]
		private void UpdateRainSettings()
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xAB00D4", Offset = "0xAB00D4", VA = "0xAB00D4")]
		private void UpdateSnowSettings()
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xAB0378", Offset = "0xAB0378", VA = "0xAB0378")]
		private void UpdateSeasonMode()
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xAAF9EC", Offset = "0xAAF9EC", VA = "0xAAF9EC")]
		private void UpdateTerrainWindSettings()
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xAAC5F8", Offset = "0xAAC5F8", VA = "0xAAC5F8")]
		private bool UpdateWeatherSystem()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xAA7790", Offset = "0xAA7790", VA = "0xAA7790")]
		private void UpdateCloudSettings()
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xAA7514", Offset = "0xAA7514", VA = "0xAA7514")]
		private void UpdateThunderSystem()
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xAB2098", Offset = "0xAB2098", VA = "0xAB2098")]
		private bool EnableRainSystem()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xAB10DC", Offset = "0xAB10DC", VA = "0xAB10DC")]
		private bool DisableRainSystem()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xAB0984", Offset = "0xAB0984", VA = "0xAB0984")]
		private bool EnableSnowSystem()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xAB1914", Offset = "0xAB1914", VA = "0xAB1914")]
		private bool DisableSnowSystem()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xAB75F4", Offset = "0xAB75F4", VA = "0xAB75F4")]
		private bool FinishedWeatherCheck(float weatherIntensity, float volume)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xAB95DC", Offset = "0xAB95DC", VA = "0xAB95DC")]
		private bool FinishedVolumeCheck(AudioSource currentSource, float volumeCheck)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xAAE348", Offset = "0xAAE348", VA = "0xAAE348")]
		private void GetScenePostProcessingSettings()
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xAACDC0", Offset = "0xAACDC0", VA = "0xAACDC0")]
		private void GetVolume()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xAAF528", Offset = "0xAAF528", VA = "0xAAF528")]
		private bool ValidateSkyboxShader()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xAB77E4", Offset = "0xAB77E4", VA = "0xAB77E4")]
		private void SetAllAfterFinishedLerping(WeatherSettings weatherSettings)
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xAB3280", Offset = "0xAB3280", VA = "0xAB3280")]
		private void SetRainVFX(bool enabling, MeshRenderer renderer, ParticleSystem particleSystem)
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xAB88A8", Offset = "0xAB88A8", VA = "0xAB88A8")]
		private void SetSnowVFX(bool enabling, ParticleSystem.EmissionModule particleSystem1, ParticleSystem.EmissionModule particleSystemEmission1, bool instantStartStop = false)
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0xAB7088", Offset = "0xAB7088", VA = "0xAB7088")]
		private void SetParticlesToWeather(MeshRenderer renderer, ParticleSystem particleSystem, WeatherSettings weatherSettings)
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xAB90F8", Offset = "0xAB90F8", VA = "0xAB90F8")]
		private void SetParticlesToSnow(ParticleSystem particleSystem1, ParticleSystem particleSystem2, WeatherSettings weatherSettings)
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xAAD57C", Offset = "0xAAD57C", VA = "0xAAD57C")]
		private void SetSeasons()
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xAB37C0", Offset = "0xAB37C0", VA = "0xAB37C0")]
		private void SetCloudsToWeather(bool enabling, WeatherSettings weatherSettings)
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xAB40B0", Offset = "0xAB40B0", VA = "0xAB40B0")]
		private void SetSkyboxToWeather(bool enabling, WeatherSettings weatherSettings)
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xAB957C", Offset = "0xAB957C", VA = "0xAB957C")]
		private void SetSnowHeightToWeather(bool enabling, float snowHeight)
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0xAB40AC", Offset = "0xAB40AC", VA = "0xAB40AC")]
		private void SetHDRPSkyboxToWeather(bool enabling, WeatherSettings weatherSettings)
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xAB5ED4", Offset = "0xAB5ED4", VA = "0xAB5ED4")]
		private void SetSunToWeather(bool enabling, bool weatherActive, WeatherSettings weatherSettings)
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0xAB5ED0", Offset = "0xAB5ED0", VA = "0xAB5ED0")]
		private void SetHDRPSunToWeather(bool enabling, WeatherSettings weatherSettings)
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0xAB5C88", Offset = "0xAB5C88", VA = "0xAB5C88")]
		private void SetWindToWeather(bool enabling, WeatherSettings weatherSettings)
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0xAB53A4", Offset = "0xAB53A4", VA = "0xAB53A4")]
		private void SetFXToWeather(bool enabling, WeatherSettings weatherSettings)
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xAB5104", Offset = "0xAB5104", VA = "0xAB5104")]
		private void SetHDRPFXToWeather(bool enabling, WeatherSettings weatherSettings)
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xAB5254", Offset = "0xAB5254", VA = "0xAB5254")]
		private void SetURPFXToWeather(bool enabling, WeatherSettings weatherSettings)
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xAB28DC", Offset = "0xAB28DC", VA = "0xAB28DC")]
		private void SetFogToWeather(bool enabling, WeatherSettings weatherSettings)
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xAB28D8", Offset = "0xAB28D8", VA = "0xAB28D8")]
		private void SetHDRPFogToWeather(bool enabling, WeatherSettings weatherSettings)
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xAB6A08", Offset = "0xAB6A08", VA = "0xAB6A08")]
		private void SetAmbientToWeather(bool enabling, WeatherSettings weatherSettings)
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xAAD0C8", Offset = "0xAAD0C8", VA = "0xAAD0C8")]
		private void SetAutoDOF()
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xAABA54", Offset = "0xAABA54", VA = "0xAABA54")]
		private void SetAutoExposure()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xAAD814", Offset = "0xAAD814", VA = "0xAAD814")]
		private void CheckValidSystems()
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xAAE344", Offset = "0xAAE344", VA = "0xAAE344")]
		private void HDRPUpdateSkyMode(bool setAllDefaults = false)
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xAB060C", Offset = "0xAB060C", VA = "0xAB060C")]
		private Color GetActualSeasonalTintColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xAACBA8", Offset = "0xAACBA8", VA = "0xAACBA8")]
		public bool DoesAtmosphereNeedToUpdate(bool overwrite = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xAAF314", Offset = "0xAAF314", VA = "0xAAF314")]
		private float GenerateRandomRangeValue(float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xAAD968", Offset = "0xAAD968", VA = "0xAAD968")]
		private WindZone GetOrCreateWindZone()
		{
			return null;
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xAAE0E8", Offset = "0xAAE0E8", VA = "0xAAE0E8")]
		public PostProcessProfile GetPostProcessingProfile()
		{
			return null;
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xAB9A68", Offset = "0xAB9A68", VA = "0xAB9A68")]
		public void SetPostProcessingProfile(PostProcessProfile profile, bool directToCamera)
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0xAAD628", Offset = "0xAAD628", VA = "0xAAD628")]
		public void CheckPWSkyPostFXManager()
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xAA66FC", Offset = "0xAA66FC", VA = "0xAA66FC")]
		private float SampleLocationWithMask(Texture2D texture, Vector3 location, ChannelSelection channelSelection)
		{
			return default(float);
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xAB9C88", Offset = "0xAB9C88", VA = "0xAB9C88")]
		private void RemoveWarnings()
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xAB9CBC", Offset = "0xAB9CBC", VA = "0xAB9CBC")]
		public void UpdateLightShadows(GaiaLightingProfileValues profile)
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xAB9DD0", Offset = "0xAB9DD0", VA = "0xAB9DD0")]
		public void UpdateFogMode(FogMode fogMode)
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xAB9DDC", Offset = "0xAB9DDC", VA = "0xAB9DDC")]
		public void SetWeatherStatus(bool enabled)
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xABA22C", Offset = "0xABA22C", VA = "0xABA22C")]
		public void CheckUnderwaterParticlesVFX(bool isUnderwater)
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xAAE708", Offset = "0xAAE708", VA = "0xAAE708")]
		public void GetCurrentSettings()
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xAB2878", Offset = "0xAB2878", VA = "0xAB2878")]
		public float GetFadeTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xABA86C", Offset = "0xABA86C", VA = "0xABA86C")]
		public void PlaySnow()
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xAB9EBC", Offset = "0xAB9EBC", VA = "0xAB9EBC")]
		public void StopSnow()
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xABAAC0", Offset = "0xABAAC0", VA = "0xABAAC0")]
		public void PlayRain()
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xABA06C", Offset = "0xABA06C", VA = "0xABA06C")]
		public void StopRain()
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xAB9770", Offset = "0xAB9770", VA = "0xAB9770")]
		public bool CheckIsNight()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xABACA0", Offset = "0xABACA0", VA = "0xABACA0")]
		public void UpdateHDRPTODPostFX(bool isNight)
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xABACA4", Offset = "0xABACA4", VA = "0xABACA4")]
		public void LoadUpContent()
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xABACA8", Offset = "0xABACA8", VA = "0xABACA8")]
		public void SetupDefaults()
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xABBF90", Offset = "0xABBF90", VA = "0xABBF90")]
		public void RevertToDefaults()
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xAA6348", Offset = "0xAA6348", VA = "0xAA6348")]
		public bool CheckEditorRuntimeValues()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xABBFD4", Offset = "0xABBFD4", VA = "0xABBFD4")]
		public string GetSeason()
		{
			return null;
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0xAB99B0", Offset = "0xAB99B0", VA = "0xAB99B0")]
		public static Color UpdateAdditionalFogColor(Color currentColor, Color extraFogColor)
		{
			return default(Color);
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0xABC0B0", Offset = "0xABC0B0", VA = "0xABC0B0")]
		public static ProceduralWorldsGlobalWeather AddGlobalWeather(GaiaConstants.GaiaGlobalWindType windType, GaiaLightingProfileValues profileValues)
		{
			return null;
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0xABC648", Offset = "0xABC648", VA = "0xABC648")]
		public static void SaveValuesToLightProfile(GaiaLightingProfileValues profile, ProceduralWorldsGlobalWeather weather)
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0xABC73C", Offset = "0xABC73C", VA = "0xABC73C")]
		public static void RemoveGlobalWindShader()
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0xABC908", Offset = "0xABC908", VA = "0xABC908")]
		public static void EnableNetworkSynced()
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0xABC994", Offset = "0xABC994", VA = "0xABC994")]
		public static void DisableNetworkSynced()
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xAADDFC", Offset = "0xAADDFC", VA = "0xAADDFC")]
		public static Transform GetPlayer()
		{
			return null;
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xABCA5C", Offset = "0xABCA5C", VA = "0xABCA5C")]
		public ProceduralWorldsGlobalWeather()
		{
		}
	}
	[Token(Token = "0x2000189")]
	public class ThunderStrike : MonoBehaviour
	{
		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Transform m_player;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Color m_strikeColor;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float m_strikeIntenisty;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public List<AudioClip> m_thunderStrikeAudios;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float m_volume;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public float m_thunderLightRadius;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[SerializeField]
		private ProceduralWorldsGlobalWeather GlobalWeather;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		[SerializeField]
		private AudioSource m_thunderAudioSource;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		[SerializeField]
		private bool PlayThunder;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		[SerializeField]
		private Light ThunderLight;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		[SerializeField]
		private Material ThunderMaterial;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		[SerializeField]
		private bool IsPlaying;

		[Token(Token = "0x17000159")]
		[HideInInspector]
		public bool m_playThunder
		{
			[Token(Token = "0x6000B35")]
			[Address(RVA = "0xA24B20", Offset = "0xA24B20", VA = "0xA24B20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B36")]
			[Address(RVA = "0xA24B28", Offset = "0xA24B28", VA = "0xA24B28")]
			set
			{
			}
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xA24C88", Offset = "0xA24C88", VA = "0xA24C88")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xA24D88", Offset = "0xA24D88", VA = "0xA24D88")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xA24D8C", Offset = "0xA24D8C", VA = "0xA24D8C")]
		public void GetAllVariables()
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xA250F4", Offset = "0xA250F4", VA = "0xA250F4")]
		public void PlayThunderSystem()
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xA25384", Offset = "0xA25384", VA = "0xA25384")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xA25278", Offset = "0xA25278", VA = "0xA25278")]
		private void PlaySound()
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xA24BE8", Offset = "0xA24BE8", VA = "0xA24BE8")]
		private Vector3 CreateLocation(Vector3 playerLosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xA24F34", Offset = "0xA24F34", VA = "0xA24F34")]
		private AudioSource GetOrCreateAudioSource()
		{
			return null;
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xA25014", Offset = "0xA25014", VA = "0xA25014")]
		private Light GetOrCreateLightSource()
		{
			return null;
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xA25388", Offset = "0xA25388", VA = "0xA25388")]
		public ThunderStrike()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public class DemoAPIController : MonoBehaviour
	{
		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GaiaTimeOfDay m_timeOfDayData;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_weatherEnabled;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool m_instantWeatherTransition;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PWSkySeason m_seasonData;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PWSkyWind m_windData;

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xA1A788", Offset = "0xA1A788", VA = "0xA1A788")]
		public DemoAPIController()
		{
		}
	}
	[Token(Token = "0x200018B")]
	public static class GaiaAPI
	{
		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x8BA064", Offset = "0x8BA064", VA = "0x8BA064")]
		public static GaiaTimeOfDay GetTimeOfDaySettings()
		{
			return null;
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x8BA0D0", Offset = "0x8BA0D0", VA = "0x8BA0D0")]
		public static void SetTimeOfDaySettings(GaiaTimeOfDay newGaiaTimeOfDaySettings)
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x8BA1FC", Offset = "0x8BA1FC", VA = "0x8BA1FC")]
		public static int GetTimeOfDayHour()
		{
			return default(int);
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x8BA270", Offset = "0x8BA270", VA = "0x8BA270")]
		public static void SetTimeOfDayHour(int newHour)
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x8BA300", Offset = "0x8BA300", VA = "0x8BA300")]
		public static float GetTimeOfDayMinute()
		{
			return default(float);
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x8BA370", Offset = "0x8BA370", VA = "0x8BA370")]
		public static void SetTimeOfDayMinute(float newMinute)
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x8BA40C", Offset = "0x8BA40C", VA = "0x8BA40C")]
		public static bool GetTimeOfDayEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x8BA488", Offset = "0x8BA488", VA = "0x8BA488")]
		public static void SetTimeOfDayEnabled(bool timeOfDayEnabled)
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x8BA51C", Offset = "0x8BA51C", VA = "0x8BA51C")]
		public static float GetTimeOfDayTimeScale()
		{
			return default(float);
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x8BA58C", Offset = "0x8BA58C", VA = "0x8BA58C")]
		public static void SetTimeOfDayTimeScale(float newTimeScale)
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x8BA628", Offset = "0x8BA628", VA = "0x8BA628")]
		public static bool GetGaiaWindSettings(out float windSpeed, out float windDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x8BA784", Offset = "0x8BA784", VA = "0x8BA784")]
		public static void SetGaiaWindSettings(float windSpeed, float windDirection)
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x8BA91C", Offset = "0x8BA91C", VA = "0x8BA91C")]
		public static bool GaiaWeatherInScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x8BA98C", Offset = "0x8BA98C", VA = "0x8BA98C")]
		public static void SetInstantWeatherTransitionEffects(bool instantWeatherTransition)
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x8BA9C8", Offset = "0x8BA9C8", VA = "0x8BA9C8")]
		public static bool GetInstantWeatherTransitionEffects()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x8BAA04", Offset = "0x8BAA04", VA = "0x8BAA04")]
		public static void SetWeatherEnabled(bool newWeatherEnabled)
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x8BAA4C", Offset = "0x8BAA4C", VA = "0x8BAA4C")]
		public static bool GetWeatherEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x8BAA8C", Offset = "0x8BAA8C", VA = "0x8BAA8C")]
		public static void StartWeatherRain()
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x8BAAD0", Offset = "0x8BAAD0", VA = "0x8BAAD0")]
		public static void StopWeatherRain()
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x8BAB0C", Offset = "0x8BAB0C", VA = "0x8BAB0C")]
		public static void StartWeatherSnow()
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x8BAB50", Offset = "0x8BAB50", VA = "0x8BAB50")]
		public static void StopWeatherSnow()
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x8BAB8C", Offset = "0x8BAB8C", VA = "0x8BAB8C")]
		public static bool IsRaining()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x8BABC8", Offset = "0x8BABC8", VA = "0x8BABC8")]
		public static bool IsSnowing()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x8BAC04", Offset = "0x8BAC04", VA = "0x8BAC04")]
		public static PWSkySeason GetWeaterSeasonSettings()
		{
			return null;
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x8BACC8", Offset = "0x8BACC8", VA = "0x8BACC8")]
		public static void SetWeaterSeasonSettings(PWSkySeason season)
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x8BADE0", Offset = "0x8BADE0", VA = "0x8BADE0")]
		public static PWSkyWind GetWeatherWindSettings()
		{
			return null;
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x8BAE74", Offset = "0x8BAE74", VA = "0x8BAE74")]
		public static void SetWeatherWindSettings(PWSkyWind wind)
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x8BAEE4", Offset = "0x8BAEE4", VA = "0x8BAEE4")]
		public static float GetWeatherFadeDuration()
		{
			return default(float);
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x8BAF14", Offset = "0x8BAF14", VA = "0x8BAF14")]
		public static void SetWeatherFadeDuration(float newWeatherFadeDuration)
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x8BAF4C", Offset = "0x8BAF4C", VA = "0x8BAF4C")]
		public static float GetAdditionalFogLinear()
		{
			return default(float);
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x8BAFD8", Offset = "0x8BAFD8", VA = "0x8BAFD8")]
		public static void SetAdditionalFogLinear(float value)
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x8BB080", Offset = "0x8BB080", VA = "0x8BB080")]
		public static float GetAdditionalFogExponential()
		{
			return default(float);
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x8BB10C", Offset = "0x8BB10C", VA = "0x8BB10C")]
		public static void SetAdditionalFogExponential(float value)
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x8BB1B4", Offset = "0x8BB1B4", VA = "0x8BB1B4")]
		public static void SetAdditionalFogColor(Color value)
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x8BB27C", Offset = "0x8BB27C", VA = "0x8BB27C")]
		public static GaiaLightingProfileValues GetCurrentLightingProfileSettings()
		{
			return null;
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x8BB33C", Offset = "0x8BB33C", VA = "0x8BB33C")]
		public static GaiaLightingProfileValues GetLightingProfileByName(string profileName)
		{
			return null;
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x8BB51C", Offset = "0x8BB51C", VA = "0x8BB51C")]
		public static GaiaLightingProfileValues GetLightingProfileByIndex(int profileIndex)
		{
			return null;
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x8BB684", Offset = "0x8BB684", VA = "0x8BB684")]
		public static bool SetTimeOfDaySunRotation(float value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x8BB748", Offset = "0x8BB748", VA = "0x8BB748")]
		public static float GetTimeOfDaySunRotation()
		{
			return default(float);
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x8BB7F8", Offset = "0x8BB7F8", VA = "0x8BB7F8")]
		public static void SetSunRotation(float sunPitch, float sunRotation, [Optional] Light sunLight)
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x8BB8F0", Offset = "0x8BB8F0", VA = "0x8BB8F0")]
		public static void GetSunRotation(out float sunPitch, out float sunRotation)
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x8BB9C8", Offset = "0x8BB9C8", VA = "0x8BB9C8")]
		public static void GetSunRotation(out float sunPitch, out float sunRotation, Light sun)
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x8BBA90", Offset = "0x8BBA90", VA = "0x8BBA90")]
		public static bool GetUnityHDRISkybox(out float exposure, out float rotation, out Color tint)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x8BBCC0", Offset = "0x8BBCC0", VA = "0x8BBCC0")]
		public static void SetUnityHDRISkybox(float exposure, float rotation, Color tint)
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x8BBF08", Offset = "0x8BBF08", VA = "0x8BBF08")]
		public static void GetUnitySunSettings(out float intensity, out Color sunColor, out float kelvin, [Optional] Light sunLight)
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x8BC044", Offset = "0x8BC044", VA = "0x8BC044")]
		public static void SetUnitySunSettings(float intensity, Color sunColor, float kelvin, [Optional] Light sunLight)
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x8BC18C", Offset = "0x8BC18C", VA = "0x8BC18C")]
		public static float GetAmbientIntensity()
		{
			return default(float);
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x8BC1BC", Offset = "0x8BC1BC", VA = "0x8BC1BC")]
		public static void SetAmbientIntensity(float value)
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x8BC1FC", Offset = "0x8BC1FC", VA = "0x8BC1FC")]
		public static void GetFogSettings(out FogMode fogMode, out Color fogColor, out float fogDensity, out float linearFogStart, out float linearFogEnd)
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x8BC278", Offset = "0x8BC278", VA = "0x8BC278")]
		public static void SetFogSettings(FogMode fogMode, Color fogColor, float fogDensity, float linearFogStart, float linearFogEnd)
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x8BC304", Offset = "0x8BC304", VA = "0x8BC304")]
		public static GaiaWaterProfileValues GetCurrentWaterProfileSettings()
		{
			return null;
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x8BC3C4", Offset = "0x8BC3C4", VA = "0x8BC3C4")]
		public static GaiaWaterProfileValues GetWaterProfileByName(string profileName)
		{
			return null;
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x8BC5B0", Offset = "0x8BC5B0", VA = "0x8BC5B0")]
		public static GaiaWaterProfileValues GetWaterProfileByIndex(int profileIndex)
		{
			return null;
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x8BC718", Offset = "0x8BC718", VA = "0x8BC718")]
		public static void SetWaterReflections(bool enabled)
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x8BC838", Offset = "0x8BC838", VA = "0x8BC838")]
		public static void SetWaterReflectionExtraDistance(float extraDistance)
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x8BCA2C", Offset = "0x8BCA2C", VA = "0x8BCA2C")]
		public static void SetWaterReflectionDistances(float[] distances, float distance)
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x8BCB70", Offset = "0x8BCB70", VA = "0x8BCB70")]
		public static int GetWaterResolutionQuality()
		{
			return default(int);
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x8BCC0C", Offset = "0x8BCC0C", VA = "0x8BCC0C")]
		public static void SetWaterResolutionQuality(int value)
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x8BCD30", Offset = "0x8BCD30", VA = "0x8BCD30")]
		public static void SetWaterResolutionQuality(GaiaConstants.GaiaProWaterReflectionsQuality value)
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x8BCDB4", Offset = "0x8BCDB4", VA = "0x8BCDB4")]
		public static Color GetUnderwaterFogColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x8BCE70", Offset = "0x8BCE70", VA = "0x8BCE70")]
		public static void SetUnderwaterFogColor(Color color)
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x8BCF40", Offset = "0x8BCF40", VA = "0x8BCF40")]
		public static void GetUnderwaterFogDensity(out float fogDensity, out float fogDistance)
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x8BD01C", Offset = "0x8BD01C", VA = "0x8BD01C")]
		public static void SetUnderwaterFogDensity(float fogDensity, float fogDistance)
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x8BD0DC", Offset = "0x8BD0DC", VA = "0x8BD0DC")]
		public static float GetUnderwaterVolume()
		{
			return default(float);
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x8BD1BC", Offset = "0x8BD1BC", VA = "0x8BD1BC")]
		public static void SetUnderwaterVolume(float value)
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x8BD2BC", Offset = "0x8BD2BC", VA = "0x8BD2BC")]
		public static DepthOfField GetDepthOfFieldSettings()
		{
			return null;
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x8BD540", Offset = "0x8BD540", VA = "0x8BD540")]
		public static void SetDepthOfFieldSettings(PhotoModeValues photoModeProfile)
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x8BD74C", Offset = "0x8BD74C", VA = "0x8BD74C")]
		public static void CopyDepthOfFieldProperties(DepthOfField source, DepthOfField dest)
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x8BD8C8", Offset = "0x8BD8C8", VA = "0x8BD8C8")]
		public static bool GetPostFXExposure(out float exposureValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x8BD9A8", Offset = "0x8BD9A8", VA = "0x8BD9A8")]
		public static void SetPostFXExposure(float exposureValue)
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x8BD378", Offset = "0x8BD378", VA = "0x8BD378")]
		public static PostProcessProfile GetGlobalProcessingProfile()
		{
			return null;
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x8BDA7C", Offset = "0x8BDA7C", VA = "0x8BDA7C")]
		public static bool GetAutoFocusDepthOfField()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x8BDB5C", Offset = "0x8BDB5C", VA = "0x8BDB5C")]
		public static void SetAutoFocusDepthOfField(bool enabled)
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x8BDCD8", Offset = "0x8BDCD8", VA = "0x8BDCD8")]
		public static void GetCullingSettings(out float gaiaAdditionalCullingDistance, out float cameraFarClipPlane, [Optional] Camera camera)
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x8BDE5C", Offset = "0x8BDE5C", VA = "0x8BDE5C")]
		public static void GetCullingSettings(out float gaiaAdditionalCullingDistance)
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x8BDF38", Offset = "0x8BDF38", VA = "0x8BDF38")]
		public static void SetCullingSettings(float gaiaAdditionalCullingDistance, float cameraFarClipPlane, [Optional] Camera camera)
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x8BE200", Offset = "0x8BE200", VA = "0x8BE200")]
		public static void SetTerrainDrawInstanced(bool drawInstanced)
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x8BE28C", Offset = "0x8BE28C", VA = "0x8BE28C")]
		public static void SetTerrainDetails(float detailDensity, float detailDistance)
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x8BE334", Offset = "0x8BE334", VA = "0x8BE334")]
		public static void SetTerrainPixelErrorAndBaseMapTexture(float heightResolution, float textureDistance)
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x8BE3DC", Offset = "0x8BE3DC", VA = "0x8BE3DC")]
		public static float GetCameraRoll([Optional] Camera camera)
		{
			return default(float);
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x8BE4B4", Offset = "0x8BE4B4", VA = "0x8BE4B4")]
		public static void SetCameraRoll(float value, [Optional] Camera camera)
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x8BE644", Offset = "0x8BE644", VA = "0x8BE644")]
		public static void GetPhotoModeSettings(out bool loadSavedSettings, out bool revertOnDisabled, out bool showreticule, out bool showRuleOfThirds, out KeyCode showPhotoMode)
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x8BE79C", Offset = "0x8BE79C", VA = "0x8BE79C")]
		public static void SetPhotoModeSettings(bool loadSavedSettings, bool revertOnDisabled, bool showreticule, bool showRuleOfThirds, KeyCode showPhotoMode)
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x8BE8D4", Offset = "0x8BE8D4", VA = "0x8BE8D4")]
		public static void SetShowOrHidePhotoModeReticule(bool value)
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x8BEA18", Offset = "0x8BEA18", VA = "0x8BEA18")]
		public static void SetShowOrHidePhotoModeRuleOfThirds(bool value)
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x8BEB5C", Offset = "0x8BEB5C", VA = "0x8BEB5C")]
		public static void SavePhotoModeValues(PhotoModeValues values, GaiaConstants.EnvironmentRenderer currentRenderPipeline)
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x8BED1C", Offset = "0x8BED1C", VA = "0x8BED1C")]
		public static PhotoModeValues LoadPhotoModeValues()
		{
			return null;
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x8BEEB0", Offset = "0x8BEEB0", VA = "0x8BEEB0")]
		public static void SetRuntimePlayerAndCamera(GameObject player, Camera camera)
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x8BF000", Offset = "0x8BF000", VA = "0x8BF000")]
		public static void SetRuntimePlayer(GameObject player)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x8BF0D0", Offset = "0x8BF0D0", VA = "0x8BF0D0")]
		public static void SetRuntimeCamera(Camera camera)
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x8BF19C", Offset = "0x8BF19C", VA = "0x8BF19C")]
		public static GameObject InstantiatePhotoMode(GameObject photoModePrefab, bool setCursorActive)
		{
			return null;
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x8BF470", Offset = "0x8BF470", VA = "0x8BF470")]
		public static void RemovePhotoMode(bool setCursorActive)
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x8BF350", Offset = "0x8BF350", VA = "0x8BF350")]
		public static bool SetCursorState(bool enabled)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x8BE100", Offset = "0x8BE100", VA = "0x8BE100")]
		public static void RefreshCameraCulling()
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x8BF714", Offset = "0x8BF714", VA = "0x8BF714")]
		public static void CopyCameraSettings(Camera source, Camera dest)
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x8BF9A4", Offset = "0x8BF9A4", VA = "0x8BF9A4")]
		public static void CopyCameraSettingsURP(Camera source, Camera dest)
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x8BFA54", Offset = "0x8BFA54", VA = "0x8BFA54")]
		public static float GetSeaLevel()
		{
			return default(float);
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x8BFB40", Offset = "0x8BFB40", VA = "0x8BFB40")]
		public static void SetSeaLevel(float newSeaLevel)
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x8BFC68", Offset = "0x8BFC68", VA = "0x8BFC68")]
		public static void CreateGaiaWorld(WorldCreationSettings worldCreationSettings, bool executeNow = true)
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x8BFD18", Offset = "0x8BFD18", VA = "0x8BFD18")]
		public static void ClearGaiaWorld(bool executeNow)
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x8BFDB0", Offset = "0x8BFDB0", VA = "0x8BFDB0")]
		public static void ClearGaiaSpawns(ClearOperationSettings clearOperationSettings, [Optional] SpawnerSettings spawnerSettings, bool executeNow = true, [Optional] Spawner spawner)
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x8BFE78", Offset = "0x8BFE78", VA = "0x8BFE78")]
		public static void GaiaSpawn(SpawnOperationSettings spawnOperationSettings, bool executeNow = true, [Optional] List<Spawner> spawnerList)
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x8BFF2C", Offset = "0x8BFF2C", VA = "0x8BFF2C")]
		public static void GaiaStamp(StamperSettings stamperSettings, bool executeNow = true, [Optional] Stamper stamper, bool massStamp = false)
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x8BFFF4", Offset = "0x8BFFF4", VA = "0x8BFFF4")]
		public static Texture2D ExportGaiaMaskMap(ExportMaskMapOperationSettings exportMaskMapOperationSettings, bool executeNow, MaskMapExport maskMapExport)
		{
			return null;
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x8C00A8", Offset = "0x8C00A8", VA = "0x8C00A8")]
		public static void GaiaFlattenTerrain(List<string> terrainNames, bool executeNow)
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x8C0154", Offset = "0x8C0154", VA = "0x8C0154")]
		public static void LoadSession([Optional] GaiaSession session)
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x8C01EC", Offset = "0x8C01EC", VA = "0x8C01EC")]
		public static void PlaySession([Optional] GaiaSession session, bool regenerateOnly = false)
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class GaiaCompatiblePackage
	{
		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_packageName;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_packageDescription;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_packageImageName;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_packageURL;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_isCompatible;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool m_isInstalled;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool m_installedFoldedOut;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool m_compatibleFoldedOut;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<MethodInfo> m_methods;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dictionary<string, bool> m_methodGroupFoldouts;

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x81F5B8", Offset = "0x81F5B8", VA = "0x81F5B8")]
		public GaiaCompatiblePackage()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class GaiaCompatiblePublisher
	{
		[Serializable]
		[Token(Token = "0x20004EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572C18", Offset = "0x572C18")]
		private sealed class <>c
		{
			[Token(Token = "0x4002CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<GaiaCompatiblePackage> <>9__5_0;

			[Token(Token = "0x600227F")]
			[Address(RVA = "0x91D95C", Offset = "0x91D95C", VA = "0x91D95C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002280")]
			[Address(RVA = "0x91D964", Offset = "0x91D964", VA = "0x91D964")]
			internal int <GetPackages>b__5_0(GaiaCompatiblePackage a, GaiaCompatiblePackage b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_publisherName;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_installedFoldedOut;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_compatibleFoldedOut;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, GaiaCompatiblePackage> m_packages;

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x81F670", Offset = "0x81F670", VA = "0x81F670")]
		public GaiaCompatiblePackage GetPackage(string packageName)
		{
			return null;
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x81F6EC", Offset = "0x81F6EC", VA = "0x81F6EC")]
		public List<GaiaCompatiblePackage> GetPackages()
		{
			return null;
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x81F880", Offset = "0x81F880", VA = "0x81F880")]
		public int InstalledPackages()
		{
			return default(int);
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x81F9B0", Offset = "0x81F9B0", VA = "0x81F9B0")]
		public int CompatiblePackages()
		{
			return default(int);
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x81FAE0", Offset = "0x81FAE0", VA = "0x81FAE0")]
		public void AddPackage(GaiaCompatiblePackage package)
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x81FB4C", Offset = "0x81FB4C", VA = "0x81FB4C")]
		public GaiaCompatiblePublisher()
		{
		}
	}
	[Token(Token = "0x200018E")]
	public class GaiaExtensionManager
	{
		[Serializable]
		[Token(Token = "0x20004ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572C28", Offset = "0x572C28")]
		private sealed class <>c
		{
			[Token(Token = "0x4002CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<GaiaCompatiblePublisher> <>9__3_0;

			[Token(Token = "0x6002282")]
			[Address(RVA = "0x91E1C0", Offset = "0x91E1C0", VA = "0x91E1C0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002283")]
			[Address(RVA = "0x91E1C8", Offset = "0x91E1C8", VA = "0x91E1C8")]
			internal int <GetPublishers>b__3_0(GaiaCompatiblePublisher a, GaiaCompatiblePublisher b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, GaiaCompatiblePublisher> m_extensions;

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x823DF4", Offset = "0x823DF4", VA = "0x823DF4")]
		public void ScanForExtensions()
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x824A4C", Offset = "0x824A4C", VA = "0x824A4C")]
		public int GetInstalledExtensionCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x824B8C", Offset = "0x824B8C", VA = "0x824B8C")]
		public List<GaiaCompatiblePublisher> GetPublishers()
		{
			return null;
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x824840", Offset = "0x824840", VA = "0x824840")]
		public List<Type> GetTypesInNamespace(string nameSpace)
		{
			return null;
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x824D20", Offset = "0x824D20", VA = "0x824D20")]
		public GaiaExtensionManager()
		{
		}
	}
	[Token(Token = "0x200018F")]
	public class Template
	{
		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string FilePath;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TemplateFrame Frame;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TemplateValue> Variables;

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xB044A8", Offset = "0xB044A8", VA = "0xB044A8")]
		public Template(string filePath, bool debug)
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xB0457C", Offset = "0xB0457C", VA = "0xB0457C")]
		private bool findPreviouslyBuiltFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xB04814", Offset = "0xB04814", VA = "0xB04814")]
		public void Set(string name, string value)
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xB049C0", Offset = "0xB049C0", VA = "0xB049C0")]
		private int[] CopyIndicies(TemplateFrameVariable tfv)
		{
			return null;
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xB04A60", Offset = "0xB04A60", VA = "0xB04A60", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xB04DCC", Offset = "0xB04DCC", VA = "0xB04DCC")]
		private void UpdateIndicies(int position, int length)
		{
		}
	}
	[Token(Token = "0x2000190")]
	public class TemplateValue
	{
		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Value;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] Indicies;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly TemplateFrameVariable FrameVar;

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xB04984", Offset = "0xB04984", VA = "0xB04984")]
		public TemplateValue(string value, TemplateFrameVariable fv)
		{
		}
	}
	[Token(Token = "0x2000191")]
	public static class TemplateFrames
	{
		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<TemplateFrame> List;
	}
	[Token(Token = "0x2000192")]
	public class TemplateFrameVariable
	{
		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<int> Indicies;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> Positions;

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xB0541C", Offset = "0xB0541C", VA = "0xB0541C")]
		public TemplateFrameVariable(List<int> indicies, List<int> positions)
		{
		}
	}
	[Token(Token = "0x2000193")]
	public class TemplateFrame
	{
		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<string, TemplateFrameVariable> Variables;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string FilePath;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Text;

		[Token(Token = "0x400106A")]
		private const char BeginChar = '{';

		[Token(Token = "0x400106B")]
		private const char EndChar = '}';

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int VariableCount;

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xB04704", Offset = "0xB04704", VA = "0xB04704")]
		public TemplateFrame(string filePath, bool debug)
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xB04FDC", Offset = "0xB04FDC", VA = "0xB04FDC")]
		public string Build(string filePath)
		{
			return null;
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xB05454", Offset = "0xB05454", VA = "0xB05454")]
		private char[] shiftCharArryLeft(char[] arry, int startIndex, int endIndex)
		{
			return null;
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xB0527C", Offset = "0xB0527C", VA = "0xB0527C")]
		private string getVarName(char[] text, ref int pos)
		{
			return null;
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xB0556C", Offset = "0xB0556C", VA = "0xB0556C")]
		private static int skipSpaces(char[] text, int pos)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000194")]
	public static class GaiaConstants
	{
		[Token(Token = "0x20004EE")]
		public enum ScreenshotResolution
		{
			[Token(Token = "0x4002CD1")]
			Resolution640X480,
			[Token(Token = "0x4002CD2")]
			Resolution800X600,
			[Token(Token = "0x4002CD3")]
			Resolution1280X720,
			[Token(Token = "0x4002CD4")]
			Resolution1366X768,
			[Token(Token = "0x4002CD5")]
			Resolution1600X900,
			[Token(Token = "0x4002CD6")]
			Resolution1920X1080,
			[Token(Token = "0x4002CD7")]
			Resolution2560X1440,
			[Token(Token = "0x4002CD8")]
			Resolution3840X2160,
			[Token(Token = "0x4002CD9")]
			Resolution7680X4320,
			[Token(Token = "0x4002CDA")]
			Custom
		}

		[Token(Token = "0x20004EF")]
		public enum GaiaLightingProfileType
		{
			[Token(Token = "0x4002CDC")]
			Procedural,
			[Token(Token = "0x4002CDD")]
			HDRI,
			[Token(Token = "0x4002CDE")]
			ProceduralWorldsSky
		}

		[Token(Token = "0x20004F0")]
		public enum GaiaProAntiAliasingMode
		{
			[Token(Token = "0x4002CE0")]
			None,
			[Token(Token = "0x4002CE1")]
			FXAA,
			[Token(Token = "0x4002CE2")]
			MSAA,
			[Token(Token = "0x4002CE3")]
			SMAA,
			[Token(Token = "0x4002CE4")]
			TAA
		}

		[Token(Token = "0x20004F1")]
		public enum TerrainCreationWorkflow
		{
			[Token(Token = "0x4002CE6")]
			ManualWithStamper,
			[Token(Token = "0x4002CE7")]
			WorldDesigner
		}

		[Token(Token = "0x20004F2")]
		public enum WaterMeshQuality
		{
			[Token(Token = "0x4002CE9")]
			VeryLow,
			[Token(Token = "0x4002CEA")]
			Low,
			[Token(Token = "0x4002CEB")]
			Medium,
			[Token(Token = "0x4002CEC")]
			High,
			[Token(Token = "0x4002CED")]
			VeryHigh,
			[Token(Token = "0x4002CEE")]
			Ultra,
			[Token(Token = "0x4002CEF")]
			Cinematic,
			[Token(Token = "0x4002CF0")]
			Custom
		}

		[Token(Token = "0x20004F3")]
		public enum TerrainDetailQuality
		{
			[Token(Token = "0x4002CF2")]
			VeryLow64,
			[Token(Token = "0x4002CF3")]
			Low32,
			[Token(Token = "0x4002CF4")]
			Medium16,
			[Token(Token = "0x4002CF5")]
			High8,
			[Token(Token = "0x4002CF6")]
			VeryHigh4,
			[Token(Token = "0x4002CF7")]
			Ultra2
		}

		[Token(Token = "0x20004F4")]
		public enum ContactShadowsQuality
		{
			[Token(Token = "0x4002CF9")]
			Low,
			[Token(Token = "0x4002CFA")]
			Medium,
			[Token(Token = "0x4002CFB")]
			High,
			[Token(Token = "0x4002CFC")]
			Ultra,
			[Token(Token = "0x4002CFD")]
			Custom
		}

		[Token(Token = "0x20004F5")]
		public enum HDSkyType
		{
			[Token(Token = "0x4002CFF")]
			Gradient,
			[Token(Token = "0x4002D00")]
			HDRI,
			[Token(Token = "0x4002D01")]
			Procedural
		}

		[Token(Token = "0x20004F6")]
		public enum HDAmbientMode
		{
			[Token(Token = "0x4002D03")]
			Static,
			[Token(Token = "0x4002D04")]
			Dynamic
		}

		[Token(Token = "0x20004F7")]
		public enum HDFogType
		{
			[Token(Token = "0x4002D06")]
			None,
			[Token(Token = "0x4002D07")]
			Exponential,
			[Token(Token = "0x4002D08")]
			Linear,
			[Token(Token = "0x4002D09")]
			Volumetric
		}

		[Token(Token = "0x20004F8")]
		public enum HDFogType2019_3
		{
			[Token(Token = "0x4002D0B")]
			None,
			[Token(Token = "0x4002D0C")]
			Volumetric
		}

		[Token(Token = "0x20004F9")]
		public enum HDSkyUpdateMode
		{
			[Token(Token = "0x4002D0E")]
			OnChanged,
			[Token(Token = "0x4002D0F")]
			OnDemand,
			[Token(Token = "0x4002D10")]
			Realtime
		}

		[Token(Token = "0x20004FA")]
		public enum HDIntensityMode
		{
			[Token(Token = "0x4002D12")]
			Exposure,
			[Token(Token = "0x4002D13")]
			Multiplier
		}

		[Token(Token = "0x20004FB")]
		public enum HDShadowResolution
		{
			[Token(Token = "0x4002D15")]
			Resolution256,
			[Token(Token = "0x4002D16")]
			Resolution512,
			[Token(Token = "0x4002D17")]
			Resolution1024,
			[Token(Token = "0x4002D18")]
			Resolution2048,
			[Token(Token = "0x4002D19")]
			Resolution4096,
			[Token(Token = "0x4002D1A")]
			Resolution8192
		}

		[Token(Token = "0x20004FC")]
		public enum GaiaProWaterReflectionsQuality
		{
			[Token(Token = "0x4002D1C")]
			Resolution8,
			[Token(Token = "0x4002D1D")]
			Resolution16,
			[Token(Token = "0x4002D1E")]
			Resolution32,
			[Token(Token = "0x4002D1F")]
			Resolution64,
			[Token(Token = "0x4002D20")]
			Resolution128,
			[Token(Token = "0x4002D21")]
			Resolution256,
			[Token(Token = "0x4002D22")]
			Resolution512,
			[Token(Token = "0x4002D23")]
			Resolution1024,
			[Token(Token = "0x4002D24")]
			Resolution2048,
			[Token(Token = "0x4002D25")]
			Resolution4096,
			[Token(Token = "0x4002D26")]
			Resolution8192
		}

		[Token(Token = "0x20004FD")]
		public enum GaiaWaterProfileType
		{
			[Token(Token = "0x4002D28")]
			DeepBlueOcean,
			[Token(Token = "0x4002D29")]
			ClearBlueOcean,
			[Token(Token = "0x4002D2A")]
			StandardLake,
			[Token(Token = "0x4002D2B")]
			StandardClearLake,
			[Token(Token = "0x4002D2C")]
			None
		}

		[Token(Token = "0x20004FE")]
		public enum GaiaWindType
		{
			[Token(Token = "0x4002D2E")]
			Calm,
			[Token(Token = "0x4002D2F")]
			Moderate,
			[Token(Token = "0x4002D30")]
			Strong,
			[Token(Token = "0x4002D31")]
			None
		}

		[Token(Token = "0x20004FF")]
		public enum ThunderStormType
		{
			[Token(Token = "0x4002D33")]
			Light,
			[Token(Token = "0x4002D34")]
			Moderate,
			[Token(Token = "0x4002D35")]
			Continuous
		}

		[Token(Token = "0x2000500")]
		public enum GaiaGlobalWindType
		{
			[Token(Token = "0x4002D37")]
			Calm,
			[Token(Token = "0x4002D38")]
			Moderate,
			[Token(Token = "0x4002D39")]
			Strong,
			[Token(Token = "0x4002D3A")]
			None,
			[Token(Token = "0x4002D3B")]
			Custom
		}

		[Token(Token = "0x2000501")]
		public enum WindSetupType
		{
			[Token(Token = "0x4002D3D")]
			VertexAnimated,
			[Token(Token = "0x4002D3E")]
			VertexPainted
		}

		[Token(Token = "0x2000502")]
		public enum MeshType
		{
			[Token(Token = "0x4002D40")]
			Plane,
			[Token(Token = "0x4002D41")]
			Circle,
			[Token(Token = "0x4002D42")]
			Custom
		}

		[Token(Token = "0x2000503")]
		public enum PositionType
		{
			[Token(Token = "0x4002D44")]
			Absolute,
			[Token(Token = "0x4002D45")]
			Relative
		}

		[Token(Token = "0x2000504")]
		public enum RawByteOrder
		{
			[Token(Token = "0x4002D47")]
			IBM,
			[Token(Token = "0x4002D48")]
			Macintosh
		}

		[Token(Token = "0x2000505")]
		public enum RawBitDepth
		{
			[Token(Token = "0x4002D4A")]
			Sixteen,
			[Token(Token = "0x4002D4B")]
			Eight
		}

		[Token(Token = "0x2000506")]
		public enum EnvironmentTarget
		{
			[Token(Token = "0x4002D4D")]
			UltraLight,
			[Token(Token = "0x4002D4E")]
			MobileAndVR,
			[Token(Token = "0x4002D4F")]
			Desktop,
			[Token(Token = "0x4002D50")]
			PowerfulDesktop,
			[Token(Token = "0x4002D51")]
			Custom
		}

		[Token(Token = "0x2000507")]
		public enum EnvironmentRenderer
		{
			[Token(Token = "0x4002D53")]
			BuiltIn,
			[Token(Token = "0x4002D54")]
			Lightweight,
			[Token(Token = "0x4002D55")]
			Universal,
			[Token(Token = "0x4002D56")]
			HighDefinition
		}

		[Token(Token = "0x2000508")]
		public enum EnvironmentSizePreset
		{
			[Token(Token = "0x4002D58")]
			Tiny,
			[Token(Token = "0x4002D59")]
			Small,
			[Token(Token = "0x4002D5A")]
			Medium,
			[Token(Token = "0x4002D5B")]
			Large,
			[Token(Token = "0x4002D5C")]
			Custom
		}

		[Token(Token = "0x2000509")]
		public enum EnvironmentSize
		{
			[Token(Token = "0x4002D5E")]
			Is256MetersSq,
			[Token(Token = "0x4002D5F")]
			Is512MetersSq,
			[Token(Token = "0x4002D60")]
			Is1024MetersSq,
			[Token(Token = "0x4002D61")]
			Is2048MetersSq,
			[Token(Token = "0x4002D62")]
			Is4096MetersSq,
			[Token(Token = "0x4002D63")]
			Is8192MetersSq,
			[Token(Token = "0x4002D64")]
			Is16384MetersSq
		}

		[Token(Token = "0x200050A")]
		public enum HeightmapResolution
		{
			[Token(Token = "0x4002D66")]
			_33 = 33,
			[Token(Token = "0x4002D67")]
			_65 = 65,
			[Token(Token = "0x4002D68")]
			_129 = 129,
			[Token(Token = "0x4002D69")]
			_257 = 257,
			[Token(Token = "0x4002D6A")]
			_513 = 513,
			[Token(Token = "0x4002D6B")]
			_1025 = 1025,
			[Token(Token = "0x4002D6C")]
			_2049 = 2049,
			[Token(Token = "0x4002D6D")]
			_4097 = 4097
		}

		[Token(Token = "0x200050B")]
		public enum TerrainTextureResolution
		{
			[Token(Token = "0x4002D6F")]
			_16 = 0x10,
			[Token(Token = "0x4002D70")]
			_32 = 0x20,
			[Token(Token = "0x4002D71")]
			_64 = 0x40,
			[Token(Token = "0x4002D72")]
			_128 = 0x80,
			[Token(Token = "0x4002D73")]
			_256 = 0x100,
			[Token(Token = "0x4002D74")]
			_512 = 0x200,
			[Token(Token = "0x4002D75")]
			_1024 = 0x400,
			[Token(Token = "0x4002D76")]
			_2048 = 0x800
		}

		[Token(Token = "0x200050C")]
		public enum Skies
		{
			[Token(Token = "0x4002D78")]
			Day,
			[Token(Token = "0x4002D79")]
			Morning,
			[Token(Token = "0x4002D7A")]
			Evening,
			[Token(Token = "0x4002D7B")]
			Night,
			[Token(Token = "0x4002D7C")]
			None
		}

		[Token(Token = "0x200050D")]
		public enum BakeMode
		{
			[Token(Token = "0x4002D7E")]
			Baked,
			[Token(Token = "0x4002D7F")]
			Realtime,
			[Token(Token = "0x4002D80")]
			Both
		}

		[Token(Token = "0x200050E")]
		public enum Water
		{
			[Token(Token = "0x4002D82")]
			DeepBlue,
			[Token(Token = "0x4002D83")]
			ClearBlue,
			[Token(Token = "0x4002D84")]
			ToxicGreen,
			[Token(Token = "0x4002D85")]
			Cyan,
			[Token(Token = "0x4002D86")]
			None
		}

		[Token(Token = "0x200050F")]
		public enum PW_RENDER_SIZE
		{
			[Token(Token = "0x4002D88")]
			FULL = -1,
			[Token(Token = "0x4002D89")]
			HALF = -2,
			[Token(Token = "0x4002D8A")]
			QUARTER = -3
		}

		[Token(Token = "0x2000510")]
		public enum BiomePostProcessingVolumeSpawnMode
		{
			[Token(Token = "0x4002D8C")]
			Add,
			[Token(Token = "0x4002D8D")]
			Replace
		}

		[Token(Token = "0x2000511")]
		public enum PostFX
		{
			[Token(Token = "0x4002D8F")]
			Day,
			[Token(Token = "0x4002D90")]
			Morning,
			[Token(Token = "0x4002D91")]
			Evening,
			[Token(Token = "0x4002D92")]
			Night,
			[Token(Token = "0x4002D93")]
			None
		}

		[Token(Token = "0x2000512")]
		public enum TimeOfDayStartingMode
		{
			[Token(Token = "0x4002D95")]
			Morning,
			[Token(Token = "0x4002D96")]
			Day,
			[Token(Token = "0x4002D97")]
			Evening,
			[Token(Token = "0x4002D98")]
			Night
		}

		[Token(Token = "0x2000513")]
		public enum EnvironmentControllerType
		{
			[Token(Token = "0x4002D9A")]
			FirstPerson,
			[Token(Token = "0x4002D9B")]
			FlyingCamera,
			[Token(Token = "0x4002D9C")]
			ThirdPerson,
			[Token(Token = "0x4002D9D")]
			Car,
			[Token(Token = "0x4002D9E")]
			XRController,
			[Token(Token = "0x4002D9F")]
			Custom,
			[Token(Token = "0x4002DA0")]
			None
		}

		[Token(Token = "0x2000514")]
		public enum ManagerEditorMode
		{
			[Token(Token = "0x4002DA2")]
			Standard,
			[Token(Token = "0x4002DA3")]
			Advanced,
			[Token(Token = "0x4002DA4")]
			Extensions,
			[Token(Token = "0x4002DA5")]
			ShowMore
		}

		[Token(Token = "0x2000515")]
		public enum ManagerEditorNewsMode
		{
			[Token(Token = "0x4002DA7")]
			MoreOnGaia,
			[Token(Token = "0x4002DA8")]
			MoreOnProceduralWorlds
		}

		[Token(Token = "0x2000516")]
		public enum OperationMode
		{
			[Token(Token = "0x4002DAA")]
			DesignTime,
			[Token(Token = "0x4002DAB")]
			RuntimeInterval,
			[Token(Token = "0x4002DAC")]
			RuntimeTriggeredInterval
		}

		[Token(Token = "0x2000517")]
		public enum DOFTrackingType
		{
			[Token(Token = "0x4002DAE")]
			FixedOffset,
			[Token(Token = "0x4002DAF")]
			LeftMouseClick,
			[Token(Token = "0x4002DB0")]
			RightMouseClick,
			[Token(Token = "0x4002DB1")]
			FollowScreen,
			[Token(Token = "0x4002DB2")]
			FollowTarget
		}

		[Token(Token = "0x2000518")]
		public enum TerrainOperationType
		{
			[Token(Token = "0x4002DB4")]
			AddToTerrain,
			[Token(Token = "0x4002DB5")]
			ApplyMaskToSplatmap,
			[Token(Token = "0x4002DB6")]
			ContrastFilter,
			[Token(Token = "0x4002DB7")]
			GrowFeaturesFilter,
			[Token(Token = "0x4002DB8")]
			DeNoiseFilter,
			[Token(Token = "0x4002DB9")]
			HydraulicFilter,
			[Token(Token = "0x4002DBA")]
			MultiplyTerrain,
			[Token(Token = "0x4002DBB")]
			PowerOfFilter,
			[Token(Token = "0x4002DBC")]
			QuantizeFilter,
			[Token(Token = "0x4002DBD")]
			QuantizeCurvesFilter,
			[Token(Token = "0x4002DBE")]
			SetTerrainToHeight,
			[Token(Token = "0x4002DBF")]
			ShrinkFeaturesFilter,
			[Token(Token = "0x4002DC0")]
			SubtractFromTerrain,
			[Token(Token = "0x4002DC1")]
			ThermalFilter,
			[Token(Token = "0x4002DC2")]
			ExportAspectMap,
			[Token(Token = "0x4002DC3")]
			ExportBaseMap,
			[Token(Token = "0x4002DC4")]
			ExportCurvatureMap,
			[Token(Token = "0x4002DC5")]
			ExportFlowMap,
			[Token(Token = "0x4002DC6")]
			ExportHeightMap,
			[Token(Token = "0x4002DC7")]
			ExportNoiseMap,
			[Token(Token = "0x4002DC8")]
			ExportNormalMap,
			[Token(Token = "0x4002DC9")]
			ExportMasks,
			[Token(Token = "0x4002DCA")]
			ExportSlopeMap
		}

		[Token(Token = "0x2000519")]
		public enum MaskMergeType
		{
			[Token(Token = "0x4002DCC")]
			AssignMask2IfGreaterThan,
			[Token(Token = "0x4002DCD")]
			AssignMask2IfLessThan,
			[Token(Token = "0x4002DCE")]
			AddMask2,
			[Token(Token = "0x4002DCF")]
			MultiplyByMask2,
			[Token(Token = "0x4002DD0")]
			SubtractMask2
		}

		[Token(Token = "0x200051A")]
		public enum ErosionRainType
		{
			[Token(Token = "0x4002DD2")]
			Constant,
			[Token(Token = "0x4002DD3")]
			ErodePeaks,
			[Token(Token = "0x4002DD4")]
			ErodeValleys,
			[Token(Token = "0x4002DD5")]
			ErodeSlopes
		}

		[Token(Token = "0x200051B")]
		public enum CurvatureType
		{
			[Token(Token = "0x4002DD7")]
			Average,
			[Token(Token = "0x4002DD8")]
			Horizontal,
			[Token(Token = "0x4002DD9")]
			Vertical
		}

		[Token(Token = "0x200051C")]
		public enum AspectType
		{
			[Token(Token = "0x4002DDB")]
			Aspect,
			[Token(Token = "0x4002DDC")]
			Northerness,
			[Token(Token = "0x4002DDD")]
			Easterness
		}

		[Token(Token = "0x200051D")]
		public enum NoiseType
		{
			[Token(Token = "0x4002DDF")]
			None,
			[Token(Token = "0x4002DE0")]
			Perlin,
			[Token(Token = "0x4002DE1")]
			Billow,
			[Token(Token = "0x4002DE2")]
			Ridged
		}

		[Token(Token = "0x200051E")]
		public enum ImageFitnessFilterMode
		{
			[Token(Token = "0x4002DE4")]
			None,
			[Token(Token = "0x4002DE5")]
			ImageGreyScale,
			[Token(Token = "0x4002DE6")]
			ImageRedChannel,
			[Token(Token = "0x4002DE7")]
			ImageGreenChannel,
			[Token(Token = "0x4002DE8")]
			ImageBlueChannel,
			[Token(Token = "0x4002DE9")]
			ImageAlphaChannel,
			[Token(Token = "0x4002DEA")]
			TerrainTexture0,
			[Token(Token = "0x4002DEB")]
			TerrainTexture1,
			[Token(Token = "0x4002DEC")]
			TerrainTexture2,
			[Token(Token = "0x4002DED")]
			TerrainTexture3,
			[Token(Token = "0x4002DEE")]
			TerrainTexture4,
			[Token(Token = "0x4002DEF")]
			TerrainTexture5,
			[Token(Token = "0x4002DF0")]
			TerrainTexture6,
			[Token(Token = "0x4002DF1")]
			TerrainTexture7,
			[Token(Token = "0x4002DF2")]
			PerlinNoise,
			[Token(Token = "0x4002DF3")]
			BillowNoise,
			[Token(Token = "0x4002DF4")]
			RidgedNoise
		}

		[Token(Token = "0x200051F")]
		public enum FeatureType
		{
			[Token(Token = "0x4002DF6")]
			Hills,
			[Token(Token = "0x4002DF7")]
			Islands,
			[Token(Token = "0x4002DF8")]
			Mesas,
			[Token(Token = "0x4002DF9")]
			Mountains,
			[Token(Token = "0x4002DFA")]
			Plains,
			[Token(Token = "0x4002DFB")]
			Rivers,
			[Token(Token = "0x4002DFC")]
			Valleys
		}

		[Token(Token = "0x2000520")]
		public enum GeneratorBorderStyle
		{
			[Token(Token = "0x4002DFE")]
			None,
			[Token(Token = "0x4002DFF")]
			Mountains,
			[Token(Token = "0x4002E00")]
			Water
		}

		[Token(Token = "0x2000521")]
		public enum SpawnerApplyBrushMode
		{
			[Token(Token = "0x4002E02")]
			Preview,
			[Token(Token = "0x4002E03")]
			Texture,
			[Token(Token = "0x4002E04")]
			TerrainDetail,
			[Token(Token = "0x4002E05")]
			TerrainTree,
			[Token(Token = "0x4002E06")]
			JustCacheContext
		}

		[Token(Token = "0x2000522")]
		public enum SpawnMode
		{
			[Token(Token = "0x4002E08")]
			Replace,
			[Token(Token = "0x4002E09")]
			Add,
			[Token(Token = "0x4002E0A")]
			Remove
		}

		[Token(Token = "0x2000523")]
		public enum HDRPDepthTest
		{
			[Token(Token = "0x4002E0C")]
			Disabled,
			[Token(Token = "0x4002E0D")]
			Never,
			[Token(Token = "0x4002E0E")]
			Less,
			[Token(Token = "0x4002E0F")]
			Equal,
			[Token(Token = "0x4002E10")]
			LessEqual,
			[Token(Token = "0x4002E11")]
			Greater,
			[Token(Token = "0x4002E12")]
			NotEqual,
			[Token(Token = "0x4002E13")]
			GreaterEqual,
			[Token(Token = "0x4002E14")]
			Always
		}

		[Token(Token = "0x2000524")]
		public enum FeatureOperation
		{
			[Token(Token = "0x4002E16")]
			RaiseHeight = 0,
			[Token(Token = "0x4002E17")]
			LowerHeight = 1,
			[Token(Token = "0x4002E18")]
			BlendHeight = 2,
			[Token(Token = "0x4002E19")]
			SetHeight = 3,
			[Token(Token = "0x4002E1A")]
			AddHeight = 4,
			[Token(Token = "0x4002E1B")]
			SubtractHeight = 5,
			[Token(Token = "0x4002E1C")]
			HeightTransform = 10,
			[Token(Token = "0x4002E1D")]
			PowerOf = 11,
			[Token(Token = "0x4002E1E")]
			Smooth = 12,
			[Token(Token = "0x4002E1F")]
			Contrast = 6,
			[Token(Token = "0x4002E20")]
			SharpenRidges = 7,
			[Token(Token = "0x4002E21")]
			Terrace = 8,
			[Token(Token = "0x4002E22")]
			HydraulicErosion = 9,
			[Token(Token = "0x4002E23")]
			MixHeight = 13
		}

		[Token(Token = "0x2000525")]
		public enum TerrainGeneratorFeatureOperation
		{
			[Token(Token = "0x4002E25")]
			RaiseHeight = 0,
			[Token(Token = "0x4002E26")]
			LowerHeight = 1,
			[Token(Token = "0x4002E27")]
			BlendHeight = 2,
			[Token(Token = "0x4002E28")]
			MixHeight = 13,
			[Token(Token = "0x4002E29")]
			SetHeight = 3,
			[Token(Token = "0x4002E2A")]
			AddHeight = 4,
			[Token(Token = "0x4002E2B")]
			SubtractHeight = 5
		}

		[Token(Token = "0x2000526")]
		public enum PreferredWaterVisualisation
		{
			[Token(Token = "0x4002E2D")]
			ActualWater,
			[Token(Token = "0x4002E2E")]
			Plane,
			[Token(Token = "0x4002E2F")]
			None
		}

		[Token(Token = "0x2000527")]
		public enum MaskInfluence
		{
			[Token(Token = "0x4002E31")]
			OnlyStampItself,
			[Token(Token = "0x4002E32")]
			TotalSpawnResult
		}

		[Token(Token = "0x2000528")]
		public enum ImageMaskFilterMode
		{
			[Token(Token = "0x4002E34")]
			Brightness,
			[Token(Token = "0x4002E35")]
			PROColorSelection,
			[Token(Token = "0x4002E36")]
			RedColorChannel,
			[Token(Token = "0x4002E37")]
			GreenColorChannel,
			[Token(Token = "0x4002E38")]
			BlueColorChannel,
			[Token(Token = "0x4002E39")]
			AlphaChannel
		}

		[Token(Token = "0x2000529")]
		public enum ErosionMaskOutput
		{
			[Token(Token = "0x4002E3B")]
			Sediment,
			[Token(Token = "0x4002E3C")]
			WaterVelocity,
			[Token(Token = "0x4002E3D")]
			WaterFlux
		}

		[Token(Token = "0x200052A")]
		public enum AutoSpawnerArea
		{
			[Token(Token = "0x4002E3F")]
			Local,
			[Token(Token = "0x4002E40")]
			World
		}

		[Token(Token = "0x200052B")]
		public enum SpawnerShape
		{
			[Token(Token = "0x4002E42")]
			Box,
			[Token(Token = "0x4002E43")]
			Sphere
		}

		[Token(Token = "0x200052C")]
		public enum RenderUpdateMode
		{
			[Token(Token = "0x4002E45")]
			OnEnable,
			[Token(Token = "0x4002E46")]
			Update,
			[Token(Token = "0x4002E47")]
			Interval,
			[Token(Token = "0x4002E48")]
			OnRender
		}

		[Token(Token = "0x200052D")]
		public enum GlobalSystemMode
		{
			[Token(Token = "0x4002E4A")]
			Gaia,
			[Token(Token = "0x4002E4B")]
			ThirdParty,
			[Token(Token = "0x4002E4C")]
			None
		}

		[Token(Token = "0x200052E")]
		public enum ReflectionProbeResolution
		{
			[Token(Token = "0x4002E4E")]
			Resolution16,
			[Token(Token = "0x4002E4F")]
			Resolution32,
			[Token(Token = "0x4002E50")]
			Resolution64,
			[Token(Token = "0x4002E51")]
			Resolution128,
			[Token(Token = "0x4002E52")]
			Resolution256,
			[Token(Token = "0x4002E53")]
			Resolution512,
			[Token(Token = "0x4002E54")]
			Resolution1024,
			[Token(Token = "0x4002E55")]
			Resolution2048
		}

		[Token(Token = "0x200052F")]
		public enum ReflectionProbeRefreshModePW
		{
			[Token(Token = "0x4002E57")]
			OnAwake,
			[Token(Token = "0x4002E58")]
			EveryFrame,
			[Token(Token = "0x4002E59")]
			ViaScripting,
			[Token(Token = "0x4002E5A")]
			ProbeManager
		}

		[Token(Token = "0x2000530")]
		public enum ResolutionMulltiplier
		{
			[Token(Token = "0x4002E5C")]
			Full,
			[Token(Token = "0x4002E5D")]
			Half,
			[Token(Token = "0x4002E5E")]
			Third,
			[Token(Token = "0x4002E5F")]
			Quarter
		}

		[Token(Token = "0x2000531")]
		public enum SpawnerLocation
		{
			[Token(Token = "0x4002E61")]
			RandomLocation,
			[Token(Token = "0x4002E62")]
			RandomLocationClustered,
			[Token(Token = "0x4002E63")]
			EveryLocation,
			[Token(Token = "0x4002E64")]
			EveryLocationJittered
		}

		[Token(Token = "0x2000532")]
		public enum SpawnerLocationCheckType
		{
			[Token(Token = "0x4002E66")]
			PointCheck,
			[Token(Token = "0x4002E67")]
			BoundedAreaCheck
		}

		[Token(Token = "0x2000533")]
		public enum SpawnerRuleSelector
		{
			[Token(Token = "0x4002E69")]
			All,
			[Token(Token = "0x4002E6A")]
			Fittest,
			[Token(Token = "0x4002E6B")]
			WeightedFittest,
			[Token(Token = "0x4002E6C")]
			Random
		}

		[Token(Token = "0x2000534")]
		public enum SpawnerResourceType
		{
			[Token(Token = "0x4002E6E")]
			TerrainTexture = 0,
			[Token(Token = "0x4002E6F")]
			TerrainDetail = 1,
			[Token(Token = "0x4002E70")]
			TerrainModifierStamp = 8,
			[Token(Token = "0x4002E71")]
			TerrainTree = 2,
			[Token(Token = "0x4002E72")]
			GameObject = 3,
			[Token(Token = "0x4002E73")]
			SpawnExtension = 4,
			[Token(Token = "0x4002E74")]
			Probe = 7,
			[Token(Token = "0x4002E75")]
			StampDistribution = 5,
			[Token(Token = "0x4002E76")]
			WorldBiomeMask = 6
		}

		[Token(Token = "0x2000535")]
		public enum RegularSpawnerResourceType
		{
			[Token(Token = "0x4002E78")]
			TerrainTexture = 0,
			[Token(Token = "0x4002E79")]
			TerrainDetail = 1,
			[Token(Token = "0x4002E7A")]
			TerrainModifierStamp = 8,
			[Token(Token = "0x4002E7B")]
			TerrainTree = 2,
			[Token(Token = "0x4002E7C")]
			GameObject = 3,
			[Token(Token = "0x4002E7D")]
			SpawnExtension = 4,
			[Token(Token = "0x4002E7E")]
			Probe = 7
		}

		[Token(Token = "0x2000536")]
		public enum ImportableResourceType
		{
			[Token(Token = "0x4002E80")]
			TerrainTexture,
			[Token(Token = "0x4002E81")]
			TerrainDetail,
			[Token(Token = "0x4002E82")]
			TerrainTree
		}

		[Token(Token = "0x2000537")]
		public enum DroppableResourceType
		{
			[Token(Token = "0x4002E84")]
			TerrainTexture,
			[Token(Token = "0x4002E85")]
			TerrainDetail,
			[Token(Token = "0x4002E86")]
			TerrainTree,
			[Token(Token = "0x4002E87")]
			GameObject
		}

		[Token(Token = "0x2000538")]
		public enum ImportableResourceMode
		{
			[Token(Token = "0x4002E89")]
			AddRules,
			[Token(Token = "0x4002E8A")]
			ReplaceRules
		}

		[Token(Token = "0x2000539")]
		public enum SpawnerTargetMode
		{
			[Token(Token = "0x4002E8C")]
			Terrain,
			[Token(Token = "0x4002E8D")]
			SingleTransform
		}

		[Token(Token = "0x200053A")]
		public enum ImageFileType
		{
			[Token(Token = "0x4002E8F")]
			Exr,
			[Token(Token = "0x4002E90")]
			Jpg,
			[Token(Token = "0x4002E91")]
			Png,
			[Token(Token = "0x4002E92")]
			Tga
		}

		[Token(Token = "0x200053B")]
		public enum ProceduralSkySunTypes
		{
			[Token(Token = "0x4002E94")]
			None,
			[Token(Token = "0x4002E95")]
			Simple,
			[Token(Token = "0x4002E96")]
			HighQuality
		}

		[Token(Token = "0x200053C")]
		public enum CloudRenderQueue
		{
			[Token(Token = "0x4002E98")]
			Background1000,
			[Token(Token = "0x4002E99")]
			Geometry2000,
			[Token(Token = "0x4002E9A")]
			AlphaTest2450,
			[Token(Token = "0x4002E9B")]
			Transparent3000
		}

		[Token(Token = "0x200053D")]
		public enum WaterAutoUpdateMode
		{
			[Token(Token = "0x4002E9D")]
			Interval,
			[Token(Token = "0x4002E9E")]
			SceneConditions
		}

		[Token(Token = "0x200053E")]
		public enum StorageFormat
		{
			[Token(Token = "0x4002EA0")]
			PNG,
			[Token(Token = "0x4002EA1")]
			JPG
		}

		[Token(Token = "0x200053F")]
		public enum ImageChannel
		{
			[Token(Token = "0x4002EA3")]
			R,
			[Token(Token = "0x4002EA4")]
			G,
			[Token(Token = "0x4002EA5")]
			B,
			[Token(Token = "0x4002EA6")]
			A
		}

		[Token(Token = "0x400106D")]
		public const string builtInKeyWord = "SP";

		[Token(Token = "0x400106E")]
		public const string lightweightKeyWord = "LW";

		[Token(Token = "0x400106F")]
		public const string universalKeyWord = "UP";

		[Token(Token = "0x4001070")]
		public const string highDefinitionKeyWord = "HD";

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color spawnerInitColor;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string HDRPPWSkyExperimental;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly string defaultSceneCullingProfile;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly string HDRPEnvironmentObject;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Dictionary<string, int> FeatureOperationNames;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string[] TerrainGeneratorFeatureOperationNames;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static float VirginTerrainCheckThreshold;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static int maxPreviewedTextures;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string defaultGOSpawnTarget;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string gaiaToolsObject;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string gaiaRuntimeObject;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string gaiaStopWatchDataObject;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string gaiaTerrainObjects;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string gaiaTerrainExportObjects;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static string gaiaTerrainLoaderManagerObjects;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static string gaiaPlayerObject;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static string gaiaTempSessionToolsObject;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static string gaiaWaterObject;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static string gaiaLightingObject;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static string gaiaAudioObject;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static string worldDesignerObject;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static string floraGlobalManagerObject;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public static string worldGenerator;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public static string worldBiomeMasks;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public static string worldMapStamper;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public static string worldTempTools;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public static string worldMapLocalStamper;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public static string worldMapWorldStamper;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public static string worldMapTerrainPrefix;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public static string worldMapStampTokenSpawnTarget;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public static string waterSurfaceObject;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public static string gaiaUnderwaterMaterial;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public static string GaiaThunderObjectName;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public static string GaiaThunderPrefabName;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public static string StamperObject;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public static string gaiaWeatherObject;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public static string gaiaPlanarReflections;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public static string gaiaHDRPPlanarReflections;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public static string gaiaPlanarReflectionsCamera;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public static string gaiaFileFormatAsset;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public static string maintenanceTokenFilename;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public static string playerFlyCamName;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public static string playerFirstPersonName;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public static string playerXRName;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public static string m_carPlayerPrefabName;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public static string playerThirdPersonName;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public static string underwaterTransitionObjectName;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public static string underwaterPostProcessingName;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public static string underwaterHorizonName;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public static string underwaterEffectsName;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public static string lightingSettingsName;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public static string newSpawnRuleName;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public static string SourceTerrainBackupObject;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public static string gaiaManagerSpawnerLabel;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public static string loadingScreenName;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public static float minlocationIncrement;

		[Token(Token = "0x40010A9")]
		public const TextureFormat defaultTextureFormat = TextureFormat.RGBA32;

		[Token(Token = "0x40010AA")]
		public const TextureFormat fmtHmTextureFormat = TextureFormat.RGBA32;

		[Token(Token = "0x40010AB")]
		public const TextureFormat fmtRGBA32 = TextureFormat.RGBA32;

		[Token(Token = "0x40010AC")]
		public const StorageFormat defaultImageStorageFormat = StorageFormat.PNG;

		[Token(Token = "0x40010AD")]
		public const ImageChannel defaultImageStorageChannel = ImageChannel.R;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public static TextureFormat[] Valid16BitFormats;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public static string GaiaNewsURL;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public static string GaiaProNewsURL;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public static string MeshTerrainLODGroupPrefix;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public static string MeshTerrainName;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public static string ImpostorTerrainName;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public static string BakeDirectionalLight;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public static string gaiaScreenshotter;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public static string TerrainLoadingSettingsHighlightColor;
	}
	[Token(Token = "0x2000195")]
	public class AutoDepthOfField : MonoBehaviour
	{
		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_interactWithPlayer;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public GaiaConstants.EnvironmentRenderer m_renderPipeLine;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GaiaConstants.DOFTrackingType m_trackingType;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_focusOffset;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera m_sourceCamera;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject m_targetObject;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LayerMask m_targetLayer;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_maxFocusDistance;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_actualFocusDistance;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_dofAperture;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_dofFocalLength;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool m_debug;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string m_playerTag;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_maxDistanceExceeded;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject m_debugSphere;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private DepthOfField m_dof;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_dofTrackingPoint;

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x88358C", Offset = "0x88358C", VA = "0x88358C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x883890", Offset = "0x883890", VA = "0x883890")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x8839AC", Offset = "0x8839AC", VA = "0x8839AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x883AB8", Offset = "0x883AB8", VA = "0x883AB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x884054", Offset = "0x884054", VA = "0x884054")]
		public void SetDOFMainSettings(float aperture, float focalLength)
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x883B80", Offset = "0x883B80", VA = "0x883B80")]
		private void UpdateDofTrackingPoint()
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x8843B4", Offset = "0x8843B4", VA = "0x8843B4")]
		private void FocusOnRayCast(Ray ray)
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x88469C", Offset = "0x88469C", VA = "0x88469C")]
		public void RemoveDebugSphere()
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x884530", Offset = "0x884530", VA = "0x884530")]
		private void SetNewDOFValue(float startValue, float timeMultiplier = 3.5f)
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x8835B0", Offset = "0x8835B0", VA = "0x8835B0")]
		public void SetupAutoFocus()
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x88414C", Offset = "0x88414C", VA = "0x88414C")]
		private void GetDepthOfFieldComponent()
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x8839D4", Offset = "0x8839D4", VA = "0x8839D4")]
		public void SetDOFStatus(bool enabled)
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x8837F0", Offset = "0x8837F0", VA = "0x8837F0")]
		public void GetCurrentDepthOfFieldSettings()
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x88390C", Offset = "0x88390C", VA = "0x88390C")]
		private void SetEditorDepthOfFieldSettings()
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x88474C", Offset = "0x88474C", VA = "0x88474C")]
		public AutoDepthOfField()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000196")]
	public class GaiaTimeOfDay
	{
		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GaiaConstants.TimeOfDayStartingMode m_todStartingType;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool m_todEnabled;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_todDayTimeScale;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int m_todHour;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_todMinutes;

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x9F7614", Offset = "0x9F7614", VA = "0x9F7614")]
		public GaiaTimeOfDay()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000197")]
	public class GaiaWeather
	{
		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m_season;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m_windDirection;

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xA05084", Offset = "0xA05084", VA = "0xA05084")]
		public GaiaWeather()
		{
		}
	}
	[Token(Token = "0x2000198")]
	[ExecuteAlways]
	public class GaiaGlobal : MonoBehaviour
	{
		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private static GaiaGlobal m_instance;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SceneProfile m_sceneProfile;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera m_mainCamera;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Canvas m_globalCanvas;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material WaterMaterial;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool m_currentIsUserProfile;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57EE9C", Offset = "0x57EE9C")]
		public string m_typeOfLighting;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int m_lightingProfileIndex;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int m_waterProfileIndex;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57EED4", Offset = "0x57EED4")]
		public string m_postProcessingProfile;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool m_directToCamera;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57EF0C", Offset = "0x57EF0C")]
		public string m_hDPostProcessingProfile;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57EF44", Offset = "0x57EF44")]
		[HideInInspector]
		public AudioClip m_ambientAudio;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57EF90", Offset = "0x57EF90")]
		public float m_ambientVolume;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57EFA8", Offset = "0x57EFA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57EFA8", Offset = "0x57EFA8")]
		public float m_sunRotation;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F000", Offset = "0x57F000")]
		public float m_sunPitch;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Color m_sunColor;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float m_sunIntensity;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F01C", Offset = "0x57F01C")]
		public Color m_lWSunColor;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float m_lWSunIntensity;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F054", Offset = "0x57F054")]
		public Color m_hDSunColor;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float m_hDSunIntensity;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F08C", Offset = "0x57F08C")]
		public LightShadows m_shadowCastingMode;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F0C4", Offset = "0x57F0C4")]
		public float m_shadowStrength;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public LightShadowResolution m_sunShadowResolution;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F0DC", Offset = "0x57F0DC")]
		public float m_hDShadowDistance;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GaiaConstants.HDShadowResolution m_hDShadowResolution;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public bool m_hDContactShadows;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GaiaConstants.ContactShadowsQuality m_hDContactShadowQuality;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public int m_hDContactShadowCustomQuality;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float m_hDContactShadowsDistance;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F114", Offset = "0x57F114")]
		public float m_hDContactShadowOpacity;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool m_hDMicroShadows;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F12C", Offset = "0x57F12C")]
		public float m_hDMicroShadowOpacity;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F144", Offset = "0x57F144")]
		[HideInInspector]
		public Cubemap m_skyboxHDRI;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Color m_skyboxTint;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F190", Offset = "0x57F190")]
		public float m_skyboxExposure;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57F1A8", Offset = "0x57F1A8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F1A8", Offset = "0x57F1A8")]
		public float m_sunSize;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F1EC", Offset = "0x57F1EC")]
		public float m_sunConvergence;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F208", Offset = "0x57F208")]
		public float m_atmosphereThickness;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Color m_groundColor;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F220", Offset = "0x57F220")]
		public GaiaConstants.HDSkyType m_hDSkyType;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public GaiaConstants.HDSkyUpdateMode m_hDSkyUpdateMode;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57F258", Offset = "0x57F258")]
		[HideInInspector]
		public Cubemap m_hDHDRISkybox;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public float m_hDHDRIExposure;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public float m_hDHDRIMultiplier;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57F294", Offset = "0x57F294")]
		public Color m_hDGradientTopColor;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Color m_hDGradientMiddleColor;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Color m_hDGradientBottomColor;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public float m_hDGradientDiffusion;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public float m_hDGradientExposure;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public float m_hDGradientMultiplier;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57F2A8", Offset = "0x57F2A8")]
		public bool m_hDProceduralEnableSunDisk;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
		public bool m_hDProceduralIncludeSunInBaking;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public float m_hDProceduralSunSize;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public float m_hDProceduralSunSizeConvergence;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public float m_hDProceduralAtmosphereThickness;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public Color32 m_hDProceduralSkyTint;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Color32 m_hDProceduralGroundColor;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public float m_hDProceduralExposure;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public float m_hDProceduralMultiplier;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public bool m_hDPBSEarthPreset;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public float m_hDPBSPlanetaryRadius;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		public bool m_hDPBSSphericalMode;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public float m_hDPBSSeaLevel;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public Vector3 m_hDPBSPlantetCenterPosition;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Vector3 m_hDPBSPlanetRotation;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[HideInInspector]
		public Cubemap m_hDPBSGroundAlbedoTexture;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public Color m_hDPBSGroundTint;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[HideInInspector]
		public Cubemap m_hDPBSGroundEmissionTexture;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public float m_hDPBSGroundEmissionMultiplier;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		public Vector3 m_hDPBSSpaceRotation;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[HideInInspector]
		public Cubemap m_hDPBSSpaceEmissionTexture;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public float m_hDPBSSpaceEmissionMultiplier;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public float m_hDPBSAirMaximumAltitude;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public Color m_hDPBSAirOpacity;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public Color m_hDPBSAirAlbedo;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public float m_hDPBSAirDensityBlue;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public Color m_hDPBSAirTint;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		public float m_hDPBSAerosolMaximumAltitude;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public float m_hDPBSAerosolDensity;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		public Color m_hDPBSAerosolAlbedo;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		public float m_hDPBSAerosolAnisotropy;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public float m_hDPBSColorSaturation;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		public float m_hDPBSAlphaSaturation;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public float m_hDPBSAlphaMultiplier;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		public Color m_hDPBSHorizonTint;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		public float m_hDPBSHorizonZenithShift;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public Color m_hDPBSZenithTint;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public int m_hDPBSNumberOfBounces;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		public GaiaConstants.HDIntensityMode m_hDPBSIntensityMode;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public float m_hDPBSMultiplier;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		public float m_hDPBSExposure;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public bool m_hDPBSIncludeSunInBaking;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F2EC", Offset = "0x57F2EC")]
		public AmbientMode m_ambientMode;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F324", Offset = "0x57F324")]
		public float m_ambientIntensity;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		public Color m_skyAmbient;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		public Color m_equatorAmbient;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		public Color m_groundAmbient;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F33C", Offset = "0x57F33C")]
		public GaiaConstants.HDAmbientMode m_hDAmbientMode;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public float m_hDAmbientDiffuseIntensity;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		public float m_hDAmbientSpecularIntensity;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F374", Offset = "0x57F374")]
		public FogMode m_fogMode;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		public Color m_fogColor;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F3AC", Offset = "0x57F3AC")]
		public float m_fogDensity;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public float m_fogStartDistance;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		public float m_fogEndDistance;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F3C4", Offset = "0x57F3C4")]
		public GaiaConstants.HDFogType m_hDFogType;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		public GaiaConstants.HDFogType2019_3 m_hDFogType2019_3;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57F3FC", Offset = "0x57F3FC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F3FC", Offset = "0x57F3FC")]
		public float m_hDExponentialFogDensity;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		public float m_hDExponentialFogDistance;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		public float m_hDExponentialFogBaseHeight;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F440", Offset = "0x57F440")]
		public float m_hDExponentialFogHeightAttenuation;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public float m_hDExponentialFogMaxDistance;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57F458", Offset = "0x57F458")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F458", Offset = "0x57F458")]
		public float m_hDLinearFogDensity;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		public float m_hDLinearFogStart;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		public float m_hDLinearFogEnd;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		public float m_hDLinearFogHeightStart;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		public float m_hDLinearFogHeightEnd;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		public float m_hDLinearFogMaxDistance;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57F49C", Offset = "0x57F49C")]
		public Color m_hDVolumetricFogScatterColor;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		public float m_hDVolumetricFogDistance;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		public float m_hDVolumetricFogBaseHeight;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		public float m_hDVolumetricFogMeanHeight;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F4B0", Offset = "0x57F4B0")]
		public float m_hDVolumetricFogAnisotropy;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F4C8", Offset = "0x57F4C8")]
		public float m_hDVolumetricFogProbeDimmer;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		public float m_hDVolumetricFogMaxDistance;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
		public float m_hDVolumetricFogDepthExtent;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F4E0", Offset = "0x57F4E0")]
		public float m_hDVolumetricFogSliceDistribution;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F4F8", Offset = "0x57F4F8")]
		public bool m_lightingHasBeenSaved;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		[HideInInspector]
		public GaiaLightingProfile m_lightingProfile;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		[HideInInspector]
		public GaiaWaterProfile m_waterProfile;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		public bool m_waterHasBeenSaved;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private GaiaSettings m_gaiaSettings;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		[HideInInspector]
		public Material m_masterSkyboxMaterial;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		[HideInInspector]
		public bool m_parentObjects;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x389")]
		[HideInInspector]
		public bool m_hideProcessVolume;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38A")]
		[HideInInspector]
		public bool m_enablePostProcessing;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38B")]
		[HideInInspector]
		public bool m_enableAmbientAudio;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
		[HideInInspector]
		public bool m_enableFog;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		[HideInInspector]
		public GaiaConstants.GaiaProAntiAliasingMode m_antiAliasingMode;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
		[HideInInspector]
		public float m_AAJitterSpread;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		[HideInInspector]
		public float m_AAStationaryBlending;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
		[HideInInspector]
		public float m_AAMotionBlending;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		[HideInInspector]
		public float m_AASharpness;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
		[HideInInspector]
		public float m_antiAliasingTAAStrength;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		[HideInInspector]
		public bool m_cameraDithering;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
		[HideInInspector]
		public float m_cameraAperture;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		[HideInInspector]
		public bool m_usePhysicalCamera;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
		[HideInInspector]
		public Vector2 m_cameraSensorSize;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
		[HideInInspector]
		public bool m_globalReflectionProbe;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		[SerializeField]
		private GaiaTimeOfDay m_gaiaTimeOfDay;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		[SerializeField]
		private GaiaWeather m_gaiaWeather;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		[SerializeField]
		private Light m_sunLight;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		[SerializeField]
		private Light m_moonLight;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		[SerializeField]
		public bool WeatherPresent;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		[SerializeField]
		private ProceduralWorldsGlobalWeather WeatherSystem;

		[Token(Token = "0x400116C")]
		public const string m_shaderLightDirection = "_PW_MainLightDir";

		[Token(Token = "0x400116D")]
		public const string m_shaderLightColor = "_PW_MainLightColor";

		[Token(Token = "0x400116E")]
		public const string m_shaderSpecLightColor = "_PW_MainLightSpecular";

		[Token(Token = "0x400116F")]
		public const string m_shaderWind = "_WaveDirection";

		[Token(Token = "0x4001170")]
		public const string m_shaderReflectionTexture = "_ReflectionTex";

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		[SerializeField]
		private bool m_sunLightExists;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F1")]
		[SerializeField]
		private bool m_moonLightExists;

		[Token(Token = "0x1700015A")]
		public static GaiaGlobal Instance
		{
			[Token(Token = "0x6000BD9")]
			[Address(RVA = "0x824D98", Offset = "0x824D98", VA = "0x824D98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BDA")]
			[Address(RVA = "0x824DE4", Offset = "0x824DE4", VA = "0x824DE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700015B")]
		public SceneProfile SceneProfile
		{
			[Token(Token = "0x6000BDB")]
			[Address(RVA = "0x824E88", Offset = "0x824E88", VA = "0x824E88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BDC")]
			[Address(RVA = "0x824F24", Offset = "0x824F24", VA = "0x824F24")]
			set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public GaiaTimeOfDay GaiaTimeOfDayValue
		{
			[Token(Token = "0x6000BDD")]
			[Address(RVA = "0x824F2C", Offset = "0x824F2C", VA = "0x824F2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BDE")]
			[Address(RVA = "0x824F34", Offset = "0x824F34", VA = "0x824F34")]
			set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public GaiaWeather GaiaWeather
		{
			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0x8250B4", Offset = "0x8250B4", VA = "0x8250B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BE0")]
			[Address(RVA = "0x8250BC", Offset = "0x8250BC", VA = "0x8250BC")]
			set
			{
			}
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x825148", Offset = "0x825148", VA = "0x825148")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x8251CC", Offset = "0x8251CC", VA = "0x8251CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x825474", Offset = "0x825474", VA = "0x825474")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x82571C", Offset = "0x82571C", VA = "0x82571C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x825C90", Offset = "0x825C90", VA = "0x825C90")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x825CE0", Offset = "0x825CE0", VA = "0x825CE0")]
		public void LoadProfileType(GaiaLightingProfile mainProfile)
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x825CFC", Offset = "0x825CFC", VA = "0x825CFC")]
		public void LoadProfileType(GaiaWaterProfile mainProfile)
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x824F40", Offset = "0x824F40", VA = "0x824F40")]
		public void UpdateGaiaTimeOfDay(bool revertDefault)
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x825EE8", Offset = "0x825EE8", VA = "0x825EE8")]
		public void UpdateTimeOfDayMode(GaiaConstants.TimeOfDayStartingMode mode, bool revertDefault)
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x825D18", Offset = "0x825D18", VA = "0x825D18")]
		public void UpdateNightMode()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x8253B8", Offset = "0x8253B8", VA = "0x8253B8")]
		public static bool CheckWeatherPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x82600C", Offset = "0x82600C", VA = "0x82600C")]
		public static void ProcessOnEnable()
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x8260F4", Offset = "0x8260F4", VA = "0x8260F4")]
		public static void CheckWeatherPresent(bool setStatus)
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x8250C4", Offset = "0x8250C4", VA = "0x8250C4")]
		public void UpdateGaiaWeather()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x825718", Offset = "0x825718", VA = "0x825718")]
		public static void CheckPostProcessingFog(bool enabled)
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x826254", Offset = "0x826254", VA = "0x826254")]
		public static float GetTimeOfDayMainValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x826368", Offset = "0x826368", VA = "0x826368")]
		public static int GetTimeOfDayHour()
		{
			return default(int);
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x826454", Offset = "0x826454", VA = "0x826454")]
		public static float GetTimeOfDayMinute()
		{
			return default(float);
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x82653C", Offset = "0x82653C", VA = "0x82653C")]
		public static void GaiaGlobalNetworkSyncGetAll(out int timeHour, out float timeMinute, out bool isRaining, out bool isSnowing, out bool isTODEnabled, out float timeScale)
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x826750", Offset = "0x826750", VA = "0x826750")]
		public static void GaiaGlobalNetworkSyncGetTimeAndWeather(out int timeHour, out float timeMinute, out bool isRaining, out bool isSnowing)
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x8268F0", Offset = "0x8268F0", VA = "0x8268F0")]
		public static void GaiaGlobalNetworkSyncGetTime(out int timeHour, out float timeMinute)
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x826A14", Offset = "0x826A14", VA = "0x826A14")]
		public static void GaiaGlobalNetworkSyncGetWeather(out bool isRaining, out bool isSnowing)
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x826AD4", Offset = "0x826AD4", VA = "0x826AD4")]
		public static void GaiaGlobalNetworkSyncGetTimeStatus(out bool isTODEnabled, out float timeScale)
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x826C10", Offset = "0x826C10", VA = "0x826C10")]
		public static void GaiaGlobalNetworkSyncSetAll(int timeHour, float timeMinute, bool isRaining, bool isSnowing, bool isTODEnabled, float timeScale)
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x826EEC", Offset = "0x826EEC", VA = "0x826EEC")]
		public static void GaiaGlobalNetworkSyncSetTimeAndWeather(int timeHour, float timeMinute, bool isRaining, bool isSnowing)
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x82718C", Offset = "0x82718C", VA = "0x82718C")]
		public static void GaiaGlobalNetworkSyncSetTime(int timeHour, float timeMinute)
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x8272BC", Offset = "0x8272BC", VA = "0x8272BC")]
		public static void GaiaGlobalNetworkSyncSetWeather(bool isRaining, bool isSnowing)
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x82746C", Offset = "0x82746C", VA = "0x82746C")]
		public static void GaiaGlobalNetworkSyncSetTimeStatus(bool isTODEnabled, float timeScale)
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x82757C", Offset = "0x82757C", VA = "0x82757C")]
		public static void SetNetworkedPlayerTransform(Transform player)
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x827690", Offset = "0x827690", VA = "0x827690")]
		public static void SetNetworkedPlayerCharacterController(GameObject player)
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x8277E0", Offset = "0x8277E0", VA = "0x8277E0")]
		public static void SetupNetworkPlayerAndCamera(GameObject player, Camera camera)
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x827934", Offset = "0x827934", VA = "0x827934")]
		public static void FinalizePlayerObjectRuntime(GameObject playerObj, bool checkYWithSeaLevel = true)
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x828584", Offset = "0x828584", VA = "0x828584")]
		public static void FinalizePlayerObjectEditor(GameObject playerObj, GaiaSettings gaiaSettings)
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x827D00", Offset = "0x827D00", VA = "0x827D00")]
		public static void FinalizeCameraObjectRuntime(Camera cameraObject)
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x828A90", Offset = "0x828A90", VA = "0x828A90")]
		public GaiaGlobal()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public class GaiaLightingProfile : ScriptableObject
	{
		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool m_multiSceneLightingSupport;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[HideInInspector]
		public bool m_updateInRealtime;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public int m_selectedLightingProfileValuesIndex;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool m_renamingProfile;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[HideInInspector]
		public bool m_editSettings;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public GaiaConstants.BakeMode m_lightingBakeMode;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Material m_masterSkyboxMaterial;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GaiaLightingProfileValues> m_lightingProfiles;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool m_parentObjects;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[HideInInspector]
		public bool m_hideProcessVolume;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[HideInInspector]
		public bool m_enablePostProcessing;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		[HideInInspector]
		public bool m_enableAmbientAudio;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public bool m_enableFog;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public GaiaConstants.GaiaProAntiAliasingMode m_antiAliasingMode;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public float m_AAJitterSpread;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public float m_AAStationaryBlending;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public float m_AAMotionBlending;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float m_AASharpness;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public float m_antiAliasingTAAStrength;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public bool m_cameraDithering;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public float m_cameraAperture;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public bool m_usePhysicalCamera;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		public Vector2 m_cameraSensorSize;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		public float m_cameraFocalLength;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public bool m_globalReflectionProbe;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool m_enableAutoDOF;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public LayerMask m_dofLayerDetection;

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x82A6FC", Offset = "0x82A6FC", VA = "0x82A6FC")]
		public GaiaLightingProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019A")]
	public class PWSkyAtmosphere
	{
		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Gradient TODSkyboxTint;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve TODSkyboxExposure;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gradient TODSunColor;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient TODFogColor;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Gradient TODAmbientSkyColor;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Gradient TODAmbientEquatorColor;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Gradient TODAmbientGroundColor;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve TODSunIntensity;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve TODSunShadowStrength;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve TODCloudHeightLevelDensity;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve TODCloudHeightLevelThickness;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve TODCloudHeightLevelSpeed;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve TODCloudOpacity;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve CloudDomeBrightness;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AnimationCurve TODAmbientIntensity;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AnimationCurve TODAtmosphereThickness;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AnimationCurve TODFogDensity;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AnimationCurve TODFogStartDistance;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AnimationCurve TODFogEndDistance;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AnimationCurve TODHDRPFogBaseHeight;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AnimationCurve TODHDRPFogAnisotropy;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AnimationCurve TODHDRPFogLightProbeDimmer;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public AnimationCurve TODHDRPFogDepthExtent;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Gradient TODHDRPGroundTint;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Gradient TODHDRPFogAlbedo;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AnimationCurve TODSunSize;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AnimationCurve TODSunSizeConvergence;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AnimationCurve TODPostProcessExposure;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public AnimationCurve TODSkyboxFogHeight;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AnimationCurve TODSkyboxFogGradient;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public GaiaConstants.CloudRenderQueue CloudRenderQueue;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public bool CloudGPUInstanced;

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xF94704", Offset = "0xF94704", VA = "0xF94704")]
		public void SetDefaults()
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xF993BC", Offset = "0xF993BC", VA = "0xF993BC")]
		private bool CheckIfDefaultsNeedToBeSet()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xF99804", Offset = "0xF99804", VA = "0xF99804")]
		public void Load(ProceduralWorldsGlobalWeather globalWeather, bool checkDefaults = true)
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xF99A90", Offset = "0xF99A90", VA = "0xF99A90")]
		public void Save(ProceduralWorldsGlobalWeather globalWeather)
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xF99C04", Offset = "0xF99C04", VA = "0xF99C04")]
		public void New(ProceduralWorldsGlobalWeather globalWeather)
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0xF94C34", Offset = "0xF94C34", VA = "0xF94C34")]
		private Gradient CreateTODSunColor()
		{
			return null;
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xF94EFC", Offset = "0xF94EFC", VA = "0xF94EFC")]
		private Gradient CreateTODFogColor()
		{
			return null;
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xF95224", Offset = "0xF95224", VA = "0xF95224")]
		private Gradient CreateTODAmbientSkyColor()
		{
			return null;
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xF95504", Offset = "0xF95504", VA = "0xF95504")]
		private Gradient CreateTODAmbientEquatorColor()
		{
			return null;
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xF95824", Offset = "0xF95824", VA = "0xF95824")]
		private Gradient CreateTODAmbientGroundColor()
		{
			return null;
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xF95B44", Offset = "0xF95B44", VA = "0xF95B44")]
		private AnimationCurve CreateTODSunBrightnessIntensity()
		{
			return null;
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xF95DDC", Offset = "0xF95DDC", VA = "0xF95DDC")]
		private AnimationCurve CreateTODSunShadowStrength()
		{
			return null;
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xF96018", Offset = "0xF96018", VA = "0xF96018")]
		private AnimationCurve CreateTODCloudHeightDensity()
		{
			return null;
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xF962B0", Offset = "0xF962B0", VA = "0xF962B0")]
		private AnimationCurve CreateTODCloudHeightThickness()
		{
			return null;
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xF96598", Offset = "0xF96598", VA = "0xF96598")]
		private AnimationCurve CreateTODCloudHeightSpeed()
		{
			return null;
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xF96A04", Offset = "0xF96A04", VA = "0xF96A04")]
		private AnimationCurve CreateTODCloudDomeBrightness()
		{
			return null;
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xF9671C", Offset = "0xF9671C", VA = "0xF9671C")]
		private AnimationCurve CreateTODCloudOpacity()
		{
			return null;
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xF96C38", Offset = "0xF96C38", VA = "0xF96C38")]
		private AnimationCurve CreateTODAmbientIntensity()
		{
			return null;
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xF96E80", Offset = "0xF96E80", VA = "0xF96E80")]
		private AnimationCurve CreateTODAtmosphereThickness()
		{
			return null;
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xF97168", Offset = "0xF97168", VA = "0xF97168")]
		private AnimationCurve CreateTODFogDensity()
		{
			return null;
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xF973FC", Offset = "0xF973FC", VA = "0xF973FC")]
		private AnimationCurve CreateTODFogStartDistance()
		{
			return null;
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xF9761C", Offset = "0xF9761C", VA = "0xF9761C")]
		private AnimationCurve CreateTODFogEndDistance()
		{
			return null;
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xF99E54", Offset = "0xF99E54", VA = "0xF99E54")]
		private AnimationCurve CreateTODIntensityCurve()
		{
			return null;
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xF97858", Offset = "0xF97858", VA = "0xF97858")]
		private AnimationCurve CreateTODSunSizeCurve()
		{
			return null;
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xF97B48", Offset = "0xF97B48", VA = "0xF97B48")]
		private AnimationCurve CreateTODSunSizeConvergenceCurve()
		{
			return null;
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xF97D68", Offset = "0xF97D68", VA = "0xF97D68")]
		private AnimationCurve CreateTODPostProcessExposureCurve()
		{
			return null;
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xF97F98", Offset = "0xF97F98", VA = "0xF97F98")]
		private Gradient CreateTODSkyboxTint()
		{
			return null;
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xF98140", Offset = "0xF98140", VA = "0xF98140")]
		private AnimationCurve CreateTODSkyboxExposure()
		{
			return null;
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xF98370", Offset = "0xF98370", VA = "0xF98370")]
		private AnimationCurve CreateTODHDRPFogAnisotropy()
		{
			return null;
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xF985A8", Offset = "0xF985A8", VA = "0xF985A8")]
		private AnimationCurve CreateTODHDRPFogBaseHeight()
		{
			return null;
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xF987E4", Offset = "0xF987E4", VA = "0xF987E4")]
		private AnimationCurve CreateTODHDRPFogDepthExtent()
		{
			return null;
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xF98A1C", Offset = "0xF98A1C", VA = "0xF98A1C")]
		private AnimationCurve CreateTODHDRPFogLightProbeDimmer()
		{
			return null;
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xF98C54", Offset = "0xF98C54", VA = "0xF98C54")]
		private Gradient CreateTODHDRPGroundTint()
		{
			return null;
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xF98F14", Offset = "0xF98F14", VA = "0xF98F14")]
		private Gradient CreateTODHDRPFogAlbedo()
		{
			return null;
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xF9913C", Offset = "0xF9913C", VA = "0xF9913C")]
		private AnimationCurve CreateTODSkyboxFogHeight()
		{
			return null;
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xF9927C", Offset = "0xF9927C", VA = "0xF9927C")]
		private AnimationCurve CreateTODSkyboxFogGradient()
		{
			return null;
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xF9A038", Offset = "0xF9A038", VA = "0xF9A038")]
		public PWSkyAtmosphere()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019B")]
	public class PWSkyWind
	{
		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float WindSpeed;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float WindDirection;

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xFCFD34", Offset = "0xFCFD34", VA = "0xFCFD34")]
		public void Load(ProceduralWorldsGlobalWeather globalWeather)
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xFCFDE4", Offset = "0xFCFDE4", VA = "0xFCFDE4")]
		public void Save(ProceduralWorldsGlobalWeather globalWeather)
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xFCFE78", Offset = "0xFCFE78", VA = "0xFCFE78")]
		public void New(ProceduralWorldsGlobalWeather globalWeather)
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xFCFF28", Offset = "0xFCFF28", VA = "0xFCFF28")]
		public PWSkyWind()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019C")]
	public class PWSkyWeather
	{
		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m_weatherFadeDuration;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool m_modifyFog;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool m_modifyWind;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool m_modifySkybox;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool m_modifyPostProcessing;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_modifySun;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_modifyAmbient;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool m_modifyClouds;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PWSkyRain m_rainSettings;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PWSkySnow m_snowSettings;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PWSkyThunder m_thunderSettings;

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xFCF82C", Offset = "0xFCF82C", VA = "0xFCF82C")]
		public void Load(ProceduralWorldsGlobalWeather globalWeather, bool checkDefaults = true)
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xFCF940", Offset = "0xFCF940", VA = "0xFCF940")]
		public void Save(ProceduralWorldsGlobalWeather globalWeather)
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xFCFA40", Offset = "0xFCFA40", VA = "0xFCFA40")]
		public void New(ProceduralWorldsGlobalWeather globalWeather, PWSkyWeather sourceValues, PWSkyWeather targetValues)
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xFCFC38", Offset = "0xFCFC38", VA = "0xFCFC38")]
		public PWSkyWeather()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019D")]
	public class PWSkyRain
	{
		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool EnableRain;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float RainIntensity;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_rainHeight;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_rainStepSize;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RainMode m_rainMode;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WeatherSettings m_rainWeatherSettings;

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xFC53F0", Offset = "0xFC53F0", VA = "0xFC53F0")]
		public void SetDefaults()
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xFC98CC", Offset = "0xFC98CC", VA = "0xFC98CC")]
		private bool CheckIfDefaultsNeedToBeSet()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xFC9DF8", Offset = "0xFC9DF8", VA = "0xFC9DF8")]
		public void Load(ProceduralWorldsGlobalWeather globalWeather, bool checkDefaults = true)
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xFC9EF8", Offset = "0xFC9EF8", VA = "0xFC9EF8")]
		public void Save(ProceduralWorldsGlobalWeather globalWeather)
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xFC9FCC", Offset = "0xFC9FCC", VA = "0xFC9FCC")]
		public void New(ProceduralWorldsGlobalWeather globalWeather)
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xFC5B78", Offset = "0xFC5B78", VA = "0xFC5B78")]
		private Gradient CreateWeatherRainFogColor()
		{
			return null;
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xFC5E94", Offset = "0xFC5E94", VA = "0xFC5E94")]
		private AnimationCurve CreateWeatherRainFogDensity()
		{
			return null;
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xFC6128", Offset = "0xFC6128", VA = "0xFC6128")]
		private AnimationCurve CreateWeatherRainFogStartDistance()
		{
			return null;
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xFC6348", Offset = "0xFC6348", VA = "0xFC6348")]
		private AnimationCurve CreateWeatherRainFogEndDistance()
		{
			return null;
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xFC6584", Offset = "0xFC6584", VA = "0xFC6584")]
		private AnimationCurve CreateWeatherRainSkyboxExposure()
		{
			return null;
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xFC6718", Offset = "0xFC6718", VA = "0xFC6718")]
		private Gradient CreateWeatherRainSkyboxTint()
		{
			return null;
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xFC695C", Offset = "0xFC695C", VA = "0xFC695C")]
		private AnimationCurve CreateWeatherRainSkyboxAtmosphereThickness()
		{
			return null;
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xFC727C", Offset = "0xFC727C", VA = "0xFC727C")]
		private Gradient CreateWeatherRainSunColor()
		{
			return null;
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xFC7550", Offset = "0xFC7550", VA = "0xFC7550")]
		private AnimationCurve CreateWeatherRainSunIntensity()
		{
			return null;
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xFC790C", Offset = "0xFC790C", VA = "0xFC790C")]
		private AnimationCurve CreateWeatherRainFXTemperature()
		{
			return null;
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xFC7B84", Offset = "0xFC7B84", VA = "0xFC7B84")]
		private AnimationCurve CreateWeatherRainFXTint()
		{
			return null;
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xFC8090", Offset = "0xFC8090", VA = "0xFC8090")]
		private Gradient CreateWeatherRainFXColorFilter()
		{
			return null;
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xFC77DC", Offset = "0xFC77DC", VA = "0xFC77DC")]
		private AnimationCurve CreateWeatherRainFXBloomIntensity()
		{
			return null;
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xFC7E00", Offset = "0xFC7E00", VA = "0xFC7E00")]
		private AnimationCurve CreateWeatherRainFXVignetteIntensity()
		{
			return null;
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xFC8238", Offset = "0xFC8238", VA = "0xFC8238")]
		private AnimationCurve CreateWeatherRainAmbientIntensity()
		{
			return null;
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xFC964C", Offset = "0xFC964C", VA = "0xFC964C")]
		private AnimationCurve CreateTODSkyboxFogHeight()
		{
			return null;
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xFC978C", Offset = "0xFC978C", VA = "0xFC978C")]
		private AnimationCurve CreateTODSkyboxFogGradient()
		{
			return null;
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xFC83CC", Offset = "0xFC83CC", VA = "0xFC83CC")]
		private Gradient CreateWeatherRainAmbientSky()
		{
			return null;
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xFC86AC", Offset = "0xFC86AC", VA = "0xFC86AC")]
		private Gradient CreateWeatherRainAmbientEquator()
		{
			return null;
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xFC89D8", Offset = "0xFC89D8", VA = "0xFC89D8")]
		private Gradient CreateWeatherRainAmbientGround()
		{
			return null;
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xFC8CF8", Offset = "0xFC8CF8", VA = "0xFC8CF8")]
		private AnimationCurve CreateWeatherRainCloudDomeBrightness()
		{
			return null;
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xFC8E8C", Offset = "0xFC8E8C", VA = "0xFC8E8C")]
		private AnimationCurve CreateWeatherRainCloudDensity()
		{
			return null;
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xFC9020", Offset = "0xFC9020", VA = "0xFC9020")]
		private AnimationCurve CreateWeatherRainCloudThickness()
		{
			return null;
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xFC9348", Offset = "0xFC9348", VA = "0xFC9348")]
		private AnimationCurve CreateWeatherRainCloudSpeed()
		{
			return null;
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xFC91B4", Offset = "0xFC91B4", VA = "0xFC91B4")]
		private AnimationCurve CreateWeatherRainCloudOpacity()
		{
			return null;
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xFC94C8", Offset = "0xFC94C8", VA = "0xFC94C8")]
		private AnimationCurve CreateWeatherRainParticleOpacity()
		{
			return null;
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xFC70F0", Offset = "0xFC70F0", VA = "0xFC70F0")]
		private AnimationCurve CreateWeatherRainHDRPFogHeight()
		{
			return null;
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xFC6DD0", Offset = "0xFC6DD0", VA = "0xFC6DD0")]
		private AnimationCurve CreateWeatherRainHDRPGlobalAnisotropy()
		{
			return null;
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xFC6F60", Offset = "0xFC6F60", VA = "0xFC6F60")]
		private AnimationCurve CreateWeatherRainHDRPGlobalProbeDimmer()
		{
			return null;
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xFC6C3C", Offset = "0xFC6C3C", VA = "0xFC6C3C")]
		private AnimationCurve CreateWeatherRainHDRPFogDepthExtent()
		{
			return null;
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xFCA084", Offset = "0xFCA084", VA = "0xFCA084")]
		public PWSkyRain()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019E")]
	public class PWSkySnow
	{
		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool EnableSnow;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool SnowCoverAlwaysEnabled;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float SnowIntensity;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SnowHeight;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float PermanentSnowHeight;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float SnowingHeight;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float SnowFadeHeight;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_snowStormChance;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_snowStepSize;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SnowMode m_snowMode;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public WeatherSettings m_snowWeatherSettings;

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xFCA730", Offset = "0xFCA730", VA = "0xFCA730")]
		public void SetDefaults()
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xFCEBFC", Offset = "0xFCEBFC", VA = "0xFCEBFC")]
		private bool CheckIfDefaultsNeedToBeSet()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xFCF128", Offset = "0xFCF128", VA = "0xFCF128")]
		public void Load(ProceduralWorldsGlobalWeather globalWeather, bool checkDefaults = true)
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xFCF278", Offset = "0xFCF278", VA = "0xFCF278")]
		public void Save(ProceduralWorldsGlobalWeather globalWeather)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xFCF374", Offset = "0xFCF374", VA = "0xFCF374")]
		public void New(ProceduralWorldsGlobalWeather globalWeather)
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xFCAEA8", Offset = "0xFCAEA8", VA = "0xFCAEA8")]
		private Gradient CreateWeatherSnowFogColor()
		{
			return null;
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xFCB1C4", Offset = "0xFCB1C4", VA = "0xFCB1C4")]
		private AnimationCurve CreateWeatherSnowFogDensity()
		{
			return null;
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xFCB458", Offset = "0xFCB458", VA = "0xFCB458")]
		private AnimationCurve CreateWeatherSnowFogStartDistance()
		{
			return null;
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xFCB678", Offset = "0xFCB678", VA = "0xFCB678")]
		private AnimationCurve CreateWeatherSnowFogEndDistance()
		{
			return null;
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xFCB8B4", Offset = "0xFCB8B4", VA = "0xFCB8B4")]
		private AnimationCurve CreateWeatherSnowSkyboxExposure()
		{
			return null;
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xFCBA48", Offset = "0xFCBA48", VA = "0xFCBA48")]
		private Gradient CreateWeatherSnowSkyboxTint()
		{
			return null;
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xFCBC8C", Offset = "0xFCBC8C", VA = "0xFCBC8C")]
		private AnimationCurve CreateWeatherSnowSkyboxAtmosphereThickness()
		{
			return null;
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xFCC5B4", Offset = "0xFCC5B4", VA = "0xFCC5B4")]
		private Gradient CreateWeatherSnowSunColor()
		{
			return null;
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xFCC888", Offset = "0xFCC888", VA = "0xFCC888")]
		private AnimationCurve CreateWeatherSnowSunIntensity()
		{
			return null;
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xFCCC44", Offset = "0xFCCC44", VA = "0xFCCC44")]
		private AnimationCurve CreateWeatherSnowFXTemperature()
		{
			return null;
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xFCCEBC", Offset = "0xFCCEBC", VA = "0xFCCEBC")]
		private AnimationCurve CreateWeatherSnowFXTint()
		{
			return null;
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xFCD3C8", Offset = "0xFCD3C8", VA = "0xFCD3C8")]
		private Gradient CreateWeatherSnowFXColorFilter()
		{
			return null;
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xFCCB14", Offset = "0xFCCB14", VA = "0xFCCB14")]
		private AnimationCurve CreateWeatherSnowFXBloomIntensity()
		{
			return null;
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xFCD138", Offset = "0xFCD138", VA = "0xFCD138")]
		private AnimationCurve CreateWeatherSnowFXVignetteIntensity()
		{
			return null;
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xFCD570", Offset = "0xFCD570", VA = "0xFCD570")]
		private AnimationCurve CreateWeatherSnowAmbientIntensity()
		{
			return null;
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xFCD704", Offset = "0xFCD704", VA = "0xFCD704")]
		private Gradient CreateWeatherSnowAmbientSky()
		{
			return null;
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xFCD9E4", Offset = "0xFCD9E4", VA = "0xFCD9E4")]
		private Gradient CreateWeatherSnowAmbientEquator()
		{
			return null;
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xFCDD10", Offset = "0xFCDD10", VA = "0xFCDD10")]
		private Gradient CreateWeatherSnowAmbientGround()
		{
			return null;
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xFCE030", Offset = "0xFCE030", VA = "0xFCE030")]
		private AnimationCurve CreateWeatherSnowCloudDomeBrightness()
		{
			return null;
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xFCE1B0", Offset = "0xFCE1B0", VA = "0xFCE1B0")]
		private AnimationCurve CreateWeatherSnowCloudDensity()
		{
			return null;
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xFCE344", Offset = "0xFCE344", VA = "0xFCE344")]
		private AnimationCurve CreateWeatherSnowCloudThickness()
		{
			return null;
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xFCE66C", Offset = "0xFCE66C", VA = "0xFCE66C")]
		private AnimationCurve CreateWeatherSnowCloudSpeed()
		{
			return null;
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xFCE4D8", Offset = "0xFCE4D8", VA = "0xFCE4D8")]
		private AnimationCurve CreateWeatherSnowCloudOpacity()
		{
			return null;
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xFCE7EC", Offset = "0xFCE7EC", VA = "0xFCE7EC")]
		private AnimationCurve CreateWeatherSnowParticleOpacity()
		{
			return null;
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xFCC420", Offset = "0xFCC420", VA = "0xFCC420")]
		private AnimationCurve CreateWeatherSnowHDRPFogHeight()
		{
			return null;
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xFCC100", Offset = "0xFCC100", VA = "0xFCC100")]
		private AnimationCurve CreateWeatherSnowHDRPGlobalAnisotropy()
		{
			return null;
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xFCC290", Offset = "0xFCC290", VA = "0xFCC290")]
		private AnimationCurve CreateWeatherSnowHDRPGlobalProbeDimmer()
		{
			return null;
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xFCBF6C", Offset = "0xFCBF6C", VA = "0xFCBF6C")]
		private AnimationCurve CreateWeatherSnowHDRPFogDepthExtent()
		{
			return null;
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xFCE97C", Offset = "0xFCE97C", VA = "0xFCE97C")]
		private AnimationCurve CreateTODSkyboxFogHeight()
		{
			return null;
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xFCEABC", Offset = "0xFCEABC", VA = "0xFCEABC")]
		private AnimationCurve CreateTODSkyboxFogGradient()
		{
			return null;
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xFCF3F8", Offset = "0xFCF3F8", VA = "0xFCF3F8")]
		public PWSkySnow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019F")]
	public class PWSkyThunder
	{
		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_enableThunder;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float ThunderWaitDuration;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_thunderChance;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color ThunderLightColor;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ThunderLightIntensity;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<AudioClip> ThunderAudioSources;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float ThunderLightRadius;

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xFCF488", Offset = "0xFCF488", VA = "0xFCF488")]
		public void SetDefaults()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xFCF52C", Offset = "0xFCF52C", VA = "0xFCF52C")]
		private bool CheckIfDefaultsNeedToBeSet()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xFCF580", Offset = "0xFCF580", VA = "0xFCF580")]
		public void Load(ProceduralWorldsGlobalWeather globalWeather, bool checkDefaults = true)
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xFCF688", Offset = "0xFCF688", VA = "0xFCF688")]
		public void Save(ProceduralWorldsGlobalWeather globalWeather)
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xFCF744", Offset = "0xFCF744", VA = "0xFCF744")]
		public void New(ProceduralWorldsGlobalWeather globalWeather)
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xFCF800", Offset = "0xFCF800", VA = "0xFCF800")]
		public PWSkyThunder()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A0")]
	public class PWSkyCloud
	{
		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool EnableClouds;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int CloudHeight;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color CloudAmbientColor;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float CloudScale;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float CloudOffset;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float CloudBrightness;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float CloudFade;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector4 CloudTilingAndWind;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector4 CloudOpacity;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float CloudRotationSpeedLow;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float CloudRotationSpeedMiddle;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float CloudRotationSpeedFar;

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xF9A048", Offset = "0xF9A048", VA = "0xF9A048")]
		public void Load(ProceduralWorldsGlobalWeather globalWeather)
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xF9A220", Offset = "0xF9A220", VA = "0xF9A220")]
		public void Save(ProceduralWorldsGlobalWeather globalWeather)
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xF9A314", Offset = "0xF9A314", VA = "0xF9A314")]
		public void New(ProceduralWorldsGlobalWeather globalWeather)
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xF9A470", Offset = "0xF9A470", VA = "0xF9A470")]
		public PWSkyCloud()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A1")]
	public class PWSkySeason
	{
		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool EnableSeasons;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Season;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color SeasonWinterTint;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color SeasonSpringTint;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color SeasonSummerTint;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color SeasonAutumnTint;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_seasonTransitionDuration;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public SeasonMode SeasonMode;

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xFCA108", Offset = "0xFCA108", VA = "0xFCA108")]
		public void SetDefaults()
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xFCA30C", Offset = "0xFCA30C", VA = "0xFCA30C")]
		private bool CheckIfDefaultsNeedToBeSet()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xFCA438", Offset = "0xFCA438", VA = "0xFCA438")]
		public void Load(ProceduralWorldsGlobalWeather globalWeather, bool checkDefaults = true)
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xFCA560", Offset = "0xFCA560", VA = "0xFCA560")]
		public void Save(ProceduralWorldsGlobalWeather globalWeather)
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xFCA644", Offset = "0xFCA644", VA = "0xFCA644")]
		public void New(ProceduralWorldsGlobalWeather globalWeather)
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xFCA728", Offset = "0xFCA728", VA = "0xFCA728")]
		public PWSkySeason()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A2")]
	public class GaiaLightingProfileValues
	{
		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F860", Offset = "0x57F860")]
		public string m_typeOfLighting;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GaiaConstants.GaiaLightingProfileType m_profileType;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool m_userCustomProfile;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_profileRename;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F898", Offset = "0x57F898")]
		public float m_postProcessExposure;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PostProcessProfile m_postProcessProfileBuiltIn;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string m_postProcessingProfileGUIDBuiltIn;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool m_directToCamera;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_postProcessingProfileGUIDURP;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string m_postProcessingProfileGUIDHDRP;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string m_environmentProfileGUIDHDRP;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F8E0", Offset = "0x57F8E0")]
		public AudioClip m_ambientAudio;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F918", Offset = "0x57F918")]
		public float m_ambientVolume;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F930", Offset = "0x57F930")]
		public bool m_useKelvin;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F968", Offset = "0x57F968")]
		public float m_kelvinValue;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F988", Offset = "0x57F988")]
		public float m_sunRotation;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float m_pwSkySunRotation;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57F9A4", Offset = "0x57F9A4")]
		public float m_sunPitch;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Color m_sunColor;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float m_sunIntensity;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F9C0", Offset = "0x57F9C0")]
		public Color m_lWSunColor;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float m_lWSunIntensity;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool m_useGlobalIllumination;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F9F8", Offset = "0x57F9F8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57F9F8", Offset = "0x57F9F8")]
		public Color m_hDSunColor;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float m_hDSunIntensity;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float m_hDSunVolumetricMultiplier;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57FA58", Offset = "0x57FA58")]
		public LightShadows m_shadowCastingMode;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FA90", Offset = "0x57FA90")]
		public float m_shadowStrength;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public LightShadowResolution m_sunShadowResolution;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float m_shadowDistance;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57FAA8", Offset = "0x57FAA8")]
		public float m_hDShadowDistance;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GaiaConstants.HDShadowResolution m_hDShadowResolution;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool m_hDContactShadows;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GaiaConstants.ContactShadowsQuality m_hDContactShadowQuality;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public int m_hDContactShadowCustomQuality;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float m_hDContactShadowsDistance;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FAE0", Offset = "0x57FAE0")]
		public float m_hDContactShadowOpacity;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool m_hDMicroShadows;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FAF8", Offset = "0x57FAF8")]
		public float m_hDMicroShadowOpacity;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57FB10", Offset = "0x57FB10")]
		public Cubemap m_skyboxHDRI;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Color m_skyboxTint;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FB48", Offset = "0x57FB48")]
		public float m_skyboxExposure;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FB60", Offset = "0x57FB60")]
		public float m_skyboxRotationOffset;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57FB80", Offset = "0x57FB80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FB80", Offset = "0x57FB80")]
		public float m_sunSize;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FBC4", Offset = "0x57FBC4")]
		public float m_sunConvergence;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FBE0", Offset = "0x57FBE0")]
		public float m_atmosphereThickness;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public Color m_groundColor;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57FBF8", Offset = "0x57FBF8")]
		public GaiaConstants.HDSkyType m_hDSkyType;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public GaiaConstants.HDSkyUpdateMode m_hDSkyUpdateMode;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57FC30", Offset = "0x57FC30")]
		public Cubemap m_hDHDRISkybox;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public float m_hDHDRIExposure;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public float m_hDHDRIMultiplier;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57FC44", Offset = "0x57FC44")]
		public Color m_hDGradientTopColor;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Color m_hDGradientMiddleColor;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Color m_hDGradientBottomColor;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public float m_hDGradientDiffusion;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public float m_hDGradientExposure;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public float m_hDGradientMultiplier;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57FC58", Offset = "0x57FC58")]
		public bool m_hDProceduralEnableSunDisk;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18D")]
		public bool m_hDProceduralIncludeSunInBaking;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public float m_hDProceduralSunSize;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public float m_hDProceduralSunSizeConvergence;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public float m_hDProceduralAtmosphereThickness;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		public Color32 m_hDProceduralSkyTint;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public Color32 m_hDProceduralGroundColor;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public float m_hDProceduralExposure;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public float m_hDProceduralMultiplier;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public bool m_hDPBSEarthPreset;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public float m_hDPBSPlanetaryRadius;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		public bool m_hDPBSSphericalMode;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public float m_hDPBSSeaLevel;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		public Vector3 m_hDPBSPlantetCenterPosition;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public Vector3 m_hDPBSPlanetRotation;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public Cubemap m_hDPBSGroundAlbedoTexture;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public Color m_hDPBSGroundTint;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public Cubemap m_hDPBSGroundEmissionTexture;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public float m_hDPBSGroundEmissionMultiplier;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public Vector3 m_hDPBSSpaceRotation;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public Cubemap m_hDPBSSpaceEmissionTexture;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public float m_hDPBSSpaceEmissionMultiplier;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		public float m_hDPBSAirMaximumAltitude;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public Color m_hDPBSAirOpacity;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public Color m_hDPBSAirAlbedo;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public float m_hDPBSAirDensityBlue;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		public Color m_hDPBSAirTint;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		public float m_hDPBSAerosolMaximumAltitude;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public float m_hDPBSAerosolDensity;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		public Color m_hDPBSAerosolAlbedo;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		public float m_hDPBSAerosolAnisotropy;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public float m_hDPBSColorSaturation;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		public float m_hDPBSAlphaSaturation;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public float m_hDPBSAlphaMultiplier;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		public Color m_hDPBSHorizonTint;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		public float m_hDPBSHorizonZenithShift;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public Color m_hDPBSZenithTint;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public int m_hDPBSNumberOfBounces;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		public GaiaConstants.HDIntensityMode m_hDPBSIntensityMode;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public float m_hDPBSMultiplier;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		public float m_hDPBSExposure;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public bool m_hDPBSIncludeSunInBaking;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57FC6C", Offset = "0x57FC6C")]
		public AmbientMode m_ambientMode;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FCA4", Offset = "0x57FCA4")]
		public float m_ambientIntensity;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		public Color m_skyAmbient;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		public Color m_equatorAmbient;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		public Color m_groundAmbient;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57FCBC", Offset = "0x57FCBC")]
		public GaiaConstants.HDAmbientMode m_hDAmbientMode;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public float m_hDAmbientDiffuseIntensity;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		public float m_hDAmbientSpecularIntensity;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57FCF4", Offset = "0x57FCF4")]
		public int m_skyboxFogHeight;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		public float m_skyboxFogGradient;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public FogMode m_fogMode;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		public Color m_fogColor;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FD2C", Offset = "0x57FD2C")]
		public float m_fogDensity;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public float m_fogStartDistance;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		public float m_fogEndDistance;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57FD44", Offset = "0x57FD44")]
		public GaiaConstants.HDFogType m_hDFogType;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		public GaiaConstants.HDFogType2019_3 m_hDFogType2019_3;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57FD7C", Offset = "0x57FD7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FD7C", Offset = "0x57FD7C")]
		public float m_hDExponentialFogDensity;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		public float m_hDExponentialFogDistance;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		public float m_hDExponentialFogBaseHeight;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FDC0", Offset = "0x57FDC0")]
		public float m_hDExponentialFogHeightAttenuation;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		public float m_hDExponentialFogMaxDistance;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57FDD8", Offset = "0x57FDD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FDD8", Offset = "0x57FDD8")]
		public float m_hDLinearFogDensity;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		public float m_hDLinearFogStart;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		public float m_hDLinearFogEnd;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		public float m_hDLinearFogHeightStart;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		public float m_hDLinearFogHeightEnd;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		public float m_hDLinearFogMaxDistance;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x57FE1C", Offset = "0x57FE1C")]
		public Color m_hDVolumetricFogScatterColor;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
		public float m_hDVolumetricFogDistance;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		public float m_hDVolumetricFogBaseHeight;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
		public float m_hDVolumetricFogMeanHeight;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FE30", Offset = "0x57FE30")]
		public float m_hDVolumetricFogAnisotropy;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FE48", Offset = "0x57FE48")]
		public float m_hDVolumetricFogProbeDimmer;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		public float m_hDVolumetricFogMaxDistance;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		public float m_hDVolumetricFogDepthExtent;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57FE60", Offset = "0x57FE60")]
		public float m_hDVolumetricFogSliceDistribution;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57FE78", Offset = "0x57FE78")]
		public PWSkyAtmosphere m_pwSkyAtmosphereData;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		public PWSkyCloud m_pwSkyCloudData;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		public PWSkySeason m_pwSkySeasonData;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		public PWSkyWind m_pwSkyWindData;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		public PWSkyWeather m_pwSkyWeatherData;

		[Token(Token = "0x1700015E")]
		public PostProcessProfile PostProcessProfileBuiltIn
		{
			[Token(Token = "0x6000C8A")]
			[Address(RVA = "0x82A7EC", Offset = "0x82A7EC", VA = "0x82A7EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0x82A860", Offset = "0x82A860", VA = "0x82A860")]
			set
			{
			}
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x82A864", Offset = "0x82A864", VA = "0x82A864")]
		private void FixWarnings()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x82A910", Offset = "0x82A910", VA = "0x82A910")]
		public GaiaLightingProfileValues()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	[ExecuteInEditMode]
	public class GaiaPostProcessBiome : MonoBehaviour
	{
		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public string PostProcessingFileName;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57FEC0", Offset = "0x57FEC0")]
		public bool m_removeThisAwake;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PostProcessProfile m_postProcessProfile;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PostProcessVolume m_postProcessVolume;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_blendDistance;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_priority;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57FEF8", Offset = "0x57FEF8")]
		public BoxCollider m_triggerCollider;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 m_triggerSize;

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x805650", Offset = "0x805650", VA = "0x805650")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x8056D4", Offset = "0x8056D4", VA = "0x8056D4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x80589C", Offset = "0x80589C", VA = "0x80589C")]
		public GaiaPostProcessBiome()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public static class GaiaShaderID
	{
		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int m_cloudFade;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int m_cloudBrightness;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int m_cloudAmbientColor;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly int m_SunDirection;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int m_SunColor;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly int m_cloudDomeBrightness;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly int m_cloudSunDirection;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly int m_skySunDirection;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly int m_cloudOpacity;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static readonly int m_cloudDomeFogColor;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly int m_cloudDomeSunColor;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static readonly int m_cloudDomeFinalCloudColor;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly int m_cloudDomeFinalSkyColor;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static readonly int m_cloudHeightDensity;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly int m_cloudHeightThickness;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static readonly int m_cloudSpeed;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly int m_pwSkyFogHeight;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static readonly int m_pwSkyFogGradient;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly string m_cloudShaderName;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly string m_pwSkySkyboxShader;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly int m_rainIntensity;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public static readonly int m_weatherMainColor;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly int m_weatherColor;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public static readonly int m_waterDepthRamp;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static readonly int m_waterSmoothness;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public static readonly int m_waterFoamTex;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static readonly int m_waterFoamTexTiling;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public static readonly int m_waterFoamRampAlpha;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static readonly int m_waterFoamDepth;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public static readonly int m_waterTransparentDepth;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static readonly int m_waterReflectionDistortion;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public static readonly int m_waterReflectionStrength;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static readonly int m_waterWaveShoreMove;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public static readonly int m_waterMetallic;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static readonly string m_waterGrabPass;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static readonly int m_underwaterColor;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public static readonly int InvViewProjection;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static readonly int CameraRoll;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public static readonly int _normalLayer0_ID;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static readonly int _normalLayer1_ID;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public static readonly int _normalLayer2_ID;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public static readonly int _normalLayer0Scale_ID;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public static readonly int _normalLayer1Scale_ID;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public static readonly int _normalLayer2Scale_ID;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public static readonly int _normalSpeed_ID;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public static readonly int _normalFadeStart_ID;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public static readonly int _normalFadeDistance_ID;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public static readonly int _normalTile_ID;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public static readonly int _waveShoreClamp_ID;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public static readonly int _waveLength_ID;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public static readonly int _waveSteepness_ID;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public static readonly int _waveSpeed_ID;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public static readonly int _waveDirection_ID;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public static readonly int _edgeWaterColor_ID;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public static readonly int _edgeWaterDist_ID;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public static readonly string _cbufName;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public static readonly int _grabID;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public static readonly int m_foamBubblesTexture;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public static readonly int m_foamBubblesScale;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public static readonly int m_foamBubblesTiling;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public static readonly int m_foamStrength;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public static readonly int m_foamBubblesStrength;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public static readonly int m_foamEdge;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public static readonly int m_foamMoveSpeed;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public static readonly string m_cameraOpaqueTexture;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public static readonly string m_refractionOn;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public static readonly string m_refractionOff;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public static readonly int m_blendSRC;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public static readonly int m_blendDST;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public static readonly int m_globalLightDirection;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public static readonly int m_globalLightColor;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public static readonly int m_globalLightIntensity;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public static readonly int m_globalLightSpecColor;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public static readonly int m_globalWind;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public static readonly int m_globalReflectionTexture;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public static readonly int m_globalAmbientColor;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public static readonly int m_hdrpZTest;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public static readonly string m_unitySkyboxShader;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public static readonly string m_unitySkyboxShaderHDRI;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public static readonly string m_unitySkyboxShaderHDRIDefault;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public static readonly int m_unitySkyboxGroundColor;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public static readonly int m_unitySkyboxAtmosphereThickness;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public static readonly int m_unitySkyboxSunSize;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public static readonly int m_unitySkyboxSunSizeConvergence;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public static readonly int m_unitySkyboxTint;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public static readonly int m_unitySkyboxTintHDRI;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public static readonly int m_unitySkyboxCubemap;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public static readonly int m_unitySkyboxExposure;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public static readonly int m_unitySkyboxRotation;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public static readonly int m_unitySkyboxSunDisk;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public static readonly string m_unitySunQualityKeyword;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public static readonly string m_checkNameSpace;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public static readonly string m_checkCloudHeight;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public static readonly string BuiltInWaterShader;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public static readonly string HDRPWaterShader;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public static readonly string HDRPWaterShaderFile;

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x9F5CCC", Offset = "0x9F5CCC", VA = "0x9F5CCC")]
		static GaiaShaderID()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class PWSkyPostProcessingManager : MonoBehaviour
	{
		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xFC52C4", Offset = "0xFC52C4", VA = "0xFC52C4")]
		public void DisableWeatherPostFX()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xFC5354", Offset = "0xFC5354", VA = "0xFC5354")]
		public void EnableWeatherPostFX()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xFC53E8", Offset = "0xFC53E8", VA = "0xFC53E8")]
		public PWSkyPostProcessingManager()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public static class ReflectionProbeUtils
	{
		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xB98380", Offset = "0xB98380", VA = "0xB98380")]
		public static ReflectionProbe CreateReflectionProbe(Vector3 position, Vector3 size, Terrain terrain, ReflectionProbeData reflectionProbeData, bool seaLevelActive, float seaLevel, Transform parentTransform, bool isHDRP, bool probeCulling = false)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20001A7")]
	public class BakedMaskCacheEntry
	{
		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fileName;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string assetPath;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string fullPath;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTexture texture;

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x88B008", Offset = "0x88B008", VA = "0x88B008")]
		public BakedMaskCacheEntry()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A8")]
	public class BakedMaskCache : UnityEngine.Object
	{
		[Token(Token = "0x2000540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572C38", Offset = "0x572C38")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string worldBiomeMaskGUID;

			[Token(Token = "0x6002284")]
			[Address(RVA = "0x91AF78", Offset = "0x91AF78", VA = "0x91AF78")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002285")]
			[Address(RVA = "0x91AF80", Offset = "0x91AF80", VA = "0x91AF80")]
			internal bool <BakeTerrainWorldBiomeMask>b__0(SpawnRule x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000541")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572C48", Offset = "0x572C48")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4002EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int treePrototypeId;

			[Token(Token = "0x6002286")]
			[Address(RVA = "0x91AFA4", Offset = "0x91AFA4", VA = "0x91AFA4")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6002287")]
			[Address(RVA = "0x91AFAC", Offset = "0x91AFAC", VA = "0x91AFAC")]
			internal bool <BakeTerrainTreeCollisions>b__0(TreeInstance x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000542")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572C58", Offset = "0x572C58")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4002EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string spawnRuleGUID;

			[Token(Token = "0x6002288")]
			[Address(RVA = "0x91AFC0", Offset = "0x91AFC0", VA = "0x91AFC0")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6002289")]
			[Address(RVA = "0x91AFC8", Offset = "0x91AFC8", VA = "0x91AFC8")]
			internal bool <BakeAllTreeCollisions>b__0(SpawnRule x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000543")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572C68", Offset = "0x572C68")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x4002EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string searchString;

			[Token(Token = "0x600228A")]
			[Address(RVA = "0x91AFEC", Offset = "0x91AFEC", VA = "0x91AFEC")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x600228B")]
			[Address(RVA = "0x91AFF4", Offset = "0x91AFF4", VA = "0x91AFF4")]
			internal bool <SetDirty>b__0(BakedMaskCacheEntry x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_autoSpawnRunning;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GaiaSession m_gaiaSession;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GaiaSessionManager m_gaiaSessionManager;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Terrain m_worldMapTerrain;

		[Token(Token = "0x1700015F")]
		public BakedMaskCacheEntry[] m_cacheEntries
		{
			[Token(Token = "0x6000C97")]
			[Address(RVA = "0x887494", Offset = "0x887494", VA = "0x887494")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C98")]
			[Address(RVA = "0x88753C", Offset = "0x88753C", VA = "0x88753C")]
			set
			{
			}
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x8875F0", Offset = "0x8875F0", VA = "0x8875F0")]
		public RenderTexture BakeTerrainTagCollisions(Terrain terrain, string tag, float radius)
		{
			return null;
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x8879D4", Offset = "0x8879D4", VA = "0x8879D4")]
		private Vector3 GetCenterAverage(Transform transform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x8880C0", Offset = "0x8880C0", VA = "0x8880C0")]
		public void WriteCacheToDisk()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x8880C4", Offset = "0x8880C4", VA = "0x8880C4")]
		public RenderTexture BakeTerrainWorldBiomeMask(Terrain terrain, string worldBiomeMaskGUID)
		{
			return null;
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x8891E4", Offset = "0x8891E4", VA = "0x8891E4")]
		public RenderTexture BakeLayerGameObjectCollisions(Terrain terrain, LayerMask layerMask, float distance)
		{
			return null;
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x889250", Offset = "0x889250", VA = "0x889250")]
		private RenderTexture OrthoLayerBake(Terrain terrain, LayerMask layerMask, float distance)
		{
			return null;
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x889B84", Offset = "0x889B84", VA = "0x889B84")]
		private RenderTexture BakeLayerTreeCollisions(Terrain terrain, LayerMask inputlayerMask, float growShrinkDistance)
		{
			return null;
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x88A2C4", Offset = "0x88A2C4", VA = "0x88A2C4")]
		public RenderTexture BakeTerrainTreeCollisions(Terrain terrain, int treePrototypeId, string spawnRuleGUID, float boundsRadius)
		{
			return null;
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x887A9C", Offset = "0x887A9C", VA = "0x887A9C")]
		private float WorldDistance2UVDistance(Terrain terrain, float distance)
		{
			return default(float);
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x887D64", Offset = "0x887D64", VA = "0x887D64")]
		private RenderTexture BakeVectorArrayForTerrain(Vector4[] posAndRad, Terrain terrain, string filename)
		{
			return null;
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x889A20", Offset = "0x889A20", VA = "0x889A20")]
		private RenderTextureDescriptor GetDefaultCollisionMaskRTDescriptor(Terrain terrain)
		{
			return default(RenderTextureDescriptor);
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x88A510", Offset = "0x88A510", VA = "0x88A510")]
		private string GetTreeCollisionMaskFileName(Terrain terrain, string spawnRuleGUID, float radius)
		{
			return null;
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x88A750", Offset = "0x88A750", VA = "0x88A750")]
		private string GetTreeCollisionMaskSearchString(string spawnRuleGUID)
		{
			return null;
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x8897BC", Offset = "0x8897BC", VA = "0x8897BC")]
		private string GetLayerGameObjectCollisionMaskFileName(Terrain terrain, LayerMask layerMask, float distance)
		{
			return null;
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x88A060", Offset = "0x88A060", VA = "0x88A060")]
		private string GetLayerTreeCollisionMaskFileName(Terrain terrain, LayerMask layerMask, float distance)
		{
			return null;
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x887B20", Offset = "0x887B20", VA = "0x887B20")]
		private string GetTagCollisionMaskFileName(Terrain terrain, string m_tag, float radius)
		{
			return null;
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x88A814", Offset = "0x88A814", VA = "0x88A814")]
		private LayerMask GetLayerMaskFromFileName(string fileName)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x88AB68", Offset = "0x88AB68", VA = "0x88AB68")]
		private string GetTagCollisionMaskSearchString(string tag)
		{
			return null;
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x888DDC", Offset = "0x888DDC", VA = "0x888DDC")]
		private string GetWorldBiomeMaskFilename(Terrain terrain, string GUID)
		{
			return null;
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x88AC1C", Offset = "0x88AC1C", VA = "0x88AC1C")]
		private string GetWorldBiomeMaskSearchString(string GUID)
		{
			return null;
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x888FB8", Offset = "0x888FB8", VA = "0x888FB8")]
		private void SaveBakedMaskInCache(RenderTexture renderTexture, Terrain terrain, string fileName)
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x88AE50", Offset = "0x88AE50", VA = "0x88AE50")]
		private void AddNewCollisionMaskCacheEntry(RenderTexture texture, Terrain terrain, string fileName)
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x88ACD0", Offset = "0x88ACD0", VA = "0x88ACD0")]
		private void WriteCacheEntry(BakedMaskCacheEntry entry, RenderTexture texture, Terrain terrain, string fileName)
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x88B010", Offset = "0x88B010", VA = "0x88B010")]
		public RenderTexture LoadBakedMask(Terrain terrain, BakedMaskTypeInternal type, [Optional] CollisionMask collisionMask, string worldMaskGUID = "", int treeID = 0)
		{
			return null;
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x88B3A4", Offset = "0x88B3A4", VA = "0x88B3A4")]
		public void BakeAllLayerGameObjectCollisions(LayerMask layerMask, float growShrinkDistance)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x88B448", Offset = "0x88B448", VA = "0x88B448")]
		public void BakeAllLayerTreeCollisions(LayerMask layerMask, float growShrinkDistance)
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x88B4EC", Offset = "0x88B4EC", VA = "0x88B4EC")]
		public void BakeAllTreeCollisions(string spawnRuleGUID, float radius)
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x88B69C", Offset = "0x88B69C", VA = "0x88B69C")]
		public void BakeAllTagCollisions(string m_tag, float m_tagRadius)
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x88B73C", Offset = "0x88B73C", VA = "0x88B73C")]
		public void ClearCache()
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x88B740", Offset = "0x88B740", VA = "0x88B740")]
		public void ClearCacheForSpawn()
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x88B744", Offset = "0x88B744", VA = "0x88B744")]
		public void SetWorldBiomeMaskDirty(string worldBiomeMaskGUID)
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x88B9B4", Offset = "0x88B9B4", VA = "0x88B9B4")]
		public void SetTreeDirty(string spawnRuleGUID, int layerID)
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x88BB84", Offset = "0x88BB84", VA = "0x88BB84")]
		public void SetGameObjectDirty(GameObject gameObject)
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x88B9EC", Offset = "0x88B9EC", VA = "0x88B9EC")]
		private void SetLayerIDDirty(int layerID)
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x88B76C", Offset = "0x88B76C", VA = "0x88B76C")]
		private void SetDirty(string searchString)
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x88BC2C", Offset = "0x88BC2C", VA = "0x88BC2C")]
		public BakedMaskCache()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public enum BakedMaskType
	{
		[Token(Token = "0x40012E6")]
		LayerGameObject = 2,
		[Token(Token = "0x40012E7")]
		LayerTree = 3,
		[Token(Token = "0x40012E8")]
		RadiusTag = 1,
		[Token(Token = "0x40012E9")]
		RadiusTree = 0
	}
	[Token(Token = "0x20001AA")]
	public enum BakedMaskTypeInternal
	{
		[Token(Token = "0x40012EB")]
		RadiusTree,
		[Token(Token = "0x40012EC")]
		RadiusTag,
		[Token(Token = "0x40012ED")]
		WorldBiomeMask,
		[Token(Token = "0x40012EE")]
		LayerGameObject,
		[Token(Token = "0x40012EF")]
		LayerTree
	}
	[Serializable]
	[Token(Token = "0x20001AB")]
	public class CollisionMask
	{
		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_active;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool m_invert;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public BakedMaskType m_type;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_treeSpawnRuleGUID;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SpawnRule[] m_allTreeSpawnRules;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Spawner[] m_allTreeSpawners;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string[] m_allTreeSpawnRuleNames;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static int[] m_allTreeSpawnRuleIndices;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_tag;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_Radius;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_growShrinkDistance;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayerMask m_layerMask;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] m_layerMaskLayerNames;

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xA0BD58", Offset = "0xA0BD58", VA = "0xA0BD58")]
		public CollisionMask()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AC")]
	public class GaiaNoiseSettings
	{
		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 m_translation;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 m_rotation;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 m_scale;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string m_noiseTypeName;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string m_noiseTypeParams;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_fractalTypeName;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string m_fractalTypeParams;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool m_warpEnabled;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_warpIterations;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float m_warpStrength;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector4 m_warpOffset;

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x8037C0", Offset = "0x8037C0", VA = "0x8037C0")]
		public GaiaNoiseSettings()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public enum ImageMaskOperation
	{
		[Token(Token = "0x4001309")]
		CollisionMask = 5,
		[Token(Token = "0x400130A")]
		DistanceMask = 1,
		[Token(Token = "0x400130B")]
		GlobalSpawnerMaskStack = 13,
		[Token(Token = "0x400130C")]
		GrowAndShrink = 12,
		[Token(Token = "0x400130D")]
		HeightMask = 2,
		[Token(Token = "0x400130E")]
		ImageMask = 0,
		[Token(Token = "0x400130F")]
		NoiseMask = 4,
		[Token(Token = "0x4001310")]
		SlopeMask = 3,
		[Token(Token = "0x4001311")]
		Smooth = 8,
		[Token(Token = "0x4001312")]
		StrengthTransform = 6,
		[Token(Token = "0x4001313")]
		TerrainTexture = 9,
		[Token(Token = "0x4001314")]
		WorldBiomeMask = 11,
		[Token(Token = "0x4001315")]
		PROConcaveConvex = 10,
		[Token(Token = "0x4001316")]
		PROHydraulicErosion = 7
	}
	[Token(Token = "0x20001AE")]
	public enum ImageMaskOperationReduced
	{
		[Token(Token = "0x4001318")]
		CollisionMask = 5,
		[Token(Token = "0x4001319")]
		DistanceMask = 1,
		[Token(Token = "0x400131A")]
		GrowAndShrink = 12,
		[Token(Token = "0x400131B")]
		HeightMask = 2,
		[Token(Token = "0x400131C")]
		ImageMask = 0,
		[Token(Token = "0x400131D")]
		NoiseMask = 4,
		[Token(Token = "0x400131E")]
		SlopeMask = 3,
		[Token(Token = "0x400131F")]
		Smooth = 8,
		[Token(Token = "0x4001320")]
		StrengthTransform = 6,
		[Token(Token = "0x4001321")]
		TerrainTexture = 9,
		[Token(Token = "0x4001322")]
		WorldBiomeMask = 11,
		[Token(Token = "0x4001323")]
		PROConcaveConvex = 10,
		[Token(Token = "0x4001324")]
		PROHydraulicErosion = 7
	}
	[Token(Token = "0x20001AF")]
	public enum ImageMaskBlendMode
	{
		[Token(Token = "0x4001326")]
		Multiply,
		[Token(Token = "0x4001327")]
		GreaterThan,
		[Token(Token = "0x4001328")]
		SmallerThan,
		[Token(Token = "0x4001329")]
		Add,
		[Token(Token = "0x400132A")]
		Subtract
	}
	[Token(Token = "0x20001B0")]
	public enum ImageMaskDistanceMaskAxes
	{
		[Token(Token = "0x400132C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x57FF30", Offset = "0x57FF30")]
		XZCircle = 0,
		[Token(Token = "0x400132D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x57FF68", Offset = "0x57FF68")]
		XZSquare = 3,
		[Token(Token = "0x400132E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x57FFA0", Offset = "0x57FFA0")]
		X = 1,
		[Token(Token = "0x400132F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x57FFD8", Offset = "0x57FFD8")]
		Z = 2
	}
	[Token(Token = "0x20001B1")]
	public enum ImageMaskInfluence
	{
		[Token(Token = "0x4001331")]
		Local,
		[Token(Token = "0x4001332")]
		Global
	}
	[Token(Token = "0x20001B2")]
	public enum ImageMaskLocation
	{
		[Token(Token = "0x4001334")]
		SpawnerGlobal,
		[Token(Token = "0x4001335")]
		SpawnRule,
		[Token(Token = "0x4001336")]
		Stamper,
		[Token(Token = "0x4001337")]
		BiomeController,
		[Token(Token = "0x4001338")]
		MaskMapExport
	}
	[Token(Token = "0x20001B3")]
	public enum ImageMaskSpace
	{
		[Token(Token = "0x400133A")]
		Local,
		[Token(Token = "0x400133B")]
		World
	}
	[Token(Token = "0x20001B4")]
	public enum HeightMaskType
	{
		[Token(Token = "0x400133D")]
		WorldSpace,
		[Token(Token = "0x400133E")]
		RelativeToSeaLevel
	}
	[Token(Token = "0x20001B5")]
	public enum HeightMaskUnit
	{
		[Token(Token = "0x4001340")]
		Meter,
		[Token(Token = "0x4001341")]
		Percent
	}
	[Serializable]
	[Token(Token = "0x20001B6")]
	public class ImageMask
	{
		[Token(Token = "0x2000544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572C78", Offset = "0x572C78")]
		private sealed class <>c__DisplayClass121_0
		{
			[Token(Token = "0x4002EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ImageMask mask;

			[Token(Token = "0x600228C")]
			[Address(RVA = "0x92166C", Offset = "0x92166C", VA = "0x92166C")]
			public <>c__DisplayClass121_0()
			{
			}

			[Token(Token = "0x600228D")]
			[Address(RVA = "0x921674", Offset = "0x921674", VA = "0x921674")]
			internal bool <CheckMaskStackForInvalidTextureRules>b__0(SpawnRule x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000545")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572C88", Offset = "0x572C88")]
		private sealed class <>c
		{
			[Token(Token = "0x4002EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int, int, int> <>9__122_0;

			[Token(Token = "0x4002EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<int, int, int> <>9__122_1;

			[Token(Token = "0x600228F")]
			[Address(RVA = "0x921654", Offset = "0x921654", VA = "0x921654")]
			public <>c()
			{
			}

			[Token(Token = "0x6002290")]
			[Address(RVA = "0x92165C", Offset = "0x92165C", VA = "0x92165C")]
			internal int <RefreshSpawnRuleGUIDs>b__122_0(int tr, int ti)
			{
				return default(int);
			}

			[Token(Token = "0x6002291")]
			[Address(RVA = "0x921664", Offset = "0x921664", VA = "0x921664")]
			internal int <RefreshSpawnRuleGUIDs>b__122_1(int tr, int ti)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_active;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool m_invert;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool m_hasErrors;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ImageMaskInfluence m_influence;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ImageMaskOperation m_operation;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ImageMaskBlendMode m_blendMode;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ImageMaskLocation m_imageMaskLocation;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_strength;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_seaLevel;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_maxWorldHeight;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_minWorldHeight;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_xOffSet;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_zOffSet;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_xOffSetScalar;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_zOffSetScalar;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_xScale;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_zScale;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_rotationDegrees;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool m_tiling;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public ImageMaskSpace m_imageMaskSpace;

		[NonSerialized]
		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GaiaMultiTerrainOperation m_multiTerrainOperation;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Texture2D m_imageMaskTexture;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string m_imageMaskTextureGUID;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GaiaConstants.ImageMaskFilterMode m_imageMaskFilterMode;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Color m_imageMaskColorSelectionColor;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float m_imageMaskColorSelectionAccuracy;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AnimationCurve m_distanceMaskCurve;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AnimationCurve m_heightMaskCurve;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AnimationCurve m_strengthTransformCurve;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public HeightMaskType m_heightMaskType;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private HeightMaskUnit m_heightMaskUnit;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float m_relativeHeightMin;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float m_relativeHeightMax;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float m_absoluteHeightMin;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float m_absoluteHeightMax;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float m_seaLevelRelativeHeightMin;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float m_seaLevelRelativeHeightMax;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool tree1active;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool tree2active;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public AnimationCurve m_slopeMaskCurve;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float m_slopeMin;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float m_slopeMax;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public ImageMaskDistanceMaskAxes m_distanceMaskAxes;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GaiaNoiseSettings m_gaiaNoiseSettings;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool m_ShowNoiseTransformSettings;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		public bool m_ShowNoisePreviewTexture;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
		public bool m_noisePreviewTextureLocked;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEB")]
		public bool m_ShowNoiseTypeSettings;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public bool m_scaleNoiseToTerrainSize;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float m_distanceMaskSquareRoundness;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Texture2D m_distanceMaskCurveTexture;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Texture2D m_heightMaskCurveTexture;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Texture2D m_slopeMaskCurveTexture;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Texture2D m_strengthTransformCurveTexture;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public bool m_collisionMaskExpanded;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public CollisionMask[] m_collisionMasks;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public GaiaConstants.ErosionMaskOutput m_erosionMaskOutput;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float m_erosionSimScale;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public float m_erosionHydroTimeDelta;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public int m_erosionHydroIterations;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public float m_erosionThermalTimeDelta;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public int m_erosionThermalIterations;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public int m_erosionThermalReposeAngle;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public float m_erosionPrecipRate;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public float m_erosionEvaporationRate;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public float m_erosionFlowRate;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public float m_erosionSedimentCapacity;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public float m_erosionSedimentDepositRate;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public float m_erosionSedimentDissolveRate;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public float m_erosionRiverBankDepositRate;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public float m_erosionRiverBankDissolveRate;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public float m_erosionRiverBedDepositRate;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public float m_erosionRiverBedDissolveRate;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public bool m_erosionShowAdvancedUI;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
		public bool m_erosionShowThermalUI;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16E")]
		public bool m_erosionShowWaterUI;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16F")]
		public bool m_erosionShowSedimentUI;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public bool m_erosionShowRiverBankUI;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public float m_smoothVerticality;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public float m_smoothBlurRadius;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public string m_textureMaskSpawnRuleGUID;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SpawnRule[] m_allTextureSpawnRules;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Spawner[] m_allTextureSpawners;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string[] m_allTextureSpawnRuleNames;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static int[] m_allTextureSpawnRuleIndices;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public float m_concavity;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public float m_concavityFeatureSize;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private ComputeShader m_concavityShader;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public bool m_foldedOut;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public string m_selectedWorldBiomeMaskGUID;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public float m_growAndShrinkValue;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public RenderTexture m_globalSpawnerMaskStackRT;

		[Token(Token = "0x17000160")]
		public Texture2D ImageMaskTexture
		{
			[Token(Token = "0x6000CBF")]
			[Address(RVA = "0xA65548", Offset = "0xA65548", VA = "0xA65548")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CC0")]
			[Address(RVA = "0xA655CC", Offset = "0xA655CC", VA = "0xA655CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000161")]
		public HeightMaskUnit HeightMaskUnit
		{
			[Token(Token = "0x6000CC1")]
			[Address(RVA = "0xA65698", Offset = "0xA65698", VA = "0xA65698")]
			get
			{
				return default(HeightMaskUnit);
			}
			[Token(Token = "0x6000CC2")]
			[Address(RVA = "0xA656A0", Offset = "0xA656A0", VA = "0xA656A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000162")]
		private Texture2D distanceMaskCurveTexture
		{
			[Token(Token = "0x6000CC3")]
			[Address(RVA = "0xA65714", Offset = "0xA65714", VA = "0xA65714")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		private Texture2D heightMaskCurveTexture
		{
			[Token(Token = "0x6000CC4")]
			[Address(RVA = "0xA65880", Offset = "0xA65880", VA = "0xA65880")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000164")]
		private Texture2D slopeMaskCurveTexture
		{
			[Token(Token = "0x6000CC5")]
			[Address(RVA = "0xA65888", Offset = "0xA65888", VA = "0xA65888")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		private Texture2D strengthTransformCurveTexture
		{
			[Token(Token = "0x6000CC6")]
			[Address(RVA = "0xA65890", Offset = "0xA65890", VA = "0xA65890")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xA65898", Offset = "0xA65898", VA = "0xA65898")]
		public void FreeTextureReferences()
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xA658A0", Offset = "0xA658A0", VA = "0xA658A0")]
		public void SetTextureGUID(string GUID)
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xA658A8", Offset = "0xA658A8", VA = "0xA658A8")]
		public void CheckHeightMaskMigration()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xA6597C", Offset = "0xA6597C", VA = "0xA6597C")]
		public RenderTexture Apply(RenderTexture inputTexture, RenderTexture outputTexture)
		{
			return null;
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xA659A4", Offset = "0xA659A4", VA = "0xA659A4")]
		public void ClearEroder()
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xA659A8", Offset = "0xA659A8", VA = "0xA659A8")]
		private float CalculateScalarHeightRelativeToSeaLevel(float heightValue, float scalarSeaLevel)
		{
			return default(float);
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xA65A18", Offset = "0xA65A18", VA = "0xA65A18")]
		public static void InitNoiseMask(ImageMask imageMask)
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xA65A1C", Offset = "0xA65A1C", VA = "0xA65A1C")]
		public static AnimationCurve NewAnimCurveStraightUpwards(float max = 1f)
		{
			return null;
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xA65C28", Offset = "0xA65C28", VA = "0xA65C28")]
		public static AnimationCurve NewAnimCurveBaseTerrainGenerator()
		{
			return null;
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xA65EE4", Offset = "0xA65EE4", VA = "0xA65EE4")]
		private bool IsDefaultStrenghtCurve()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xA66148", Offset = "0xA66148", VA = "0xA66148")]
		public static AnimationCurve NewAnimCurveWaterBorder()
		{
			return null;
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xA66354", Offset = "0xA66354", VA = "0xA66354")]
		public static AnimationCurve NewAnimCurveMountainBorderDistance()
		{
			return null;
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xA66564", Offset = "0xA66564", VA = "0xA66564")]
		public static AnimationCurve NewAnimCurveMountainBorderStrength()
		{
			return null;
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xA6683C", Offset = "0xA6683C", VA = "0xA6683C")]
		public static AnimationCurve NewAnimCurveDefaultNoise(float distanceFromCenter = 0.2f)
		{
			return null;
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xA66BAC", Offset = "0xA66BAC", VA = "0xA66BAC")]
		private Material GetCurrentFXFilterMaterial()
		{
			return null;
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xA66D18", Offset = "0xA66D18", VA = "0xA66D18")]
		public static void CheckMaskStackForInvalidTextureRules(string objectDescription, string objectName, ImageMask[] maskStack)
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xA6709C", Offset = "0xA6709C", VA = "0xA6709C")]
		public static void RefreshSpawnRuleGUIDs()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xA67878", Offset = "0xA67878", VA = "0xA67878")]
		public static ImageMask Clone(ImageMask source)
		{
			return null;
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xA67CFC", Offset = "0xA67CFC", VA = "0xA67CFC")]
		public void TryRefreshCollisionMask()
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xA678CC", Offset = "0xA678CC", VA = "0xA678CC")]
		public ImageMask()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class ImageProcessing
	{
		[Token(Token = "0x2000546")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572C98", Offset = "0x572C98")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ImageMaskInfluence influence;

			[Token(Token = "0x6002292")]
			[Address(RVA = "0x9216A0", Offset = "0x9216A0", VA = "0x9216A0")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002293")]
			[Address(RVA = "0x9216A8", Offset = "0x9216A8", VA = "0x9216A8")]
			internal bool <ApplyMaskStack>b__0(ImageMask x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xA67D9C", Offset = "0xA67D9C", VA = "0xA67D9C")]
		public static RenderTexture ApplyMaskStack(RenderTexture inputTexture, RenderTexture outputTexture, ImageMask[] maskStack, ImageMaskInfluence influence)
		{
			return null;
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xA67FBC", Offset = "0xA67FBC", VA = "0xA67FBC")]
		public static string WriteRenderTexture(string path, RenderTexture sourceRenderTexture, GaiaConstants.ImageFileType imageFileType = GaiaConstants.ImageFileType.Exr, TextureFormat textureFormat = TextureFormat.RGBAFloat, int jpgQuality = 75, bool redChannelOnly = false)
		{
			return null;
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xA682E0", Offset = "0xA682E0", VA = "0xA682E0")]
		public static void WriteTexture2D(string path, Texture2D sourceTexture)
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xA68324", Offset = "0xA68324", VA = "0xA68324")]
		public static void BakeMaskStack(ImageMask[] maskStack, Terrain terrain, Transform transform, float range, int resolution, string path)
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xA6571C", Offset = "0xA6571C", VA = "0xA6571C")]
		public static Texture2D CreateMaskCurveTexture(ref Texture2D inputCurveTexture)
		{
			return null;
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xA685EC", Offset = "0xA685EC", VA = "0xA685EC")]
		public static void BakeCurveTexture(AnimationCurve animationCurve, Texture2D bakedTexture)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xA68728", Offset = "0xA68728", VA = "0xA68728")]
		public ImageProcessing()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B8")]
	public class MaskMapChannelSettings
	{
		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_channelIsFoldedOut;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool m_channelIsActive;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_channelName;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color m_visualisationColor;

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xA409B0", Offset = "0xA409B0", VA = "0xA409B0")]
		public MaskMapChannelSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B9")]
	public class MaskMapExportSettings : ScriptableObject, ISerializationCallbackReceiver
	{
		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MaskMapChannelSettings m_redChannelSettings;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaskMapChannelSettings m_greenChannelSettings;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MaskMapChannelSettings m_blueChannelSettings;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MaskMapChannelSettings m_alphaChannelSettings;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_range;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string m_exportDirectory;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_exportFileName;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MaskMapExportMultiTerrainOption m_multiTerrainOption;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int m_combinedTextureResolution;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool m_addTerrainNameToFileName;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public GaiaConstants.ImageFileType m_exportFileType;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int m_exportJpgQuality;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string lastSavePath;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float m_x;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float m_y;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float m_z;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ImageMask[] red_imageMasks;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ImageMask[] green_imageMasks;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ImageMask[] blue_imageMasks;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ImageMask[] alpha_imageMasks;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool m_readWriteEnabled;

		[Token(Token = "0x17000166")]
		public ImageMask[] m_red_imageMasks
		{
			[Token(Token = "0x6000CE3")]
			[Address(RVA = "0xA40E3C", Offset = "0xA40E3C", VA = "0xA40E3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0xA445C8", Offset = "0xA445C8", VA = "0xA445C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000167")]
		public ImageMask[] m_green_imageMasks
		{
			[Token(Token = "0x6000CE5")]
			[Address(RVA = "0xA40E98", Offset = "0xA40E98", VA = "0xA40E98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0xA445D0", Offset = "0xA445D0", VA = "0xA445D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public ImageMask[] m_blue_imageMasks
		{
			[Token(Token = "0x6000CE7")]
			[Address(RVA = "0xA40EF4", Offset = "0xA40EF4", VA = "0xA40EF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0xA445D8", Offset = "0xA445D8", VA = "0xA445D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public ImageMask[] m_alpha_imageMasks
		{
			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0xA40F50", Offset = "0xA40F50", VA = "0xA40F50")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0xA445E0", Offset = "0xA445E0", VA = "0xA445E0")]
			set
			{
			}
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xA412D8", Offset = "0xA412D8", VA = "0xA412D8")]
		public void ClearImageMaskTextures()
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xA445E8", Offset = "0xA445E8", VA = "0xA445E8", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xA445EC", Offset = "0xA445EC", VA = "0xA445EC", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xA445F0", Offset = "0xA445F0", VA = "0xA445F0")]
		public MaskMapExportSettings()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public enum MultiTerrainOperationType
	{
		[Token(Token = "0x40013B8")]
		Heightmap,
		[Token(Token = "0x40013B9")]
		Texture,
		[Token(Token = "0x40013BA")]
		Tree,
		[Token(Token = "0x40013BB")]
		TerrainDetail,
		[Token(Token = "0x40013BC")]
		GameObject,
		[Token(Token = "0x40013BD")]
		BakedMask,
		[Token(Token = "0x40013BE")]
		AffectedTerrains
	}
	[Token(Token = "0x20001BB")]
	public struct TerrainOperation
	{
		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public MultiTerrainOperationType operationType;
	}
	[Token(Token = "0x20001BC")]
	public class AffectedPixels
	{
		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2Int pixelCoordinate;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectInt affectedLocalPixels;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectInt affectedOperationPixels;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int splatMapID;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int channelID;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool simulationPositive;

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x87DA70", Offset = "0x87DA70", VA = "0x87DA70")]
		public bool IsAffected()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x87DABC", Offset = "0x87DABC", VA = "0x87DABC")]
		public AffectedPixels()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class GaiaMultiTerrainOperation
	{
		[Serializable]
		[Token(Token = "0x2000547")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572CA8", Offset = "0x572CA8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<TerrainOperation, AffectedPixels>, bool> <>9__40_0;

			[Token(Token = "0x4002EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<TerrainOperation, AffectedPixels>, bool> <>9__43_0;

			[Token(Token = "0x4002EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<KeyValuePair<TerrainOperation, AffectedPixels>, bool> <>9__44_0;

			[Token(Token = "0x4002EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<KeyValuePair<TerrainOperation, AffectedPixels>, bool> <>9__45_0;

			[Token(Token = "0x4002EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<KeyValuePair<TerrainOperation, AffectedPixels>, bool> <>9__46_1;

			[Token(Token = "0x4002EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<KeyValuePair<TerrainOperation, AffectedPixels>, bool> <>9__49_0;

			[Token(Token = "0x4002EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<KeyValuePair<TerrainOperation, AffectedPixels>, bool> <>9__52_0;

			[Token(Token = "0x4002EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<KeyValuePair<TerrainOperation, AffectedPixels>, bool> <>9__60_0;

			[Token(Token = "0x4002EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<CollisionMask, bool> <>9__60_1;

			[Token(Token = "0x4002EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Func<KeyValuePair<TerrainOperation, AffectedPixels>, bool> <>9__61_0;

			[Token(Token = "0x6002295")]
			[Address(RVA = "0x91E41C", Offset = "0x91E41C", VA = "0x91E41C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002296")]
			[Address(RVA = "0x91E424", Offset = "0x91E424", VA = "0x91E424")]
			internal bool <GetHeightmap>b__40_0(KeyValuePair<TerrainOperation, AffectedPixels> x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002297")]
			[Address(RVA = "0x91E46C", Offset = "0x91E46C", VA = "0x91E46C")]
			internal bool <SetHeightmap>b__43_0(KeyValuePair<TerrainOperation, AffectedPixels> x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002298")]
			[Address(RVA = "0x91E4B4", Offset = "0x91E4B4", VA = "0x91E4B4")]
			internal bool <GetNormalmap>b__44_0(KeyValuePair<TerrainOperation, AffectedPixels> x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002299")]
			[Address(RVA = "0x91E4FC", Offset = "0x91E4FC", VA = "0x91E4FC")]
			internal bool <GetSplatmap>b__45_0(KeyValuePair<TerrainOperation, AffectedPixels> x)
			{
				return default(bool);
			}

			[Token(Token = "0x600229A")]
			[Address(RVA = "0x91E544", Offset = "0x91E544", VA = "0x91E544")]
			internal bool <SetSplatmap>b__46_1(KeyValuePair<TerrainOperation, AffectedPixels> x)
			{
				return default(bool);
			}

			[Token(Token = "0x600229B")]
			[Address(RVA = "0x91E58C", Offset = "0x91E58C", VA = "0x91E58C")]
			internal bool <RemoveForeignTerrainDetails>b__49_0(KeyValuePair<TerrainOperation, AffectedPixels> x)
			{
				return default(bool);
			}

			[Token(Token = "0x600229C")]
			[Address(RVA = "0x91E5D4", Offset = "0x91E5D4", VA = "0x91E5D4")]
			internal bool <RemoveForeignTrees>b__52_0(KeyValuePair<TerrainOperation, AffectedPixels> x)
			{
				return default(bool);
			}

			[Token(Token = "0x600229D")]
			[Address(RVA = "0x91E61C", Offset = "0x91E61C", VA = "0x91E61C")]
			internal bool <GetCollisionMask>b__60_0(KeyValuePair<TerrainOperation, AffectedPixels> x)
			{
				return default(bool);
			}

			[Token(Token = "0x600229E")]
			[Address(RVA = "0x91E664", Offset = "0x91E664", VA = "0x91E664")]
			internal bool <GetCollisionMask>b__60_1(CollisionMask x)
			{
				return default(bool);
			}

			[Token(Token = "0x600229F")]
			[Address(RVA = "0x91E67C", Offset = "0x91E67C", VA = "0x91E67C")]
			internal bool <GetWorldBiomeMask>b__61_0(KeyValuePair<TerrainOperation, AffectedPixels> x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572CB8", Offset = "0x572CB8")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x4002EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GaiaMultiTerrainOperation <>4__this;

			[Token(Token = "0x4002EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool centerTerrainOnly;

			[Token(Token = "0x60022A0")]
			[Address(RVA = "0x91E6C4", Offset = "0x91E6C4", VA = "0x91E6C4")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x60022A1")]
			[Address(RVA = "0x91E6CC", Offset = "0x91E6CC", VA = "0x91E6CC")]
			internal bool <SetSplatmap>b__0(KeyValuePair<TerrainOperation, AffectedPixels> x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000549")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572CC8", Offset = "0x572CC8")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x4002EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GaiaMultiTerrainOperation <>4__this;

			[Token(Token = "0x4002EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool centerTerrainOnly;

			[Token(Token = "0x60022A2")]
			[Address(RVA = "0x91E790", Offset = "0x91E790", VA = "0x91E790")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x60022A3")]
			[Address(RVA = "0x91E798", Offset = "0x91E798", VA = "0x91E798")]
			internal bool <SetTerrainDetails>b__0(KeyValuePair<TerrainOperation, AffectedPixels> x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200054A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572CD8", Offset = "0x572CD8")]
		private sealed class <>c__DisplayClass49_0
		{
			[Token(Token = "0x4002EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DetailPrototype dp;

			[Token(Token = "0x60022A4")]
			[Address(RVA = "0x91E85C", Offset = "0x91E85C", VA = "0x91E85C")]
			public <>c__DisplayClass49_0()
			{
			}

			[Token(Token = "0x60022A5")]
			[Address(RVA = "0x91E864", Offset = "0x91E864", VA = "0x91E864")]
			internal bool <RemoveForeignTerrainDetails>b__1(ResourceProtoDetail x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200054B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572CE8", Offset = "0x572CE8")]
		private sealed class <>c__DisplayClass51_0
		{
			[Token(Token = "0x4002EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GaiaMultiTerrainOperation <>4__this;

			[Token(Token = "0x4002EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool centerTerrainOnly;

			[Token(Token = "0x60022A6")]
			[Address(RVA = "0x91E964", Offset = "0x91E964", VA = "0x91E964")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x60022A7")]
			[Address(RVA = "0x91E96C", Offset = "0x91E96C", VA = "0x91E96C")]
			internal bool <SetTerrainTrees>b__0(KeyValuePair<TerrainOperation, AffectedPixels> x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200054C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572CF8", Offset = "0x572CF8")]
		private sealed class <>c__DisplayClass54_0
		{
			[Token(Token = "0x4002EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GaiaMultiTerrainOperation <>4__this;

			[Token(Token = "0x4002EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool centerTerrainOnly;

			[Token(Token = "0x60022A8")]
			[Address(RVA = "0x91EA30", Offset = "0x91EA30", VA = "0x91EA30")]
			public <>c__DisplayClass54_0()
			{
			}

			[Token(Token = "0x60022A9")]
			[Address(RVA = "0x91EA38", Offset = "0x91EA38", VA = "0x91EA38")]
			internal bool <SetTerrainGameObjects>b__0(KeyValuePair<TerrainOperation, AffectedPixels> x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200054D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572D08", Offset = "0x572D08")]
		private sealed class <>c__DisplayClass56_0
		{
			[Token(Token = "0x4002EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GaiaMultiTerrainOperation <>4__this;

			[Token(Token = "0x4002EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool centerTerrainOnly;

			[Token(Token = "0x60022AA")]
			[Address(RVA = "0x91EAFC", Offset = "0x91EAFC", VA = "0x91EAFC")]
			public <>c__DisplayClass56_0()
			{
			}

			[Token(Token = "0x60022AB")]
			[Address(RVA = "0x91EB04", Offset = "0x91EB04", VA = "0x91EB04")]
			internal bool <SetSpawnExtensions>b__0(KeyValuePair<TerrainOperation, AffectedPixels> x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200054E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572D18", Offset = "0x572D18")]
		private sealed class <>c__DisplayClass60_0
		{
			[Token(Token = "0x4002EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CollisionMask collMask;

			[Token(Token = "0x60022AC")]
			[Address(RVA = "0x91EBC8", Offset = "0x91EBC8", VA = "0x91EBC8")]
			public <>c__DisplayClass60_0()
			{
			}

			[Token(Token = "0x60022AD")]
			[Address(RVA = "0x91EBD0", Offset = "0x91EBD0", VA = "0x91EBD0")]
			internal bool <GetCollisionMask>b__2(SpawnRule x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200054F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572D28", Offset = "0x572D28")]
		private sealed class <>c__DisplayClass62_0
		{
			[Token(Token = "0x4002EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Terrain terrain;

			[Token(Token = "0x4002EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SpawnRule rule;

			[Token(Token = "0x60022AE")]
			[Address(RVA = "0x91EBFC", Offset = "0x91EBFC", VA = "0x91EBFC")]
			public <>c__DisplayClass62_0()
			{
			}

			[Token(Token = "0x60022AF")]
			[Address(RVA = "0x91EC04", Offset = "0x91EC04", VA = "0x91EC04")]
			internal bool <HandleMissingResources>b__0(TerrainMissingSpawnRules x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Terrain m_originTerrain;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_originTransform;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_range;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool m_isWorldMapOperation;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool m_isWorldMapPreview;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<TerrainData> affectedSplatmapData;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Terrain> affectedHeightmapData;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<string> m_validTerrainNames;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<TerrainMissingSpawnRules> m_terrainsMissingSpawnRules;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public RenderTexture RTheightmap;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RenderTexture RTnormalmap;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public RenderTexture RTterrainTree;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RenderTexture RTgameObject;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public RenderTexture RTdetailmap;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public RenderTexture RTtextureSplatmap;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public RenderTexture RTbakedMask;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public RectInt m_heightmapPixels;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RectInt m_texturePixels;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RectInt m_terrainTreePixels;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RectInt m_bakedMaskPixels;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private RectInt m_gameObjectPixels;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private RectInt m_terrainDetailPixels;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector2 m_heightmapPixelSize;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector2 m_texturePixelSize;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector2 m_terrainDetailPixelSize;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector2 m_terrainTreePixelSize;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector2 m_gameObjectPixelSize;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector2 m_collisionPixelSize;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private BrushTransform m_heightmapBrushTransform;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private BrushTransform m_textureBrushTransform;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private BrushTransform m_terrainTreeBrushTransform;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private BrushTransform m_bakedMaskBrushTransform;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private BrushTransform m_gameObjectBrushTransform;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public BrushTransform m_terrainDetailBrushTransform;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public Dictionary<TerrainOperation, AffectedPixels> affectedTerrainPixels;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material m_GaiaStamperPreviewMaterial;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material m_GaiaSpawnerPreviewMaterial;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private int m_originalMasterTextureLimit;

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x82C0B0", Offset = "0x82C0B0", VA = "0x82C0B0")]
		public GaiaMultiTerrainOperation(Terrain originTerrain, Transform toolTransform, float range, bool fullTextureQuality = false, [Optional] List<string> validTerrainNames)
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x82C284", Offset = "0x82C284", VA = "0x82C284")]
		public void GetAffectedTerrainsOnly()
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x82CC1C", Offset = "0x82CC1C", VA = "0x82CC1C")]
		public void GetHeightmap()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x82D8E8", Offset = "0x82D8E8", VA = "0x82D8E8")]
		public void GetHeightmapForWorldMapPreview(Transform originTransform, float previewRange, int heightmapResolution)
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x82D51C", Offset = "0x82D51C", VA = "0x82D51C")]
		public static void CreateDefaultRenderTexture(ref RenderTexture renderTex, int width, int height, RenderTextureFormat renderTextureFormat)
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x82DA54", Offset = "0x82DA54", VA = "0x82DA54")]
		public void SetHeightmap(RenderTexture newHeightmapRT)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x82E04C", Offset = "0x82E04C", VA = "0x82E04C")]
		public void GetNormalmap()
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x82E9E4", Offset = "0x82E9E4", VA = "0x82E9E4")]
		public void GetSplatmap(TerrainLayer layer)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x82F80C", Offset = "0x82F80C", VA = "0x82F80C")]
		public bool SetSplatmap(RenderTexture paintRenderTexture, Spawner spawner, SpawnRule spawnRule, bool centerTerrainOnly)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x830E38", Offset = "0x830E38", VA = "0x830E38")]
		public void CollectTerrainDetails()
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x8310C8", Offset = "0x8310C8", VA = "0x8310C8")]
		public bool SetTerrainDetails(RenderTexture targetDetailTexture, SpawnerSettings spawnerSettings, Spawner spawner, SpawnRule spawnRule, int randomSeed, bool centerTerrainOnly = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x831FB8", Offset = "0x831FB8", VA = "0x831FB8")]
		public void RemoveForeignTerrainDetails(RenderTexture targetDetailTexture, List<ResourceProtoDetail> domesticDetailPrototypes, float removalStrength)
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x83293C", Offset = "0x83293C", VA = "0x83293C")]
		public void CollectTerrainTrees()
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x832BCC", Offset = "0x832BCC", VA = "0x832BCC")]
		public bool SetTerrainTrees(RenderTexture targetTreeTexture, SpawnerSettings spawnerSettings, Spawner spawner, SpawnRule spawnRule, int seed, bool centerTerrainOnly = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x833C94", Offset = "0x833C94", VA = "0x833C94")]
		public bool RemoveForeignTrees(RenderTexture targetTreeTexture, List<GameObject> domesticTreePrefabs, float removalStrength)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x83469C", Offset = "0x83469C", VA = "0x83469C")]
		public void CollectTerrainGameObjects()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x83495C", Offset = "0x83495C", VA = "0x83495C")]
		public bool SetTerrainGameObjects(RenderTexture targetGameObjectTexture, ResourceProtoGameObject protoGO, SpawnRule rule, SpawnerSettings spawnerSettings, int randomSeed, ref int instanceCounter, float removalStrength = 0f, bool centerTerrainOnly = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x836880", Offset = "0x836880", VA = "0x836880")]
		internal void GetHeightmapForWorldMapPreview(object tranform, object m_worldMapPreviewRange, int m_worldMapPreviewHeightmapResolution)
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x8368C0", Offset = "0x8368C0", VA = "0x8368C0")]
		public bool SetSpawnExtensions(RenderTexture targetSpawnExtensionTexture, Spawner spawner, ResourceProtoSpawnExtension protoSpawnExtension, SpawnerSettings spawnerSettings, int ruleIndex, SpawnRule rule, int randomSeed, ref int instanceCounter, float m_minRequiredFitness, bool centerTerrainOnly)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x837FC0", Offset = "0x837FC0", VA = "0x837FC0")]
		public bool SetWorldMapStamps(RenderTexture worldMapStampTexture, Spawner spawner, ResourceProtoStamp protoStampDistribution, GaiaConstants.SpawnMode spawnMode, int ruleIndex, SpawnRule rule, WorldCreationSettings worldCreationSettings, int randomSeed, ref int instanceCounter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x837FC8", Offset = "0x837FC8", VA = "0x837FC8")]
		public void SetProbes(RenderTexture targetProbeTexture, Spawner spawner, ResourceProtoProbe protoProbe, GaiaConstants.SpawnMode spawnMode, int index, SpawnRule spawnRule, int randomSeed, ref int instanceCounter, bool seaLeveLActive, float seaLevel)
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x837FCC", Offset = "0x837FCC", VA = "0x837FCC")]
		public void CollectTerrainBakedMasks()
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x838254", Offset = "0x838254", VA = "0x838254")]
		public void GetCollisionMask(CollisionMask[] collisionMasks)
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x8392F8", Offset = "0x8392F8", VA = "0x8392F8")]
		public void GetWorldBiomeMask(string worldBiomeMaskGUID)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x831DFC", Offset = "0x831DFC", VA = "0x831DFC")]
		public bool HandleMissingResources(Spawner spawner, SpawnRule rule, Terrain terrain)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x839A60", Offset = "0x839A60", VA = "0x839A60")]
		public void CloseOperation()
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x82D5FC", Offset = "0x82D5FC", VA = "0x82D5FC")]
		public static void CopyIntoPixels(RectInt targetPixels, RectInt originalPixels, Texture originalTexture)
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x839F20", Offset = "0x839F20", VA = "0x839F20")]
		public void SetupMaterialProperties(Material material, MultiTerrainOperationType opType)
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x83A178", Offset = "0x83A178", VA = "0x83A178")]
		private void GetOperationInfo(ref RectInt pixelRect, ref Vector2 pixelSize, ref BrushTransform brushTransform, MultiTerrainOperationType opType)
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x82C5B8", Offset = "0x82C5B8", VA = "0x82C5B8")]
		private void AddAffectedTerrainPixels(RectInt opRect, MultiTerrainOperationType opType, int opWidth, int opHeight, [Optional] TerrainLayer layer)
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x83A1A4", Offset = "0x83A1A4", VA = "0x83A1A4")]
		public Bounds GetBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x83A49C", Offset = "0x83A49C", VA = "0x83A49C")]
		private int GetHorizontalDelta(Terrain originTerrain, Terrain t)
		{
			return default(int);
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x83A528", Offset = "0x83A528", VA = "0x83A528")]
		private int GetVerticalDelta(Terrain originTerrain, Terrain t)
		{
			return default(int);
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x82C4C4", Offset = "0x82C4C4", VA = "0x82C4C4")]
		private RectInt GetPixelsForResolution(Vector3 terrainSize, Rect localBounds, int inputTextureWidth, int inputTextureHeight, int additionalSeam)
		{
			return default(RectInt);
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x83A5B4", Offset = "0x83A5B4", VA = "0x83A5B4")]
		public static Material GetDefaultGaiaStamperPreviewMaterial()
		{
			return null;
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x83A6B4", Offset = "0x83A6B4", VA = "0x83A6B4")]
		public static Material GetDefaultGaiaSpawnerPreviewMaterial()
		{
			return null;
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x83A7BC", Offset = "0x83A7BC", VA = "0x83A7BC")]
		public void Visualize(MultiTerrainOperationType opType, RenderTexture previewTexture, Material mat, int pass)
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x83A28C", Offset = "0x83A28C", VA = "0x83A28C")]
		private AffectedPixels GetAffectedPixels(RectInt opRect, int opCoordinateX, int opCoordinateY, int opWidth, int opHeight, int splatmapID, int channelID)
		{
			return null;
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x831CA8", Offset = "0x831CA8", VA = "0x831CA8")]
		private Color[] GetRTColorArray(RenderTexture targetTexture)
		{
			return null;
		}
	}
	[Token(Token = "0x20001BE")]
	public enum CenterSceneViewLoadingOn
	{
		[Token(Token = "0x40013EE")]
		SceneViewCamera,
		[Token(Token = "0x40013EF")]
		WorldOrigin
	}
	[Token(Token = "0x20001BF")]
	public enum CacheSizePreset
	{
		[Token(Token = "0x40013F1")]
		_Off,
		[Token(Token = "0x40013F2")]
		_1GB,
		[Token(Token = "0x40013F3")]
		_2GB,
		[Token(Token = "0x40013F4")]
		_3GB,
		[Token(Token = "0x40013F5")]
		_4GB,
		[Token(Token = "0x40013F6")]
		_5GB,
		[Token(Token = "0x40013F7")]
		_6GB,
		[Token(Token = "0x40013F8")]
		_7GB,
		[Token(Token = "0x40013F9")]
		_8GB,
		[Token(Token = "0x40013FA")]
		Custom
	}
	[Token(Token = "0x20001C0")]
	public class TerrainLoaderManager : MonoBehaviour
	{
		[Token(Token = "0x2000550")]
		public delegate void LoadProgressStartedCallback();

		[Token(Token = "0x2000551")]
		public delegate void LoadProgressUpdatedCallback(float progress);

		[Token(Token = "0x2000552")]
		public delegate void LoadProgressEndedCallback();

		[Token(Token = "0x2000553")]
		public delegate void LoadProgressTimeOutCallback(List<TerrainScene> missingTerrainScenes);

		[Serializable]
		[Token(Token = "0x2000554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572D38", Offset = "0x572D38")]
		private sealed class <>c
		{
			[Token(Token = "0x4002EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<TerrainScene> <>9__76_0;

			[Token(Token = "0x4002ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<TerrainScene> <>9__76_1;

			[Token(Token = "0x4002ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Predicate<TerrainScene> <>9__76_2;

			[Token(Token = "0x4002ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Predicate<TerrainScene> <>9__76_3;

			[Token(Token = "0x4002ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Predicate<TerrainScene> <>9__76_4;

			[Token(Token = "0x4002ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<TerrainLoader, bool> <>9__77_0;

			[Token(Token = "0x4002ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Predicate<FloatingPointFixMember> <>9__88_0;

			[Token(Token = "0x4002ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Predicate<ParticleSystem> <>9__88_1;

			[Token(Token = "0x4002ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<TerrainScene, bool> <>9__107_0;

			[Token(Token = "0x60022C1")]
			[Address(RVA = "0x8774F0", Offset = "0x8774F0", VA = "0x8774F0")]
			public <>c()
			{
			}

			[Token(Token = "0x60022C2")]
			[Address(RVA = "0x8774F8", Offset = "0x8774F8", VA = "0x8774F8")]
			internal bool <Update>b__76_0(TerrainScene x)
			{
				return default(bool);
			}

			[Token(Token = "0x60022C3")]
			[Address(RVA = "0x877564", Offset = "0x877564", VA = "0x877564")]
			internal bool <Update>b__76_1(TerrainScene x)
			{
				return default(bool);
			}

			[Token(Token = "0x60022C4")]
			[Address(RVA = "0x8775BC", Offset = "0x8775BC", VA = "0x8775BC")]
			internal bool <Update>b__76_2(TerrainScene x)
			{
				return default(bool);
			}

			[Token(Token = "0x60022C5")]
			[Address(RVA = "0x877638", Offset = "0x877638", VA = "0x877638")]
			internal bool <Update>b__76_3(TerrainScene x)
			{
				return default(bool);
			}

			[Token(Token = "0x60022C6")]
			[Address(RVA = "0x8776A8", Offset = "0x8776A8", VA = "0x8776A8")]
			internal bool <Update>b__76_4(TerrainScene x)
			{
				return default(bool);
			}

			[Token(Token = "0x60022C7")]
			[Address(RVA = "0x877738", Offset = "0x877738", VA = "0x877738")]
			internal bool <StartTrackingProgress>b__77_0(TerrainLoader x)
			{
				return default(bool);
			}

			[Token(Token = "0x60022C8")]
			[Address(RVA = "0x877758", Offset = "0x877758", VA = "0x877758")]
			internal bool <SetOrigin>b__88_0(FloatingPointFixMember x)
			{
				return default(bool);
			}

			[Token(Token = "0x60022C9")]
			[Address(RVA = "0x8777C0", Offset = "0x8777C0", VA = "0x8777C0")]
			internal bool <SetOrigin>b__88_1(ParticleSystem x)
			{
				return default(bool);
			}

			[Token(Token = "0x60022CA")]
			[Address(RVA = "0x877828", Offset = "0x877828", VA = "0x877828")]
			internal bool <EmptyCache>b__107_0(TerrainScene x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000555")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572D48", Offset = "0x572D48")]
		private sealed class <>c__DisplayClass89_0
		{
			[Token(Token = "0x4002ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int tileX;

			[Token(Token = "0x4002ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int tileZ;

			[Token(Token = "0x60022CB")]
			[Address(RVA = "0x8778C0", Offset = "0x8778C0", VA = "0x8778C0")]
			public <>c__DisplayClass89_0()
			{
			}

			[Token(Token = "0x60022CC")]
			[Address(RVA = "0x8778C8", Offset = "0x8778C8", VA = "0x8778C8")]
			internal bool <SetOriginByTargetTile>b__0(TerrainScene x)
			{
				return default(bool);
			}

			[Token(Token = "0x60022CD")]
			[Address(RVA = "0x877980", Offset = "0x877980", VA = "0x877980")]
			internal bool <SetOriginByTargetTile>b__1(Terrain x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000556")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572D58", Offset = "0x572D58")]
		private sealed class <>c__DisplayClass92_0
		{
			[Token(Token = "0x4002ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float distance;

			[Token(Token = "0x60022CE")]
			[Address(RVA = "0x877A44", Offset = "0x877A44", VA = "0x877A44")]
			public <>c__DisplayClass92_0()
			{
			}

			[Token(Token = "0x60022CF")]
			[Address(RVA = "0x877A4C", Offset = "0x877A4C", VA = "0x877A4C")]
			internal bool <AddToTerrainSceneActionQueue>b__0(TerrainSceneActionQueueEntry x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000557")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572D68", Offset = "0x572D68")]
		private sealed class <>c__DisplayClass93_0
		{
			[Token(Token = "0x4002ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string searchString;

			[Token(Token = "0x60022D0")]
			[Address(RVA = "0x877A70", Offset = "0x877A70", VA = "0x877A70")]
			public <>c__DisplayClass93_0()
			{
			}

			[Token(Token = "0x60022D1")]
			[Address(RVA = "0x877A78", Offset = "0x877A78", VA = "0x877A78")]
			internal bool <TryGetNeighbor>b__0(TerrainScene x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572D78", Offset = "0x572D78")]
		private sealed class <>c__DisplayClass109_0
		{
			[Token(Token = "0x4002ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3Double center;

			[Token(Token = "0x60022D2")]
			[Address(RVA = "0x877888", Offset = "0x877888", VA = "0x877888")]
			public <>c__DisplayClass109_0()
			{
			}

			[Token(Token = "0x60022D3")]
			[Address(RVA = "0x877890", Offset = "0x877890", VA = "0x877890")]
			internal bool <GetTerrainSceneAtPosition>b__0(TerrainScene x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundsDouble m_sceneViewOriginLoadingBounds;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundsDouble m_sceneViewImpostorLoadingBounds;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BoundsDouble m_sceneViewCameraLoadingBounds;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CenterSceneViewLoadingOn m_centerSceneViewLoadingOn;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<FloatingPointFixMember> m_allFloatingPointFixMembers;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<ParticleSystem> m_allWorldSpaceParticleSystems;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GaiaLoadingScreen m_loadingScreen;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool m_assembliesAreReloading;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int m_originTargetTileX;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int m_originTargetTileZ;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool m_showOriginLoadingBounds;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public bool m_showOriginTerrainBoxes;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CacheSizePreset m_cacheMemoryThresholdPreset;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public long m_cacheMemoryThreshold;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public long m_cacheKeepAliveTime;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool m_cacheInRuntime;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public bool m_cacheInEditor;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int m_terrainLoadingTresholdMS;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public long m_lastTerrainLoadedTimeStamp;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public long m_trackLoadingProgressTimeOut;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<TerrainSceneActionQueueEntry> m_terrainSceneActionQueue;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TerrainLoaderManager instance;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private TerrainSceneStorage m_terrainSceneStorage;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Terrain m_worldMapTerrain;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GameObject m_terrainGO;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool m_showWorldMapTerrain;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		private bool m_showLocalTerrain;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		private bool m_runtimeInitialized;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private string m_lastUsedGUID;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool m_progressTrackingRunning;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private long m_lastLoadingProgressTimeStamp;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_lastTrackedProgressValue;

		[Token(Token = "0x1700016A")]
		public static TerrainLoaderManager Instance
		{
			[Token(Token = "0x6000D18")]
			[Address(RVA = "0xB0AACC", Offset = "0xB0AACC", VA = "0xB0AACC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		public TerrainSceneStorage TerrainSceneStorage
		{
			[Token(Token = "0x6000D19")]
			[Address(RVA = "0xB0E954", Offset = "0xB0E954", VA = "0xB0E954")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0xB0E9CC", Offset = "0xB0E9CC", VA = "0xB0E9CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700016C")]
		public CenterSceneViewLoadingOn CenterSceneViewLoadingOn
		{
			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0xB0ED88", Offset = "0xB0ED88", VA = "0xB0ED88")]
			get
			{
				return default(CenterSceneViewLoadingOn);
			}
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0xB0ED90", Offset = "0xB0ED90", VA = "0xB0ED90")]
			set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public Terrain WorldMapTerrain
		{
			[Token(Token = "0x6000D20")]
			[Address(RVA = "0xB0EF64", Offset = "0xB0EF64", VA = "0xB0EF64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		public GameObject TerrainGO
		{
			[Token(Token = "0x6000D21")]
			[Address(RVA = "0xB0EFE8", Offset = "0xB0EFE8", VA = "0xB0EFE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		public static List<TerrainScene> TerrainScenes
		{
			[Token(Token = "0x6000D22")]
			[Address(RVA = "0xB0768C", Offset = "0xB0768C", VA = "0xB0768C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		public static bool TerrainSceneStorageCreated
		{
			[Token(Token = "0x6000D23")]
			[Address(RVA = "0xB0F074", Offset = "0xB0F074", VA = "0xB0F074")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000171")]
		public bool ShowWorldMapTerrain
		{
			[Token(Token = "0x6000D24")]
			[Address(RVA = "0xB0F158", Offset = "0xB0F158", VA = "0xB0F158")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D25")]
			[Address(RVA = "0xB0F160", Offset = "0xB0F160", VA = "0xB0F160")]
			private set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public bool ShowLocalTerrain
		{
			[Token(Token = "0x6000D26")]
			[Address(RVA = "0xB0F238", Offset = "0xB0F238", VA = "0xB0F238")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D27")]
			[Address(RVA = "0xB0F240", Offset = "0xB0F240", VA = "0xB0F240")]
			private set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public static bool ColliderOnlyLoadingActive
		{
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0xB0DCD4", Offset = "0xB0DCD4", VA = "0xB0DCD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400000B")]
		public event LoadProgressStartedCallback OnLoadProgressStarted
		{
			[Token(Token = "0x6000D29")]
			[Address(RVA = "0xB0F8E8", Offset = "0xB0F8E8", VA = "0xB0F8E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590800", Offset = "0x590800")]
			add
			{
			}
			[Token(Token = "0x6000D2A")]
			[Address(RVA = "0xB0F988", Offset = "0xB0F988", VA = "0xB0F988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590810", Offset = "0x590810")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000C")]
		public event LoadProgressUpdatedCallback OnLoadProgressUpdated
		{
			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0xB0FA28", Offset = "0xB0FA28", VA = "0xB0FA28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590820", Offset = "0x590820")]
			add
			{
			}
			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0xB0FAC8", Offset = "0xB0FAC8", VA = "0xB0FAC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590830", Offset = "0x590830")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000D")]
		public event LoadProgressEndedCallback OnLoadProgressEnded
		{
			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0xB0FB68", Offset = "0xB0FB68", VA = "0xB0FB68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590840", Offset = "0x590840")]
			add
			{
			}
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0xB0FC08", Offset = "0xB0FC08", VA = "0xB0FC08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590850", Offset = "0x590850")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000E")]
		public event LoadProgressTimeOutCallback OnLoadProgressTimeOut
		{
			[Token(Token = "0x6000D2F")]
			[Address(RVA = "0xB0FCA8", Offset = "0xB0FCA8", VA = "0xB0FCA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590860", Offset = "0x590860")]
			add
			{
			}
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0xB0FD48", Offset = "0xB0FD48", VA = "0xB0FD48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590870", Offset = "0x590870")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0xB0EC20", Offset = "0xB0EC20", VA = "0xB0EC20")]
		public static TerrainLoaderManager GetInstanceWithoutCreation()
		{
			return null;
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0xB0EF5C", Offset = "0xB0EF5C", VA = "0xB0EF5C")]
		public void ResetStorage()
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xB0E9C8", Offset = "0xB0E9C8", VA = "0xB0E9C8")]
		public void LoadStorageData()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xB0FDE8", Offset = "0xB0FDE8", VA = "0xB0FDE8")]
		public void Start()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xB1061C", Offset = "0xB1061C", VA = "0xB1061C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xB10234", Offset = "0xB10234", VA = "0xB10234")]
		public void StartTrackingProgress()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xB100B8", Offset = "0xB100B8", VA = "0xB100B8")]
		public void LookUpLoadingScreen()
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xB1017C", Offset = "0xB1017C", VA = "0xB1017C")]
		private void DeactivateIfRequested(bool requested, string gameObjectName)
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xB10B78", Offset = "0xB10B78", VA = "0xB10B78")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xB10BF0", Offset = "0xB10BF0", VA = "0xB10BF0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xB10BF8", Offset = "0xB10BF8", VA = "0xB10BF8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xB10D54", Offset = "0xB10D54", VA = "0xB10D54")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xB10D5C", Offset = "0xB10D5C", VA = "0xB10D5C")]
		public void OnBeforeAssemblyReload()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xB10D68", Offset = "0xB10D68", VA = "0xB10D68")]
		public void OnAfterAssemblyReload()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0xB10D70", Offset = "0xB10D70", VA = "0xB10D70")]
		public void ResetTimestamps()
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xB0DD44", Offset = "0xB0DD44", VA = "0xB0DD44")]
		public Vector3Double GetOrigin()
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0xB10E8C", Offset = "0xB10E8C", VA = "0xB10E8C")]
		public void SetOrigin(Vector3Double newOrigin)
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xB11858", Offset = "0xB11858", VA = "0xB11858")]
		public void SetOriginByTargetTile(int tileX = -99, int tileZ = -99)
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xB11F18", Offset = "0xB11F18", VA = "0xB11F18")]
		public void UpdateCaching()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xB0DD94", Offset = "0xB0DD94", VA = "0xB0DD94")]
		public void UpdateTerrainLoadState([Optional] BoundsDouble loadingBoundsRegular, [Optional] BoundsDouble loadingBoundsImpostor, [Optional] GameObject requestingObject, float minDistance = 0f, float maxDistance = 0f, float minThresholdMS = 0f, float maxThresholdMS = 0f)
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xB12130", Offset = "0xB12130", VA = "0xB12130")]
		private void AddToTerrainSceneActionQueue(TerrainScene terrainScene, ReferenceChange referenceChange, float distance, bool forced = false)
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xB0AD08", Offset = "0xB0AD08", VA = "0xB0AD08")]
		public TerrainScene TryGetNeighbor(TerrainScene terrainScene, StitchDirection direction)
		{
			return null;
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0xB120D8", Offset = "0xB120D8", VA = "0xB120D8")]
		public bool CachingAllowed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xB0EE74", Offset = "0xB0EE74", VA = "0xB0EE74")]
		public double GetLoadingRange()
		{
			return default(double);
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xB0EE90", Offset = "0xB0EE90", VA = "0xB0EE90")]
		public double GetImpostorLoadingRange()
		{
			return default(double);
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0xB12304", Offset = "0xB12304", VA = "0xB12304")]
		public Vector3Double GetLoadingSize()
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0xB12354", Offset = "0xB12354", VA = "0xB12354")]
		public Vector3Double GetImpostorLoadingSize()
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xB123A4", Offset = "0xB123A4", VA = "0xB123A4")]
		public Vector3Double GetLoadingCenter()
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xB123D8", Offset = "0xB123D8", VA = "0xB123D8")]
		public void SwitchToWorldMap()
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xB12440", Offset = "0xB12440", VA = "0xB12440")]
		public void SwitchToLocalMap(bool useInternalLoadingBounds = false)
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xB0EF58", Offset = "0xB0EF58", VA = "0xB0EF58")]
		public void SetLoadingRange(double regularLoadingRange, double impostorLoadingRange)
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xB0EBF0", Offset = "0xB0EBF0", VA = "0xB0EBF0")]
		public void RefreshSceneViewLoadingRange()
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xB124CC", Offset = "0xB124CC", VA = "0xB124CC")]
		public void RefreshTerrainsWithCurrentData()
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xB0EA70", Offset = "0xB0EA70", VA = "0xB0EA70")]
		public void UnloadAll(bool forceUnload = false)
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xB125F0", Offset = "0xB125F0", VA = "0xB125F0")]
		public void UnloadAllImpostors(bool forceUnload = false)
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xB12770", Offset = "0xB12770", VA = "0xB12770")]
		public void EmptyCache()
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xB12B60", Offset = "0xB12B60", VA = "0xB12B60")]
		public void SaveStorageData()
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xB0ABF4", Offset = "0xB0ABF4", VA = "0xB0ABF4")]
		public TerrainScene GetTerrainSceneAtPosition(Vector3Double center)
		{
			return null;
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xB0EEAC", Offset = "0xB0EEAC", VA = "0xB0EEAC")]
		public static double GetDefaultLoadingRangeForTilesize(int tileSize)
		{
			return default(double);
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xB12B64", Offset = "0xB12B64", VA = "0xB12B64")]
		public TerrainLoaderManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C1")]
	public enum LoadState
	{
		[Token(Token = "0x4001420")]
		Loaded,
		[Token(Token = "0x4001421")]
		Cached,
		[Token(Token = "0x4001422")]
		Unloaded
	}
	[Token(Token = "0x20001C2")]
	public enum ReferenceChange
	{
		[Token(Token = "0x4001424")]
		AddImpostorReference,
		[Token(Token = "0x4001425")]
		AddRegularReference,
		[Token(Token = "0x4001426")]
		RemoveImpostorReference,
		[Token(Token = "0x4001427")]
		RemoveRegularReference
	}
	[Token(Token = "0x20001C3")]
	public class TerrainSceneActionQueueEntry
	{
		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TerrainScene m_terrainScene;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReferenceChange m_referenceChange;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool m_forced;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_distance;

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xA22F6C", Offset = "0xA22F6C", VA = "0xA22F6C")]
		public TerrainSceneActionQueueEntry()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C4")]
	public class TerrainScene
	{
		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<GameObject> m_regularReferences;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<GameObject> m_impostorReferences;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3Double m_pos;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3Double m_currentOriginOffset;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BoundsDouble m_bounds;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string m_scenePath;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string m_impostorScenePath;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string m_backupScenePath;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string m_colliderScenePath;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public LoadState m_regularLoadState;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public LoadState m_impostorLoadState;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool m_useFloatingPointFix;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public long m_nextUpdateTimestamp;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private AsyncOperation asyncLoadOp;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool m_regularLoadRequested;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool m_regularUnloadRequested;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		public bool m_impostorLoadRequested;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		public bool m_impostorUnloadRequested;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private long m_loadCacheTreshold;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_forceSceneRemove;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<GameObject> m_rootGameObjects;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool m_isFoldedOut;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GameObject m_terrainObj;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public long m_regularCachedTimestamp;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public long m_impostorCachedTimestamp;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool m_stitchedWestBorder;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		public bool m_stitchedEastBorder;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		public bool m_stitchedSouthBorder;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
		public bool m_stitchedNorthBorder;

		[Token(Token = "0x17000174")]
		public List<GameObject> RegularReferences
		{
			[Token(Token = "0x6000D58")]
			[Address(RVA = "0xA20CF4", Offset = "0xA20CF4", VA = "0xA20CF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		public List<GameObject> ImpostorReferences
		{
			[Token(Token = "0x6000D59")]
			[Address(RVA = "0xA20CFC", Offset = "0xA20CFC", VA = "0xA20CFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0xA20D04", Offset = "0xA20D04", VA = "0xA20D04")]
		public string GetTerrainName(string path = "")
		{
			return null;
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0xA20DCC", Offset = "0xA20DCC", VA = "0xA20DCC")]
		public void RemoveAllReferences(bool forceSceneRemove = false)
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xA212AC", Offset = "0xA212AC", VA = "0xA212AC")]
		public void RemoveAllImpostorReferences(bool forceSceneRemove = false)
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xA21334", Offset = "0xA21334", VA = "0xA21334")]
		public void RemoveAllRegularReferences(bool forceSceneRemove = false)
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xA213BC", Offset = "0xA213BC", VA = "0xA213BC")]
		public void AddRegularReference(GameObject gameObject)
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0xA2146C", Offset = "0xA2146C", VA = "0xA2146C")]
		public void RemoveRegularReference(GameObject gameObject, long cacheSize = 0L, bool forceSceneRemove = false)
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xA21538", Offset = "0xA21538", VA = "0xA21538")]
		public bool HasRegularReference(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0xA2159C", Offset = "0xA2159C", VA = "0xA2159C")]
		public void AddImpostorReference(GameObject gameObject)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xA2166C", Offset = "0xA2166C", VA = "0xA2166C")]
		public void RemoveImpostorReference(GameObject gameObject, long cacheSize = 0L, bool forceSceneRemove = false)
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xA2175C", Offset = "0xA2175C", VA = "0xA2175C")]
		public bool HasImpostorReference(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xA20E88", Offset = "0xA20E88", VA = "0xA20E88")]
		public void UpdateLoadState(List<GameObject> referenceList, ref LoadState loadState, ref bool loadRequested, ref bool unLoadRequested, bool isImpostor)
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xA22064", Offset = "0xA22064", VA = "0xA22064")]
		public static bool GetCoords(string fileName, ref int xCoord, ref int zCoord)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xA21994", Offset = "0xA21994", VA = "0xA21994")]
		private void SyncLoadState(Scene scene, ref LoadState loadState, ref bool loadRequested, ref bool unLoadRequested, bool isImpostor)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xA21E9C", Offset = "0xA21E9C", VA = "0xA21E9C")]
		private void LoadScene(Scene scene, ref bool loadRequested, ref LoadState loadState, bool isImpostor)
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xA222B4", Offset = "0xA222B4", VA = "0xA222B4")]
		public void UpdateWithCurrentData()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xA21AA0", Offset = "0xA21AA0", VA = "0xA21AA0")]
		private void UnloadScene(Scene scene, ref bool loadRequested, ref bool unLoadRequested, ref LoadState loadState, bool isImpostor, bool bypassTreshold = false)
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xA217C0", Offset = "0xA217C0", VA = "0xA217C0")]
		private void CheckForRelevance(List<GameObject> referenceList)
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xA22300", Offset = "0xA22300", VA = "0xA22300")]
		private void SceneLoadCompletedRegular(AsyncOperation obj)
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xA21DE4", Offset = "0xA21DE4", VA = "0xA21DE4")]
		private void CheckForStitching(Terrain terrain)
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xA21D28", Offset = "0xA21D28", VA = "0xA21D28")]
		private void ReplaceImpostor()
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xA22698", Offset = "0xA22698", VA = "0xA22698")]
		private void SceneLoadCompletedImpostor(AsyncOperation obj)
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xA22974", Offset = "0xA22974", VA = "0xA22974")]
		public void ShiftLoadedTerrain()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xA22EB4", Offset = "0xA22EB4", VA = "0xA22EB4")]
		public TerrainScene()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C5")]
	public class TerrainSceneStorage : ScriptableObject
	{
		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_terrainLoadingEnabled;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_colliderOnlyLoading;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int m_terrainTilesX;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_terrainTilesZ;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int m_terrainTilesSize;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_useFloatingPointFix;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool m_hasWorldMap;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_worldMaprelativeSize;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_worldMapRelativeHeightmapPixels;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int m_worldMapPreviewHeightmapResolution;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_worldMapPreviewRange;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_worldMapPreviewTerrainHeight;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<TerrainScene> m_terrainScenes;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool m_deactivateRuntimePlayer;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool m_deactivateRuntimeLighting;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool m_deactivateRuntimeAudio;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		public bool m_deactivateRuntimeWeather;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool m_deactivateRuntimeWater;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool m_deactivateRuntimeScreenShotter;

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xA22F98", Offset = "0xA22F98", VA = "0xA22F98")]
		public TerrainSceneStorage()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public class AutoAssignTakePhotoEvent : MonoBehaviour
	{
		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public ScreenShotter m_screenShotter;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button m_buttonUI;

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x8833F0", Offset = "0x8833F0", VA = "0x8833F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x883584", Offset = "0x883584", VA = "0x883584")]
		public AutoAssignTakePhotoEvent()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public class ColorPreviewSync : MonoBehaviour
	{
		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image m_copyColorFrom;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button m_copyColorTo;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_canSync;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_highlightedColorMultiplier;

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xA0C270", Offset = "0xA0C270", VA = "0xA0C270")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xA0C488", Offset = "0xA0C488", VA = "0xA0C488")]
		public ColorPreviewSync()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class DraggableUIWindow : MonoBehaviour, IDragHandler, IEventSystemHandler, IPointerDownHandler
	{
		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform m_draggableRect;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas m_canvas;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 m_resetPosition;

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xA1E698", Offset = "0xA1E698", VA = "0xA1E698")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xA1E724", Offset = "0xA1E724", VA = "0xA1E724", Slot = "4")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xA1E998", Offset = "0xA1E998", VA = "0xA1E998", Slot = "5")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xA1EA4C", Offset = "0xA1EA4C", VA = "0xA1EA4C")]
		public DraggableUIWindow()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public enum ParentScaleMode
	{
		[Token(Token = "0x4001466")]
		FullScreen,
		[Token(Token = "0x4001467")]
		PartScreen
	}
	[Token(Token = "0x20001CA")]
	[ExecuteAlways]
	public class ParentScaler : MonoBehaviour
	{
		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_scaleWithCanvas;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas m_canvas;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<RectTransform> m_rectsToScale;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParentScaleMode m_mode;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_maxHeight;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_lastScaleHeight;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RectTransform canvasRectTransform;

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xFD4AE8", Offset = "0xFD4AE8", VA = "0xFD4AE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xFD4AEC", Offset = "0xFD4AEC", VA = "0xFD4AEC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xFD4AF0", Offset = "0xFD4AF0", VA = "0xFD4AF0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xFD4AF4", Offset = "0xFD4AF4", VA = "0xFD4AF4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xFD4B2C", Offset = "0xFD4B2C", VA = "0xFD4B2C")]
		private void ProcessScaleWithCanvas()
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xFD4E64", Offset = "0xFD4E64", VA = "0xFD4E64")]
		public ParentScaler()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class PhotoMode : MonoBehaviour
	{
		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private static PhotoMode m_instance;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static List<PhotoModeUIHelper> CurrentRuntimeUIElements;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PhotoModeProfile m_photoModeProfile;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<PhotoModeProfile> m_photoModeProfiles;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<PhotoModeImages> m_uiImages;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PhotoModeUIHelper m_runtimeUIPrefab;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PhotoModeValues m_photoModeValues;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PhotoModeValues m_savedPhotoModeValues;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PhotoModeMinAndMaxValues m_minAndMaxValues;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_isSettingValues;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool m_isUpdatingValues;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool m_pwWeatherPresent;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		private bool m_unitySkyboxPresent;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Camera m_targetCamera;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_photoModeCameraInstantiated;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ScreenShotter m_screenShotter;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GaiaConstants.EnvironmentRenderer m_renderPipeline;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_savedLightingProfileIndex;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Light m_mainSunLight;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Terrain m_activeTerrain;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SceneProfile m_sceneProfile;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material m_unitySkybox;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private UIConfiguration m_gaiaUI;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Text m_selectedPanelText;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<PhotoModePanel> m_panelButtons;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public PhotoModePanelTransformSettings m_transformSettings;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public ScrollRect m_scrollRect;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject m_reticule;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject m_ruleOfThirds;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject m_optionsPanel;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Color m_30FPSColor;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Color m_60FPSColor;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Color m_120FPSColor;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Color m_maxFPSColor;

		[Token(Token = "0x4001491")]
		private const string m_cFormat = "FPS {0}";

		[Token(Token = "0x4001492")]
		private const float m_cMeasurePeriod = 1f;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float m_currentFps;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float m_fpsAccumulator;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float m_fpsNextPeriod;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Text m_fpsText;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Text m_StormVersionText;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Text m_OSText;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Text m_deviceText;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Text m_systemText;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Text m_gpuText;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Text m_gpuCapabilitiesText;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Text m_screenInfoText;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private string m_stormVersion;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private string m_OS;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private string m_deviceName;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private string m_deviceType;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private string m_deviceModel;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private string m_platform;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private string m_processor;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private string m_ram;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private string m_gpu;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private string m_gpuDevice;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private string m_gpuSpec;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private string m_gpuCapabilities;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private string m_screenInfo;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private string m_quality;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public Text m_screenshotText;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private PhotoModeUIHelper m_photoModeHeader;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private PhotoModeUIHelper m_screenshotResolution;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private PhotoModeUIHelper m_screenshotImageFormat;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private PhotoModeUIHelper m_loadSavedSettings;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private PhotoModeUIHelper m_resetPhotoModeOnDisable;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private PhotoModeUIHelper m_showReticule;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private PhotoModeUIHelper m_showRuleOfThirds;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private PhotoModeUIHelper m_unityVolume;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private PhotoModeUIHelper m_unityLODBias;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private PhotoModeUIHelper m_unityVSync;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private PhotoModeUIHelper m_unityTargetFPS;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private PhotoModeUIHelper m_unityAA;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private PhotoModeUIHelper m_unityShadowDistance;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private PhotoModeUIHelper m_unityShadownResolution;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private PhotoModeUIHelper m_unityShadowCascades;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private PhotoModeUIHelper m_fieldOfView;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private PhotoModeUIHelper m_cameraRoll;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private PhotoModeUIHelper m_cullingDistance;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private PhotoModeUIHelper m_unitySettingsGeneralHeader;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private PhotoModeUIHelper m_unitySettingsShadowHeader;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private PhotoModeUIHelper m_unitySettingsVSyncHeader;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private PhotoModeUIHelper m_cameraSettingsGeneralHeader;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public RectTransform m_streamingSettingsArea;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private TerrainLoader m_terrainLoader;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private PhotoModeUIHelper m_gaiaLoadRange;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private PhotoModeUIHelper m_gaiaImpostorRange;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private PhotoModeUIHelper m_streamingHeader;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private PhotoModeUIHelper m_gaiaWindDirection;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private PhotoModeUIHelper m_gaiaWindSpeed;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private PhotoModeUIHelper m_gaiaWindHeader;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private PhotoModeUIHelper m_gaiaWindSettingsOverride;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private ProceduralWorldsGlobalWeather m_weather;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private PW_VFX_Atmosphere m_atmosphere;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private PhotoModeUIHelper m_gaiaWeatherEnabled;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private PhotoModeUIHelper m_gaiaWeatherToggleRain;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private PhotoModeUIHelper m_gaiaWeatherToggleSnow;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private PhotoModeUIHelper m_gaiaTime;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private PhotoModeUIHelper m_gaiaTimeOfDayEnabled;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private PhotoModeUIHelper m_gaiaTimeScale;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private PhotoModeUIHelper m_gaiaAdditionalLinearFog;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private PhotoModeUIHelper m_gaiaAdditionalExponentialFog;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private PhotoModeUIHelper m_lightingWeatherHeader;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private PhotoModeUIHelper m_lightingGeneralHeader;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private PhotoModeUIHelper m_gaiaSunAngle;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private PhotoModeUIHelper m_gaiaSunPitch;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private PhotoModeUIHelper m_gaiaFogOverride;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private PhotoModeUIHelper m_gaiaFogMode;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private PhotoModeUIHelper m_gaiaFogColor;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		private PhotoModeUIHelper m_gaiaFogStart;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private PhotoModeUIHelper m_gaiaFogEnd;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private PhotoModeUIHelper m_gaiaFogDensity;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private PhotoModeUIHelper m_gaiaSkyboxOverride;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		private PhotoModeUIHelper m_gaiaSkyboxRotation;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		private PhotoModeUIHelper m_gaiaSkyboxExposure;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		private PhotoModeUIHelper m_gaiaSkyboxTint;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		private PhotoModeUIHelper m_gaiaAmbientIntensity;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		private PhotoModeUIHelper m_gaiaSunOverride;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		private PhotoModeUIHelper m_gaiaSunIntensity;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		private PhotoModeUIHelper m_gaiaSunKelvin;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		private PhotoModeUIHelper m_gaiaSunColor;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		private PhotoModeUIHelper m_lightingFogHeader;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		private PhotoModeUIHelper m_lightingSkyboxHeader;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		private PhotoModeUIHelper m_lightingSunHeader;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		private PhotoModeUIHelper m_lightingAmbientHeader;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		private PhotoModeUIHelper m_gaiaWaterheader;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		private PhotoModeUIHelper m_gaiaUnderwaterheader;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		private PhotoModeUIHelper m_gaiaWaterReflectionsEnabled;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		private PhotoModeUIHelper m_gaiaWaterReflectionDistance;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		private PhotoModeUIHelper m_gaiaWaterReflectionResolution;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		private PhotoModeUIHelper m_gaiaWaterReflectionLODBias;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		private PhotoModeUIHelper m_gaiaUnderwaterFogColor;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		private PhotoModeUIHelper m_gaiaUnderwaterFogDistance;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		private PhotoModeUIHelper m_gaiaUnderwaterVolume;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
		private PhotoModeUIHelper m_gaiaPostFXExposure;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		private PhotoModeUIHelper m_noPostProcessingHeader;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
		private PhotoModeUIHelper m_gaiaPostFXExposureHeader;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
		private PhotoModeUIHelper m_gaiaPostFXDOFHeader;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
		private PhotoModeUIHelper m_gaiaPostFXDOFEnabled;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
		private PhotoModeUIHelper m_gaiaPostFXDOFAutoFocus;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		private PhotoModeUIHelper m_gaiaPostFXDOFAperture;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
		private PhotoModeUIHelper m_gaiaPostFXDOFFocalLength;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
		private PhotoModeUIHelper m_gaiaPostFXDOFFocusDistance;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
		private PhotoModeUIHelper m_gaiaPostFXDOFKernelSizeBuiltIn;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
		private PostProcessLayer m_postProcessingLayer;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
		private DepthOfField m_depthOfField;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		private PhotoModeUIHelper m_terrainDetailDensity;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
		private PhotoModeUIHelper m_terrainDetailDistance;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		private PhotoModeUIHelper m_terrainHeightResolution;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
		private PhotoModeUIHelper m_terrainTextureDistance;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
		private PhotoModeUIHelper m_terrainDrawInstanced;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
		private PhotoModeUIHelper m_terrainHeader;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
		public bool m_freezePlayerController;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
		public GameObject m_spawnedCamera;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
		private Rigidbody m_rigidBodyController;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
		private RigidbodyConstraints m_lastConstrants;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
		private MonoBehaviour m_playerController;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
		private MonoBehaviour m_thirdPersonBaseController;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
		private MonoBehaviour m_carBaseController;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
		private MonoBehaviour m_carAudioController;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
		private GameObject m_lastPlayerController;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
		private Camera m_lastPlayerCamera;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
		public ColorPickerReferenceMode m_colorPickerRefMode;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
		public PhotoModeColorPicker m_colorPicker;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
		[HideInInspector]
		public bool m_updateColorPickerRef;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
		private PhotoModeUIHelper m_grassSettingsHeader;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
		private PhotoModeUIHelper m_globalGrassDensity;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
		private PhotoModeUIHelper m_globalGrassDistance;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x538")]
		private PhotoModeUIHelper m_globalCameraCellDistance;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
		private PhotoModeUIHelper m_globalCameraCellSubdivision;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
		private FloraGlobalManager m_detailManager;

		[Token(Token = "0x17000176")]
		public static PhotoMode Instance
		{
			[Token(Token = "0x6000D80")]
			[Address(RVA = "0xD0D57C", Offset = "0xD0D57C", VA = "0xD0D57C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		public int FPS
		{
			[Token(Token = "0x6000D81")]
			[Address(RVA = "0xD0D5E0", Offset = "0xD0D5E0", VA = "0xD0D5E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xD0D5EC", Offset = "0xD0D5EC", VA = "0xD0D5EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xD0DC70", Offset = "0xD0DC70", VA = "0xD0DC70")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xD0DF34", Offset = "0xD0DF34", VA = "0xD0DF34")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xD0E520", Offset = "0xD0E520", VA = "0xD0E520")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0xD0E660", Offset = "0xD0E660", VA = "0xD0E660")]
		public void ClosePhotoMode()
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0xD0E7BC", Offset = "0xD0E7BC", VA = "0xD0E7BC")]
		public PhotoModePanel GetPanelProfile(string searchFor)
		{
			return null;
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0xD0D5F0", Offset = "0xD0D5F0", VA = "0xD0D5F0")]
		private void Instantiate()
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0xD0DC94", Offset = "0xD0DC94", VA = "0xD0DC94")]
		private void ProcessUpdate()
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0xD0E92C", Offset = "0xD0E92C", VA = "0xD0E92C")]
		private Camera LoadPhotoModeCamera()
		{
			return null;
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0xD11BB4", Offset = "0xD11BB4", VA = "0xD11BB4")]
		private void RemovePhotoModeCamera()
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0xD0F120", Offset = "0xD0F120", VA = "0xD0F120")]
		private void FreezePlayerController()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xD11D18", Offset = "0xD11D18", VA = "0xD11D18")]
		private void UnFreezePlayerController()
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0xD11184", Offset = "0xD11184", VA = "0xD11184")]
		public void Setup()
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0xD0FDD0", Offset = "0xD0FDD0", VA = "0xD0FDD0")]
		public void SetupSystemMetrics()
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xD117C4", Offset = "0xD117C4", VA = "0xD117C4")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0xD1A178", Offset = "0xD1A178", VA = "0xD1A178")]
		public void SetMinMax(PhotoModeMinAndMaxValues values)
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0xD18EA8", Offset = "0xD18EA8", VA = "0xD18EA8")]
		private void SetMetricsParent(bool parent, RectTransform transform)
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xD11F28", Offset = "0xD11F28", VA = "0xD11F28")]
		private void CreatePhotoModeSettingsUI()
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xD124FC", Offset = "0xD124FC", VA = "0xD124FC")]
		private void CreateUnitySettingsUI()
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xD131B4", Offset = "0xD131B4", VA = "0xD131B4")]
		private void CreateCameraSettingsUI()
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xD1394C", Offset = "0xD1394C", VA = "0xD1394C")]
		private void CreateWaterSettingsUI()
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xD143BC", Offset = "0xD143BC", VA = "0xD143BC")]
		private void CreatePostFXSettingsUI()
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xD14ED0", Offset = "0xD14ED0", VA = "0xD14ED0")]
		private void CreateTerrainSettingsUI()
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xD15644", Offset = "0xD15644", VA = "0xD15644")]
		private void CreateLightingSettingsUI()
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0xD17F88", Offset = "0xD17F88", VA = "0xD17F88")]
		private void CreateStreamingSettingsUI()
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xD1A19C", Offset = "0xD1A19C", VA = "0xD1A19C")]
		private void CreateWeatherSettingsUI()
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xD17AAC", Offset = "0xD17AAC", VA = "0xD17AAC")]
		private void CreateGrassSettingsUI()
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xD0EA60", Offset = "0xD0EA60", VA = "0xD0EA60")]
		private bool VerifySystems()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xD0DF38", Offset = "0xD0DF38", VA = "0xD0DF38")]
		private void ResetBackToDefault()
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xD0E5B8", Offset = "0xD0E5B8", VA = "0xD0E5B8")]
		private void RevertPostProcessing()
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0xD0F730", Offset = "0xD0F730", VA = "0xD0F730")]
		private void SaveStartValues()
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xD1A93C", Offset = "0xD1A93C", VA = "0xD1A93C")]
		private void SyncAutoFocus()
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xD1AA78", Offset = "0xD1AA78", VA = "0xD1AA78")]
		public void SetUnityScreenshotResolution(int f)
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xD1ACC8", Offset = "0xD1ACC8", VA = "0xD1ACC8")]
		public void SetUnityScreenshotImageFormat(int f)
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xD1AD9C", Offset = "0xD1AD9C", VA = "0xD1AD9C")]
		public void SetPhotoModeLoadSettings(int value)
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xD1AED8", Offset = "0xD1AED8", VA = "0xD1AED8")]
		public void SetPhotoModeRevertOnDisabledSettings(int value)
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0xD1B030", Offset = "0xD1B030", VA = "0xD1B030")]
		public void SetPhotoModeShowReticule(int value)
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xD1B170", Offset = "0xD1B170", VA = "0xD1B170")]
		public void SetPhotoModeShowRuleOfThirds(int value)
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xD1B2B0", Offset = "0xD1B2B0", VA = "0xD1B2B0")]
		public void SetUnityVolume(float f)
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xD1B3A8", Offset = "0xD1B3A8", VA = "0xD1B3A8")]
		public void SetUnityVolume(string val)
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xD1B4B8", Offset = "0xD1B4B8", VA = "0xD1B4B8")]
		public void SetUnityFieldOfView(float f)
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xD1B5F0", Offset = "0xD1B5F0", VA = "0xD1B5F0")]
		public void SetUnityFieldOfView(string val)
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xD1B700", Offset = "0xD1B700", VA = "0xD1B700")]
		public void SetUnityCameraRoll(float f)
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xD1B7FC", Offset = "0xD1B7FC", VA = "0xD1B7FC")]
		public void SetUnityCameraRoll(string val)
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xD1B90C", Offset = "0xD1B90C", VA = "0xD1B90C")]
		public void SetUnityCullingDistance(float f)
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xD1BA2C", Offset = "0xD1BA2C", VA = "0xD1BA2C")]
		public void SetUnityCullingDistance(string val)
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xD1BB3C", Offset = "0xD1BB3C", VA = "0xD1BB3C")]
		public void SetUnityLODBias(float f)
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xD1BC38", Offset = "0xD1BC38", VA = "0xD1BC38")]
		public void SetUnityLODBias(string val)
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xD1BD48", Offset = "0xD1BD48", VA = "0xD1BD48")]
		public void SetUnityAA(int f)
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xD1BE58", Offset = "0xD1BE58", VA = "0xD1BE58")]
		public void SetUnityVSync(int f)
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xD1BFC8", Offset = "0xD1BFC8", VA = "0xD1BFC8")]
		public void SetUnityTargetFPS(float f)
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xD1C0DC", Offset = "0xD1C0DC", VA = "0xD1C0DC")]
		public void SetUnityTargetFPS(string val)
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xD1C1FC", Offset = "0xD1C1FC", VA = "0xD1C1FC")]
		public void SetUnityShadowDistance(float f)
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xD1C304", Offset = "0xD1C304", VA = "0xD1C304")]
		public void SetUnityShadowDistance(string val)
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xD1C3F8", Offset = "0xD1C3F8", VA = "0xD1C3F8")]
		public void SetUnityShadowResolution(int f)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xD1C4DC", Offset = "0xD1C4DC", VA = "0xD1C4DC")]
		public void SetUnityShadowCascades(int f)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xD1C5B8", Offset = "0xD1C5B8", VA = "0xD1C5B8")]
		public void SetGaiaLoadRange(float f)
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xD1C734", Offset = "0xD1C734", VA = "0xD1C734")]
		public void SetGaiaLoadRange(string val)
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xD1C844", Offset = "0xD1C844", VA = "0xD1C844")]
		public void SetGaiaImpostorRange(float f)
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xD1C9C0", Offset = "0xD1C9C0", VA = "0xD1C9C0")]
		public void SetGaiaImpostorRange(string val)
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xD19DF0", Offset = "0xD19DF0", VA = "0xD19DF0")]
		public void SetGaiaWindDirection(float f)
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xD1CAD0", Offset = "0xD1CAD0", VA = "0xD1CAD0")]
		public void SetGaiaWindDirection(string val)
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xD1A074", Offset = "0xD1A074", VA = "0xD1A074")]
		public void SetGaiaWindSpeed(float f)
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xD1CBE0", Offset = "0xD1CBE0", VA = "0xD1CBE0")]
		public void SetGaiaWindSpeed(string val)
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xD1CCF0", Offset = "0xD1CCF0", VA = "0xD1CCF0")]
		public void SetWindOverride(int value)
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xD19864", Offset = "0xD19864", VA = "0xD19864")]
		public void SetGaiaWeatherEnabled(int value)
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0xD1CEC0", Offset = "0xD1CEC0", VA = "0xD1CEC0")]
		public void OnToggleRainClicked()
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xD1CEE4", Offset = "0xD1CEE4", VA = "0xD1CEE4")]
		public void OnSetRain(bool on)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0xD19A68", Offset = "0xD19A68", VA = "0xD19A68")]
		public void OnSetRain(bool on, bool setValueOnly)
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0xD1D098", Offset = "0xD1D098", VA = "0xD1D098")]
		public void OnToggleSnowClicked()
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xD1D0BC", Offset = "0xD1D0BC", VA = "0xD1D0BC")]
		public void OnSetSnow(bool on)
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xD19C2C", Offset = "0xD19C2C", VA = "0xD19C2C")]
		public void OnSetSnow(bool on, bool setValueOnly)
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0xD1D270", Offset = "0xD1D270", VA = "0xD1D270")]
		public void SetAdditionalLinearFog(float f)
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0xD1D358", Offset = "0xD1D358", VA = "0xD1D358")]
		public void SetAdditionalLinearFog(string val)
		{
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xD1D468", Offset = "0xD1D468", VA = "0xD1D468")]
		public void SetAdditionalExponentialFog(float f)
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xD1D550", Offset = "0xD1D550", VA = "0xD1D550")]
		public void SetAdditionalExponentialFog(string val)
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xD195FC", Offset = "0xD195FC", VA = "0xD195FC")]
		public void SetGaiaTime(float f)
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xD1D660", Offset = "0xD1D660", VA = "0xD1D660")]
		public void SetGaiaTime(string val)
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xD193F4", Offset = "0xD193F4", VA = "0xD193F4")]
		public void SetGaiaTimeScale(float f)
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xD1D770", Offset = "0xD1D770", VA = "0xD1D770")]
		public void SetGaiaTimeScale(string val)
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xD19158", Offset = "0xD19158", VA = "0xD19158")]
		public void SetGaiaTimeOfDayEnabled(int value)
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xD1D880", Offset = "0xD1D880", VA = "0xD1D880")]
		public void SetGaiaSunAngle(float f)
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xD1DB64", Offset = "0xD1DB64", VA = "0xD1DB64")]
		public void SetGaiaSunAngle(string val)
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xD1DC74", Offset = "0xD1DC74", VA = "0xD1DC74")]
		public void SetGaiaSunPitch(float f)
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xD1DDC0", Offset = "0xD1DDC0", VA = "0xD1DDC0")]
		public void SetGaiaSunPitch(string val)
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xD1DED0", Offset = "0xD1DED0", VA = "0xD1DED0")]
		public void SetGaiaSunOverride(int value)
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xD1E1F0", Offset = "0xD1E1F0", VA = "0xD1E1F0")]
		public void SetGaiaSunIntensity(float f)
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xD1E2FC", Offset = "0xD1E2FC", VA = "0xD1E2FC")]
		public void SetGaiaSunIntensity(string val)
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xD1E40C", Offset = "0xD1E40C", VA = "0xD1E40C")]
		public void SetGaiaSunKelvin(float f)
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xD1E518", Offset = "0xD1E518", VA = "0xD1E518")]
		public void SetGaiaSunKelvin(string val)
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xD1E62C", Offset = "0xD1E62C", VA = "0xD1E62C")]
		public void SetAmbientIntensity(float f)
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xD1E71C", Offset = "0xD1E71C", VA = "0xD1E71C")]
		public void SetAmbientIntensity(string val)
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xD1E82C", Offset = "0xD1E82C", VA = "0xD1E82C")]
		public void SetGaiaFogOverride(int value)
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xD1ED94", Offset = "0xD1ED94", VA = "0xD1ED94")]
		public void SetGaiaFogMode(int f)
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xD1F07C", Offset = "0xD1F07C", VA = "0xD1F07C")]
		public void SetGaiaFogStart(float f)
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xD1F170", Offset = "0xD1F170", VA = "0xD1F170")]
		public void SetGaiaFogStart(string val)
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xD1F280", Offset = "0xD1F280", VA = "0xD1F280")]
		public void SetGaiaFogDensity(float f)
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xD1F374", Offset = "0xD1F374", VA = "0xD1F374")]
		public void SetGaiaFogDensity(string val)
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xD1F484", Offset = "0xD1F484", VA = "0xD1F484")]
		public void SetGaiaFogEnd(float f)
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xD1F578", Offset = "0xD1F578", VA = "0xD1F578")]
		public void SetGaiaFogEnd(string val)
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xD1F688", Offset = "0xD1F688", VA = "0xD1F688")]
		public void SetGaiaSkyboxOverride(int value)
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xD1F8D8", Offset = "0xD1F8D8", VA = "0xD1F8D8")]
		public void SetGaiaSkyboxRotation(float f)
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xD1F9EC", Offset = "0xD1F9EC", VA = "0xD1F9EC")]
		public void SetGaiaSkyboxRotation(string val)
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xD1FAFC", Offset = "0xD1FAFC", VA = "0xD1FAFC")]
		public void SetGaiaSkyboxExposure(float f)
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xD1FC10", Offset = "0xD1FC10", VA = "0xD1FC10")]
		public void SetGaiaSkyboxExposure(string val)
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xD1FD20", Offset = "0xD1FD20", VA = "0xD1FD20")]
		public void UpdateSkyboxTint()
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xD1FDDC", Offset = "0xD1FDDC", VA = "0xD1FDDC")]
		public void UpdateSunColor()
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xD1EC28", Offset = "0xD1EC28", VA = "0xD1EC28")]
		private void UpdateFogSettings()
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0xD1F8D4", Offset = "0xD1F8D4", VA = "0xD1F8D4")]
		private void UpdateHDRPSkyValues(float rotation, float exposure)
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xD1FE9C", Offset = "0xD1FE9C", VA = "0xD1FE9C")]
		private void UpdateHDRPFogValues(float fogDistance, Color fogColor)
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xD1FEA0", Offset = "0xD1FEA0", VA = "0xD1FEA0")]
		public void SetGaiaWaterReflectionEnabled(int value)
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xD20080", Offset = "0xD20080", VA = "0xD20080")]
		public void SetGaiaWaterReflectionDistance(float f)
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0xD20168", Offset = "0xD20168", VA = "0xD20168")]
		public void SetGaiaWaterReflectionDistance(string val)
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0xD2027C", Offset = "0xD2027C", VA = "0xD2027C")]
		public void SetGaiaWaterReflectionResolution(int f)
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0xD20338", Offset = "0xD20338", VA = "0xD20338")]
		public void SetGaiaWaterReflectionLODBias(float f)
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xD20340", Offset = "0xD20340", VA = "0xD20340")]
		public void SetGaiaWaterReflectionLODBias(string val)
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0xD20454", Offset = "0xD20454", VA = "0xD20454")]
		public void SetGaiaUnderwaterFogDistance(float f)
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0xD20578", Offset = "0xD20578", VA = "0xD20578")]
		public void SetGaiaUnderwaterFogDistance(string val)
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0xD2068C", Offset = "0xD2068C", VA = "0xD2068C")]
		public void SetGaiaUnderwaterVolume(float f)
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0xD20774", Offset = "0xD20774", VA = "0xD20774")]
		public void SetGaiaUnderwaterVolume(string val)
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0xD20884", Offset = "0xD20884", VA = "0xD20884")]
		public void UpdateUnderwaterFogColor()
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0xD20944", Offset = "0xD20944", VA = "0xD20944")]
		public void SetDOFEnabled(int value)
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0xD20C38", Offset = "0xD20C38", VA = "0xD20C38")]
		public void SetDOFAutoFocusEnabled(int value)
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0xD20DF4", Offset = "0xD20DF4", VA = "0xD20DF4")]
		public void SetDOFAperture(float f)
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0xD20EF0", Offset = "0xD20EF0", VA = "0xD20EF0")]
		public void SetDOFAperture(string val)
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0xD21000", Offset = "0xD21000", VA = "0xD21000")]
		public void SetDOFFocalLength(float f)
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0xD2112C", Offset = "0xD2112C", VA = "0xD2112C")]
		public void SetDOFFocalLength(string val)
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0xD2123C", Offset = "0xD2123C", VA = "0xD2123C")]
		public void SetDOFFocusDistance(float f)
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xD21368", Offset = "0xD21368", VA = "0xD21368")]
		public void SetDOFFocusDistance(string val)
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xD21534", Offset = "0xD21534", VA = "0xD21534")]
		public void SetDOFKernelSize(int f)
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xD21620", Offset = "0xD21620", VA = "0xD21620")]
		public void SetAutoExposure(float f)
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0xD21710", Offset = "0xD21710", VA = "0xD21710")]
		public void SetAutoExposure(string val)
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0xD218DC", Offset = "0xD218DC", VA = "0xD218DC")]
		private void SetURPUIModeSetup()
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0xD218E0", Offset = "0xD218E0", VA = "0xD218E0")]
		public void SetDOFModeURP(int f)
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0xD218E8", Offset = "0xD218E8", VA = "0xD218E8")]
		public void SetDOFHighQualityURP(int value)
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xD218F0", Offset = "0xD218F0", VA = "0xD218F0")]
		public void SetDOFStartBlurDistance(float f)
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0xD218F8", Offset = "0xD218F8", VA = "0xD218F8")]
		public void SetDOFStartBlurDistance(string val)
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0xD218FC", Offset = "0xD218FC", VA = "0xD218FC")]
		public void SetDOFEndBlurDistance(float f)
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0xD21904", Offset = "0xD21904", VA = "0xD21904")]
		public void SetDOFEndBlurDistance(string val)
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0xD21908", Offset = "0xD21908", VA = "0xD21908")]
		public void SetDOFMaxBlurRadius(float f)
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0xD21910", Offset = "0xD21910", VA = "0xD21910")]
		public void SetDOFMaxBlurRadius(string val)
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0xD21914", Offset = "0xD21914", VA = "0xD21914")]
		public void SetGlobalGrassDensity(float f)
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0xD21A5C", Offset = "0xD21A5C", VA = "0xD21A5C")]
		public void SetGlobalGrassDensity(string val)
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0xD21B70", Offset = "0xD21B70", VA = "0xD21B70")]
		public void SetGlobalGrassDistance(float f)
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0xD21CB8", Offset = "0xD21CB8", VA = "0xD21CB8")]
		public void SetGlobalGrassDistance(string val)
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0xD21DCC", Offset = "0xD21DCC", VA = "0xD21DCC")]
		public void SetGlobalCameraCellDistance(float f)
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0xD21F14", Offset = "0xD21F14", VA = "0xD21F14")]
		public void SetGlobalCameraCellDistance(string val)
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xD22028", Offset = "0xD22028", VA = "0xD22028")]
		public void SetGlobalCameraCellSubdivision(float f)
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xD22174", Offset = "0xD22174", VA = "0xD22174")]
		public void SetGlobalCameraCellSubdivision(string val)
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0xD22294", Offset = "0xD22294", VA = "0xD22294")]
		public void SetTerrainDetailDensity(float f)
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0xD22388", Offset = "0xD22388", VA = "0xD22388")]
		public void SetTerrainDetailDensity(string val)
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0xD2249C", Offset = "0xD2249C", VA = "0xD2249C")]
		public void SetTerrainDetailDistance(float f)
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xD22590", Offset = "0xD22590", VA = "0xD22590")]
		public void SetTerrainDetailDistance(string val)
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xD226A4", Offset = "0xD226A4", VA = "0xD226A4")]
		public void SetTerrainHeightResolution(float f)
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xD22798", Offset = "0xD22798", VA = "0xD22798")]
		public void SetTerrainHeightResolution(string val)
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xD228AC", Offset = "0xD228AC", VA = "0xD228AC")]
		public void SetTerrainTextureDistance(float f)
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xD229A0", Offset = "0xD229A0", VA = "0xD229A0")]
		public void SetTerrainTextureDistance(string val)
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0xD22AB4", Offset = "0xD22AB4", VA = "0xD22AB4")]
		public void SetTerrainDrawInstanced(int value)
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xD18360", Offset = "0xD18360", VA = "0xD18360")]
		private void RefreshAllUI()
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xD22BB4", Offset = "0xD22BB4", VA = "0xD22BB4")]
		private void SetAllInputFieldsToTrue()
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xD22DC4", Offset = "0xD22DC4", VA = "0xD22DC4")]
		public void OpenColorPickerFog()
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xD23038", Offset = "0xD23038", VA = "0xD23038")]
		public void OpenColorPickerSunColor()
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xD230FC", Offset = "0xD230FC", VA = "0xD230FC")]
		public void OpenColorPickerSkyboxTint()
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0xD231C0", Offset = "0xD231C0", VA = "0xD231C0")]
		public void OpenColorPickerDensityAlbedo()
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xD231C4", Offset = "0xD231C4", VA = "0xD231C4")]
		public void OpenColorPickerUnderwaterFogColor()
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xD2328C", Offset = "0xD2328C", VA = "0xD2328C")]
		public void SetFogColor()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xD22D6C", Offset = "0xD22D6C", VA = "0xD22D6C")]
		public void SetNewColorPickerRefs(Color color, Button currentColorImage, bool colorPickerEnabled)
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0xD22E88", Offset = "0xD22E88", VA = "0xD22E88")]
		private void OpenColorPicker(PhotoModeUIHelper runtimeUI, Color colorValue, ColorPickerReferenceMode mode, UnityAction onChanged)
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0xD23290", Offset = "0xD23290", VA = "0xD23290")]
		private void SetColorPickerVisable(bool value)
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0xD0DE6C", Offset = "0xD0DE6C", VA = "0xD0DE6C")]
		public void UpdateColorPicker()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xD2334C", Offset = "0xD2334C", VA = "0xD2334C")]
		public PhotoMode()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class PhotoModeButtonManager : MonoBehaviour
	{
		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PhotoModePanelButton m_photoModeButton;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhotoModePanelButton m_cameraButton;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PhotoModePanelButton m_unityButton;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PhotoModePanelButton m_terrainButton;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PhotoModePanelButton m_lightingButton;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PhotoModePanelButton m_waterButton;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PhotoModePanelButton m_postFXButton;

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xDBC8D8", Offset = "0xDBC8D8", VA = "0xDBC8D8")]
		public void Startup()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0xDBCAD0", Offset = "0xDBCAD0", VA = "0xDBCAD0")]
		public void ProcessCameraSelected()
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xDBCEEC", Offset = "0xDBCEEC", VA = "0xDBCEEC")]
		public void ProcessUnitySelected()
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0xDBD30C", Offset = "0xDBD30C", VA = "0xDBD30C")]
		public void ProcessTerrainSelected()
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xDBD72C", Offset = "0xDBD72C", VA = "0xDBD72C")]
		public void ProcessLightingSelected()
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xDBDB4C", Offset = "0xDBDB4C", VA = "0xDBDB4C")]
		public void ProcessWaterSelected()
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xDBDF6C", Offset = "0xDBDF6C", VA = "0xDBDF6C")]
		public void ProcessPostFXSelected()
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0xDBE38C", Offset = "0xDBE38C", VA = "0xDBE38C")]
		public void ProcessPhotoModeSelected()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xDBED48", Offset = "0xDBED48", VA = "0xDBED48")]
		private void SetScrollRect(RectTransform rect)
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xDBEC9C", Offset = "0xDBEC9C", VA = "0xDBEC9C")]
		private void SetPanelState(RectTransform panel, bool state)
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xDBE7AC", Offset = "0xDBE7AC", VA = "0xDBE7AC")]
		private bool ValidateButtons()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xDBF0FC", Offset = "0xDBF0FC", VA = "0xDBF0FC")]
		public PhotoModeButtonManager()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class PhotoModeColorPicker : MonoBehaviour
	{
		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color m_value;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image m_currentColor;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image m_lastColor;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Slider m_sliderR;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Image m_currentRedColor;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Slider m_sliderG;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Image m_currentGreenColor;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Slider m_sliderB;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Image m_currentBlueColor;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Text m_selectedNameText;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityAction m_onChanged;

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xDBF104", Offset = "0xDBF104", VA = "0xDBF104")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xDBF34C", Offset = "0xDBF34C", VA = "0xDBF34C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xDBF354", Offset = "0xDBF354", VA = "0xDBF354")]
		public void SetColorValue(Color color)
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xDBF5D4", Offset = "0xDBF5D4", VA = "0xDBF5D4")]
		public void SetLastColorValue(Color color)
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xDBF6A0", Offset = "0xDBF6A0", VA = "0xDBF6A0")]
		public void SetCurrentFocusedName(string name)
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xDBF78C", Offset = "0xDBF78C", VA = "0xDBF78C")]
		public void CloseColorPicker()
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0xDBF8F8", Offset = "0xDBF8F8", VA = "0xDBF8F8")]
		public void RefColor(ref Color color, ref Button currentValue)
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xDBF350", Offset = "0xDBF350", VA = "0xDBF350")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0xDBFA1C", Offset = "0xDBFA1C", VA = "0xDBFA1C")]
		private void UpdateCurrentColors()
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0xDBFAC0", Offset = "0xDBFAC0", VA = "0xDBFAC0")]
		public void SetRedValue(float value)
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0xDBFB8C", Offset = "0xDBFB8C", VA = "0xDBFB8C")]
		public void SetGreenValue(float value)
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0xDBFC58", Offset = "0xDBFC58", VA = "0xDBFC58")]
		public void SetBlueValue(float value)
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0xDBFD24", Offset = "0xDBFD24", VA = "0xDBFD24")]
		public void UpdateOnChangedMethod(UnityAction onChanged)
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0xDBFD2C", Offset = "0xDBFD2C", VA = "0xDBFD2C")]
		public void ResetColorValue()
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0xDBFF7C", Offset = "0xDBFF7C", VA = "0xDBFF7C")]
		public PhotoModeColorPicker()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class PhotoModePanelButton : MonoBehaviour
	{
		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_isSet;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_allowTooltip;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button m_button;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GridLayoutGroup m_panelLayout;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string m_searchPanelName;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color m_nonSelectedColor;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color m_selectedColor;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public PhotoMode m_photoMode;

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0xDC0344", Offset = "0xDC0344", VA = "0xDC0344")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0xDC0348", Offset = "0xDC0348", VA = "0xDC0348")]
		public void Register()
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0xDBE9F4", Offset = "0xDBE9F4", VA = "0xDBE9F4")]
		public void SetButtonState(bool enabled)
		{
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0xDC0594", Offset = "0xDC0594", VA = "0xDC0594")]
		public PhotoModePanelButton()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public enum ColorPickerReferenceMode
	{
		[Token(Token = "0x4001536")]
		FogColor,
		[Token(Token = "0x4001537")]
		SunColor,
		[Token(Token = "0x4001538")]
		SkyboxTintColor,
		[Token(Token = "0x4001539")]
		DensityAlbedoColor,
		[Token(Token = "0x400153A")]
		UnderwaterFogColor
	}
	[Serializable]
	[Token(Token = "0x20001D0")]
	public class GrassRenderingProfileData
	{
		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_terrainName;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_additionalNearDistance;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_additionalFarDistance;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FloraTerrainTile m_tileData;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_distancesSaved;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<SavedGrassRenderingSettings> m_savedData;

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xE48398", Offset = "0xE48398", VA = "0xE48398")]
		public GrassRenderingProfileData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D1")]
	public class SavedGrassRenderingSettings
	{
		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m_nearFade;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m_farFade;

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x8C2D24", Offset = "0x8C2D24", VA = "0x8C2D24")]
		public SavedGrassRenderingSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D2")]
	public class PhotoModeValues
	{
		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_isUsingGaiaLighting;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int m_selectedGaiaLightingProfile;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_screenshotResolution;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int m_screenshotImageFormat;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_loadSavedSettings;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool m_revertOnDisabled;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool m_showReticle;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool m_showRuleOfThirds;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_lodBias;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int m_vSync;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int m_targetFPS;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int m_antiAliasing;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_shadowDistance;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int m_shadowResolution;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int m_shadowCascades;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_fieldOfView;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_gaiaCullinDistance;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_cameraAperture;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_cameraFocalLength;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_globalVolume;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_cameraRoll;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_farClipPlane;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_gaiaLoadRange;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float m_gaiaImpostorRange;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool m_gaiaWeatherEnabled;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool m_gaiaWeatherRain;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		public bool m_gaiaWeatherSnow;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
		public bool m_gaiaWindSettingsOverride;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float m_gaiaWindDirection;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float m_gaiaWindSpeed;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float m_gaiaTime;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool m_gaiaTimeOfDayEnabled;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float m_gaiaTimeScale;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float m_gaiaAdditionalLinearFog;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float m_gaiaAdditionalExponentialFog;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float m_sunRotation;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float m_sunPitch;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool m_fogOverride;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public FogMode m_fogMode;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Color m_fogColor;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float m_fogDensity;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float m_fogStart;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float m_fogEnd;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool m_skyboxOverride;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float m_skyboxRotation;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float m_skyboxExposure;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Color m_skyboxTint;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float m_ambientIntensity;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool m_sunOverride;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float m_sunIntensity;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Color m_sunColor;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float m_sunKelvinValue;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public bool m_gaiaWaterReflectionEnabled;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float m_gaiaWaterReflectionDistance;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public int m_gaiaWaterReflectionResolution;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float m_gaiaReflectionsLODBias;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public Color m_gaiaUnderwaterFogColor;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float m_gaiaUnderwaterFogDensity;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float m_gaiaUnderwaterFogDistance;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float m_gaiaUnderwaterVolume;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float m_postFXExposure;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public int m_postFXExposureMode;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool m_dofActive;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		public bool m_autoDOFFocus;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float m_dofFocusDistance;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float m_dofAperture;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float m_dofFocalLength;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public int m_dofKernelSize;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public int m_dofFocusModeHDRP;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public int m_dofFocusModeURP;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public int m_dofQualityHDRP;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public float m_dofNearBlurStart;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public float m_dofNearBlurEnd;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public float m_dofFarBlurStart;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public float m_dofFarBlurEnd;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public float m_dofStartBlurURP;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public float m_dofEndBlurURP;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public float m_dofMaxRadiusBlur;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public bool m_dofHighQualityURP;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public float m_terrainDetailDensity;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public float m_terrainDetailDistance;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public float m_terrainPixelError;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public float m_terrainBasemapDistance;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public bool m_drawInstanced;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
		public bool m_overrideDensityVolume;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public Color m_densityVolumeAlbedoColor;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public float m_densityVolumeFogDistance;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public int m_densityVolumeEffectType;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public int m_densityVolumeTilingResolution;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public float m_globalGrassDensity;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public float m_globalGrassDistance;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public float m_cameraCellDistance;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		public int m_cameraCellSubdivision;

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xDC7B28", Offset = "0xDC7B28", VA = "0xDC7B28")]
		public List<string> GetDefaultToggleOptions()
		{
			return null;
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xDC7BF8", Offset = "0xDC7BF8", VA = "0xDC7BF8")]
		public List<string> GetScreenResolutionOptions()
		{
			return null;
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xDC7DE8", Offset = "0xDC7DE8", VA = "0xDC7DE8")]
		public List<string> GetScreenshotFormatOptions()
		{
			return null;
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xDC7F00", Offset = "0xDC7F00", VA = "0xDC7F00")]
		public List<string> GetAntiAliasingOptions()
		{
			return null;
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xDC811C", Offset = "0xDC811C", VA = "0xDC811C")]
		public List<string> GetVsyncOptions()
		{
			return null;
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xDC8210", Offset = "0xDC8210", VA = "0xDC8210")]
		public List<string> GetDOFModeOptions()
		{
			return null;
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xDC8360", Offset = "0xDC8360", VA = "0xDC8360")]
		public List<string> GetDOFQualityOptions()
		{
			return null;
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xDC8454", Offset = "0xDC8454", VA = "0xDC8454")]
		public List<string> GetWaterReflectionQualityOptions()
		{
			return null;
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xDC8590", Offset = "0xDC8590", VA = "0xDC8590")]
		public List<string> GetShadowQualityOptions()
		{
			return null;
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0xDC86A8", Offset = "0xDC86A8", VA = "0xDC86A8")]
		public List<string> GetShadowCascadeOptions()
		{
			return null;
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xDC880C", Offset = "0xDC880C", VA = "0xDC880C")]
		public List<string> GetFogModeOptions()
		{
			return null;
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xDC8900", Offset = "0xDC8900", VA = "0xDC8900")]
		public List<string> GetKernelSizeOptions()
		{
			return null;
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xDC8A18", Offset = "0xDC8A18", VA = "0xDC8A18")]
		public List<string> GetDensityVolumeEffectTypeOptions()
		{
			return null;
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0xDC8B54", Offset = "0xDC8B54", VA = "0xDC8B54")]
		public List<string> GetDensityVolumeTilingResolutionOptions()
		{
			return null;
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xDC8CB4", Offset = "0xDC8CB4", VA = "0xDC8CB4")]
		public void Load(PhotoModeValues loadFrom)
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xDC8FE4", Offset = "0xDC8FE4", VA = "0xDC8FE4")]
		public void Save(PhotoModeValues saveTo)
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xDC0660", Offset = "0xDC0660", VA = "0xDC0660")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xDC08DC", Offset = "0xDC08DC", VA = "0xDC08DC")]
		public PhotoModeValues()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D3")]
	public class PhotoModeMinAndMaxValues
	{
		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 m_0To1;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 m_lodBias;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2Int m_targetFPS;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 m_shadowDistance;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 m_fieldOfView;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 m_gaiaCullinDistance;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 m_cameraAperture;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 m_cameraFocalLength;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector2 m_globalVolume;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector2 m_cameraRoll;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector2 m_gaiaLoadRange;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector2 m_gaiaImpostorRange;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector2 m_gaiaWindDirection;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector2 m_gaiaWindSpeed;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector2 m_gaiaTime;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector2 m_gaiaTimeScale;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector2 m_gaiaAdditionalLinearFog;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector2 m_gaiaAdditionalExponentialFog;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector2 m_sunRotation;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector2 m_sunPitch;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Vector2 m_fogDensity;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Vector2 m_fogStart;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Vector2 m_fogEnd;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Vector2 m_fogEndHDRP;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Vector2 m_skyboxRotation;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Vector2 m_skyboxExposure;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Vector2 m_skyboxExposureHDRP;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Vector2 m_ambientIntensity;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Vector2 m_sunIntensity;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Vector2 m_sunIntensityHDRP;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Vector2 m_sunKelvinValue;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Vector2 m_densityVolumeFogDistance;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Vector2 m_gaiaWaterReflectionDistance;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Vector2 m_gaiaReflectionsLODBias;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Vector2 m_gaiaUnderwaterFogDistance;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Vector2 m_gaiaUnderwaterFogDensity;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Vector2 m_postFXExposure;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Vector2 m_postFXExposureURP;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Vector2 m_postFXExposureHDRP;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Vector2 m_postFXDOFFocusDistanceHDRP;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Vector2 m_postFXDOFFocusDistanceURP;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Vector2 m_postFXDOFFocusDistance;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Vector2 m_postFXDOFNearBlurStart;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Vector2 m_postFXDOFNearBlurEnd;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Vector2 m_postFXDOFFarBlurStart;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Vector2 m_postFXDOFFarBlurEnd;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Vector2 m_postFXDOFGaussianBlurStartURP;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Vector2 m_postFXDOFGaussianBlurEndURP;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Vector2 m_postFXDOFGaussianBlurMaxRadiusURP;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Vector2 m_terrainDetailDensity;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public Vector2 m_terrainDetailDistance;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Vector2 m_terrainPixelError;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Vector2 m_terrainBasemapDistance;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public Vector2 m_globalGrassDensity;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public Vector2 m_globalGrassDistance;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public Vector2 m_cameraCellDistance;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public Vector2Int m_cameraCellSubdivision;

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xDBFF98", Offset = "0xDBFF98", VA = "0xDBFF98")]
		public void SetNewMinMaxValues(PhotoModeMinAndMaxValues values)
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xDC018C", Offset = "0xDC018C", VA = "0xDC018C")]
		public PhotoModeMinAndMaxValues()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D4")]
	public class PhotoModeImages
	{
		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_name;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite m_image;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 m_imageWidthAndHeight;

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xDBFF84", Offset = "0xDBFF84", VA = "0xDBFF84")]
		public PhotoModeImages()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D5")]
	public class PhotoModePanel
	{
		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_shownTitle;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button m_button;

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xDC033C", Offset = "0xDC033C", VA = "0xDC033C")]
		public PhotoModePanel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D6")]
	public class PhotoModePanelTransformSettings
	{
		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RectTransform m_photoMode;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform m_camera;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform m_unity;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectTransform m_terrain;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform m_lighting;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RectTransform m_water;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RectTransform m_postFX;

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xDC0610", Offset = "0xDC0610", VA = "0xDC0610")]
		public PhotoModePanelTransformSettings()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public class PhotoModeProfile : ScriptableObject
	{
		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool m_everBeenSaved;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public GaiaConstants.EnvironmentRenderer LastRenderPipeline;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PhotoModeValues m_profile;

		[Token(Token = "0x17000178")]
		public PhotoModeValues Profile
		{
			[Token(Token = "0x6000E66")]
			[Address(RVA = "0xDC0618", Offset = "0xDC0618", VA = "0xDC0618")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E67")]
			[Address(RVA = "0xDC0620", Offset = "0xDC0620", VA = "0xDC0620")]
			set
			{
			}
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xDC0634", Offset = "0xDC0634", VA = "0xDC0634")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xDC087C", Offset = "0xDC087C", VA = "0xDC087C")]
		public PhotoModeProfile()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public enum RuntimeUIVectorMode
	{
		[Token(Token = "0x40015E9")]
		Vector2,
		[Token(Token = "0x40015EA")]
		Vector3
	}
	[Token(Token = "0x20001D9")]
	public enum RuntimeUIVectorSetInputMode
	{
		[Token(Token = "0x40015EC")]
		VectorX,
		[Token(Token = "0x40015ED")]
		VectorY,
		[Token(Token = "0x40015EE")]
		VectorZ
	}
	[Token(Token = "0x20001DA")]
	public class PhotoModeUIHelper : MonoBehaviour
	{
		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool m_isUsingSlider;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text[] m_labels;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Slider m_slider;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InputField[] m_inputs;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Toggle m_toggle;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dropdown m_dropdown;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button[] m_buttons;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Image m_image;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Button m_colorPreviewButton;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject m_headerObject;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject m_labelPanelObject;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject m_propertyPanelObject;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Text m_headerText;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject m_vectorsObject;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject m_vector3Object;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject m_vector2Object;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public InputField m_vector3InputX;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public InputField m_vector3InputY;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public InputField m_vector3InputZ;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public InputField m_vector2InputX;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public InputField m_vector2InputY;

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xDC0AC8", Offset = "0xDC0AC8", VA = "0xDC0AC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xDC0AD4", Offset = "0xDC0AD4", VA = "0xDC0AD4")]
		public void SetImage(PhotoModeImages imageData)
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xDC0C08", Offset = "0xDC0C08", VA = "0xDC0C08")]
		public void SetImageVisability(bool visable)
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0xDC0CB8", Offset = "0xDC0CB8", VA = "0xDC0CB8")]
		public string GetLabel(int labelIndex = 0)
		{
			return null;
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0xDC0DC4", Offset = "0xDC0DC4", VA = "0xDC0DC4")]
		public void SetLabel(string text, int labelIndex = 0)
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xDC0ECC", Offset = "0xDC0ECC", VA = "0xDC0ECC")]
		public void SetLabelColor(Color colour, int labelIndex = 0)
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xDC0F28", Offset = "0xDC0F28", VA = "0xDC0F28")]
		public void SetLabelVisible(params bool[] labelsVisible)
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xDC10A0", Offset = "0xDC10A0", VA = "0xDC10A0")]
		public string GetInput(int inputIndex = 0)
		{
			return null;
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0xDC1198", Offset = "0xDC1198", VA = "0xDC1198")]
		public void SetInput(string text, int inputIndex = 0)
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0xDC1298", Offset = "0xDC1298", VA = "0xDC1298")]
		public void SetInput(string text, UnityAction<string> onChanged, int inputIndex = 0, InputField.CharacterValidation characterValidation = InputField.CharacterValidation.Decimal, InputField.ContentType contentType = InputField.ContentType.DecimalNumber)
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0xDC1450", Offset = "0xDC1450", VA = "0xDC1450")]
		public void SetInputVisible(params bool[] inputsVisible)
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xDC15C8", Offset = "0xDC15C8", VA = "0xDC15C8")]
		public void SetButtonLabel(string text, int buttonIndex = 0)
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xDC1728", Offset = "0xDC1728", VA = "0xDC1728")]
		public void SetButton(string text, UnityAction onClick, int buttonIndex = 0)
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xDC18CC", Offset = "0xDC18CC", VA = "0xDC18CC")]
		public void SetButtonVisible(params bool[] buttonVisible)
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xDC1A44", Offset = "0xDC1A44", VA = "0xDC1A44")]
		public void SetButtonInactive(bool inactive)
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xDC1AC0", Offset = "0xDC1AC0", VA = "0xDC1AC0")]
		public bool GetToggle()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xDC1B54", Offset = "0xDC1B54", VA = "0xDC1B54")]
		public void SetToggle(bool on)
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xDC1BF8", Offset = "0xDC1BF8", VA = "0xDC1BF8")]
		public void SetToggle(bool on, UnityAction<bool> onChange)
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xDC1CD0", Offset = "0xDC1CD0", VA = "0xDC1CD0")]
		public void SetToggleVisible(bool visible)
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0xDC1D80", Offset = "0xDC1D80", VA = "0xDC1D80")]
		public float GetSlider()
		{
			return default(float);
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0xDC1E1C", Offset = "0xDC1E1C", VA = "0xDC1E1C")]
		public void SetSlider(float value)
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xDC1EC8", Offset = "0xDC1EC8", VA = "0xDC1EC8")]
		public void SetSliderMinMax(float min, float max)
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xDC1F84", Offset = "0xDC1F84", VA = "0xDC1F84")]
		public void SetSlider(float value, UnityAction<float> onChanged)
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xDC2070", Offset = "0xDC2070", VA = "0xDC2070")]
		public void SetSlider(float value, float min, float max, UnityAction<float> onChanged)
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xDC21AC", Offset = "0xDC21AC", VA = "0xDC21AC")]
		public void SetSlider(int value, int min, int max, UnityAction<float> onChanged)
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xDC22DC", Offset = "0xDC22DC", VA = "0xDC22DC")]
		public void SetSliderVisible(bool visible)
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0xDC238C", Offset = "0xDC238C", VA = "0xDC238C")]
		public void SetValue(float value, bool setInput = true)
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xDC23DC", Offset = "0xDC23DC", VA = "0xDC23DC")]
		public void SetValue(float value, string formatString)
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xDC242C", Offset = "0xDC242C", VA = "0xDC242C")]
		public void SetDropdownOptions(List<Sprite> options)
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xDC24E0", Offset = "0xDC24E0", VA = "0xDC24E0")]
		public void SetDropdownOptions(List<string> options)
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xDC25A4", Offset = "0xDC25A4", VA = "0xDC25A4")]
		public void SetDropdown(int value, UnityAction<int> onChange)
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xDC267C", Offset = "0xDC267C", VA = "0xDC267C")]
		public void SetDropdownValue(int value)
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xDC2720", Offset = "0xDC2720", VA = "0xDC2720")]
		public void SetDropdownVisability(bool visable)
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xDC27D0", Offset = "0xDC27D0", VA = "0xDC27D0")]
		public void SetHeaderVisible(bool visable)
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0xDC2978", Offset = "0xDC2978", VA = "0xDC2978")]
		public void SetHeaderText(string text)
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0xDC2A24", Offset = "0xDC2A24", VA = "0xDC2A24")]
		public void SetColorPreviewImage(Color color)
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0xDC2B08", Offset = "0xDC2B08", VA = "0xDC2B08")]
		public void SetColorPreviewOnClicked(UnityAction onClicked)
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xDC2BB4", Offset = "0xDC2BB4", VA = "0xDC2BB4")]
		public void SetColorPreviewImageVisable(bool visable)
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xDC2C64", Offset = "0xDC2C64", VA = "0xDC2C64")]
		public void SetVectorVisable(bool visable, RuntimeUIVectorMode vectorMode = RuntimeUIVectorMode.Vector3)
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xDC2DCC", Offset = "0xDC2DCC", VA = "0xDC2DCC")]
		public void SetVector(Vector3 value, UnityAction<string> onChangedX, UnityAction<string> onChangedY, UnityAction<string> onChangedZ)
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xDC3008", Offset = "0xDC3008", VA = "0xDC3008")]
		public void SetVector(Vector2 value, UnityAction<string> onChangedX, UnityAction<string> onChangedY)
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xDC31B4", Offset = "0xDC31B4", VA = "0xDC31B4")]
		public void SetVectorValue(float value, RuntimeUIVectorMode vectorMode, RuntimeUIVectorSetInputMode vectorInputMode)
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xDC3398", Offset = "0xDC3398", VA = "0xDC3398")]
		public void SetIsUsingSlider()
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xDC33A4", Offset = "0xDC33A4", VA = "0xDC33A4")]
		public PhotoModeUIHelper()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class PhotoModeUtils
	{
		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool m_isSettingValues;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static PhotoModeUIHelper m_runtimeUIPrefab;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string m_floatFormat;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string m_floatFormatDecimals;

		[Token(Token = "0x4001608")]
		public const int m_metricsWrapLength = 68;

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xDC33B4", Offset = "0xDC33B4", VA = "0xDC33B4")]
		public static void CreateField(ref PhotoModeUIHelper runtimeUI, Transform parent, string Name, string value, UnityAction<string> OnInputChanged, bool useTooltip = false, string tooltipID = "")
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xDC3AE4", Offset = "0xDC3AE4", VA = "0xDC3AE4")]
		public static void CreateSlider(ref PhotoModeUIHelper runtimeUI, Transform parent, string Name, float value, float min, float max, UnityAction<float> OnSliderChanged, UnityAction<string> OnInputChanged, bool useTooltip = false, string tooltipID = "")
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0xDC3F10", Offset = "0xDC3F10", VA = "0xDC3F10")]
		public static void CreateIntSlider(ref PhotoModeUIHelper runtimeUI, Transform parent, string Name, int value, int min, int max, UnityAction<float> OnSliderChanged, UnityAction<string> OnInputChanged, bool useTooltip = false, string tooltipID = "")
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xDC4314", Offset = "0xDC4314", VA = "0xDC4314")]
		public static void CreateSlider(ref PhotoModeUIHelper runtimeUI, Transform parent, string Name, float value, string display, float min, float max, UnityAction<float> OnSliderChanged, bool useTooltip = false, string tooltipID = "")
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0xDC4704", Offset = "0xDC4704", VA = "0xDC4704")]
		public static void CreateIntSlider(ref PhotoModeUIHelper runtimeUI, Transform parent, string Name, int value, string display, int min, int max, UnityAction<float> OnSliderChanged, bool useTooltip = false, string tooltipID = "")
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0xDC4AEC", Offset = "0xDC4AEC", VA = "0xDC4AEC")]
		public static void CreateToggle(ref PhotoModeUIHelper runtimeUI, Transform parent, string Name, bool value, UnityAction<bool> OnValueChanged, bool useTooltip = false, string tooltipID = "")
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xDC4E98", Offset = "0xDC4E98", VA = "0xDC4E98")]
		public static void CreateTitleHeader(ref PhotoModeUIHelper runtimeUI, Transform parent, string headerText, bool useTooltip = false, string tooltipID = "")
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xDC51C4", Offset = "0xDC51C4", VA = "0xDC51C4")]
		public static void CreateDropdown(ref PhotoModeUIHelper runtimeUI, Transform parent, string Name, int value, UnityAction<int> OnValueChanged, List<string> options, bool useTooltip = false, string tooltipID = "")
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xDC5588", Offset = "0xDC5588", VA = "0xDC5588")]
		public static void CreateDropdown(ref PhotoModeUIHelper runtimeUI, Transform parent, string Name, bool value, UnityAction<int> OnValueChanged, List<string> options, bool useTooltip = false, string tooltipID = "")
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xDC5950", Offset = "0xDC5950", VA = "0xDC5950")]
		public static void CreateLabel(ref PhotoModeUIHelper runtimeUI, Transform parent, string Name, string value, bool useTooltip = false, string tooltipID = "")
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xDC5CC4", Offset = "0xDC5CC4", VA = "0xDC5CC4")]
		public static void CreateButton(ref PhotoModeUIHelper runtimeUI, Transform parent, string Name, string buttonLabel, UnityAction OnClicked, bool useTooltip = false, string tooltipID = "")
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xDC6060", Offset = "0xDC6060", VA = "0xDC6060")]
		public static void CreateColorField(ref PhotoModeUIHelper runtimeUI, Transform parent, string Name, Color currentColor, UnityAction OnClicked, bool useTooltip = false, string tooltipID = "")
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xDC6400", Offset = "0xDC6400", VA = "0xDC6400")]
		public static void CreateBannerImage(ref PhotoModeUIHelper runtimeUI, Transform parent, string Name, string searchForImageName, List<PhotoModeImages> profiles, bool useTooltip = false, string tooltipID = "")
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xDC68EC", Offset = "0xDC68EC", VA = "0xDC68EC")]
		public static void CreateVector(ref PhotoModeUIHelper runtimeUI, Transform parent, string Name, Vector3 value, UnityAction<string> onChangedX, UnityAction<string> onChangedY, UnityAction<string> onChangedZ, bool useTooltip = false, string tooltipID = "")
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xDC6D5C", Offset = "0xDC6D5C", VA = "0xDC6D5C")]
		public static void CreateVector(ref PhotoModeUIHelper runtimeUI, Transform parent, string Name, Vector2 value, UnityAction<string> onChangedX, UnityAction<string> onChangedY, bool useTooltip = false, string tooltipID = "")
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xDC7168", Offset = "0xDC7168", VA = "0xDC7168")]
		public static void RemoveAllChildren(Transform parent, List<Transform> exceptions)
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xDC73D8", Offset = "0xDC73D8", VA = "0xDC73D8")]
		public static string UpdateWrap(string str)
		{
			return null;
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xDC6780", Offset = "0xDC6780", VA = "0xDC6780")]
		public static PhotoModeImages GetImageData(string imageName, List<PhotoModeImages> profiles)
		{
			return null;
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xDC7500", Offset = "0xDC7500", VA = "0xDC7500")]
		public static int ConvertBoolToInt(bool value)
		{
			return default(int);
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xDC7508", Offset = "0xDC7508", VA = "0xDC7508")]
		public static bool ConvertIntToBool(int value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xDC3780", Offset = "0xDC3780", VA = "0xDC3780")]
		public static void AddTooptipToObject(GameObject uiObject, bool useTooltip, string tooltipID, string alternativeTooltipID)
		{
		}

		[Token(Token = "0x6000EAB")]
		private static T CreateChild<T>(T prefab, string Name, Transform parent) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xDC7514", Offset = "0xDC7514", VA = "0xDC7514")]
		public static PhotoModeProfile LoadPhotoModeProfile(string name, List<PhotoModeProfile> profiles)
		{
			return null;
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xDC75F4", Offset = "0xDC75F4", VA = "0xDC75F4")]
		public static PhotoModeProfile LoadPhotoModeProfile(int idx, List<PhotoModeProfile> profiles)
		{
			return null;
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xDC7724", Offset = "0xDC7724", VA = "0xDC7724")]
		public static void SetSliderValue(PhotoModeUIHelper runtimeUI, float value)
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xDC77BC", Offset = "0xDC77BC", VA = "0xDC77BC")]
		public static void GetAndSetFloatValue(string value, UnityAction<float> setAction, Vector2 clampMinMax, PhotoModeUIHelper runtimeUI)
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xDC78F4", Offset = "0xDC78F4", VA = "0xDC78F4")]
		public static void SetIsUsingSliderValue(PhotoModeUIHelper runtimeUI, bool value = true)
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xDC7980", Offset = "0xDC7980", VA = "0xDC7980")]
		public static void SetNewMinMaxValuesInPhotoMode(PhotoModeMinAndMaxValues values)
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0xDC7A94", Offset = "0xDC7A94", VA = "0xDC7A94")]
		public PhotoModeUtils()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class ScreenshotSavedManager : MonoBehaviour
	{
		[Token(Token = "0x2000559")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572D88", Offset = "0x572D88")]
		private sealed class <ShowScreenshotTakenText>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScreenshotSavedManager <>4__this;

			[Token(Token = "0x170003D8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022D7")]
				[Address(RVA = "0x872174", Offset = "0x872174", VA = "0x872174", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022D9")]
				[Address(RVA = "0x8721BC", Offset = "0x8721BC", VA = "0x8721BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022D4")]
			[Address(RVA = "0x871FC8", Offset = "0x871FC8", VA = "0x871FC8")]
			[DebuggerHidden]
			public <ShowScreenshotTakenText>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60022D5")]
			[Address(RVA = "0x871FF4", Offset = "0x871FF4", VA = "0x871FF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022D6")]
			[Address(RVA = "0x871FF8", Offset = "0x871FF8", VA = "0x871FF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022D8")]
			[Address(RVA = "0x87217C", Offset = "0x87217C", VA = "0x87217C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private static ScreenshotSavedManager m_instance;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_useShowScreenshotSavedText;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text m_screenshotSavedText;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_showTimeInSeconds;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_screenshotterPresent;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ScreenShotter m_screenshotter;

		[Token(Token = "0x17000179")]
		public static ScreenshotSavedManager Instance
		{
			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0x8C8C70", Offset = "0x8C8C70", VA = "0x8C8C70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x8C8CBC", Offset = "0x8C8CBC", VA = "0x8C8CBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x8C8DC8", Offset = "0x8C8DC8", VA = "0x8C8DC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x8C8E18", Offset = "0x8C8E18", VA = "0x8C8E18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x590880", Offset = "0x590880")]
		private IEnumerator ShowScreenshotTakenText()
		{
			return null;
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x8C8B8C", Offset = "0x8C8B8C", VA = "0x8C8B8C")]
		public void ShowScreenshotSavedText()
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x8C8E84", Offset = "0x8C8E84", VA = "0x8C8E84")]
		public ScreenshotSavedManager()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class Tooltip : MonoBehaviour
	{
		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text m_headerText;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text m_contentText;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayoutElement m_layoutElement;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int m_contentWrapLimit;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RectTransform m_tooltipRect;

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xA26138", Offset = "0xA26138", VA = "0xA26138")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xA262F0", Offset = "0xA262F0", VA = "0xA262F0")]
		public void SetTooltipText(string content, string header = "")
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xA2646C", Offset = "0xA2646C", VA = "0xA2646C")]
		public Tooltip()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public enum TooltipTheme
	{
		[Token(Token = "0x4001615")]
		Light,
		[Token(Token = "0x4001616")]
		Dark
	}
	[Token(Token = "0x20001DF")]
	public enum InteractionMode
	{
		[Token(Token = "0x4001618")]
		UI,
		[Token(Token = "0x4001619")]
		SceneObjects,
		[Token(Token = "0x400161A")]
		Both
	}
	[Serializable]
	[Token(Token = "0x20001E0")]
	public class TooplipThemeSetup
	{
		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TooltipTheme m_theme;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image m_background;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text m_header;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text m_content;

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0xA271B8", Offset = "0xA271B8", VA = "0xA271B8")]
		public TooplipThemeSetup()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class TooltipManager : MonoBehaviour
	{
		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private static TooltipManager m_instance;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TooltipProfile m_tooltipProfile;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractionMode m_interactionMode;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Tooltip m_tooltip;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_tooltipYOffsetBottomHalf;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_tooltipYOffsetTopHalf;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_tooltipDelay;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TooplipThemeSetup m_themeSettings;

		[Token(Token = "0x1700017A")]
		public static TooltipManager Instance
		{
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0xA26474", Offset = "0xA26474", VA = "0xA26474")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xA264C0", Offset = "0xA264C0", VA = "0xA264C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xA26510", Offset = "0xA26510", VA = "0xA26510")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xA26870", Offset = "0xA26870", VA = "0xA26870")]
		public void SetInstance()
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xA268C0", Offset = "0xA268C0", VA = "0xA268C0")]
		public TooltipProfileData GetTooltip(string tooltipID)
		{
			return null;
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0xA26B6C", Offset = "0xA26B6C", VA = "0xA26B6C")]
		public void AddTooltip(TooltipProfileData tooltipProfile)
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0xA26C88", Offset = "0xA26C88", VA = "0xA26C88")]
		public void AddTooltip(string ID, string header, string text)
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xA26DE0", Offset = "0xA26DE0", VA = "0xA26DE0")]
		public bool RemoveTooltip(string tooltipID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xA2662C", Offset = "0xA2662C", VA = "0xA2662C")]
		public void ProcessTheme()
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0xA26F80", Offset = "0xA26F80", VA = "0xA26F80")]
		public static void ShowTooltip(string content, string header)
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0xA26190", Offset = "0xA26190", VA = "0xA26190")]
		public static void HideTooltip()
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0xA27134", Offset = "0xA27134", VA = "0xA27134")]
		public TooltipManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E2")]
	public class TooltipProfileData
	{
		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_tooltipID;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_header;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Multiline]
		public string m_text;

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0xA26DD8", Offset = "0xA26DD8", VA = "0xA26DD8")]
		public TooltipProfileData()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class TooltipProfile : ScriptableObject
	{
		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<TooltipProfileData> m_tooltips;

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xA271C8", Offset = "0xA271C8", VA = "0xA271C8")]
		public TooltipProfile()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class TooltipTrigger : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x200055A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572D98", Offset = "0x572D98")]
		private sealed class <TooltipDelay>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TooltipTrigger <>4__this;

			[Token(Token = "0x170003DA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022DD")]
				[Address(RVA = "0x878AC4", Offset = "0x878AC4", VA = "0x878AC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022DF")]
				[Address(RVA = "0x878B0C", Offset = "0x878B0C", VA = "0x878B0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022DA")]
			[Address(RVA = "0x878950", Offset = "0x878950", VA = "0x878950")]
			[DebuggerHidden]
			public <TooltipDelay>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60022DB")]
			[Address(RVA = "0x87897C", Offset = "0x87897C", VA = "0x87897C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022DC")]
			[Address(RVA = "0x878980", Offset = "0x878980", VA = "0x878980", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022DE")]
			[Address(RVA = "0x878ACC", Offset = "0x878ACC", VA = "0x878ACC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_tooltipHeader;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Multiline]
		public string m_tooltipContent;

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xA27240", Offset = "0xA27240", VA = "0xA27240", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0xA273E0", Offset = "0xA273E0", VA = "0xA273E0", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xA27464", Offset = "0xA27464", VA = "0xA27464")]
		public void OnMouseEnter()
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0xA27504", Offset = "0xA27504", VA = "0xA27504")]
		public void OnMouseExit()
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xA272DC", Offset = "0xA272DC", VA = "0xA272DC")]
		private bool TooltipsManagerPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0xA27374", Offset = "0xA27374", VA = "0xA27374")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5908E0", Offset = "0x5908E0")]
		private IEnumerator TooltipDelay()
		{
			return null;
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0xA2758C", Offset = "0xA2758C", VA = "0xA2758C")]
		public TooltipTrigger()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E5")]
	public class UIControllerType
	{
		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_name;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GaiaConstants.EnvironmentControllerType m_controllerType;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject m_controllerText;

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xC5964C", Offset = "0xC5964C", VA = "0xC5964C")]
		public UIControllerType()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class UIControllerSelection : MonoBehaviour
	{
		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<UIControllerType> m_controllerTypes;

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xC594A0", Offset = "0xC594A0", VA = "0xC594A0")]
		public void RefreshUI(GaiaConstants.EnvironmentControllerType currentController)
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xC595D4", Offset = "0xC595D4", VA = "0xC595D4")]
		public UIControllerSelection()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class GaiaDefaults : ScriptableObject
	{
		[Token(Token = "0x200055B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572DA8", Offset = "0x572DA8")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4002EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GaiaSplatPrototype newSplat;

			[Token(Token = "0x60022E0")]
			[Address(RVA = "0x91DA10", Offset = "0x91DA10", VA = "0x91DA10")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x60022E1")]
			[Address(RVA = "0x91DA18", Offset = "0x91DA18", VA = "0x91DA18")]
			internal bool <GetPrototypes>b__1(GaiaSplatPrototype x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200055C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572DB8", Offset = "0x572DB8")]
		private sealed class <>c__DisplayClass28_1
		{
			[Token(Token = "0x4002EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DetailPrototype newTerrainDetail;

			[Token(Token = "0x60022E2")]
			[Address(RVA = "0x91DB20", Offset = "0x91DB20", VA = "0x91DB20")]
			public <>c__DisplayClass28_1()
			{
			}

			[Token(Token = "0x60022E3")]
			[Address(RVA = "0x91DB28", Offset = "0x91DB28", VA = "0x91DB28")]
			internal bool <GetPrototypes>b__2(DetailPrototype x)
			{
				return default(bool);
			}

			[Token(Token = "0x60022E4")]
			[Address(RVA = "0x91DDC8", Offset = "0x91DDC8", VA = "0x91DDC8")]
			internal bool <GetPrototypes>b__3(DetailPrototype x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200055D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572DC8", Offset = "0x572DC8")]
		private sealed class <>c__DisplayClass28_2
		{
			[Token(Token = "0x4002EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TreePrototype newTree;

			[Token(Token = "0x60022E5")]
			[Address(RVA = "0x91E068", Offset = "0x91E068", VA = "0x91E068")]
			public <>c__DisplayClass28_2()
			{
			}

			[Token(Token = "0x60022E6")]
			[Address(RVA = "0x91E070", Offset = "0x91E070", VA = "0x91E070")]
			internal bool <GetPrototypes>b__4(TreePrototype x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200055E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572DD8", Offset = "0x572DD8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<BiomeSpawnerListEntry, bool> <>9__28_0;

			[Token(Token = "0x60022E8")]
			[Address(RVA = "0x91D9F0", Offset = "0x91D9F0", VA = "0x91D9F0")]
			public <>c()
			{
			}

			[Token(Token = "0x60022E9")]
			[Address(RVA = "0x91D9F8", Offset = "0x91D9F8", VA = "0x91D9F8")]
			internal bool <GetPrototypes>b__28_0(BiomeSpawnerListEntry x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5801C0", Offset = "0x5801C0")]
		[HideInInspector]
		public string m_defaultsID;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58020C", Offset = "0x58020C")]
		public float m_seaLevel;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580244", Offset = "0x580244")]
		public float m_beachHeight;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58027C", Offset = "0x58027C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x58027C", Offset = "0x58027C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58027C", Offset = "0x58027C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58027C", Offset = "0x58027C")]
		public int m_pixelError;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58030C", Offset = "0x58030C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58030C", Offset = "0x58030C")]
		public int m_baseMapDist;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580364", Offset = "0x580364")]
		public ShadowCastingMode m_shadowCastingMode;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58039C", Offset = "0x58039C")]
		public Material m_material;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5803D4", Offset = "0x5803D4")]
		public PhysicMaterial m_physicsMaterial;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58040C", Offset = "0x58040C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x58040C", Offset = "0x58040C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58040C", Offset = "0x58040C")]
		public bool m_draw;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580480", Offset = "0x580480")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580480", Offset = "0x580480")]
		public int m_detailDistance;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5804D8", Offset = "0x5804D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5804D8", Offset = "0x5804D8")]
		public float m_detailDensity;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58052C", Offset = "0x58052C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58052C", Offset = "0x58052C")]
		public int m_treeDistance;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580584", Offset = "0x580584")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580584", Offset = "0x580584")]
		public int m_billboardStart;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5805DC", Offset = "0x5805DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5805DC", Offset = "0x5805DC")]
		public int m_fadeLength;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580634", Offset = "0x580634")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580634", Offset = "0x580634")]
		public int m_maxMeshTrees;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58068C", Offset = "0x58068C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x58068C", Offset = "0x58068C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58068C", Offset = "0x58068C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58068C", Offset = "0x58068C")]
		public float m_speed;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580718", Offset = "0x580718")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580718", Offset = "0x580718")]
		public float m_size;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58076C", Offset = "0x58076C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58076C", Offset = "0x58076C")]
		public float m_bending;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5807C0", Offset = "0x5807C0")]
		public Color m_grassTint;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5807F8", Offset = "0x5807F8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5807F8", Offset = "0x5807F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5807F8", Offset = "0x5807F8")]
		public int m_terrainSize;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58086C", Offset = "0x58086C")]
		public int m_terrainHeight;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5808A4", Offset = "0x5808A4")]
		public float m_spawnDensity;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5808DC", Offset = "0x5808DC")]
		public int m_heightmapResolution;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580914", Offset = "0x580914")]
		public int m_detailResolution;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58094C", Offset = "0x58094C")]
		public int m_detailResolutionPerPatch;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580984", Offset = "0x580984")]
		public int m_controlTextureResolution;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5809BC", Offset = "0x5809BC")]
		public int m_baseMapSize;

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x82082C", Offset = "0x82082C", VA = "0x82082C")]
		public void UpdateFromTerrain()
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x820CC0", Offset = "0x820CC0", VA = "0x820CC0")]
		public static void GetPrototypes(List<BiomeSpawnerListEntry> spawnerPresetList, ref TerrainLayer[] terrainLayers, ref DetailPrototype[] terrainDetails, ref TreePrototype[] terrainTrees, [Optional] Terrain referenceTerrain)
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x822414", Offset = "0x822414", VA = "0x822414")]
		public GaiaOperation GetTerrainCreationOperation(GaiaResource resources)
		{
			return null;
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x820AEC", Offset = "0x820AEC", VA = "0x820AEC")]
		public static Terrain GetActiveTerrain()
		{
			return null;
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x82241C", Offset = "0x82241C", VA = "0x82241C")]
		public static void ApplyPrototypesToTerrain(Terrain terrain, TerrainLayer[] terrainLayers, DetailPrototype[] terrainDetails, TreePrototype[] terrainTrees)
		{
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x8225A4", Offset = "0x8225A4", VA = "0x8225A4")]
		private void RemoveWorldSeams(ref Terrain[,] world)
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x822798", Offset = "0x822798", VA = "0x822798")]
		public GaiaDefaults()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public enum DeletionTaskType
	{
		[Token(Token = "0x400164D")]
		File,
		[Token(Token = "0x400164E")]
		Directory
	}
	[Token(Token = "0x20001E9")]
	public enum MaintenanceCheckType
	{
		[Token(Token = "0x4001650")]
		Contains,
		[Token(Token = "0x4001651")]
		Equals
	}
	[Serializable]
	[Token(Token = "0x20001EA")]
	public class DeletionTask
	{
		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_pathContains;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DeletionTaskType m_taskType;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool m_includeSubDirectories;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaintenanceCheckType m_checkType;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_Name;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string m_fileExtension;

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xA1A728", Offset = "0xA1A728", VA = "0xA1A728")]
		public DeletionTask()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001EB")]
	public class RenameTask
	{
		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_oldPath;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_newPath;

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xABDD4C", Offset = "0xABDD4C", VA = "0xABDD4C")]
		public RenameTask()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class GaiaMaintenanceProfile : ScriptableObject
	{
		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<DeletionTask> m_deletionTasks;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<RenameTask> m_renameTasks;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] meshColliderPrefabPaths;

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x82BFF0", Offset = "0x82BFF0", VA = "0x82BFF0")]
		public GaiaMaintenanceProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001ED")]
	public class GaiaResource
	{
		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5809F4", Offset = "0x5809F4")]
		[HideInInspector]
		public string m_resourcesID;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580A40", Offset = "0x580A40")]
		public string m_name;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580A78", Offset = "0x580A78")]
		public float m_beachHeight;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580AB0", Offset = "0x580AB0")]
		public float m_terrainHeight;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580AE8", Offset = "0x580AE8")]
		public ResourceProtoTexture[] m_texturePrototypes;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580B20", Offset = "0x580B20")]
		public ResourceProtoDetail[] m_detailPrototypes;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580B58", Offset = "0x580B58")]
		public ResourceProtoTree[] m_treePrototypes;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580B90", Offset = "0x580B90")]
		public ResourceProtoGameObject[] m_gameObjectPrototypes;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580BC8", Offset = "0x580BC8")]
		public ResourceProtoSpawnExtension[] m_spawnExtensionPrototypes;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580C00", Offset = "0x580C00")]
		public ResourceProtoStamp[] m_stampDistributionPrototypes;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580C38", Offset = "0x580C38")]
		public ResourceProtoWorldBiomeMask[] m_worldBiomeMaskPrototypes;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580C70", Offset = "0x580C70")]
		public ResourceProtoProbe[] m_probePrototypes;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580CA8", Offset = "0x580CA8")]
		public ResourceProtoTerrainModifierStamp[] m_terrainModifierStampPrototypes;

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x8059C4", Offset = "0x8059C4", VA = "0x8059C4")]
		public bool SetAssetAssociations()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x805B7C", Offset = "0x805B7C", VA = "0x805B7C")]
		public bool AssociateAssets()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x805D34", Offset = "0x805D34", VA = "0x805D34")]
		public void DeletePrototypes()
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x805DF4", Offset = "0x805DF4", VA = "0x805DF4")]
		public bool PrototypesMissingFromTerrain()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x805FFC", Offset = "0x805FFC", VA = "0x805FFC")]
		public bool PrototypeMissingFromTerrain(GaiaConstants.SpawnerResourceType resourceType, int resourceIdx, [Optional] Terrain terrain)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x8060B0", Offset = "0x8060B0", VA = "0x8060B0")]
		public int PrototypeIdxInTerrain(GaiaConstants.SpawnerResourceType resourceType, int resourceIdx, [Optional] Terrain terrain)
		{
			return default(int);
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x806798", Offset = "0x806798", VA = "0x806798")]
		public List<GaiaSplatPrototype> GetSplatPrototypes()
		{
			return null;
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x8064C8", Offset = "0x8064C8", VA = "0x8064C8")]
		public bool ResourceIdxOutOfBounds(GaiaConstants.SpawnerResourceType resourceType, int resourceIdx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x8069B4", Offset = "0x8069B4", VA = "0x8069B4")]
		public List<DetailPrototype> GetDetailPrototypes()
		{
			return null;
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x80656C", Offset = "0x80656C", VA = "0x80656C")]
		public bool ResourceIsInUnity(GaiaConstants.SpawnerResourceType resourceType, int resourceIdx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x806CD4", Offset = "0x806CD4", VA = "0x806CD4")]
		public List<TreePrototype> GetTreePrototypes()
		{
			return null;
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x806EE8", Offset = "0x806EE8", VA = "0x806EE8")]
		public void UpdatePrototypesFromTerrain()
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x808C44", Offset = "0x808C44", VA = "0x808C44")]
		private string GetUniqueName(string name, ref Dictionary<string, string> names)
		{
			return null;
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x808D40", Offset = "0x808D40", VA = "0x808D40")]
		private void UpdateDNA(GameObject prefab, ref ResourceProtoDNA dna)
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x808FF0", Offset = "0x808FF0", VA = "0x808FF0")]
		public void ChangeHeight(float oldHeight, float newHeight)
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x809254", Offset = "0x809254", VA = "0x809254")]
		public void ChangeSeaLevel(float newSeaLevel)
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x8092B4", Offset = "0x8092B4", VA = "0x8092B4")]
		public void ChangeSeaLevel(float oldSeaLevel, float newSeaLevel)
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x809548", Offset = "0x809548", VA = "0x809548")]
		public void ApplyPrototypesToTerrain()
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x809660", Offset = "0x809660", VA = "0x809660")]
		public void ApplyPrototypesToTerrain(Terrain terrain, TerrainLayer[] terrainLayers, List<DetailPrototype> terrainDetails, List<TreePrototype> terrainTrees)
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x809818", Offset = "0x809818", VA = "0x809818")]
		public void AddMissingPrototypesToTerrain()
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x80989C", Offset = "0x80989C", VA = "0x80989C")]
		public void AddMissingPrototypesToTerrain(Terrain terrain)
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x80A2E8", Offset = "0x80A2E8", VA = "0x80A2E8")]
		public void AddPrototypeToTerrain(GaiaConstants.SpawnerResourceType resourceType, int resourceIdx, [Optional] Terrain[] terrains)
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x80A388", Offset = "0x80A388", VA = "0x80A388")]
		public void AddPrototypeToTerrain(GaiaConstants.SpawnerResourceType resourceType, int resourceIdx, Terrain terrain)
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x80AAA0", Offset = "0x80AAA0", VA = "0x80AAA0")]
		public bool ChecksTextures()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x80ABF4", Offset = "0x80ABF4", VA = "0x80ABF4")]
		public bool ChecksProximity()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x80AD48", Offset = "0x80AD48", VA = "0x80AD48")]
		public void AddGameObject(GameObject prefab)
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x80AE0C", Offset = "0x80AE0C", VA = "0x80AE0C")]
		public void AddGameObject(List<GameObject> prototypes)
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x80AEAC", Offset = "0x80AEAC", VA = "0x80AEAC")]
		public GameObject CreateCoverageTextureSpawner(float range, float increment)
		{
			return null;
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x80B3E8", Offset = "0x80B3E8", VA = "0x80B3E8")]
		public GameObject CreateCoverageDetailSpawner(float range, float increment)
		{
			return null;
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x80B338", Offset = "0x80B338", VA = "0x80B338")]
		public GameObject CreateOrFindSessionManager()
		{
			return null;
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x80B9CC", Offset = "0x80B9CC", VA = "0x80B9CC")]
		public GameObject CreateClusteredDetailSpawner(float range, float increment)
		{
			return null;
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x80BE70", Offset = "0x80BE70", VA = "0x80BE70")]
		public GameObject CreateClusteredTreeSpawner(float range)
		{
			return null;
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x80C2F8", Offset = "0x80C2F8", VA = "0x80C2F8")]
		public GameObject CreateCoverageTreeSpawner(float range)
		{
			return null;
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x80C784", Offset = "0x80C784", VA = "0x80C784")]
		public GameObject CreateCoverageGameObjectSpawner(float range)
		{
			return null;
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x80CBD8", Offset = "0x80CBD8", VA = "0x80CBD8")]
		public GameObject CreateCoverageGameObjectSpawnerForTrees(float range)
		{
			return null;
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x80D0A8", Offset = "0x80D0A8", VA = "0x80D0A8")]
		public GameObject CreateClusteredGameObjectSpawner(float range)
		{
			return null;
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x80D4D8", Offset = "0x80D4D8", VA = "0x80D4D8")]
		public GameObject CreateClusteredGameObjectSpawnerForTrees(float range)
		{
			return null;
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x80D92C", Offset = "0x80D92C", VA = "0x80D92C")]
		public void ExportTexture()
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x80DD48", Offset = "0x80DD48", VA = "0x80DD48")]
		public GaiaResource()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class GaiaSettings : ScriptableObject
	{
		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x580CE0", Offset = "0x580CE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580CE0", Offset = "0x580CE0")]
		public GaiaConstants.EnvironmentControllerType m_currentController;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580D40", Offset = "0x580D40")]
		public GameObject m_customPlayerObject;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580D78", Offset = "0x580D78")]
		public Camera m_customPlayerCamera;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_instantiateCustomControllers;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580DB0", Offset = "0x580DB0")]
		public GaiaConstants.EnvironmentSize m_currentSize;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580DE8", Offset = "0x580DE8")]
		public GaiaConstants.EnvironmentTarget m_currentEnvironment;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580E20", Offset = "0x580E20")]
		public GaiaConstants.EnvironmentRenderer m_currentRenderer;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580E58", Offset = "0x580E58")]
		public GaiaDefaults m_currentDefaults;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580E90", Offset = "0x580E90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580E90", Offset = "0x580E90")]
		public int m_tilesX;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x580EE4", Offset = "0x580EE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580EE4", Offset = "0x580EE4")]
		public int m_tilesZ;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580F38", Offset = "0x580F38")]
		public bool m_createTerrainScenes;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580F70", Offset = "0x580F70")]
		public bool m_unloadTerrainScenes;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580FA8", Offset = "0x580FA8")]
		public bool m_floatingPointFix;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public GaiaConstants.EnvironmentSizePreset m_targeSizePreset;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x580FE0", Offset = "0x580FE0")]
		public GaiaConstants.TerrainCreationWorkflow m_creationWorkflow;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581018", Offset = "0x581018")]
		public SpawnerSettings m_defaultStampSpawnSettings;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581050", Offset = "0x581050")]
		public SpawnerSettings m_defaultBiomeMaskSettings;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ComputeShader m_spawnSimulateComputeShader;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ComputeShader m_terrainHeightsComputeShader;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ComputeShader m_spawnStampsComputeShader;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ComputeShader m_WDHeightsComputeShader;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581088", Offset = "0x581088")]
		public float m_currentSizeDivisor;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5810C0", Offset = "0x5810C0")]
		public string m_currentPlayerPrefabName;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5810F8", Offset = "0x5810F8")]
		public GameObject m_flyCamUI;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581130", Offset = "0x581130")]
		public string m_currentWaterPrefabName;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581168", Offset = "0x581168")]
		public bool m_saveCollisionCacheWhenSaving;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5811A0", Offset = "0x5811A0")]
		public long m_terrainUnloadMemoryTreshold;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5811D8", Offset = "0x5811D8")]
		public TerrainLayer m_worldmapLayer;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581210", Offset = "0x581210")]
		public bool m_enableAmbientAudio;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581248", Offset = "0x581248")]
		public bool m_enablePostProcessing;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581280", Offset = "0x581280")]
		public bool m_enableLocationManager;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5812B8", Offset = "0x5812B8")]
		public bool m_enableLoadingScreen;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5812F0", Offset = "0x5812F0")]
		public bool m_quickBakeLighting;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581328", Offset = "0x581328")]
		public GaiaConstants.PostFX m_currentPostFX;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581360", Offset = "0x581360")]
		public GaiaConstants.Water m_currentWater;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581398", Offset = "0x581398")]
		public bool m_enableUnderwaterEffects;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5813D0", Offset = "0x5813D0")]
		public bool m_createWind;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public GaiaConstants.GaiaGlobalWindType m_windType;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581408", Offset = "0x581408")]
		public bool m_createScreenShotter;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581440", Offset = "0x581440")]
		public bool m_focusPlayerOnSetup;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581478", Offset = "0x581478")]
		public float m_FPFDefaultThreshold;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5814B0", Offset = "0x5814B0")]
		public string m_XRControllerPackageName;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5814E8", Offset = "0x5814E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5814E8", Offset = "0x5814E8")]
		public string m_biomesDirectory;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581548", Offset = "0x581548")]
		public string m_screenshotsDirectory;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581580", Offset = "0x581580")]
		public string m_sessionsDirectory;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5815B8", Offset = "0x5815B8")]
		public string m_userSettingsDirectory;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5815F0", Offset = "0x5815F0")]
		public string m_userStampsDirectory;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x581628", Offset = "0x581628")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581628", Offset = "0x581628")]
		public Color m_actionButtonColor;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581688", Offset = "0x581688")]
		public Color m_actionButtonProColor;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5816C0", Offset = "0x5816C0")]
		public Color m_stamperPreviewButtonColor;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5816F8", Offset = "0x5816F8")]
		public Color m_stamperPositiveHeightChangeColor;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581730", Offset = "0x581730")]
		public Color m_stamperNegativeHeightChangeColor;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581768", Offset = "0x581768")]
		public Color m_stamperSeaLevelTintColor;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5817A0", Offset = "0x5817A0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5817A0", Offset = "0x5817A0")]
		public float m_stamperNormalMapColorPower;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5817F4", Offset = "0x5817F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5817F4", Offset = "0x5817F4")]
		public long m_stamperAutoHidePreviewMilliseconds;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581854", Offset = "0x581854")]
		public long m_autoTextureTreshold;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58188C", Offset = "0x58188C")]
		public Texture2D m_defaultStamp;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5818C4", Offset = "0x5818C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5818C4", Offset = "0x5818C4")]
		public bool m_hideObjectsInHierachy;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581924", Offset = "0x581924")]
		public Gradient m_spawnerColorGradient;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58195C", Offset = "0x58195C")]
		public long m_spawnerAutoHidePreviewMilliseconds;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581994", Offset = "0x581994")]
		public int m_spawnerWorldSpawnRange;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5819CC", Offset = "0x5819CC")]
		public int m_gameObjectCountWarningThreshold;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581A04", Offset = "0x581A04")]
		public GameObject m_boxStandInPrefab;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581A3C", Offset = "0x581A3C")]
		public bool m_disableTerrainModifierWarning;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x581A74", Offset = "0x581A74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581A74", Offset = "0x581A74")]
		public int m_maxWorldDesignerPreviewStamps;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581AD4", Offset = "0x581AD4")]
		public Mesh m_worldDesignerSampleObjectMesh1;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581B0C", Offset = "0x581B0C")]
		public Mesh m_worldDesignerSampleObjectMesh2;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581B44", Offset = "0x581B44")]
		public Mesh m_worldDesignerSampleObjectMesh3;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public Material m_worldDesignerSampleObjectsMaterial;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x581B7C", Offset = "0x581B7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581B7C", Offset = "0x581B7C")]
		public string m_publisherName;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581BDC", Offset = "0x581BDC")]
		public string m_fpsPlayerPrefabName;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581C14", Offset = "0x581C14")]
		public string m_3pPlayerPrefabName;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581C4C", Offset = "0x581C4C")]
		public string m_rbPlayerPrefabName;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581C84", Offset = "0x581C84")]
		public string m_carPlayerPrefabName;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581CBC", Offset = "0x581CBC")]
		public string m_waterMobilePrefabName;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581CF4", Offset = "0x581CF4")]
		public string m_waterPrefabName;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581D2C", Offset = "0x581D2C")]
		public bool m_showTooltips;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x581D64", Offset = "0x581D64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581D64", Offset = "0x581D64")]
		public GaiaDefaults m_ultraLightDefaults;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581DC4", Offset = "0x581DC4")]
		public GaiaResource m_ultraLightResources;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581DFC", Offset = "0x581DFC")]
		public GaiaResource m_ultraLightGameObjectResources;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581E34", Offset = "0x581E34")]
		public GaiaDefaults m_mobileDefaults;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581E6C", Offset = "0x581E6C")]
		public GaiaResource m_mobileResources;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581EA4", Offset = "0x581EA4")]
		public GaiaResource m_mobileGameObjectResources;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581EDC", Offset = "0x581EDC")]
		public GaiaDefaults m_desktopDefaults;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581F14", Offset = "0x581F14")]
		public GaiaResource m_desktopResources;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581F4C", Offset = "0x581F4C")]
		public GaiaResource m_desktopGameObjectResources;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581F84", Offset = "0x581F84")]
		public GaiaDefaults m_powerDesktopDefaults;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581FBC", Offset = "0x581FBC")]
		public GaiaResource m_powerDesktopResources;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x581FF4", Offset = "0x581FF4")]
		public GaiaResource m_powerDesktopGameObjectResources;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58202C", Offset = "0x58202C")]
		public GaiaLightingProfile m_gaiaLightingProfile;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public GaiaWaterProfile m_gaiaWaterProfile;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x582064", Offset = "0x582064")]
		public string m_gaiaProURL;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public UnityPipelineProfile m_pipelineProfile;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58209C", Offset = "0x58209C")]
		public GaiaConstants.PositionType m_terrainOpListPositionType;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		public Vector2 m_terrainOpListPosition;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		public GaiaConstants.PositionType m_terrainOpListSizeType;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public Vector2 m_terrainOpListSize;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public GaiaConstants.PositionType m_gaiaPanelPositionType;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		public Vector2 m_gaiaPanelPosition;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		public GaiaConstants.PositionType m_gaiaPanelSizeType;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public Vector2 m_gaiaPanelSize;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5820D4", Offset = "0x5820D4")]
		public int m_gaiaPanelSliderDelay;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58210C", Offset = "0x58210C")]
		public long m_lastWebUpdate;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public bool m_hideHeroMessage;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public string m_latestNewsTitle;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public string m_latestNewsBody;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public string m_latestNewsUrl;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		public Texture2D m_latestNewsImage;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x582144", Offset = "0x582144")]
		public Texture2D m_originUIProBackgroundPro;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		public Texture2D m_originUIBackground;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		public Texture2D m_originUIUnfoldUp;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		public Texture2D m_originUIUnfoldDown;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		public Texture2D m_originUIProUnfoldUp;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		public Texture2D m_originUIProUnfoldDown;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58217C", Offset = "0x58217C")]
		public Texture2D m_IconCancel;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		public Texture2D m_IconCopy;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		public Texture2D m_IconDown;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		public Texture2D m_IconUp;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		public Texture2D m_IconDuplicate;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		public Texture2D m_IconPaste;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		public Texture2D m_IconRemove;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		public Texture2D m_IconVisible;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		public Texture2D m_IconVisibleDisabled;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5821B4", Offset = "0x5821B4")]
		public Texture2D m_IconProCancel;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		public Texture2D m_IconProCopy;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		public Texture2D m_IconProDown;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		public Texture2D m_IconProUp;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		public Texture2D m_IconProDuplicate;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		public Texture2D m_IconProPaste;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		public Texture2D m_IconProRemove;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		public Texture2D m_IconProVisible;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		public Texture2D m_IconProVisibleDisabled;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		[HideInInspector]
		public int m_biomePresetSelection;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		[HideInInspector]
		public List<BiomeSpawnerListEntry> m_BiomeSpawnersToCreate;

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x9F5590", Offset = "0x9F5590", VA = "0x9F5590")]
		public Color GetActionButtonColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x9F55A4", Offset = "0x9F55A4", VA = "0x9F55A4")]
		public GaiaSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001EF")]
	public class GaiaWorldManager
	{
		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Bounds m_worldBoundsWU;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_worldBoundsWUMin;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_worldBoundsWUMax;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 m_worldBoundsWUSize;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Bounds m_worldBoundsTU;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_worldBoundsTUMin;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_worldBoundsTUMax;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 m_worldBoundsTUSize;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Bounds m_worldBoundsNU;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 m_worldBoundsNUMin;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 m_worldBoundsNUMax;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 m_WUtoTU;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector3 m_TUtoWU;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 m_TUtoNU;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 m_NUtoTU;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 m_WUtoNU;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Vector3 m_NUtoWU;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3 m_NUZeroOffset;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector3 m_TUZeroOffset;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private ulong m_boundsCheckErrors;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Terrain[,] m_physicalTerrainArray;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private UnityHeightMap[,] m_heightMapTerrainArray;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private int m_tileCount;

		[Token(Token = "0x1700017B")]
		public int TileCount
		{
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0xA06704", Offset = "0xA06704", VA = "0xA06704")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700017C")]
		public Terrain[,] PhysicalTerrainArray
		{
			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0xA0670C", Offset = "0xA0670C", VA = "0xA0670C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0xA06714", Offset = "0xA06714", VA = "0xA06714")]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		public UnityHeightMap[,] HeightMapTerrainArray
		{
			[Token(Token = "0x6000F0E")]
			[Address(RVA = "0xA0671C", Offset = "0xA0671C", VA = "0xA0671C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F0F")]
			[Address(RVA = "0xA06724", Offset = "0xA06724", VA = "0xA06724")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public Bounds WorldBoundsWU
		{
			[Token(Token = "0x6000F10")]
			[Address(RVA = "0xA0672C", Offset = "0xA0672C", VA = "0xA0672C")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x1700017F")]
		public Bounds WorldBoundsTU
		{
			[Token(Token = "0x6000F11")]
			[Address(RVA = "0xA06740", Offset = "0xA06740", VA = "0xA06740")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x17000180")]
		public Bounds WorldBoundsNU
		{
			[Token(Token = "0x6000F12")]
			[Address(RVA = "0xA06754", Offset = "0xA06754", VA = "0xA06754")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x17000181")]
		public Vector3 WUtoTUConversionFactor
		{
			[Token(Token = "0x6000F13")]
			[Address(RVA = "0xA06768", Offset = "0xA06768", VA = "0xA06768")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000182")]
		public Vector3 WUtoNUConversionFactor
		{
			[Token(Token = "0x6000F14")]
			[Address(RVA = "0xA06774", Offset = "0xA06774", VA = "0xA06774")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000183")]
		public ulong BoundsCheckErrors
		{
			[Token(Token = "0x6000F15")]
			[Address(RVA = "0xA06780", Offset = "0xA06780", VA = "0xA06780")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000F16")]
			[Address(RVA = "0xA06788", Offset = "0xA06788", VA = "0xA06788")]
			set
			{
			}
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xA0508C", Offset = "0xA0508C", VA = "0xA0508C")]
		public GaiaWorldManager()
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xA05138", Offset = "0xA05138", VA = "0xA05138")]
		public GaiaWorldManager(Terrain[] terrains, bool isWorldMap = false)
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xA05B8C", Offset = "0xA05B8C", VA = "0xA05B8C")]
		public string IsValidWorld(Terrain[] terrains, bool isWorldMap)
		{
			return null;
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xA06790", Offset = "0xA06790", VA = "0xA06790")]
		private Terrain GetTerrainWU(Vector3 positionWU)
		{
			return null;
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xA06898", Offset = "0xA06898", VA = "0xA06898")]
		private Terrain GetTerrainTU(Vector3 positionTU)
		{
			return null;
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xA06A10", Offset = "0xA06A10", VA = "0xA06A10")]
		private Terrain GetTerrainNU(Vector3 positionNU)
		{
			return null;
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xA06B44", Offset = "0xA06B44", VA = "0xA06B44")]
		private UnityHeightMap GetHeightMapWU(Vector3 positionWU)
		{
			return null;
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xA06D18", Offset = "0xA06D18", VA = "0xA06D18")]
		private UnityHeightMap GetHeightMapTU(Vector3 positionTU)
		{
			return null;
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xA06EF8", Offset = "0xA06EF8", VA = "0xA06EF8")]
		private UnityHeightMap GetHeightMapNU(Vector3 positionNU)
		{
			return null;
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xA070C4", Offset = "0xA070C4", VA = "0xA070C4")]
		public void LoadFromWorld()
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xA07288", Offset = "0xA07288", VA = "0xA07288")]
		public bool SaveToWorld(bool forceWrite = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xA073A8", Offset = "0xA073A8", VA = "0xA073A8")]
		public bool UpdatePhysicalTerrainArray()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xA07570", Offset = "0xA07570", VA = "0xA07570")]
		public void SetHeightWU(float heightWU)
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0xA0765C", Offset = "0xA0765C", VA = "0xA0765C")]
		public void SetHeightWU(Vector3 positionWU, float height)
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0xA07730", Offset = "0xA07730", VA = "0xA07730")]
		public float GetHeightWU(Vector3 positionWU)
		{
			return default(float);
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0xA077B4", Offset = "0xA077B4", VA = "0xA077B4")]
		public float GetHeightInterpolatedWU(Vector3 positionWU)
		{
			return default(float);
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0xA07834", Offset = "0xA07834", VA = "0xA07834")]
		public void SetHeightTU(Vector3 positionTU, float height)
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0xA07928", Offset = "0xA07928", VA = "0xA07928")]
		public float GetHeightTU(Vector3 positionTU)
		{
			return default(float);
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xA0799C", Offset = "0xA0799C", VA = "0xA0799C")]
		public float GetHeightInterpolatedTU(Vector3 positionTU)
		{
			return default(float);
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0xA07A08", Offset = "0xA07A08", VA = "0xA07A08")]
		public void FlattenWorld()
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0xA07A80", Offset = "0xA07A80", VA = "0xA07A80")]
		public void FlattenTerrain(Terrain t)
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0xA07B9C", Offset = "0xA07B9C", VA = "0xA07B9C")]
		public void SmoothWorld()
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xA07C80", Offset = "0xA07C80", VA = "0xA07C80")]
		public void ExportWorldAsPng(string path)
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xA07DDC", Offset = "0xA07DDC", VA = "0xA07DDC")]
		public void ExportSplatmapAsPng(string path, int textureIdx)
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xA07FDC", Offset = "0xA07FDC", VA = "0xA07FDC")]
		public void ExportGrassmapAsPng(string path)
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xA0839C", Offset = "0xA0839C", VA = "0xA0839C")]
		public void ExportNormalmapAsPng(string path)
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xA08420", Offset = "0xA08420", VA = "0xA08420")]
		public void ExportNormalmapAsPng1(string path)
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xA08884", Offset = "0xA08884", VA = "0xA08884")]
		public void ExportWaterflowMapAsPng(int iterations, string path)
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xA08B54", Offset = "0xA08B54", VA = "0xA08B54")]
		public void ExportShorelineMask(string path, float shoreHeightWU, float shoreWidthWU)
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xA08CB4", Offset = "0xA08CB4", VA = "0xA08CB4")]
		private void MakeMask(Vector3 positionTU, float shoreHeightNU, float maskSizeTU, HeightMap waterMask)
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xA06858", Offset = "0xA06858", VA = "0xA06858")]
		public bool InBoundsWU(Vector3 positionWU)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xA06970", Offset = "0xA06970", VA = "0xA06970")]
		public bool InBoundsTU(Vector3 positionTU)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xA06AC8", Offset = "0xA06AC8", VA = "0xA06AC8")]
		public bool InBoundsNU(Vector3 positionNU)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xA08C9C", Offset = "0xA08C9C", VA = "0xA08C9C")]
		public Vector3 WUtoTU(Vector3 positionWU)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xA08E3C", Offset = "0xA08E3C", VA = "0xA08E3C")]
		public Vector3 WUtoNU(Vector3 positionWU)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xA066D0", Offset = "0xA066D0", VA = "0xA066D0")]
		public Vector3 WUtoPTI(Vector3 positionWU)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xA076EC", Offset = "0xA076EC", VA = "0xA076EC")]
		public Vector3 WUtoPTO(Vector3 positionWU)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0xA08E54", Offset = "0xA08E54", VA = "0xA08E54")]
		public Vector3 TUtoWU(Vector3 positionTU)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xA08E6C", Offset = "0xA08E6C", VA = "0xA08E6C")]
		public Vector3 TUtoNU(Vector3 positionTU)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0xA069B0", Offset = "0xA069B0", VA = "0xA069B0")]
		public void TUtoPTI(ref Vector3 positionTU)
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xA078C0", Offset = "0xA078C0", VA = "0xA078C0")]
		public void TUtoPTO(ref Vector3 positionTU)
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xA08E84", Offset = "0xA08E84", VA = "0xA08E84")]
		public Vector3 NUtoWU(Vector3 positionNU)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xA08E9C", Offset = "0xA08E9C", VA = "0xA08E9C")]
		public Vector3 NUtoTU(Vector3 positionNU)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xA06B08", Offset = "0xA06B08", VA = "0xA06B08")]
		public void NUtoPTI(ref Vector3 positionNU)
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xA08EB4", Offset = "0xA08EB4", VA = "0xA08EB4")]
		public void NUtoPTO(ref Vector3 positionNU)
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xA08F40", Offset = "0xA08F40", VA = "0xA08F40")]
		public Vector3 Ceil(Vector3 source)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xA08F50", Offset = "0xA08F50", VA = "0xA08F50")]
		public Vector3 Floor(Vector3 source)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xA08F60", Offset = "0xA08F60", VA = "0xA08F60")]
		public void Test()
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xA0A948", Offset = "0xA0A948", VA = "0xA0A948")]
		public void TestBlobWU(Vector3 positionWU, int widthWU, float height)
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xA0AA18", Offset = "0xA0AA18", VA = "0xA0AA18")]
		public void TestBlobTU(Vector3 positionTU, int widthWU, float height)
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public enum SpawnScale
	{
		[Token(Token = "0x4001708")]
		Fixed,
		[Token(Token = "0x4001709")]
		Fitness,
		[Token(Token = "0x400170A")]
		Random,
		[Token(Token = "0x400170B")]
		FitnessRandomized
	}
	[Token(Token = "0x20001F1")]
	public struct ProtoDNAInst
	{
		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ResourceProtoDNA dna;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 locationWU;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 locationTU;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int age;
	}
	[Serializable]
	[Token(Token = "0x20001F2")]
	public class ResourceProtoDNA
	{
		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58220C", Offset = "0x58220C")]
		public float m_boundsRadius;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m_scaleMultiplier;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582244", Offset = "0x582244")]
		public string m_extParam;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public int m_protoIdx;

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xAC4130", Offset = "0xAC4130", VA = "0xAC4130")]
		public void Update(int protoIdx)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xAC4138", Offset = "0xAC4138", VA = "0xAC4138")]
		public void Update(int protoIdx, float width, float height)
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xAC4144", Offset = "0xAC4144", VA = "0xAC4144")]
		public void Update(int protoIdx, float width, float height, float minscale, float maxscale)
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xAC414C", Offset = "0xAC414C", VA = "0xAC414C")]
		public ResourceProtoDNA()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F3")]
	public class ResourceProtoDetail
	{
		[Token(Token = "0x200055F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572DE8", Offset = "0x572DE8")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4002EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ResourceProtoDetail <>4__this;

			[Token(Token = "0x4002EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DetailScriptableObject oldObject;

			[Token(Token = "0x60022EA")]
			[Address(RVA = "0x8717A4", Offset = "0x8717A4", VA = "0x8717A4")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x60022EB")]
			[Address(RVA = "0x8717AC", Offset = "0x8717AC", VA = "0x8717AC")]
			internal void <UpdateAllTerrainsWithNewSettingsSO>b__0(Terrain terrain)
			{
			}
		}

		[Token(Token = "0x2000560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572DF8", Offset = "0x572DF8")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4002EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DetailScriptableObject oldObject;

			[Token(Token = "0x60022EC")]
			[Address(RVA = "0x8717D0", Offset = "0x8717D0", VA = "0x8717D0")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x60022ED")]
			[Address(RVA = "0x8717D8", Offset = "0x8717D8", VA = "0x8717D8")]
			internal bool <UpdateSingleTerrainWithNewSettingsSO>b__0(DetailOverrideData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58228C", Offset = "0x58228C")]
		public string m_name;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5822C4", Offset = "0x5822C4")]
		public DetailRenderMode m_renderMode;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5822FC", Offset = "0x5822FC")]
		public GameObject m_detailProtoype;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public string m_detailPrototypeFileName;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582344", Offset = "0x582344")]
		public Texture2D m_detailTexture;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public string m_detailTextureFileName;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58238C", Offset = "0x58238C")]
		public float m_minWidth;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5823C4", Offset = "0x5823C4")]
		public float m_maxWidth;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5823FC", Offset = "0x5823FC")]
		public float m_minHeight;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582434", Offset = "0x582434")]
		public float m_maxHeight;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58246C", Offset = "0x58246C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58246C", Offset = "0x58246C")]
		public float m_noiseSpread;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5824C0", Offset = "0x5824C0")]
		public Color m_healthyColour;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5824F8", Offset = "0x5824F8")]
		public Color m_dryColour;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582530", Offset = "0x582530")]
		public bool m_usePWGrass;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private DetailScriptableObject m_pwDetailerSettingsObject;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string m_detailerSettingsObjectAssetGUID;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int m_detailerSettingsObjectInstanceID;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582578", Offset = "0x582578")]
		public ResourceProtoDNA m_dna;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5825B0", Offset = "0x5825B0")]
		public SpawnCritera[] m_spawnCriteria;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5825E8", Offset = "0x5825E8")]
		public SpawnRuleExtension[] m_spawnExtensions;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool m_dnaFoldedOut;

		[Token(Token = "0x17000184")]
		public DetailScriptableObject DetailerSettingsObject
		{
			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0xAC41A8", Offset = "0xAC41A8", VA = "0xAC41A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F4C")]
			[Address(RVA = "0xAC422C", Offset = "0xAC422C", VA = "0xAC422C")]
			set
			{
			}
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xAC4300", Offset = "0xAC4300", VA = "0xAC4300")]
		public void InstantiateDetailerSettingsGO()
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xAC4408", Offset = "0xAC4408", VA = "0xAC4408")]
		public void Initialise(Spawner spawner)
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xAC4484", Offset = "0xAC4484", VA = "0xAC4484")]
		public bool HasActiveCriteria()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xAC44F0", Offset = "0xAC44F0", VA = "0xAC44F0")]
		public bool SetAssetAssociations()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xAC44F8", Offset = "0xAC44F8", VA = "0xAC44F8")]
		public bool AssociateAssets()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xAC4500", Offset = "0xAC4500", VA = "0xAC4500")]
		public bool ChecksTextures()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xAC4574", Offset = "0xAC4574", VA = "0xAC4574")]
		public bool ChecksProximity()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xAC45E8", Offset = "0xAC45E8", VA = "0xAC45E8")]
		public void AddTags(ref List<string> tagList)
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xAC4404", Offset = "0xAC4404", VA = "0xAC4404")]
		public void SaveGrassSettingsFile(bool allowOverWrite = false, string name = "")
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xAC46F4", Offset = "0xAC46F4", VA = "0xAC46F4")]
		public void UpdateAllTerrainsWithNewSettingsSO(DetailScriptableObject oldObject)
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xAC4868", Offset = "0xAC4868", VA = "0xAC4868")]
		public void UpdateSingleTerrainWithNewSettingsSO(Terrain t, DetailScriptableObject oldObject)
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xAC4B14", Offset = "0xAC4B14", VA = "0xAC4B14")]
		public void RemoveSettingsSOFromAllTerrains()
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xAC4C1C", Offset = "0xAC4C1C", VA = "0xAC4C1C")]
		public void RemoveSettingsSOFromSingleTerrain(Terrain t)
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xAC4C20", Offset = "0xAC4C20", VA = "0xAC4C20")]
		public void CopySettingsAndApply(DetailScriptableObject oldObject)
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xAC4C98", Offset = "0xAC4C98", VA = "0xAC4C98")]
		public void CreateNewDetailerSettingsObject()
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xAC4D40", Offset = "0xAC4D40", VA = "0xAC4D40")]
		public ResourceProtoDetail()
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xAC4E00", Offset = "0xAC4E00", VA = "0xAC4E00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590940", Offset = "0x590940")]
		private void <RemoveSettingsSOFromAllTerrains>b__35_0(Terrain terrain)
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class ResourceProtoDetailSO : ScriptableObject
	{
		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ResourceProtoDetail m_detail;

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xAC4E04", Offset = "0xAC4E04", VA = "0xAC4E04")]
		public ResourceProtoDetailSO()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F5")]
	public class ResourceProtoGameObjectInstance
	{
		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582620", Offset = "0x582620")]
		public string m_name;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582658", Offset = "0x582658")]
		public GameObject m_desktopPrefab;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public string m_desktopPrefabFileName;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5826A0", Offset = "0x5826A0")]
		public int m_minInstances;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5826D8", Offset = "0x5826D8")]
		public int m_maxInstances;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582710", Offset = "0x582710")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x582710", Offset = "0x582710")]
		public float m_failureRate;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582764", Offset = "0x582764")]
		public float m_minSpawnOffsetX;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58279C", Offset = "0x58279C")]
		public float m_maxSpawnOffsetX;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5827D4", Offset = "0x5827D4")]
		public float m_minSpawnOffsetY;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58280C", Offset = "0x58280C")]
		public float m_maxSpawnOffsetY;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582844", Offset = "0x582844")]
		public float m_minSpawnOffsetZ;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58287C", Offset = "0x58287C")]
		public float m_maxSpawnOffsetZ;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5828B4", Offset = "0x5828B4")]
		public bool m_rotateToSlope;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5828EC", Offset = "0x5828EC")]
		public bool m_yOffsetToSlope;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582924", Offset = "0x582924")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x582924", Offset = "0x582924")]
		public float m_minRotationOffsetX;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582980", Offset = "0x582980")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x582980", Offset = "0x582980")]
		public float m_maxRotationOffsetX;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5829DC", Offset = "0x5829DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5829DC", Offset = "0x5829DC")]
		public float m_minRotationOffsetY;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582A38", Offset = "0x582A38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x582A38", Offset = "0x582A38")]
		public float m_maxRotationOffsetY;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582A94", Offset = "0x582A94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x582A94", Offset = "0x582A94")]
		public float m_minRotationOffsetZ;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582AF0", Offset = "0x582AF0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x582AF0", Offset = "0x582AF0")]
		public float m_maxRotationOffsetZ;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582B4C", Offset = "0x582B4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x582B4C", Offset = "0x582B4C")]
		public float m_minScale;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582BA0", Offset = "0x582BA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x582BA0", Offset = "0x582BA0")]
		public float m_maxScale;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582BF4", Offset = "0x582BF4")]
		public AnimationCurve m_scaleByDistance;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582C2C", Offset = "0x582C2C")]
		public float m_localBounds;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582C64", Offset = "0x582C64")]
		public bool m_virginTerrain;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582C9C", Offset = "0x582C9C")]
		public string m_extParam;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public SpawnScale m_spawnScale;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool m_commonScale;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 m_minXYZScale;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector3 m_maxXYZScale;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float m_scaleRandomPercentage;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Vector3 m_XYZScaleRandomPercentage;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public bool m_foldedOut;

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xAC51C4", Offset = "0xAC51C4", VA = "0xAC51C4")]
		public ResourceProtoGameObjectInstance()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F6")]
	public class ResourceProtoGameObject
	{
		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582CE4", Offset = "0x582CE4")]
		public string m_name;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582D1C", Offset = "0x582D1C")]
		public ResourceProtoGameObjectInstance[] m_instances;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582D54", Offset = "0x582D54")]
		public ResourceProtoDNA m_dna;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582D8C", Offset = "0x582D8C")]
		public SpawnCritera[] m_spawnCriteria;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582DC4", Offset = "0x582DC4")]
		public SpawnRuleExtension[] m_spawnExtensions;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582DFC", Offset = "0x582DFC")]
		public bool m_canSpawnAsTree;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[HideInInspector]
		public bool m_instancesFoldOut;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool m_dnaFoldedOut;

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xAC4E0C", Offset = "0xAC4E0C", VA = "0xAC4E0C")]
		public void Initialise(Spawner spawner)
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xAC4E88", Offset = "0xAC4E88", VA = "0xAC4E88")]
		public bool HasActiveCriteria()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xAC4EF4", Offset = "0xAC4EF4", VA = "0xAC4EF4")]
		public bool SetAssetAssociations()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xAC4EFC", Offset = "0xAC4EFC", VA = "0xAC4EFC")]
		public bool AssociateAssets()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xAC4F04", Offset = "0xAC4F04", VA = "0xAC4F04")]
		public bool ChecksTextures()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xAC4F78", Offset = "0xAC4F78", VA = "0xAC4F78")]
		public bool ChecksProximity()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xAC4FEC", Offset = "0xAC4FEC", VA = "0xAC4FEC")]
		public void AddTags(ref List<string> tagList)
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xAC50F8", Offset = "0xAC50F8", VA = "0xAC50F8")]
		public ResourceProtoGameObject()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class ResourceProtoGameObjectSO : ScriptableObject
	{
		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ResourceProtoGameObject m_gameObject;

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xAC5380", Offset = "0xAC5380", VA = "0xAC5380")]
		public ResourceProtoGameObjectSO()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F8")]
	public class ResourceProtoSpawnExtensionInstance
	{
		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_name;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_spawnerPrefab;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_spawnerPrefabFileName;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int m_minSpawnerRuns;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int m_maxSpawnerRuns;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_failureRate;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_minSpawnOffsetX;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_maxSpawnOffsetX;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_minSpawnOffsetY;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_maxSpawnOffsetY;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_minSpawnOffsetZ;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_maxSpawnOffsetZ;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x582E44", Offset = "0x582E44")]
		public float m_minRotationOffsetX;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_maxRotationOffsetX;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_minRotationOffsetY;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_maxRotationOffsetY;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_minRotationOffsetZ;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float m_maxRotationOffsetZ;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float m_minScale;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float m_maxScale;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve m_scaleByDistance;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SpawnScale m_spawnScale;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool m_commonScale;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 m_minXYZScale;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Vector3 m_maxXYZScale;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float m_scaleRandomPercentage;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector3 m_XYZScaleRandomPercentage;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public bool m_foldedOut;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		public bool m_invalidPrefabSupplied;

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xAC5480", Offset = "0xAC5480", VA = "0xAC5480")]
		public ResourceProtoSpawnExtensionInstance()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F9")]
	public class ResourceProtoSpawnExtension
	{
		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_name;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ResourceProtoSpawnExtensionInstance[] m_instances;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ResourceProtoDNA m_dna;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool m_instancesFoldOut;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool m_dnaFoldedOut;

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xAC53EC", Offset = "0xAC53EC", VA = "0xAC53EC")]
		public bool SetAssetAssociations()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xAC53F4", Offset = "0xAC53F4", VA = "0xAC53F4")]
		public bool AssociateAssets()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xAC53FC", Offset = "0xAC53FC", VA = "0xAC53FC")]
		public ResourceProtoSpawnExtension()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public enum ProbeType
	{
		[Token(Token = "0x4001777")]
		ReflectionProbe,
		[Token(Token = "0x4001778")]
		LightProbe
	}
	[Serializable]
	[Token(Token = "0x20001FB")]
	public class ResourceProtoProbe
	{
		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582E84", Offset = "0x582E84")]
		public string m_name;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582EBC", Offset = "0x582EBC")]
		public ProbeType m_probeType;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582EF4", Offset = "0x582EF4")]
		public ReflectionProbeData m_reflectionProbeData;

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xAC5388", Offset = "0xAC5388", VA = "0xAC5388")]
		public ResourceProtoProbe()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public enum BorderMaskStyle
	{
		[Token(Token = "0x400177D")]
		ImageMask,
		[Token(Token = "0x400177E")]
		DistanceMask,
		[Token(Token = "0x400177F")]
		None
	}
	[Serializable]
	[Token(Token = "0x20001FD")]
	public class ResourceProtoStamp
	{
		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_featureType;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ImageMaskInfluence m_stampInfluence;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BorderMaskStyle m_borderMaskStyle;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_borderMaskType;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GaiaConstants.TerrainGeneratorFeatureOperation m_operation;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_stackedChance;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_minWidth;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_maxWidth;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool m_tieWidthToStrength;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_minHeight;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_maxHeight;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_minMixStrength;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_maxMixStrength;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_minMixMidPoint;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_maxMixMidPoint;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool m_tieHeightToStrength;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_minYOffset;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_maxYOffset;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float m_invertChance;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve m_inputHeightToStampHeightMapping;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve m_inputHeightToProbabilityMapping;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float m_spawnProbability;

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xAC5614", Offset = "0xAC5614", VA = "0xAC5614")]
		public ResourceProtoStamp()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FE")]
	public class ResourceProtoTerrainModifierStamp
	{
		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_name;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double m_y;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_height;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_absoluteHeightValue;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_rotation;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_blendStrength;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GaiaConstants.FeatureOperation m_operation;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve m_heightTransformCurve;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_contrastFeatureSize;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_contrastStrength;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_terraceCount;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_terraceJitterCount;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_terraceBevelAmountInterior;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_sharpenRidgesMixStrength;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_sharpenRidgesIterations;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_powerOf;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float m_smoothVerticality;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float m_smoothBlurRadius;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ImageMask m_stamperInputImageMask;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float m_mixMidPoint;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float m_mixHeightStrength;

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xAC56E0", Offset = "0xAC56E0", VA = "0xAC56E0")]
		public ResourceProtoTerrainModifierStamp()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FF")]
	public class ResourceProtoTexture
	{
		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582F2C", Offset = "0x582F2C")]
		public string m_name;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582F64", Offset = "0x582F64")]
		public Texture2D m_texture;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public string m_textureFileName;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582FAC", Offset = "0x582FAC")]
		public Texture2D m_normal;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D m_maskmap;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture2D m_CTSSmoothnessMap;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture2D m_CTSRoughnessMap;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Texture2D m_CTSHeightMap;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Texture2D m_CTSAmbientOcclusionMap;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public string m_normalFileName;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x582FF4", Offset = "0x582FF4")]
		public float m_sizeX;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58302C", Offset = "0x58302C")]
		public float m_sizeY;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583064", Offset = "0x583064")]
		public float m_offsetX;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58309C", Offset = "0x58309C")]
		public float m_offsetY;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5830D4", Offset = "0x5830D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5830D4", Offset = "0x5830D4")]
		public float m_metallic;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583128", Offset = "0x583128")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x583128", Offset = "0x583128")]
		public float m_smoothness;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58317C", Offset = "0x58317C")]
		public SpawnCritera[] m_spawnCriteria;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string m_maskmapFileName;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string m_LayerGUID;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float m_normalScale;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector4 m_diffuseRemapMax;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Vector4 m_diffuseRemapMin;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public Vector4 m_maskMapRemapMax;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Vector4 m_maskMapRemapMin;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public Color m_specularColor;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public bool m_channelRemapFoldedOut;

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xAC5790", Offset = "0xAC5790", VA = "0xAC5790")]
		public void Initialise(Spawner spawner)
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0xAC580C", Offset = "0xAC580C", VA = "0xAC580C")]
		public bool HasActiveCriteria()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xAC5878", Offset = "0xAC5878", VA = "0xAC5878")]
		public bool SetAssetAssociations()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xAC5880", Offset = "0xAC5880", VA = "0xAC5880")]
		public bool AssociateAssets()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xAC5888", Offset = "0xAC5888", VA = "0xAC5888")]
		public bool ChecksTextures()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xAC58FC", Offset = "0xAC58FC", VA = "0xAC58FC")]
		public bool ChecksProximity()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xAC5970", Offset = "0xAC5970", VA = "0xAC5970")]
		public void AddTags(ref List<string> tagList)
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xAC5A7C", Offset = "0xAC5A7C", VA = "0xAC5A7C")]
		public ResourceProtoTexture()
		{
		}
	}
	[Token(Token = "0x2000200")]
	public class ResourceProtoTextureSO : ScriptableObject
	{
		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ResourceProtoTexture m_texture;

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xAC5BA0", Offset = "0xAC5BA0", VA = "0xAC5BA0")]
		public ResourceProtoTextureSO()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000201")]
	public class ResourceProtoTree
	{
		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5831B4", Offset = "0x5831B4")]
		public string m_name;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5831EC", Offset = "0x5831EC")]
		public GameObject m_desktopPrefab;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public string m_desktopPrefabFileName;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public string m_mobilePrefabFileName;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583244", Offset = "0x583244")]
		public float m_bendFactor;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58327C", Offset = "0x58327C")]
		public Color m_healthyColour;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5832B4", Offset = "0x5832B4")]
		public Color m_dryColour;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5832EC", Offset = "0x5832EC")]
		public SpawnScale m_spawnScale;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583324", Offset = "0x583324")]
		public float m_minWidth;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58335C", Offset = "0x58335C")]
		public float m_maxWidth;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583394", Offset = "0x583394")]
		public float m_minHeight;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5833CC", Offset = "0x5833CC")]
		public float m_maxHeight;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float m_widthRandomPercentage;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float m_heightRandomPercentage;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SpawnScale m_lastUsedSpawnScale;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float m_lastUsedMinWidth;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float m_lastUsedMaxWidth;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float m_lastUsedMinHeight;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float m_lastUsedMaxHeight;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float m_lastUsedWidthRandomPercentage;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float m_lastUsedHeightRandomPercentage;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583404", Offset = "0x583404")]
		public SpawnCritera[] m_spawnCriteria;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58343C", Offset = "0x58343C")]
		public SpawnRuleExtension[] m_spawnExtensions;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool m_instancesFoldOut;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool m_dnaFoldedOut;

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xAC5BA8", Offset = "0xAC5BA8", VA = "0xAC5BA8")]
		public void Initialise(Spawner spawner)
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xAC5C24", Offset = "0xAC5C24", VA = "0xAC5C24")]
		public bool HasActiveCriteria()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xAC5C90", Offset = "0xAC5C90", VA = "0xAC5C90")]
		public bool SetAssetAssociations()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xAC5C98", Offset = "0xAC5C98", VA = "0xAC5C98")]
		public bool AssociateAssets()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xAC5CA0", Offset = "0xAC5CA0", VA = "0xAC5CA0")]
		public bool ChecksTextures()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xAC5D14", Offset = "0xAC5D14", VA = "0xAC5D14")]
		public bool ChecksProximity()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xAC5D88", Offset = "0xAC5D88", VA = "0xAC5D88")]
		public void AddTags(ref List<string> tagList)
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xAC5E94", Offset = "0xAC5E94", VA = "0xAC5E94")]
		public void StoreLastUsedScaleSettings()
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xAC5EB0", Offset = "0xAC5EB0", VA = "0xAC5EB0")]
		public bool NeedsRescale()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xAC5F2C", Offset = "0xAC5F2C", VA = "0xAC5F2C")]
		public ResourceProtoTree()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class ResourceProtoTreeSO : ScriptableObject
	{
		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ResourceProtoTree m_tree;

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xAC5FF4", Offset = "0xAC5FF4", VA = "0xAC5FF4")]
		public ResourceProtoTreeSO()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000203")]
	public class ResourceProtoWorldBiomeMask
	{
		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583474", Offset = "0x583474")]
		public string m_name;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5834AC", Offset = "0x5834AC")]
		public BiomePreset m_biomePreset;

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xAC5FFC", Offset = "0xAC5FFC", VA = "0xAC5FFC")]
		public ResourceProtoWorldBiomeMask()
		{
		}
	}
	[Token(Token = "0x2000204")]
	public class ResourceVisualiser : MonoBehaviour
	{
		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5834E4", Offset = "0x5834E4")]
		public GaiaResource m_resources;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58351C", Offset = "0x58351C")]
		public float m_range;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583554", Offset = "0x583554")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x583554", Offset = "0x583554")]
		public float m_resolution;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5835AC", Offset = "0x5835AC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5835AC", Offset = "0x5835AC")]
		public float m_minimumFitness;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583600", Offset = "0x583600")]
		public LayerMask m_fitnessCollisionLayers;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583638", Offset = "0x583638")]
		public Color m_fitColour;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583670", Offset = "0x583670")]
		public Color m_unfitColour;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Spawner m_spawner;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Vector3 m_lastHitPoint;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public string m_lastHitObjectname;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public float m_lastHitFitness;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public float m_lastHitHeight;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public float m_lastHitTerrainHeight;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public float m_lastHitTerrainRelativeHeight;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public float m_lastHitTerrainSlope;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[HideInInspector]
		public float m_lastHitAreaSlope;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public bool m_lastHitWasVirgin;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[HideInInspector]
		public GaiaConstants.SpawnerResourceType m_selectedResourceType;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public int m_selectedResourceIdx;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		private DateTime m_lastUpdateDate;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		private DateTime m_lastCacheUpdateDate;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private UnityHeightMap m_terrainHeightMap;

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xAC6004", Offset = "0xAC6004", VA = "0xAC6004")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xAC602C", Offset = "0xAC602C", VA = "0xAC602C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xAC6030", Offset = "0xAC6030", VA = "0xAC6030")]
		public void Initialise()
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xAC6180", Offset = "0xAC6180", VA = "0xAC6180")]
		public void Visualise()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xAC61F8", Offset = "0xAC61F8", VA = "0xAC61F8")]
		public SpawnInfo GetSpawnInfo(Vector3 location)
		{
			return null;
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xAC6310", Offset = "0xAC6310", VA = "0xAC6310")]
		public float GetFitness(ref SpawnInfo spawnInfo)
		{
			return default(float);
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xAC6584", Offset = "0xAC6584", VA = "0xAC6584")]
		public float GetMinFitness(ref SpawnInfo spawnInfo)
		{
			return default(float);
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xAC657C", Offset = "0xAC657C", VA = "0xAC657C")]
		public float GetMaxScaledRadius(ref SpawnInfo spawnInfo)
		{
			return default(float);
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xAC68EC", Offset = "0xAC68EC", VA = "0xAC68EC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xAC6F94", Offset = "0xAC6F94", VA = "0xAC6F94")]
		public ResourceVisualiser()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class UserFiles : ScriptableObject
	{
		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_autoAddNewFiles;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_updateFilesWithGaiaUpdate;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<BiomePreset> m_gaiaManagerBiomePresets;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<SpawnerSettings> m_gaiaManagerSpawnerSettings;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<ExportTerrainSettings> m_exportTerrainSettings;

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xC5F290", Offset = "0xC5F290", VA = "0xC5F290")]
		public void PruneNonExisting()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xC5F294", Offset = "0xC5F294", VA = "0xC5F294")]
		public UserFiles()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public enum ScannerObjectType
	{
		[Token(Token = "0x40017FE")]
		Raw,
		[Token(Token = "0x40017FF")]
		Texture,
		[Token(Token = "0x4001800")]
		Mesh,
		[Token(Token = "0x4001801")]
		Terrain,
		[Token(Token = "0x4001802")]
		Unkown
	}
	[Token(Token = "0x2000207")]
	public class Scanner : MonoBehaviour
	{
		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_exportFolder;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_exportFileName;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_baseLevel;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_scanResolution;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_lastScanResolution;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material m_previewMaterial;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool m_exportTextureAlso;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool m_exportBytesData;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HeightMap m_scanMap;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GaiaConstants.GaiaProWaterReflectionsQuality m_textureExportResolution;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool m_boundsSet;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool m_normalize;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool m_objectScanned;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ScannerObjectType m_scannerObjectType;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject m_lastScannedMesh;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Bounds m_scanBounds;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int m_scanWidth;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int m_scanDepth;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_scanHeight;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 m_groundOffset;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 m_groundSize;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private MeshRenderer m_meshRenderer;

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x8C39B0", Offset = "0x8C39B0", VA = "0x8C39B0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x8C3B98", Offset = "0x8C3B98", VA = "0x8C3B98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x8C3DC0", Offset = "0x8C3DC0", VA = "0x8C3DC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x8C3DE8", Offset = "0x8C3DE8", VA = "0x8C3DE8")]
		public void ResetData()
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x8C40FC", Offset = "0x8C40FC", VA = "0x8C40FC")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x8C419C", Offset = "0x8C419C", VA = "0x8C419C")]
		public string SaveScan()
		{
			return null;
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x8C4470", Offset = "0x8C4470", VA = "0x8C4470")]
		public void LoadRawFile(string path, GaiaConstants.RawByteOrder byteOrder, ref GaiaConstants.RawBitDepth bitDepth, ref int resolution)
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x8C478C", Offset = "0x8C478C", VA = "0x8C478C")]
		public void LoadTextureFile(Texture2D texture)
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x8C4AF8", Offset = "0x8C4AF8", VA = "0x8C4AF8")]
		public void LoadTerain(Terrain terrain)
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x8C4E8C", Offset = "0x8C4E8C", VA = "0x8C4E8C")]
		public void LoadGameObject(GameObject go)
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x8C3BD4", Offset = "0x8C3BD4", VA = "0x8C3BD4")]
		private void SetOrCreateMeshComponents()
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x8C3FA8", Offset = "0x8C3FA8", VA = "0x8C3FA8")]
		private Vector3 GetPosition(GameObject scannerObj, Terrain terrain, bool terrainMode = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x8C3AF4", Offset = "0x8C3AF4", VA = "0x8C3AF4")]
		private void UpdateScanner()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x8C5618", Offset = "0x8C5618", VA = "0x8C5618")]
		public static GameObject CreateScanner()
		{
			return null;
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x8C57F0", Offset = "0x8C57F0", VA = "0x8C57F0")]
		public Scanner()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public enum PW_RENDER_SIZE
	{
		[Token(Token = "0x400181B")]
		FULL = -1,
		[Token(Token = "0x400181C")]
		HALF = -2,
		[Token(Token = "0x400181D")]
		QUARTER = -3
	}
	[Token(Token = "0x2000209")]
	public static class CommandBufferManagerShaderID
	{
		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string _cbufName;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int _grabID;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly int m_cameraOpaqueTexture;

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xA0CEA8", Offset = "0xA0CEA8", VA = "0xA0CEA8")]
		static CommandBufferManagerShaderID()
		{
		}
	}
	[Token(Token = "0x200020A")]
	[ExecuteAlways]
	public class CommandBufferManager : MonoBehaviour
	{
		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_allowHDR;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PW_RENDER_SIZE m_renderSize;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraEvent m_cameraEventRefraction;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private GaiaConstants.EnvironmentRenderer RenderPipeline;

		[Token(Token = "0x4001825")]
		private const string m_bufferManagerObjectName = "Command Buffer Manager";

		[Token(Token = "0x4001826")]
		private const string m_reflectionProbeNameContains = "Reflection Probe";

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Camera, CommandBuffer> m_camerasRefraction;

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xA0C498", Offset = "0xA0C498", VA = "0xA0C498")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xA0C4DC", Offset = "0xA0C4DC", VA = "0xA0C4DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xA0C4E4", Offset = "0xA0C4E4", VA = "0xA0C4E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xA0C4A0", Offset = "0xA0C4A0", VA = "0xA0C4A0")]
		public void RebuildBuffers(bool clear = true)
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xA0C4E8", Offset = "0xA0C4E8", VA = "0xA0C4E8")]
		public void ClearBuffers()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xA0C7D8", Offset = "0xA0C7D8", VA = "0xA0C7D8")]
		private void StartBuffers()
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xA0C958", Offset = "0xA0C958", VA = "0xA0C958")]
		private void PreRender(Camera i_cam)
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xA0CC88", Offset = "0xA0CC88", VA = "0xA0CC88")]
		private void PreRender(ScriptableRenderContext src, Camera i_cam)
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xA0C9AC", Offset = "0xA0C9AC", VA = "0xA0C9AC")]
		private void RenderBuffers(Camera i_cam)
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xA0CCDC", Offset = "0xA0CCDC", VA = "0xA0CCDC")]
		public static void CreateBufferManager()
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xA0CE1C", Offset = "0xA0CE1C", VA = "0xA0CE1C")]
		public CommandBufferManager()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class GaiaSceneCullingProfile : ScriptableObject
	{
		[Token(Token = "0x2000561")]
		public enum ShadowCullingType
		{
			[Token(Token = "0x4002EE7")]
			Small,
			[Token(Token = "0x4002EE8")]
			Medium,
			[Token(Token = "0x4002EE9")]
			Large
		}

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5837B8", Offset = "0x5837B8")]
		public bool m_applyToEditorCamera;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_realtimeUpdate;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float[] m_layerDistances;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] m_layerNames;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float[] m_shadowLayerDistances;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_additionalCullingDistance;

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x80DF44", Offset = "0x80DF44", VA = "0x80DF44")]
		public void UpdateCulling(GaiaSettings gaiaSettings)
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x80E46C", Offset = "0x80E46C", VA = "0x80E46C")]
		public void UpdateShadow()
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x80E6C0", Offset = "0x80E6C0", VA = "0x80E6C0")]
		public GaiaSceneCullingProfile()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class GaiaSceneLighting : MonoBehaviour
	{
		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x80E810", Offset = "0x80E810", VA = "0x80E810")]
		public void SaveToGaiaDefault(GaiaLightingProfileValues profileValues)
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x80EBA4", Offset = "0x80EBA4", VA = "0x80EBA4")]
		public void SaveToGaiaDefault(GaiaLightingProfileValues profileValues, ProceduralWorldsGlobalWeather globalWeather)
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x80EE38", Offset = "0x80EE38", VA = "0x80EE38")]
		private void SavePWSkyAtmosphere(GaiaLightingProfileValues profileValues, ProceduralWorldsGlobalWeather globalWeather)
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x80F18C", Offset = "0x80F18C", VA = "0x80F18C")]
		private void SavePWSkyCloud(GaiaLightingProfileValues profileValues, ProceduralWorldsGlobalWeather globalWeather)
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x80F074", Offset = "0x80F074", VA = "0x80F074")]
		private void SavePWSeason(GaiaLightingProfileValues profileValues, ProceduralWorldsGlobalWeather globalWeather)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x80F63C", Offset = "0x80F63C", VA = "0x80F63C")]
		private void SavePWSkyWind(GaiaLightingProfileValues profileValues, ProceduralWorldsGlobalWeather globalWeather)
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x80F2D8", Offset = "0x80F2D8", VA = "0x80F2D8")]
		private void SavePWSkyWeather(GaiaLightingProfileValues profileValues, ProceduralWorldsGlobalWeather globalWeather)
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x80EA58", Offset = "0x80EA58", VA = "0x80EA58")]
		private void SaveColorAndCubemapFields(GaiaLightingProfileValues newProfileValues, GaiaLightingProfileValues profileValues)
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x80F6E4", Offset = "0x80F6E4", VA = "0x80F6E4")]
		public static void AddReflectionFog(Camera camera, bool enabled)
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x80F890", Offset = "0x80F890", VA = "0x80F890")]
		public GaiaSceneLighting()
		{
		}
	}
	[Token(Token = "0x200020D")]
	[ExecuteAlways]
	public class GaiaScenePlayer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000562")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572E08", Offset = "0x572E08")]
		private sealed class <>c
		{
			[Token(Token = "0x4002EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MeshRenderer, bool> <>9__16_0;

			[Token(Token = "0x60022EF")]
			[Address(RVA = "0x91EE94", Offset = "0x91EE94", VA = "0x91EE94")]
			public <>c()
			{
			}

			[Token(Token = "0x60022F0")]
			[Address(RVA = "0x91EE9C", Offset = "0x91EE9C", VA = "0x91EE9C")]
			internal bool <OnSceneUnLoaded>b__16_0(MeshRenderer x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private static GaiaScenePlayer m_instance;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_gaiaUI;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_camera;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Bounds m_worldSpaceBounds;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Plane[] m_planes;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Terrain[] m_allTerrains;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MeshRenderer[] m_allTerrainMeshRenderers;

		[Token(Token = "0x17000185")]
		public static GaiaScenePlayer Instance
		{
			[Token(Token = "0x6000FB9")]
			[Address(RVA = "0x80F898", Offset = "0x80F898", VA = "0x80F898")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x80F978", Offset = "0x80F978", VA = "0x80F978")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x810114", Offset = "0x810114", VA = "0x810114")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x810518", Offset = "0x810518", VA = "0x810518")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x810638", Offset = "0x810638", VA = "0x810638")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x80FDB8", Offset = "0x80FDB8", VA = "0x80FDB8")]
		private void AddTerrainMeshRenderer(GameObject go, List<MeshRenderer> meshRenderers)
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x8106A4", Offset = "0x8106A4", VA = "0x8106A4")]
		private bool IsSingleMeshTerrain(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x8107D0", Offset = "0x8107D0", VA = "0x8107D0")]
		private bool IsMeshLODTerrain(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x810900", Offset = "0x810900", VA = "0x810900")]
		private void OnSceneUnLoaded(Scene scene)
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x810A70", Offset = "0x810A70", VA = "0x810A70")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode arg1)
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x810BC0", Offset = "0x810BC0", VA = "0x810BC0")]
		private void UpdateTerrains()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x810BE8", Offset = "0x810BE8", VA = "0x810BE8")]
		public static void UpdateCullingDistances()
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x81114C", Offset = "0x81114C", VA = "0x81114C")]
		public static void ApplySceneSetup(bool active)
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x811150", Offset = "0x811150", VA = "0x811150")]
		public static void SetCurrentControllerType(GaiaConstants.EnvironmentControllerType type)
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x811228", Offset = "0x811228", VA = "0x811228")]
		public GaiaScenePlayer()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class GaiaSceneWater : MonoBehaviour
	{
		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x8112CC", Offset = "0x8112CC", VA = "0x8112CC")]
		public void SaveToGaiaDefault(GaiaWaterProfileValues profileValues)
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x811514", Offset = "0x811514", VA = "0x811514")]
		private void SaveColorAndCubemapFields(GaiaWaterProfileValues newProfileValues, GaiaWaterProfileValues profileValues)
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x8115B8", Offset = "0x8115B8", VA = "0x8115B8")]
		public GaiaSceneWater()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020F")]
	public class ReflectionProbeData
	{
		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x583800", Offset = "0x583800")]
		public ReflectionProbeMode reflectionProbeMode;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GaiaConstants.ReflectionProbeRefreshModePW reflectionProbeRefresh;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReflectionCubemapCompression reflectionCubemapCompression;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ReflectionProbeTimeSlicingMode reflectionProbeTimeSlicingMode;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int reflectionProbesPerRow;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float reflectionProbeOffset;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float reflectionProbeClipPlaneDistance;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float reflectionProbeBlendDistance;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayerMask reflectionprobeCullingMask;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float reflectionProbeShadowDistance;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GaiaConstants.ReflectionProbeResolution reflectionProbeResolution;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int lightProbesPerRow;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int lightProbeSpawnRadius;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float seaLevel;

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xB95FD8", Offset = "0xB95FD8", VA = "0xB95FD8")]
		public ReflectionProbeData()
		{
		}
	}
	[Token(Token = "0x2000210")]
	public class SceneProfile : ScriptableObject
	{
		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ProfileVersion;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_reimportHDRPShader;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_savedFromScene;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GaiaTimeOfDay m_gaiaTimeOfDay;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GaiaWeather m_gaiaWeather;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_lodBias;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Texture2D m_kelvinTexture;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GaiaConstants.GlobalSystemMode m_lightSystemMode;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject m_thirdPartyLightObject;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool DefaultLightingSet;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool m_lightingMultiSceneLightingSupport;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool m_lightingUpdateInRealtime;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int m_selectedLightingProfileValuesIndex;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GaiaConstants.GaiaLightingProfileType m_profileType;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool m_renamingProfile;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool m_lightingEditSettings;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GaiaConstants.BakeMode m_lightingBakeMode;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Material m_masterSkyboxMaterial;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<GaiaLightingProfileValues> m_lightingProfiles;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool m_parentObjects;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool m_hideProcessVolume;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		public bool m_enablePostProcessing;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		public bool m_enableAmbientAudio;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool m_enableFog;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GaiaConstants.GaiaProAntiAliasingMode m_antiAliasingMode;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float m_AAJitterSpread;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float m_AAStationaryBlending;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float m_AAMotionBlending;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float m_AASharpness;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float m_antiAliasingTAAStrength;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool m_cameraDithering;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float m_cameraAperture;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool m_usePhysicalCamera;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public Vector2 m_cameraSensorSize;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float m_cameraFocalLength;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool m_globalReflectionProbe;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool m_isUserProfileSet;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		public bool m_enableAutoDOF;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public LayerMask m_dofLayerDetection;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float m_depthOfFieldFocusDistance;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public ReflectionProbeData m_reflectionProbeData;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GaiaConstants.GlobalSystemMode m_waterSystemMode;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GameObject m_thirdPartyWaterObject;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool DefaultWaterSet;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		public bool m_waterMultiSceneLightingSupport;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
		public bool m_waterRenamingProfile;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEB")]
		public bool m_waterUpdateInRealtime;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public bool m_allowMSAA;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
		public bool m_useHDR;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEE")]
		public bool m_enableDisabeHeightFeature;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float m_disableHeight;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public string m_selectedProfile;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float m_interval;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public bool m_useCustomRenderDistance;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		public bool m_enableLayerDistances;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float m_customRenderDistance;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float[] m_customRenderDistances;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public GaiaPlanarReflections.PlanarReflectionSettings m_reflectionSettingsData;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool m_waterEditSettings;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public int m_selectedWaterProfileValuesIndex;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public bool m_autoRefresh;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		public bool m_ignoreSceneConditions;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float m_refreshRate;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public GaiaConstants.WaterAutoUpdateMode m_autoUpdateMode;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public bool m_useCastics;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Light m_mainCausticLight;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public int m_causticFramePerSecond;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public float m_causticSize;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public bool InfiniteMode;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public GameObject m_waterPrefab;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public GameObject m_underwaterParticles;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public GameObject m_underwaterHorizonPrefab;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public GameObject m_hdPlanarReflections;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public GameObject m_transitionFXPrefab;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public List<GaiaWaterProfileValues> m_waterProfiles;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Material m_activeWaterMaterial;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public bool m_enableWaterMeshQuality;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public GaiaConstants.WaterMeshQuality m_waterMeshQuality;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public GaiaConstants.MeshType m_meshType;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Mesh m_customWaterMesh;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public int m_zSize;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public int m_xSize;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public int m_customMeshQuality;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public bool m_enableReflections;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public float[] m_savedWaterRenderDistances;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public float m_savedWaterRenderDistance;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		public float m_extraWaterRenderDistance;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public bool m_disaleSkyboxReflection;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
		public bool m_disablePixelLights;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		public GaiaConstants.GaiaProWaterReflectionsQuality m_reflectionResolution;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public bool m_verifiedHDRPReflections;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		public int m_textureResolution;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public float m_clipPlaneOffset;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public LayerMask m_reflectedLayers;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public float m_hdrpReflectionIntensity;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public bool m_enableOceanFoam;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DD")]
		public bool m_enableBeachFoam;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DE")]
		public bool m_enableGPUInstancing;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DF")]
		public bool m_autoWindControlOnWater;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public bool m_supportUnderwaterEffects;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
		public bool m_supportUnderwaterPostProcessing;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E2")]
		public bool m_supportUnderwaterFog;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E3")]
		public bool m_supportUnderwaterParticles;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		public bool m_reflectShadowsHDRP;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E5")]
		public bool m_roughReflectionsHDRP;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public GaiaConstants.EnvironmentControllerType m_controllerType;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public bool m_setupPostFX;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1ED")]
		public bool m_spawnPlayerAtCurrentLocation;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EE")]
		public bool m_instantiateCustomControllers;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public GameObject m_customPlayer;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public Camera m_customCamera;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public bool m_enableLayerCulling;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private GaiaSceneCullingProfile m_cullingProfile;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public Light m_sunLight;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public Light m_moonLight;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public bool m_terrainCullingEnabled;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public LoadMode m_terrainLoaderLoadMode;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public float m_terrainLoaderMinRefreshDistance;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		public float m_terrainLoaderMaxRefreshDistance;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public float m_terrainLoaderMinRefreshMS;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		public float m_terrainLoaderMaxRefreshMS;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public bool m_terrainLoaderFollowTransform;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public BoundsDouble m_terrainLoaderLoadingBoundsRegular;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public BoundsDouble m_terrainLoaderLoadingBoundsImpostor;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public BoundsDouble m_terrainLoaderLoadingBoundsCollider;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public bool m_terrainLoaderDataInitialized;

		[Token(Token = "0x17000186")]
		public GaiaSceneCullingProfile CullingProfile
		{
			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0x8C61A4", Offset = "0x8C61A4", VA = "0x8C61A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0x8C61AC", Offset = "0x8C61AC", VA = "0x8C61AC")]
			set
			{
			}
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x8C61C8", Offset = "0x8C61C8", VA = "0x8C61C8")]
		private void RefreshCullingProfileLayers()
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x8C651C", Offset = "0x8C651C", VA = "0x8C651C")]
		public void UpdateTerrainLoaderFromProfile(ref TerrainLoader tl)
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x8C6640", Offset = "0x8C6640", VA = "0x8C6640")]
		public void SaveTerrainLoaderToProfile(TerrainLoader tl)
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x8C6718", Offset = "0x8C6718", VA = "0x8C6718")]
		public void UpdateTextureResolution()
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x8C6738", Offset = "0x8C6738", VA = "0x8C6738")]
		public SceneProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000211")]
	public class ClearOperationSettings : ScriptableObject
	{
		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_clearTrees;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_clearTerrainDetails;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool m_clearGameObjects;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool m_clearSpawnExtensions;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool m_clearProbes;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool m_clearStamps;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ClearSpawnFrom m_clearSpawnFrom;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ClearSpawnFor m_clearSpawnFor;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpawnerSettings m_spawnerSettings;

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0xA0BAE0", Offset = "0xA0BAE0", VA = "0xA0BAE0")]
		public ClearOperationSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000212")]
	public class ExportMaskMapOperationSettings : ScriptableObject
	{
		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MaskMapExportSettings m_maskMapExportSettings;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> m_terrainNames;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isGlobalExport;

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x8AE47C", Offset = "0x8AE47C", VA = "0x8AE47C")]
		public ExportMaskMapOperationSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000213")]
	public class FlattenOperationSettings : ScriptableObject
	{
		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> m_TerrainsList;

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x8B3348", Offset = "0x8B3348", VA = "0x8B3348")]
		public FlattenOperationSettings()
		{
		}
	}
	[Token(Token = "0x2000214")]
	public enum SessionPlaybackState
	{
		[Token(Token = "0x40018CF")]
		Queued,
		[Token(Token = "0x40018D0")]
		Started
	}
	[Serializable]
	[Token(Token = "0x2000215")]
	public class GaiaOperation
	{
		[Token(Token = "0x2000563")]
		public enum OperationType
		{
			[Token(Token = "0x4002EED")]
			CreateWorld,
			[Token(Token = "0x4002EEE")]
			FlattenTerrain,
			[Token(Token = "0x4002EEF")]
			SmoothTerrain,
			[Token(Token = "0x4002EF0")]
			ClearSpawns,
			[Token(Token = "0x4002EF1")]
			Stamp,
			[Token(Token = "0x4002EF2")]
			StampUndo,
			[Token(Token = "0x4002EF3")]
			StampRedo,
			[Token(Token = "0x4002EF4")]
			Spawn,
			[Token(Token = "0x4002EF5")]
			RemoveNonBiomeResources,
			[Token(Token = "0x4002EF6")]
			MaskMapExport,
			[Token(Token = "0x4002EF7")]
			ClearWorld,
			[Token(Token = "0x4002EF8")]
			ExportWorldMapToLocalMap,
			[Token(Token = "0x4002EF9")]
			External,
			[Token(Token = "0x4002EFA")]
			WorldMapStamp,
			[Token(Token = "0x4002EFB")]
			UpdateWorld
		}

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WorldCreationSettings m_worldCreationSettings;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StamperSettings m_stamperSettings;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SpawnOperationSettings m_spawnOperationSettings;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FlattenOperationSettings m_flattenOperationSettings;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UndoRedoOperationSettings m_undoRedoOperationSettings;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ClearOperationSettings m_clearOperationSettings;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RemoveNonBiomeResourcesSettings m_removeNonBiomeResourcesSettings;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ExportMaskMapOperationSettings m_exportMaskMapOperationSettings;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ScriptableObject m_externalScriptableObject;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private WorldMapStampSettings m_worldMapStampSettings;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string m_description;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public OperationType m_operationType;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool m_isActive;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string[] m_affectedTerrainNames;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string m_operationDateTime;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string scriptableObjectAssetGUID;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool m_isFoldedOut;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public SessionPlaybackState sessionPlaybackState;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool m_terrainsFoldedOut;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public byte[] m_serializedExternalAction;

		[Token(Token = "0x17000187")]
		public WorldCreationSettings WorldCreationSettings
		{
			[Token(Token = "0x6000FD6")]
			[Address(RVA = "0x803844", Offset = "0x803844", VA = "0x803844")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000188")]
		public StamperSettings StamperSettings
		{
			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0x8038B8", Offset = "0x8038B8", VA = "0x8038B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		public SpawnOperationSettings SpawnOperationSettings
		{
			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0x80392C", Offset = "0x80392C", VA = "0x80392C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018A")]
		public FlattenOperationSettings FlattenOperationSettings
		{
			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0x8039A0", Offset = "0x8039A0", VA = "0x8039A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		public UndoRedoOperationSettings UndoRedoOperationSettings
		{
			[Token(Token = "0x6000FDA")]
			[Address(RVA = "0x803A14", Offset = "0x803A14", VA = "0x803A14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018C")]
		public ClearOperationSettings ClearOperationSettings
		{
			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0x803A88", Offset = "0x803A88", VA = "0x803A88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		public RemoveNonBiomeResourcesSettings RemoveNonBiomeResourcesSettings
		{
			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0x803AFC", Offset = "0x803AFC", VA = "0x803AFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018E")]
		public ExportMaskMapOperationSettings ExportMaskMapOperationSettings
		{
			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0x803B70", Offset = "0x803B70", VA = "0x803B70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018F")]
		public ScriptableObject ExternalOperationScriptableObject
		{
			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0x803BE4", Offset = "0x803BE4", VA = "0x803BE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		public WorldMapStampSettings WorldMapStampSettings
		{
			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0x803C58", Offset = "0x803C58", VA = "0x803C58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x803CCC", Offset = "0x803CCC", VA = "0x803CCC")]
		public GaiaOperation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000216")]
	public class TerrainMinMaxHeight
	{
		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string guid;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isWorldmap;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool recalculate;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float min;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float max;

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xA20C6C", Offset = "0xA20C6C", VA = "0xA20C6C")]
		public TerrainMinMaxHeight()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000217")]
	public class GaiaSession : ScriptableObject
	{
		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x583848", Offset = "0x583848")]
		public string m_name;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x583860", Offset = "0x583860")]
		public string m_description;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Texture2D m_previewImage;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string m_dateCreated;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int m_terrainWidth;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int m_terrainDepth;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int m_terrainHeight;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_seaLevel;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_spawnDensity;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool m_isLocked;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public byte[] m_previewImageBytes;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public int m_previewImageWidth;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public int m_previewImageHeight;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public List<GaiaOperation> m_operations;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public List<TerrainMinMaxHeight> m_terrainMinMaxCache;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public BakedMaskCacheEntry[] m_bakedMaskCacheEntries;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SpawnerSettings m_worldBiomeMaskSettings;

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x8115EC", Offset = "0x8115EC", VA = "0x8115EC")]
		public string GetSessionFileName()
		{
			return null;
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x8115F8", Offset = "0x8115F8", VA = "0x8115F8")]
		public Texture2D GetPreviewImage()
		{
			return null;
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x8116C4", Offset = "0x8116C4", VA = "0x8116C4")]
		public GaiaSession()
		{
		}
	}
	[Token(Token = "0x2000218")]
	internal struct TerrainMinMax
	{
		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float minHeight;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float maxHeight;
	}
	[Token(Token = "0x2000219")]
	public class TerrainGridReference
	{
		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_terrainDataGUID;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_terrainScenePath;

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xB060B8", Offset = "0xB060B8", VA = "0xB060B8")]
		public TerrainGridReference()
		{
		}
	}
	[Token(Token = "0x200021A")]
	[ExecuteInEditMode]
	public class GaiaSessionManager : MonoBehaviour
	{
		[Token(Token = "0x2000564")]
		public delegate void WorldCreatedCallback();

		[Token(Token = "0x2000565")]
		public delegate void MassStampingFinishedCallback();

		[Token(Token = "0x2000566")]
		public delegate void WorldMapExportedCallback();

		[Serializable]
		[Token(Token = "0x2000567")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572E18", Offset = "0x572E18")]
		private sealed class <>c
		{
			[Token(Token = "0x4002EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<TerrainMinMaxHeight> <>9__84_0;

			[Token(Token = "0x4002EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<GaiaOperation> <>9__128_0;

			[Token(Token = "0x4002EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Predicate<GaiaOperation> <>9__166_0;

			[Token(Token = "0x4002F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Predicate<AutoSpawner> <>9__175_0;

			[Token(Token = "0x4002F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Predicate<AutoSpawner> <>9__175_2;

			[Token(Token = "0x4002F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Predicate<AutoMaskExport> <>9__175_1;

			[Token(Token = "0x4002F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<TerrainScene, string> <>9__178_0;

			[Token(Token = "0x4002F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<Terrain, string> <>9__178_1;

			[Token(Token = "0x4002F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Predicate<SpawnRule> <>9__190_1;

			[Token(Token = "0x4002F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Predicate<Spawner> <>9__190_0;

			[Token(Token = "0x60022FE")]
			[Address(RVA = "0x91EF64", Offset = "0x91EF64", VA = "0x91EF64")]
			public <>c()
			{
			}

			[Token(Token = "0x60022FF")]
			[Address(RVA = "0x91EF6C", Offset = "0x91EF6C", VA = "0x91EF6C")]
			internal bool <DirtyWorldMapMinMax>b__84_0(TerrainMinMaxHeight x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002300")]
			[Address(RVA = "0x91EF84", Offset = "0x91EF84", VA = "0x91EF84")]
			internal bool <PlaySession>b__128_0(GaiaOperation x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002301")]
			[Address(RVA = "0x91EFC8", Offset = "0x91EFC8", VA = "0x91EFC8")]
			internal bool <ExecuteCreateWorld>b__166_0(GaiaOperation x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002302")]
			[Address(RVA = "0x91EFE8", Offset = "0x91EFE8", VA = "0x91EFE8")]
			internal bool <ExecuteStamp>b__175_0(AutoSpawner x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002303")]
			[Address(RVA = "0x91F074", Offset = "0x91F074", VA = "0x91F074")]
			internal bool <ExecuteStamp>b__175_2(AutoSpawner x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002304")]
			[Address(RVA = "0x91F100", Offset = "0x91F100", VA = "0x91F100")]
			internal bool <ExecuteStamp>b__175_1(AutoMaskExport x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002305")]
			[Address(RVA = "0x91F18C", Offset = "0x91F18C", VA = "0x91F18C")]
			internal string <ExecuteClearSpawns>b__178_0(TerrainScene x)
			{
				return null;
			}

			[Token(Token = "0x6002306")]
			[Address(RVA = "0x91F1E4", Offset = "0x91F1E4", VA = "0x91F1E4")]
			internal string <ExecuteClearSpawns>b__178_1(Terrain x)
			{
				return null;
			}

			[Token(Token = "0x6002307")]
			[Address(RVA = "0x91F200", Offset = "0x91F200", VA = "0x91F200")]
			internal bool <CheckIfHeightmapRestoreISAllowed>b__190_0(Spawner x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002308")]
			[Address(RVA = "0x91F33C", Offset = "0x91F33C", VA = "0x91F33C")]
			internal bool <CheckIfHeightmapRestoreISAllowed>b__190_1(SpawnRule y)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572E28", Offset = "0x572E28")]
		private sealed class <>c__DisplayClass104_0
		{
			[Token(Token = "0x4002F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GaiaSessionManager <>4__this;

			[Token(Token = "0x4002F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float newMin;

			[Token(Token = "0x4002F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float newMax;

			[Token(Token = "0x6002309")]
			[Address(RVA = "0x91F380", Offset = "0x91F380", VA = "0x91F380")]
			public <>c__DisplayClass104_0()
			{
			}

			[Token(Token = "0x600230A")]
			[Address(RVA = "0x91F388", Offset = "0x91F388", VA = "0x91F388")]
			internal void <CreateSession>b__0(Terrain terrain)
			{
			}
		}

		[Token(Token = "0x2000569")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572E38", Offset = "0x572E38")]
		private sealed class <ContinueMassStamp>d__122 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GaiaSessionManager <>4__this;

			[Token(Token = "0x4002F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170003DC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600230E")]
				[Address(RVA = "0x91F97C", Offset = "0x91F97C", VA = "0x91F97C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002310")]
				[Address(RVA = "0x91F9C4", Offset = "0x91F9C4", VA = "0x91F9C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600230B")]
			[Address(RVA = "0x91F3D8", Offset = "0x91F3D8", VA = "0x91F3D8")]
			[DebuggerHidden]
			public <ContinueMassStamp>d__122(int <>1__state)
			{
			}

			[Token(Token = "0x600230C")]
			[Address(RVA = "0x91F404", Offset = "0x91F404", VA = "0x91F404", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600230D")]
			[Address(RVA = "0x91F408", Offset = "0x91F408", VA = "0x91F408", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600230F")]
			[Address(RVA = "0x91F984", Offset = "0x91F984", VA = "0x91F984", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200056A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572E48", Offset = "0x572E48")]
		private sealed class <PlaySessionCoRoutine>d__147 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GaiaSessionManager <>4__this;

			[Token(Token = "0x4002F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <idx>5__2;

			[Token(Token = "0x170003DE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002314")]
				[Address(RVA = "0x920C00", Offset = "0x920C00", VA = "0x920C00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002316")]
				[Address(RVA = "0x920C48", Offset = "0x920C48", VA = "0x920C48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002311")]
			[Address(RVA = "0x9208EC", Offset = "0x9208EC", VA = "0x9208EC")]
			[DebuggerHidden]
			public <PlaySessionCoRoutine>d__147(int <>1__state)
			{
			}

			[Token(Token = "0x6002312")]
			[Address(RVA = "0x920918", Offset = "0x920918", VA = "0x920918", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002313")]
			[Address(RVA = "0x92091C", Offset = "0x92091C", VA = "0x92091C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002315")]
			[Address(RVA = "0x920C08", Offset = "0x920C08", VA = "0x920C08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200056B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572E58", Offset = "0x572E58")]
		private sealed class <PlayOperationCoRoutine>d__149 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170003E0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600231A")]
				[Address(RVA = "0x92089C", Offset = "0x92089C", VA = "0x92089C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600231C")]
				[Address(RVA = "0x9208E4", Offset = "0x9208E4", VA = "0x9208E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002317")]
			[Address(RVA = "0x920838", Offset = "0x920838", VA = "0x920838")]
			[DebuggerHidden]
			public <PlayOperationCoRoutine>d__149(int <>1__state)
			{
			}

			[Token(Token = "0x6002318")]
			[Address(RVA = "0x920864", Offset = "0x920864", VA = "0x920864", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002319")]
			[Address(RVA = "0x920868", Offset = "0x920868", VA = "0x920868", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600231B")]
			[Address(RVA = "0x9208A4", Offset = "0x9208A4", VA = "0x9208A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200056C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572E68", Offset = "0x572E68")]
		private sealed class <ExecuteCreateWorld>d__166 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GaiaSessionManager <>4__this;

			[Token(Token = "0x170003E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002320")]
				[Address(RVA = "0x920734", Offset = "0x920734", VA = "0x920734", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002322")]
				[Address(RVA = "0x92077C", Offset = "0x92077C", VA = "0x92077C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600231D")]
			[Address(RVA = "0x920310", Offset = "0x920310", VA = "0x920310")]
			[DebuggerHidden]
			public <ExecuteCreateWorld>d__166(int <>1__state)
			{
			}

			[Token(Token = "0x600231E")]
			[Address(RVA = "0x92033C", Offset = "0x92033C", VA = "0x92033C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600231F")]
			[Address(RVA = "0x920340", Offset = "0x920340", VA = "0x920340", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002321")]
			[Address(RVA = "0x92073C", Offset = "0x92073C", VA = "0x92073C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200056D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572E78", Offset = "0x572E78")]
		private sealed class <ContinueWorldMapStamp>d__171 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GaiaSessionManager <>4__this;

			[Token(Token = "0x4002F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<TerrainScene>.Enumerator <>7__wrap1;

			[Token(Token = "0x4002F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Terrain[] <>7__wrap2;

			[Token(Token = "0x4002F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <>7__wrap3;

			[Token(Token = "0x170003E4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002327")]
				[Address(RVA = "0x9202C0", Offset = "0x9202C0", VA = "0x9202C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002329")]
				[Address(RVA = "0x920308", Offset = "0x920308", VA = "0x920308", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002323")]
			[Address(RVA = "0x91F9CC", Offset = "0x91F9CC", VA = "0x91F9CC")]
			[DebuggerHidden]
			public <ContinueWorldMapStamp>d__171(int <>1__state)
			{
			}

			[Token(Token = "0x6002324")]
			[Address(RVA = "0x91F9F8", Offset = "0x91F9F8", VA = "0x91F9F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002325")]
			[Address(RVA = "0x91FA68", Offset = "0x91FA68", VA = "0x91FA68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002326")]
			[Address(RVA = "0x91FA14", Offset = "0x91FA14", VA = "0x91FA14")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002328")]
			[Address(RVA = "0x9202C8", Offset = "0x9202C8", VA = "0x9202C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200056E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572E88", Offset = "0x572E88")]
		private sealed class <ExecuteUpdateWorld>d__172 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170003E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600232D")]
				[Address(RVA = "0x9207E8", Offset = "0x9207E8", VA = "0x9207E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600232F")]
				[Address(RVA = "0x920830", Offset = "0x920830", VA = "0x920830", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600232A")]
			[Address(RVA = "0x920784", Offset = "0x920784", VA = "0x920784")]
			[DebuggerHidden]
			public <ExecuteUpdateWorld>d__172(int <>1__state)
			{
			}

			[Token(Token = "0x600232B")]
			[Address(RVA = "0x9207B0", Offset = "0x9207B0", VA = "0x9207B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600232C")]
			[Address(RVA = "0x9207B4", Offset = "0x9207B4", VA = "0x9207B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600232E")]
			[Address(RVA = "0x9207F0", Offset = "0x9207F0", VA = "0x9207F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator m_updateSessionCoroutine;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator m_updateOperationCoroutine;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_cancelPlayback;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GaiaSession m_session;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool m_focusSceneView;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool m_useRandomSeed;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int m_randomSeed;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool m_genShowRandomGenerator;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool m_genShowTerrainHelper;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public GaiaConstants.GeneratorBorderStyle m_genBorderStyle;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int m_genGridSize;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int m_genNumStampsToGenerate;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_genScaleWidth;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_genScaleHeight;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_genChanceOfHills;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_genChanceOfIslands;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float m_genChanceOfLakes;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float m_genChanceOfMesas;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float m_genChanceOfMountains;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float m_genChanceOfPlains;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float m_genChanceOfRivers;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float m_genChanceOfValleys;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float m_genChanceOfVillages;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float m_genChanceOfWaterfalls;

		[NonSerialized]
		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Stamper m_currentStamper;

		[NonSerialized]
		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Spawner m_currentSpawner;

		[NonSerialized]
		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public DateTime m_lastUpdateDateTime;

		[NonSerialized]
		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ulong m_progress;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BakedMaskCache m_bakedMaskCache;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		public ExportTerrainSettings m_lastUsedTerrainExportSettings;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<string> m_genHillStamps;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<string> m_genIslandStamps;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<string> m_genLakeStamps;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<string> m_genMesaStamps;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<string> m_genMountainStamps;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<string> m_genPlainsStamps;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private List<string> m_genRiverStamps;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<string> m_genValleyStamps;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<string> m_genVillageStamps;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<string> m_genWaterfallStamps;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool savingSubscribed;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private GaiaSettings m_gaiaSettings;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool m_heightmapChangeSubscribed;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public ImageMask m_copiedImageMask;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public SpawnRule m_copiedSpawnRule;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Spawner m_copiedSpawnRuleSpawner;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public bool m_waitForSessionContinueAfterStamping;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public List<StamperSettings> m_massStamperSettingsList;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public int m_massStamperSettingsIndex;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public bool m_showSceneViewPanel;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
		public bool m_showTerrainOpsPanel;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public List<string> m_terrainNamesFlaggedForRegeneration;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public List<string> m_terrainNamesFlaggedForRegenerationDeactivation;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool m_regenerateRun;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3Double m_originBackup;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private double m_loadRangeBackup;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private double m_loadRangeBackupImpostor;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private int m_editorUpdateCount;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public bool m_selectAllOperations;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static GaiaOperation m_worldmapStampOperation;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
		public bool m_waitForSpawningDuringTerrainCreation;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Spawner m_spawnerToWaitFor;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private List<Spawner> m_worldCreationspawners;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public bool m_worldCreationRunning;

		[Token(Token = "0x17000191")]
		private GaiaSettings GaiaSettings
		{
			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0x811888", Offset = "0x811888", VA = "0x811888")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400000F")]
		public static event WorldCreatedCallback OnWorldCreated
		{
			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0x811910", Offset = "0x811910", VA = "0x811910")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590950", Offset = "0x590950")]
			add
			{
			}
			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0x8119D0", Offset = "0x8119D0", VA = "0x8119D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590960", Offset = "0x590960")]
			remove
			{
			}
		}

		[Token(Token = "0x14000010")]
		public static event MassStampingFinishedCallback OnMassStampingFinished
		{
			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0x811A90", Offset = "0x811A90", VA = "0x811A90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590970", Offset = "0x590970")]
			add
			{
			}
			[Token(Token = "0x6000FEA")]
			[Address(RVA = "0x811B50", Offset = "0x811B50", VA = "0x811B50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590980", Offset = "0x590980")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public static event WorldMapExportedCallback OnWorldMapStampingFinished
		{
			[Token(Token = "0x6000FEB")]
			[Address(RVA = "0x811C10", Offset = "0x811C10", VA = "0x811C10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590990", Offset = "0x590990")]
			add
			{
			}
			[Token(Token = "0x6000FEC")]
			[Address(RVA = "0x811CD0", Offset = "0x811CD0", VA = "0x811CD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5909A0", Offset = "0x5909A0")]
			remove
			{
			}
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x811D90", Offset = "0x811D90", VA = "0x811D90")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x811D94", Offset = "0x811D94", VA = "0x811D94")]
		public void RegenerateFlaggedTerrains()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x812474", Offset = "0x812474", VA = "0x812474")]
		private void OnSceneSaved(Scene scene)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x8124C0", Offset = "0x8124C0", VA = "0x8124C0")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x8124C4", Offset = "0x8124C4", VA = "0x8124C4")]
		private void OnHeightmapChanged(Terrain terrain, RectInt heightRegion, bool synched)
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x8089A4", Offset = "0x8089A4", VA = "0x8089A4")]
		public static GaiaSessionManager GetSessionManager(bool pickupExistingTerrain = false, bool createSession = true)
		{
			return null;
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x812B04", Offset = "0x812B04", VA = "0x812B04")]
		public void DirtyWorldMapMinMax()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x812C30", Offset = "0x812C30", VA = "0x812C30")]
		public void CheckForNewTerrainsForMinMax()
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x812C34", Offset = "0x812C34", VA = "0x812C34")]
		public void GetWorldMinMax(ref float minWorldHeight, ref float maxWorldHeight, bool isWorldmap = false, [Optional] Stamper worldMapStamper)
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x812C38", Offset = "0x812C38", VA = "0x812C38")]
		public bool IsLocked()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x812CC8", Offset = "0x812CC8", VA = "0x812CC8")]
		public bool LockSession()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x812D64", Offset = "0x812D64", VA = "0x812D64")]
		public bool UnLockSession()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x812DF8", Offset = "0x812DF8", VA = "0x812DF8")]
		public void AddOperation(GaiaOperation operation)
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x812EC8", Offset = "0x812EC8", VA = "0x812EC8")]
		public GaiaOperation GetOperation(int operationIdx)
		{
			return null;
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x812FB0", Offset = "0x812FB0", VA = "0x812FB0")]
		public void RemoveOperation(int operationIdx)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x8133B8", Offset = "0x8133B8", VA = "0x8133B8")]
		private void FlagAffectedTerrainsForRegen(GaiaOperation op)
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x8134A8", Offset = "0x8134A8", VA = "0x8134A8")]
		public void AddResource(GaiaResource resource)
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x8134AC", Offset = "0x8134AC", VA = "0x8134AC")]
		public void AddDefaults(GaiaDefaults defaults)
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x8134B0", Offset = "0x8134B0", VA = "0x8134B0")]
		public void AddPreviewImage(Texture2D image)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x8135A8", Offset = "0x8135A8", VA = "0x8135A8")]
		public bool HasPreviewImage()
		{
			return default(bool);
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x813604", Offset = "0x813604", VA = "0x813604")]
		public void RemovePreviewImage()
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x8136DC", Offset = "0x8136DC", VA = "0x8136DC")]
		public Texture2D GetPreviewImage()
		{
			return null;
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x812D60", Offset = "0x812D60", VA = "0x812D60")]
		public void SaveSession()
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x8137C8", Offset = "0x8137C8", VA = "0x8137C8")]
		public void StartEditorUpdates()
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x8137CC", Offset = "0x8137CC", VA = "0x8137CC")]
		public void StopEditorUpdates()
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x8137D8", Offset = "0x8137D8", VA = "0x8137D8")]
		private void EditorUpdate()
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x812530", Offset = "0x812530", VA = "0x812530")]
		public GaiaSession CreateSession(bool pickupExistingTerrain = false)
		{
			return null;
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x8139EC", Offset = "0x8139EC", VA = "0x8139EC")]
		public static string GetNewSessionName()
		{
			return null;
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x813A88", Offset = "0x813A88", VA = "0x813A88")]
		public static string GetNewHeightmapBackupFolderName()
		{
			return null;
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x813B24", Offset = "0x813B24", VA = "0x813B24")]
		public void SetSeaLevel(float seaLevel, bool setFromWorldMap = false)
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x808B54", Offset = "0x808B54", VA = "0x808B54")]
		public float GetSeaLevel()
		{
			return default(float);
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x813BD4", Offset = "0x813BD4", VA = "0x813BD4")]
		public float GetSeaLevel(float currentSeaLevel, bool getForWorldMap = false)
		{
			return default(float);
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x813CC4", Offset = "0x813CC4", VA = "0x813CC4")]
		public void ResetSession()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x813E14", Offset = "0x813E14", VA = "0x813E14")]
		public void RandomiseStamps()
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x813E18", Offset = "0x813E18", VA = "0x813E18")]
		public void ForceTerrainMinMaxCalculation(Terrain terrain)
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x813EB0", Offset = "0x813EB0", VA = "0x813EB0")]
		public bool DoesStamperBackupExist([Optional] Terrain terrain)
		{
			return default(bool);
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x813EB8", Offset = "0x813EB8", VA = "0x813EB8")]
		public void UpdateStamperBackup(bool allowCreate = false, [Optional] Terrain terrain)
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x813ECC", Offset = "0x813ECC", VA = "0x813ECC")]
		public void RestoreStamperBackup([Optional] Terrain terrain)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x813EDC", Offset = "0x813EDC", VA = "0x813EDC")]
		public void RestoreBackup(string path, [Optional] Terrain terrain)
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x813EC8", Offset = "0x813EC8", VA = "0x813EC8")]
		public void CreateBackup(string path, bool allowCreate = false, [Optional] Terrain terrain)
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x813EE0", Offset = "0x813EE0", VA = "0x813EE0")]
		public void RestoreHeightmapData(Terrain t, string path)
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x813EE4", Offset = "0x813EE4", VA = "0x813EE4")]
		public void BackupHeightmapData(Terrain t, string path)
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x813EE8", Offset = "0x813EE8", VA = "0x813EE8")]
		public static void MassStamp(List<StamperSettings> stamperSettings, bool execute)
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x8142B8", Offset = "0x8142B8", VA = "0x8142B8")]
		private void StartMassStamp(List<StamperSettings> stamperSettings)
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x81438C", Offset = "0x81438C", VA = "0x81438C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5909B0", Offset = "0x5909B0")]
		public IEnumerator ContinueMassStamp()
		{
			return null;
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x8143F8", Offset = "0x8143F8", VA = "0x8143F8")]
		public void EditStampOperation(GaiaOperation op, StamperSettings stamperSettings)
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x815508", Offset = "0x815508", VA = "0x815508")]
		private void PositionStampV2(Bounds bounds, Stamper stamper, GaiaConstants.FeatureType stampType, float suggestX, float suggestZ, float suggestJitter)
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x815864", Offset = "0x815864", VA = "0x815864")]
		public string GetRandomMountainFieldPath()
		{
			return null;
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x815A08", Offset = "0x815A08", VA = "0x815A08")]
		private void BackupOriginAndLoadRange()
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x815AB4", Offset = "0x815AB4", VA = "0x815AB4")]
		private void RestoreOriginAndLoadRange()
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x8120D4", Offset = "0x8120D4", VA = "0x8120D4")]
		public static void PlaySession([Optional] GaiaSession session, bool regenerateOnly = false)
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x815B44", Offset = "0x815B44", VA = "0x815B44")]
		public static void ContinueSessionPlayback()
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x815FFC", Offset = "0x815FFC", VA = "0x815FFC")]
		public static void AfterSessionPlaybackCleanup()
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x8160B4", Offset = "0x8160B4", VA = "0x8160B4")]
		public static void DestroyTempSessionTools()
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x816124", Offset = "0x816124", VA = "0x816124")]
		public static void LoadSession([Optional] GaiaSession session)
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x813FC8", Offset = "0x813FC8", VA = "0x813FC8")]
		public static void Stamp(StamperSettings stamperSettings, bool executeNow = true, [Optional] Stamper stamper, bool massStamp = false)
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x8170A4", Offset = "0x8170A4", VA = "0x8170A4")]
		public static void StampFromWorldMap(WorldMapStampSettings worldMapStampSettings, bool executeNow = true, [Optional] Stamper stamper)
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x813380", Offset = "0x813380", VA = "0x813380")]
		private bool ChangeAllowed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x8179E0", Offset = "0x8179E0", VA = "0x8179E0")]
		public static void ExportWorldMapToLocalMap(WorldCreationSettings worldCreationSettings, bool executeNow)
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x818008", Offset = "0x818008", VA = "0x818008")]
		public static void ExportMaskMap(ExportMaskMapOperationSettings exportMaskMapOperationSettings, bool executeNow, MaskMapExport maskMapExport)
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x81850C", Offset = "0x81850C", VA = "0x81850C")]
		public static void FlattenTerrain(List<string> terrainNames, bool executeNow)
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x818878", Offset = "0x818878", VA = "0x818878")]
		public static void RemoveNonBiomeResources(RemoveNonBiomeResourcesSettings removeNonBiomeResourcesSettings, bool executeNow, [Optional] BiomeController biomeController)
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x8192E0", Offset = "0x8192E0", VA = "0x8192E0")]
		public static void ClearWorld(bool executeNow)
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x819480", Offset = "0x819480", VA = "0x819480")]
		public static void ClearSpawns(ClearOperationSettings clearOperationSettings, [Optional] SpawnerSettings spawnerSettings, bool executeNow = true, [Optional] Spawner spawner)
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x819ED0", Offset = "0x819ED0", VA = "0x819ED0")]
		public static void StampUndo(List<string> terrainNames, bool executeNow = true, [Optional] Stamper stamper)
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x81A0B4", Offset = "0x81A0B4", VA = "0x81A0B4")]
		public static void StampRedo(List<string> terrainNames, bool executeNow = true, [Optional] Stamper stamper)
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x819EE4", Offset = "0x819EE4", VA = "0x819EE4")]
		private static void StampUndoRedo(bool isRedo, List<string> terrainNames, bool executeNow = true, [Optional] Stamper stamper)
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x81A714", Offset = "0x81A714", VA = "0x81A714")]
		public static void ExternalSessionEntry(ScriptableObject scriptableObject, Action<ScriptableObject> actionToExecute, bool executeNow = true)
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x81A954", Offset = "0x81A954", VA = "0x81A954")]
		public static void Spawn(SpawnOperationSettings spawnOperationSettings, bool executeNow = true, [Optional] List<Spawner> spawnerList)
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x81B19C", Offset = "0x81B19C", VA = "0x81B19C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x590A10", Offset = "0x590A10")]
		public IEnumerator PlaySessionCoRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x81B208", Offset = "0x81B208", VA = "0x81B208")]
		public void PlayOperation(int opIdx)
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x81B23C", Offset = "0x81B23C", VA = "0x81B23C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x590A70", Offset = "0x590A70")]
		public IEnumerator PlayOperationCoRoutine(int operationIdx, bool syncHeightmapsWhenStamping)
		{
			return null;
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x81B298", Offset = "0x81B298", VA = "0x81B298")]
		public void CancelPlayback()
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x81A888", Offset = "0x81A888", VA = "0x81A888")]
		public static byte[] SerializeExternalAction(Action<ScriptableObject> action)
		{
			return null;
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x81B37C", Offset = "0x81B37C", VA = "0x81B37C")]
		public static bool ExecuteSerializedExternalAction(ScriptableObject scriptableObject, byte[] serializedAction)
		{
			return default(bool);
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x81B5AC", Offset = "0x81B5AC", VA = "0x81B5AC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x81B88C", Offset = "0x81B88C", VA = "0x81B88C")]
		private GameObject FindOrCreateObject(GaiaOperation operation)
		{
			return null;
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x81B894", Offset = "0x81B894", VA = "0x81B894")]
		private GameObject ShowStamper(string name, string id)
		{
			return null;
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x81B9EC", Offset = "0x81B9EC", VA = "0x81B9EC")]
		private GameObject CreateSpawner(string name, string id)
		{
			return null;
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x8139E8", Offset = "0x8139E8", VA = "0x8139E8")]
		private void GetTerrainMinMax(TerrainData terrainData, ref float min, ref float max, bool forceRecalculate = false)
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x81BACC", Offset = "0x81BACC", VA = "0x81BACC")]
		private float GetMinMaxTerrainHeight(TerrainData terrainData, ref float min, ref float max, [Optional] RenderTexture inputheightMapTexture, float maxPossibleHeight = 0f)
		{
			return default(float);
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x81BF64", Offset = "0x81BF64", VA = "0x81BF64")]
		private static GameObject CreateTile(int tx, int tz, WorldCreationSettings worldCreationSettings, ref Terrain[,] world, TerrainLayer[] terrainLayers, DetailPrototype[] terrainDetails, TreePrototype[] terrainTrees)
		{
			return null;
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x81C7C0", Offset = "0x81C7C0", VA = "0x81C7C0")]
		public static void CreateOrUpdateWorld(WorldCreationSettings worldCreationSettings, bool executeNow = true, bool isUpdate = false)
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x81D4B4", Offset = "0x81D4B4", VA = "0x81D4B4")]
		public static bool CheckIfSceneIsSaved(WorldCreationSettings worldCreationSettings)
		{
			return default(bool);
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x8146B8", Offset = "0x8146B8", VA = "0x8146B8")]
		private string SaveOperationData(GaiaOperation op, ScriptableObject dataObject)
		{
			return null;
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x815D3C", Offset = "0x815D3C", VA = "0x815D3C")]
		public static bool ExecuteOperation(GaiaOperation op)
		{
			return default(bool);
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x81D4BC", Offset = "0x81D4BC", VA = "0x81D4BC")]
		private bool StartCreateWorld(WorldCreationSettings worldCreationSettings)
		{
			return default(bool);
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x81D4EC", Offset = "0x81D4EC", VA = "0x81D4EC")]
		private bool StartUpdateWorld(GaiaOperation op)
		{
			return default(bool);
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x81D51C", Offset = "0x81D51C", VA = "0x81D51C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x590AD0", Offset = "0x590AD0")]
		private IEnumerator ExecuteCreateWorld(WorldCreationSettings worldCreationSettings)
		{
			return null;
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x81D5E4", Offset = "0x81D5E4", VA = "0x81D5E4")]
		private void OnTerrainCreationSpawnFinished()
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x8186BC", Offset = "0x8186BC", VA = "0x8186BC")]
		private static bool ExecuteFlatten(GaiaOperation op)
		{
			return default(bool);
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x818C9C", Offset = "0x818C9C", VA = "0x818C9C")]
		private static bool ExecuteRemoveNonBiomeResources(GaiaOperation op, BiomeController biomeController)
		{
			return default(bool);
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x8175D0", Offset = "0x8175D0", VA = "0x8175D0")]
		private bool StartWorldMapStamp(GaiaOperation op)
		{
			return default(bool);
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x81D5E8", Offset = "0x81D5E8", VA = "0x81D5E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x590B30", Offset = "0x590B30")]
		public IEnumerator ContinueWorldMapStamp()
		{
			return null;
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x81D588", Offset = "0x81D588", VA = "0x81D588")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x590B90", Offset = "0x590B90")]
		private IEnumerator ExecuteUpdateWorld(GaiaOperation op)
		{
			return null;
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x81D654", Offset = "0x81D654", VA = "0x81D654")]
		public static void GetTerrainUpdateGrids(ref WorldCreationSettings worldCreationSettings, ref BoundsDouble oldBounds, ref TerrainGridReference[,] oldTerrainGrid, ref TerrainGridReference[,] newTerrainGrid)
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x81D658", Offset = "0x81D658", VA = "0x81D658")]
		private static void UpdateSingleTerrain(Terrain terrain, int targetX, int targetZ, WorldCreationSettings wcs)
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x8161B4", Offset = "0x8161B4", VA = "0x8161B4")]
		private static bool ExecuteStamp(GaiaOperation op, GameObject stamperGO, bool skipUndo = false, [Optional] WorldMapStampSettings worldMapStampSettings, bool worldMapStamp = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x819478", Offset = "0x819478", VA = "0x819478")]
		private static bool ExecuteClearWorld()
		{
			return default(bool);
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x81D894", Offset = "0x81D894", VA = "0x81D894")]
		private static void DeleteAllTerrainScenes(GaiaSessionManager sessionMgr, bool deleteTerrainData)
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x8196C8", Offset = "0x8196C8", VA = "0x8196C8")]
		private static bool ExecuteClearSpawns(GaiaOperation op, [Optional] Spawner spawner)
		{
			return default(bool);
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x8182D4", Offset = "0x8182D4", VA = "0x8182D4")]
		private static bool ExecuteMaskMapExport(GaiaOperation op, [Optional] MaskMapExport maskMapExport)
		{
			return default(bool);
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x81AF30", Offset = "0x81AF30", VA = "0x81AF30")]
		private static bool ExecuteSpawn(GaiaOperation op, [Optional] List<Spawner> spawnerList, [Optional] BiomeController biomeController)
		{
			return default(bool);
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x81A0D0", Offset = "0x81A0D0", VA = "0x81A0D0")]
		private static bool ExecuteStampUndoRedo(bool isRedo, GaiaOperation op, [Optional] Stamper stamper)
		{
			return default(bool);
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x817AF4", Offset = "0x817AF4", VA = "0x817AF4")]
		private static bool ExecuteExportWorldMapToLocalMap(WorldCreationSettings newWorldCreationSettings)
		{
			return default(bool);
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x811F70", Offset = "0x811F70", VA = "0x811F70")]
		private static void FlattenTerrainsByList(List<string> terrainsList)
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x81E0E0", Offset = "0x81E0E0", VA = "0x81E0E0")]
		private static void Flatten(Terrain terrain)
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x81D9F8", Offset = "0x81D9F8", VA = "0x81D9F8")]
		public static GameObject GetOrCreateSessionSpawners(SpawnOperationSettings spawnOperationSettings, ref BiomeController biomeController, ref List<Spawner> spawnerList)
		{
			return null;
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x81D898", Offset = "0x81D898", VA = "0x81D898")]
		public static GameObject GetOrCreateMaskMapExporter(MaskMapExportSettings maskMapExportSettings, ref MaskMapExport maskMapExport)
		{
			return null;
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x81D65C", Offset = "0x81D65C", VA = "0x81D65C")]
		public static Stamper GetOrCreateSessionStamper([Optional] GameObject stamperGO)
		{
			return null;
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x81E168", Offset = "0x81E168", VA = "0x81E168")]
		public static void AddOnlyColliderScenesToBuildSettings(List<TerrainScene> allTerrainScenes)
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x81E16C", Offset = "0x81E16C", VA = "0x81E16C")]
		public static void AddTerrainScenesToBuildSettings(List<TerrainScene> allTerrainScenes)
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x81E170", Offset = "0x81E170", VA = "0x81E170")]
		public bool CheckIfHeightmapRestoreISAllowed(List<Spawner> spawnersToCheck, [Optional] GaiaSettings gaiaSettings)
		{
			return default(bool);
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x81E32C", Offset = "0x81E32C", VA = "0x81E32C")]
		public GaiaSessionManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021B")]
	public class RemoveNonBiomeResourcesSettings : ScriptableObject
	{
		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BiomeControllerSettings m_biomeControllerSettings;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SpawnerSettings> m_spawnerSettingsList;

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xABDD44", Offset = "0xABDD44", VA = "0xABDD44")]
		public RemoveNonBiomeResourcesSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021C")]
	public class SpawnOperationSettings : ScriptableObject
	{
		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoundsDouble m_spawnArea;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BiomeControllerSettings m_biomeControllerSettings;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_isWorldMapSpawner;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<SpawnerSettings> m_spawnerSettingsList;

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x8D16FC", Offset = "0x8D16FC", VA = "0x8D16FC")]
		public SpawnOperationSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021D")]
	public class UndoRedoOperationSettings : ScriptableObject
	{
		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> m_TerrainsList;

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xC5AC28", Offset = "0xC5AC28", VA = "0xC5AC28")]
		public UndoRedoOperationSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021E")]
	public class WorldCreationSettings : ScriptableObject
	{
		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GaiaConstants.EnvironmentSizePreset m_targetSizePreset;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public GaiaConstants.EnvironmentTarget m_qualityPreset;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_xTiles;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int m_zTiles;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int m_tileSize;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_tileHeight;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string m_dateTimeString;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int m_seaLevel;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool m_createInScene;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool m_autoUnloadScenes;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public bool m_applyFloatingPointFix;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		public bool m_recenterOnUpdate;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 m_centerOffset;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool m_isWorldMap;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool m_autoSpawnBiome;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GaiaDefaults m_gaiaDefaults;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<BiomeSpawnerListEntry> m_spawnerPresetList;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public WorldMapStampSettings m_worldMapStampSettings;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool[,] m_terrainCreationToggles;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int m_oldTerrainOffsetX;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int m_oldTerrainOffsetZ;

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x941A80", Offset = "0x941A80", VA = "0x941A80")]
		public string CheckSettings(bool isWorldMap = false)
		{
			return null;
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x941F68", Offset = "0x941F68", VA = "0x941F68")]
		public WorldCreationSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021F")]
	public class WorldMapStampSettings : ScriptableObject
	{
		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_worldMapSize;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int m_targetWorldSize;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_tiles;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int m_tilesize;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_tileHeight;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int m_heightmapResolution;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_minWorldHeight;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_maxWorldHeight;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public StamperSettings m_baseTerrainStamperSettings;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<StamperSettings> m_stamperSettingsList;

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x943CC0", Offset = "0x943CC0", VA = "0x943CC0")]
		public WorldMapStampSettings()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public enum NoiseTypeName
	{
		[Token(Token = "0x4001969")]
		Billow,
		[Token(Token = "0x400196A")]
		Perlin,
		[Token(Token = "0x400196B")]
		Ridge,
		[Token(Token = "0x400196C")]
		Value
	}
	[Token(Token = "0x2000221")]
	public enum BaseTerrainInputType
	{
		[Token(Token = "0x400196E")]
		Generator,
		[Token(Token = "0x400196F")]
		Image,
		[Token(Token = "0x4001970")]
		ExistingTerrain
	}
	[Serializable]
	[Token(Token = "0x2000222")]
	public class BaseTerrainNoiseSettings
	{
		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NoiseTypeName m_shapeNoiseStyle;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m_shapeSize;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_shapeStrength;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_shapeSteepness;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_shapeGranularity;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 m_shapeOffset;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve m_noiseStrengthTransform;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_warpIterations;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_warpStrength;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector4 m_warpOffset;

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x88BC90", Offset = "0x88BC90", VA = "0x88BC90")]
		public BaseTerrainNoiseSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000223")]
	public class BaseTerrainSettings : ScriptableObject, ISerializationCallbackReceiver
	{
		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_drawPreview;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BaseTerrainInputType m_baseTerrainInputType;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_heightScale;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_baseLevel;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_heightVariance;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public GaiaConstants.GeneratorBorderStyle m_borderStyle;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ImageMask m_inputImageMask;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BaseTerrainNoiseSettings[] m_baseNoiseSettings;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Terrain m_inputTerrain;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool m_advancedInputSettingsUnfolded;

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x88BCDC", Offset = "0x88BCDC", VA = "0x88BCDC", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x88BCE0", Offset = "0x88BCE0", VA = "0x88BCE0", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x88BCE4", Offset = "0x88BCE4", VA = "0x88BCE4")]
		public BaseTerrainSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000224")]
	public class BiomeController : MonoBehaviour
	{
		[Token(Token = "0x200056F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572E98", Offset = "0x572E98")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4002F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Spawner spawner;

			[Token(Token = "0x6002330")]
			[Address(RVA = "0x91B0B4", Offset = "0x91B0B4", VA = "0x91B0B4")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x6002331")]
			[Address(RVA = "0x91B0BC", Offset = "0x91B0BC", VA = "0x91B0BC")]
			internal bool <UpdateSpawnerList>b__0(AutoSpawner x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572EA8", Offset = "0x572EA8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ImageMask, bool> <>9__42_0;

			[Token(Token = "0x6002333")]
			[Address(RVA = "0x91B08C", Offset = "0x91B08C", VA = "0x91B08C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002334")]
			[Address(RVA = "0x91B094", Offset = "0x91B094", VA = "0x91B094")]
			internal bool <LoadSettings>b__42_0(ImageMask x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BiomeControllerSettings settings;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_autoSpawnersToggleAll;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<AutoSpawner> m_autoSpawners;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PostProcessProfile m_postProcessProfile;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GaiaConstants.BiomePostProcessingVolumeSpawnMode m_ppVSpawnMode;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool m_autoSpawnRequested;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool m_drawPreview;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public bool m_biomePreviewDirty;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Terrain m_lastActiveTerrain;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_minWorldHeight;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_maxWorldHeight;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture m_cachedPreviewRT;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GaiaSettings m_gaiaSettings;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GaiaConstants.AutoSpawnerArea m_autoSpawnerArea;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool m_showSeaLevelPlane;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool m_showSeaLevelinPreview;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		public bool m_showBoundingBox;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string m_oldName;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool m_changesMadeSinceLastSave;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool m_biomeWasSpawned;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool m_highlightLoadingSettings;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public long m_highlightLoadingSettingsStartedTimeStamp;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private TerrainLoader m_terrainLoader;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public LoadMode m_loadTerrainMode;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int m_impostorLoadingRange;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GaiaSessionManager m_sessionManager;

		[Token(Token = "0x17000192")]
		public BiomeControllerSettings m_settings
		{
			[Token(Token = "0x6001069")]
			[Address(RVA = "0x88C498", Offset = "0x88C498", VA = "0x88C498")]
			get
			{
				return null;
			}
			[Token(Token = "0x600106A")]
			[Address(RVA = "0x88C5AC", Offset = "0x88C5AC", VA = "0x88C5AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000193")]
		private GaiaSettings GaiaSettings
		{
			[Token(Token = "0x600106B")]
			[Address(RVA = "0x88C5B4", Offset = "0x88C5B4", VA = "0x88C5B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		public TerrainLoader TerrainLoader
		{
			[Token(Token = "0x600106C")]
			[Address(RVA = "0x88C63C", Offset = "0x88C63C", VA = "0x88C63C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		private GaiaSessionManager SessionManager
		{
			[Token(Token = "0x600106D")]
			[Address(RVA = "0x88C78C", Offset = "0x88C78C", VA = "0x88C78C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x88C81C", Offset = "0x88C81C", VA = "0x88C81C")]
		public void UpdateSpawnerList()
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x88CA74", Offset = "0x88CA74", VA = "0x88CA74")]
		public void HighlightLoadingSettings()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x88CAA4", Offset = "0x88CAA4", VA = "0x88CAA4")]
		public void UpdateAutoLoadRange()
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x88CC20", Offset = "0x88CC20", VA = "0x88CC20")]
		public void FitToTerrain([Optional] Terrain t)
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x88CE38", Offset = "0x88CE38", VA = "0x88CE38")]
		public void FitToAllTerrains()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x88D2DC", Offset = "0x88D2DC", VA = "0x88D2DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x88D2FC", Offset = "0x88D2FC", VA = "0x88D2FC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x88D300", Offset = "0x88D300", VA = "0x88D300")]
		public void LoadSettings(BiomeControllerSettings settingsToLoad)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x88D74C", Offset = "0x88D74C", VA = "0x88D74C")]
		public void LoadFromPreset(BiomePreset presetToLoad)
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x88CF9C", Offset = "0x88CF9C", VA = "0x88CF9C")]
		public Terrain GetCurrentTerrain()
		{
			return null;
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x88DEFC", Offset = "0x88DEFC", VA = "0x88DEFC")]
		public void UpdateMinMaxHeight()
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x88E03C", Offset = "0x88E03C", VA = "0x88E03C")]
		public void DrawBiomePreview()
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x88E4A0", Offset = "0x88E4A0", VA = "0x88E4A0")]
		private RenderTexture ApplyBrush(GaiaMultiTerrainOperation operation, MultiTerrainOperationType opType = MultiTerrainOperationType.Heightmap)
		{
			return null;
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x88E764", Offset = "0x88E764", VA = "0x88E764")]
		private void ReleaseRenderTexture(RenderTexture texture)
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x88E7E8", Offset = "0x88E7E8", VA = "0x88E7E8")]
		public void RemoveForeignTrees(List<SpawnerSettings> biomeSpawnerSettings, [Optional] List<string> validTerrainNames)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x88ECE0", Offset = "0x88ECE0", VA = "0x88ECE0")]
		public void RemoveForeignGameObjects(List<SpawnerSettings> biomeSpawnerSettings, [Optional] List<string> validTerrainNames)
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x88F5B8", Offset = "0x88F5B8", VA = "0x88F5B8")]
		public void RemoveForeignTerrainDetails(List<SpawnerSettings> biomeSpawnerSettings, [Optional] List<string> validTerrainNames)
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x88FADC", Offset = "0x88FADC", VA = "0x88FADC")]
		public BiomeController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000225")]
	public class BiomeControllerSettings : ScriptableObject, ISerializationCallbackReceiver
	{
		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_x;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_y;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_z;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_range;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_postProcessBlenddDistance;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color m_visualisationColor;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool m_removeForeignGameObjects;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_removeForeignGameObjectStrength;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool m_removeForeignTrees;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_removeForeignTreesStrength;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool m_removeForeignTerrainDetails;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_removeForeignTerrainDetailsStrength;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ImageMask[] imageMasks;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string m_lastSavePath;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool m_clearSpawnsToggleTrees;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool m_clearSpawnsToggleDetails;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool m_clearSpawnsToggleGOs;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool m_clearSpawnsToggleSpawnExtensions;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool m_clearSpawnsToggleProbes;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ClearSpawnFor m_clearSpawnsFor;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ClearSpawnFromBiomes m_clearSpawnsFrom;

		[Token(Token = "0x17000196")]
		public ImageMask[] m_imageMasks
		{
			[Token(Token = "0x6001081")]
			[Address(RVA = "0x9231C4", Offset = "0x9231C4", VA = "0x9231C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001082")]
			[Address(RVA = "0x923220", Offset = "0x923220", VA = "0x923220")]
			set
			{
			}
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x923150", Offset = "0x923150", VA = "0x923150")]
		public void ClearImageMaskTextures()
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x923228", Offset = "0x923228", VA = "0x923228", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x92322C", Offset = "0x92322C", VA = "0x92322C", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x923230", Offset = "0x923230", VA = "0x923230")]
		public BiomeControllerSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000226")]
	public class BiomeSpawnerListEntry : IComparable
	{
		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_autoAssignPrototypes;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpawnerSettings m_spawnerSettings;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_isActiveInStamper;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool m_isActiveInBiome;

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x923E30", Offset = "0x923E30", VA = "0x923E30", Slot = "4")]
		public int CompareTo(object other)
		{
			return default(int);
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x923F9C", Offset = "0x923F9C", VA = "0x923F9C")]
		public BiomeSpawnerListEntry()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000227")]
	public class AdvancedTabBiomeListEntry : IComparable
	{
		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_autoAssignPrototypes;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BiomePreset m_biomePreset;

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x87D914", Offset = "0x87D914", VA = "0x87D914", Slot = "4")]
		public int CompareTo(object other)
		{
			return default(int);
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x87DA68", Offset = "0x87DA68", VA = "0x87DA68")]
		public AdvancedTabBiomeListEntry()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public struct BiomePresetDropdownEntry : IComparable
	{
		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BiomePreset biomePreset;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string name;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int ID;

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x923CEC", Offset = "0x923CEC", VA = "0x923CEC", Slot = "4")]
		public int CompareTo(object other)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x2000229")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x571AD8", Offset = "0x571AD8")]
	public class BiomePreset : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000571")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572EB8", Offset = "0x572EB8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<BiomeSpawnerListEntry, bool> <>9__12_0;

			[Token(Token = "0x6002336")]
			[Address(RVA = "0x91B1A0", Offset = "0x91B1A0", VA = "0x91B1A0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002337")]
			[Address(RVA = "0x91B1A8", Offset = "0x91B1A8", VA = "0x91B1A8")]
			internal bool <CreateBiome>b__12_0(BiomeSpawnerListEntry x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_orderNumber;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<BiomeSpawnerListEntry> m_spawnerPresetList;

		[NonSerialized]
		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PostProcessProfile m_postProcessProfile;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string m_postProcessingProfileGUID;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GaiaSceneCullingProfile m_gaiaSceneCullingProfile;

		[Token(Token = "0x17000197")]
		public PostProcessProfile postProcessProfile
		{
			[Token(Token = "0x600108B")]
			[Address(RVA = "0x9232EC", Offset = "0x9232EC", VA = "0x9232EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600108C")]
			[Address(RVA = "0x923360", Offset = "0x923360", VA = "0x923360")]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public GaiaSceneCullingProfile GaiaSceneCullingProfile
		{
			[Token(Token = "0x600108D")]
			[Address(RVA = "0x923364", Offset = "0x923364", VA = "0x923364")]
			get
			{
				return null;
			}
			[Token(Token = "0x600108E")]
			[Address(RVA = "0x9234CC", Offset = "0x9234CC", VA = "0x9234CC")]
			set
			{
			}
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x9234D4", Offset = "0x9234D4", VA = "0x9234D4")]
		public void RefreshSpawnerListEntries()
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x9234D8", Offset = "0x9234D8", VA = "0x9234D8")]
		public BiomeController CreateBiome(bool autoAssignPrototypes)
		{
			return null;
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x923C58", Offset = "0x923C58", VA = "0x923C58")]
		public BiomePreset()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public interface ISpawnExtension
	{
		[Token(Token = "0x17000199")]
		string Name
		{
			[Token(Token = "0x6001092")]
			get;
		}

		[Token(Token = "0x1700019A")]
		bool AffectsHeights
		{
			[Token(Token = "0x6001093")]
			get;
		}

		[Token(Token = "0x1700019B")]
		bool AffectsTextures
		{
			[Token(Token = "0x6001094")]
			get;
		}

		[Token(Token = "0x6001095")]
		void Init(Spawner spawner);

		[Token(Token = "0x6001096")]
		void Spawn(Spawner spawner, Transform target, int ruleIndex, int instanceIndex, SpawnExtensionInfo spawnInfo);

		[Token(Token = "0x6001097")]
		void Delete([Optional] Transform target);

		[Token(Token = "0x6001098")]
		void Close();
	}
	[Serializable]
	[Token(Token = "0x200022B")]
	public class SpawnCritera
	{
		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583968", Offset = "0x583968")]
		public string m_name;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5839A0", Offset = "0x5839A0")]
		public GaiaConstants.SpawnerLocationCheckType m_checkType;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5839D8", Offset = "0x5839D8")]
		public bool m_virginTerrain;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583A10", Offset = "0x583A10")]
		public bool m_checkHeight;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583A48", Offset = "0x583A48")]
		public float m_minHeight;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583A80", Offset = "0x583A80")]
		public float m_maxHeight;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583AB8", Offset = "0x583AB8")]
		public AnimationCurve m_heightFitness;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583AF0", Offset = "0x583AF0")]
		public bool m_checkSlope;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583B28", Offset = "0x583B28")]
		public float m_minSlope;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583B60", Offset = "0x583B60")]
		public float m_maxSlope;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583B98", Offset = "0x583B98")]
		public AnimationCurve m_slopeFitness;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583BD0", Offset = "0x583BD0")]
		public bool m_checkProximity;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583C08", Offset = "0x583C08")]
		public string m_proximityTag;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583C40", Offset = "0x583C40")]
		public float m_minProximity;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583C78", Offset = "0x583C78")]
		public float m_maxProximity;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583CB0", Offset = "0x583CB0")]
		public AnimationCurve m_proximityFitness;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583CE8", Offset = "0x583CE8")]
		public bool m_checkTexture;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583D20", Offset = "0x583D20")]
		public string m_matchingTextures;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x583D58", Offset = "0x583D58")]
		public bool m_isActive;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool m_isInitialised;

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x8D0908", Offset = "0x8D0908", VA = "0x8D0908")]
		public void Initialise(Spawner spawner)
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x8D0AE4", Offset = "0x8D0AE4", VA = "0x8D0AE4")]
		public float GetSlopeFitness(float slope)
		{
			return default(float);
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x8D0B44", Offset = "0x8D0B44", VA = "0x8D0B44")]
		public float GetHeightFitness(float height, float sealLevel)
		{
			return default(float);
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x8D0BA4", Offset = "0x8D0BA4", VA = "0x8D0BA4")]
		public float GetProximityFitness(float proximity)
		{
			return default(float);
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x8D0C04", Offset = "0x8D0C04", VA = "0x8D0C04")]
		public float GetTextureFitness(float[] textures)
		{
			return default(float);
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x8D0DA4", Offset = "0x8D0DA4", VA = "0x8D0DA4")]
		public float GetFitness(ref SpawnInfo spawnInfo)
		{
			return default(float);
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x8D0F9C", Offset = "0x8D0F9C", VA = "0x8D0F9C")]
		public SpawnCritera()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class SpawnExtensionInfo
	{
		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 m_position;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion m_rotation;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 m_scale;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_fitness;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Terrain m_currentTerrain;

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x8D16E4", Offset = "0x8D16E4", VA = "0x8D16E4")]
		public SpawnExtensionInfo()
		{
		}
	}
	[Token(Token = "0x200022D")]
	public class DebugSpawnExtension : MonoBehaviour, ISpawnExtension
	{
		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject testPrefab;

		[Token(Token = "0x1700019C")]
		public string Name
		{
			[Token(Token = "0x60010A1")]
			[Address(RVA = "0xA18340", Offset = "0xA18340", VA = "0xA18340", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		public bool AffectsHeights
		{
			[Token(Token = "0x60010A2")]
			[Address(RVA = "0xA18384", Offset = "0xA18384", VA = "0xA18384", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019E")]
		public bool AffectsTextures
		{
			[Token(Token = "0x60010A3")]
			[Address(RVA = "0xA1838C", Offset = "0xA1838C", VA = "0xA1838C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xA18394", Offset = "0xA18394", VA = "0xA18394", Slot = "10")]
		public void Close()
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xA18408", Offset = "0xA18408", VA = "0xA18408", Slot = "7")]
		public void Init(Spawner spawner)
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xA1847C", Offset = "0xA1847C", VA = "0xA1847C", Slot = "8")]
		public void Spawn(Spawner spawner, Transform target, int ruleIndex, int instanceIndex, SpawnExtensionInfo spawnExtensionInfo)
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xA18644", Offset = "0xA18644", VA = "0xA18644", Slot = "9")]
		public void Delete([Optional] Transform target)
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xA18710", Offset = "0xA18710", VA = "0xA18710")]
		public DebugSpawnExtension()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class GeNaProSpawnExtension : MonoBehaviour, ISpawnExtension
	{
		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_genaSpawnerPrefab;

		[Token(Token = "0x1700019F")]
		public string Name
		{
			[Token(Token = "0x60010A9")]
			[Address(RVA = "0xBF5F5C", Offset = "0xBF5F5C", VA = "0xBF5F5C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A0")]
		public bool AffectsHeights
		{
			[Token(Token = "0x60010AA")]
			[Address(RVA = "0xBF5FA0", Offset = "0xBF5FA0", VA = "0xBF5FA0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A1")]
		public bool AffectsTextures
		{
			[Token(Token = "0x60010AB")]
			[Address(RVA = "0xBF5FA8", Offset = "0xBF5FA8", VA = "0xBF5FA8", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xBF5FB0", Offset = "0xBF5FB0", VA = "0xBF5FB0", Slot = "10")]
		public void Close()
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xBF5FB4", Offset = "0xBF5FB4", VA = "0xBF5FB4", Slot = "7")]
		public void Init(Spawner spawner)
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xBF5FB8", Offset = "0xBF5FB8", VA = "0xBF5FB8", Slot = "8")]
		public void Spawn(Spawner spawner, Transform target, int ruleIndex, int instanceIndex, SpawnExtensionInfo spawnExtensionInfo)
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xBF5FBC", Offset = "0xBF5FBC", VA = "0xBF5FBC", Slot = "9")]
		public void Delete(Transform target)
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xBF603C", Offset = "0xBF603C", VA = "0xBF603C")]
		public GeNaProSpawnExtension()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class SpawnInfo
	{
		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Spawner m_spawner;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_outOfBounds;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_wasVirginTerrain;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_spawnRotationY;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_hitDistanceWU;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 m_hitLocationWU;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 m_hitLocationNU;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 m_hitNormal;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform m_hitObject;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Terrain m_hitTerrain;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_terrainHeightWU;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_terrainSlopeWU;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 m_terrainNormalWU;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float m_fitness;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float[] m_textureStrengths;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3[] m_areaHitsWU;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float m_areaHitSlopeWU;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float m_areaMinSlopeWU;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float m_areaAvgSlopeWU;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float m_areaMaxSlopeWU;

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x8D16EC", Offset = "0x8D16EC", VA = "0x8D16EC")]
		public SpawnInfo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000230")]
	public class SpawnRule
	{
		[Serializable]
		[Token(Token = "0x2000572")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572EC8", Offset = "0x572EC8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ResourceProtoGameObjectInstance, bool> <>9__61_0;

			[Token(Token = "0x4002F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ResourceProtoSpawnExtensionInstance, bool> <>9__61_1;

			[Token(Token = "0x4002F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<ResourceProtoSpawnExtensionInstance, bool> <>9__61_2;

			[Token(Token = "0x6002339")]
			[Address(RVA = "0x872B30", Offset = "0x872B30", VA = "0x872B30")]
			public <>c()
			{
			}

			[Token(Token = "0x600233A")]
			[Address(RVA = "0x872B38", Offset = "0x872B38", VA = "0x872B38")]
			internal bool <ResourceIsNull>b__61_0(ResourceProtoGameObjectInstance x)
			{
				return default(bool);
			}

			[Token(Token = "0x600233B")]
			[Address(RVA = "0x872BAC", Offset = "0x872BAC", VA = "0x872BAC")]
			internal bool <ResourceIsNull>b__61_1(ResourceProtoSpawnExtensionInstance x)
			{
				return default(bool);
			}

			[Token(Token = "0x600233C")]
			[Address(RVA = "0x872C20", Offset = "0x872C20", VA = "0x872C20")]
			internal bool <ResourceIsNull>b__61_2(ResourceProtoSpawnExtensionInstance x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_name;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_guid;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_useExtendedSpawn;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_minRequiredFitness;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_minInstanceRequiredFitness;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_failureRate;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ulong m_maxInstances;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool m_ignoreMaxInstances;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_minDirection;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_maxDirection;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_locationIncrementMin;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_locationIncrementMax;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_jitterPercent;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_boundsCheckQuality;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public GaiaConstants.SpawnerResourceType m_resourceType;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int m_resourceIdx;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ImageMask[] m_imageMasks;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color m_visualisationColor;

		[NonSerialized]
		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int m_resourceIdxPhysical;

		[NonSerialized]
		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform m_spawnParent;

		[NonSerialized]
		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string m_colliderName;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GaiaConstants.NoiseType m_noiseMask;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float m_noiseMaskSeed;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int m_noiseMaskOctaves;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float m_noiseMaskPersistence;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float m_noiseMaskFrequency;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float m_noiseMaskLacunarity;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float m_noiseZoom;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float m_noiseStrength;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool m_noiseInvert;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FractalGenerator m_noiseGenerator;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool m_isActive;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool m_isFoldedOut;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public ulong m_currInstanceCnt;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public ulong m_activeInstanceCnt;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public ulong m_inactiveInstanceCnt;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool m_resourceSettingsFoldedOut;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		public bool m_isHelpActive;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public int m_spawnedInstances;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public GaiaConstants.SpawnerTargetMode m_goSpawnTargetMode;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Transform m_goSpawnTarget;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public string m_terrainGOSpawnTargetName;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public int m_terrainDetailDensity;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float m_terrainDetailMinFitness;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float m_terrainDetailFitnessBeginFadeOut;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public BiomeController m_createdBiomeController;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public bool m_visibleInSceneHierarchy;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		public bool m_usesBoxStandIn;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
		public bool m_boundsCollisionCheck;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11B")]
		public bool m_changesHeightmap;

		[Token(Token = "0x170001A2")]
		public string GUID
		{
			[Token(Token = "0x60010B2")]
			[Address(RVA = "0x8D190C", Offset = "0x8D190C", VA = "0x8D190C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x8D1914", Offset = "0x8D1914", VA = "0x8D1914")]
		public SpawnRule()
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x8D1AC8", Offset = "0x8D1AC8", VA = "0x8D1AC8")]
		public void Initialise(Spawner spawner)
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x8D1ED4", Offset = "0x8D1ED4", VA = "0x8D1ED4")]
		public bool ResourceIsInUnity(Spawner spawner)
		{
			return default(bool);
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x8D1F18", Offset = "0x8D1F18", VA = "0x8D1F18")]
		public bool ResourceIsLoadedInTerrain(Spawner spawner, Terrain terrain)
		{
			return default(bool);
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x8D1F78", Offset = "0x8D1F78", VA = "0x8D1F78")]
		public void AddResourceToTerrain(Spawner spawner, [Optional] Terrain[] terrains)
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x8D1FC4", Offset = "0x8D1FC4", VA = "0x8D1FC4")]
		public float GetFitness(ref SpawnInfo spawnInfo)
		{
			return default(float);
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x8D2478", Offset = "0x8D2478", VA = "0x8D2478")]
		public float GetMaxScaledRadius(ref SpawnInfo spawnInfo)
		{
			return default(float);
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x8D1A44", Offset = "0x8D1A44", VA = "0x8D1A44")]
		public void RegenerateGUID()
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x8D2480", Offset = "0x8D2480", VA = "0x8D2480")]
		public void Spawn(ref SpawnInfo spawnInfo)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x8D2484", Offset = "0x8D2484", VA = "0x8D2484")]
		public bool ResourceIsNull(SpawnerSettings spawnerSettings)
		{
			return default(bool);
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x8D29C4", Offset = "0x8D29C4", VA = "0x8D29C4")]
		public bool CacheHeightMaps(Spawner spawner)
		{
			return default(bool);
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x8D29CC", Offset = "0x8D29CC", VA = "0x8D29CC")]
		public bool CacheTextures(Spawner spawner)
		{
			return default(bool);
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x8D2E5C", Offset = "0x8D2E5C", VA = "0x8D2E5C")]
		public bool CacheDetails(Spawner spawner)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x8D31F8", Offset = "0x8D31F8", VA = "0x8D31F8")]
		public bool CacheProximity(Spawner spawner)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x8D3390", Offset = "0x8D3390", VA = "0x8D3390")]
		public void AddProximityTags(Spawner spawner, ref List<string> tagList)
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class SpawnRuleExtension : MonoBehaviour
	{
		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xA8C2C8", Offset = "0xA8C2C8", VA = "0xA8C2C8", Slot = "4")]
		public virtual void Initialise()
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xA8C2CC", Offset = "0xA8C2CC", VA = "0xA8C2CC", Slot = "5")]
		public virtual bool AffectsTextures()
		{
			return default(bool);
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xA8C2D4", Offset = "0xA8C2D4", VA = "0xA8C2D4", Slot = "6")]
		public virtual bool AffectsDetails()
		{
			return default(bool);
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xA8C2DC", Offset = "0xA8C2DC", VA = "0xA8C2DC", Slot = "7")]
		public virtual float GetFitness(float fitness, ref SpawnInfo spawnInfo)
		{
			return default(float);
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xA8C2E0", Offset = "0xA8C2E0", VA = "0xA8C2E0", Slot = "8")]
		public virtual bool OverridesSpawn(SpawnRule spawnRule, ref SpawnInfo spawnInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xA8C2E8", Offset = "0xA8C2E8", VA = "0xA8C2E8", Slot = "9")]
		public virtual void Spawn(SpawnRule spawnRule, ref SpawnInfo spawnInfo)
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xA8C2EC", Offset = "0xA8C2EC", VA = "0xA8C2EC", Slot = "10")]
		public virtual void PostSpawn(SpawnRule spawnRule, ref SpawnInfo spawnInfo)
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xA8C2F0", Offset = "0xA8C2F0", VA = "0xA8C2F0")]
		public SpawnRuleExtension()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000232")]
	public enum ClearSpawnFrom
	{
		[Token(Token = "0x4001A24")]
		AnySource,
		[Token(Token = "0x4001A25")]
		OnlyThisSpawner
	}
	[Token(Token = "0x2000233")]
	public enum ClearSpawnFromBiomes
	{
		[Token(Token = "0x4001A27")]
		AnySource,
		[Token(Token = "0x4001A28")]
		OnlyThisBiome
	}
	[Token(Token = "0x2000234")]
	public enum ClearSpawnFor
	{
		[Token(Token = "0x4001A2A")]
		CurrentTerrainOnly,
		[Token(Token = "0x4001A2B")]
		AllTerrains
	}
	[Token(Token = "0x2000235")]
	public enum WorldDesignerPreviewMode
	{
		[Token(Token = "0x4001A2D")]
		Worldmap,
		[Token(Token = "0x4001A2E")]
		SingleTerrain
	}
	[Token(Token = "0x2000236")]
	public class TerrainPrototypeId
	{
		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Terrain terrain;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_prototypeAssetGUID;

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xA20CEC", Offset = "0xA20CEC", VA = "0xA20CEC")]
		public TerrainPrototypeId()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class TerrainMissingSpawnRules
	{
		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Terrain terrain;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SpawnRule> spawnRulesWithMissingResources;

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0xA20C74", Offset = "0xA20C74", VA = "0xA20C74")]
		public TerrainMissingSpawnRules()
		{
		}
	}
	[Token(Token = "0x2000238")]
	internal struct TerrainPosition
	{
		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int terrainID;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector2Int min;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector2Int max;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int affected;
	}
	[Token(Token = "0x2000239")]
	internal struct ObjectPosition
	{
		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;
	}
	[Token(Token = "0x200023A")]
	internal struct StampPosition
	{
		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;
	}
	[Serializable]
	[Token(Token = "0x200023B")]
	[ExecuteInEditMode]
	public class Spawner : MonoBehaviour
	{
		[Token(Token = "0x2000573")]
		public delegate void SpawnFinishedCallback();

		[Token(Token = "0x2000574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572ED8", Offset = "0x572ED8")]
		private sealed class <>c__DisplayClass176_0
		{
			[Token(Token = "0x4002F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpawnRule rule;

			[Token(Token = "0x4002F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Predicate<SpawnRule> <>9__2;

			[Token(Token = "0x6002341")]
			[Address(RVA = "0x873434", Offset = "0x873434", VA = "0x873434")]
			public <>c__DisplayClass176_0()
			{
			}

			[Token(Token = "0x6002342")]
			[Address(RVA = "0x87343C", Offset = "0x87343C", VA = "0x87343C")]
			internal bool <ControlSpawnRuleGUIDs>b__1(List<SpawnRule> x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002343")]
			[Address(RVA = "0x873510", Offset = "0x873510", VA = "0x873510")]
			internal bool <ControlSpawnRuleGUIDs>b__2(SpawnRule y)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000575")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572EE8", Offset = "0x572EE8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Spawner, List<SpawnRule>> <>9__176_0;

			[Token(Token = "0x4002F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Spawner, bool> <>9__214_0;

			[Token(Token = "0x4002F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<SpawnRule, bool> <>9__214_1;

			[Token(Token = "0x4002F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<KeyValuePair<TerrainOperation, AffectedPixels>, bool> <>9__214_2;

			[Token(Token = "0x4002F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<KeyValuePair<TerrainOperation, AffectedPixels>, Terrain> <>9__214_3;

			[Token(Token = "0x4002F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<SpawnRule, bool> <>9__222_0;

			[Token(Token = "0x4002F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<KeyValuePair<TerrainOperation, AffectedPixels>, bool> <>9__222_1;

			[Token(Token = "0x4002F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<KeyValuePair<TerrainOperation, AffectedPixels>, bool> <>9__222_2;

			[Token(Token = "0x4002F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<KeyValuePair<TerrainOperation, AffectedPixels>, bool> <>9__222_3;

			[Token(Token = "0x4002F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Func<SpawnRule, bool> <>9__225_0;

			[Token(Token = "0x4002F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static Func<SpawnRule, bool> <>9__228_0;

			[Token(Token = "0x4002F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static Predicate<SpawnRule> <>9__272_1;

			[Token(Token = "0x4002F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static Func<Spawner, bool> <>9__272_0;

			[Token(Token = "0x4002F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static Func<AutoSpawner, bool> <>9__283_5;

			[Token(Token = "0x4002F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static Func<AutoSpawner, Spawner> <>9__283_6;

			[Token(Token = "0x4002F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static Func<AutoSpawner, bool> <>9__283_0;

			[Token(Token = "0x4002F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static Func<AutoSpawner, SpawnerSettings> <>9__283_1;

			[Token(Token = "0x4002F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static Predicate<AutoSpawner> <>9__283_2;

			[Token(Token = "0x4002F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static Func<AutoSpawner, bool> <>9__283_3;

			[Token(Token = "0x4002F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static Func<AutoSpawner, Spawner> <>9__283_4;

			[Token(Token = "0x4002F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static Func<Spawner, List<SpawnRule>> <>9__295_0;

			[Token(Token = "0x4002F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static Func<ImageMask, bool> <>9__295_3;

			[Token(Token = "0x4002F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static Func<ImageMask, bool> <>9__295_4;

			[Token(Token = "0x6002345")]
			[Address(RVA = "0x872C98", Offset = "0x872C98", VA = "0x872C98")]
			public <>c()
			{
			}

			[Token(Token = "0x6002346")]
			[Address(RVA = "0x872CA0", Offset = "0x872CA0", VA = "0x872CA0")]
			internal List<SpawnRule> <ControlSpawnRuleGUIDs>b__176_0(Spawner x)
			{
				return null;
			}

			[Token(Token = "0x6002347")]
			[Address(RVA = "0x872CCC", Offset = "0x872CCC", VA = "0x872CCC")]
			internal bool <AreaSpawn>b__214_0(Spawner x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002348")]
			[Address(RVA = "0x872D5C", Offset = "0x872D5C", VA = "0x872D5C")]
			internal bool <AreaSpawn>b__214_1(SpawnRule x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002349")]
			[Address(RVA = "0x872D7C", Offset = "0x872D7C", VA = "0x872D7C")]
			internal bool <AreaSpawn>b__214_2(KeyValuePair<TerrainOperation, AffectedPixels> x)
			{
				return default(bool);
			}

			[Token(Token = "0x600234A")]
			[Address(RVA = "0x872DC4", Offset = "0x872DC4", VA = "0x872DC4")]
			internal Terrain <AreaSpawn>b__214_3(KeyValuePair<TerrainOperation, AffectedPixels> x)
			{
				return null;
			}

			[Token(Token = "0x600234B")]
			[Address(RVA = "0x872E04", Offset = "0x872E04", VA = "0x872E04")]
			internal bool <ExecuteSpawn>b__222_0(SpawnRule x)
			{
				return default(bool);
			}

			[Token(Token = "0x600234C")]
			[Address(RVA = "0x872E34", Offset = "0x872E34", VA = "0x872E34")]
			internal bool <ExecuteSpawn>b__222_1(KeyValuePair<TerrainOperation, AffectedPixels> x)
			{
				return default(bool);
			}

			[Token(Token = "0x600234D")]
			[Address(RVA = "0x872EA8", Offset = "0x872EA8", VA = "0x872EA8")]
			internal bool <ExecuteSpawn>b__222_2(KeyValuePair<TerrainOperation, AffectedPixels> x)
			{
				return default(bool);
			}

			[Token(Token = "0x600234E")]
			[Address(RVA = "0x872F1C", Offset = "0x872F1C", VA = "0x872F1C")]
			internal bool <ExecuteSpawn>b__222_3(KeyValuePair<TerrainOperation, AffectedPixels> x)
			{
				return default(bool);
			}

			[Token(Token = "0x600234F")]
			[Address(RVA = "0x872F90", Offset = "0x872F90", VA = "0x872F90")]
			internal bool <RandomizeWorldDesigner>b__225_0(SpawnRule x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002350")]
			[Address(RVA = "0x872FA8", Offset = "0x872FA8", VA = "0x872FA8")]
			internal bool <SpawnStamps>b__228_0(SpawnRule x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002351")]
			[Address(RVA = "0x872FC0", Offset = "0x872FC0", VA = "0x872FC0")]
			internal bool <ActivateTreeStandIn>b__272_0(Spawner x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002352")]
			[Address(RVA = "0x873108", Offset = "0x873108", VA = "0x873108")]
			internal bool <ActivateTreeStandIn>b__272_1(SpawnRule y)
			{
				return default(bool);
			}

			[Token(Token = "0x6002353")]
			[Address(RVA = "0x873120", Offset = "0x873120", VA = "0x873120")]
			internal bool <HandleAutoSpawnerStack>b__283_5(AutoSpawner x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002354")]
			[Address(RVA = "0x8731B0", Offset = "0x8731B0", VA = "0x8731B0")]
			internal Spawner <HandleAutoSpawnerStack>b__283_6(AutoSpawner x)
			{
				return null;
			}

			[Token(Token = "0x6002355")]
			[Address(RVA = "0x8731C8", Offset = "0x8731C8", VA = "0x8731C8")]
			internal bool <HandleAutoSpawnerStack>b__283_0(AutoSpawner x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002356")]
			[Address(RVA = "0x873258", Offset = "0x873258", VA = "0x873258")]
			internal SpawnerSettings <HandleAutoSpawnerStack>b__283_1(AutoSpawner x)
			{
				return null;
			}

			[Token(Token = "0x6002357")]
			[Address(RVA = "0x87327C", Offset = "0x87327C", VA = "0x87327C")]
			internal bool <HandleAutoSpawnerStack>b__283_2(AutoSpawner x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002358")]
			[Address(RVA = "0x873320", Offset = "0x873320", VA = "0x873320")]
			internal bool <HandleAutoSpawnerStack>b__283_3(AutoSpawner x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002359")]
			[Address(RVA = "0x8733B0", Offset = "0x8733B0", VA = "0x8733B0")]
			internal Spawner <HandleAutoSpawnerStack>b__283_4(AutoSpawner x)
			{
				return null;
			}

			[Token(Token = "0x600235A")]
			[Address(RVA = "0x8733C8", Offset = "0x8733C8", VA = "0x8733C8")]
			internal List<SpawnRule> <LoadSettings>b__295_0(Spawner x)
			{
				return null;
			}

			[Token(Token = "0x600235B")]
			[Address(RVA = "0x8733F4", Offset = "0x8733F4", VA = "0x8733F4")]
			internal bool <LoadSettings>b__295_3(ImageMask x)
			{
				return default(bool);
			}

			[Token(Token = "0x600235C")]
			[Address(RVA = "0x873414", Offset = "0x873414", VA = "0x873414")]
			internal bool <LoadSettings>b__295_4(ImageMask x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000576")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572EF8", Offset = "0x572EF8")]
		private sealed class <>c__DisplayClass191_0
		{
			[Token(Token = "0x4002F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Terrain[] terrains;

			[Token(Token = "0x4002F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int terrainID;

			[Token(Token = "0x4002F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Predicate<TerrainMissingSpawnRules> <>9__0;

			[Token(Token = "0x600235D")]
			[Address(RVA = "0x87353C", Offset = "0x87353C", VA = "0x87353C")]
			public <>c__DisplayClass191_0()
			{
			}

			[Token(Token = "0x600235E")]
			[Address(RVA = "0x873544", Offset = "0x873544", VA = "0x873544")]
			internal bool <GetMissingResources>b__0(TerrainMissingSpawnRules x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000577")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572F08", Offset = "0x572F08")]
		private sealed class <AreaSpawn>d__214 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Spawner <>4__this;

			[Token(Token = "0x4002F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BoundsDouble area;

			[Token(Token = "0x4002F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<Spawner> spawners;

			[Token(Token = "0x4002F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<string> validTerrainNames;

			[Token(Token = "0x4002F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 <startPosition>5__2;

			[Token(Token = "0x4002F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <spawnRange>5__3;

			[Token(Token = "0x4002F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private bool <spawnedGameObjects>5__4;

			[Token(Token = "0x4002F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float <locationIncrement>5__5;

			[Token(Token = "0x4002F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <totalSpawns>5__6;

			[Token(Token = "0x4002F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private int <totalSpawnsCompleted>5__7;

			[Token(Token = "0x4002F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Vector3 <currentSpawnCenter>5__8;

			[Token(Token = "0x4002F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private BakedMaskCache <collisionMaskCache>5__9;

			[Token(Token = "0x4002F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private List<TerrainMissingSpawnRules> <terrainsMissingSpawnRules>5__10;

			[Token(Token = "0x4002F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private bool <autoConnectNeighborsDisabled>5__11;

			[Token(Token = "0x4002F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private Terrain <currentTerrain>5__12;

			[Token(Token = "0x4002F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private List<Spawner>.Enumerator <>7__wrap12;

			[Token(Token = "0x4002F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Spawner <spawner>5__14;

			[Token(Token = "0x170003E8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002363")]
				[Address(RVA = "0x875954", Offset = "0x875954", VA = "0x875954", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002365")]
				[Address(RVA = "0x87599C", Offset = "0x87599C", VA = "0x87599C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600235F")]
			[Address(RVA = "0x87385C", Offset = "0x87385C", VA = "0x87385C")]
			[DebuggerHidden]
			public <AreaSpawn>d__214(int <>1__state)
			{
			}

			[Token(Token = "0x6002360")]
			[Address(RVA = "0x873888", Offset = "0x873888", VA = "0x873888", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002361")]
			[Address(RVA = "0x873908", Offset = "0x873908", VA = "0x873908", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002362")]
			[Address(RVA = "0x8738B4", Offset = "0x8738B4", VA = "0x8738B4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002364")]
			[Address(RVA = "0x87595C", Offset = "0x87595C", VA = "0x87595C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572F18", Offset = "0x572F18")]
		private sealed class <>c__DisplayClass222_0
		{
			[Token(Token = "0x4002F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TerrainMissingSpawnRules tmsr;

			[Token(Token = "0x6002366")]
			[Address(RVA = "0x8735F0", Offset = "0x8735F0", VA = "0x8735F0")]
			public <>c__DisplayClass222_0()
			{
			}

			[Token(Token = "0x6002367")]
			[Address(RVA = "0x8735F8", Offset = "0x8735F8", VA = "0x8735F8")]
			internal bool <ExecuteSpawn>b__4(KeyValuePair<TerrainOperation, AffectedPixels> x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000579")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572F28", Offset = "0x572F28")]
		private sealed class <>c__DisplayClass226_0
		{
			[Token(Token = "0x4002F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MultiTerrainOperationType multiTerrainOperationType;

			[Token(Token = "0x6002368")]
			[Address(RVA = "0x8736C8", Offset = "0x8736C8", VA = "0x8736C8")]
			public <>c__DisplayClass226_0()
			{
			}

			[Token(Token = "0x6002369")]
			[Address(RVA = "0x8736D0", Offset = "0x8736D0", VA = "0x8736D0")]
			internal bool <SimulateRule>b__0(KeyValuePair<TerrainOperation, AffectedPixels> x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200057A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572F38", Offset = "0x572F38")]
		private sealed class <>c__DisplayClass236_0
		{
			[Token(Token = "0x4002F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GaiaConstants.SpawnerResourceType resourceType;

			[Token(Token = "0x4002F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<SpawnRule, bool> <>9__0;

			[Token(Token = "0x600236A")]
			[Address(RVA = "0x873728", Offset = "0x873728", VA = "0x873728")]
			public <>c__DisplayClass236_0()
			{
			}

			[Token(Token = "0x600236B")]
			[Address(RVA = "0x873730", Offset = "0x873730", VA = "0x873730")]
			internal bool <CorrectIndicesAfteResourceDeletion>b__0(SpawnRule x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200057B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572F48", Offset = "0x572F48")]
		private sealed class <RunRandomSpawnerIteration>d__237 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170003EA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600236F")]
				[Address(RVA = "0x876330", Offset = "0x876330", VA = "0x876330", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002371")]
				[Address(RVA = "0x876378", Offset = "0x876378", VA = "0x876378", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600236C")]
			[Address(RVA = "0x8762CC", Offset = "0x8762CC", VA = "0x8762CC")]
			[DebuggerHidden]
			public <RunRandomSpawnerIteration>d__237(int <>1__state)
			{
			}

			[Token(Token = "0x600236D")]
			[Address(RVA = "0x8762F8", Offset = "0x8762F8", VA = "0x8762F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600236E")]
			[Address(RVA = "0x8762FC", Offset = "0x8762FC", VA = "0x8762FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002370")]
			[Address(RVA = "0x876338", Offset = "0x876338", VA = "0x876338", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200057C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572F58", Offset = "0x572F58")]
		private sealed class <RunAreaSpawnerIteration>d__238 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Spawner <>4__this;

			[Token(Token = "0x4002F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private SpawnInfo <spawnInfo>5__2;

			[Token(Token = "0x4002F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private long <currChecks>5__3;

			[Token(Token = "0x4002F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private long <totalChecks>5__4;

			[Token(Token = "0x4002F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <xWUMax>5__5;

			[Token(Token = "0x4002F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <yMid>5__6;

			[Token(Token = "0x4002F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <zWUMin>5__7;

			[Token(Token = "0x4002F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <zWUMax>5__8;

			[Token(Token = "0x4002F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <jitMin>5__9;

			[Token(Token = "0x4002F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float <jitMax>5__10;

			[Token(Token = "0x4002F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <xWU>5__11;

			[Token(Token = "0x4002F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private float <zWU>5__12;

			[Token(Token = "0x4002F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float <currentTime>5__13;

			[Token(Token = "0x4002F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private float <accumulatedTime>5__14;

			[Token(Token = "0x170003EC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002375")]
				[Address(RVA = "0x87627C", Offset = "0x87627C", VA = "0x87627C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003ED")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002377")]
				[Address(RVA = "0x8762C4", Offset = "0x8762C4", VA = "0x8762C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002372")]
			[Address(RVA = "0x8759A4", Offset = "0x8759A4", VA = "0x8759A4")]
			[DebuggerHidden]
			public <RunAreaSpawnerIteration>d__238(int <>1__state)
			{
			}

			[Token(Token = "0x6002373")]
			[Address(RVA = "0x8759D0", Offset = "0x8759D0", VA = "0x8759D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002374")]
			[Address(RVA = "0x8759D4", Offset = "0x8759D4", VA = "0x8759D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002376")]
			[Address(RVA = "0x876284", Offset = "0x876284", VA = "0x876284", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200057D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572F68", Offset = "0x572F68")]
		private sealed class <>c__DisplayClass295_0
		{
			[Token(Token = "0x4002F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpawnRule rule;

			[Token(Token = "0x4002F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Predicate<SpawnRule> <>9__2;

			[Token(Token = "0x6002378")]
			[Address(RVA = "0x873754", Offset = "0x873754", VA = "0x873754")]
			public <>c__DisplayClass295_0()
			{
			}

			[Token(Token = "0x6002379")]
			[Address(RVA = "0x87375C", Offset = "0x87375C", VA = "0x87375C")]
			internal bool <LoadSettings>b__1(List<SpawnRule> x)
			{
				return default(bool);
			}

			[Token(Token = "0x600237A")]
			[Address(RVA = "0x873830", Offset = "0x873830", VA = "0x873830")]
			internal bool <LoadSettings>b__2(SpawnRule y)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SpawnerSettings settings;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Stamper m_baseTerrainStamper;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stamper m_terrainModifierPreviewStamper;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private WorldCreationSettings worldCreationSettings;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BaseTerrainSettings baseTerrainsettings;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<StamperSettings> m_worldMapStamperSettings;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TerrainLoader m_terrainLoader;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LoadMode m_loadTerrainMode;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int m_impostorLoadingRange;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string m_connectedCTSProfileGUID;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string m_spawnerID;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GaiaConstants.OperationMode m_mode;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int m_seed;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GaiaConstants.SpawnerShape m_spawnerShape;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public GaiaConstants.SpawnerRuleSelector m_spawnRuleSelector;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GaiaConstants.SpawnerLocation m_spawnLocationAlgorithm;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public GaiaConstants.SpawnerLocationCheckType m_spawnLocationCheckType;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float m_locationIncrement;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float m_maxJitteredLocationOffsetPct;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int m_locationChecksPerInt;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int m_maxRandomClusterSize;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AnimationCurve m_spawnFitnessAttenuator;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GaiaConstants.ImageFitnessFilterMode m_areaMaskMode;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool m_enableColliderCacheAtRuntime;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Texture2D m_imageMask;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool m_imageMaskInvert;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		public bool m_imageMaskNormalise;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		public bool m_imageMaskFlip;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public int m_imageMaskSmoothIterations;

		[NonSerialized]
		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public HeightMap m_imageMaskHM;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FractalGenerator m_noiseGenerator;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float m_noiseMaskSeed;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public int m_noiseMaskOctaves;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float m_noiseMaskPersistence;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float m_noiseMaskFrequency;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float m_noiseMaskLacunarity;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float m_noiseZoom;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool m_noiseInvert;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float m_spawnInterval;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public string m_triggerTags;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float m_triggerRange;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public LayerMask m_spawnCollisionLayers;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public int m_spawnColliderLayer;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public bool m_showGizmos;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		public bool m_showDebug;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
		public bool m_baseTerrainStamped;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public XorshiftPlus m_rndGenerator;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool m_cacheDetails;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Dictionary<int, List<HeightMap>> m_detailMapCache;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool m_cacheTextures;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		private bool m_textureMapsDirty;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Dictionary<int, List<HeightMap>> m_textureMapCache;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool m_cacheTags;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Dictionary<string, Quadtree<GameObject>> m_taggedGameObjectCache;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public TreeManager m_treeCache;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool m_cacheHeightMaps;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		private bool m_heightMapDirty;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Dictionary<int, UnityHeightMap> m_heightMapCache;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Dictionary<string, HeightMap> m_stampCache;

		[NonSerialized]
		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public GameObject m_areaBoundsColliderCache;

		[NonSerialized]
		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public GameObject m_goColliderCache;

		[NonSerialized]
		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public GameObject m_goParentGameObject;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool m_cancelSpawn;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float m_terrainHeight;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private RaycastHit m_checkHitInfo;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public IEnumerator m_updateCoroutine;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public IEnumerator m_updateCoroutine2;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public float m_updateTimeAllowed;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public float m_spawnProgress;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public bool m_spawnComplete;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		public Bounds m_spawnerBounds;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		public bool m_spawnPreviewDirty;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public float m_lastActiveTerrainSize;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public bool m_spawnRuleRegularToggleAllState;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D5")]
		public bool m_spawnRuleBiomeMasksToggleAllState;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D6")]
		public bool m_spawnRuleStampsToggleAllState;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D7")]
		private bool m_isTextureSpawner;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private bool m_isDetailSpawner;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
		private bool m_isTreeSpawnwer;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DA")]
		private bool m_isGameObjectSpawner;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private RenderTexture m_cachedPreviewHeightmapRenderTexture;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private RenderTexture[] m_cachedPreviewColorRenderTextures;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private GaiaSettings m_gaiaSettings;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public bool m_drawPreview;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public List<int> m_previewRuleIds;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public float m_maxWorldHeight;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		public float m_minWorldHeight;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public bool m_showSeaLevelinStampPreview;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
		public bool m_terrainGeneratorPanelUnfolded;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
		public bool m_worldDesignerPreviewSettingsUnfolded;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x213")]
		public bool m_rulePanelUnfolded;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		public bool m_createBaseTerrainUnfolded;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x215")]
		public bool m_sizeAndResolutionUnfolded;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x216")]
		public bool m_exportTerrainUnfolded;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x217")]
		public bool m_worldBiomeMasksUnfolded;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public bool m_createdfromBiomePreset;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x219")]
		public bool m_createdFromGaiaManager;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21A")]
		public bool m_showSeaLevelPlane;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21B")]
		public bool m_showBoundingBox;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		public float m_seaLevel;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public int m_worldDesignerPreviewTileX;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public int m_worldDesignerPreviewTileZ;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public bool m_worldDesignerClearStampsWarningShown;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public ImageMask[] m_maskListBeingDrawn;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public CollisionMask[] m_collisionMaskListBeingDrawn;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public int m_spawnRuleIndexBeingDrawn;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		public int m_spawnRuleMaskIndexBeingDrawn;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public ResourceProtoTexture m_textureResourcePrototypeBeingDrawn;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public ResourceProtoTree m_treeResourcePrototypeBeingDrawn;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public ResourceProtoDetail m_terrainDetailPrototypeBeingDrawn;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public ResourceProtoGameObject m_gameObjectResourcePrototypeBeingDrawn;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public ResourceProtoSpawnExtension m_spawnExtensionPrototypeBeingDrawn;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public ResourceProtoStamp m_stampDistributionPrototypeBeingDrawn;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public ResourceProtoWorldBiomeMask m_worldBiomeMaskPrototypeBeingDrawn;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public ResourceProtoProbe m_probePrototypeBeingDrawn;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public ResourceProtoTerrainModifierStamp m_terrainModifierStampBeingDrawn;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private List<TerrainPrototypeId> m_clearedTreeProtos;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private List<TerrainPrototypeId> m_clearedDetailProtos;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private List<TerrainPrototypeId> m_clearedGameObjectProtos;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private List<TerrainPrototypeId> m_clearedSpawnExtensionProtos;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private List<TerrainPrototypeId> m_clearedStampDistributionProtos;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private List<TerrainPrototypeId> m_clearedProbeProtos;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private List<Terrain> m_restoredHeightmapTerrains;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private AnimationCurve m_strengthTransformCurve;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private Texture2D m_strengthTransformCurveTexture;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public bool m_useExistingTerrainForWorldMapExport;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D9")]
		public bool m_stampOperationsFoldedOut;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DA")]
		public bool m_worldSizeAdvancedUnfolded;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		public GaiaConstants.EnvironmentSize m_worldTileSize;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public int m_worldDesignerBiomePresetSelection;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		public WorldDesignerPreviewMode m_worldDesignerPreviewMode;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public List<BiomeSpawnerListEntry> m_BiomeSpawnersToCreate;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		[SerializeField]
		private Vector3 m_lastStampSpawnWorldSize;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		public int m_lastExportedHeightMapResolution;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public int m_lastExportedWorldSize;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private GaiaSessionManager m_sessionManager;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public bool m_qualityPresetAdvancedUnfolded;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x311")]
		public bool m_biomeMaskPanelUnfolded;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x312")]
		public bool m_spawnStampsPanelUnfolded;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x313")]
		public bool m_ExportRunning;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		public GaiaConstants.DroppableResourceType m_dropAreaResource;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		public bool m_highlightLoadingSettings;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		public long m_highlightLoadingSettingsStartedTimeStamp;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		public bool m_foldoutSpawnerSettings;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		public Bounds m_worldDesignerUserBounds;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		public Vector3 m_worldDesignerSampleObjectPos1;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		public Vector3 m_worldDesignerSampleObjectPos2;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
		public Vector3 m_worldDesignerSampleObjectPos3;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		public bool m_drawWorldDesignerSampleObjects;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x369")]
		public bool m_drawWorldDesignerHandles;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36A")]
		public bool m_drawWorldDesignerRulers;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36B")]
		public bool m_drawWorldDesignerDensityViz;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		public long m_autoStampDensityVisualizationTimeStamp;

		[Token(Token = "0x170001A3")]
		public SpawnerSettings m_settings
		{
			[Token(Token = "0x60010CC")]
			[Address(RVA = "0xA8C2F8", Offset = "0xA8C2F8", VA = "0xA8C2F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010CD")]
			[Address(RVA = "0xA8C3FC", Offset = "0xA8C3FC", VA = "0xA8C3FC")]
			set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		public WorldCreationSettings m_worldCreationSettings
		{
			[Token(Token = "0x60010D0")]
			[Address(RVA = "0xA8C828", Offset = "0xA8C828", VA = "0xA8C828")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010D1")]
			[Address(RVA = "0xA8C8C4", Offset = "0xA8C8C4", VA = "0xA8C8C4")]
			set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		public BaseTerrainSettings m_baseTerrainSettings
		{
			[Token(Token = "0x60010D2")]
			[Address(RVA = "0xA8C8CC", Offset = "0xA8C8CC", VA = "0xA8C8CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010D3")]
			[Address(RVA = "0xA8C968", Offset = "0xA8C968", VA = "0xA8C968")]
			set
			{
			}
		}

		[Token(Token = "0x170001A6")]
		public TerrainLoader TerrainLoader
		{
			[Token(Token = "0x60010D4")]
			[Address(RVA = "0xA8C970", Offset = "0xA8C970", VA = "0xA8C970")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A7")]
		private GaiaSettings GaiaSettings
		{
			[Token(Token = "0x60010D5")]
			[Address(RVA = "0xA8CAC0", Offset = "0xA8CAC0", VA = "0xA8CAC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A8")]
		private Texture2D StrengthTransformCurveTexture
		{
			[Token(Token = "0x60010D6")]
			[Address(RVA = "0xA8CB48", Offset = "0xA8CB48", VA = "0xA8CB48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		private GaiaSessionManager SessionManager
		{
			[Token(Token = "0x60010D7")]
			[Address(RVA = "0xA8CB54", Offset = "0xA8CB54", VA = "0xA8CB54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xA8C404", Offset = "0xA8C404", VA = "0xA8C404")]
		public Stamper GetOrCreateBaseTerrainStamper(bool allowCreate)
		{
			return null;
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xA8C63C", Offset = "0xA8C63C", VA = "0xA8C63C")]
		public Stamper GetOrCreatePreviewStamper(bool allowCreate = false)
		{
			return null;
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0xA8CBE4", Offset = "0xA8CBE4", VA = "0xA8CBE4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xA8D0CC", Offset = "0xA8D0CC", VA = "0xA8D0CC")]
		private void OnWDStapmperRenderingFinished()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xA8D0D0", Offset = "0xA8D0D0", VA = "0xA8D0D0")]
		private void SpawnWDPreviewObjects()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xA8D5D0", Offset = "0xA8D5D0", VA = "0xA8D5D0")]
		public void ControlSpawnRuleGUIDs()
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xA8D928", Offset = "0xA8D928", VA = "0xA8D928")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xA8DA38", Offset = "0xA8DA38", VA = "0xA8DA38")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xA8DA3C", Offset = "0xA8DA3C", VA = "0xA8DA3C")]
		public void StartEditorUpdates()
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xA8DA40", Offset = "0xA8DA40", VA = "0xA8DA40")]
		public void StopEditorUpdates()
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xA8CD80", Offset = "0xA8CD80", VA = "0xA8CD80")]
		public void UpdateMinMaxHeight()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xA8DA44", Offset = "0xA8DA44", VA = "0xA8DA44")]
		public void StoreWorldSize()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xA8DADC", Offset = "0xA8DADC", VA = "0xA8DADC")]
		public bool HasWorldSizeChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xA8DB90", Offset = "0xA8DB90", VA = "0xA8DB90")]
		private void EditorUpdate()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xA8DB94", Offset = "0xA8DB94", VA = "0xA8DB94")]
		public void HighlightLoadingSettings()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xA8DBC4", Offset = "0xA8DBC4", VA = "0xA8DBC4")]
		private void Start()
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xA8DD88", Offset = "0xA8DD88", VA = "0xA8DD88")]
		public void Initialise()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xA8E920", Offset = "0xA8E920", VA = "0xA8E920")]
		private void PreSpawnInitialise()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xA8E64C", Offset = "0xA8E64C", VA = "0xA8E64C")]
		public void SetUpSpawnerTypeFlags()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xA8EE68", Offset = "0xA8EE68", VA = "0xA8EE68")]
		public void AssociateAssets()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xA8EF5C", Offset = "0xA8EF5C", VA = "0xA8EF5C")]
		public List<TerrainMissingSpawnRules> GetMissingResources(List<TerrainMissingSpawnRules> missingRes, [Optional] Terrain[] terrains)
		{
			return null;
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xA8F54C", Offset = "0xA8F54C", VA = "0xA8F54C")]
		public void AddResourcesToTerrain(int[] rules, [Optional] Terrain[] terrains)
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xA8F758", Offset = "0xA8F758", VA = "0xA8F758")]
		private void PostSpawn()
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xA8F76C", Offset = "0xA8F76C", VA = "0xA8F76C")]
		public bool IsTextureSpawner()
		{
			return default(bool);
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xA8F774", Offset = "0xA8F774", VA = "0xA8F774")]
		public bool IsDetailSpawner()
		{
			return default(bool);
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xA8F77C", Offset = "0xA8F77C", VA = "0xA8F77C")]
		public bool IsTreeSpawner()
		{
			return default(bool);
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xA8F784", Offset = "0xA8F784", VA = "0xA8F784")]
		public bool IsGameObjectSpawner()
		{
			return default(bool);
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xA8F78C", Offset = "0xA8F78C", VA = "0xA8F78C")]
		public void ResetSpawner()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xA8F790", Offset = "0xA8F790", VA = "0xA8F790")]
		public void UpdateAutoLoadRange()
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xA8F934", Offset = "0xA8F934", VA = "0xA8F934")]
		public void CancelSpawn()
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xA8F9B0", Offset = "0xA8F9B0", VA = "0xA8F9B0")]
		public bool IsSpawning()
		{
			return default(bool);
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xA8F9C0", Offset = "0xA8F9C0", VA = "0xA8F9C0")]
		private bool CanSpawnInstances()
		{
			return default(bool);
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xA8FAAC", Offset = "0xA8FAAC", VA = "0xA8FAAC")]
		public void DrawSpawnerPreview()
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xA9115C", Offset = "0xA9115C", VA = "0xA9115C")]
		public void FocusSceneViewOnWorldDesignerPreview()
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xA91160", Offset = "0xA91160", VA = "0xA91160")]
		private void ClearCachedTexture(RenderTexture cachedRT)
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xA90518", Offset = "0xA90518", VA = "0xA90518")]
		private void ClearColorTextureCache()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xA9057C", Offset = "0xA9057C", VA = "0xA9057C")]
		private void InitialiseColorTextureCache(int index, RenderTexture rtToInitialiseFrom)
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xA90664", Offset = "0xA90664", VA = "0xA90664")]
		private RenderTexture ApplyBrush(GaiaMultiTerrainOperation operation, MultiTerrainOperationType opType, int spawnRuleID = 0)
		{
			return null;
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xA90210", Offset = "0xA90210", VA = "0xA90210")]
		public Terrain GetCurrentTerrain()
		{
			return null;
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xA91274", Offset = "0xA91274", VA = "0xA91274")]
		private void ReleaseRenderTexture(RenderTexture texture)
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xA912F8", Offset = "0xA912F8", VA = "0xA912F8")]
		public object GetResourceProtoBySpawnRuleIndex(int spawnRuleIndex)
		{
			return null;
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xA91604", Offset = "0xA91604", VA = "0xA91604")]
		public void TogglePreview()
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xA91614", Offset = "0xA91614", VA = "0xA91614")]
		public float GetMaxSpawnerRange()
		{
			return default(float);
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xA91778", Offset = "0xA91778", VA = "0xA91778")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x590BF0", Offset = "0x590BF0")]
		public IEnumerator AreaSpawn(List<Spawner> spawners, BoundsDouble area, [Optional] List<string> validTerrainNames)
		{
			return null;
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xA91804", Offset = "0xA91804", VA = "0xA91804")]
		private void CheckIfHeightmapRestoreRequired(Terrain t)
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xA918F8", Offset = "0xA918F8", VA = "0xA918F8")]
		public void ClearPrototypeLists()
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xA8C54C", Offset = "0xA8C54C", VA = "0xA8C54C")]
		public GameObject CreateBaseTerrainStamper()
		{
			return null;
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xA8C6CC", Offset = "0xA8C6CC", VA = "0xA8C6CC")]
		public void CreateTerrainModifierPreviewStamper()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xA919C0", Offset = "0xA919C0", VA = "0xA919C0")]
		public void UpdateBaseTerrainStamper()
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0xA92284", Offset = "0xA92284", VA = "0xA92284")]
		private void ApplyNoiseSettingsToImageMask(ImageMask imageMask, BaseTerrainNoiseSettings btns, float sizemultiplicator)
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0xA92288", Offset = "0xA92288", VA = "0xA92288")]
		public void SetWorldBiomeMasksDirty()
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0xA923C8", Offset = "0xA923C8", VA = "0xA923C8")]
		private void ExecuteSpawn(GaiaMultiTerrainOperation operation, BakedMaskCache collisionMaskCache, int totalSpawns, ref int totalSpawsCompleted, bool allowStatic = true)
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xA91D44", Offset = "0xA91D44", VA = "0xA91D44")]
		public void UpdateTerrainModifierStamperFromSpawnRule(Stamper stamper, SpawnRule spawnRule, [Optional] Terrain currentTerrain)
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xA95278", Offset = "0xA95278", VA = "0xA95278")]
		public void SetRecommendedStampSizes()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xA955C4", Offset = "0xA955C4", VA = "0xA955C4")]
		public void RandomizeWorldDesigner()
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xA94D54", Offset = "0xA94D54", VA = "0xA94D54")]
		private RenderTexture SimulateRule(GaiaMultiTerrainOperation operation, int spawnRuleID)
		{
			return null;
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xA8D240", Offset = "0xA8D240", VA = "0xA8D240")]
		public Vector3 GetHeightOnWorldDesignerPreview(Vector3 worldSpacePos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xA95D50", Offset = "0xA95D50", VA = "0xA95D50")]
		public void SpawnStamps()
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xA95E9C", Offset = "0xA95E9C", VA = "0xA95E9C")]
		public void ResetWorldDesigner()
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xA970AC", Offset = "0xA970AC", VA = "0xA970AC")]
		public void CheckIfFullPreview(ref bool heightmapResExceeded, ref bool stampsExceeded)
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xA96FD8", Offset = "0xA96FD8", VA = "0xA96FD8")]
		public void SetDefaultWorldDesignerPreviewSettings()
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0xA97464", Offset = "0xA97464", VA = "0xA97464")]
		public void RefreshWorldDesignerStamps()
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0xA97118", Offset = "0xA97118", VA = "0xA97118")]
		public void UpdateWorldDesignerPreviewSizeAndResolution()
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xA97468", Offset = "0xA97468", VA = "0xA97468")]
		public Vector3 GetMaxWorldDesignerStampPreviewSize()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xA975DC", Offset = "0xA975DC", VA = "0xA975DC")]
		public static int GetAreaSpawnSteps(BoundsDouble area, float range)
		{
			return default(int);
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xA97670", Offset = "0xA97670", VA = "0xA97670")]
		public void CorrectIndicesAfteResourceDeletion(GaiaConstants.SpawnerResourceType resourceType, int oldIndex)
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xA97A08", Offset = "0xA97A08", VA = "0xA97A08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x590C50", Offset = "0x590C50")]
		public IEnumerator RunRandomSpawnerIteration()
		{
			return null;
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xA97A64", Offset = "0xA97A64", VA = "0xA97A64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x590CB0", Offset = "0x590CB0")]
		public IEnumerator RunAreaSpawnerIteration()
		{
			return null;
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xA97AD0", Offset = "0xA97AD0", VA = "0xA97AD0")]
		public void GroundToTerrain()
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xA97CB0", Offset = "0xA97CB0", VA = "0xA97CB0")]
		public void FitToTerrain([Optional] Terrain t)
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xA97EF4", Offset = "0xA97EF4", VA = "0xA97EF4")]
		public void FitToAllTerrains()
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xA98058", Offset = "0xA98058", VA = "0xA98058")]
		public bool IsFitToTerrain()
		{
			return default(bool);
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0xA9824C", Offset = "0xA9824C", VA = "0xA9824C")]
		public bool LoadImageMask()
		{
			return default(bool);
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0xA98CE8", Offset = "0xA98CE8", VA = "0xA98CE8")]
		public void Spawn(bool allTerrains)
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0xA95CF4", Offset = "0xA95CF4", VA = "0xA95CF4")]
		public void GenerateNewRandomSeed(bool force = false)
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0xA991CC", Offset = "0xA991CC", VA = "0xA991CC")]
		public void CreateSpawnCaches()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xA9A084", Offset = "0xA9A084", VA = "0xA9A084")]
		public void CreateSpawnCaches(GaiaConstants.SpawnerResourceType resourceType, int resourceIdx)
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0xA9A684", Offset = "0xA9A684", VA = "0xA9A684")]
		public void DeleteSpawnCaches(bool flushDirty = false)
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xA9B490", Offset = "0xA9B490", VA = "0xA9B490")]
		public bool TryExecuteRule(ref SpawnRule rule, ref SpawnInfo spawnInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xA9B728", Offset = "0xA9B728", VA = "0xA9B728")]
		public bool CheckLocation(Vector3 locationWU, ref SpawnInfo spawnInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xA9C040", Offset = "0xA9C040", VA = "0xA9C040")]
		public bool CheckLocationBounds(ref SpawnInfo spawnInfo, float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xA8E91C", Offset = "0xA8E91C", VA = "0xA8E91C")]
		public void UpdateCounters()
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xA9D0A0", Offset = "0xA9D0A0", VA = "0xA9D0A0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0xA995A4", Offset = "0xA995A4", VA = "0xA995A4")]
		public void CacheTextureMapsFromTerrain(int terrainID)
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xA9D0A4", Offset = "0xA9D0A4", VA = "0xA9D0A4")]
		public List<HeightMap> GetTextureMaps(int terrainID)
		{
			return null;
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0xA9A8A8", Offset = "0xA9A8A8", VA = "0xA9A8A8")]
		public void SaveTextureMapsToTerrain(int terrainID)
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0xA9ACC8", Offset = "0xA9ACC8", VA = "0xA9ACC8")]
		public void DeleteTextureMapCache()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xA9D120", Offset = "0xA9D120", VA = "0xA9D120")]
		public void SetTextureMapsDirty()
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xA9987C", Offset = "0xA9987C", VA = "0xA9987C")]
		public void CacheDetailMapsFromTerrain(int terrainID)
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xA9AD38", Offset = "0xA9AD38", VA = "0xA9AD38")]
		public void SaveDetailMapsToTerrain(int terrainID)
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xA9D12C", Offset = "0xA9D12C", VA = "0xA9D12C")]
		public List<HeightMap> GetDetailMaps(int terrainID)
		{
			return null;
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xA9D1A8", Offset = "0xA9D1A8", VA = "0xA9D1A8")]
		public HeightMap GetDetailMap(int terrainID, int detailIndex)
		{
			return null;
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xA9B1D4", Offset = "0xA9B1D4", VA = "0xA9B1D4")]
		public void DeleteDetailMapCache()
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xA99B5C", Offset = "0xA99B5C", VA = "0xA99B5C")]
		public void CacheTreesFromTerrain()
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0xA9D27C", Offset = "0xA9D27C", VA = "0xA9D27C")]
		public void DeleteTreeCache()
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xA9D2D8", Offset = "0xA9D2D8", VA = "0xA9D2D8")]
		public void AddToSession(GaiaOperation.OperationType opType, string opName)
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xA9D458", Offset = "0xA9D458", VA = "0xA9D458")]
		public string SerialiseJson()
		{
			return null;
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xA9D49C", Offset = "0xA9D49C", VA = "0xA9D49C")]
		public void DeSerialiseJson(string json)
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0xA9D4A0", Offset = "0xA9D4A0", VA = "0xA9D4A0")]
		public void FlattenTerrain()
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xA9D544", Offset = "0xA9D544", VA = "0xA9D544")]
		public void SmoothTerrain()
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0xA9D5E8", Offset = "0xA9D5E8", VA = "0xA9D5E8")]
		public void ClearTrees(ClearSpawnFor clearSpawnFor, ClearSpawnFrom clearSpawnFrom, [Optional] List<string> terrainNames)
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0xA9D884", Offset = "0xA9D884", VA = "0xA9D884")]
		public void ActivateTreeStandIn(int m_spawnRuleIndexBeingDrawn)
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0xA9DCE8", Offset = "0xA9DCE8", VA = "0xA9DCE8")]
		public void DeactivateTreeStandIn(int m_spawnRuleIndexBeingDrawn)
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xA9D61C", Offset = "0xA9D61C", VA = "0xA9D61C")]
		private void ResetAffectedSpawnerCounts(GaiaConstants.SpawnerResourceType resourceType)
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xA9DF34", Offset = "0xA9DF34", VA = "0xA9DF34")]
		public void ClearDetails(ClearSpawnFor clearSpawnFor, ClearSpawnFrom clearSpawnFrom, [Optional] List<string> terrainNames)
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xA9DF68", Offset = "0xA9DF68", VA = "0xA9DF68")]
		public void ClearGameObjects(ClearSpawnFor clearSpawnFor, ClearSpawnFrom clearSpawnFrom, [Optional] List<string> terrainNames)
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xA9DF9C", Offset = "0xA9DF9C", VA = "0xA9DF9C")]
		public void ClearAllSpawnExtensions(ClearSpawnFor clearSpawnFor, ClearSpawnFrom clearSpawnFrom, [Optional] List<string> terrainNames)
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xA9DFD0", Offset = "0xA9DFD0", VA = "0xA9DFD0")]
		public void ClearSpawnExtensionsForRule(SpawnRule spawnRule)
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0xA94BCC", Offset = "0xA94BCC", VA = "0xA94BCC")]
		public void ClearStampDistributions()
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0xA9E2A0", Offset = "0xA9E2A0", VA = "0xA9E2A0")]
		private void ClearStampDistributionForRule(SpawnRule spawnRule)
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0xA9E2F8", Offset = "0xA9E2F8", VA = "0xA9E2F8")]
		public static void ClearGameObjectsForRule(Spawner spawner, SpawnRule spawnRule, bool allTerrains = true, [Optional] Terrain terrainToDeleteFrom)
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xA9E8B8", Offset = "0xA9E8B8", VA = "0xA9E8B8")]
		private void SupressCTSProfileWarning()
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xA9E8BC", Offset = "0xA9E8BC", VA = "0xA9E8BC")]
		public static void HandleAutoSpawnerStack(List<AutoSpawner> autoSpawners, Transform transform, float range, bool allTerrains, [Optional] BiomeControllerSettings biomeControllerSettings)
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xA99EDC", Offset = "0xA99EDC", VA = "0xA99EDC")]
		public void CacheHeightMapFromTerrain(int terrainID)
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xA9F4C4", Offset = "0xA9F4C4", VA = "0xA9F4C4")]
		public UnityHeightMap GetHeightMap(int terrainID)
		{
			return null;
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xA9B24C", Offset = "0xA9B24C", VA = "0xA9B24C")]
		public void SaveHeightMapToTerrain(int terrainID)
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xA9B420", Offset = "0xA9B420", VA = "0xA9B420")]
		public void DeleteHeightMapCache()
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xA9F540", Offset = "0xA9F540", VA = "0xA9F540")]
		public void SetHeightMapsDirty()
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xA9F54C", Offset = "0xA9F54C", VA = "0xA9F54C")]
		public void CacheStamps(List<string> stampList)
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xA99B78", Offset = "0xA99B78", VA = "0xA99B78")]
		private void CacheTaggedGameObjectsFromScene(List<string> tagList)
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xA9B244", Offset = "0xA9B244", VA = "0xA9B244")]
		private void DeleteTagCache()
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xA9F5F8", Offset = "0xA9F5F8", VA = "0xA9F5F8")]
		public List<GameObject> GetNearbyObjects(List<string> tagList, Rect area)
		{
			return null;
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xA9FA54", Offset = "0xA9FA54", VA = "0xA9FA54")]
		public GameObject GetClosestObject(List<string> tagList, Rect area)
		{
			return null;
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xA9FED8", Offset = "0xA9FED8", VA = "0xA9FED8")]
		public GameObject GetClosestObject(string tag, Rect area)
		{
			return null;
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xA9602C", Offset = "0xA9602C", VA = "0xA9602C")]
		public void LoadSettings(SpawnerSettings settingsToLoad, bool createDetailSOs = true, [Optional] string[] overrideSOAssetGUIDs, [Optional] int[] overrideSOInstanceIDs)
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xA8E8B0", Offset = "0xA8E8B0", VA = "0xA8E8B0")]
		public void ResetRandomGenertor()
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xAA02C0", Offset = "0xAA02C0", VA = "0xAA02C0")]
		public int GetRandomInt(int min, int max)
		{
			return default(int);
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xA9B70C", Offset = "0xA9B70C", VA = "0xA9B70C")]
		public float GetRandomFloat(float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xAA02DC", Offset = "0xAA02DC", VA = "0xAA02DC")]
		public Vector3 GetRandomV3(float range)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xAA0300", Offset = "0xAA0300", VA = "0xAA0300")]
		public Spawner()
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xAA0928", Offset = "0xAA0928", VA = "0xAA0928")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590D10", Offset = "0x590D10")]
		private bool <ApplyBrush>b__208_0(BiomeController x)
		{
			return default(bool);
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xAA09F8", Offset = "0xAA09F8", VA = "0xAA09F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590D20", Offset = "0x590D20")]
		private bool <ApplyBrush>b__208_1(AutoSpawner y)
		{
			return default(bool);
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xAA0A78", Offset = "0xAA0A78", VA = "0xAA0A78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590D30", Offset = "0x590D30")]
		private bool <UpdateTerrainModifierStamperFromSpawnRule>b__223_0(BiomeController x)
		{
			return default(bool);
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xAA0B48", Offset = "0xAA0B48", VA = "0xAA0B48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590D40", Offset = "0x590D40")]
		private bool <UpdateTerrainModifierStamperFromSpawnRule>b__223_1(AutoSpawner y)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200023C")]
	[ExecuteInEditMode]
	public class SpawnerGroup : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200057E")]
		public class SpawnerInstance
		{
			[Token(Token = "0x4002F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string m_name;

			[Token(Token = "0x4002F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Spawner m_spawner;

			[Token(Token = "0x4002F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int m_interationsPerSpawn;

			[Token(Token = "0x600237B")]
			[Address(RVA = "0x876970", Offset = "0x876970", VA = "0x876970")]
			public SpawnerInstance()
			{
			}
		}

		[Token(Token = "0x200057F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572F78", Offset = "0x572F78")]
		private sealed class <RunSpawnerIterationCoRoutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpawnerGroup <>4__this;

			[Token(Token = "0x4002F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private SpawnerInstance <si>5__2;

			[Token(Token = "0x4002F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <idx>5__3;

			[Token(Token = "0x4002F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <iter>5__4;

			[Token(Token = "0x170003EE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600237F")]
				[Address(RVA = "0x876920", Offset = "0x876920", VA = "0x876920", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002381")]
				[Address(RVA = "0x876968", Offset = "0x876968", VA = "0x876968", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600237C")]
			[Address(RVA = "0x8766D0", Offset = "0x8766D0", VA = "0x8766D0")]
			[DebuggerHidden]
			public <RunSpawnerIterationCoRoutine>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x600237D")]
			[Address(RVA = "0x8766FC", Offset = "0x8766FC", VA = "0x8766FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600237E")]
			[Address(RVA = "0x876700", Offset = "0x876700", VA = "0x876700", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002380")]
			[Address(RVA = "0x876928", Offset = "0x876928", VA = "0x876928", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SpawnerInstance> m_spawners;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public List<SpawnerGroup> m_spawnerGroups;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IEnumerator m_updateCoroutine;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_cancelSpawn;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int m_progress;

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xB45ED4", Offset = "0xB45ED4", VA = "0xB45ED4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xB45ED8", Offset = "0xB45ED8", VA = "0xB45ED8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xB45EDC", Offset = "0xB45EDC", VA = "0xB45EDC")]
		public void StartEditorUpdates()
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xB45EE0", Offset = "0xB45EE0", VA = "0xB45EE0")]
		public void StopEditorUpdates()
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xB45EE4", Offset = "0xB45EE4", VA = "0xB45EE4")]
		private void EditorUpdate()
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xB45F98", Offset = "0xB45F98", VA = "0xB45F98")]
		public void RunSpawnerIteration()
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xB45FCC", Offset = "0xB45FCC", VA = "0xB45FCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x590D50", Offset = "0x590D50")]
		public IEnumerator RunSpawnerIterationCoRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xB46038", Offset = "0xB46038", VA = "0xB46038")]
		public void CancelSpawn()
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xB4614C", Offset = "0xB4614C", VA = "0xB4614C")]
		public bool FixNames()
		{
			return default(bool);
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xB4627C", Offset = "0xB4627C", VA = "0xB4627C")]
		public void ResetSpawner()
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xB4640C", Offset = "0xB4640C", VA = "0xB4640C")]
		public SpawnerGroup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200023D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x571B34", Offset = "0x571B34")]
	public class SpawnerSettings : ScriptableObject, ISerializationCallbackReceiver
	{
		[Serializable]
		[Token(Token = "0x2000580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572F88", Offset = "0x572F88")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Terrain, bool> <>9__39_0;

			[Token(Token = "0x6002383")]
			[Address(RVA = "0x876AB0", Offset = "0x876AB0", VA = "0x876AB0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002384")]
			[Address(RVA = "0x876AB8", Offset = "0x876AB8", VA = "0x876AB8")]
			internal bool <CreateSpawner>b__39_0(Terrain x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GaiaResource m_resources;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_x;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_y;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_z;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_width;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_height;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_rotation;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool m_isWorldmapSpawner;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_spawnRange;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool m_generateRandomSeed;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int m_randomSeed;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_spawnDensity;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string m_resourcesPath;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<SpawnRule> m_spawnerRules;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool m_showGizmos;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool m_showDebug;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool m_showTerrainHelper;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public GaiaConstants.SpawnMode m_spawnMode;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ImageMask[] imageMasks;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool m_clearSpawnsToggleTrees;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool m_clearSpawnsToggleDetails;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool m_clearSpawnsToggleGOs;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		public bool m_clearSpawnsToggleSpawnExtensions;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool m_clearSpawnsToggleProbes;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ClearSpawnFor m_clearSpawnsFor;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public ClearSpawnFrom m_clearSpawnsFrom;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string m_lastGUIDSaved;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int m_stampDensity;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float m_stampJitter;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int m_stampWidth;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int m_stampHeight;

		[Token(Token = "0x170001AA")]
		public ImageMask[] m_imageMasks
		{
			[Token(Token = "0x6001168")]
			[Address(RVA = "0xB47E78", Offset = "0xB47E78", VA = "0xB47E78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001169")]
			[Address(RVA = "0xB47ED4", Offset = "0xB47ED4", VA = "0xB47ED4")]
			set
			{
			}
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xB47EDC", Offset = "0xB47EDC", VA = "0xB47EDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xB47EE0", Offset = "0xB47EE0", VA = "0xB47EE0", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xB47EE4", Offset = "0xB47EE4", VA = "0xB47EE4", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xB47EE8", Offset = "0xB47EE8", VA = "0xB47EE8")]
		public void ClearImageMaskTextures()
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xB480D0", Offset = "0xB480D0", VA = "0xB480D0")]
		public void RefreshGUID()
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xB480D4", Offset = "0xB480D4", VA = "0xB480D4")]
		public Spawner CreateSpawner(bool autoAddResources = false, [Optional] Transform targetTransform)
		{
			return null;
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0xB48628", Offset = "0xB48628", VA = "0xB48628")]
		public SpawnerSettings()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class TreeManager
	{
		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<TreePrototype> m_terrainTrees;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Quadtree<int> m_terrainTreeLocations;

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xA2B3F8", Offset = "0xA2B3F8", VA = "0xA2B3F8")]
		public void LoadTreesFromTerrain()
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xA2B958", Offset = "0xA2B958", VA = "0xA2B958")]
		public void AddTree(Vector3 position, int prototypeIdx)
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xA2B9E4", Offset = "0xA2B9E4", VA = "0xA2B9E4")]
		public int Count(Vector3 position, float range)
		{
			return default(int);
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xA2BAB4", Offset = "0xA2BAB4", VA = "0xA2BAB4")]
		public int Count()
		{
			return default(int);
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xA2BB04", Offset = "0xA2BB04", VA = "0xA2BB04")]
		public TreeManager()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class WorldBiomeMasks : Spawner
	{
		[Token(Token = "0x6001176")]
		[Address(RVA = "0x941A1C", Offset = "0x941A1C", VA = "0x941A1C")]
		public WorldBiomeMasks()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class WorldDesigner : Spawner
	{
		[Token(Token = "0x6001177")]
		[Address(RVA = "0x941FC0", Offset = "0x941FC0", VA = "0x941FC0")]
		public WorldDesigner()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class RuntimeStamper : MonoBehaviour
	{
		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_showGUI;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_showDebug;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_stampAddress;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_currentProgress;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rect m_currentPosition;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Stamper m_stamper;

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x8C2458", Offset = "0x8C2458", VA = "0x8C2458")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x8C2494", Offset = "0x8C2494", VA = "0x8C2494")]
		private void Start()
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x8C27FC", Offset = "0x8C27FC", VA = "0x8C27FC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x8C29A0", Offset = "0x8C29A0", VA = "0x8C29A0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x8C2498", Offset = "0x8C2498", VA = "0x8C2498")]
		private void CreateStamper()
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x8C2A4C", Offset = "0x8C2A4C", VA = "0x8C2A4C")]
		public RuntimeStamper()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public enum AutoSpawnerStatus
	{
		[Token(Token = "0x4001AFF")]
		Initial,
		[Token(Token = "0x4001B00")]
		Queued,
		[Token(Token = "0x4001B01")]
		Spawning,
		[Token(Token = "0x4001B02")]
		Done
	}
	[Serializable]
	[Token(Token = "0x2000243")]
	public class AutoSpawner
	{
		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isActive;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public AutoSpawnerStatus status;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lastSpawnTimeStamp;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Spawner spawner;

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x885D4C", Offset = "0x885D4C", VA = "0x885D4C")]
		public AutoSpawner()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000244")]
	public class AutoMaskExport
	{
		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isActive;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MaskMapExport maskMapExport;

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x8847DC", Offset = "0x8847DC", VA = "0x8847DC")]
		public AutoMaskExport()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000245")]
	[ExecuteInEditMode]
	public class Stamper : MonoBehaviour
	{
		[Token(Token = "0x2000581")]
		public delegate void WorldDesignerStampRenderingFinishedCallback();

		[Serializable]
		[Token(Token = "0x2000582")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572F98", Offset = "0x572F98")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ImageMask, bool> <>9__162_0;

			[Token(Token = "0x600238A")]
			[Address(RVA = "0x876B3C", Offset = "0x876B3C", VA = "0x876B3C")]
			public <>c()
			{
			}

			[Token(Token = "0x600238B")]
			[Address(RVA = "0x876B44", Offset = "0x876B44", VA = "0x876B44")]
			internal bool <LoadSettings>b__162_0(ImageMask x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000583")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572FA8", Offset = "0x572FA8")]
		private sealed class <RenderStampsCoroutine>d__196 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Stamper <>4__this;

			[Token(Token = "0x4002F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170003F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600238F")]
				[Address(RVA = "0x876FD4", Offset = "0x876FD4", VA = "0x876FD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002391")]
				[Address(RVA = "0x87701C", Offset = "0x87701C", VA = "0x87701C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600238C")]
			[Address(RVA = "0x876B64", Offset = "0x876B64", VA = "0x876B64")]
			[DebuggerHidden]
			public <RenderStampsCoroutine>d__196(int <>1__state)
			{
			}

			[Token(Token = "0x600238D")]
			[Address(RVA = "0x876B90", Offset = "0x876B90", VA = "0x876B90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600238E")]
			[Address(RVA = "0x876B94", Offset = "0x876B94", VA = "0x876B94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002390")]
			[Address(RVA = "0x876FDC", Offset = "0x876FDC", VA = "0x876FDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_stampID;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D m_stampImage;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_stampImageGUID;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_autoSpawnersToggleAll;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool m_autoMaskExportersToggleAll;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<AutoSpawner> m_autoSpawners;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<AutoMaskExport> m_autoMaskExporter;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Terrain> m_lastAffectedTerrains;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_lastActiveTerrainSize;

		[NonSerialized]
		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_seaLevel;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public StamperSettings m_settings;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool m_invertStamp;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool m_normaliseStamp;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int m_smoothIterations;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float m_stencilHeight;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve m_heightModifier;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve m_distanceMask;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GaiaConstants.MaskInfluence m_distanceMaskInfluence;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool m_MaskTexturesDirty;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GaiaConstants.ImageFitnessFilterMode m_areaMaskMode;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Texture2D m_imageMask;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string m_imageMaskGUID;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GaiaConstants.MaskInfluence m_areaMaskInfluence;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool m_imageMaskInvert;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		public bool m_imageMaskNormalise;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
		public bool m_imageMaskFlip;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int m_imageMaskSmoothIterations;

		[NonSerialized]
		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public HeightMap m_imageMaskHM;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float m_noiseMaskSeed;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public int m_noiseMaskOctaves;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float m_noiseMaskPersistence;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float m_noiseMaskFrequency;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float m_noiseMaskLacunarity;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float m_noiseZoom;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool m_alwaysShow;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		public bool m_showBoundingBox;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		public bool m_showBase;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
		public bool m_showSeaLevelPlane;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public bool m_showRulers;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		public bool m_syncHeightmaps;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
		public bool m_stampDirty;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD7")]
		private bool m_lastScaleChangeWasX;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public WorldMapStampToken m_worldMapStampToken;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool m_recordUndo;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public int m_currentStamperUndoOperation;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public List<GaiaWorldManager> m_stamperUndoOperations;

		[NonSerialized]
		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Color m_gizmoColour;

		[NonSerialized]
		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public IEnumerator m_updateCoroutine;

		[NonSerialized]
		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float m_updateTimeAllowed;

		[NonSerialized]
		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float m_stampProgress;

		[NonSerialized]
		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public bool m_stampComplete;

		[NonSerialized]
		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		public bool m_cancelStamp;

		[NonSerialized]
		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Material m_previewMaterial;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public BiomeController m_linkedBiomeController;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Texture2D m_heightTransformCurveTexture;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private int m_featureID;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private int m_scanWidth;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int m_scanDepth;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private int m_scanHeight;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float m_scanResolution;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Bounds m_scanBounds;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private UnityHeightMap m_stampHM;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private GaiaWorldManager m_undoMgr;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private GaiaWorldManager m_redoMgr;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private MeshFilter m_previewFilter;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private MeshRenderer m_previewRenderer;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private GaiaMultiTerrainOperation m_worldMapPreviewOperation;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private int m_editorUpdateCount;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private GaiaSettings m_gaiaSettings;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Texture2D m_distanceMaskCurveTexture;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Texture2D m_transformHeightCurveTexture;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Material m_currentFXMaterial;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public RenderTexture m_cachedRenderTexture;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public RenderTexture m_cachedMaskTexture;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public bool m_drawPreview;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
		public bool m_showSeaLevelinStampPreview;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		public float m_maxCurrentTerrainHeight;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public float m_minCurrentTerrainHeight;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public bool m_activacteLocationSliders;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private GaiaSessionManager m_sessionManager;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public bool m_activatePreviewRequested;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public long m_activatePreviewTimeStamp;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public bool m_heightUpdateRequested;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F1")]
		public bool m_autoSpawnRequested;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F2")]
		public bool m_autoMaskExportRequested;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F3")]
		public bool m_autoSpawnStarted;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public long m_lastHeightmapUpdateTimeStamp;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public bool m_openedFromTerrainGenerator;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x201")]
		public bool m_hasStamped;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x202")]
		public bool m_showAutoSpawnersOnEnable;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x203")]
		public bool m_sessionEditMode;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public GaiaOperation m_sessionEditOperation;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public int m_impostorLoadingRange;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		public bool m_highlightLoadingSettings;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public long m_highlightLoadingSettingsStartedTimeStamp;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public float m_baseTerrainMinHeight;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public float m_baseTerrainMaxHeight;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public bool m_firstFrameAfterStampSpawning;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		public Color m_worldDesignerStampVisColor0;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		public Color m_worldDesignerStampVisColor1;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		public Color m_worldDesignerStampVisColor2;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		public Color m_worldDesignerStampVisColor3;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		public Color m_worldDesignerStampVisColor4;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		public float m_worldDesignerMinHeight;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public float m_worldDesignerMaxHeight;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		public bool m_useCustomPreviewBounds;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public Bounds m_worldDesignerPreviewBounds;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public WorldDesignerPreviewMode m_worldDesignerPreviewMode;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		public int m_worldDesignerPreviewTiles;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public int m_worldDesignerRenderedStamps;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public List<StamperSettings> m_worldMapStamperSettings;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private Texture2D m_worldDesignerStampVisCurve0;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private Texture2D m_worldDesignerStampVisCurve1;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private Texture2D m_worldDesignerStampVisCurve2;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private Texture2D m_worldDesignerStampVisCurve3;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private Texture2D m_worldDesignerStampVisCurve4;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public LoadMode m_loadTerrainMode;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private TerrainLoader m_terrainLoader;

		[Token(Token = "0x170001AB")]
		private Texture2D heightTransformCurveTexture
		{
			[Token(Token = "0x6001180")]
			[Address(RVA = "0xB4984C", Offset = "0xB4984C", VA = "0xB4984C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AC")]
		private GaiaSettings GaiaSettings
		{
			[Token(Token = "0x6001181")]
			[Address(RVA = "0xB49858", Offset = "0xB49858", VA = "0xB49858")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AD")]
		private Texture2D distanceMaskCurveTexture
		{
			[Token(Token = "0x6001182")]
			[Address(RVA = "0xB498E0", Offset = "0xB498E0", VA = "0xB498E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AE")]
		private Texture2D transformHeightCurveTexture
		{
			[Token(Token = "0x6001183")]
			[Address(RVA = "0xB49A44", Offset = "0xB49A44", VA = "0xB49A44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		private GaiaSessionManager SessionManager
		{
			[Token(Token = "0x6001184")]
			[Address(RVA = "0xB49BA8", Offset = "0xB49BA8", VA = "0xB49BA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B0")]
		public Texture2D worldDesignerStampVisCurve0
		{
			[Token(Token = "0x6001185")]
			[Address(RVA = "0xB49C38", Offset = "0xB49C38", VA = "0xB49C38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B1")]
		public Texture2D worldDesignerStampVisCurve1
		{
			[Token(Token = "0x6001186")]
			[Address(RVA = "0xB49C44", Offset = "0xB49C44", VA = "0xB49C44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B2")]
		public Texture2D worldDesignerStampVisCurve2
		{
			[Token(Token = "0x6001187")]
			[Address(RVA = "0xB49C50", Offset = "0xB49C50", VA = "0xB49C50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		public Texture2D worldDesignerStampVisCurve3
		{
			[Token(Token = "0x6001188")]
			[Address(RVA = "0xB49C5C", Offset = "0xB49C5C", VA = "0xB49C5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B4")]
		public Texture2D worldDesignerStampVisCurve4
		{
			[Token(Token = "0x6001189")]
			[Address(RVA = "0xB49C68", Offset = "0xB49C68", VA = "0xB49C68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		public TerrainLoader TerrainLoader
		{
			[Token(Token = "0x600118A")]
			[Address(RVA = "0xB49C74", Offset = "0xB49C74", VA = "0xB49C74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000012")]
		public event WorldDesignerStampRenderingFinishedCallback OnWorldDesignerStampRenderingFinished
		{
			[Token(Token = "0x600118B")]
			[Address(RVA = "0xB49DC4", Offset = "0xB49DC4", VA = "0xB49DC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590DB0", Offset = "0x590DB0")]
			add
			{
			}
			[Token(Token = "0x600118C")]
			[Address(RVA = "0xB49E68", Offset = "0xB49E68", VA = "0xB49E68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590DC0", Offset = "0x590DC0")]
			remove
			{
			}
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xB49F0C", Offset = "0xB49F0C", VA = "0xB49F0C")]
		public void LoadStamp()
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xB4A178", Offset = "0xB4A178", VA = "0xB4A178")]
		public void LoadStamp(string imagePreviewPath)
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xB4A17C", Offset = "0xB4A17C", VA = "0xB4A17C")]
		public bool LoadRuntimeStamp(TextAsset stamp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xB4A3F0", Offset = "0xB4A3F0", VA = "0xB4A3F0")]
		public void UpdateStampImageFromHeightmap()
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xB4A424", Offset = "0xB4A424", VA = "0xB4A424")]
		public void InvertStamp()
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xB4A440", Offset = "0xB4A440", VA = "0xB4A440")]
		public void NormaliseStamp()
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xB4A154", Offset = "0xB4A154", VA = "0xB4A154")]
		public void SmoothStamp()
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xB4A45C", Offset = "0xB4A45C", VA = "0xB4A45C")]
		public Terrain GetCurrentTerrain()
		{
			return null;
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xB4A6FC", Offset = "0xB4A6FC", VA = "0xB4A6FC")]
		public void Stamp([Optional] List<string> validTerrainNames, [Optional] List<StamperSettings> worldMapStamperSettings)
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xB4B470", Offset = "0xB4B470", VA = "0xB4B470")]
		public void HighlightLoadingSettings()
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xB4AB78", Offset = "0xB4AB78", VA = "0xB4AB78")]
		public float GetStamperRange(Terrain currentTerrain)
		{
			return default(float);
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xB4B4A0", Offset = "0xB4B4A0", VA = "0xB4B4A0")]
		public float GetMaxStamperRange(Terrain currentTerrain)
		{
			return default(float);
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xB4B554", Offset = "0xB4B554", VA = "0xB4B554")]
		public void SyncHeightmaps()
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xB4B5D4", Offset = "0xB4B5D4", VA = "0xB4B5D4")]
		public void CancelStamp()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xB4B5E0", Offset = "0xB4B5E0", VA = "0xB4B5E0")]
		public bool IsStamping()
		{
			return default(bool);
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xB4B5F0", Offset = "0xB4B5F0", VA = "0xB4B5F0")]
		public void Reset()
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xB4B960", Offset = "0xB4B960", VA = "0xB4B960")]
		public void UpdateStamp()
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xB4BA1C", Offset = "0xB4BA1C", VA = "0xB4BA1C")]
		public void AlignToGround()
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xB4BB58", Offset = "0xB4BB58", VA = "0xB4BB58")]
		public void LoadSettings(StamperSettings settingsToLoad, bool instantiateNewSettings = true)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xB4C0DC", Offset = "0xB4C0DC", VA = "0xB4C0DC")]
		public bool GetHeightRange(ref float baseLevel, ref float minHeight, ref float maxHeight)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xB4C158", Offset = "0xB4C158", VA = "0xB4C158")]
		public void FitToTerrain([Optional] Terrain t)
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xB4C404", Offset = "0xB4C404", VA = "0xB4C404")]
		public bool IsFitToTerrain()
		{
			return default(bool);
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xB4C608", Offset = "0xB4C608", VA = "0xB4C608")]
		public void SetBaseTerrainStandardMasks()
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xB4C72C", Offset = "0xB4C72C", VA = "0xB4C72C")]
		public void FlattenTerrain()
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xB4C818", Offset = "0xB4C818", VA = "0xB4C818")]
		public void SmoothTerrain()
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xB4C904", Offset = "0xB4C904", VA = "0xB4C904")]
		public bool CanPreview()
		{
			return default(bool);
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xB4C970", Offset = "0xB4C970", VA = "0xB4C970")]
		public bool CurrentPreviewState()
		{
			return default(bool);
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xB4CA04", Offset = "0xB4CA04", VA = "0xB4CA04")]
		public void ShowPreview()
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xB4CA98", Offset = "0xB4CA98", VA = "0xB4CA98")]
		public void HidePreview()
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xB4CB2C", Offset = "0xB4CB2C", VA = "0xB4CB2C")]
		public void TogglePreview()
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xB4CB3C", Offset = "0xB4CB3C", VA = "0xB4CB3C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xB4CBD4", Offset = "0xB4CBD4", VA = "0xB4CBD4")]
		public void UpdateTerrainLoader()
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xB4CF28", Offset = "0xB4CF28", VA = "0xB4CF28")]
		public void UpdateMinMaxHeight([Optional] StamperSettings stamperSettings, bool injectValues = false, float injectMin = 0f, float injectMax = 0f)
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xB4D120", Offset = "0xB4D120", VA = "0xB4D120")]
		public void FitToAllTerrains(bool loadedOnly = false)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xB4DFFC", Offset = "0xB4DFFC", VA = "0xB4DFFC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xB4E1B0", Offset = "0xB4E1B0", VA = "0xB4E1B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xB4E124", Offset = "0xB4E124", VA = "0xB4E124")]
		private void ClearRTCache()
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xB4E020", Offset = "0xB4E020", VA = "0xB4E020")]
		private void DestroyBakedTextures()
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xB4E24C", Offset = "0xB4E24C", VA = "0xB4E24C")]
		private void Start()
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xB4B46C", Offset = "0xB4B46C", VA = "0xB4B46C")]
		public void StartEditorUpdates()
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xB4E284", Offset = "0xB4E284", VA = "0xB4E284")]
		public void StopEditorUpdates()
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xB4E288", Offset = "0xB4E288", VA = "0xB4E288")]
		private void EditorUpdate()
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xB4D4D4", Offset = "0xB4D4D4", VA = "0xB4D4D4")]
		public void DrawStampPreview([Optional] List<StamperSettings> worldMapStamperSettings, bool isWorldMapPreview = false)
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xB4E28C", Offset = "0xB4E28C", VA = "0xB4E28C")]
		public void SetStampScaleByMeter(float absoluteHeightValue)
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xB4E4AC", Offset = "0xB4E4AC", VA = "0xB4E4AC")]
		public float CurrentStampScaleToMeter()
		{
			return default(float);
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xB4E6F4", Offset = "0xB4E6F4", VA = "0xB4E6F4")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xB4E6F8", Offset = "0xB4E6F8", VA = "0xB4E6F8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xB4E6FC", Offset = "0xB4E6FC", VA = "0xB4E6FC")]
		private void DrawGizmos(bool isSelected)
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xB4F1CC", Offset = "0xB4F1CC", VA = "0xB4F1CC")]
		private bool OperationSupportsBaseSettings()
		{
			return default(bool);
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xB4F204", Offset = "0xB4F204", VA = "0xB4F204")]
		private void DrawRulers()
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xB4AC6C", Offset = "0xB4AC6C", VA = "0xB4AC6C")]
		public RenderTexture ApplyBrush(GaiaMultiTerrainOperation operation, [Optional] List<StamperSettings> worldMapStamperSettings, bool isWorldMapPreview = false)
		{
			return null;
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xB50D68", Offset = "0xB50D68", VA = "0xB50D68")]
		private bool IsStamperSettingsRelevantForPreview(StamperSettings stamperSettings)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xB50CFC", Offset = "0xB50CFC", VA = "0xB50CFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x590DD0", Offset = "0x590DD0")]
		private IEnumerator RenderStampsCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xB50F30", Offset = "0xB50F30", VA = "0xB50F30")]
		private StamperSettings PrepareWDStamperSettingsForRendering(StamperSettings stamperSettings)
		{
			return null;
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xB51148", Offset = "0xB51148", VA = "0xB51148")]
		private void OnWDStampRenderFinished()
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xB4F208", Offset = "0xB4F208", VA = "0xB4F208")]
		public RenderTexture ApplyBrushInternal(GaiaMultiTerrainOperation operation, StamperSettings settings, bool concatenateMode = false)
		{
			return null;
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xB51188", Offset = "0xB51188", VA = "0xB51188")]
		private Material GetCurrentFXMaterial(StamperSettings settings)
		{
			return null;
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xB513A0", Offset = "0xB513A0", VA = "0xB513A0")]
		private void BakeCurveTextures()
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xB51610", Offset = "0xB51610", VA = "0xB51610")]
		public void EmptyImageMask()
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xB5166C", Offset = "0xB5166C", VA = "0xB5166C")]
		public void EmptyStampImage()
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xB516C8", Offset = "0xB516C8", VA = "0xB516C8")]
		private float CalculateHeight(float terrainHeight, float smHeightRaw, float smHeightAdj, float stencilHeightNU, float strength)
		{
			return default(float);
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xB5176C", Offset = "0xB5176C", VA = "0xB5176C")]
		private Vector3 RotatePointAroundPivot(Vector3 point, Vector3 pivot, Vector3 angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xB517E8", Offset = "0xB517E8", VA = "0xB517E8")]
		public Stamper()
		{
		}
	}
	[Token(Token = "0x2000246")]
	internal class RotationProducts
	{
		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double sinTheta;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double cosTheta;

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x8C20F0", Offset = "0x8C20F0", VA = "0x8C20F0")]
		public RotationProducts()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000247")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x571B80", Offset = "0x571B80")]
	public class StamperSettings : ScriptableObject, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double m_x;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double m_y;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double m_z;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_isFoldedOut;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_width;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_height;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_blendStrength;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_absoluteHeightValue;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_rotation;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool m_isWorldmapStamper;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public GaiaConstants.FeatureOperation m_operation;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_baseLevel;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool m_drawStampBase;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool m_adaptiveBase;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_contrastFeatureSize;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_contrastStrength;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float m_terraceCount;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float m_terraceJitterCount;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float m_terraceBevelAmountInterior;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float m_sharpenRidgesMixStrength;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float m_sharpenRidgesIterations;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float m_powerOf;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float m_smoothVerticality;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float m_smoothBlurRadius;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ImageMask m_stamperInputImageMask;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float m_mixMidPoint;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float m_mixHeightStrength;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GaiaConstants.AutoSpawnerArea m_autoSpawnerArea;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public GaiaConstants.AutoSpawnerArea m_autoMaskExportArea;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AnimationCurve m_heightTransformCurve;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BaseTerrainInputType m_baseTerrainInputType;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Terrain m_inputTerrain;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float m_erosionSimScale;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float m_erosionHydroTimeDelta;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int m_erosionHydroIterations;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float m_erosionThermalTimeDelta;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int m_erosionThermalIterations;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public int m_erosionThermalReposeAngle;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float m_erosionPrecipRate;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float m_erosionEvaporationRate;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float m_erosionFlowRate;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float m_erosionSedimentCapacity;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float m_erosionSedimentDepositRate;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float m_erosionSedimentDissolveRate;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float m_erosionRiverBankDepositRate;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float m_erosionRiverBankDissolveRate;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float m_erosionRiverBedDepositRate;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float m_erosionRiverBedDissolveRate;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public ImageMask[] m_imageMasks;

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xB4C050", Offset = "0xB4C050", VA = "0xB4C050")]
		public void ClearImageMaskTextures()
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xB51C04", Offset = "0xB51C04", VA = "0xB51C04")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xB51C08", Offset = "0xB51C08", VA = "0xB51C08", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xB51C0C", Offset = "0xB51C0C", VA = "0xB51C0C", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xB4E430", Offset = "0xB4E430", VA = "0xB4E430")]
		public float GetStampScaleByMeter(Terrain terrain, float heightValueInMeter)
		{
			return default(float);
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xB51C10", Offset = "0xB51C10", VA = "0xB51C10")]
		public void CopyFromTerrainModifierStampResource(ResourceProtoTerrainModifierStamp protoTerrainModifierStamp)
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xB51D3C", Offset = "0xB51D3C", VA = "0xB51D3C")]
		public StamperSettings()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class WorldMap : MonoBehaviour
	{
		[Token(Token = "0x2000584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572FB8", Offset = "0x572FB8")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4002F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WorldMap <>4__this;

			[Token(Token = "0x4002F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BoundsDouble bounds;

			[Token(Token = "0x6002392")]
			[Address(RVA = "0x1377BB8", Offset = "0x1377BB8", VA = "0x1377BB8")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002393")]
			[Address(RVA = "0x1377BC0", Offset = "0x1377BC0", VA = "0x1377BC0")]
			internal void <SyncWorldMapToLocalMap>b__0(Terrain t)
			{
			}
		}

		[Token(Token = "0x2000585")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572FC8", Offset = "0x572FC8")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4002F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WorldMap <>4__this;

			[Token(Token = "0x4002F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BoundsDouble bounds;

			[Token(Token = "0x6002394")]
			[Address(RVA = "0x1377BE8", Offset = "0x1377BE8", VA = "0x1377BE8")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002395")]
			[Address(RVA = "0x1377BF0", Offset = "0x1377BF0", VA = "0x1377BF0")]
			internal void <SyncLocalMapToWorldMap>b__0(Terrain t)
			{
			}
		}

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Terrain m_worldMapTerrain;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GaiaConstants.EnvironmentSize m_worldMapTileSize;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public GaiaConstants.HeightmapResolution m_heightmapResolution;

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x942024", Offset = "0x942024", VA = "0x942024")]
		public void DeactivateWorldMap()
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x9422D4", Offset = "0x9422D4", VA = "0x9422D4")]
		public void ActivateWorldMap()
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x942584", Offset = "0x942584", VA = "0x942584")]
		public void LookAtWorldMap()
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x942588", Offset = "0x942588", VA = "0x942588")]
		public void SyncWorldMapToLocalMap([Optional] List<string> validLocalTerrainNames)
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x942E4C", Offset = "0x942E4C", VA = "0x942E4C")]
		public void SyncLocalMapToWorldMap()
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x9427D8", Offset = "0x9427D8", VA = "0x9427D8")]
		private void CopyWorldMapToLocalMap(BoundsDouble bounds, Terrain t)
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x943050", Offset = "0x943050", VA = "0x943050")]
		private void CopyLocalMapToWorldMap(BoundsDouble bounds, Terrain t)
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x9434D4", Offset = "0x9434D4", VA = "0x9434D4")]
		public static void ShowWorldMapStampSpawner()
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x9439B0", Offset = "0x9439B0", VA = "0x9439B0")]
		public static GameObject GetOrCreateWorldMapStamper()
		{
			return null;
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x943C94", Offset = "0x943C94", VA = "0x943C94")]
		public WorldMap()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000249")]
	public class WorldMapSettings : ScriptableObject, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_x;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_y;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_z;

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x943CA8", Offset = "0x943CA8", VA = "0x943CA8", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x943CAC", Offset = "0x943CAC", VA = "0x943CAC", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x943CB0", Offset = "0x943CB0", VA = "0x943CB0")]
		public WorldMapSettings()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class WorldMapStampToken : MonoBehaviour
	{
		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_previewOnWorldMap;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_previewOnLocalMap;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_featureType;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StamperSettings m_connectedStamperSettings;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_isSelected;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Stamper m_syncedLocalStamper;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Stamper m_syncedWorldMapStamper;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color m_gizmoColor;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_gizmoPos;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GaiaSessionManager m_sessionManager;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Terrain m_worldMapTerrain;

		[Token(Token = "0x170001B6")]
		private GaiaSessionManager SessionManager
		{
			[Token(Token = "0x60011E1")]
			[Address(RVA = "0x943CE8", Offset = "0x943CE8", VA = "0x943CE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		private Terrain WorldMapTerrain
		{
			[Token(Token = "0x60011E2")]
			[Address(RVA = "0x943D78", Offset = "0x943D78", VA = "0x943D78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x943E00", Offset = "0x943E00", VA = "0x943E00")]
		private void Start()
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x943E04", Offset = "0x943E04", VA = "0x943E04")]
		private void Update()
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x943E08", Offset = "0x943E08", VA = "0x943E08")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x943EBC", Offset = "0x943EBC", VA = "0x943EBC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x943EC0", Offset = "0x943EC0", VA = "0x943EC0")]
		public void UpdateGizmoPos()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x944070", Offset = "0x944070", VA = "0x944070")]
		public void SyncLocationToStamperSettings()
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x944348", Offset = "0x944348", VA = "0x944348")]
		public void SyncLocationFromStamperSettings()
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x944648", Offset = "0x944648", VA = "0x944648")]
		public void ReloadLocalStamper()
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x944748", Offset = "0x944748", VA = "0x944748")]
		public void ReloadWorldStamper()
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x9447F4", Offset = "0x9447F4", VA = "0x9447F4")]
		public void SyncLocalStamper(Stamper stamper)
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x94483C", Offset = "0x94483C", VA = "0x94483C")]
		public void SyncWorldMapStamper()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x9440C4", Offset = "0x9440C4", VA = "0x9440C4")]
		private Vector3 GetLocalStamperPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x9449C8", Offset = "0x9449C8", VA = "0x9449C8")]
		public static Stamper GetOrCreateSyncedStamper(string stamperName)
		{
			return null;
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x9446F4", Offset = "0x9446F4", VA = "0x9446F4")]
		public void LoadStamperSettings(Stamper stamper, bool instantiateSettings)
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x944BA0", Offset = "0x944BA0", VA = "0x944BA0")]
		public void DrawWorldMapPreview()
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x944C40", Offset = "0x944C40", VA = "0x944C40")]
		public WorldMapStampToken()
		{
		}
	}
	[Token(Token = "0x200024B")]
	public delegate void ResetBrush();
	[Token(Token = "0x200024C")]
	public interface IBrushUIGroup
	{
		[Token(Token = "0x170001B8")]
		float brushSize
		{
			[Token(Token = "0x60011F7")]
			get;
		}

		[Token(Token = "0x170001B9")]
		float brushRotation
		{
			[Token(Token = "0x60011F8")]
			get;
		}

		[Token(Token = "0x170001BA")]
		float brushStrength
		{
			[Token(Token = "0x60011F9")]
			get;
		}

		[Token(Token = "0x170001BB")]
		float brushSpacing
		{
			[Token(Token = "0x60011FA")]
			get;
		}

		[Token(Token = "0x170001BC")]
		string validationMessage
		{
			[Token(Token = "0x60011FB")]
			get;
			[Token(Token = "0x60011FC")]
			set;
		}

		[Token(Token = "0x170001BD")]
		bool allowPaint
		{
			[Token(Token = "0x60011FD")]
			get;
		}

		[Token(Token = "0x170001BE")]
		bool InvertStrength
		{
			[Token(Token = "0x60011FE")]
			get;
		}

		[Token(Token = "0x170001BF")]
		bool isInUse
		{
			[Token(Token = "0x60011FF")]
			get;
		}

		[Token(Token = "0x170001C0")]
		Terrain terrainUnderCursor
		{
			[Token(Token = "0x6001200")]
			get;
		}

		[Token(Token = "0x170001C1")]
		bool isRaycastHitUnderCursorValid
		{
			[Token(Token = "0x6001201")]
			get;
		}

		[Token(Token = "0x170001C2")]
		RaycastHit raycastHitUnderCursor
		{
			[Token(Token = "0x6001202")]
			get;
		}

		[Token(Token = "0x6001203")]
		bool ScatterBrushStamp(ref Terrain terrain, ref Vector2 uv);
	}
	[Token(Token = "0x200024D")]
	public static class TerrainToolsUtility
	{
		[Token(Token = "0x6001204")]
		[Address(RVA = "0xA23040", Offset = "0xA23040", VA = "0xA23040")]
		public static Vector2 AnimationCurveToRenderTexture(AnimationCurve curve, ref Texture2D tex)
		{
			return default(Vector2);
		}
	}
	[Serializable]
	[Token(Token = "0x200024E")]
	[Flags]
	public enum NoiseDimensionFlags
	{
		[Token(Token = "0x4001BC5")]
		None = 0,
		[Token(Token = "0x4001BC6")]
		_1D = 1,
		[Token(Token = "0x4001BC7")]
		_2D = 2,
		[Token(Token = "0x4001BC8")]
		_3D = 4,
		[Token(Token = "0x4001BC9")]
		_4D = 8
	}
	[Token(Token = "0x200024F")]
	internal struct GeneratedShaderInfo
	{
		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583E30", Offset = "0x583E30")]
		private string <generatedIncludePath>k__BackingField;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583E40", Offset = "0x583E40")]
		private string <additionalIncludePaths>k__BackingField;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583E50", Offset = "0x583E50")]
		private string <noiseIncludeStr>k__BackingField;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583E60", Offset = "0x583E60")]
		private string <variantName>k__BackingField;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583E70", Offset = "0x583E70")]
		private string <outputDir>k__BackingField;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583E80", Offset = "0x583E80")]
		private string <noiseStructName>k__BackingField;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583E90", Offset = "0x583E90")]
		private string <noiseStructDef>k__BackingField;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583EA0", Offset = "0x583EA0")]
		private string <fractalStructName>k__BackingField;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583EB0", Offset = "0x583EB0")]
		private string <fractalStructDef>k__BackingField;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583EC0", Offset = "0x583EC0")]
		private string <fractalParamStr>k__BackingField;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583ED0", Offset = "0x583ED0")]
		private string <noiseParamStr>k__BackingField;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583EE0", Offset = "0x583EE0")]
		private string <functionInputStr>k__BackingField;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583EF0", Offset = "0x583EF0")]
		private string <functionParamStr>k__BackingField;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583F00", Offset = "0x583F00")]
		private string <getDefaultInputsStr>k__BackingField;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583F10", Offset = "0x583F10")]
		private string <getInputsStr>k__BackingField;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583F20", Offset = "0x583F20")]
		private string <getNoiseInputStr>k__BackingField;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583F30", Offset = "0x583F30")]
		private string <getFractalInputStr>k__BackingField;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583F40", Offset = "0x583F40")]
		private string <getDefaultFractalInputStr>k__BackingField;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583F50", Offset = "0x583F50")]
		private string <getDefaultNoiseInputStr>k__BackingField;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583F60", Offset = "0x583F60")]
		private string <fractalPropertyDefStr>k__BackingField;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583F70", Offset = "0x583F70")]
		private int <numFractalInputs>k__BackingField;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583F80", Offset = "0x583F80")]
		private int <numNoiseInputs>k__BackingField;

		[Token(Token = "0x170001C3")]
		public string generatedIncludePath
		{
			[Token(Token = "0x6001205")]
			[Address(RVA = "0xBFA24C", Offset = "0xBFA24C", VA = "0xBFA24C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590E30", Offset = "0x590E30")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6001206")]
			[Address(RVA = "0xBFA254", Offset = "0xBFA254", VA = "0xBFA254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590E68", Offset = "0x590E68")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public string additionalIncludePaths
		{
			[Token(Token = "0x6001207")]
			[Address(RVA = "0xBFA25C", Offset = "0xBFA25C", VA = "0xBFA25C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590E78", Offset = "0x590E78")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6001208")]
			[Address(RVA = "0xBFA264", Offset = "0xBFA264", VA = "0xBFA264")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590EB0", Offset = "0x590EB0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public string noiseIncludeStr
		{
			[Token(Token = "0x6001209")]
			[Address(RVA = "0xBFA26C", Offset = "0xBFA26C", VA = "0xBFA26C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590EC0", Offset = "0x590EC0")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x600120A")]
			[Address(RVA = "0xBFA274", Offset = "0xBFA274", VA = "0xBFA274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590EF8", Offset = "0x590EF8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public string variantName
		{
			[Token(Token = "0x600120B")]
			[Address(RVA = "0xBFA27C", Offset = "0xBFA27C", VA = "0xBFA27C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590F08", Offset = "0x590F08")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x600120C")]
			[Address(RVA = "0xBFA284", Offset = "0xBFA284", VA = "0xBFA284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590F40", Offset = "0x590F40")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C7")]
		public string outputDir
		{
			[Token(Token = "0x600120D")]
			[Address(RVA = "0xBFA28C", Offset = "0xBFA28C", VA = "0xBFA28C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590F50", Offset = "0x590F50")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x600120E")]
			[Address(RVA = "0xBFA294", Offset = "0xBFA294", VA = "0xBFA294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590F88", Offset = "0x590F88")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public string noiseStructName
		{
			[Token(Token = "0x600120F")]
			[Address(RVA = "0xBFA29C", Offset = "0xBFA29C", VA = "0xBFA29C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590F98", Offset = "0x590F98")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6001210")]
			[Address(RVA = "0xBFA2A4", Offset = "0xBFA2A4", VA = "0xBFA2A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590FD0", Offset = "0x590FD0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C9")]
		public string noiseStructDef
		{
			[Token(Token = "0x6001211")]
			[Address(RVA = "0xBFA2AC", Offset = "0xBFA2AC", VA = "0xBFA2AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x590FE0", Offset = "0x590FE0")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6001212")]
			[Address(RVA = "0xBFA2B4", Offset = "0xBFA2B4", VA = "0xBFA2B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591018", Offset = "0x591018")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CA")]
		public string fractalStructName
		{
			[Token(Token = "0x6001213")]
			[Address(RVA = "0xBFA2BC", Offset = "0xBFA2BC", VA = "0xBFA2BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591028", Offset = "0x591028")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6001214")]
			[Address(RVA = "0xBFA2C4", Offset = "0xBFA2C4", VA = "0xBFA2C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591060", Offset = "0x591060")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public string fractalStructDef
		{
			[Token(Token = "0x6001215")]
			[Address(RVA = "0xBFA2CC", Offset = "0xBFA2CC", VA = "0xBFA2CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591070", Offset = "0x591070")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6001216")]
			[Address(RVA = "0xBFA2D4", Offset = "0xBFA2D4", VA = "0xBFA2D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5910A8", Offset = "0x5910A8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public string fractalParamStr
		{
			[Token(Token = "0x6001217")]
			[Address(RVA = "0xBFA2DC", Offset = "0xBFA2DC", VA = "0xBFA2DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5910B8", Offset = "0x5910B8")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6001218")]
			[Address(RVA = "0xBFA2E4", Offset = "0xBFA2E4", VA = "0xBFA2E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5910F0", Offset = "0x5910F0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		public string noiseParamStr
		{
			[Token(Token = "0x6001219")]
			[Address(RVA = "0xBFA2EC", Offset = "0xBFA2EC", VA = "0xBFA2EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591100", Offset = "0x591100")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x600121A")]
			[Address(RVA = "0xBFA2F4", Offset = "0xBFA2F4", VA = "0xBFA2F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591138", Offset = "0x591138")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public string functionInputStr
		{
			[Token(Token = "0x600121B")]
			[Address(RVA = "0xBFA2FC", Offset = "0xBFA2FC", VA = "0xBFA2FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591148", Offset = "0x591148")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x600121C")]
			[Address(RVA = "0xBFA304", Offset = "0xBFA304", VA = "0xBFA304")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591180", Offset = "0x591180")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public string functionParamStr
		{
			[Token(Token = "0x600121D")]
			[Address(RVA = "0xBFA30C", Offset = "0xBFA30C", VA = "0xBFA30C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591190", Offset = "0x591190")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x600121E")]
			[Address(RVA = "0xBFA314", Offset = "0xBFA314", VA = "0xBFA314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5911C8", Offset = "0x5911C8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public string getDefaultInputsStr
		{
			[Token(Token = "0x600121F")]
			[Address(RVA = "0xBFA31C", Offset = "0xBFA31C", VA = "0xBFA31C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5911D8", Offset = "0x5911D8")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6001220")]
			[Address(RVA = "0xBFA324", Offset = "0xBFA324", VA = "0xBFA324")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591210", Offset = "0x591210")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public string getInputsStr
		{
			[Token(Token = "0x6001221")]
			[Address(RVA = "0xBFA32C", Offset = "0xBFA32C", VA = "0xBFA32C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591220", Offset = "0x591220")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6001222")]
			[Address(RVA = "0xBFA334", Offset = "0xBFA334", VA = "0xBFA334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591258", Offset = "0x591258")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public string getNoiseInputStr
		{
			[Token(Token = "0x6001223")]
			[Address(RVA = "0xBFA33C", Offset = "0xBFA33C", VA = "0xBFA33C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591268", Offset = "0x591268")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6001224")]
			[Address(RVA = "0xBFA344", Offset = "0xBFA344", VA = "0xBFA344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5912A0", Offset = "0x5912A0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public string getFractalInputStr
		{
			[Token(Token = "0x6001225")]
			[Address(RVA = "0xBFA34C", Offset = "0xBFA34C", VA = "0xBFA34C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5912B0", Offset = "0x5912B0")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6001226")]
			[Address(RVA = "0xBFA354", Offset = "0xBFA354", VA = "0xBFA354")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5912E8", Offset = "0x5912E8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public string getDefaultFractalInputStr
		{
			[Token(Token = "0x6001227")]
			[Address(RVA = "0xBFA35C", Offset = "0xBFA35C", VA = "0xBFA35C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5912F8", Offset = "0x5912F8")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6001228")]
			[Address(RVA = "0xBFA364", Offset = "0xBFA364", VA = "0xBFA364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591330", Offset = "0x591330")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public string getDefaultNoiseInputStr
		{
			[Token(Token = "0x6001229")]
			[Address(RVA = "0xBFA36C", Offset = "0xBFA36C", VA = "0xBFA36C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591340", Offset = "0x591340")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x600122A")]
			[Address(RVA = "0xBFA374", Offset = "0xBFA374", VA = "0xBFA374")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591378", Offset = "0x591378")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public string fractalPropertyDefStr
		{
			[Token(Token = "0x600122B")]
			[Address(RVA = "0xBFA37C", Offset = "0xBFA37C", VA = "0xBFA37C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591388", Offset = "0x591388")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x600122C")]
			[Address(RVA = "0xBFA384", Offset = "0xBFA384", VA = "0xBFA384")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5913C0", Offset = "0x5913C0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public int numFractalInputs
		{
			[Token(Token = "0x600122D")]
			[Address(RVA = "0xBFA38C", Offset = "0xBFA38C", VA = "0xBFA38C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5913D0", Offset = "0x5913D0")]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x600122E")]
			[Address(RVA = "0xBFA394", Offset = "0xBFA394", VA = "0xBFA394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591408", Offset = "0x591408")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		public int numNoiseInputs
		{
			[Token(Token = "0x600122F")]
			[Address(RVA = "0xBFA39C", Offset = "0xBFA39C", VA = "0xBFA39C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591418", Offset = "0x591418")]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x6001230")]
			[Address(RVA = "0xBFA3A4", Offset = "0xBFA3A4", VA = "0xBFA3A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591450", Offset = "0x591450")]
			private set
			{
			}
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xBFA3AC", Offset = "0xBFA3AC", VA = "0xBFA3AC")]
		public void ReplaceTags(StringBuilder sb)
		{
		}
	}
	[Token(Token = "0x2000250")]
	public enum HlslValueType
	{
		[Token(Token = "0x4001BE1")]
		Float,
		[Token(Token = "0x4001BE2")]
		Float2,
		[Token(Token = "0x4001BE3")]
		Float3,
		[Token(Token = "0x4001BE4")]
		Float4
	}
	[Token(Token = "0x2000251")]
	public struct HlslFloat
	{
		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float val;

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xA640A4", Offset = "0xA640A4", VA = "0xA640A4")]
		public HlslFloat(float val)
		{
		}
	}
	[Token(Token = "0x2000252")]
	public struct HlslFloat2
	{
		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xA640AC", Offset = "0xA640AC", VA = "0xA640AC")]
		public HlslFloat2(float x, float y)
		{
		}
	}
	[Token(Token = "0x2000253")]
	public struct HlslFloat3
	{
		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xA640B4", Offset = "0xA640B4", VA = "0xA640B4")]
		public HlslFloat3(float x, float y, float z)
		{
		}
	}
	[Token(Token = "0x2000254")]
	public struct HlslFloat4
	{
		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xA640C0", Offset = "0xA640C0", VA = "0xA640C0")]
		public HlslFloat4(float x, float y, float z, float w)
		{
		}
	}
	[Token(Token = "0x2000255")]
	public struct HlslInput
	{
		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583F90", Offset = "0x583F90")]
		private HlslValueType <valueType>k__BackingField;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private HlslFloat m_floatValue;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HlslFloat2 m_float2Value;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HlslFloat3 m_float3Value;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private HlslFloat4 m_float4Value;

		[Token(Token = "0x170001D9")]
		public HlslValueType valueType
		{
			[Token(Token = "0x6001236")]
			[Address(RVA = "0xA640CC", Offset = "0xA640CC", VA = "0xA640CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591460", Offset = "0x591460")]
			readonly get
			{
				return default(HlslValueType);
			}
			[Token(Token = "0x6001237")]
			[Address(RVA = "0xA640D4", Offset = "0xA640D4", VA = "0xA640D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591498", Offset = "0x591498")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public HlslFloat floatValue
		{
			[Token(Token = "0x6001238")]
			[Address(RVA = "0xA640DC", Offset = "0xA640DC", VA = "0xA640DC")]
			get
			{
				return default(HlslFloat);
			}
			[Token(Token = "0x6001239")]
			[Address(RVA = "0xA640E4", Offset = "0xA640E4", VA = "0xA640E4")]
			set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public HlslFloat2 float2Value
		{
			[Token(Token = "0x600123A")]
			[Address(RVA = "0xA640F0", Offset = "0xA640F0", VA = "0xA640F0")]
			get
			{
				return default(HlslFloat2);
			}
			[Token(Token = "0x600123B")]
			[Address(RVA = "0xA640F8", Offset = "0xA640F8", VA = "0xA640F8")]
			set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public HlslFloat3 float3Value
		{
			[Token(Token = "0x600123C")]
			[Address(RVA = "0xA64108", Offset = "0xA64108", VA = "0xA64108")]
			get
			{
				return default(HlslFloat3);
			}
			[Token(Token = "0x600123D")]
			[Address(RVA = "0xA64114", Offset = "0xA64114", VA = "0xA64114")]
			set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public HlslFloat4 float4Value
		{
			[Token(Token = "0x600123E")]
			[Address(RVA = "0xA64128", Offset = "0xA64128", VA = "0xA64128")]
			get
			{
				return default(HlslFloat4);
			}
			[Token(Token = "0x600123F")]
			[Address(RVA = "0xA64134", Offset = "0xA64134", VA = "0xA64134")]
			set
			{
			}
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xA64148", Offset = "0xA64148", VA = "0xA64148")]
		public string GetHlslValueTypeString()
		{
			return null;
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xA641DC", Offset = "0xA641DC", VA = "0xA641DC")]
		public string GetDefaultValueString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000256")]
	public struct NoiseTypeDescriptor
	{
		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string outputDir;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string sourcePath;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NoiseDimensionFlags supportedDimensions;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<HlslInput> inputStructDefinition;
	}
	[Token(Token = "0x2000257")]
	public interface INoiseType
	{
		[Token(Token = "0x6001242")]
		NoiseTypeDescriptor GetDescription();

		[Token(Token = "0x6001243")]
		string GetDefaultSerializedString();

		[Token(Token = "0x6001244")]
		string DoGUI(string serializedString);

		[Token(Token = "0x6001245")]
		void SetupMaterial(Material mat, string serializedString);

		[Token(Token = "0x6001246")]
		string ToSerializedString(object target);

		[Token(Token = "0x6001247")]
		object FromSerializedString(string serializedString);
	}
	[Serializable]
	[Token(Token = "0x2000258")]
	public class BoundsDouble
	{
		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Vector3Double m_Center;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3Double m_Extents;

		[Token(Token = "0x170001DE")]
		public Vector3Double center
		{
			[Token(Token = "0x6001248")]
			[Address(RVA = "0x927880", Offset = "0x927880", VA = "0x927880")]
			get
			{
				return default(Vector3Double);
			}
			[Token(Token = "0x6001249")]
			[Address(RVA = "0x92788C", Offset = "0x92788C", VA = "0x92788C")]
			set
			{
			}
		}

		[Token(Token = "0x170001DF")]
		public Vector3Double size
		{
			[Token(Token = "0x600124A")]
			[Address(RVA = "0x927898", Offset = "0x927898", VA = "0x927898")]
			get
			{
				return default(Vector3Double);
			}
			[Token(Token = "0x600124B")]
			[Address(RVA = "0x9278AC", Offset = "0x9278AC", VA = "0x9278AC")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public Vector3Double extents
		{
			[Token(Token = "0x600124C")]
			[Address(RVA = "0x9278DC", Offset = "0x9278DC", VA = "0x9278DC")]
			get
			{
				return default(Vector3Double);
			}
			[Token(Token = "0x600124D")]
			[Address(RVA = "0x9278E8", Offset = "0x9278E8", VA = "0x9278E8")]
			set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public Vector3Double min
		{
			[Token(Token = "0x600124E")]
			[Address(RVA = "0x9278F4", Offset = "0x9278F4", VA = "0x9278F4")]
			get
			{
				return default(Vector3Double);
			}
			[Token(Token = "0x600124F")]
			[Address(RVA = "0x927908", Offset = "0x927908", VA = "0x927908")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public Vector3Double max
		{
			[Token(Token = "0x6001250")]
			[Address(RVA = "0x927974", Offset = "0x927974", VA = "0x927974")]
			get
			{
				return default(Vector3Double);
			}
			[Token(Token = "0x6001251")]
			[Address(RVA = "0x927A1C", Offset = "0x927A1C", VA = "0x927A1C")]
			set
			{
			}
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x927988", Offset = "0x927988", VA = "0x927988")]
		public void SetMinMax(Vector3Double min, Vector3Double max)
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x927A7C", Offset = "0x927A7C", VA = "0x927A7C")]
		public BoundsDouble()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x927ACC", Offset = "0x927ACC", VA = "0x927ACC")]
		public static implicit operator Bounds(BoundsDouble bd)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x927B68", Offset = "0x927B68", VA = "0x927B68")]
		public static implicit operator BoundsDouble(Bounds b)
		{
			return null;
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x927C30", Offset = "0x927C30", VA = "0x927C30")]
		public BoundsDouble(Vector3Double center, Vector3Double size)
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x927CAC", Offset = "0x927CAC", VA = "0x927CAC")]
		public bool Intersects(Bounds bounds)
		{
			return default(bool);
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x927DFC", Offset = "0x927DFC", VA = "0x927DFC")]
		public bool Contains(Vector3Double point)
		{
			return default(bool);
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x927EE8", Offset = "0x927EE8", VA = "0x927EE8")]
		public void Encapsulate(Vector3 point)
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x928038", Offset = "0x928038", VA = "0x928038")]
		public void Encapsulate(Bounds bounds)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x9280D4", Offset = "0x9280D4", VA = "0x9280D4")]
		public void Encapsulate(Vector3Double point)
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x928274", Offset = "0x928274", VA = "0x928274")]
		public void Encapsulate(BoundsDouble bounds)
		{
		}
	}
	[Token(Token = "0x2000259")]
	public enum ExportPreset
	{
		[Token(Token = "0x4001BFD")]
		ExportToOBJFiles,
		[Token(Token = "0x4001BFE")]
		ConvertToMesh,
		[Token(Token = "0x4001BFF")]
		CreateImpostors,
		[Token(Token = "0x4001C00")]
		ConvertToMeshAndImpostors,
		[Token(Token = "0x4001C01")]
		ConvertToLowPolyMesh,
		[Token(Token = "0x4001C02")]
		ConvertToLowPolyMeshAndImpostors,
		[Token(Token = "0x4001C03")]
		Custom
	}
	[Token(Token = "0x200025A")]
	public enum ExportSelection
	{
		[Token(Token = "0x4001C05")]
		AllTerrains,
		[Token(Token = "0x4001C06")]
		SingleTerrainOnly
	}
	[Token(Token = "0x200025B")]
	public enum ConversionAction
	{
		[Token(Token = "0x4001C08")]
		MeshTerrain,
		[Token(Token = "0x4001C09")]
		ColliderOnly,
		[Token(Token = "0x4001C0A")]
		OBJFileExport
	}
	[Token(Token = "0x200025C")]
	public enum LODSettingsMode
	{
		[Token(Token = "0x4001C0C")]
		Impostor,
		[Token(Token = "0x4001C0D")]
		LowPoly,
		[Token(Token = "0x4001C0E")]
		Custom
	}
	[Token(Token = "0x200025D")]
	public enum SaveFormat
	{
		[Token(Token = "0x4001C10")]
		Triangles,
		[Token(Token = "0x4001C11")]
		Quads
	}
	[Token(Token = "0x200025E")]
	public enum SaveResolution
	{
		[Token(Token = "0x4001C13")]
		Full,
		[Token(Token = "0x4001C14")]
		Half,
		[Token(Token = "0x4001C15")]
		Quarter,
		[Token(Token = "0x4001C16")]
		Eighth,
		[Token(Token = "0x4001C17")]
		Sixteenth
	}
	[Token(Token = "0x200025F")]
	public enum NormalEdgeMode
	{
		[Token(Token = "0x4001C19")]
		Smooth,
		[Token(Token = "0x4001C1A")]
		Sharp
	}
	[Token(Token = "0x2000260")]
	public enum TextureExportMethod
	{
		[Token(Token = "0x4001C1C")]
		OrthographicBake,
		[Token(Token = "0x4001C1D")]
		BaseMapExport
	}
	[Token(Token = "0x2000261")]
	public enum BakeLighting
	{
		[Token(Token = "0x4001C1F")]
		NeutralLighting,
		[Token(Token = "0x4001C20")]
		CurrentSceneLighting
	}
	[Token(Token = "0x2000262")]
	public enum AddAlphaChannel
	{
		[Token(Token = "0x4001C22")]
		None,
		[Token(Token = "0x4001C23")]
		Heightmap
	}
	[Token(Token = "0x2000263")]
	public enum ExportedTerrainShader
	{
		[Token(Token = "0x4001C25")]
		Standard,
		[Token(Token = "0x4001C26")]
		VertexColor
	}
	[Token(Token = "0x2000264")]
	public enum TextureExportResolution
	{
		[Token(Token = "0x4001C28")]
		x32 = 0x20,
		[Token(Token = "0x4001C29")]
		x64 = 0x40,
		[Token(Token = "0x4001C2A")]
		x128 = 0x80,
		[Token(Token = "0x4001C2B")]
		x256 = 0x100,
		[Token(Token = "0x4001C2C")]
		x512 = 0x200,
		[Token(Token = "0x4001C2D")]
		x1024 = 0x400,
		[Token(Token = "0x4001C2E")]
		x2048 = 0x800,
		[Token(Token = "0x4001C2F")]
		x4096 = 0x1000,
		[Token(Token = "0x4001C30")]
		x8192 = 0x2000
	}
	[Token(Token = "0x2000265")]
	public enum SourceTerrainTreatment
	{
		[Token(Token = "0x4001C32")]
		Nothing,
		[Token(Token = "0x4001C33")]
		Deactivate,
		[Token(Token = "0x4001C34")]
		StoreInBackupScenes,
		[Token(Token = "0x4001C35")]
		Delete
	}
	[Serializable]
	[Token(Token = "0x2000266")]
	public class ExportTerrainLODSettings
	{
		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SaveResolution m_saveResolution;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public NormalEdgeMode m_normalEdgeMode;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LODSettingsMode m_LODSettingsMode;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool m_settingsFoldedOut;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool m_exportTextures;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool m_exportNormalMaps;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public bool m_exportSplatmaps;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_createMaterials;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ExportedTerrainShader m_materialShader;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_bakeVertexColors;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int m_VertexColorSmoothing;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayerMask m_bakeLayerMask;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public TextureExportMethod m_textureExportMethod;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AddAlphaChannel m_addAlphaChannel;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public TextureExportResolution m_textureExportResolution;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BakeLighting m_bakeLighting;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string namePrefix;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool m_captureBaseMapTextures;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_LODGroupScreenRelativeTransitionHeight;

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x8AE4F4", Offset = "0x8AE4F4", VA = "0x8AE4F4")]
		public bool CompareTo(ExportTerrainLODSettings compareToLOD)
		{
			return default(bool);
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x8AE6A0", Offset = "0x8AE6A0", VA = "0x8AE6A0")]
		public ExportTerrainLODSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000267")]
	public class ExportTerrainSettings : ScriptableObject, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SourceTerrainTreatment m_sourceTerrainTreatment;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SaveFormat m_saveFormat;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_addMeshCollider;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool m_addMeshColliderImpostor;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ExportSelection m_exportSelection;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D m_terrainExportMask;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GaiaConstants.ImageChannel m_terrainExportMaskChannel;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool m_terrainExportInvertMask;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool m_copyGaiaGameObjects;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		public bool m_copyGaiaGameObjectsImpostor;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		public bool m_convertSourceTerrains;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ConversionAction m_convertSourceTerrainsAction;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public SaveResolution m_colliderExportResolution;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool m_colliderExportAddTreeColliders;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool m_colliderExportAddGameObjectColliders;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool m_colliderExportCreateColliderScenes;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public bool m_colliderExportBakeCombinedCollisionMesh;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool m_createImpostorScenes;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<ExportTerrainLODSettings> m_exportTerrainLODSettingsSourceTerrains;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<ExportTerrainLODSettings> m_exportTerrainLODSettingsImpostors;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string m_exportPath;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ExportPreset m_newExportPreset;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool m_customSettingsFoldedOut;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int m_presetIndex;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string m_lastUsedPresetName;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Mesh m_colliderTreeReplacement;

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x8AE708", Offset = "0x8AE708", VA = "0x8AE708")]
		public bool CompareTo(ExportTerrainSettings compareSettings)
		{
			return default(bool);
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x8AEA84", Offset = "0x8AEA84", VA = "0x8AEA84", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x8AEA88", Offset = "0x8AEA88", VA = "0x8AEA88", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x8AEA8C", Offset = "0x8AEA8C", VA = "0x8AEA8C")]
		public ExportTerrainSettings()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class FractalGenerator
	{
		[Token(Token = "0x2000586")]
		public enum Fractals
		{
			[Token(Token = "0x4002F86")]
			Perlin,
			[Token(Token = "0x4002F87")]
			Billow,
			[Token(Token = "0x4002F88")]
			RidgeMulti
		}

		[Token(Token = "0x2000587")]
		private delegate float GetCalcValue(float x, float z);

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_seed;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int m_octaves;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_persistence;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_frequency;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_lacunarity;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_XOffset;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_ZOffset;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_YOffset;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Fractals m_fractalType;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] m_spectralWeights;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GetCalcValue m_noiseCalculator;

		[Token(Token = "0x170001E3")]
		public float Seed
		{
			[Token(Token = "0x6001263")]
			[Address(RVA = "0x8B7A80", Offset = "0x8B7A80", VA = "0x8B7A80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001264")]
			[Address(RVA = "0x8B7A88", Offset = "0x8B7A88", VA = "0x8B7A88")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public int Octaves
		{
			[Token(Token = "0x6001265")]
			[Address(RVA = "0x8B7A90", Offset = "0x8B7A90", VA = "0x8B7A90")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001266")]
			[Address(RVA = "0x8B7A98", Offset = "0x8B7A98", VA = "0x8B7A98")]
			set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public float Persistence
		{
			[Token(Token = "0x6001267")]
			[Address(RVA = "0x8B7AA0", Offset = "0x8B7AA0", VA = "0x8B7AA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001268")]
			[Address(RVA = "0x8B7AA8", Offset = "0x8B7AA8", VA = "0x8B7AA8")]
			set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public float Frequency
		{
			[Token(Token = "0x6001269")]
			[Address(RVA = "0x8B7AB0", Offset = "0x8B7AB0", VA = "0x8B7AB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600126A")]
			[Address(RVA = "0x8B7AB8", Offset = "0x8B7AB8", VA = "0x8B7AB8")]
			set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public float Lacunarity
		{
			[Token(Token = "0x600126B")]
			[Address(RVA = "0x8B7AC0", Offset = "0x8B7AC0", VA = "0x8B7AC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600126C")]
			[Address(RVA = "0x8B7AC8", Offset = "0x8B7AC8", VA = "0x8B7AC8")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public float XOffset
		{
			[Token(Token = "0x600126D")]
			[Address(RVA = "0x8B7AD0", Offset = "0x8B7AD0", VA = "0x8B7AD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600126E")]
			[Address(RVA = "0x8B7AD8", Offset = "0x8B7AD8", VA = "0x8B7AD8")]
			set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public float ZOffset
		{
			[Token(Token = "0x600126F")]
			[Address(RVA = "0x8B7AE0", Offset = "0x8B7AE0", VA = "0x8B7AE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001270")]
			[Address(RVA = "0x8B7AE8", Offset = "0x8B7AE8", VA = "0x8B7AE8")]
			set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public float YOffset
		{
			[Token(Token = "0x6001271")]
			[Address(RVA = "0x8B7AF0", Offset = "0x8B7AF0", VA = "0x8B7AF0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001272")]
			[Address(RVA = "0x8B7AF8", Offset = "0x8B7AF8", VA = "0x8B7AF8")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public Fractals FractalType
		{
			[Token(Token = "0x6001273")]
			[Address(RVA = "0x8B7B00", Offset = "0x8B7B00", VA = "0x8B7B00")]
			get
			{
				return default(Fractals);
			}
			[Token(Token = "0x6001274")]
			[Address(RVA = "0x8B7B08", Offset = "0x8B7B08", VA = "0x8B7B08")]
			set
			{
			}
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x8B7C88", Offset = "0x8B7C88", VA = "0x8B7C88")]
		public FractalGenerator()
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x8B7D0C", Offset = "0x8B7D0C", VA = "0x8B7D0C")]
		public FractalGenerator(float frequency, float lacunarity, int octaves, float persistance, float seed, Fractals type)
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x8B7E70", Offset = "0x8B7E70", VA = "0x8B7E70")]
		public void SetDefaults()
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x8B7FA4", Offset = "0x8B7FA4", VA = "0x8B7FA4")]
		public float GetValue(float x, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x8B7FC0", Offset = "0x8B7FC0", VA = "0x8B7FC0")]
		public double GetValue(double x, double z)
		{
			return default(double);
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x8B7FF0", Offset = "0x8B7FF0", VA = "0x8B7FF0")]
		public float GetNormalisedValue(float x, float z)
		{
			return default(float);
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x8B8028", Offset = "0x8B8028", VA = "0x8B8028")]
		public double GetNormalisedValue(double x, double z)
		{
			return default(double);
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x8B8048", Offset = "0x8B8048", VA = "0x8B8048")]
		public float GetValue_Perlin(float x, float z)
		{
			return default(float);
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x8B8158", Offset = "0x8B8158", VA = "0x8B8158")]
		public float GetValue_Billow(float x, float z)
		{
			return default(float);
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x8B8280", Offset = "0x8B8280", VA = "0x8B8280")]
		public float GetValue_RidgedMulti(float x, float z)
		{
			return default(float);
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x8B7BFC", Offset = "0x8B7BFC", VA = "0x8B7BFC")]
		private void CalcSpectralWeights()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public static class GaiaDirectories
	{
		[Token(Token = "0x4001C6E")]
		public const string SESSION_OPERATIONS_DIRECTORY = "/Session Operations";

		[Token(Token = "0x4001C6F")]
		public const string SESSION_SCENE_PROFILE_DIRECTORY = "/Scene Profiles";

		[Token(Token = "0x4001C70")]
		public const string TERRAIN_SCENES_DIRECTORY = "/Terrain Scenes";

		[Token(Token = "0x4001C71")]
		public const string IMPOSTOR_SCENES_DIRECTORY = "/Impostor Scenes";

		[Token(Token = "0x4001C72")]
		public const string COLLIDER_SCENES_DIRECTORY = "/Collider Scenes";

		[Token(Token = "0x4001C73")]
		public const string BACKUP_SCENES_DIRECTORY = "/Backup Scenes";

		[Token(Token = "0x4001C74")]
		public const string BACKUP_HEIGHTMAPS_DIRECTORY = "/Terrain Heightmap Backup";

		[Token(Token = "0x4001C75")]
		public const string BACKUP_SPECIALSTAMPER_DIRECTORY = "/Stamper Backup";

		[Token(Token = "0x4001C76")]
		public const string TERRAIN_DATA_DIRECTORY = "/Terrain Data";

		[Token(Token = "0x4001C77")]
		public const string SETTINGS_DIRECTORY = "/Settings";

		[Token(Token = "0x4001C78")]
		public const string STAMP_DIRECTORY = "/Stamps";

		[Token(Token = "0x4001C79")]
		public const string USER_STAMP_DIRECTORY = "/My Saved Stamps";

		[Token(Token = "0x4001C7A")]
		public const string TERRAIN_LAYERS_DIRECTORY = "/Terrain Layers";

		[Token(Token = "0x4001C7B")]
		public const string TERRAIN_DETAILS_DIRECTORY = "/Terrain Details";

		[Token(Token = "0x4001C7C")]
		public const string EXPORT_DIRECTORY = "/Exports";

		[Token(Token = "0x4001C7D")]
		public const string STAMPER_EXPORT_DIRECTORY = "/Stamper Exports";

		[Token(Token = "0x4001C7E")]
		public const string STAMPER_TERRAIN_EXPORT_DIRECTORY = "/Stamper Terrain Exports";

		[Token(Token = "0x4001C7F")]
		public const string WORLD_DESIGNER_EXPORT_DIRECTORY = "/World Designer Exports";

		[Token(Token = "0x4001C80")]
		public const string SCANNER_EXPORT_DIRECTORY = "/Scanner Exports";

		[Token(Token = "0x4001C81")]
		public const string MASK_MAP_EXPORT_DIRECTORY = "/Mask Maps";

		[Token(Token = "0x4001C82")]
		public const string COLLISION_DATA_DIRECTORY = "/TerrainCollisionData";

		[Token(Token = "0x4001C83")]
		public const string GAIA_PRO = "/Procedural Worlds/Gaia/Gaia Pro";

		[Token(Token = "0x4001C84")]
		public const string GAIA_SHADER_DIRECTORY = "/Procedural Worlds/PW Shader Library";

		[Token(Token = "0x4001C85")]
		public const string TERRAIN_MESH_EXPORT_DIRECTORY = "/Mesh Terrains";

		[Token(Token = "0x4001C86")]
		public const string GAIA_WATER_MATERIAL_DIRECTORY = "/Gaia Lighting and Water/Gaia Water/Ocean Water/Resources/Material";

		[Token(Token = "0x4001C87")]
		public const string TEMP_EXPORT_PATH = "Assets/Temp Export";

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x8228CC", Offset = "0x8228CC", VA = "0x8228CC")]
		public static bool GetGaiaProDirectory()
		{
			return default(bool);
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x822924", Offset = "0x822924", VA = "0x822924")]
		public static string GetGaiaDirectory()
		{
			return null;
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x822968", Offset = "0x822968", VA = "0x822968")]
		public static string GetSessionDirectory()
		{
			return null;
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x8229A4", Offset = "0x8229A4", VA = "0x8229A4")]
		public static string GetSettingsDirectory()
		{
			return null;
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x822A74", Offset = "0x822A74", VA = "0x822A74")]
		public static string GetTerrainScenePathForSession([Optional] GaiaSession gaiaSession)
		{
			return null;
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x822C34", Offset = "0x822C34", VA = "0x822C34")]
		public static string GetTerrainScenePathForStorageFile([Optional] TerrainSceneStorage terrainSceneStorage)
		{
			return null;
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x822C78", Offset = "0x822C78", VA = "0x822C78")]
		public static string GetImpostorScenePath([Optional] GaiaSession gaiaSession)
		{
			return null;
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x822D4C", Offset = "0x822D4C", VA = "0x822D4C")]
		public static string GetColliderScenePath([Optional] GaiaSession gaiaSession)
		{
			return null;
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x822E20", Offset = "0x822E20", VA = "0x822E20")]
		public static string GetBackupScenePath([Optional] GaiaSession gaiaSession)
		{
			return null;
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x822EF4", Offset = "0x822EF4", VA = "0x822EF4")]
		public static string GetBackupHeightmapsPath(bool create = false, [Optional] GaiaSession gaiaSession)
		{
			return null;
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x822FDC", Offset = "0x822FDC", VA = "0x822FDC")]
		public static string GetStamperBackupsPath(bool create = false, [Optional] GaiaSession gaiaSession)
		{
			return null;
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x8230F0", Offset = "0x8230F0", VA = "0x8230F0")]
		public static string GetSessionOperationPath(GaiaSession gaiaSession, bool create = true)
		{
			return null;
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x823134", Offset = "0x823134", VA = "0x823134")]
		public static string GetSessionSubFolderPath(GaiaSession gaiaSession, bool create = true)
		{
			return null;
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x823178", Offset = "0x823178", VA = "0x823178")]
		public static string GetSceneProfilesFolderPath(GaiaSession gaiaSession, bool create = true)
		{
			return null;
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x822B48", Offset = "0x822B48", VA = "0x822B48")]
		public static string GetScenePath([Optional] GaiaSession gaiaSession)
		{
			return null;
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x8231BC", Offset = "0x8231BC", VA = "0x8231BC")]
		public static string GetTerrainDataScenePath([Optional] GaiaSession gaiaSession)
		{
			return null;
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x823290", Offset = "0x823290", VA = "0x823290")]
		public static string GetTempExportPath()
		{
			return null;
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x8232D4", Offset = "0x8232D4", VA = "0x8232D4")]
		public static string GetTerrainLayerPath([Optional] GaiaSession gaiaSession)
		{
			return null;
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x8233A8", Offset = "0x8233A8", VA = "0x8233A8")]
		public static string GetTerrainDetailsPath([Optional] GaiaSession gaiaSession)
		{
			return null;
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x82347C", Offset = "0x82347C", VA = "0x82347C")]
		public static string GetStampDirectory()
		{
			return null;
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x8234C4", Offset = "0x8234C4", VA = "0x8234C4")]
		public static string GetExportDirectory([Optional] GaiaSession gaiaSession)
		{
			return null;
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x823598", Offset = "0x823598", VA = "0x823598")]
		public static string GetUserBiomeDirectory(string biomeName = "")
		{
			return null;
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x82368C", Offset = "0x82368C", VA = "0x82368C")]
		public static string GetUserSettingsDirectory()
		{
			return null;
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x8236D8", Offset = "0x8236D8", VA = "0x8236D8")]
		public static string GetMaskMapExportDirectory([Optional] GaiaSession gaiaSession)
		{
			return null;
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x8237AC", Offset = "0x8237AC", VA = "0x8237AC")]
		public static string GetUserStampDirectory()
		{
			return null;
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x8237F8", Offset = "0x8237F8", VA = "0x8237F8")]
		public static string GetStamperExportsDirectory()
		{
			return null;
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x823868", Offset = "0x823868", VA = "0x823868")]
		public static string GetStamperTerrainExportsDirectory()
		{
			return null;
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x8238D8", Offset = "0x8238D8", VA = "0x8238D8")]
		public static string GetWorldDesignerExportsDirectory()
		{
			return null;
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x823948", Offset = "0x823948", VA = "0x823948")]
		public static string GetScannerExportDirectory()
		{
			return null;
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x8239B8", Offset = "0x8239B8", VA = "0x8239B8")]
		public static string GetCollisionDataDirectory()
		{
			return null;
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x823A00", Offset = "0x823A00", VA = "0x823A00")]
		public static string GetTerrainMeshExportDirectory([Optional] GaiaSession gaiaSession)
		{
			return null;
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x823AD4", Offset = "0x823AD4", VA = "0x823AD4")]
		public static string GetStampFeatureDirectory(GaiaConstants.FeatureType featureType)
		{
			return null;
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x823BAC", Offset = "0x823BAC", VA = "0x823BAC")]
		public static string GetTerrainCollisionDirectory(Terrain terrain)
		{
			return null;
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x823C1C", Offset = "0x823C1C", VA = "0x823C1C")]
		public static string GetStampInstanceDirectory(GaiaConstants.FeatureType m_featureType, string m_featureName)
		{
			return null;
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x823CA0", Offset = "0x823CA0", VA = "0x823CA0")]
		public static string GetShaderDirectory()
		{
			return null;
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x8229EC", Offset = "0x8229EC", VA = "0x8229EC")]
		private static string GetGaiaSubDirectory(string subDir, bool create = true)
		{
			return null;
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x822BFC", Offset = "0x822BFC", VA = "0x822BFC")]
		public static string CreatePathIfDoesNotExist(string path)
		{
			return null;
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x823CF0", Offset = "0x823CF0", VA = "0x823CF0")]
		public static string GetPathStartingAtAssetsFolder(string inputPath)
		{
			return null;
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x823D64", Offset = "0x823D64", VA = "0x823D64")]
		public static string GetFullFileSystemPath(string inputPath)
		{
			return null;
		}
	}
	[Token(Token = "0x200026A")]
	public class GaiaSceneInfo
	{
		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Bounds m_sceneBounds;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 m_centrePointOnTerrain;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_seaLevel;

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x80E750", Offset = "0x80E750", VA = "0x80E750")]
		public static GaiaSceneInfo GetSceneInfo()
		{
			return null;
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x80E7DC", Offset = "0x80E7DC", VA = "0x80E7DC")]
		public GaiaSceneInfo()
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class GaiaScriptOrder : Attribute
	{
		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Order;

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x8115C0", Offset = "0x8115C0", VA = "0x8115C0")]
		public GaiaScriptOrder(int order)
		{
		}
	}
	[Token(Token = "0x200026C")]
	public struct GaiaSplatPrototype
	{
		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float metallic;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float normalScale;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D normalMap;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float smoothness;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D texture;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 tileOffset;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 tileSize;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D maskMap;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector4 diffuseRemapMin;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector4 diffuseRemapMax;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector4 maskMapRemapMin;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector4 maskMapRemapMax;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color specularColor;

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x9F6CAC", Offset = "0x9F6CAC", VA = "0x9F6CAC")]
		public GaiaSplatPrototype(TerrainLayer terrainLayer)
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x9F6E98", Offset = "0x9F6E98", VA = "0x9F6E98")]
		public TerrainLayer Convert()
		{
			return null;
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x9F6FE0", Offset = "0x9F6FE0", VA = "0x9F6FE0")]
		public static GaiaSplatPrototype[] GetGaiaSplatPrototypes(Terrain terrain)
		{
			return null;
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x9F7200", Offset = "0x9F7200", VA = "0x9F7200")]
		public static void SetGaiaSplatPrototypes(Terrain terrain, GaiaSplatPrototype[] splats, string terrainName)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x9F72CC", Offset = "0x9F72CC", VA = "0x9F72CC")]
		public static TerrainLayer[] CreateTerrainLayers(string namePrefix, GaiaSplatPrototype[] splats)
		{
			return null;
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x9F74D4", Offset = "0x9F74D4", VA = "0x9F74D4")]
		public static TerrainLayer SaveTerrainLayerAsAsset(string terrainName, string layerId, TerrainLayer terrainLayer)
		{
			return null;
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x9F7460", Offset = "0x9F7460", VA = "0x9F7460")]
		private static void RemoveTerrainLayerAssetFiles(string terrainName)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026D")]
	public class GaiaStopWatchEvent
	{
		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_name;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_parent;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_started;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int m_callCount;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long m_firstStartTimeStamp;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long m_lastStartTimeStamp;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public long m_lastStopTimeStamp;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long m_durationPerCall;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public long m_accumulatedTime;

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x9F7578", Offset = "0x9F7578", VA = "0x9F7578")]
		public GaiaStopWatchEvent()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public static class GaiaStopwatch
	{
		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x9F7580", Offset = "0x9F7580", VA = "0x9F7580")]
		private static void Start()
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x9F7584", Offset = "0x9F7584", VA = "0x9F7584")]
		public static void LogWithTime(string logText)
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x9F7588", Offset = "0x9F7588", VA = "0x9F7588")]
		public static void StartEvent(string name)
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x9F758C", Offset = "0x9F758C", VA = "0x9F758C")]
		public static void EndEvent(string name, bool warning = true)
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x9F7590", Offset = "0x9F7590", VA = "0x9F7590")]
		public static void Stop(bool outputData = true)
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class GaiaStopwatchControl : MonoBehaviour
	{
		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x9F7594", Offset = "0x9F7594", VA = "0x9F7594")]
		public GaiaStopwatchControl()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class GaiaStopwatchDataset : MonoBehaviour
	{
		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GaiaStopWatchEvent> m_events;

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x9F759C", Offset = "0x9F759C", VA = "0x9F759C")]
		public GaiaStopwatchDataset()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public static class GaiaPrefabUtility
	{
		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string m_vfxLayerName;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int m_vfxLayerIndex;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string m_objectSmallLayerName;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly int m_objectSmallLayerIndex;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly string m_objectMediumLayerName;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly int m_objectMediumLayerIndex;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly string m_objectLargeLayerName;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly int m_objectLargeLayerIndex;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly string m_objectDefaultLayerName;
	}
	[Token(Token = "0x2000272")]
	public class GaiaUtils : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572FD8", Offset = "0x572FD8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Terrain, bool> <>9__48_0;

			[Token(Token = "0x4002F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<TerrainScene, bool> <>9__137_0;

			[Token(Token = "0x4002F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<TerrainScene, bool> <>9__138_0;

			[Token(Token = "0x600239B")]
			[Address(RVA = "0x920D88", Offset = "0x920D88", VA = "0x920D88")]
			public <>c()
			{
			}

			[Token(Token = "0x600239C")]
			[Address(RVA = "0x920D90", Offset = "0x920D90", VA = "0x920D90")]
			internal bool <HasTerrains>b__48_0(Terrain x)
			{
				return default(bool);
			}

			[Token(Token = "0x600239D")]
			[Address(RVA = "0x920DB4", Offset = "0x920DB4", VA = "0x920DB4")]
			internal bool <HasColliderTerrains>b__137_0(TerrainScene x)
			{
				return default(bool);
			}

			[Token(Token = "0x600239E")]
			[Address(RVA = "0x920DE0", Offset = "0x920DE0", VA = "0x920DE0")]
			internal bool <HasImpostorTerrains>b__138_0(TerrainScene x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000589")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572FE8", Offset = "0x572FE8")]
		private sealed class <>c__DisplayClass96_0<T> where T : Enum
		{
			[Token(Token = "0x4002F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T enumValue;

			[Token(Token = "0x600239F")]
			public <>c__DisplayClass96_0()
			{
			}

			[Token(Token = "0x60023A0")]
			internal bool <GetEnumOrder>b__1(<>f__AnonymousType0<T, int> x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200058A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572FF8", Offset = "0x572FF8")]
		private sealed class <>c__96<T> where T : Enum
		{
			[Token(Token = "0x4002F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__96<T> <>9;

			[Token(Token = "0x4002F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, int, <>f__AnonymousType0<T, int>> <>9__96_0;

			[Token(Token = "0x60023A2")]
			public <>c__96()
			{
			}

			[Token(Token = "0x60023A3")]
			internal <>f__AnonymousType0<T, int> <GetEnumOrder>b__96_0(T x, int i)
			{
				return null;
			}
		}

		[Token(Token = "0x200058B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573008", Offset = "0x573008")]
		private sealed class <>c__DisplayClass97_0<T>
		{
			[Token(Token = "0x4002F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int offset;

			[Token(Token = "0x4002F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int random;

			[Token(Token = "0x60023A4")]
			public <>c__DisplayClass97_0()
			{
			}

			[Token(Token = "0x60023A5")]
			internal (T, int) <PickRandomListElementWeightedChance>b__1([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x595C74", Offset = "0x595C74")] (T, int) entry)
			{
				return default((T, int));
			}

			[Token(Token = "0x60023A6")]
			internal bool <PickRandomListElementWeightedChance>b__3([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x595CF8", Offset = "0x595CF8")] (T, int) item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200058C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573018", Offset = "0x573018")]
		private sealed class <>c__97<T>
		{
			[Token(Token = "0x4002F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__97<T> <>9;

			[Token(Token = "0x4002F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x58DB98", Offset = "0x58DB98")]
			public static Func<(T, int), int> <>9__97_0;

			[Token(Token = "0x4002F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x58DC1C", Offset = "0x58DC1C")]
			public static Func<(T, int), int> <>9__97_2;

			[Token(Token = "0x60023A8")]
			public <>c__97()
			{
			}

			[Token(Token = "0x60023A9")]
			internal int <PickRandomListElementWeightedChance>b__97_0([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x595D7C", Offset = "0x595D7C")] (T, int) item)
			{
				return default(int);
			}

			[Token(Token = "0x60023AA")]
			internal int <PickRandomListElementWeightedChance>b__97_2([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x595E00", Offset = "0x595E00")] (T, int) item)
			{
				return default(int);
			}
		}

		[Token(Token = "0x200058D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573028", Offset = "0x573028")]
		private sealed class <>c__DisplayClass104_0
		{
			[Token(Token = "0x4002F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string protoName;

			[Token(Token = "0x60023AB")]
			[Address(RVA = "0x920E0C", Offset = "0x920E0C", VA = "0x920E0C")]
			public <>c__DisplayClass104_0()
			{
			}

			[Token(Token = "0x60023AC")]
			[Address(RVA = "0x920E14", Offset = "0x920E14", VA = "0x920E14")]
			internal bool <GetGOSpawnTarget>b__0(GaiaHierarchyVisibility x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x9FA7CC", Offset = "0x9FA7CC", VA = "0x9FA7CC")]
		public static List<string> GetGaiaStampsList(GaiaConstants.FeatureType featureType)
		{
			return null;
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x9FA874", Offset = "0x9FA874", VA = "0x9FA874")]
		public static string GetGaiaStampPath(Texture2D source)
		{
			return null;
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x9FA960", Offset = "0x9FA960", VA = "0x9FA960")]
		public static void CallFunctionOnDynamicLoadedTerrains(Action<Terrain> terrainAction, bool dirtyScenes, [Optional] List<string> terrainNames, string progressBarText = "")
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x9FA964", Offset = "0x9FA964", VA = "0x9FA964")]
		public static GameObject FindObjectDeactivated(string searchFor, bool fullNameMatch = true)
		{
			return null;
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x9FAA58", Offset = "0x9FAA58", VA = "0x9FAA58")]
		public static bool CheckValidGaiaStampPath(Texture2D source)
		{
			return default(bool);
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x9FABB0", Offset = "0x9FABB0", VA = "0x9FABB0")]
		public static float GetTreeRadius(GameObject treePrefab)
		{
			return default(float);
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x9FAE9C", Offset = "0x9FAE9C", VA = "0x9FAE9C")]
		public static void CreateGaiaStampDirectories()
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x9FAEA0", Offset = "0x9FAEA0", VA = "0x9FAEA0")]
		public static float GetBoundsForTaggedObject(string tag)
		{
			return default(float);
		}

		[Token(Token = "0x60012C2")]
		public static T[] GetAtPath<T>(string path)
		{
			return null;
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x9FB028", Offset = "0x9FB028", VA = "0x9FB028")]
		public static Vector2 GetScreenResolution(GaiaConstants.ScreenshotResolution screenshotResolution, int customWidth = 1920, int customHeight = 1080)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x9FB104", Offset = "0x9FB104", VA = "0x9FB104")]
		public static Color ColorInvert(Color color)
		{
			return default(Color);
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x9FB11C", Offset = "0x9FB11C", VA = "0x9FB11C")]
		public static bool ValidateShaderProperty(Material material, int shaderID)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x9FB1C0", Offset = "0x9FB1C0", VA = "0x9FB1C0")]
		public static bool ValidateShaderProperty(Material material, string shaderID)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x9FB264", Offset = "0x9FB264", VA = "0x9FB264")]
		public static List<Material> FindMaterialsByShader(Shader targetShader)
		{
			return null;
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x9FB2D0", Offset = "0x9FB2D0", VA = "0x9FB2D0")]
		public static void FinalizeScene()
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x9FB2D4", Offset = "0x9FB2D4", VA = "0x9FB2D4")]
		public static void FocusWeatherObject()
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x9FB2D8", Offset = "0x9FB2D8", VA = "0x9FB2D8")]
		public static bool CheckLightingProfileIndexRange()
		{
			return default(bool);
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x9FB4E4", Offset = "0x9FB4E4", VA = "0x9FB4E4")]
		public static bool CheckWaterProfileIndexRange()
		{
			return default(bool);
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x9FB5D0", Offset = "0x9FB5D0", VA = "0x9FB5D0")]
		public static Material GetParticleMaterial(GameObject selfObject)
		{
			return null;
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x9FB6B8", Offset = "0x9FB6B8", VA = "0x9FB6B8")]
		public static UserFiles GetOrCreateUserFiles()
		{
			return null;
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x9FB6C0", Offset = "0x9FB6C0", VA = "0x9FB6C0")]
		public static void UpdateProbeDataDefaults(SceneProfile sceneProfile)
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x9FB844", Offset = "0x9FB844", VA = "0x9FB844")]
		private static void UpdateAllSceneProbes(ReflectionProbeData data)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x9FB9F4", Offset = "0x9FB9F4", VA = "0x9FB9F4")]
		public static Material GetParticleMaterial(string objectName)
		{
			return null;
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x9FBB00", Offset = "0x9FBB00", VA = "0x9FBB00")]
		public static List<Material> GetCloudLayerMaterials(string objectName, string ignoreContainName)
		{
			return null;
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x9F81BC", Offset = "0x9F81BC", VA = "0x9F81BC")]
		public static GaiaConstants.EnvironmentRenderer GetActivePipeline()
		{
			return default(GaiaConstants.EnvironmentRenderer);
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x9FBCE4", Offset = "0x9FBCE4", VA = "0x9FBCE4")]
		public static void SetDefaultStampImportSettings(string textureFileName)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x9F9980", Offset = "0x9F9980", VA = "0x9F9980")]
		public static Camera GetCamera(bool checkTag = false)
		{
			return null;
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x9FBCE8", Offset = "0x9FBCE8", VA = "0x9FBCE8")]
		public static GameObject GetCharacter()
		{
			return null;
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x9FB3C4", Offset = "0x9FB3C4", VA = "0x9FB3C4")]
		public static bool CheckIfSceneProfileExists()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x9F83CC", Offset = "0x9F83CC", VA = "0x9F83CC")]
		public static Light GetMainDirectionalLight(bool create = true)
		{
			return null;
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x9FBD90", Offset = "0x9FBD90", VA = "0x9FBD90")]
		public static Light GetMainMoonLight(bool create = true)
		{
			return null;
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x9F8298", Offset = "0x9F8298", VA = "0x9F8298")]
		public static Material GetWaterMaterial(string waterObjectName, bool getUnderWaterMaterial = false)
		{
			return null;
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x9FBF74", Offset = "0x9FBF74", VA = "0x9FBF74")]
		public static void RemoveWaterSystems()
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x9FC0E4", Offset = "0x9FC0E4", VA = "0x9FC0E4")]
		public static void RemoveAquas(Camera camera, GaiaConstants.GlobalSystemMode overrideMode = GaiaConstants.GlobalSystemMode.Gaia)
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x9FC4CC", Offset = "0x9FC4CC", VA = "0x9FC4CC")]
		public static void ParentEnviroToGaiaSystem()
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x9FC9E4", Offset = "0x9FC9E4", VA = "0x9FC9E4")]
		public static void RemoveEnviro()
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x9FC79C", Offset = "0x9FC79C", VA = "0x9FC79C")]
		private static GameObject GetOrCreateParentObject(string parentGameObject, bool parentToGaia)
		{
			return null;
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x9FCE54", Offset = "0x9FCE54", VA = "0x9FCE54")]
		public static void SetCustomWaterSystem(GameObject customWaterObject)
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x9FD074", Offset = "0x9FD074", VA = "0x9FD074")]
		public static void SetSceneViewCam(Vector3 cameraPosition, Vector3 lookAtTarget)
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x9FD078", Offset = "0x9FD078", VA = "0x9FD078")]
		public static void SetCustomLightSystem(GameObject customLightObject)
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x9FD298", Offset = "0x9FD298", VA = "0x9FD298")]
		public static Material LoadUnderwaterMaterial()
		{
			return null;
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x9FD2A0", Offset = "0x9FD2A0", VA = "0x9FD2A0")]
		public static void RemovePostPorcessV2VolumeComponent(GameObject postFXObject)
		{
		}

		[Token(Token = "0x60012E4")]
		public static T CreateAsset<T>(string path = "", string name = "") where T : ScriptableObject
		{
			return null;
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x9FD398", Offset = "0x9FD398", VA = "0x9FD398")]
		public static void ImportUnityPackage(string packageName, bool autoImport)
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x9FD39C", Offset = "0x9FD39C", VA = "0x9FD39C")]
		public static string GetAssetPath(UnityEngine.Object uo)
		{
			return null;
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x9FD3E0", Offset = "0x9FD3E0", VA = "0x9FD3E0")]
		public static string WrapScriptableObject(ScriptableObject so)
		{
			return null;
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x9FD424", Offset = "0x9FD424", VA = "0x9FD424")]
		public static void UnwrapScriptableObject(string path, string newpath)
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x9FD428", Offset = "0x9FD428", VA = "0x9FD428")]
		public static string WrapGameObjectAsPrefab(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x9FD46C", Offset = "0x9FD46C", VA = "0x9FD46C")]
		public static bool HasTerrains()
		{
			return default(bool);
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x9FD618", Offset = "0x9FD618", VA = "0x9FD618")]
		public static GaiaConstants.EnvironmentSize IntToEnvironmentSize(int terrainSize)
		{
			return default(GaiaConstants.EnvironmentSize);
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x9FD66C", Offset = "0x9FD66C", VA = "0x9FD66C")]
		public static string GetAssetPath(string fileName)
		{
			return null;
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x9FD6B0", Offset = "0x9FD6B0", VA = "0x9FD6B0")]
		public static string GetAssetPath(string name, string type)
		{
			return null;
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x9FD6F4", Offset = "0x9FD6F4", VA = "0x9FD6F4")]
		public static UnityEngine.Object GetAsset(string fileNameOrPath, Type assetType)
		{
			return null;
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x9FD6FC", Offset = "0x9FD6FC", VA = "0x9FD6FC")]
		public static GameObject GetAssetPrefab(string name)
		{
			return null;
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x9FD704", Offset = "0x9FD704", VA = "0x9FD704")]
		public static ScriptableObject GetAssetScriptableObject(string name)
		{
			return null;
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x9FD70C", Offset = "0x9FD70C", VA = "0x9FD70C")]
		public static Texture2D GetAssetTexture2D(string name)
		{
			return null;
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x9FD714", Offset = "0x9FD714", VA = "0x9FD714")]
		public static void MakeTextureNormal(Texture2D texture)
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x9FD77C", Offset = "0x9FD77C", VA = "0x9FD77C")]
		public static void MakeTextureReadable(Texture2D texture)
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x9FD7E4", Offset = "0x9FD7E4", VA = "0x9FD7E4")]
		public static void MakeTextureUncompressed(Texture2D texture)
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x9FD84C", Offset = "0x9FD84C", VA = "0x9FD84C")]
		public static void CompressToSingleChannelFileImage(float[,] input, string imageName, TextureFormat imageStorageFormat = TextureFormat.RGBA32, bool exportPNG = true, bool exportJPG = true)
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x9FDB08", Offset = "0x9FDB08", VA = "0x9FDB08")]
		public static void CompressToMultiChannelFileImage(float[,,] input, string imageName, TextureFormat imageStorageFormat = TextureFormat.RGBA32, bool flip = false, bool exportPNG = true, bool exportJPG = true)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x9FDEF0", Offset = "0x9FDEF0", VA = "0x9FDEF0")]
		public static void CompressToMultiChannelFileImage(string imageName, HeightMap r, HeightMap g, HeightMap b, HeightMap a, TextureFormat imageStorageFormat, GaiaConstants.ImageFileType imageFileType, float baseLevel, GaiaConstants.GaiaProWaterReflectionsQuality textureResolution = GaiaConstants.GaiaProWaterReflectionsQuality.Resolution1024)
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x9FE2E0", Offset = "0x9FE2E0", VA = "0x9FE2E0")]
		public static void CompressToMultiChannelFileImage(string imageName, HeightMap r, HeightMap g, HeightMap b, HeightMap a, TextureFormat imageStorageFormat, GaiaConstants.ImageFileType imageFileType, GaiaConstants.GaiaProWaterReflectionsQuality textureResolution = GaiaConstants.GaiaProWaterReflectionsQuality.Resolution1024)
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x9FE6D0", Offset = "0x9FE6D0", VA = "0x9FE6D0")]
		public static float[,] ConvertTextureToArray(Texture2D texture)
		{
			return null;
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x9FE84C", Offset = "0x9FE84C", VA = "0x9FE84C")]
		public static float[,] DecompressFromSingleChannelFileImage(string fileName, int width, int height, TextureFormat imageStorageFormat = TextureFormat.RGBA32, bool channelR = true, bool channelG = false, bool channelB = false, bool channelA = false)
		{
			return null;
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x9FEA70", Offset = "0x9FEA70", VA = "0x9FEA70")]
		public static float[,] DecompressFromSingleChannelTexture(Texture2D importTexture, bool channelR = true, bool channelG = false, bool channelB = false, bool channelA = false)
		{
			return null;
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x9FDA18", Offset = "0x9FDA18", VA = "0x9FDA18")]
		public static void ExportJPG(string fileName, Texture2D texture)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x9FDA90", Offset = "0x9FDA90", VA = "0x9FDA90")]
		public static void ExportPNG(string fileName, Texture2D texture)
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x9FEED8", Offset = "0x9FEED8", VA = "0x9FEED8")]
		public static float[,] LoadRawFile(string fileName)
		{
			return null;
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x9FF300", Offset = "0x9FF300", VA = "0x9FF300")]
		public static void FixPrefabLayers(List<string> paths)
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x9FF304", Offset = "0x9FF304", VA = "0x9FF304")]
		public static string[] LayerMaskToString(LayerMask layerMask)
		{
			return null;
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x9FF504", Offset = "0x9FF504", VA = "0x9FF504")]
		public static bool StringToLayerMask(string[] layerNames, ref LayerMask targetLayerMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x9FF428", Offset = "0x9FF428", VA = "0x9FF428")]
		public static List<int> GetIndicesfromLayerMask(LayerMask layerMask)
		{
			return null;
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x9FF5A8", Offset = "0x9FF5A8", VA = "0x9FF5A8")]
		public static Mesh CreateMesh(float[,] heightmap, Vector3 targetSize)
		{
			return null;
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x9FACBC", Offset = "0x9FACBC", VA = "0x9FACBC")]
		public static Bounds GetBounds(GameObject go)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x9FFAEC", Offset = "0x9FFAEC", VA = "0x9FFAEC")]
		public static Texture2D CalculateNormals(Terrain terrain)
		{
			return null;
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x9FFE04", Offset = "0x9FFE04", VA = "0x9FFE04")]
		private Vector3 Rotate90LeftXAxis(Vector3 input)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x9FFE14", Offset = "0x9FFE14", VA = "0x9FFE14")]
		private Vector3 Rotate90RightXAxis(Vector3 input)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x9FFE24", Offset = "0x9FFE24", VA = "0x9FFE24")]
		private Vector3 Rotate90LeftYAxis(Vector3 input)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x9FFE38", Offset = "0x9FFE38", VA = "0x9FFE38")]
		private Vector3 Rotate90RightYAxis(Vector3 input)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x9FFE48", Offset = "0x9FFE48", VA = "0x9FFE48")]
		private Vector3 Rotate90LeftZAxis(Vector3 input)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x9FFE58", Offset = "0x9FFE58", VA = "0x9FFE58")]
		private Vector3 Rotate90RightZAxis(Vector3 input)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x9FFE6C", Offset = "0x9FFE6C", VA = "0x9FFE6C")]
		public static bool Math_ApproximatelyEqual(float a, float b, float threshold)
		{
			return default(bool);
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x9FFE8C", Offset = "0x9FFE8C", VA = "0x9FFE8C")]
		public static bool Math_ApproximatelyEqual(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x9FFEB4", Offset = "0x9FFEB4", VA = "0x9FFEB4")]
		public static bool Math_IsPowerOf2(int value)
		{
			return default(bool);
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x9FFEC4", Offset = "0x9FFEC4", VA = "0x9FFEC4")]
		public static float Math_Clamp(float min, float max, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x9FFED8", Offset = "0x9FFED8", VA = "0x9FFED8")]
		public static float Math_Modulo(float value, float mod)
		{
			return default(float);
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x9FFF50", Offset = "0x9FFF50", VA = "0x9FFF50")]
		public static int Math_Modulo(int value, int mod)
		{
			return default(int);
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x9FFFD4", Offset = "0x9FFFD4", VA = "0x9FFFD4")]
		public static float Math_InterpolateLinear(float value1, float value2, float fraction)
		{
			return default(float);
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x9FFFEC", Offset = "0x9FFFEC", VA = "0x9FFFEC")]
		public static float Math_InterpolateSmooth(float value1, float value2, float fraction)
		{
			return default(float);
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xA00038", Offset = "0xA00038", VA = "0xA00038")]
		public static float Math_Distance(float x1, float y1, float x2, float y2)
		{
			return default(float);
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xA00064", Offset = "0xA00064", VA = "0xA00064")]
		public static float Math_InterpolateSmooth2(float v1, float v2, float fraction)
		{
			return default(float);
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xA00098", Offset = "0xA00098", VA = "0xA00098")]
		public static float Math_InterpolateCubic(float v0, float v1, float v2, float v3, float fraction)
		{
			return default(float);
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xA000D0", Offset = "0xA000D0", VA = "0xA000D0")]
		public static Vector3 RotatePointAroundPivot(Vector3 point, Vector3 pivot, Vector3 angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xA0014C", Offset = "0xA0014C", VA = "0xA0014C")]
		public static void DebugWriteRenderTexture(string path, RenderTexture sourceRenderTexture)
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xA002D4", Offset = "0xA002D4", VA = "0xA002D4")]
		public static void CopyFields(object sourceOBJ, object destOBJ, bool copyProperties = false)
		{
		}

		[Token(Token = "0x600131A")]
		public static int GetEnumOrder<T>(T enumValue) where T : Enum
		{
			return default(int);
		}

		[Token(Token = "0x600131B")]
		public static T PickRandomListElementWeightedChance<T>([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x595BB0", Offset = "0x595BB0")] IList<(T, int)> entries, XorshiftPlus randomizer)
		{
			return (T)null;
		}

		[Token(Token = "0x600131C")]
		public static T Clone<T>(T source)
		{
			return (T)null;
		}

		[Token(Token = "0x600131D")]
		public static T[] RemoveArrayIndexAt<T>(T[] inputArray, int indexToRemove)
		{
			return null;
		}

		[Token(Token = "0x600131E")]
		public static T[] AddElementToArray<T>(T[] inputArray, T newElement)
		{
			return null;
		}

		[Token(Token = "0x600131F")]
		public static T[] InsertElementInArray<T>(T[] inputArray, T newElement, int indexToInsertAt)
		{
			return null;
		}

		[Token(Token = "0x6001320")]
		public static T[] SwapElementsInArray<T>(T[] inputArray, int firstIndex, int secondIndex)
		{
			return null;
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xA00F74", Offset = "0xA00F74", VA = "0xA00F74")]
		public static void InvertAnimationCurve(ref AnimationCurve curve)
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xA01244", Offset = "0xA01244", VA = "0xA01244")]
		public static Transform GetGOSpawnTarget(SpawnRule rule, string protoName, Terrain currentTerrain)
		{
			return null;
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xA018FC", Offset = "0xA018FC", VA = "0xA018FC")]
		public static float CalculateCameraCullingLayerValue(Terrain terrain, GaiaConstants.EnvironmentTarget targetQuality, float extraValue = 1f, float maxValue = 2000f)
		{
			return default(float);
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xA01BF4", Offset = "0xA01BF4", VA = "0xA01BF4")]
		public static float CalculateShadowCullingLayerValue(GaiaSceneCullingProfile.ShadowCullingType type, float qualityShadowDistance, float largeLayer, float mediumLayer, float smallLayer)
		{
			return default(float);
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x9FA170", Offset = "0x9FA170", VA = "0x9FA170")]
		public static Color GetColorFromHTML(string htmlString)
		{
			return default(Color);
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xA01CAC", Offset = "0xA01CAC", VA = "0xA01CAC")]
		public static Color ExecuteKelvinColor(float value)
		{
			return default(Color);
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xA01CB4", Offset = "0xA01CB4", VA = "0xA01CB4")]
		public static bool CheckGradientColorKeys(GradientColorKey[] colorKeys, Color checkColor)
		{
			return default(bool);
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xA01D7C", Offset = "0xA01D7C", VA = "0xA01D7C")]
		public static bool CheckGradientColorKeys(GradientColorKey[] colorKeys, GradientColorKey[] checkKeys)
		{
			return default(bool);
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xA01E48", Offset = "0xA01E48", VA = "0xA01E48")]
		public static bool CheckAnimationCurveKeys(Keyframe[] keys, float checkValue)
		{
			return default(bool);
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xA01EE8", Offset = "0xA01EE8", VA = "0xA01EE8")]
		public static bool CheckColorKey(Color checkColor, Color colorValue)
		{
			return default(bool);
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xA01F10", Offset = "0xA01F10", VA = "0xA01F10")]
		public static Texture2D GetBGTexture(Color backgroundColor, List<Texture2D> tempTextureList)
		{
			return null;
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xA0205C", Offset = "0xA0205C", VA = "0xA0205C")]
		public static Texture2D GetBGTexture(Color backgroundColor, Color borderColor, List<Texture2D> tempTextureList)
		{
			return null;
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xA0222C", Offset = "0xA0222C", VA = "0xA0222C")]
		public static Texture2D ConvertRenderTextureToTexture2D(RenderTexture renderTexture)
		{
			return null;
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xA02370", Offset = "0xA02370", VA = "0xA02370")]
		public static bool ColorsEqual(Color firstColor, Color secondColor)
		{
			return default(bool);
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xA023A0", Offset = "0xA023A0", VA = "0xA023A0")]
		public static void ReleaseAllTempRenderTextures()
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xA0252C", Offset = "0xA0252C", VA = "0xA0252C")]
		public static Vector2 ConvertPositonToTerrainUV(Terrain terrain, Vector2 worldSpacePosition)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xA025E8", Offset = "0xA025E8", VA = "0xA025E8")]
		public static long GetUnixTimestamp()
		{
			return default(long);
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xA0267C", Offset = "0xA0267C", VA = "0xA0267C")]
		public static bool IsStampOperation(GaiaConstants.FeatureOperation operation)
		{
			return default(bool);
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xA026A4", Offset = "0xA026A4", VA = "0xA026A4")]
		public static GaiaSettings GetGaiaSettings()
		{
			return null;
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xA0170C", Offset = "0xA0170C", VA = "0xA0170C")]
		public static GameObject GetGaiaGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x9FCC0C", Offset = "0x9FCC0C", VA = "0x9FCC0C")]
		public static GameObject GetRuntimeSceneObject(bool create = true)
		{
			return null;
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xA0273C", Offset = "0xA0273C", VA = "0xA0273C")]
		public static GameObject GetTempSessionToolsObject()
		{
			return null;
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xA02880", Offset = "0xA02880", VA = "0xA02880")]
		public static GameObject GetStopwatchDataObject()
		{
			return null;
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xA02988", Offset = "0xA02988", VA = "0xA02988")]
		public static GameObject GetTerrainObject(bool create = true)
		{
			return null;
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xA02AFC", Offset = "0xA02AFC", VA = "0xA02AFC")]
		public static GameObject GetTerrainExportObject(bool create = true)
		{
			return null;
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xA02C70", Offset = "0xA02C70", VA = "0xA02C70")]
		public static GameObject GetTerrainLoaderManagerObject(bool create = true)
		{
			return null;
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xA02F30", Offset = "0xA02F30", VA = "0xA02F30")]
		public static GameObject GetPlayerObject(bool create = true)
		{
			return null;
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xA0312C", Offset = "0xA0312C", VA = "0xA0312C")]
		public static Transform GetPlayerTransform()
		{
			return null;
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xA033E0", Offset = "0xA033E0", VA = "0xA033E0")]
		public static GameObject GetPlayerGameObject()
		{
			return null;
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xA03630", Offset = "0xA03630", VA = "0xA03630")]
		public static MonoBehaviour GetPlayerControllerSystem()
		{
			return null;
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xA038A0", Offset = "0xA038A0", VA = "0xA038A0")]
		public static bool DisplayDialogNoEditor(string title, string message, string ok, string cancel, bool resultIfNoDialog = false, string NoDialogFailedConsoleText = "")
		{
			return default(bool);
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xA0391C", Offset = "0xA0391C", VA = "0xA0391C")]
		public static bool UsesFloatingPointFix()
		{
			return default(bool);
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xA03994", Offset = "0xA03994", VA = "0xA03994")]
		public static void CheckPostFXV2ColorFilter(GaiaLightingProfileValues profile, Color checkColor)
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xA03C04", Offset = "0xA03C04", VA = "0xA03C04")]
		public static bool HasDynamicLoadedTerrains()
		{
			return default(bool);
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xA03CB0", Offset = "0xA03CB0", VA = "0xA03CB0")]
		public static bool HasColliderTerrains()
		{
			return default(bool);
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0xA03E58", Offset = "0xA03E58", VA = "0xA03E58")]
		public static bool HasImpostorTerrains()
		{
			return default(bool);
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xA04000", Offset = "0xA04000", VA = "0xA04000")]
		public static void FocusLightingProfile()
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xA0413C", Offset = "0xA0413C", VA = "0xA0413C")]
		public static void FocusWaterProfile()
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xA04244", Offset = "0xA04244", VA = "0xA04244")]
		public static int EnvironmentSizeToInt(GaiaConstants.EnvironmentSize size)
		{
			return default(int);
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xA04264", Offset = "0xA04264", VA = "0xA04264")]
		public static GameObject GetOrCreateDetailGlobalManager(bool createManager = true)
		{
			return null;
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xA04410", Offset = "0xA04410", VA = "0xA04410")]
		public static GameObject GetOrCreateWorldDesigner(bool createDesigner = true, bool createWorldMap = true)
		{
			return null;
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xA0464C", Offset = "0xA0464C", VA = "0xA0464C")]
		public static GameObject GetOrCreateWorldMapTempTools()
		{
			return null;
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xA047AC", Offset = "0xA047AC", VA = "0xA047AC")]
		public static void SetSettingsForEnvironment(GaiaSettings settings, GaiaConstants.EnvironmentTarget targetEnv)
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xA04B80", Offset = "0xA04B80", VA = "0xA04B80")]
		public static void ResetBiomePresets(bool forceReset = false)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xA04B84", Offset = "0xA04B84", VA = "0xA04B84")]
		public static void GUITextWithShadow(Rect rect, string text, GUIStyle guiStyle, GUIStyle shadowStyle)
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xA04B88", Offset = "0xA04B88", VA = "0xA04B88")]
		public static void GUITextWithShadow(Rect rect, GUIContent content, GUIStyle guiStyle, GUIStyle shadowStyle)
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xA04B8C", Offset = "0xA04B8C", VA = "0xA04B8C")]
		public GaiaUtils()
		{
		}
	}
	[Token(Token = "0x2000273")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x571BCC", Offset = "0x571BCC")]
	public class HeightMap
	{
		[Token(Token = "0x200058E")]
		public enum CopyType
		{
			[Token(Token = "0x4002F97")]
			AlwaysCopy,
			[Token(Token = "0x4002F98")]
			CopyIfLessThan,
			[Token(Token = "0x4002F99")]
			CopyIfGreaterThan
		}

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected int m_widthX;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected int m_depthZ;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected float[,] m_heights;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool m_isPowerOf2;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected float m_widthInvX;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float m_depthInvZ;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected float m_statMinVal;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected float m_statMaxVal;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected double m_statSumVals;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool m_isDirty;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected byte[] m_metaData;

		[Token(Token = "0x4001CB7")]
		private const int LEFT = 0;

		[Token(Token = "0x4001CB8")]
		private const int RIGHT = 1;

		[Token(Token = "0x4001CB9")]
		private const int BOTTOM = 2;

		[Token(Token = "0x4001CBA")]
		private const int TOP = 3;

		[Token(Token = "0x4001CBB")]
		private const float TIME = 0.2f;

		[Token(Token = "0x170001EC")]
		public float Item
		{
			[Token(Token = "0x6001369")]
			[Address(RVA = "0xE52BD8", Offset = "0xE52BD8", VA = "0xE52BD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600136A")]
			[Address(RVA = "0xE52C30", Offset = "0xE52C30", VA = "0xE52C30")]
			set
			{
			}
		}

		[Token(Token = "0x170001ED")]
		public float Item
		{
			[Token(Token = "0x600136B")]
			[Address(RVA = "0xE52C90", Offset = "0xE52C90", VA = "0xE52C90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600136C")]
			[Address(RVA = "0xE52C94", Offset = "0xE52C94", VA = "0xE52C94")]
			set
			{
			}
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xE51790", Offset = "0xE51790", VA = "0xE51790")]
		public HeightMap()
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xE5188C", Offset = "0xE5188C", VA = "0xE5188C")]
		public HeightMap(int width, int depth)
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xE5199C", Offset = "0xE5199C", VA = "0xE5199C")]
		public HeightMap(float[,] source)
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xE51AFC", Offset = "0xE51AFC", VA = "0xE51AFC")]
		public HeightMap(float[,,] source, int slice)
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xE51CF8", Offset = "0xE51CF8", VA = "0xE51CF8")]
		public HeightMap(int[,] source)
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xE51EE0", Offset = "0xE51EE0", VA = "0xE51EE0")]
		public HeightMap(HeightMap source)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xE5207C", Offset = "0xE5207C", VA = "0xE5207C")]
		public HeightMap(string sourceFile)
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xE523B4", Offset = "0xE523B4", VA = "0xE523B4")]
		public HeightMap(byte[] sourceBytes)
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xE526BC", Offset = "0xE526BC", VA = "0xE526BC")]
		public int Width()
		{
			return default(int);
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xE526C4", Offset = "0xE526C4", VA = "0xE526C4")]
		public int Depth()
		{
			return default(int);
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xE526CC", Offset = "0xE526CC", VA = "0xE526CC")]
		public float MinVal()
		{
			return default(float);
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xE526D4", Offset = "0xE526D4", VA = "0xE526D4")]
		public float MaxVal()
		{
			return default(float);
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xE526DC", Offset = "0xE526DC", VA = "0xE526DC")]
		public double SumVal()
		{
			return default(double);
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xE526E4", Offset = "0xE526E4", VA = "0xE526E4")]
		public byte[] GetMetaData()
		{
			return null;
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xE526EC", Offset = "0xE526EC", VA = "0xE526EC")]
		public bool IsDirty()
		{
			return default(bool);
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xE526F4", Offset = "0xE526F4", VA = "0xE526F4")]
		public void SetDirty(bool dirty = true)
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xE52700", Offset = "0xE52700", VA = "0xE52700")]
		public void ClearDirty()
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xE51FF0", Offset = "0xE51FF0", VA = "0xE51FF0")]
		public void SetMetaData(byte[] metadata)
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xE52708", Offset = "0xE52708", VA = "0xE52708")]
		public float[,] Heights()
		{
			return null;
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xE52710", Offset = "0xE52710", VA = "0xE52710")]
		public float[] Heights1D()
		{
			return null;
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xE52794", Offset = "0xE52794", VA = "0xE52794")]
		public void SetHeights(float[] heights)
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xE52890", Offset = "0xE52890", VA = "0xE52890")]
		public void SetHeights(float[,] heights)
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xE529B0", Offset = "0xE529B0", VA = "0xE529B0")]
		public float GetSafeHeight(int x, int z)
		{
			return default(float);
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xE52A2C", Offset = "0xE52A2C", VA = "0xE52A2C")]
		public void SetSafeHeight(int x, int z, float height)
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xE52AB0", Offset = "0xE52AB0", VA = "0xE52AB0")]
		protected float GetInterpolatedHeight(float x, float z)
		{
			return default(float);
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xE52D28", Offset = "0xE52D28", VA = "0xE52D28")]
		public HeightMap SetHeight(float height)
		{
			return null;
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xE52DE4", Offset = "0xE52DE4", VA = "0xE52DE4")]
		public void GetHeightRange(ref float minHeight, ref float maxHeight)
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xE52EB0", Offset = "0xE52EB0", VA = "0xE52EB0")]
		public float GetSlope(int x, int z)
		{
			return default(float);
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xE52FD8", Offset = "0xE52FD8", VA = "0xE52FD8")]
		public float GetSlope(float x, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xE53110", Offset = "0xE53110", VA = "0xE53110")]
		public float GetSlope_a(float x, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xE53224", Offset = "0xE53224", VA = "0xE53224")]
		public float GetBaseLevel()
		{
			return default(float);
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xE53338", Offset = "0xE53338", VA = "0xE53338")]
		public bool HasData()
		{
			return default(bool);
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xE533B8", Offset = "0xE533B8", VA = "0xE533B8")]
		public float[] GetRow(int rowX)
		{
			return null;
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xE53490", Offset = "0xE53490", VA = "0xE53490")]
		public void SetRow(int rowX, float[] values)
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xE53520", Offset = "0xE53520", VA = "0xE53520")]
		public float[] GetColumn(int columnZ)
		{
			return null;
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xE535F8", Offset = "0xE535F8", VA = "0xE535F8")]
		public void SetColumn(int columnZ, float[] values)
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xE517F4", Offset = "0xE517F4", VA = "0xE517F4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xE53688", Offset = "0xE53688", VA = "0xE53688")]
		public void UpdateStats()
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xE53758", Offset = "0xE53758", VA = "0xE53758")]
		public HeightMap Smooth(int iterations)
		{
			return null;
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xE538D8", Offset = "0xE538D8", VA = "0xE538D8")]
		public HeightMap SmoothRadius(int radius)
		{
			return null;
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xE53BC8", Offset = "0xE53BC8", VA = "0xE53BC8")]
		public HeightMap Convolve(float[,] kernel)
		{
			return null;
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xE53E7C", Offset = "0xE53E7C", VA = "0xE53E7C")]
		public HeightMap DeNoise(int radius)
		{
			return null;
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xE53FF4", Offset = "0xE53FF4", VA = "0xE53FF4")]
		public HeightMap GrowEdges(int radius)
		{
			return null;
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xE54150", Offset = "0xE54150", VA = "0xE54150")]
		public HeightMap ShrinkEdges(int radius)
		{
			return null;
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xE542D0", Offset = "0xE542D0", VA = "0xE542D0")]
		public HeightMap GetSlopeMap()
		{
			return null;
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xE5439C", Offset = "0xE5439C", VA = "0xE5439C")]
		public HeightMap Copy(HeightMap heightMap, CopyType copyType = CopyType.AlwaysCopy)
		{
			return null;
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xE54888", Offset = "0xE54888", VA = "0xE54888")]
		public HeightMap CopyClamped(HeightMap heightMap, float min, float max)
		{
			return null;
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xE54A64", Offset = "0xE54A64", VA = "0xE54A64")]
		public HeightMap Duplicate()
		{
			return null;
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xE54AC0", Offset = "0xE54AC0", VA = "0xE54AC0")]
		public HeightMap Invert()
		{
			return null;
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xE54B64", Offset = "0xE54B64", VA = "0xE54B64")]
		public HeightMap Flip()
		{
			return null;
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xE54D10", Offset = "0xE54D10", VA = "0xE54D10")]
		public HeightMap Normalise()
		{
			return null;
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xE54E54", Offset = "0xE54E54", VA = "0xE54E54")]
		public Texture2D ToTexture()
		{
			return null;
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xE55018", Offset = "0xE55018", VA = "0xE55018")]
		public HeightMap ErodeThermal(int iterations, float talusMin, float talusMax, HeightMap hardnessMask)
		{
			return null;
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xE552EC", Offset = "0xE552EC", VA = "0xE552EC")]
		public HeightMap Quantize(float divisor)
		{
			return null;
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xE55478", Offset = "0xE55478", VA = "0xE55478")]
		public HeightMap Quantize(float[] startHeights, AnimationCurve[] curves)
		{
			return null;
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xE55714", Offset = "0xE55714", VA = "0xE55714")]
		public HeightMap CurvatureMap(GaiaConstants.CurvatureType curvatureType)
		{
			return null;
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xE55A0C", Offset = "0xE55A0C", VA = "0xE55A0C")]
		private float HorizontalCurve(float limit, float dx, float dy, float dxx, float dyy, float dxy)
		{
			return default(float);
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xE55AA0", Offset = "0xE55AA0", VA = "0xE55AA0")]
		private float VerticalCurve(float limit, float dx, float dy, float dxx, float dyy, float dxy)
		{
			return default(float);
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xE55B34", Offset = "0xE55B34", VA = "0xE55B34")]
		private float AverageCurve(float limit, float dx, float dy, float dxx, float dyy, float dxy)
		{
			return default(float);
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xE55BAC", Offset = "0xE55BAC", VA = "0xE55BAC")]
		public HeightMap Aspect(GaiaConstants.AspectType aspectType)
		{
			return null;
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xE55E80", Offset = "0xE55E80", VA = "0xE55E80")]
		private float Sign(float v)
		{
			return default(float);
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xE55EA0", Offset = "0xE55EA0", VA = "0xE55EA0")]
		public HeightMap ErodeHydraulic(int iterations, HeightMap hardnessMap, HeightMap rainMap, int rainFrequency, float sedimentDisolveRate, ref HeightMap sedimentMap)
		{
			return null;
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xE564C0", Offset = "0xE564C0", VA = "0xE564C0")]
		private void CalculateWaterOutflow(HeightMap heightMap, HeightMap waterMap, float[,,] outFlow)
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xE56A08", Offset = "0xE56A08", VA = "0xE56A08")]
		private void UpdateWaterMap(HeightMap waterMap, float[,,] outFlow)
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0xE56EFC", Offset = "0xE56EFC", VA = "0xE56EFC")]
		public HeightMap FlowMap(int iterations)
		{
			return null;
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xE57080", Offset = "0xE57080", VA = "0xE57080")]
		private void FillWaterMap(float amount, float[,] waterMap, int width, int height)
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xE57104", Offset = "0xE57104", VA = "0xE57104")]
		private void ComputeOutflow(float[,] waterMap, float[,,] outFlow, float[] heightMap, int width, int height)
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xE57694", Offset = "0xE57694", VA = "0xE57694")]
		private void UpdateWaterMap(float[,] waterMap, float[,,] outFlow, int width, int height)
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xE57860", Offset = "0xE57860", VA = "0xE57860")]
		private void CalculateVelocityField(float[,] velocityMap, float[,,] outFlow, int width, int height)
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xE57B18", Offset = "0xE57B18", VA = "0xE57B18")]
		private void NormalizeMap(float[,] map, int width, int height)
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xE57C48", Offset = "0xE57C48", VA = "0xE57C48")]
		public HeightMap SlopeMap()
		{
			return null;
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xE57E98", Offset = "0xE57E98", VA = "0xE57E98")]
		public HeightMap Add(float value)
		{
			return null;
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xE56314", Offset = "0xE56314", VA = "0xE56314")]
		public HeightMap Add(HeightMap heightMap)
		{
			return null;
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xE57F38", Offset = "0xE57F38", VA = "0xE57F38")]
		public HeightMap AddClamped(float value, float min, float max)
		{
			return null;
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xE56C28", Offset = "0xE56C28", VA = "0xE56C28")]
		public HeightMap AddClamped(HeightMap heightMap, float min, float max)
		{
			return null;
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xE57FF4", Offset = "0xE57FF4", VA = "0xE57FF4")]
		public HeightMap Subtract(float value)
		{
			return null;
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xE58094", Offset = "0xE58094", VA = "0xE58094")]
		public HeightMap Subtract(HeightMap heightMap)
		{
			return null;
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xE56E40", Offset = "0xE56E40", VA = "0xE56E40")]
		public HeightMap SubtractClamped(float value, float min, float max)
		{
			return null;
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xE58240", Offset = "0xE58240", VA = "0xE58240")]
		public HeightMap SubtractClamped(HeightMap heightMap, float min, float max)
		{
			return null;
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xE58458", Offset = "0xE58458", VA = "0xE58458")]
		public HeightMap Multiply(float value)
		{
			return null;
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xE584F8", Offset = "0xE584F8", VA = "0xE584F8")]
		public HeightMap Multiply(HeightMap heightMap)
		{
			return null;
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xE586A4", Offset = "0xE586A4", VA = "0xE586A4")]
		public HeightMap MultiplyClamped(float value, float min, float max)
		{
			return null;
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xE58760", Offset = "0xE58760", VA = "0xE58760")]
		public HeightMap MultiplyClamped(HeightMap heightMap, float min, float max)
		{
			return null;
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xE58978", Offset = "0xE58978", VA = "0xE58978")]
		public HeightMap Divide(float value)
		{
			return null;
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xE58A18", Offset = "0xE58A18", VA = "0xE58A18")]
		public HeightMap Divide(HeightMap heightMap)
		{
			return null;
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xE58BC4", Offset = "0xE58BC4", VA = "0xE58BC4")]
		public HeightMap DivideClamped(float value, float min, float max)
		{
			return null;
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xE58C80", Offset = "0xE58C80", VA = "0xE58C80")]
		public HeightMap DivideClamped(HeightMap heightMap, float min, float max)
		{
			return null;
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xE58E98", Offset = "0xE58E98", VA = "0xE58E98")]
		public HeightMap Lerp(HeightMap hmNewValues, HeightMap hmLerpMask)
		{
			return null;
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xE592B0", Offset = "0xE592B0", VA = "0xE592B0")]
		public float Sum()
		{
			return default(float);
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xE59348", Offset = "0xE59348", VA = "0xE59348")]
		public float Average()
		{
			return default(float);
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xE59378", Offset = "0xE59378", VA = "0xE59378")]
		public HeightMap Power(float exponent)
		{
			return null;
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xE59464", Offset = "0xE59464", VA = "0xE59464")]
		public HeightMap Contrast(float contrast)
		{
			return null;
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xE59514", Offset = "0xE59514", VA = "0xE59514")]
		public void SaveToBinaryFile(string fileName)
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xE52100", Offset = "0xE52100", VA = "0xE52100")]
		public void LoadFromBinaryFile(string fileName)
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xE52438", Offset = "0xE52438", VA = "0xE52438")]
		public void LoadFromByteArray(byte[] source)
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xE59668", Offset = "0xE59668", VA = "0xE59668")]
		public void LoadFromRawFile(string fileName, GaiaConstants.RawByteOrder byteOrder, ref GaiaConstants.RawBitDepth bitDepth, ref int resolution)
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xE59CC8", Offset = "0xE59CC8", VA = "0xE59CC8")]
		public void DumpMap(float scaleValue, int precision, string spacer, bool flip)
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xE59F78", Offset = "0xE59F78", VA = "0xE59F78")]
		public void DumpRow(int rowX, float scaleValue, int precision, string spacer)
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xE5A1A0", Offset = "0xE5A1A0", VA = "0xE5A1A0")]
		public void DumpColumn(int columnZ, float scaleValue, int precision, string spacer)
		{
		}
	}
	[Token(Token = "0x2000274")]
	public struct MaskedMeshParamters
	{
		[Token(Token = "0x200058F")]
		public enum WindingOrder
		{
			[Token(Token = "0x4002F9B")]
			Clockwise = 1,
			[Token(Token = "0x4002F9C")]
			CounterClockwise
		}

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UnityHeightMap Heightmap;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UnityHeightMap Maskmap;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float MaskThreshold;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 MeshScale;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MeshResolution;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int MeshType;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WindingOrder Winding;

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xA44830", Offset = "0xA44830", VA = "0xA44830")]
		public MaskedMeshParamters(UnityHeightMap heightMap, UnityHeightMap maskMap, float maskThreshold, int meshResolution, Vector3 meshScale, int meshType, WindingOrder winding)
		{
		}
	}
	[Token(Token = "0x2000275")]
	public static class MaskedTerrainMesh
	{
		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xA44848", Offset = "0xA44848", VA = "0xA44848")]
		public static void CreateMaskedTerrainMeshes(MaskedMeshParamters parms, out MeshBuilder outsideMesh, out MeshBuilder insideMesh)
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class MeshBuilder
	{
		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_uvScale;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Vector3> m_vertices;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vector2> m_uvs;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<int> m_indices;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Vector2, int> m_verticeToIndex;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool usingTriangles;

		[Token(Token = "0x170001EE")]
		public List<Vector3> Vertices
		{
			[Token(Token = "0x60013B9")]
			[Address(RVA = "0xDFBB54", Offset = "0xDFBB54", VA = "0xDFBB54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		public List<Vector2> UVs
		{
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0xDFBB5C", Offset = "0xDFBB5C", VA = "0xDFBB5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F0")]
		public List<int> Indices
		{
			[Token(Token = "0x60013BB")]
			[Address(RVA = "0xDFBB64", Offset = "0xDFBB64", VA = "0xDFBB64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xDFBB6C", Offset = "0xDFBB6C", VA = "0xDFBB6C")]
		public MeshBuilder(float uvScale)
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xDFBCC8", Offset = "0xDFBCC8", VA = "0xDFBCC8")]
		public void AddTriangle(bool clockwise, Vector3 v1, Vector3 v2, Vector3 v3)
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xDFBF90", Offset = "0xDFBF90", VA = "0xDFBF90")]
		public void AddQuad(bool clockwise, Vector3 v1, Vector3 v2, Vector3 v3, Vector3 v4)
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xDFBE5C", Offset = "0xDFBE5C", VA = "0xDFBE5C")]
		private int VertexIndex(Vector3 vert)
		{
			return default(int);
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xDFC154", Offset = "0xDFC154", VA = "0xDFC154")]
		public void Save(string fileName)
		{
		}
	}
	[Token(Token = "0x2000277")]
	public struct Mathd
	{
		[Token(Token = "0x4001CC9")]
		public const double PI = 3.141593;

		[Token(Token = "0x4001CCA")]
		public const double Infinity = double.PositiveInfinity;

		[Token(Token = "0x4001CCB")]
		public const double NegativeInfinity = double.NegativeInfinity;

		[Token(Token = "0x4001CCC")]
		public const double Deg2Rad = 0.01745329;

		[Token(Token = "0x4001CCD")]
		public const double Rad2Deg = 57.29578;

		[Token(Token = "0x4001CCE")]
		public const double Epsilon = 1.401298E-45;

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xA44BB8", Offset = "0xA44BB8", VA = "0xA44BB8")]
		public static double Sin(double d)
		{
			return default(double);
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xA44C20", Offset = "0xA44C20", VA = "0xA44C20")]
		public static double Cos(double d)
		{
			return default(double);
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xA44C88", Offset = "0xA44C88", VA = "0xA44C88")]
		public static double Tan(double d)
		{
			return default(double);
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xA44CF0", Offset = "0xA44CF0", VA = "0xA44CF0")]
		public static double Asin(double d)
		{
			return default(double);
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xA44D58", Offset = "0xA44D58", VA = "0xA44D58")]
		public static double Acos(double d)
		{
			return default(double);
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xA44DC0", Offset = "0xA44DC0", VA = "0xA44DC0")]
		public static double Atan(double d)
		{
			return default(double);
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xA44E28", Offset = "0xA44E28", VA = "0xA44E28")]
		public static double Atan2(double y, double x)
		{
			return default(double);
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xA44E98", Offset = "0xA44E98", VA = "0xA44E98")]
		public static double Sqrt(double d)
		{
			return default(double);
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xA44264", Offset = "0xA44264", VA = "0xA44264")]
		public static double Abs(double d)
		{
			return default(double);
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xA44F1C", Offset = "0xA44F1C", VA = "0xA44F1C")]
		public static int Abs(int value)
		{
			return default(int);
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xA44F80", Offset = "0xA44F80", VA = "0xA44F80")]
		public static double Min(double a, double b)
		{
			return default(double);
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xA44F8C", Offset = "0xA44F8C", VA = "0xA44F8C")]
		public static double Min(params double[] values)
		{
			return default(double);
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xA44FE0", Offset = "0xA44FE0", VA = "0xA44FE0")]
		public static int Min(int a, int b)
		{
			return default(int);
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xA44FEC", Offset = "0xA44FEC", VA = "0xA44FEC")]
		public static int Min(params int[] values)
		{
			return default(int);
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xA45044", Offset = "0xA45044", VA = "0xA45044")]
		public static double Max(double a, double b)
		{
			return default(double);
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xA45050", Offset = "0xA45050", VA = "0xA45050")]
		public static double Max(params double[] values)
		{
			return default(double);
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xA450A4", Offset = "0xA450A4", VA = "0xA450A4")]
		public static int Max(int a, int b)
		{
			return default(int);
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xA450B0", Offset = "0xA450B0", VA = "0xA450B0")]
		public static int Max(params int[] values)
		{
			return default(int);
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xA45108", Offset = "0xA45108", VA = "0xA45108")]
		public static double Pow(double d, double p)
		{
			return default(double);
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xA4517C", Offset = "0xA4517C", VA = "0xA4517C")]
		public static double Exp(double power)
		{
			return default(double);
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xA451E4", Offset = "0xA451E4", VA = "0xA451E4")]
		public static double Log(double d, double p)
		{
			return default(double);
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xA45258", Offset = "0xA45258", VA = "0xA45258")]
		public static double Log(double d)
		{
			return default(double);
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xA452C0", Offset = "0xA452C0", VA = "0xA452C0")]
		public static double Log10(double d)
		{
			return default(double);
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xA45328", Offset = "0xA45328", VA = "0xA45328")]
		public static double Ceil(double d)
		{
			return default(double);
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xA45390", Offset = "0xA45390", VA = "0xA45390")]
		public static double Floor(double d)
		{
			return default(double);
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xA453F8", Offset = "0xA453F8", VA = "0xA453F8")]
		public static double Round(double d)
		{
			return default(double);
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xA441FC", Offset = "0xA441FC", VA = "0xA441FC")]
		public static int CeilToInt(double d)
		{
			return default(int);
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xA44334", Offset = "0xA44334", VA = "0xA44334")]
		public static int FloorToInt(double d)
		{
			return default(int);
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xA454CC", Offset = "0xA454CC", VA = "0xA454CC")]
		public static int RoundToInt(double d)
		{
			return default(int);
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xA455A4", Offset = "0xA455A4", VA = "0xA455A4")]
		public static double Sign(double d)
		{
			return default(double);
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xA455B8", Offset = "0xA455B8", VA = "0xA455B8")]
		public static double Clamp(double value, double min, double max)
		{
			return default(double);
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xA455D4", Offset = "0xA455D4", VA = "0xA455D4")]
		public static int Clamp(int value, int min, int max)
		{
			return default(int);
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xA455F0", Offset = "0xA455F0", VA = "0xA455F0")]
		public static double Clamp01(double value)
		{
			return default(double);
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xA4560C", Offset = "0xA4560C", VA = "0xA4560C")]
		public static double Lerp(double from, double to, double t)
		{
			return default(double);
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xA45630", Offset = "0xA45630", VA = "0xA45630")]
		public static double LerpAngle(double a, double b, double t)
		{
			return default(double);
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xA456DC", Offset = "0xA456DC", VA = "0xA456DC")]
		public static double MoveTowards(double current, double target, double maxDelta)
		{
			return default(double);
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xA45738", Offset = "0xA45738", VA = "0xA45738")]
		public static double MoveTowardsAngle(double current, double target, double maxDelta)
		{
			return default(double);
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xA4581C", Offset = "0xA4581C", VA = "0xA4581C")]
		public static double SmoothStep(double from, double to, double t)
		{
			return default(double);
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xA45864", Offset = "0xA45864", VA = "0xA45864")]
		public static double Gamma(double value, double absmax, double gamma)
		{
			return default(double);
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xA458C8", Offset = "0xA458C8", VA = "0xA458C8")]
		public static bool Approximately(double a, double b)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xA45938", Offset = "0xA45938", VA = "0xA45938")]
		public static double SmoothDamp(double current, double target, ref double currentVelocity, double smoothTime, double maxSpeed)
		{
			return default(double);
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xA45A60", Offset = "0xA45A60", VA = "0xA45A60")]
		public static double SmoothDamp(double current, double target, ref double currentVelocity, double smoothTime)
		{
			return default(double);
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xA45994", Offset = "0xA45994", VA = "0xA45994")]
		public static double SmoothDamp(double current, double target, ref double currentVelocity, double smoothTime, double maxSpeed, double deltaTime)
		{
			return default(double);
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xA45ABC", Offset = "0xA45ABC", VA = "0xA45ABC")]
		public static double SmoothDampAngle(double current, double target, ref double currentVelocity, double smoothTime, double maxSpeed)
		{
			return default(double);
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xA45BAC", Offset = "0xA45BAC", VA = "0xA45BAC")]
		public static double SmoothDampAngle(double current, double target, ref double currentVelocity, double smoothTime)
		{
			return default(double);
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xA45B18", Offset = "0xA45B18", VA = "0xA45B18")]
		public static double SmoothDampAngle(double current, double target, ref double currentVelocity, double smoothTime, double maxSpeed, double deltaTime)
		{
			return default(double);
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xA456AC", Offset = "0xA456AC", VA = "0xA456AC")]
		public static double Repeat(double t, double length)
		{
			return default(double);
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xA45C08", Offset = "0xA45C08", VA = "0xA45C08")]
		public static double PingPong(double t, double length)
		{
			return default(double);
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xA442CC", Offset = "0xA442CC", VA = "0xA442CC")]
		public static double InverseLerp(double from, double to, double value)
		{
			return default(double);
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xA457CC", Offset = "0xA457CC", VA = "0xA457CC")]
		public static double DeltaAngle(double current, double target)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000278")]
	public class OrthographicBake
	{
		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Camera m_orthoCamera;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static RenderTexture m_tmpRenderTexture;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<Light> m_deactivatedLights;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static GameObject m_bakeDirectionalLight;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static int m_HDLODBiasOverride;

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xF8A840", Offset = "0xF8A840", VA = "0xF8A840")]
		public static Camera CreateOrthoCam(Vector3 position, float nearClipping, float farClipping, float size, LayerMask cullingMask)
		{
			return null;
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xF8AB44", Offset = "0xF8AB44", VA = "0xF8AB44")]
		public static void RemoveOrthoCam()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xF8ACFC", Offset = "0xF8ACFC", VA = "0xF8ACFC")]
		public static void BakeTerrain(Terrain terrain, int Xresolution, int Yresolution, LayerMask cullingMask, [Optional] string path)
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xF8B03C", Offset = "0xF8B03C", VA = "0xF8B03C")]
		private static void RenderToTemporary()
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xF8AFB4", Offset = "0xF8AFB4", VA = "0xF8AFB4")]
		private static void RenderToPng(string path)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xF8B22C", Offset = "0xF8B22C", VA = "0xF8B22C")]
		public static void LightsOff()
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xF8B390", Offset = "0xF8B390", VA = "0xF8B390")]
		public static void LightsOn()
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xF8B198", Offset = "0xF8B198", VA = "0xF8B198")]
		public static void CleanUpRenderTexture()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xF8B4DC", Offset = "0xF8B4DC", VA = "0xF8B4DC")]
		public static void CreateBakeDirectionalLight(float intensity, Color color)
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xF8B750", Offset = "0xF8B750", VA = "0xF8B750")]
		public static void RemoveBakeDirectionalLight()
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xF8B858", Offset = "0xF8B858", VA = "0xF8B858")]
		public OrthographicBake()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public enum ProgressBarPriority
	{
		[Token(Token = "0x4001CD5")]
		TerrainLoading,
		[Token(Token = "0x4001CD6")]
		MinMaxHeightCalculation,
		[Token(Token = "0x4001CD7")]
		CreateBiomeTools,
		[Token(Token = "0x4001CD8")]
		CreateSceneTools,
		[Token(Token = "0x4001CD9")]
		BiomeRemoval,
		[Token(Token = "0x4001CDA")]
		MultiTerrainAction,
		[Token(Token = "0x4001CDB")]
		TerrainMeshExport,
		[Token(Token = "0x4001CDC")]
		MaskMapExport,
		[Token(Token = "0x4001CDD")]
		WorldCreation,
		[Token(Token = "0x4001CDE")]
		Stamping,
		[Token(Token = "0x4001CDF")]
		Spawning,
		[Token(Token = "0x4001CE0")]
		GaiaGeospatial,
		[Token(Token = "0x4001CE1")]
		Maintenance
	}
	[Token(Token = "0x200027A")]
	public static class ProgressBar
	{
		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xC6B694", Offset = "0xC6B694", VA = "0xC6B694")]
		public static bool Show(ProgressBarPriority priority, string title, string info, int currentStep = 0, int totalSteps = 0, bool displayETA = false, bool cancelable = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xC6B69C", Offset = "0xC6B69C", VA = "0xC6B69C")]
		public static void Clear(ProgressBarPriority priority)
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class Quadtree<T>
	{
		[Token(Token = "0x2000590")]
		private class QuadtreeNode
		{
			[Token(Token = "0x4002F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58DCA0", Offset = "0x58DCA0")]
			private Vector2 <Position>k__BackingField;

			[Token(Token = "0x4002F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58DCB0", Offset = "0x58DCB0")]
			private T <Value>k__BackingField;

			[Token(Token = "0x170003F2")]
			public Vector2 Position
			{
				[Token(Token = "0x60023AD")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x594FC0", Offset = "0x594FC0")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x60023AE")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x594FD0", Offset = "0x594FD0")]
				private set
				{
				}
			}

			[Token(Token = "0x170003F3")]
			public T Value
			{
				[Token(Token = "0x60023AF")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x594FE0", Offset = "0x594FE0")]
				get
				{
					return (T)null;
				}
				[Token(Token = "0x60023B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x594FF0", Offset = "0x594FF0")]
				private set
				{
				}
			}

			[Token(Token = "0x60023B1")]
			public QuadtreeNode(Vector2 position, T value)
			{
			}
		}

		[Token(Token = "0x2000591")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573038", Offset = "0x573038")]
		private sealed class <Find>d__12 : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x4002FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Quadtree<T> <>4__this;

			[Token(Token = "0x4002FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Rect range;

			[Token(Token = "0x4002FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rect <>3__range;

			[Token(Token = "0x4002FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <rangexMax>5__2;

			[Token(Token = "0x4002FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <rangexMin>5__3;

			[Token(Token = "0x4002FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <rangeyMax>5__4;

			[Token(Token = "0x4002FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <rangeyMin>5__5;

			[Token(Token = "0x4002FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <index>5__6;

			[Token(Token = "0x4002FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator<T> <>7__wrap6;

			[Token(Token = "0x170003F4")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x60023B6")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x170003F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023B8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023B2")]
			[DebuggerHidden]
			public <Find>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60023B3")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023B4")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023B5")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60023B7")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60023B9")]
			[DebuggerHidden]
			private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60023BA")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int nodeCapacity;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<QuadtreeNode> nodes;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Quadtree<T>[] children;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Rect boundaries;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583FC0", Offset = "0x583FC0")]
		private int <Count>k__BackingField;

		[Token(Token = "0x170001F1")]
		public int Count
		{
			[Token(Token = "0x6001401")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5914A8", Offset = "0x5914A8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001402")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5914B8", Offset = "0x5914B8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001403")]
		public Quadtree(Rect boundaries, int nodeCapacity = 32)
		{
		}

		[Token(Token = "0x6001404")]
		public bool Insert(float x, float y, T value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001405")]
		public bool Insert(Vector2 position, T value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001406")]
		private bool Insert(QuadtreeNode node)
		{
			return default(bool);
		}

		[Token(Token = "0x6001407")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5914C8", Offset = "0x5914C8")]
		public IEnumerable<T> Find(Rect range)
		{
			return null;
		}

		[Token(Token = "0x6001408")]
		public bool Remove(float x, float z, T value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001409")]
		public bool Remove(Vector2 position, T value)
		{
			return default(bool);
		}

		[Token(Token = "0x600140A")]
		private void Subdivide()
		{
		}

		[Token(Token = "0x600140B")]
		private void Combine()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class ScaleTexture
	{
		[Token(Token = "0x2000592")]
		public class ThreadData
		{
			[Token(Token = "0x4002FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int start;

			[Token(Token = "0x4002FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int end;

			[Token(Token = "0x60023BB")]
			[Address(RVA = "0x871C38", Offset = "0x871C38", VA = "0x871C38")]
			public ThreadData(int s, int e)
			{
			}
		}

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color[] texColors;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Color[] newColors;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int w;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static float ratioX;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static float ratioY;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int w2;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int finishCount;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Mutex mutex;

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x8C30C4", Offset = "0x8C30C4", VA = "0x8C30C4")]
		public static void Point(Texture2D tex, int newWidth, int newHeight)
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x8C34C0", Offset = "0x8C34C0", VA = "0x8C34C0")]
		public static void Bilinear(Texture2D tex, int newWidth, int newHeight)
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x8C30CC", Offset = "0x8C30CC", VA = "0x8C30CC")]
		private static void ThreadedScale(Texture2D tex, int newWidth, int newHeight, bool useBilinear)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x8C34C8", Offset = "0x8C34C8", VA = "0x8C34C8")]
		public static void BilinearScale(object obj)
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x8C37A4", Offset = "0x8C37A4", VA = "0x8C37A4")]
		public static void PointScale(object obj)
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x8C3944", Offset = "0x8C3944", VA = "0x8C3944")]
		private static Color ColorLerpUnclamped(Color c1, Color c2, float value)
		{
			return default(Color);
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x8C39A8", Offset = "0x8C39A8", VA = "0x8C39A8")]
		public ScaleTexture()
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class SimpleCameraLayerCulling : MonoBehaviour
	{
		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public GaiaSceneCullingProfile m_profile;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_applyToGameCamera;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Light m_directionalLight;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Light m_moonLight;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool m_applyToSceneCamera;

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x8C9C38", Offset = "0x8C9C38", VA = "0x8C9C38")]
		private void Start()
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x8C9D08", Offset = "0x8C9D08", VA = "0x8C9D08")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x8C9C3C", Offset = "0x8C9C3C", VA = "0x8C9C3C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x8C9D0C", Offset = "0x8C9D0C", VA = "0x8C9D0C")]
		public void ApplyToGameCamera()
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x8C9EB0", Offset = "0x8C9EB0", VA = "0x8C9EB0")]
		public void ApplyToDirectionalLight()
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x8CA034", Offset = "0x8CA034", VA = "0x8CA034")]
		public void ResetDirectionalLight()
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x8CA1FC", Offset = "0x8CA1FC", VA = "0x8CA1FC")]
		public SimpleCameraLayerCulling()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class SimplexNoiseGenerator
	{
		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static byte[] perm;

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x8CC828", Offset = "0x8CC828", VA = "0x8CC828")]
		public static float Generate(float x)
		{
			return default(float);
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x8CC9A8", Offset = "0x8CC9A8", VA = "0x8CC9A8")]
		public static float Generate(float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x8CCD80", Offset = "0x8CCD80", VA = "0x8CCD80")]
		public static float Generate(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x8CC970", Offset = "0x8CC970", VA = "0x8CC970")]
		private static int FastFloor(float x)
		{
			return default(int);
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x8CD474", Offset = "0x8CD474", VA = "0x8CD474")]
		private static int Mod(int x, int m)
		{
			return default(int);
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x8CC984", Offset = "0x8CC984", VA = "0x8CC984")]
		private static float Grad(int hash, float x)
		{
			return default(float);
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x8CCD4C", Offset = "0x8CCD4C", VA = "0x8CCD4C")]
		private static float Grad(int hash, float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x8CD488", Offset = "0x8CD488", VA = "0x8CD488")]
		private static float Grad(int hash, float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x8CD4D4", Offset = "0x8CD4D4", VA = "0x8CD4D4")]
		private static float Grad(int hash, float x, float y, float z, float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x8CD520", Offset = "0x8CD520", VA = "0x8CD520")]
		public static float GetNormalisedValue(float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x8CD5AC", Offset = "0x8CD5AC", VA = "0x8CD5AC")]
		public SimplexNoiseGenerator()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public class Singleton<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T _instance;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object _lock;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool applicationIsQuitting;

		[Token(Token = "0x170001F2")]
		public static T Instance
		{
			[Token(Token = "0x6001426")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001427")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001428")]
		public Singleton()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public static class SpawnProgressBar
	{
		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string m_title;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string m_subTitle;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float m_totalProgress;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static float m_currentSpawnRuleProgress;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int m_totalSpawnRulesCompleted;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int m_totalSpawnRuleCount;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int m_spawnerRulesCompleted;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static int m_spawnerRuleCount;

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x8D1704", Offset = "0x8D1704", VA = "0x8D1704")]
		public static bool UpdateProgressBar(string spawnerName, int totalSpawnRuleCount, int totalSpawnRulesCompleted, int spawnerRuleCount, int spawnerRulesCompleted)
		{
			return default(bool);
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x8D1840", Offset = "0x8D1840", VA = "0x8D1840")]
		public static bool UpdateSpawnRuleProgress(float progress)
		{
			return default(bool);
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x8D189C", Offset = "0x8D189C", VA = "0x8D189C")]
		public static void ClearProgressBar()
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x8D18A8", Offset = "0x8D18A8", VA = "0x8D18A8")]
		private static float CalculateProgress()
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000281")]
	[ExecuteAlways]
	public class TerrainDetailOverwrite : MonoBehaviour
	{
		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583FE0", Offset = "0x583FE0")]
		private GaiaConstants.TerrainDetailQuality <m_detailQuality>k__BackingField;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583FF0", Offset = "0x583FF0")]
		private int <m_detailDistance>k__BackingField;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584000", Offset = "0x584000")]
		private float <m_detailDensity>k__BackingField;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584010", Offset = "0x584010")]
		private Terrain <m_terrain>k__BackingField;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_applyTerrainChanges;

		[Token(Token = "0x170001F3")]
		public GaiaConstants.TerrainDetailQuality m_detailQuality
		{
			[Token(Token = "0x600142E")]
			[Address(RVA = "0xB057A0", Offset = "0xB057A0", VA = "0xB057A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591528", Offset = "0x591528")]
			get
			{
				return default(GaiaConstants.TerrainDetailQuality);
			}
			[Token(Token = "0x600142F")]
			[Address(RVA = "0xB057A8", Offset = "0xB057A8", VA = "0xB057A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591538", Offset = "0x591538")]
			set
			{
			}
		}

		[Token(Token = "0x170001F4")]
		public int m_detailDistance
		{
			[Token(Token = "0x6001430")]
			[Address(RVA = "0xB057B0", Offset = "0xB057B0", VA = "0xB057B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591548", Offset = "0x591548")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001431")]
			[Address(RVA = "0xB057B8", Offset = "0xB057B8", VA = "0xB057B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591558", Offset = "0x591558")]
			set
			{
			}
		}

		[Token(Token = "0x170001F5")]
		public float m_detailDensity
		{
			[Token(Token = "0x6001432")]
			[Address(RVA = "0xB057C0", Offset = "0xB057C0", VA = "0xB057C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591568", Offset = "0x591568")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001433")]
			[Address(RVA = "0xB057C8", Offset = "0xB057C8", VA = "0xB057C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591578", Offset = "0x591578")]
			set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		public Terrain m_terrain
		{
			[Token(Token = "0x6001434")]
			[Address(RVA = "0xB057D0", Offset = "0xB057D0", VA = "0xB057D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591588", Offset = "0x591588")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001435")]
			[Address(RVA = "0xB057D8", Offset = "0xB057D8", VA = "0xB057D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591598", Offset = "0x591598")]
			set
			{
			}
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xB057E0", Offset = "0xB057E0", VA = "0xB057E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xB05B14", Offset = "0xB05B14", VA = "0xB05B14")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xB05BE4", Offset = "0xB05BE4", VA = "0xB05BE4")]
		public void ApplySettings(bool isGlobal)
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xB0596C", Offset = "0xB0596C", VA = "0xB0596C")]
		public void GetResolutionPatches()
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xB0600C", Offset = "0xB0600C", VA = "0xB0600C")]
		public TerrainDetailOverwrite()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public enum StitchDirection
	{
		[Token(Token = "0x4001D06")]
		North,
		[Token(Token = "0x4001D07")]
		South,
		[Token(Token = "0x4001D08")]
		West,
		[Token(Token = "0x4001D09")]
		East
	}
	[Token(Token = "0x2000283")]
	public class TerrainHelper : MonoBehaviour
	{
		[Token(Token = "0x2000593")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573048", Offset = "0x573048")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4002FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material material;

			[Token(Token = "0x60023BC")]
			[Address(RVA = "0x877464", Offset = "0x877464", VA = "0x877464")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60023BD")]
			[Address(RVA = "0x87746C", Offset = "0x87746C", VA = "0x87746C")]
			internal void <SetTerrainMaterial>b__0(Terrain terrain)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573058", Offset = "0x573058")]
		private sealed class <>c
		{
			[Token(Token = "0x4002FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<TerrainScene, bool> <>9__15_0;

			[Token(Token = "0x4002FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<TerrainScene, bool> <>9__15_1;

			[Token(Token = "0x4002FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<TerrainScene, string> <>9__30_6;

			[Token(Token = "0x4002FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Terrain, string> <>9__30_0;

			[Token(Token = "0x4002FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<SpawnRule, bool> <>9__33_0;

			[Token(Token = "0x4002FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<TerrainScene, string> <>9__38_1;

			[Token(Token = "0x60023BF")]
			[Address(RVA = "0x877138", Offset = "0x877138", VA = "0x877138")]
			public <>c()
			{
			}

			[Token(Token = "0x60023C0")]
			[Address(RVA = "0x877140", Offset = "0x877140", VA = "0x877140")]
			internal bool <GetActiveTerrainCount>b__15_0(TerrainScene x)
			{
				return default(bool);
			}

			[Token(Token = "0x60023C1")]
			[Address(RVA = "0x877160", Offset = "0x877160", VA = "0x877160")]
			internal bool <GetActiveTerrainCount>b__15_1(TerrainScene x)
			{
				return default(bool);
			}

			[Token(Token = "0x60023C2")]
			[Address(RVA = "0x877180", Offset = "0x877180", VA = "0x877180")]
			internal string <ClearSpawns>b__30_6(TerrainScene x)
			{
				return null;
			}

			[Token(Token = "0x60023C3")]
			[Address(RVA = "0x8771D8", Offset = "0x8771D8", VA = "0x8771D8")]
			internal string <ClearSpawns>b__30_0(Terrain x)
			{
				return null;
			}

			[Token(Token = "0x60023C4")]
			[Address(RVA = "0x8771F4", Offset = "0x8771F4", VA = "0x8771F4")]
			internal bool <ClearGameObjectsOnSingleTerrain>b__33_0(SpawnRule x)
			{
				return default(bool);
			}

			[Token(Token = "0x60023C5")]
			[Address(RVA = "0x877230", Offset = "0x877230", VA = "0x877230")]
			internal string <GetTerrainsIntersectingBounds>b__38_1(TerrainScene x)
			{
				return null;
			}
		}

		[Token(Token = "0x2000595")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573068", Offset = "0x573068")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4002FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Spawner spawner;

			[Token(Token = "0x4002FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ClearSpawnFrom clearSpawnFrom;

			[Token(Token = "0x60023C6")]
			[Address(RVA = "0x877288", Offset = "0x877288", VA = "0x877288")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x60023C7")]
			[Address(RVA = "0x877290", Offset = "0x877290", VA = "0x877290")]
			internal void <ClearSpawns>b__1(Terrain t)
			{
			}

			[Token(Token = "0x60023C8")]
			[Address(RVA = "0x8772A8", Offset = "0x8772A8", VA = "0x8772A8")]
			internal void <ClearSpawns>b__2(Terrain t)
			{
			}

			[Token(Token = "0x60023C9")]
			[Address(RVA = "0x8772C0", Offset = "0x8772C0", VA = "0x8772C0")]
			internal void <ClearSpawns>b__3(Terrain t)
			{
			}

			[Token(Token = "0x60023CA")]
			[Address(RVA = "0x8772D8", Offset = "0x8772D8", VA = "0x8772D8")]
			internal void <ClearSpawns>b__4(Terrain t)
			{
			}

			[Token(Token = "0x60023CB")]
			[Address(RVA = "0x8772F0", Offset = "0x8772F0", VA = "0x8772F0")]
			internal void <ClearSpawns>b__5(Terrain t)
			{
			}
		}

		[Token(Token = "0x2000596")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573078", Offset = "0x573078")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4002FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> treePrototypeIds;

			[Token(Token = "0x60023CC")]
			[Address(RVA = "0x877308", Offset = "0x877308", VA = "0x877308")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x60023CD")]
			[Address(RVA = "0x877310", Offset = "0x877310", VA = "0x877310")]
			internal bool <ClearTreesOnSingleTerrain>b__0(TreeInstance x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000597")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573088", Offset = "0x573088")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4002FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Bounds intersectingBounds;

			[Token(Token = "0x60023CE")]
			[Address(RVA = "0x877380", Offset = "0x877380", VA = "0x877380")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x60023CF")]
			[Address(RVA = "0x877388", Offset = "0x877388", VA = "0x877388")]
			internal bool <GetTerrainsIntersectingBounds>b__0(TerrainScene x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573098", Offset = "0x573098")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x4002FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpawnRule sr;

			[Token(Token = "0x60023D0")]
			[Address(RVA = "0x8773E4", Offset = "0x8773E4", VA = "0x8773E4")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x60023D1")]
			[Address(RVA = "0x8773EC", Offset = "0x8773EC", VA = "0x8773EC")]
			internal bool <GetTreePrototypeIDFromSpawnRule>b__0(Spawner x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x584020", Offset = "0x584020")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x584020", Offset = "0x584020")]
		public int m_smoothIterations;

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xB060C0", Offset = "0xB060C0", VA = "0xB060C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xB060E8", Offset = "0xB060E8", VA = "0xB060E8")]
		public static void Flatten()
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xB06220", Offset = "0xB06220", VA = "0xB06220")]
		public static void FlattenTerrain(Terrain terrain)
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xB06100", Offset = "0xB06100", VA = "0xB06100")]
		public static void FlattenTerrain(Terrain[] terrains)
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xB062F0", Offset = "0xB062F0", VA = "0xB062F0")]
		public static void Stitch()
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xB06308", Offset = "0xB06308", VA = "0xB06308")]
		public static void StitchTerrains(Terrain[] terrains)
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xB065F4", Offset = "0xB065F4", VA = "0xB065F4")]
		public void Smooth()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xB065FC", Offset = "0xB065FC", VA = "0xB065FC")]
		public static void Smooth(int iterations)
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xB0669C", Offset = "0xB0669C", VA = "0xB0669C")]
		public static void SetTerrainMaterial(Material material, string title = "", string message = "", string OK = "", string cancel = "")
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xB06890", Offset = "0xB06890", VA = "0xB06890")]
		public static Vector3 GetActiveTerrainCenter(bool flushToGround = true)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xB06B9C", Offset = "0xB06B9C", VA = "0xB06B9C")]
		public static Terrain GetWorldMapTerrain()
		{
			return null;
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xB06938", Offset = "0xB06938", VA = "0xB06938")]
		public static Terrain GetActiveTerrain()
		{
			return null;
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xB06DCC", Offset = "0xB06DCC", VA = "0xB06DCC")]
		public static LayerMask GetActiveTerrainLayer()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xB06EA4", Offset = "0xB06EA4", VA = "0xB06EA4")]
		public static LayerMask GetActiveTerrainLayerAsInt()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xB06F58", Offset = "0xB06F58", VA = "0xB06F58")]
		public static int GetActiveTerrainCount()
		{
			return default(int);
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xB076FC", Offset = "0xB076FC", VA = "0xB076FC")]
		public static TerrainScene GetDynamicLoadedTerrain(Vector3 locationWU, [Optional] GaiaSessionManager gsm)
		{
			return null;
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0xB0795C", Offset = "0xB0795C", VA = "0xB0795C")]
		public static Vector3 GetRotationFromTerrainNormal(Terrain terrain, GameObject playerObj)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xB07B9C", Offset = "0xB07B9C", VA = "0xB07B9C")]
		public static Terrain GetTerrain(Vector3 locationWU, bool selectWorldMapTerrains = false)
		{
			return null;
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xB06A78", Offset = "0xB06A78", VA = "0xB06A78")]
		public static bool GetTerrainBounds(Terrain terrain, ref Bounds bounds)
		{
			return default(bool);
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xB07E78", Offset = "0xB07E78", VA = "0xB07E78")]
		public static bool GetTerrainBounds(ref BoundsDouble bounds, bool activeTerrainsOnly = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xB08988", Offset = "0xB08988", VA = "0xB08988")]
		public static Vector3 GetRandomPositionOnTerrain(Terrain terrain, Vector3 start, float radius)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xB08A78", Offset = "0xB08A78", VA = "0xB08A78")]
		public static Bounds GetWorldSpaceBounds(Terrain t)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xB08B98", Offset = "0xB08B98", VA = "0xB08B98")]
		public static void ResizeSplatmaps(Terrain terrain, int targetResolution)
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xB0945C", Offset = "0xB0945C", VA = "0xB0945C")]
		public static void ResizeHeightmap(Terrain terrain, int targetResolution)
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xB09994", Offset = "0xB09994", VA = "0xB09994")]
		public static void StitchTerrainHeightmaps(Terrain terrain1, Terrain terrain2, int extraSeamSize = 1, float maxDifference = 1f)
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xB0A5F0", Offset = "0xB0A5F0", VA = "0xB0A5F0")]
		public static bool TryStitch(Terrain terrain, StitchDirection direction, int extraSeamSize = 1, float maxDifference = 0.01f)
		{
			return default(bool);
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xB0A828", Offset = "0xB0A828", VA = "0xB0A828")]
		public static Terrain GetTerrainNeighbor(Terrain terrain, StitchDirection direction)
		{
			return null;
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xB0A330", Offset = "0xB0A330", VA = "0xB0A330")]
		private static bool AverageHeightPixels(Terrain terrain1, Terrain terrain2, int terrain1XBase, int terrain1YBase, int terrain2XBase, int terrain2YBase, int seamWidth, int seamHeight, float terrain1Weight, float terrain2Weight, bool applyTo1, bool applyTo2, float maxDifference)
		{
			return default(bool);
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xB0AF6C", Offset = "0xB0AF6C", VA = "0xB0AF6C")]
		public static void ResizeTerrainDetails(Terrain terrain, int targetDetailRes, int resolutionPerPatch)
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xB0B168", Offset = "0xB0B168", VA = "0xB0B168")]
		public static void ClearSpawns(GaiaConstants.SpawnerResourceType resourceType, ClearSpawnFor clearSpawnFor, ClearSpawnFrom clearSpawnFrom, [Optional] List<string> terrainNames, [Optional] Spawner spawner)
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xB0B888", Offset = "0xB0B888", VA = "0xB0B888")]
		private static void ClearTreesOnSingleTerrain(Terrain terrain, Spawner spawner, ClearSpawnFrom clearSpawnFrom)
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xB0BC48", Offset = "0xB0BC48", VA = "0xB0BC48")]
		private static void ClearDetailsOnSingleTerrain(Terrain terrain, Spawner spawner, ClearSpawnFrom clearSpawnFrom)
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xB0C014", Offset = "0xB0C014", VA = "0xB0C014")]
		private static void ClearGameObjectsOnSingleTerrain(Terrain terrain, Spawner spawner, ClearSpawnFrom clearSpawnFrom)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xB0C520", Offset = "0xB0C520", VA = "0xB0C520")]
		private static void ClearSpawnExtensionsOnSingleTerrain(Terrain terrain, Spawner spawner, ClearSpawnFrom clearSpawnFrom)
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xB0C7C4", Offset = "0xB0C7C4", VA = "0xB0C7C4")]
		public static float GetRangeFromTerrain()
		{
			return default(float);
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xB06D3C", Offset = "0xB06D3C", VA = "0xB06D3C")]
		public static bool IsWorldMapTerrain(Terrain t)
		{
			return default(bool);
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xB0C89C", Offset = "0xB0C89C", VA = "0xB0C89C")]
		public static bool IsWorldMapTerrain(TerrainData td)
		{
			return default(bool);
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xB0C92C", Offset = "0xB0C92C", VA = "0xB0C92C")]
		public static string[] GetTerrainsIntersectingBounds(BoundsDouble bounds)
		{
			return null;
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xB0CE38", Offset = "0xB0CE38", VA = "0xB0CE38")]
		public static TerrainLayer GetLayerFromPrototype(ResourceProtoTexture proto)
		{
			return null;
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xB0D014", Offset = "0xB0D014", VA = "0xB0D014")]
		public static int GetTreePrototypeIDFromSpawnRule(SpawnRule sr, Terrain terrain)
		{
			return default(int);
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xB0D284", Offset = "0xB0D284", VA = "0xB0D284")]
		public static Vector3 GetWorldCenter(bool sampleHeight = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xB0D4E0", Offset = "0xB0D4E0", VA = "0xB0D4E0")]
		public TerrainHelper()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class TimedInstance : Stopwatch
	{
		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long nanosecPerTick;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string m_name;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int m_iterations;

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xA25880", Offset = "0xA25880", VA = "0xA25880")]
		public TimedInstance(string name, bool start = true)
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xA25940", Offset = "0xA25940", VA = "0xA25940")]
		public new void Start()
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xA25954", Offset = "0xA25954", VA = "0xA25954")]
		public new void Reset()
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xA25960", Offset = "0xA25960", VA = "0xA25960")]
		public void IncIterations()
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xA25970", Offset = "0xA25970", VA = "0xA25970")]
		public float GetAvgMs()
		{
			return default(float);
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xA259A4", Offset = "0xA259A4", VA = "0xA259A4")]
		public float GetAvgS()
		{
			return default(float);
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xA259E4", Offset = "0xA259E4", VA = "0xA259E4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000285")]
	public class UnityHeightMap : HeightMap
	{
		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Bounds m_boundsWU;

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xC5DEB0", Offset = "0xC5DEB0", VA = "0xC5DEB0")]
		public UnityHeightMap()
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xC5DEB8", Offset = "0xC5DEB8", VA = "0xC5DEB8")]
		public UnityHeightMap(string path)
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xC5DEFC", Offset = "0xC5DEFC", VA = "0xC5DEFC")]
		public UnityHeightMap(TextAsset source)
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xC5DF5C", Offset = "0xC5DF5C", VA = "0xC5DF5C")]
		public UnityHeightMap(UnityHeightMap source)
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0xC5DFA0", Offset = "0xC5DFA0", VA = "0xC5DFA0")]
		public UnityHeightMap(Terrain terrain)
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xC5E148", Offset = "0xC5E148", VA = "0xC5E148")]
		public UnityHeightMap(Bounds bounds, string sourceFile)
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xC5E188", Offset = "0xC5E188", VA = "0xC5E188")]
		public UnityHeightMap(Texture2D texture, GaiaConstants.ImageChannel channel = GaiaConstants.ImageChannel.R)
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xC5E528", Offset = "0xC5E528", VA = "0xC5E528")]
		public Bounds GetBoundsWU()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xC5E53C", Offset = "0xC5E53C", VA = "0xC5E53C")]
		public Vector3 GetPositionWU()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xC5E598", Offset = "0xC5E598", VA = "0xC5E598")]
		public void SetBoundsWU(Bounds bounds)
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xC5E5B4", Offset = "0xC5E5B4", VA = "0xC5E5B4")]
		public void SetPositionWU(Vector3 position)
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xC5DFD0", Offset = "0xC5DFD0", VA = "0xC5DFD0")]
		public void LoadFromTerrain(Terrain terrain)
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xC5E5E4", Offset = "0xC5E5E4", VA = "0xC5E5E4")]
		public void SaveToTerrain(Terrain terrain)
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xC5E1D0", Offset = "0xC5E1D0", VA = "0xC5E1D0")]
		public void LoadFromTexture2D(Texture2D texture, GaiaConstants.ImageChannel channel)
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xC5E7E8", Offset = "0xC5E7E8", VA = "0xC5E7E8")]
		public void ReadRawFromTextAsset(TextAsset asset)
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xC5EC28", Offset = "0xC5EC28", VA = "0xC5EC28")]
		public UnityHeightMap GetColorChannelHeightMap()
		{
			return null;
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xC5ED44", Offset = "0xC5ED44", VA = "0xC5ED44")]
		public Texture2D CalculateNormals()
		{
			return null;
		}
	}
	[Token(Token = "0x2000286")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x571C14", Offset = "0x571C14")]
	public struct Vector2Double
	{
		[Token(Token = "0x4001D0F")]
		public const double kEpsilon = 1E-05;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double x;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double y;

		[Token(Token = "0x170001F7")]
		public double Item
		{
			[Token(Token = "0x600147D")]
			[Address(RVA = "0xC68FDC", Offset = "0xC68FDC", VA = "0xC68FDC")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600147E")]
			[Address(RVA = "0xC69048", Offset = "0xC69048", VA = "0xC69048")]
			set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		public Vector2Double normalized
		{
			[Token(Token = "0x600147F")]
			[Address(RVA = "0xC690B4", Offset = "0xC690B4", VA = "0xC690B4")]
			get
			{
				return default(Vector2Double);
			}
		}

		[Token(Token = "0x170001F9")]
		public double magnitude
		{
			[Token(Token = "0x6001480")]
			[Address(RVA = "0xC69168", Offset = "0xC69168", VA = "0xC69168")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170001FA")]
		public double sqrMagnitude
		{
			[Token(Token = "0x6001481")]
			[Address(RVA = "0xC69180", Offset = "0xC69180", VA = "0xC69180")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170001FB")]
		public static Vector2Double zero
		{
			[Token(Token = "0x6001482")]
			[Address(RVA = "0xC69194", Offset = "0xC69194", VA = "0xC69194")]
			get
			{
				return default(Vector2Double);
			}
		}

		[Token(Token = "0x170001FC")]
		public static Vector2Double one
		{
			[Token(Token = "0x6001483")]
			[Address(RVA = "0xC691A0", Offset = "0xC691A0", VA = "0xC691A0")]
			get
			{
				return default(Vector2Double);
			}
		}

		[Token(Token = "0x170001FD")]
		public static Vector2Double up
		{
			[Token(Token = "0x6001484")]
			[Address(RVA = "0xC691AC", Offset = "0xC691AC", VA = "0xC691AC")]
			get
			{
				return default(Vector2Double);
			}
		}

		[Token(Token = "0x170001FE")]
		public static Vector2Double right
		{
			[Token(Token = "0x6001485")]
			[Address(RVA = "0xC691B8", Offset = "0xC691B8", VA = "0xC691B8")]
			get
			{
				return default(Vector2Double);
			}
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xC69108", Offset = "0xC69108", VA = "0xC69108")]
		public Vector2Double(double x, double y)
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xC691C4", Offset = "0xC691C4", VA = "0xC691C4")]
		public static implicit operator Vector2Double(Vector3Double v)
		{
			return default(Vector2Double);
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xC691C8", Offset = "0xC691C8", VA = "0xC691C8")]
		public static implicit operator Vector3Double(Vector2Double v)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xC691DC", Offset = "0xC691DC", VA = "0xC691DC")]
		public static implicit operator Vector2Double(Vector2 v2)
		{
			return default(Vector2Double);
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xC691E8", Offset = "0xC691E8", VA = "0xC691E8")]
		public static implicit operator Vector2(Vector2Double v2)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xC691F4", Offset = "0xC691F4", VA = "0xC691F4")]
		public static Vector2Double operator +(Vector2Double a, Vector2Double b)
		{
			return default(Vector2Double);
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0xC69200", Offset = "0xC69200", VA = "0xC69200")]
		public static Vector2Double operator -(Vector2Double a, Vector2Double b)
		{
			return default(Vector2Double);
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xC6920C", Offset = "0xC6920C", VA = "0xC6920C")]
		public static Vector2Double operator -(Vector2Double a)
		{
			return default(Vector2Double);
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0xC69218", Offset = "0xC69218", VA = "0xC69218")]
		public static Vector2Double operator *(Vector2Double a, double d)
		{
			return default(Vector2Double);
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xC69224", Offset = "0xC69224", VA = "0xC69224")]
		public static Vector2Double operator *(float d, Vector2Double a)
		{
			return default(Vector2Double);
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xC69234", Offset = "0xC69234", VA = "0xC69234")]
		public static Vector2Double operator /(Vector2Double a, double d)
		{
			return default(Vector2Double);
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xC69240", Offset = "0xC69240", VA = "0xC69240")]
		public static bool operator ==(Vector2Double lhs, Vector2Double rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xC69258", Offset = "0xC69258", VA = "0xC69258")]
		public static bool operator !=(Vector2Double lhs, Vector2Double rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xC69278", Offset = "0xC69278", VA = "0xC69278")]
		public void Set(double new_x, double new_y)
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xC69280", Offset = "0xC69280", VA = "0xC69280")]
		public static Vector2Double Lerp(Vector2Double from, Vector2Double to, double t)
		{
			return default(Vector2Double);
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xC692D4", Offset = "0xC692D4", VA = "0xC692D4")]
		public static Vector2Double MoveTowards(Vector2Double current, Vector2Double target, double maxDistanceDelta)
		{
			return default(Vector2Double);
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xC69364", Offset = "0xC69364", VA = "0xC69364")]
		public static Vector2Double Scale(Vector2Double a, Vector2Double b)
		{
			return default(Vector2Double);
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xC69370", Offset = "0xC69370", VA = "0xC69370")]
		public void Scale(Vector2Double scale)
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xC69110", Offset = "0xC69110", VA = "0xC69110")]
		public void Normalize()
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xC69384", Offset = "0xC69384", VA = "0xC69384", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xC693C8", Offset = "0xC693C8", VA = "0xC693C8")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xC6940C", Offset = "0xC6940C", VA = "0xC6940C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xC69444", Offset = "0xC69444", VA = "0xC69444", Slot = "0")]
		public override bool Equals(object other)
		{
			return default(bool);
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xC694F0", Offset = "0xC694F0", VA = "0xC694F0")]
		public static double Dot(Vector2Double lhs, Vector2Double rhs)
		{
			return default(double);
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xC69500", Offset = "0xC69500", VA = "0xC69500")]
		public static double Angle(Vector2Double from, Vector2Double to)
		{
			return default(double);
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xC695D0", Offset = "0xC695D0", VA = "0xC695D0")]
		public static double Distance(Vector2Double a, Vector2Double b)
		{
			return default(double);
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xC695EC", Offset = "0xC695EC", VA = "0xC695EC")]
		public static Vector2Double ClampMagnitude(Vector2Double vector, double maxLength)
		{
			return default(Vector2Double);
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xC69248", Offset = "0xC69248", VA = "0xC69248")]
		public static double SqrMagnitude(Vector2Double a)
		{
			return default(double);
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xC69668", Offset = "0xC69668", VA = "0xC69668")]
		public double SqrMagnitude()
		{
			return default(double);
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xC6967C", Offset = "0xC6967C", VA = "0xC6967C")]
		public static Vector2Double Min(Vector2Double lhs, Vector2Double rhs)
		{
			return default(Vector2Double);
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xC696CC", Offset = "0xC696CC", VA = "0xC696CC")]
		public static Vector2Double Max(Vector2Double lhs, Vector2Double rhs)
		{
			return default(Vector2Double);
		}
	}
	[Serializable]
	[Token(Token = "0x2000287")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x571C4C", Offset = "0x571C4C")]
	public struct Vector3Double
	{
		[Token(Token = "0x4001D12")]
		public const float kEpsilon = 1E-05f;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double x;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double y;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double z;

		[Token(Token = "0x170001FF")]
		public double Item
		{
			[Token(Token = "0x60014A5")]
			[Address(RVA = "0xC6A3F4", Offset = "0xC6A3F4", VA = "0xC6A3F4")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60014A6")]
			[Address(RVA = "0xC6A470", Offset = "0xC6A470", VA = "0xC6A470")]
			set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public Vector3Double normalized
		{
			[Token(Token = "0x60014A7")]
			[Address(RVA = "0xC6A4EC", Offset = "0xC6A4EC", VA = "0xC6A4EC")]
			get
			{
				return default(Vector3Double);
			}
		}

		[Token(Token = "0x17000201")]
		public double magnitude
		{
			[Token(Token = "0x60014A8")]
			[Address(RVA = "0xC6A554", Offset = "0xC6A554", VA = "0xC6A554")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000202")]
		public double sqrMagnitude
		{
			[Token(Token = "0x60014A9")]
			[Address(RVA = "0xC6A600", Offset = "0xC6A600", VA = "0xC6A600")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000203")]
		public static Vector3Double zero
		{
			[Token(Token = "0x60014AA")]
			[Address(RVA = "0xC6A620", Offset = "0xC6A620", VA = "0xC6A620")]
			get
			{
				return default(Vector3Double);
			}
		}

		[Token(Token = "0x17000204")]
		public static Vector3Double one
		{
			[Token(Token = "0x60014AB")]
			[Address(RVA = "0xC6A630", Offset = "0xC6A630", VA = "0xC6A630")]
			get
			{
				return default(Vector3Double);
			}
		}

		[Token(Token = "0x17000205")]
		public static Vector3Double forward
		{
			[Token(Token = "0x60014AC")]
			[Address(RVA = "0xC6A640", Offset = "0xC6A640", VA = "0xC6A640")]
			get
			{
				return default(Vector3Double);
			}
		}

		[Token(Token = "0x17000206")]
		public static Vector3Double back
		{
			[Token(Token = "0x60014AD")]
			[Address(RVA = "0xC6A650", Offset = "0xC6A650", VA = "0xC6A650")]
			get
			{
				return default(Vector3Double);
			}
		}

		[Token(Token = "0x17000207")]
		public static Vector3Double up
		{
			[Token(Token = "0x60014AE")]
			[Address(RVA = "0xC6A660", Offset = "0xC6A660", VA = "0xC6A660")]
			get
			{
				return default(Vector3Double);
			}
		}

		[Token(Token = "0x17000208")]
		public static Vector3Double down
		{
			[Token(Token = "0x60014AF")]
			[Address(RVA = "0xC6A670", Offset = "0xC6A670", VA = "0xC6A670")]
			get
			{
				return default(Vector3Double);
			}
		}

		[Token(Token = "0x17000209")]
		public static Vector3Double left
		{
			[Token(Token = "0x60014B0")]
			[Address(RVA = "0xC6A680", Offset = "0xC6A680", VA = "0xC6A680")]
			get
			{
				return default(Vector3Double);
			}
		}

		[Token(Token = "0x1700020A")]
		public static Vector3Double right
		{
			[Token(Token = "0x60014B1")]
			[Address(RVA = "0xC6A690", Offset = "0xC6A690", VA = "0xC6A690")]
			get
			{
				return default(Vector3Double);
			}
		}

		[Token(Token = "0x1700020B")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x595ED4", Offset = "0x595ED4")]
		public static Vector3Double fwd
		{
			[Token(Token = "0x60014B2")]
			[Address(RVA = "0xC6A6A0", Offset = "0xC6A6A0", VA = "0xC6A6A0")]
			get
			{
				return default(Vector3Double);
			}
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xC691D0", Offset = "0xC691D0", VA = "0xC691D0")]
		public Vector3Double(double x, double y, double z)
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xC6A6B0", Offset = "0xC6A6B0", VA = "0xC6A6B0")]
		public Vector3Double(float x, float y, float z)
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xC6A6C8", Offset = "0xC6A6C8", VA = "0xC6A6C8")]
		public Vector3Double(Vector3 v3)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xC6A6E0", Offset = "0xC6A6E0", VA = "0xC6A6E0")]
		public static implicit operator Vector3Double(Vector3 v3)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xC6A6F0", Offset = "0xC6A6F0", VA = "0xC6A6F0")]
		public static implicit operator Vector3(Vector3Double v3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xC6A700", Offset = "0xC6A700", VA = "0xC6A700")]
		public Vector3Double(double x, double y)
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xC6A70C", Offset = "0xC6A70C", VA = "0xC6A70C")]
		public static Vector3Double operator +(Vector3Double a, Vector3Double b)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xC6A71C", Offset = "0xC6A71C", VA = "0xC6A71C")]
		public static Vector3Double operator -(Vector3Double a, Vector3Double b)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xC6A72C", Offset = "0xC6A72C", VA = "0xC6A72C")]
		public static Vector3Double operator -(Vector3Double a)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xC6A73C", Offset = "0xC6A73C", VA = "0xC6A73C")]
		public static Vector3Double operator *(Vector3Double a, double d)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xC6A74C", Offset = "0xC6A74C", VA = "0xC6A74C")]
		public static Vector3Double operator *(double d, Vector3Double a)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xC6A760", Offset = "0xC6A760", VA = "0xC6A760")]
		public static Vector3Double operator /(Vector3Double a, double d)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xC6A770", Offset = "0xC6A770", VA = "0xC6A770")]
		public static bool operator ==(Vector3Double lhs, Vector3Double rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xC6A790", Offset = "0xC6A790", VA = "0xC6A790")]
		public static bool operator !=(Vector3Double lhs, Vector3Double rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xC6A7BC", Offset = "0xC6A7BC", VA = "0xC6A7BC")]
		public static Vector3Double Lerp(Vector3Double from, Vector3Double to, double t)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xC6A82C", Offset = "0xC6A82C", VA = "0xC6A82C")]
		public static Vector3Double Slerp(Vector3Double from, Vector3Double to, double t)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xC6A86C", Offset = "0xC6A86C", VA = "0xC6A86C")]
		public static void OrthoNormalize(ref Vector3Double normal, ref Vector3Double tangent)
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xC6A904", Offset = "0xC6A904", VA = "0xC6A904")]
		public static void OrthoNormalize(ref Vector3Double normal, ref Vector3Double tangent, ref Vector3Double binormal)
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xC6A9DC", Offset = "0xC6A9DC", VA = "0xC6A9DC")]
		public static Vector3Double MoveTowards(Vector3Double current, Vector3Double target, double maxDistanceDelta)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xC6AA90", Offset = "0xC6AA90", VA = "0xC6AA90")]
		public static Vector3Double RotateTowards(Vector3Double current, Vector3Double target, double maxRadiansDelta, double maxMagnitudeDelta)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xC6AAD4", Offset = "0xC6AAD4", VA = "0xC6AAD4")]
		public static Vector3Double SmoothDamp(Vector3Double current, Vector3Double target, ref Vector3Double currentVelocity, double smoothTime, double maxSpeed)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xC6AD4C", Offset = "0xC6AD4C", VA = "0xC6AD4C")]
		public static Vector3Double SmoothDamp(Vector3Double current, Vector3Double target, ref Vector3Double currentVelocity, double smoothTime)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xC6AB70", Offset = "0xC6AB70", VA = "0xC6AB70")]
		public static Vector3Double SmoothDamp(Vector3Double current, Vector3Double target, ref Vector3Double currentVelocity, double smoothTime, double maxSpeed, double deltaTime)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xC6AE4C", Offset = "0xC6AE4C", VA = "0xC6AE4C")]
		public void Set(double new_x, double new_y, double new_z)
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xC6AE58", Offset = "0xC6AE58", VA = "0xC6AE58")]
		public static Vector3Double Scale(Vector3Double a, Vector3Double b)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xC6AE68", Offset = "0xC6AE68", VA = "0xC6AE68")]
		public void Scale(Vector3Double scale)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xC6AE88", Offset = "0xC6AE88", VA = "0xC6AE88")]
		public static Vector3Double Cross(Vector3Double lhs, Vector3Double rhs)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xC6AEB0", Offset = "0xC6AEB0", VA = "0xC6AEB0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xC6AF04", Offset = "0xC6AF04", VA = "0xC6AF04", Slot = "0")]
		public override bool Equals(object other)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xC6AFC8", Offset = "0xC6AFC8", VA = "0xC6AFC8")]
		public static Vector3Double Reflect(Vector3Double inDirection, Vector3Double inNormal)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xC6A4F8", Offset = "0xC6A4F8", VA = "0xC6A4F8")]
		public static Vector3Double Normalize(Vector3Double value)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xC6B0AC", Offset = "0xC6B0AC", VA = "0xC6B0AC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xC6AE34", Offset = "0xC6AE34", VA = "0xC6AE34")]
		public static double Dot(Vector3Double lhs, Vector3Double rhs)
		{
			return default(double);
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xC6B2C0", Offset = "0xC6B2C0", VA = "0xC6B2C0")]
		public static Vector3Double Project(Vector3Double vector, Vector3Double onNormal)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xC6B32C", Offset = "0xC6B32C", VA = "0xC6B32C")]
		public static Vector3Double Exclude(Vector3Double excludeThis, Vector3Double fromThat)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xC6B380", Offset = "0xC6B380", VA = "0xC6B380")]
		public static double Angle(Vector3Double from, Vector3Double to)
		{
			return default(double);
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xC6B40C", Offset = "0xC6B40C", VA = "0xC6B40C")]
		public static double Distance(Vector3Double a, Vector3Double b)
		{
			return default(double);
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xC6ADE8", Offset = "0xC6ADE8", VA = "0xC6ADE8")]
		public static Vector3Double ClampMagnitude(Vector3Double vector, double maxLength)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xC6B000", Offset = "0xC6B000", VA = "0xC6B000")]
		public static double Magnitude(Vector3Double a)
		{
			return default(double);
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xC6A778", Offset = "0xC6A778", VA = "0xC6A778")]
		public static double SqrMagnitude(Vector3Double a)
		{
			return default(double);
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xC6B4DC", Offset = "0xC6B4DC", VA = "0xC6B4DC")]
		public static Vector3Double Min(Vector3Double lhs, Vector3Double rhs)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xC6B554", Offset = "0xC6B554", VA = "0xC6B554")]
		public static Vector3Double Max(Vector3Double lhs, Vector3Double rhs)
		{
			return default(Vector3Double);
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xC6B5CC", Offset = "0xC6B5CC", VA = "0xC6B5CC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5915A8", Offset = "0x5915A8")]
		public static double AngleBetween(Vector3Double from, Vector3Double to)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000288")]
	public class WaterFlowMap
	{
		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m_dropletVolume;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m_dropletAbsorbtionRate;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_waterflowSmoothIterations;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UnityHeightMap m_heightMap;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HeightMap m_waterFlowMap;

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x93F798", Offset = "0x93F798", VA = "0x93F798")]
		public void CreateWaterFlowMap(Terrain terrain)
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x93F8CC", Offset = "0x93F8CC", VA = "0x93F8CC")]
		private void TraceWaterFlow(int startX, int startZ, int width, int height)
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x93FA88", Offset = "0x93FA88", VA = "0x93FA88")]
		public void ExportWaterMapToPath(string path)
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x93FAB4", Offset = "0x93FAB4", VA = "0x93FAB4")]
		public WaterFlowMap()
		{
		}
	}
	[Token(Token = "0x2000289")]
	public class XorshiftPlus
	{
		[Token(Token = "0x4001D1B")]
		private const ulong m_A_Init = 181353uL;

		[Token(Token = "0x4001D1C")]
		private const ulong m_B_Init = 7uL;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_seed;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong m_stateA;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ulong m_stateB;

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x944C7C", Offset = "0x944C7C", VA = "0x944C7C")]
		public XorshiftPlus(int seed = 1)
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x944CD0", Offset = "0x944CD0", VA = "0x944CD0")]
		public void Reset()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x944CF8", Offset = "0x944CF8", VA = "0x944CF8")]
		public void Reset(int seed)
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x944D28", Offset = "0x944D28", VA = "0x944D28")]
		public void Reset(ulong stateA, ulong stateB)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x944E14", Offset = "0x944E14", VA = "0x944E14")]
		public void GetState(out int seed, out ulong stateA, out ulong stateB)
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x944E30", Offset = "0x944E30", VA = "0x944E30")]
		public float Next()
		{
			return default(float);
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x944E64", Offset = "0x944E64", VA = "0x944E64")]
		public int NextInt()
		{
			return default(int);
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x944EA0", Offset = "0x944EA0", VA = "0x944EA0")]
		public float Next(float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x944EE4", Offset = "0x944EE4", VA = "0x944EE4")]
		public int Next(int min, int max)
		{
			return default(int);
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x944F48", Offset = "0x944F48", VA = "0x944F48")]
		public Vector3 NextVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x944FBC", Offset = "0x944FBC", VA = "0x944FBC")]
		public Vector3 NextVector(float min, float max)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200028A")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float targetHeight;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float distance;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float offsetFromWall;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxDistance;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float minDistance;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float xSpeed;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float ySpeed;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float yMinLimit;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float yMaxLimit;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float zoomRate;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float rotationDampening;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float zoomDampening;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LayerMask collisionLayers;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool lockToRearOfTarget;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool allowMouseInputX;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool allowMouseInputY;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float xDeg;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float yDeg;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float currentDistance;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float desiredDistance;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float correctedDistance;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool rotateBehind;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool mouseSideButton;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float pbuffer;

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x92C388", Offset = "0x92C388", VA = "0x92C388")]
		private void Start()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x92C474", Offset = "0x92C474", VA = "0x92C474")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x92C478", Offset = "0x92C478", VA = "0x92C478")]
		public void Apply()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x92CA30", Offset = "0x92CA30", VA = "0x92CA30")]
		private void RotateBehindTarget()
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x92CAE0", Offset = "0x92CAE0", VA = "0x92CAE0")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x92CB10", Offset = "0x92CB10", VA = "0x92CB10")]
		public CameraController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028B")]
	public class CameraControllerData
	{
		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float targetHeight;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float distance;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float offsetFromWall;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxDistance;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minDistance;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float xSpeed;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ySpeed;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float yMinLimit;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float yMaxLimit;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float zoomRate;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rotationDampening;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float zoomDampening;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LayerMask collisionLayers;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool lockToRearOfTarget;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool allowMouseInputX;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool allowMouseInputY;

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x92CB6C", Offset = "0x92CB6C", VA = "0x92CB6C")]
		public CameraControllerData()
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class CarControllerSetup : MonoBehaviour
	{
		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_carFocusPoint;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera m_camera;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CameraControllerData m_cameraControllerData;

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x92D4A0", Offset = "0x92D4A0", VA = "0x92D4A0")]
		private void Start()
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x92D584", Offset = "0x92D584", VA = "0x92D584")]
		public bool VerifyCameraController()
		{
			return default(bool);
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x92D7E8", Offset = "0x92D7E8", VA = "0x92D7E8")]
		public CarControllerSetup()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class FrameRateManager : MonoBehaviour
	{
		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_showFPS;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_showGUI;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool m_autoQualityManagement;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_autoCheckInterval;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_targetFrameRate;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int m_fontSize;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_autoCheckTimeLeft;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_currentQuality;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_maxQuality;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string[] m_qualityNames;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_fpsUpdateInterval;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_fpsAccum;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_fpsFrames;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_fpsTimeLeft;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_fpsValue;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string m_fpsValueStr;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GUIStyle m_fpsStyle;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GUIStyle m_fpsShadowStyle;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rect m_fpsLocation;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rect m_fpsShadowLocation;

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x8B83EC", Offset = "0x8B83EC", VA = "0x8B83EC")]
		private void Start()
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x8B859C", Offset = "0x8B859C", VA = "0x8B859C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x8B8E54", Offset = "0x8B8E54", VA = "0x8B8E54")]
		private void Update()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x8B8828", Offset = "0x8B8828", VA = "0x8B8828")]
		private void UpdateQuality()
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x8B9090", Offset = "0x8B9090", VA = "0x8B9090")]
		private bool IncreaseQuality()
		{
			return default(bool);
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x8B90BC", Offset = "0x8B90BC", VA = "0x8B90BC")]
		private bool DecreaseQuality()
		{
			return default(bool);
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x8B90E4", Offset = "0x8B90E4", VA = "0x8B90E4")]
		public FrameRateManager()
		{
		}
	}
	[Token(Token = "0x200028E")]
	public class FreeCamera : MonoBehaviour
	{
		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enableInputCapture;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool lockAndHideCursor;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool holdRightMouseCapture;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float lookSpeed;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float moveSpeed;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float sprintSpeed;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_useScrollSpeedIncrease;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_speedIncreaseValue;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_cameraRoll;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_inputCaptured;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_yaw;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_pitch;

		[Token(Token = "0x4001D6C")]
		private const string m_scrollWheelKey = "Mouse ScrollWheel";

		[Token(Token = "0x4001D6D")]
		private const string m_mouseXKey = "Mouse X";

		[Token(Token = "0x4001D6E")]
		private const string m_mouseYKey = "Mouse Y";

		[Token(Token = "0x4001D6F")]
		private const string m_verticalKey = "Vertical";

		[Token(Token = "0x4001D70")]
		private const string m_horizontalKey = "Horizontal";

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x8B9788", Offset = "0x8B9788", VA = "0x8B9788")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x8B9794", Offset = "0x8B9794", VA = "0x8B9794")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x8B982C", Offset = "0x8B982C", VA = "0x8B982C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x8B9870", Offset = "0x8B9870", VA = "0x8B9870")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x8B97AC", Offset = "0x8B97AC", VA = "0x8B97AC")]
		private void CaptureInput()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x8B9830", Offset = "0x8B9830", VA = "0x8B9830")]
		private void ReleaseInput()
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x8B98B0", Offset = "0x8B98B0", VA = "0x8B98B0")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x8B98C4", Offset = "0x8B98C4", VA = "0x8B98C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x8B9D4C", Offset = "0x8B9D4C", VA = "0x8B9D4C")]
		public void RefreshCameraRoll(float roll)
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x8B9DCC", Offset = "0x8B9DCC", VA = "0x8B9DCC")]
		public FreeCamera()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public class Growth : MonoBehaviour
	{
		[Token(Token = "0x2000599")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5730A8", Offset = "0x5730A8")]
		private sealed class <Grow>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Growth <>4__this;

			[Token(Token = "0x4002FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <deltaScale>5__2;

			[Token(Token = "0x4002FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <finishTime>5__3;

			[Token(Token = "0x170003F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023D5")]
				[Address(RVA = "0x9211DC", Offset = "0x9211DC", VA = "0x9211DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023D7")]
				[Address(RVA = "0x921224", Offset = "0x921224", VA = "0x921224", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023D2")]
			[Address(RVA = "0x92108C", Offset = "0x92108C", VA = "0x92108C")]
			[DebuggerHidden]
			public <Grow>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60023D3")]
			[Address(RVA = "0x9210B8", Offset = "0x9210B8", VA = "0x9210B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023D4")]
			[Address(RVA = "0x9210BC", Offset = "0x9210BC", VA = "0x9210BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023D6")]
			[Address(RVA = "0x9211E4", Offset = "0x9211E4", VA = "0x9211E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x584074", Offset = "0x584074")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x584074", Offset = "0x584074")]
		public float m_startScale;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5840CC", Offset = "0x5840CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5840CC", Offset = "0x5840CC")]
		public float m_endScale;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x584124", Offset = "0x584124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x584124", Offset = "0x584124")]
		public float m_scaleVariance;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x584178", Offset = "0x584178")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x584178", Offset = "0x584178")]
		public float m_growthTime;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_actualEndScale;

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xE49A98", Offset = "0xE49A98", VA = "0xE49A98")]
		private void Start()
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xE49AA4", Offset = "0xE49AA4", VA = "0xE49AA4", Slot = "4")]
		public virtual void Initialise()
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xE49AF4", Offset = "0xE49AF4", VA = "0xE49AF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5915E0", Offset = "0x5915E0")]
		private IEnumerator Grow()
		{
			return null;
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xE49B60", Offset = "0xE49B60", VA = "0xE49B60", Slot = "5")]
		public virtual void Die()
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xE49BDC", Offset = "0xE49BDC", VA = "0xE49BDC")]
		public Growth()
		{
		}
	}
	[Token(Token = "0x2000290")]
	[ExecuteAlways]
	public class LocationSystem : MonoBehaviour
	{
		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public LocationSystemScriptableObject m_locationProfile;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Transform m_camera;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Transform m_player;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public bool m_trackPlayer;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public LocationBookmarkSettings m_bookmarkSettings;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public int m_selectedBookmark;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public string m_bookmarkName;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public bool m_rename;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public string m_savedName;

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xA3C63C", Offset = "0xA3C63C", VA = "0xA3C63C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xA3C8B4", Offset = "0xA3C8B4", VA = "0xA3C8B4")]
		private void Update()
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xA3C6E4", Offset = "0xA3C6E4", VA = "0xA3C6E4")]
		private void Initilize()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xA3D7B4", Offset = "0xA3D7B4", VA = "0xA3D7B4")]
		public LocationSystem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000291")]
	public class LocationBookmarkSettings
	{
		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 m_savedCameraPosition;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion m_savedCameraRotation;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 m_savedPlayerPosition;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Quaternion m_savedPlayerRotation;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_controllerUsed;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string m_sceneName;

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xA3C5A8", Offset = "0xA3C5A8", VA = "0xA3C5A8")]
		public LocationBookmarkSettings()
		{
		}
	}
	[Token(Token = "0x2000292")]
	public class LocationSystemScriptableObject : ScriptableObject
	{
		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public GaiaConstants.EnvironmentControllerType m_currentControllerType;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public Vector3 m_savedCameraPosition;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Quaternion m_savedCameraRotation;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Vector3 m_savedPlayerPosition;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public Quaternion m_savedPlayerRotation;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public bool m_hasBeenSaved;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public List<string> m_bookmarkedLocationNames;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<LocationBookmarkSettings> m_bookmarkedSettings;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public bool m_autoLoad;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		public KeyCode m_mainKey;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public KeyCode m_addBookmarkKey;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public KeyCode m_prevBookmark;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public KeyCode m_nextBookmark;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GaiaSettings m_gaiaSettings;

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xA3D808", Offset = "0xA3D808", VA = "0xA3D808")]
		public bool HasBeenSaved()
		{
			return default(bool);
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xA3CD3C", Offset = "0xA3CD3C", VA = "0xA3CD3C")]
		public void SaveLocation(Transform camera, [Optional] Transform player)
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xA3C750", Offset = "0xA3C750", VA = "0xA3C750")]
		public void LoadLocation(Transform camera, [Optional] Transform player)
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0xA3D5E0", Offset = "0xA3D5E0", VA = "0xA3D5E0")]
		public void AddNewBookmark(LocationSystem locationSystem, [Optional] string overrideName)
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xA3D810", Offset = "0xA3D810", VA = "0xA3D810")]
		public void OverrideBookmark(LocationSystem locationSystem)
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xA3D8F4", Offset = "0xA3D8F4", VA = "0xA3D8F4")]
		public void RemoveAllBookmarks()
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xA3D96C", Offset = "0xA3D96C", VA = "0xA3D96C")]
		public void RemoveBookmark(int index, LocationSystem locationSystem)
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xA3CEB0", Offset = "0xA3CEB0", VA = "0xA3CEB0")]
		public void LoadBookmark(LocationSystem locationSystem)
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xA3D388", Offset = "0xA3D388", VA = "0xA3D388")]
		public static LocationBookmarkSettings GetCurrentLocation(LocationSystem locationSystem)
		{
			return null;
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xA3DA30", Offset = "0xA3DA30", VA = "0xA3DA30")]
		private static GaiaConstants.EnvironmentControllerType GetCharacterControllerType()
		{
			return default(GaiaConstants.EnvironmentControllerType);
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xA3DB30", Offset = "0xA3DB30", VA = "0xA3DB30")]
		public LocationSystemScriptableObject()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public class PostProcessingConverter : MonoBehaviour
	{
		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GaiaConstants.EnvironmentRenderer RenderPipeline;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PostProcessProfile ProcessProfile;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string SavePath;

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xAA4604", Offset = "0xAA4604", VA = "0xAA4604")]
		public PostProcessingConverter()
		{
		}
	}
	[Token(Token = "0x2000294")]
	[AttributeAttribute(Name = "GaiaScriptOrder", RVA = "0x571C94", Offset = "0x571C94")]
	public class ScreenShotter : MonoBehaviour
	{
		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode m_screenShotKey;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public GaiaConstants.ImageFileType m_imageFormat;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_targetDirectory;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_buildTargetDirectory;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GaiaConstants.ScreenshotResolution m_screenshotResolution;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int m_targetWidth;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int m_targetHeight;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool m_useScreenSize;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Camera m_mainCamera;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_takeShot;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool m_refreshAssetDB;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Texture2D m_watermark;

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x8C7484", Offset = "0x8C7484", VA = "0x8C7484")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x8C75A4", Offset = "0x8C75A4", VA = "0x8C75A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x8C75B4", Offset = "0x8C75B4", VA = "0x8C75B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x8C7638", Offset = "0x8C7638", VA = "0x8C7638")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x8C767C", Offset = "0x8C767C", VA = "0x8C767C")]
		private void TakeScreenshotAndSave()
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x8C8A74", Offset = "0x8C8A74", VA = "0x8C8A74")]
		public void UpdateScreenshotResolution(GaiaConstants.ScreenshotResolution screenshotResolution)
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x8C8A9C", Offset = "0x8C8A9C", VA = "0x8C8A9C")]
		public void TakeHiResShot()
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x8C7D70", Offset = "0x8C7D70", VA = "0x8C7D70")]
		private bool ScreenShotName(int width, int height, out string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x8C7C04", Offset = "0x8C7C04", VA = "0x8C7C04")]
		private Texture2D AddWatermark(Texture2D background, Texture2D watermark)
		{
			return null;
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x8C8BD8", Offset = "0x8C8BD8", VA = "0x8C8BD8")]
		public ScreenShotter()
		{
		}
	}
	[Token(Token = "0x2000295")]
	[ExecuteAlways]
	public class UIConfiguration : MonoBehaviour
	{
		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private static UIConfiguration m_instance;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private static GaiaConstants.EnvironmentRenderer m_renderPipeline;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_hideMouseCursor;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_useTooltips;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject m_tooltipManager;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_resetOnDisable;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool m_loadFromLastSaved;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool m_showReticule;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool m_showRuleOfThirds;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Color32 m_uiTextColor;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int m_textSize;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public KeyCode m_uiToggleButton;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject m_textContent;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool m_usePhotoMode;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PhotoModeProfile m_currentPhotoModeProfile;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public KeyCode m_enablePhotoMode;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject m_photoMode;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UIControllerSelection m_uiControllerSelection;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Text m_photoModeText;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Text m_locationManagerText;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Text[] m_allTexts;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x584360", Offset = "0x584360")]
		public int m_startingPanel;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public KeyCode m_showPauseMenu;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool m_pauseGame;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool m_useBackgroundBlur;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject m_pauseMenu;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject m_backgroundBlur;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private PostProcessProfile m_builtInBlurProfile;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string m_builtInBlurProfileGUID;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string m_urpBlurProfileGUID;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string m_hdrpBlurProfileGUID;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FreeCamera m_freeCamera;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private GameObject m_photoModeSystem;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool m_photoModeEnabled;

		[Token(Token = "0x1700020C")]
		public static UIConfiguration Instance
		{
			[Token(Token = "0x6001528")]
			[Address(RVA = "0xA36F2C", Offset = "0xA36F2C", VA = "0xA36F2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020D")]
		public static GaiaConstants.EnvironmentRenderer RenderPipeline
		{
			[Token(Token = "0x6001529")]
			[Address(RVA = "0xA36F90", Offset = "0xA36F90", VA = "0xA36F90")]
			get
			{
				return default(GaiaConstants.EnvironmentRenderer);
			}
			[Token(Token = "0x600152A")]
			[Address(RVA = "0xA36FF4", Offset = "0xA36FF4", VA = "0xA36FF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public Color32 UITextColor
		{
			[Token(Token = "0x600152B")]
			[Address(RVA = "0xA3705C", Offset = "0xA3705C", VA = "0xA3705C")]
			get
			{
				return default(Color32);
			}
			[Token(Token = "0x600152C")]
			[Address(RVA = "0xA37064", Offset = "0xA37064", VA = "0xA37064")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public int TextSize
		{
			[Token(Token = "0x600152D")]
			[Address(RVA = "0xA37108", Offset = "0xA37108", VA = "0xA37108")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600152E")]
			[Address(RVA = "0xA37110", Offset = "0xA37110", VA = "0xA37110")]
			set
			{
			}
		}

		[Token(Token = "0x17000210")]
		public PostProcessProfile BuiltInBlurProfile
		{
			[Token(Token = "0x600152F")]
			[Address(RVA = "0xA371A8", Offset = "0xA371A8", VA = "0xA371A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001530")]
			[Address(RVA = "0xA3722C", Offset = "0xA3722C", VA = "0xA3722C")]
			set
			{
			}
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0xA372B0", Offset = "0xA372B0", VA = "0xA372B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0xA37A04", Offset = "0xA37A04", VA = "0xA37A04")]
		private void Update()
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0xA37F94", Offset = "0xA37F94", VA = "0xA37F94")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0xA3706C", Offset = "0xA3706C", VA = "0xA3706C")]
		private void UpdateTextColor()
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0xA37128", Offset = "0xA37128", VA = "0xA37128")]
		private void UpdateTextSize()
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0xA3808C", Offset = "0xA3808C", VA = "0xA3808C")]
		public void SetFreeCameraComponent(Camera camera)
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0xA3745C", Offset = "0xA3745C", VA = "0xA3745C")]
		public void ExecuteUIRefresh()
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xA37E38", Offset = "0xA37E38", VA = "0xA37E38")]
		public void ExecuteShowPhotoMode()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0xA37898", Offset = "0xA37898", VA = "0xA37898")]
		public void ProcessShowTooltips()
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xA38164", Offset = "0xA38164", VA = "0xA38164")]
		public TooltipManager CreateTooltipManager()
		{
			return null;
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xA382B0", Offset = "0xA382B0", VA = "0xA382B0")]
		public void QuitApplication()
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xA37B74", Offset = "0xA37B74", VA = "0xA37B74")]
		public void ReturnToGame()
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xA37CD4", Offset = "0xA37CD4", VA = "0xA37CD4")]
		public void Pause()
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0xA377D0", Offset = "0xA377D0", VA = "0xA377D0")]
		private void SetupBlur(GaiaConstants.EnvironmentRenderer renderPipeline)
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xA382B8", Offset = "0xA382B8", VA = "0xA382B8")]
		private PostProcessVolume GetPostProcessVolumeBuiltIn(GameObject blurPostObject, string layer)
		{
			return null;
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xA383BC", Offset = "0xA383BC", VA = "0xA383BC")]
		private void RemovePostFXVolume(GameObject blurPostObject, GaiaConstants.EnvironmentRenderer renderPipeline)
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xA384C8", Offset = "0xA384C8", VA = "0xA384C8")]
		public UIConfiguration()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class DisableUnderwaterFXTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_tagCheck;

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xA1DD04", Offset = "0xA1DD04", VA = "0xA1DD04")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xA1DE1C", Offset = "0xA1DE1C", VA = "0xA1DE1C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xA1DF34", Offset = "0xA1DF34", VA = "0xA1DF34")]
		public void LoadTagFromGaia()
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xA1DFD8", Offset = "0xA1DFD8", VA = "0xA1DFD8")]
		public DisableUnderwaterFXTrigger()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class FollowPlayerSystem : MonoBehaviour
	{
		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x584388", Offset = "0x584388")]
		public bool m_followPlayer;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_isWaterObject;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> m_particleObjects;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform m_player;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_useOffset;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_xoffset;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_zoffset;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_yOffset;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool m_useScale;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 m_scaleSize;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_playerExists;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Transform> m_particleObjectTransforms;

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x8B6510", Offset = "0x8B6510", VA = "0x8B6510")]
		private void Start()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x8B67B0", Offset = "0x8B67B0", VA = "0x8B67B0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x8B6B48", Offset = "0x8B6B48", VA = "0x8B6B48")]
		public FollowPlayerSystem()
		{
		}
	}
	[Token(Token = "0x2000298")]
	[ExecuteAlways]
	public class GaiaUnderwaterEffects : MonoBehaviour
	{
		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private static GaiaUnderwaterEffects m_instance;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_enableUnderwaterEffects;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public GaiaConstants.EnvironmentRenderer RenderPipeline;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_weatherSystemExists;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5843E0", Offset = "0x5843E0")]
		private bool <IsUnderwater>k__BackingField;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool m_startingUnderwater;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_seaLevel;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform m_playerCamera;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject m_underwaterParticles;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject m_horizonObject;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject m_underwaterPostFX;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool m_editCausticTextures;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool m_useCaustics;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Light m_mainLight;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int m_framesPerSecond;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5843F0", Offset = "0x5843F0")]
		public float m_causticSize;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<Texture2D> m_causticTextures;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Texture2D> m_causticTexturesHDRP;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool m_supportFog;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Gradient m_fogColorGradient;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Color m_fogColor;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Color m_fogColorMultiplier;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float m_fogDepth;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float m_fogDistance;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float m_nearFogDistance;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float m_fogDensity;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool m_enableTransitionFX;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject m_underwaterTransitionPostFX;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool m_supportPostFX;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float m_constUnderwaterPostExposure;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public AnimationCurve m_gradientUnderwaterPostExposure;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Color m_constUnderwaterColorFilter;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Gradient m_gradientUnderwaterColorFilter;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public PostProcessProfile m_postProcessProfile;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58440C", Offset = "0x58440C")]
		public float m_playbackVolume;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AudioClip m_submergeSoundFXDown;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public AudioClip m_submergeSoundFXUp;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public AudioClip m_underwaterSoundFX;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int m_indexNumber;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private AudioSource m_audioSourceUnderwater;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private ParticleSystem m_underwaterParticleSystem;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Color m_surfaceFogColor;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float m_surfaceFogDensity;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float m_surfaceFogStartDistance;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private float m_surfaceFogEndDistance;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private bool m_surfaceSetup;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
		private bool m_underwaterSetup;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14E")]
		private bool m_startingSystem;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private List<MeshRenderer> m_horizonMeshRenders;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[HideInInspector]
		[SerializeField]
		private Material m_underwaterMaterial;

		[Token(Token = "0x17000211")]
		public static GaiaUnderwaterEffects Instance
		{
			[Token(Token = "0x600154A")]
			[Address(RVA = "0x9F780C", Offset = "0x9F780C", VA = "0x9F780C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000212")]
		public bool EnableUnderwaterEffects
		{
			[Token(Token = "0x600154B")]
			[Address(RVA = "0x9F7858", Offset = "0x9F7858", VA = "0x9F7858")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600154C")]
			[Address(RVA = "0x9F7860", Offset = "0x9F7860", VA = "0x9F7860")]
			set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public bool IsUnderwater
		{
			[Token(Token = "0x600154D")]
			[Address(RVA = "0x9F7BF0", Offset = "0x9F7BF0", VA = "0x9F7BF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591640", Offset = "0x591640")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600154E")]
			[Address(RVA = "0x9F7BF8", Offset = "0x9F7BF8", VA = "0x9F7BF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591650", Offset = "0x591650")]
			private set
			{
			}
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x9F7C04", Offset = "0x9F7C04", VA = "0x9F7C04")]
		private void Start()
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x9F8E78", Offset = "0x9F8E78", VA = "0x9F8E78")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x9F9388", Offset = "0x9F9388", VA = "0x9F9388")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x9F940C", Offset = "0x9F940C", VA = "0x9F940C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x9F9028", Offset = "0x9F9028", VA = "0x9F9028")]
		public void SetupTransitionVFX(bool status)
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x9FA054", Offset = "0x9FA054", VA = "0x9FA054")]
		private void CausticsAnimation()
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x9F8858", Offset = "0x9F8858", VA = "0x9F8858")]
		private bool SetupWaterSystems(bool isUnderwater, bool startingUnderwater = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x9F9B1C", Offset = "0x9F9B1C", VA = "0x9F9B1C")]
		private void UpdateUnderwaterFog()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x9F9D10", Offset = "0x9F9D10", VA = "0x9F9D10")]
		private void UpdateUnderwaterPostFX()
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x9F938C", Offset = "0x9F938C", VA = "0x9F938C")]
		private void UpdateSurfaceFog()
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x9F788C", Offset = "0x9F788C", VA = "0x9F788C")]
		private void DisableUnderwaterFX()
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x9F7ABC", Offset = "0x9F7ABC", VA = "0x9F7ABC")]
		private void EnableUnderwaterFX()
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x9F87F4", Offset = "0x9F87F4", VA = "0x9F87F4")]
		public void UpdateSurfaceFogSettings()
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x9F9F34", Offset = "0x9F9F34", VA = "0x9F9F34")]
		private void UpdateUnderwaterMaterial()
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x9F8798", Offset = "0x9F8798", VA = "0x9F8798")]
		private AudioSource GetAudioSource()
		{
			return null;
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x9FA22C", Offset = "0x9FA22C", VA = "0x9FA22C")]
		public void LoadUnderwaterSystemAssets()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x9FA230", Offset = "0x9FA230", VA = "0x9FA230")]
		public static bool IsUnderWater()
		{
			return default(bool);
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x9FA2D4", Offset = "0x9FA2D4", VA = "0x9FA2D4")]
		private Gradient CreateGradient()
		{
			return null;
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x9FA478", Offset = "0x9FA478", VA = "0x9FA478")]
		public void SetNewUnderwaterSoundFXVolume(float value)
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x9FA520", Offset = "0x9FA520", VA = "0x9FA520")]
		public GaiaUnderwaterEffects()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public class GaiaWaterProfile : ScriptableObject
	{
		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool m_reimportHDRPShader;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[HideInInspector]
		public bool m_multiSceneLightingSupport;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[HideInInspector]
		public bool m_renamingProfile;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[HideInInspector]
		public bool m_updateInRealtime;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public bool m_allowMSAA;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[HideInInspector]
		public bool m_useHDR;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		[HideInInspector]
		public bool m_enableDisabeHeightFeature;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public float m_disableHeight;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public string m_selectedProfile;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float m_interval;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public bool m_useCustomRenderDistance;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[HideInInspector]
		public bool m_enableLayerDistances;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public float m_customRenderDistance;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float[] m_customRenderDistances;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public GaiaPlanarReflections.PlanarReflectionSettings m_reflectionSettingsData;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public bool m_editSettings;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public int m_selectedWaterProfileValuesIndex;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public bool m_useCastics;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Light m_mainCausticLight;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public int m_causticFramePerSecond;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		public float m_causticSize;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public GameObject m_waterPrefab;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public GameObject m_underwaterParticles;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public GameObject m_underwaterHorizonPrefab;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public GameObject m_hdPlanarReflections;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public GameObject m_transitionFXPrefab;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<GaiaWaterProfileValues> m_waterProfiles;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Material m_activeWaterMaterial;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public bool m_enableWaterMeshQuality;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[HideInInspector]
		public GaiaConstants.WaterMeshQuality m_waterMeshQuality;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public GaiaConstants.MeshType m_meshType;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[HideInInspector]
		public int m_zSize;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public int m_xSize;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[HideInInspector]
		public int m_customMeshQuality;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public bool m_enableReflections;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		[HideInInspector]
		public bool m_disablePixelLights;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[HideInInspector]
		public GaiaConstants.GaiaProWaterReflectionsQuality m_reflectionResolution;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public int m_textureResolution;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[HideInInspector]
		public float m_clipPlaneOffset;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public LayerMask m_reflectedLayers;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[HideInInspector]
		public float m_hdrpReflectionIntensity;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public bool m_enableOceanFoam;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		[HideInInspector]
		public bool m_enableBeachFoam;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		[HideInInspector]
		public bool m_enableGPUInstancing;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
		[HideInInspector]
		public bool m_autoWindControlOnWater;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[HideInInspector]
		public bool m_supportUnderwaterEffects;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		[HideInInspector]
		public bool m_supportUnderwaterPostProcessing;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE")]
		[HideInInspector]
		public bool m_supportUnderwaterFog;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDF")]
		[HideInInspector]
		public bool m_supportUnderwaterParticles;

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xA04B94", Offset = "0xA04B94", VA = "0xA04B94")]
		public void UpdateTextureResolution()
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xA04BB4", Offset = "0xA04BB4", VA = "0xA04BB4")]
		public GaiaWaterProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029A")]
	public class GaiaWaterProfileValues
	{
		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58477C", Offset = "0x58477C")]
		public string m_typeOfWater;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_profileRename;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_userCustomProfile;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5847B4", Offset = "0x5847B4")]
		[SerializeField]
		private PostProcessProfile m_postProcessProfileBuiltIn;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string m_postProcessingProfileGUIDBuiltIn;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool m_directToCamera;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string m_postProcessingProfileGUIDURP;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public string m_postProcessingProfileGUIDHDRP;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x584810", Offset = "0x584810")]
		public Gradient m_underwaterFogGradient;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color m_underwaterFogColor;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float m_underwaterFogDepth;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float m_underwaterFogDistance;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float m_underwaterNearFogDistance;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float m_underwaterFogDensity;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float m_constUnderwaterPostExposure;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AnimationCurve m_gradientUnderwaterPostExposure;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color m_constUnderwaterColorFilter;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Gradient m_gradientUnderwaterColorFilter;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x584848", Offset = "0x584848")]
		public Texture2D m_colorDepthRamp;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Texture2D m_normalLayer0;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Texture2D m_normalLayer1;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Texture2D m_fadeNormal;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Texture2D m_foamTexture;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Texture2D m_foamAlphaRamp;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Texture2D m_renderTexture;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Texture2D m_foamBubbleTexture;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x584880", Offset = "0x584880")]
		public Gradient m_waterGradient;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public int m_gradientTextureResolution;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public int m_foamTiling;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public int m_waterTiling;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float m_shorelineMovement;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float m_waveCount;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float m_waveSpeed;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float m_waveSize;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float m_transparentDistance;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float m_foamDistance;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float m_reflectionDistortion;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float m_reflectionStrength;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public Color m_specularColor;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float m_metallic;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float m_smoothness;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float m_normalStrength0;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public float m_normalStrength1;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public float m_fadeNormalStrength;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public float m_fadeStart;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public float m_fadeDistance;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public float m_foamBubbleScale;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public int m_foamBubbleTiling;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public float m_foamStrength;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public float m_foamBubblesStrength;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public float m_foamEdge;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public float m_foamMoveSpeed;

		[Token(Token = "0x17000214")]
		public PostProcessProfile PostProcessProfileBuiltIn
		{
			[Token(Token = "0x6001565")]
			[Address(RVA = "0xA04CF4", Offset = "0xA04CF4", VA = "0xA04CF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001566")]
			[Address(RVA = "0xA04D68", Offset = "0xA04D68", VA = "0xA04D68")]
			set
			{
			}
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xA04D6C", Offset = "0xA04D6C", VA = "0xA04D6C")]
		private void RemoveWarnings()
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xA04E0C", Offset = "0xA04E0C", VA = "0xA04E0C")]
		public GaiaWaterProfileValues()
		{
		}
	}
	[Token(Token = "0x200029B")]
	[ExecuteAlways]
	public class GaiaPlanarReflections : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200059A")]
		public class PlanarReflectionSettings
		{
			[Token(Token = "0x4002FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool m_disableSkyboxReflections;

			[Token(Token = "0x4002FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool m_enableReflections;

			[Token(Token = "0x4002FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public GaiaConstants.ResolutionMulltiplier m_ResolutionMultiplier;

			[Token(Token = "0x4002FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float m_ClipPlaneOffset;

			[Token(Token = "0x4002FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public LayerMask m_ReflectLayers;

			[Token(Token = "0x4002FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool m_Shadows;

			[Token(Token = "0x4002FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool m_enableRenderDistance;

			[Token(Token = "0x4002FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool m_enableRenderDistances;

			[Token(Token = "0x4002FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float m_customRenderDistance;

			[Token(Token = "0x4002FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float[] m_customRenderDistances;

			[Token(Token = "0x4002FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int m_textureResolution;

			[Token(Token = "0x60023D8")]
			[Address(RVA = "0x91EDAC", Offset = "0x91EDAC", VA = "0x91EDAC")]
			public PlanarReflectionSettings()
			{
			}
		}

		[Token(Token = "0x200059B")]
		public class PlanarReflectionSettingData
		{
			[Token(Token = "0x4002FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool _fog;

			[Token(Token = "0x4002FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int _maxLod;

			[Token(Token = "0x4002FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float _lodBias;

			[Token(Token = "0x60023D9")]
			[Address(RVA = "0x91ECC8", Offset = "0x91ECC8", VA = "0x91ECC8")]
			public void Get()
			{
			}

			[Token(Token = "0x60023DA")]
			[Address(RVA = "0x91ED0C", Offset = "0x91ED0C", VA = "0x91ED0C")]
			public void Set()
			{
			}

			[Token(Token = "0x60023DB")]
			[Address(RVA = "0x91ED5C", Offset = "0x91ED5C", VA = "0x91ED5C")]
			public void Restore()
			{
			}

			[Token(Token = "0x60023DC")]
			[Address(RVA = "0x91EDA4", Offset = "0x91EDA4", VA = "0x91EDA4")]
			public PlanarReflectionSettingData()
			{
			}
		}

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlanarReflectionSettings m_settings;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlanarReflectionSettingData m_reflectionData;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera m_gameCamera;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private static Camera m_reflectionCamera;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RenderTexture m_reflectionTexture;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float[] m_distances;

		[Token(Token = "0x14000013")]
		public static event Action<ScriptableRenderContext, Camera> BeginPlanarReflections
		{
			[Token(Token = "0x6001569")]
			[Address(RVA = "0x803DE8", Offset = "0x803DE8", VA = "0x803DE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591660", Offset = "0x591660")]
			add
			{
			}
			[Token(Token = "0x600156A")]
			[Address(RVA = "0x803EA4", Offset = "0x803EA4", VA = "0x803EA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591670", Offset = "0x591670")]
			remove
			{
			}
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x803F60", Offset = "0x803F60", VA = "0x803F60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x804034", Offset = "0x804034", VA = "0x804034")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x8041E8", Offset = "0x8041E8", VA = "0x8041E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x8041EC", Offset = "0x8041EC", VA = "0x8041EC")]
		public void ExecutePlanarReflections(ScriptableRenderContext context, Camera cam)
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x804940", Offset = "0x804940", VA = "0x804940")]
		private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x804BE4", Offset = "0x804BE4", VA = "0x804BE4")]
		private static Vector3 ReflectPosition(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x804BEC", Offset = "0x804BEC", VA = "0x804BEC")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x804868", Offset = "0x804868", VA = "0x804868")]
		private void PlanarReflectionTexture()
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x804DAC", Offset = "0x804DAC", VA = "0x804DAC")]
		private Vector2Int ReflectionResolution(int textureSize, float scale)
		{
			return default(Vector2Int);
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x804E30", Offset = "0x804E30", VA = "0x804E30")]
		public void SetReflectionState(bool state)
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x804D20", Offset = "0x804D20", VA = "0x804D20")]
		private RenderTexture CreateReflectionTexture()
		{
			return null;
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x804038", Offset = "0x804038", VA = "0x804038")]
		private void Cleanup()
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x803F64", Offset = "0x803F64", VA = "0x803F64")]
		private void StartReflectionSystem()
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x804EEC", Offset = "0x804EEC", VA = "0x804EEC")]
		private Camera CreateMirrorObjects()
		{
			return null;
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x804E50", Offset = "0x804E50", VA = "0x804E50")]
		private static void SafeDestroy(GameObject obj)
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x805118", Offset = "0x805118", VA = "0x805118")]
		private void UpdateCamera(Camera src, Camera dest)
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x8051D4", Offset = "0x8051D4", VA = "0x8051D4")]
		private void SetCameraBackgroundType(Camera camera, CameraClearFlags backgroundRenderMode)
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x804360", Offset = "0x804360", VA = "0x804360")]
		private void UpdateReflectionCamera(Camera realCamera)
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x804DF8", Offset = "0x804DF8", VA = "0x804DF8")]
		private float GetScaleValue()
		{
			return default(float);
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x805288", Offset = "0x805288", VA = "0x805288")]
		public GaiaPlanarReflections()
		{
		}
	}
	[Token(Token = "0x200029C")]
	[ExecuteAlways]
	public class GaiaPlanarReflectionsHDRP : MonoBehaviour
	{
		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_renderEveryFrame;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_usePositionCheck;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera m_mainCamera;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_reflectionIntenisty;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool m_requestRender;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_lastPosition;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_lastRotation;

		[Token(Token = "0x17000215")]
		public bool RequestRender
		{
			[Token(Token = "0x600157F")]
			[Address(RVA = "0x80533C", Offset = "0x80533C", VA = "0x80533C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001580")]
			[Address(RVA = "0x805344", Offset = "0x805344", VA = "0x805344")]
			set
			{
			}
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x805368", Offset = "0x805368", VA = "0x805368")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x8053EC", Offset = "0x8053EC", VA = "0x8053EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x8053F0", Offset = "0x8053F0", VA = "0x8053F0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x8053F4", Offset = "0x8053F4", VA = "0x8053F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x805360", Offset = "0x805360", VA = "0x805360")]
		public void RequestReflectionRender()
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x8055D4", Offset = "0x8055D4", VA = "0x8055D4")]
		public void SetReflectionState(bool state)
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x8055D8", Offset = "0x8055D8", VA = "0x8055D8")]
		public void ReflectionsActive(bool active)
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x8055DC", Offset = "0x8055DC", VA = "0x8055DC")]
		public void UpdateReflectionIntensity(float newValue)
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x805444", Offset = "0x805444", VA = "0x805444")]
		private bool PositionChanged(Camera camera, bool usePositionCheck = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x8055E0", Offset = "0x8055E0", VA = "0x8055E0")]
		private void EditorUpdate()
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x8055FC", Offset = "0x8055FC", VA = "0x8055FC")]
		public GaiaPlanarReflectionsHDRP()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029D")]
	public class SceneConditionsData
	{
		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color m_sunColor;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_sunIntensity;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 m_sunDirection;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int m_hour;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_minute;

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x8C5A14", Offset = "0x8C5A14", VA = "0x8C5A14")]
		public SceneConditionsData()
		{
		}
	}
	[Token(Token = "0x200029E")]
	[ExecuteAlways]
	public class PWS_WaterSystem : MonoBehaviour
	{
		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private static PWS_WaterSystem m_instance;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_infiniteMode;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public GaiaConstants.WaterAutoUpdateMode m_autoUpdateMode;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneConditionsData SceneConditionsData;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_disableAllReflections;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool m_autoRefresh;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool m_ignoreSceneConditions;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_refreshRate;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_layersHasBeenSet;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public GaiaConstants.EnvironmentRenderer RenderPipeline;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SceneProfile m_waterProfile;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GaiaWaterProfileValues m_waterProfileValues;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform m_player;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Camera m_RenderCamera;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Camera m_gameCamera;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RenderingPath m_RenderPath;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Material> m_waterMaterialInstances;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Gradient m_currentGradient;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Texture2D m_waterTexture;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Texture2D m_currentWaterTexture;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool m_requestDepthTextureGeneration;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Light SunLight;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float m_minSurfaceLight;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float m_maxSurfaceLight;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool m_updatingSeaLevel;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float m_seaLevel;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GaiaPlanarReflections m_planarReflections;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool m_weatherSystemPresent;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool m_ableToRender;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float m_currentRefreshRate;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool m_hdr;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool m_rebuild;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int m_oldRenderTextureSize;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 m_worldPosition;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 m_normal;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 m_oldPosition;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 m_newPosition;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 m_euler;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private Vector4 m_clipPlane;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector3 m_currentPosition;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 m_currentRotation;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Matrix4x4 m_projection;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Matrix4x4 m_reflection;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private int m_frameCheck;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private bool m_sceneProfileExists;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		public RenderTexture m_reflectionTexture;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public Camera m_reflectionCamera;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private GaiaUnderwaterEffects m_underwaterFX;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private Material m_waterMaterial;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private bool m_rendererPresent;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private ProceduralWorldsGlobalWeather WeatherSystem;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private bool m_forceGenerateDepthTexture;

		[Token(Token = "0x4001EB0")]
		private const string m_reflectionName = "__MirrorReflection";

		[Token(Token = "0x4001EB1")]
		private const string m_reflectionIDName = "Mirror Refl Camera id";

		[Token(Token = "0x4001EB2")]
		private const string m_forText = " for ";

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		public GaiaConstants.PW_RENDER_SIZE renderSize;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public bool refractionEnabled;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public float directionAngle;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public int m_height;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		public float m_gizmoSize;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public Vector3 m_Size;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public Vector2 m_meshDensity;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		public GaiaConstants.MeshType m_MeshType;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public Mesh m_customWaterMesh;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Vector2 m_uvScale;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Vector3 m_sizeScale;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private List<int> m_triangles;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private List<Vector3> m_vertices;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private List<Vector2> m_uvs;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private Mesh m_generateMesh;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private Vector2Int m_numberOfPoints;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[SerializeField]
		private MeshRenderer m_meshRenderer;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[SerializeField]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x17000216")]
		public static PWS_WaterSystem Instance
		{
			[Token(Token = "0x600158D")]
			[Address(RVA = "0xF8D8EC", Offset = "0xF8D8EC", VA = "0xF8D8EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000217")]
		public bool InfiniteMode
		{
			[Token(Token = "0x600158E")]
			[Address(RVA = "0xF8D9CC", Offset = "0xF8D9CC", VA = "0xF8D9CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600158F")]
			[Address(RVA = "0xF8D9D4", Offset = "0xF8D9D4", VA = "0xF8D9D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000218")]
		public float SeaLevel
		{
			[Token(Token = "0x6001590")]
			[Address(RVA = "0xF8DA78", Offset = "0xF8DA78", VA = "0xF8DA78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001591")]
			[Address(RVA = "0xF8DA80", Offset = "0xF8DA80", VA = "0xF8DA80")]
			set
			{
			}
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xF8DD3C", Offset = "0xF8DD3C", VA = "0xF8DD3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xF8DDD4", Offset = "0xF8DDD4", VA = "0xF8DDD4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xF8E028", Offset = "0xF8E028", VA = "0xF8E028")]
		private void Update()
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xF8E268", Offset = "0xF8E268", VA = "0xF8E268")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xF8E524", Offset = "0xF8E524", VA = "0xF8E524")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xF8E610", Offset = "0xF8E610", VA = "0xF8E610")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xF8DDD8", Offset = "0xF8DDD8", VA = "0xF8DDD8")]
		public void StartAndOnEnabled()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xF8E02C", Offset = "0xF8E02C", VA = "0xF8E02C")]
		private void UpdateMode()
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xF8E27C", Offset = "0xF8E27C", VA = "0xF8E27C")]
		private void OnRenderObjectUpdate([Optional] Camera overrideCam)
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xF908CC", Offset = "0xF908CC", VA = "0xF908CC")]
		private void OnRenderSRP(ScriptableRenderContext src, Camera cam)
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xF90384", Offset = "0xF90384", VA = "0xF90384")]
		private bool CheckPositionAndRotation()
		{
			return default(bool);
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xF90838", Offset = "0xF90838", VA = "0xF90838")]
		private bool AutoRefresh()
		{
			return default(bool);
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xF90ACC", Offset = "0xF90ACC", VA = "0xF90ACC")]
		private bool CheckSceneConditions()
		{
			return default(bool);
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xF8F30C", Offset = "0xF8F30C", VA = "0xF8F30C")]
		private void SyncAutoRefresh()
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xF90C58", Offset = "0xF90C58", VA = "0xF90C58")]
		private void SetSceneConditionsData()
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xF8F0F4", Offset = "0xF8F0F4", VA = "0xF8F0F4")]
		public void Generate(SceneProfile profile)
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xF91574", Offset = "0xF91574", VA = "0xF91574")]
		public void CreateWaterMaterialInstances(List<Material> materials)
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xF90DBC", Offset = "0xF90DBC", VA = "0xF90DBC")]
		public void SetWaterShader(Material masterMaterial, GaiaConstants.EnvironmentRenderer renderPipeline)
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xF91920", Offset = "0xF91920", VA = "0xF91920")]
		public void GenerateColorDepth()
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xF8DAA4", Offset = "0xF8DAA4", VA = "0xF8DAA4")]
		public void UpdateSeaLevel(float seaLevel, bool regenerateWaterReflections = false)
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xF8E838", Offset = "0xF8E838", VA = "0xF8E838")]
		private List<Material> GetWaterMaterialInstances()
		{
			return null;
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xF8F3BC", Offset = "0xF8F3BC", VA = "0xF8F3BC")]
		private void BuildWaterColorDepth()
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xF91BE4", Offset = "0xF91BE4", VA = "0xF91BE4")]
		private bool ValidateDepthRamp(bool forceUpdate = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xF91D0C", Offset = "0xF91D0C", VA = "0xF91D0C")]
		private void CalculateSmoothnessRay(SceneProfile profile, float smoothness, float range)
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xF8E530", Offset = "0xF8E530", VA = "0xF8E530")]
		private void ClearAllData()
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xF8EB34", Offset = "0xF8EB34", VA = "0xF8EB34")]
		private bool CheckRendererComponent()
		{
			return default(bool);
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xF8E614", Offset = "0xF8E614", VA = "0xF8E614")]
		private void LoadResources()
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xF8F3B8", Offset = "0xF8F3B8", VA = "0xF8F3B8")]
		private void UpdateAura()
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xF90018", Offset = "0xF90018", VA = "0xF90018")]
		private void UpdateInfiniteMode()
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xF91FFC", Offset = "0xF91FFC", VA = "0xF91FFC")]
		private void UpdateInfiniteModeEditor()
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xF8D9F8", Offset = "0xF8D9F8", VA = "0xF8D9F8")]
		private void SetInfiniteMode(bool active)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xF8EBC0", Offset = "0xF8EBC0", VA = "0xF8EBC0")]
		private void ProcessOnEnableReflections()
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xF90150", Offset = "0xF90150", VA = "0xF90150")]
		public void ClearData(bool dataOnly = false)
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xF90620", Offset = "0xF90620", VA = "0xF90620")]
		private void BuildReflection(SceneProfile profile)
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xF923F8", Offset = "0xF923F8", VA = "0xF923F8")]
		private void ResyncCameraSettings(SceneProfile profile)
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xF925CC", Offset = "0xF925CC", VA = "0xF925CC")]
		private void UpdateCameraModes()
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xF91484", Offset = "0xF91484", VA = "0xF91484")]
		private void CreateMirrorObjects(SceneProfile profile)
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xF92698", Offset = "0xF92698", VA = "0xF92698")]
		private void CreateTexture(SceneProfile profile)
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xF90FC0", Offset = "0xF90FC0", VA = "0xF90FC0")]
		private void GenerateCamera(SceneProfile profile)
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xF92384", Offset = "0xF92384", VA = "0xF92384")]
		private void GenerateReflection(SceneProfile profile, bool reflectionsEnabled)
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xF92CE4", Offset = "0xF92CE4", VA = "0xF92CE4")]
		private Vector4 CameraSpacePlane(SceneProfile profile, Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xF92E14", Offset = "0xF92E14", VA = "0xF92E14")]
		private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xF92814", Offset = "0xF92814", VA = "0xF92814")]
		private void UpdateBuiltInPlanarReflections(SceneProfile profile, bool reflectionsEnabled)
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xF930B8", Offset = "0xF930B8", VA = "0xF930B8")]
		public void SetReflectionTexture([Optional] Texture overrideTex)
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xF922C8", Offset = "0xF922C8", VA = "0xF922C8")]
		private void RemoveBuiltInReflectionCamera(Camera cam)
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xF92240", Offset = "0xF92240", VA = "0xF92240")]
		private void UpdateURPPlanarReflections()
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xF931F0", Offset = "0xF931F0", VA = "0xF931F0")]
		private GaiaPlanarReflections CreatePlanarReflections(bool hideObject = true)
		{
			return null;
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xF93388", Offset = "0xF93388", VA = "0xF93388")]
		private void ResyncPlanarReflectionSettings()
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xF92000", Offset = "0xF92000", VA = "0xF92000")]
		private void RemoveURPPlanarReflections()
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xF92380", Offset = "0xF92380", VA = "0xF92380")]
		private void UpdateHDPPlanarReflections()
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xF93480", Offset = "0xF93480", VA = "0xF93480")]
		private void ResyncHDRPPlanarReflectionSettings()
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xF92160", Offset = "0xF92160", VA = "0xF92160")]
		private void RemoveHDPRPlanarReflections()
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xF8F558", Offset = "0xF8F558", VA = "0xF8F558")]
		public void UpdateShaderValues(GaiaWaterProfileValues profileValues)
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xF93484", Offset = "0xF93484", VA = "0xF93484")]
		public static void SetSunLight(Light light)
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xF8EC34", Offset = "0xF8EC34", VA = "0xF8EC34")]
		public void RefractionInit()
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xF8FEE0", Offset = "0xF8FEE0", VA = "0xF8FEE0")]
		private void SendWindDirection()
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xF8EE04", Offset = "0xF8EE04", VA = "0xF8EE04")]
		private void SendWaterEdge()
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xF8ED20", Offset = "0xF8ED20", VA = "0xF8ED20")]
		private void SendNormalMaps()
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xF8EEE0", Offset = "0xF8EEE0", VA = "0xF8EEE0")]
		private void SendWaveData()
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xF9353C", Offset = "0xF9353C", VA = "0xF9353C")]
		public void ProceduralMeshGeneration()
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xF9391C", Offset = "0xF9391C", VA = "0xF9391C")]
		private void SizeGeneration()
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xF93A94", Offset = "0xF93A94", VA = "0xF93A94")]
		private void VerticesGeneration()
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xF93D08", Offset = "0xF93D08", VA = "0xF93D08")]
		private void TriangleGeneration()
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xF942D8", Offset = "0xF942D8", VA = "0xF942D8")]
		private void NormalGeneration()
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xF940CC", Offset = "0xF940CC", VA = "0xF940CC")]
		private void UVGeneration()
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xF942F4", Offset = "0xF942F4", VA = "0xF942F4")]
		private void BoundsGeneration()
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xF94310", Offset = "0xF94310", VA = "0xF94310")]
		public void ClearMeshData()
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xF943AC", Offset = "0xF943AC", VA = "0xF943AC")]
		private static int GetPoint(int Center, int Extent)
		{
			return default(int);
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xF93A40", Offset = "0xF93A40", VA = "0xF93A40")]
		public int CalculatePolysRequired()
		{
			return default(int);
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xF943E0", Offset = "0xF943E0", VA = "0xF943E0")]
		public PWS_WaterSystem()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public enum ReflectionMaskerChannelSelection
	{
		[Token(Token = "0x4001EC6")]
		R,
		[Token(Token = "0x4001EC7")]
		G,
		[Token(Token = "0x4001EC8")]
		B,
		[Token(Token = "0x4001EC9")]
		A,
		[Token(Token = "0x4001ECA")]
		RGBA
	}
	[Serializable]
	[Token(Token = "0x20002A0")]
	public class ReflectionMaskerData
	{
		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D m_maskingTexture;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReflectionMaskerChannelSelection m_channelSelection;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_minValue;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_maxValue;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool m_enableReflections;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool m_allowMSAA;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool m_enableHDR;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool m_enableHeightFeatures;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_disableHeightValue;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool m_enableCustomDistance;

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool m_enableMultiLayerDistances;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_reflectionDistance;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float[] m_reflectionDistances;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GaiaPlanarReflections m_planarReflections;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GaiaPlanarReflectionsHDRP m_planarReflectionsHDRP;

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xB955A4", Offset = "0xB955A4", VA = "0xB955A4")]
		public void Process(SceneProfile sceneProfile, bool state)
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xB957A8", Offset = "0xB957A8", VA = "0xB957A8")]
		public void Get(SceneProfile profile)
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xB95904", Offset = "0xB95904", VA = "0xB95904")]
		public void Set(SceneProfile profile)
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xB95874", Offset = "0xB95874", VA = "0xB95874")]
		public void SetState(SceneProfile profile, bool state)
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xB95794", Offset = "0xB95794", VA = "0xB95794")]
		public ReflectionMaskerData()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class ReflectionMasker : MonoBehaviour
	{
		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Player;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ReflectionMaskerData m_reflectionMaskerData;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_needUpdating;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector3 m_oldPosition;

		[Token(Token = "0x17000219")]
		public ReflectionMaskerData ReflectionMaskerData
		{
			[Token(Token = "0x60015DD")]
			[Address(RVA = "0xB94D44", Offset = "0xB94D44", VA = "0xB94D44")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015DE")]
			[Address(RVA = "0xB94D4C", Offset = "0xB94D4C", VA = "0xB94D4C")]
			set
			{
			}
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xB94EF0", Offset = "0xB94EF0", VA = "0xB94EF0")]
		private void Start()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xB94FEC", Offset = "0xB94FEC", VA = "0xB94FEC")]
		private void Update()
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xB94DA0", Offset = "0xB94DA0", VA = "0xB94DA0")]
		public void Execute()
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xB950E0", Offset = "0xB950E0", VA = "0xB950E0")]
		private bool CheckPoint(Texture2D maskTexture, Vector3 position, float min, float max)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xB9558C", Offset = "0xB9558C", VA = "0xB9558C")]
		private bool DoesNeedUpdating(bool newValue)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xB95020", Offset = "0xB95020", VA = "0xB95020")]
		private bool DoesNeedExecute()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xB94F14", Offset = "0xB94F14", VA = "0xB94F14")]
		private void Initilize()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xB955D0", Offset = "0xB955D0", VA = "0xB955D0")]
		public Transform GetPlayer()
		{
			return null;
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xB95724", Offset = "0xB95724", VA = "0xB95724")]
		public ReflectionMasker()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x571CF8", Offset = "0x571CF8")]
	public class WindManager : MonoBehaviour
	{
		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_useWindAudio;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float windGlobalMaxDist;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector4 windGlobals;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector4 windGlobalsB;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip m_windAudioClip;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_windTransitionTime;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private WindZone m_windZone;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource m_windAudioSource;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_shaderPropertyIDWindGlobals;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_shaderPropertyIDWindGlobalsB;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 m_windDirection;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector4 m_targetWindGlobals;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_windTime;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_canProcessWind;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_currentWindSpeed;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_currentWindVolume;

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x940F80", Offset = "0x940F80", VA = "0x940F80")]
		private void Start()
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x9411A0", Offset = "0x9411A0", VA = "0x9411A0")]
		private void Update()
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x9415F0", Offset = "0x9415F0", VA = "0x9415F0")]
		public void InstantWindApply()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x9411E8", Offset = "0x9411E8", VA = "0x9411E8")]
		public void UpdateWind()
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x940F84", Offset = "0x940F84", VA = "0x940F84")]
		private void Setup()
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x9413A8", Offset = "0x9413A8", VA = "0x9413A8")]
		private void CheckWindVolume()
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x941458", Offset = "0x941458", VA = "0x941458")]
		private void ProcessWindAudio()
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x941800", Offset = "0x941800", VA = "0x941800")]
		private AudioSource GetWindAudioSource()
		{
			return null;
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x941720", Offset = "0x941720", VA = "0x941720")]
		private WindZone GetWindZone()
		{
			return null;
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x941948", Offset = "0x941948", VA = "0x941948")]
		public static void RemoveWindManager()
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x9419FC", Offset = "0x9419FC", VA = "0x9419FC")]
		public WindManager()
		{
		}
	}
}
namespace Gaia.ShaderUtilities
{
	[Token(Token = "0x20002A3")]
	public enum ShaderIDs
	{
		[Token(Token = "0x4001EEF")]
		Null,
		[Token(Token = "0x4001EF0")]
		PW_General_Forward,
		[Token(Token = "0x4001EF1")]
		PW_General_Deferred
	}
	[Token(Token = "0x20002A4")]
	public static class PWShaderNameUtility
	{
		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] ShaderName;
	}
}
namespace Gaia.Pipeline
{
	[Token(Token = "0x20002A5")]
	public enum GaiaPackageVersion
	{
		[Token(Token = "0x4001EF4")]
		Unity2019_1,
		[Token(Token = "0x4001EF5")]
		Unity2019_2,
		[Token(Token = "0x4001EF6")]
		Unity2019_3,
		[Token(Token = "0x4001EF7")]
		Unity2019_4,
		[Token(Token = "0x4001EF8")]
		Unity2020_1,
		[Token(Token = "0x4001EF9")]
		Unity2020_2,
		[Token(Token = "0x4001EFA")]
		Unity2020_3,
		[Token(Token = "0x4001EFB")]
		Unity2020_4,
		[Token(Token = "0x4001EFC")]
		Unity2021_1,
		[Token(Token = "0x4001EFD")]
		Unity2021_2,
		[Token(Token = "0x4001EFE")]
		Unity2021_3,
		[Token(Token = "0x4001EFF")]
		Unity2021_4,
		[Token(Token = "0x4001F00")]
		Unity2022_1,
		[Token(Token = "0x4001F01")]
		Unity2022_2,
		[Token(Token = "0x4001F02")]
		Unity2022_3,
		[Token(Token = "0x4001F03")]
		Unity2022_4,
		[Token(Token = "0x4001F04")]
		Unity2023_1
	}
	[Serializable]
	[Token(Token = "0x20002A6")]
	public class UnityVersionPipelineAsset
	{
		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GaiaPackageVersion m_unityVersion;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_pipelineAssetName;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_verifiedSRPVersion;

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xC5F23C", Offset = "0xC5F23C", VA = "0xC5F23C")]
		public UnityVersionPipelineAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A7")]
	public class GaiaPackageSettings
	{
		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5849E8", Offset = "0x5849E8")]
		public string m_version;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_isSupported;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public GaiaPackageVersion m_unityVersion;

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x803D8C", Offset = "0x803D8C", VA = "0x803D8C")]
		public GaiaPackageSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A8")]
	public class ShaderMappingEntry
	{
		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_builtInShaderName;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_URPReplacementShaderName;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_HDRPReplacementShaderName;

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x8C968C", Offset = "0x8C968C", VA = "0x8C968C")]
		public ShaderMappingEntry()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A9")]
	public class ShaderFloatCheck
	{
		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_floatValue;

		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_shaderKeyWord;

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x8C9684", Offset = "0x8C9684", VA = "0x8C9684")]
		public ShaderFloatCheck()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class UnityPipelineProfile : ScriptableObject
	{
		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x584A20", Offset = "0x584A20")]
		public GaiaConstants.EnvironmentRenderer m_activePipelineInstalled;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GaiaSettings m_gaiaSettings;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool m_editorUpdates;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[HideInInspector]
		public bool m_pipelineSwitchUpdates;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x584A78", Offset = "0x584A78")]
		public Material m_underwaterHorizonMaterial;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x584AB0", Offset = "0x584AB0")]
		public string m_builtInHorizonObjectShader;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material m_builtInTerrainMaterial;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool m_BuiltInAutoConfigureWater;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x584AE8", Offset = "0x584AE8")]
		public List<UnityVersionPipelineAsset> m_universalPipelineProfiles;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string m_universalScriptDefine;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string m_universalHorizonObjectShader;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Material m_universalTerrainMaterial;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool m_setUPPipelineProfile;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool m_UPAutoConfigureTerrain;

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool m_UPAutoConfigureWater;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		public bool m_UPAutoConfigureCamera;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool m_UPAutoConfigureProbes;

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		public bool m_UPAutoConfigureLighting;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		public bool m_UPAutoConfigureBiomePostFX;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public List<UnityVersionPipelineAsset> m_lightweightPipelineProfiles;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public string m_lightweightScriptDefine;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public string m_lightweightHorizonObjectShader;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Material m_lightweightTerrainMaterial;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public bool m_setLWPipelineProfile;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[HideInInspector]
		public bool m_LWAutoConfigureTerrain;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		[HideInInspector]
		public bool m_LWAutoConfigureWater;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		[HideInInspector]
		public bool m_LWAutoConfigureCamera;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[HideInInspector]
		public bool m_LWAutoConfigureProbes;

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		[HideInInspector]
		public bool m_LWAutoConfigureLighting;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x584BC0", Offset = "0x584BC0")]
		public List<UnityVersionPipelineAsset> m_highDefinitionPipelineProfiles;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string m_highDefinitionScriptDefine;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string m_highDefinitionHorizonObjectShader;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Material m_highDefinitionTerrainMaterial;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string m_HDVolumeObjectName;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string m_HDPostVolumeObjectName;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public string m_HDDefaultPostProcessing;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string m_HDDefaultSceneLighting;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public string m_2019_3HDDefaultSceneLighting;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public string m_HDSceneLighting;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public string m_2019_3HDSceneLighting;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool m_setHDPipelineProfile;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		public bool m_HDAutoConfigureTerrain;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
		public bool m_HDAutoConfigureWater;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFB")]
		public bool m_HDAutoConfigureCamera;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public bool m_HDAutoConfigureProbes;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
		public bool m_HDAutoConfigureLighting;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFE")]
		public bool m_HDDisableTerrainDetails;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFF")]
		public bool m_HDAutoConfigureBiomePostFX;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x584BF8", Offset = "0x584BF8")]
		[HideInInspector]
		public ShaderMappingEntry[] m_ShaderMappingLibrary;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public GaiaPackageSettings[] m_packageSetupSettings;

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xC5EFDC", Offset = "0xC5EFDC", VA = "0xC5EFDC")]
		public UnityPipelineProfile()
		{
		}
	}
}
namespace Gaia.Pipeline.URP
{
	[Token(Token = "0x20002AB")]
	public static class GaiaURPRuntimeUtils
	{
		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x9F761C", Offset = "0x9F761C", VA = "0x9F761C")]
		public static void ConfigureReflectionProbes()
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x9F776C", Offset = "0x9F776C", VA = "0x9F776C")]
		public static void ConfigureTerrain(UnityPipelineProfile profile)
		{
		}
	}
}
namespace Gaia.Pipeline.HDRP
{
	[Token(Token = "0x20002AC")]
	public static class GaiaHDRPRuntimeUtils
	{
		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x829008", Offset = "0x829008", VA = "0x829008")]
		public static void RemovePostProcesing(UnityPipelineProfile pipelineProfile)
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x8290C0", Offset = "0x8290C0", VA = "0x8290C0")]
		public static void ConfigureReflectionProbes()
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x829130", Offset = "0x829130", VA = "0x829130")]
		public static void ConfigureTerrain(UnityPipelineProfile profile)
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x8291D0", Offset = "0x8291D0", VA = "0x8291D0")]
		public static void SyncUserHDRPEnvironmentProfile()
		{
		}
	}
}
namespace Gaia.GXC.EEProductions
{
	[Token(Token = "0x20002AD")]
	public class uConstruct : MonoBehaviour
	{
		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x91A85C", Offset = "0x91A85C", VA = "0x91A85C")]
		public static string GetPublisherName()
		{
			return null;
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x91A8A0", Offset = "0x91A8A0", VA = "0x91A8A0")]
		public static string GetPackageName()
		{
			return null;
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x91A8E4", Offset = "0x91A8E4", VA = "0x91A8E4")]
		public static string GetPackageImage()
		{
			return null;
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x91A928", Offset = "0x91A928", VA = "0x91A928")]
		public static string GetPackageDescription()
		{
			return null;
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x91A96C", Offset = "0x91A96C", VA = "0x91A96C")]
		public static string GetPackageURL()
		{
			return null;
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x91A9B0", Offset = "0x91A9B0", VA = "0x91A9B0")]
		public uConstruct()
		{
		}
	}
}
namespace Gaia.GXC.Kronnect
{
	[Token(Token = "0x20002AE")]
	public class VolumetricFog : MonoBehaviour
	{
		[Token(Token = "0x6001605")]
		[Address(RVA = "0x93D218", Offset = "0x93D218", VA = "0x93D218")]
		public static string GetPublisherName()
		{
			return null;
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x93D25C", Offset = "0x93D25C", VA = "0x93D25C")]
		public static string GetPackageName()
		{
			return null;
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x93D2A0", Offset = "0x93D2A0", VA = "0x93D2A0")]
		public static string GetPackageImage()
		{
			return null;
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x93D2E4", Offset = "0x93D2E4", VA = "0x93D2E4")]
		public static string GetPackageDescription()
		{
			return null;
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x93D328", Offset = "0x93D328", VA = "0x93D328")]
		public static string GetPackageURL()
		{
			return null;
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x93D36C", Offset = "0x93D36C", VA = "0x93D36C")]
		public VolumetricFog()
		{
		}
	}
}
namespace Gaia.GXC.ThreeDForge
{
	[Token(Token = "0x20002AF")]
	public class VillageExteriorsKit : MonoBehaviour
	{
		[Token(Token = "0x600160B")]
		[Address(RVA = "0x93D0BC", Offset = "0x93D0BC", VA = "0x93D0BC")]
		public static string GetPublisherName()
		{
			return null;
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x93D100", Offset = "0x93D100", VA = "0x93D100")]
		public static string GetPackageName()
		{
			return null;
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x93D144", Offset = "0x93D144", VA = "0x93D144")]
		public static string GetPackageImage()
		{
			return null;
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x93D188", Offset = "0x93D188", VA = "0x93D188")]
		public static string GetPackageDescription()
		{
			return null;
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x93D1CC", Offset = "0x93D1CC", VA = "0x93D1CC")]
		public static string GetPackageURL()
		{
			return null;
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x93D210", Offset = "0x93D210", VA = "0x93D210")]
		public VillageExteriorsKit()
		{
		}
	}
}
namespace Gaia.GXC.Opsive
{
	[Token(Token = "0x20002B0")]
	public class ThirdPersonController : MonoBehaviour
	{
		[Token(Token = "0x6001611")]
		[Address(RVA = "0xA249C4", Offset = "0xA249C4", VA = "0xA249C4")]
		public static string GetPublisherName()
		{
			return null;
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xA24A08", Offset = "0xA24A08", VA = "0xA24A08")]
		public static string GetPackageName()
		{
			return null;
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xA24A4C", Offset = "0xA24A4C", VA = "0xA24A4C")]
		public static string GetPackageImage()
		{
			return null;
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xA24A90", Offset = "0xA24A90", VA = "0xA24A90")]
		public static string GetPackageDescription()
		{
			return null;
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xA24AD4", Offset = "0xA24AD4", VA = "0xA24AD4")]
		public static string GetPackageURL()
		{
			return null;
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xA24B18", Offset = "0xA24B18", VA = "0xA24B18")]
		public ThirdPersonController()
		{
		}
	}
}
namespace Gaia.GXC.TanukiDigital
{
	[Token(Token = "0x20002B1")]
	public class TenkokuDynamicSky : MonoBehaviour
	{
		[Token(Token = "0x6001617")]
		[Address(RVA = "0xB05644", Offset = "0xB05644", VA = "0xB05644")]
		public static string GetPublisherName()
		{
			return null;
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xB05688", Offset = "0xB05688", VA = "0xB05688")]
		public static string GetPackageName()
		{
			return null;
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xB056CC", Offset = "0xB056CC", VA = "0xB056CC")]
		public static string GetPackageImage()
		{
			return null;
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xB05710", Offset = "0xB05710", VA = "0xB05710")]
		public static string GetPackageDescription()
		{
			return null;
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xB05754", Offset = "0xB05754", VA = "0xB05754")]
		public static string GetPackageURL()
		{
			return null;
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xB05798", Offset = "0xB05798", VA = "0xB05798")]
		public TenkokuDynamicSky()
		{
		}
	}
}
namespace Gaia.GXC.GameTexturesCom
{
	[Token(Token = "0x20002B2")]
	public class GameTexturesCom : MonoBehaviour
	{
		[Token(Token = "0x600161D")]
		[Address(RVA = "0xBF5E00", Offset = "0xBF5E00", VA = "0xBF5E00")]
		public static string GetPublisherName()
		{
			return null;
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xBF5E44", Offset = "0xBF5E44", VA = "0xBF5E44")]
		public static string GetPackageName()
		{
			return null;
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xBF5E88", Offset = "0xBF5E88", VA = "0xBF5E88")]
		public static string GetPackageImage()
		{
			return null;
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xBF5ECC", Offset = "0xBF5ECC", VA = "0xBF5ECC")]
		public static string GetPackageDescription()
		{
			return null;
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xBF5F10", Offset = "0xBF5F10", VA = "0xBF5F10")]
		public static string GetPackageURL()
		{
			return null;
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xBF5F54", Offset = "0xBF5F54", VA = "0xBF5F54")]
		public GameTexturesCom()
		{
		}
	}
}
namespace Gaia.GXC.RandomchaosLtd
{
	[Token(Token = "0x20002B3")]
	public class DistingoGaiaExtension : MonoBehaviour
	{
		[Token(Token = "0x6001623")]
		[Address(RVA = "0xA1E02C", Offset = "0xA1E02C", VA = "0xA1E02C")]
		public static string GetPublisherName()
		{
			return null;
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xA1E070", Offset = "0xA1E070", VA = "0xA1E070")]
		public static string GetPackageName()
		{
			return null;
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xA1E0B4", Offset = "0xA1E0B4", VA = "0xA1E0B4")]
		public static string GetPackageImage()
		{
			return null;
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xA1E0F8", Offset = "0xA1E0F8", VA = "0xA1E0F8")]
		public static string GetPackageDescription()
		{
			return null;
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xA1E13C", Offset = "0xA1E13C", VA = "0xA1E13C")]
		public static string GetPackageURL()
		{
			return null;
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xA1E180", Offset = "0xA1E180", VA = "0xA1E180")]
		public DistingoGaiaExtension()
		{
		}
	}
}
namespace Gaia.GXC.SpeedTree
{
	[Token(Token = "0x20002B4")]
	public class DesktopGroundCoverPackage : MonoBehaviour
	{
		[Token(Token = "0x6001629")]
		[Address(RVA = "0xA1CBF4", Offset = "0xA1CBF4", VA = "0xA1CBF4")]
		public static string GetPublisherName()
		{
			return null;
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xA1CC38", Offset = "0xA1CC38", VA = "0xA1CC38")]
		public static string GetPackageName()
		{
			return null;
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xA1CC7C", Offset = "0xA1CC7C", VA = "0xA1CC7C")]
		public static string GetPackageImage()
		{
			return null;
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xA1CCC0", Offset = "0xA1CCC0", VA = "0xA1CCC0")]
		public static string GetPackageDescription()
		{
			return null;
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xA1CD04", Offset = "0xA1CD04", VA = "0xA1CD04")]
		public static string GetPackageURL()
		{
			return null;
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xA1CD48", Offset = "0xA1CD48", VA = "0xA1CD48")]
		public DesktopGroundCoverPackage()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public class DesktopTreesPackage : MonoBehaviour
	{
		[Token(Token = "0x600162F")]
		[Address(RVA = "0xA1CD50", Offset = "0xA1CD50", VA = "0xA1CD50")]
		public static string GetPublisherName()
		{
			return null;
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xA1CD94", Offset = "0xA1CD94", VA = "0xA1CD94")]
		public static string GetPackageName()
		{
			return null;
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xA1CDD8", Offset = "0xA1CDD8", VA = "0xA1CDD8")]
		public static string GetPackageImage()
		{
			return null;
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xA1CE1C", Offset = "0xA1CE1C", VA = "0xA1CE1C")]
		public static string GetPackageDescription()
		{
			return null;
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xA1CE60", Offset = "0xA1CE60", VA = "0xA1CE60")]
		public static string GetPackageURL()
		{
			return null;
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xA1CEA4", Offset = "0xA1CEA4", VA = "0xA1CEA4")]
		public DesktopTreesPackage()
		{
		}
	}
}
namespace Gaia.GXC.PolyPixel
{
	[Token(Token = "0x20002B6")]
	public class CountrySidePack : MonoBehaviour
	{
		[Token(Token = "0x6001635")]
		[Address(RVA = "0xA14E68", Offset = "0xA14E68", VA = "0xA14E68")]
		public static string GetPublisherName()
		{
			return null;
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xA14EAC", Offset = "0xA14EAC", VA = "0xA14EAC")]
		public static string GetPackageName()
		{
			return null;
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xA14EF0", Offset = "0xA14EF0", VA = "0xA14EF0")]
		public static string GetPackageImage()
		{
			return null;
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xA14F34", Offset = "0xA14F34", VA = "0xA14F34")]
		public static string GetPackageDescription()
		{
			return null;
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xA14F78", Offset = "0xA14F78", VA = "0xA14F78")]
		public static string GetPackageURL()
		{
			return null;
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xA14FBC", Offset = "0xA14FBC", VA = "0xA14FBC")]
		public CountrySidePack()
		{
		}
	}
}
namespace Gaia.GXC.Dogmatic
{
	[Token(Token = "0x20002B7")]
	public class AQUASWaterSet : MonoBehaviour
	{
		[Token(Token = "0x600163B")]
		[Address(RVA = "0x12D0020", Offset = "0x12D0020", VA = "0x12D0020")]
		public static string GetPublisherName()
		{
			return null;
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x12D0064", Offset = "0x12D0064", VA = "0x12D0064")]
		public static string GetPackageName()
		{
			return null;
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x12D00A8", Offset = "0x12D00A8", VA = "0x12D00A8")]
		public static string GetPackageImage()
		{
			return null;
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x12D00EC", Offset = "0x12D00EC", VA = "0x12D00EC")]
		public static string GetPackageDescription()
		{
			return null;
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x12D0130", Offset = "0x12D0130", VA = "0x12D0130")]
		public static string GetPackageURL()
		{
			return null;
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x12D0174", Offset = "0x12D0174", VA = "0x12D0174")]
		public AQUASWaterSet()
		{
		}
	}
}
namespace PWCommon2
{
	[Token(Token = "0x20002B8")]
	public class AppConfig
	{
		[Token(Token = "0x4001F42")]
		public const string VERSION = "1";

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string CfgVersion;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double LastUpdated;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string MinUnity;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly Texture2D Logo;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string NameSpace;

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string Folder;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string ScriptsFolder;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly string EditorScriptsFolder;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly string DocsFolder;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly string DocsFolderSpaced;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public readonly string MajorVersion;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public readonly string MinorVersion;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public readonly string PatchVersion;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public readonly string Version;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public readonly SystemLanguage[] AvailableLanguages;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public readonly string TutorialsLink;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public readonly string DiscordLink;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public readonly string SupportLink;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public readonly string ASLink;

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public readonly string NewsURLStripped;

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public readonly bool HasWelcome;

		[Token(Token = "0x1700021A")]
		public string NewsURL
		{
			[Token(Token = "0x6001641")]
			[Address(RVA = "0x881774", Offset = "0x881774", VA = "0x881774")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x8818F8", Offset = "0x8818F8", VA = "0x8818F8")]
		public AppConfig(string minUnity, string name, SystemLanguage[] availableLanguages)
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x881BE0", Offset = "0x881BE0", VA = "0x881BE0")]
		public AppConfig(string cfgVersion, double lastUpdated, string minUnity, string name, Texture2D logo, string nameSpace, string folder, string scriptsFolder, string editorScriptsFolder, string docsFolder, string majorVer, string minorVer, string patchVer, SystemLanguage[] availableLang, string tutorialsLink, string discordLink, string supportLink, string asLink, string newsURL, bool hasWelcome)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B9")]
	public class DropStack<T> : ISerializationCallbackReceiver
	{
		[NonSerialized]
		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected T[] m_items;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected int m_topIndex;

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected int m_count;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected bool _nullableType;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int _capacity;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private T[] _activeItems;

		[Token(Token = "0x1700021B")]
		public int Capacity
		{
			[Token(Token = "0x6001644")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700021C")]
		public int Count
		{
			[Token(Token = "0x6001645")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001646")]
		private DropStack()
		{
		}

		[Token(Token = "0x6001647")]
		public DropStack(int capacity)
		{
		}

		[Token(Token = "0x6001648")]
		public DropStack(int capacity, List<T> items)
		{
		}

		[Token(Token = "0x6001649")]
		public DropStack(int capacity, T[] items)
		{
		}

		[Token(Token = "0x600164A")]
		public void Push(T item)
		{
		}

		[Token(Token = "0x600164B")]
		public void Push(IEnumerable<T> items)
		{
		}

		[Token(Token = "0x600164C")]
		public T Pop()
		{
			return (T)null;
		}

		[Token(Token = "0x600164D")]
		public T Peek()
		{
			return (T)null;
		}

		[Token(Token = "0x600164E")]
		public List<T> ToList()
		{
			return null;
		}

		[Token(Token = "0x600164F")]
		public T[] ToArray()
		{
			return null;
		}

		[Token(Token = "0x6001650")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001651")]
		public void OnAfterDeserialize()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BA")]
	public class UBrush
	{
		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int m_size;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float[] m_strength;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Texture2D m_brush;

		[Token(Token = "0x4001F62")]
		private const int MIN_BRUSH_SIZE = 3;

		[Token(Token = "0x1700021D")]
		private int Size
		{
			[Token(Token = "0x6001652")]
			[Address(RVA = "0xA369C8", Offset = "0xA369C8", VA = "0xA369C8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xA369D0", Offset = "0xA369D0", VA = "0xA369D0")]
		public static UBrush GetBrush(Texture2D brushTexture, int size)
		{
			return null;
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xA36D60", Offset = "0xA36D60", VA = "0xA36D60")]
		public UBrush GetInSize(int size)
		{
			return null;
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xA36B44", Offset = "0xA36B44", VA = "0xA36B44")]
		public bool Load(Texture2D brushTex, int size)
		{
			return default(bool);
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xA36ECC", Offset = "0xA36ECC", VA = "0xA36ECC")]
		public float GetStrengthAtCoords(int ix, int iy)
		{
			return default(float);
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xA36B3C", Offset = "0xA36B3C", VA = "0xA36B3C")]
		public UBrush()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class Utils : MonoBehaviour
	{
		[Token(Token = "0x6001658")]
		[Address(RVA = "0xC5F394", Offset = "0xC5F394", VA = "0xC5F394")]
		public static string FixFileName(string sourceFileName)
		{
			return null;
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xC5F48C", Offset = "0xC5F48C", VA = "0xC5F48C")]
		public static FileStream OpenRead(string path)
		{
			return null;
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xC5F4F8", Offset = "0xC5F4F8", VA = "0xC5F4F8")]
		public static string ReadAllText(string path)
		{
			return null;
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xC5F70C", Offset = "0xC5F70C", VA = "0xC5F70C")]
		public static void WriteAllText(string path, string contents)
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xC5F94C", Offset = "0xC5F94C", VA = "0xC5F94C")]
		public static byte[] ReadAllBytes(string path)
		{
			return null;
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xC5FBD4", Offset = "0xC5FBD4", VA = "0xC5FBD4")]
		public static void WriteAllBytes(string path, byte[] bytes)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xC5FD2C", Offset = "0xC5FD2C", VA = "0xC5FD2C")]
		public static string GetEditorScriptsPath(AppConfig appConfig)
		{
			return null;
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xC5FD4C", Offset = "0xC5FD4C", VA = "0xC5FD4C")]
		public static string GetAppsSubfolder(string appFolder, string subfolderPath)
		{
			return null;
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xC60234", Offset = "0xC60234", VA = "0xC60234")]
		public static bool Math_ApproximatelyEqual(float a, float b, float threshold)
		{
			return default(bool);
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xC60254", Offset = "0xC60254", VA = "0xC60254")]
		public static bool Math_ApproximatelyEqual(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xC6027C", Offset = "0xC6027C", VA = "0xC6027C")]
		public static bool Math_IsPowerOf2(int value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xC6028C", Offset = "0xC6028C", VA = "0xC6028C")]
		public static float Math_Clamp(float min, float max, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xC602A0", Offset = "0xC602A0", VA = "0xC602A0")]
		public static float Math_Modulo(float value, float mod)
		{
			return default(float);
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xC60318", Offset = "0xC60318", VA = "0xC60318")]
		public static int Math_Modulo(int value, int mod)
		{
			return default(int);
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xC6039C", Offset = "0xC6039C", VA = "0xC6039C")]
		public static float Math_InterpolateLinear(float value1, float value2, float fraction)
		{
			return default(float);
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xC603B4", Offset = "0xC603B4", VA = "0xC603B4")]
		public static float Math_InterpolateSmooth(float value1, float value2, float fraction)
		{
			return default(float);
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xC60400", Offset = "0xC60400", VA = "0xC60400")]
		public static float Math_Distance(float x1, float y1, float x2, float y2)
		{
			return default(float);
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xC6042C", Offset = "0xC6042C", VA = "0xC6042C")]
		public static float Math_InterpolateSmooth2(float v1, float v2, float fraction)
		{
			return default(float);
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xC60460", Offset = "0xC60460", VA = "0xC60460")]
		public static float Math_InterpolateCubic(float v0, float v1, float v2, float v3, float fraction)
		{
			return default(float);
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xC60498", Offset = "0xC60498", VA = "0xC60498")]
		public static Vector3 RotatePointAroundPivot(Vector3 point, Vector3 pivot, Vector3 angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xC60514", Offset = "0xC60514", VA = "0xC60514")]
		public static Vector3 GetNearestVertice(Vector3 sourcePosition, GameObject targetObject)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xC5AB3C", Offset = "0xC5AB3C", VA = "0xC5AB3C")]
		public static int GetFrapoch()
		{
			return default(int);
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xC607D0", Offset = "0xC607D0", VA = "0xC607D0")]
		public static int TimeToFrapoch(DateTime time)
		{
			return default(int);
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xC60874", Offset = "0xC60874", VA = "0xC60874")]
		public static DateTime FrapochToLocalDate(int seconds)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xC6087C", Offset = "0xC6087C", VA = "0xC6087C")]
		public static DateTime FrapochToLocalDate(double seconds)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xC608F0", Offset = "0xC608F0", VA = "0xC608F0")]
		public static bool IsInLayerMask(GameObject obj, LayerMask mask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xC6094C", Offset = "0xC6094C", VA = "0xC6094C")]
		public static bool IsSameTexture(Texture2D tex1, Texture2D tex2, bool checkID = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xC60ABC", Offset = "0xC60ABC", VA = "0xC60ABC")]
		public static bool IsSameGameObject(GameObject go1, GameObject go2, bool checkID = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xC60BD8", Offset = "0xC60BD8", VA = "0xC60BD8")]
		public static Type GetType(string TypeName)
		{
			return null;
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xC60FC4", Offset = "0xC60FC4", VA = "0xC60FC4")]
		public Utils()
		{
		}
	}
}
namespace PWCommon2.Localization
{
	[Token(Token = "0x20002BC")]
	public class LanguagePack
	{
		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<string, LanguagePack> ms_loadedPacks;

		[Token(Token = "0x4001F64")]
		public const string VERSION = "1";

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Version;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double LastUpdated;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<LocalizationCategory> Categories;

		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IDictionary<string, LocalizationItem> Items;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_path;

		[Token(Token = "0x14000014")]
		private event Action OnChange
		{
			[Token(Token = "0x600167C")]
			[Address(RVA = "0xA3A25C", Offset = "0xA3A25C", VA = "0xA3A25C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591680", Offset = "0x591680")]
			add
			{
			}
			[Token(Token = "0x600167D")]
			[Address(RVA = "0xA3A2FC", Offset = "0xA3A2FC", VA = "0xA3A2FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591690", Offset = "0x591690")]
			remove
			{
			}
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xA38C9C", Offset = "0xA38C9C", VA = "0xA38C9C")]
		public LanguagePack()
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xA38D84", Offset = "0xA38D84", VA = "0xA38D84")]
		public LanguagePack(LocalizationItem[] items)
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xA3921C", Offset = "0xA3921C", VA = "0xA3921C")]
		public LanguagePack(LocalizationCategory[] categories)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xA39578", Offset = "0xA39578", VA = "0xA39578")]
		public static LanguagePack Load(string path)
		{
			return null;
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xA39EAC", Offset = "0xA39EAC", VA = "0xA39EAC")]
		public void ReLoad()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xA39AF0", Offset = "0xA39AF0", VA = "0xA39AF0")]
		private void LoadV1(BinaryFormatter formatter, Stream stream)
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xA3A39C", Offset = "0xA3A39C", VA = "0xA3A39C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5916A0", Offset = "0x5916A0")]
		public void Validate()
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xA3A3B0", Offset = "0xA3A3B0", VA = "0xA3A3B0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5916D8", Offset = "0x5916D8")]
		public void AddOnChangeAction(Action action)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xA3A3B4", Offset = "0xA3A3B4", VA = "0xA3A3B4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x591710", Offset = "0x591710")]
		public void RemoveOnChangeAction(Action action)
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class LocalizationCategory
	{
		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<LocalizationItem> Items;

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xA39190", Offset = "0xA39190", VA = "0xA39190")]
		public LocalizationCategory(string name)
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xA3C598", Offset = "0xA3C598", VA = "0xA3C598", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002BE")]
	public class LocalizationItem
	{
		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Key;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Val;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Tooltip;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Help;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Context;

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xA3C5A0", Offset = "0xA3C5A0", VA = "0xA3C5A0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xA3A204", Offset = "0xA3A204", VA = "0xA3A204")]
		public LocalizationItem()
		{
		}
	}
}
namespace ProceduralWorlds.HierachySystem
{
	[Serializable]
	[Token(Token = "0x20002BF")]
	public class GaiaHierarchyVisibility
	{
		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_name;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_isVisible;

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x82A52C", Offset = "0x82A52C", VA = "0x82A52C")]
		public GaiaHierarchyVisibility()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	[ExecuteAlways]
	public class GaiaHierarchyUtils : MonoBehaviour
	{
		[Token(Token = "0x200059C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5730B8", Offset = "0x5730B8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform t;

			[Token(Token = "0x60023DD")]
			[Address(RVA = "0x91E1F4", Offset = "0x91E1F4", VA = "0x91E1F4")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60023DE")]
			[Address(RVA = "0x91E1FC", Offset = "0x91E1FC", VA = "0x91E1FC")]
			internal bool <SetupHideInHierarchy>b__0(GaiaHierarchyVisibility x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200059D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5730C8", Offset = "0x5730C8")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4002FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<GaiaHierarchyVisibility> newList;

			[Token(Token = "0x4002FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<GaiaHierarchyVisibility, bool> <>9__1;

			[Token(Token = "0x60023DF")]
			[Address(RVA = "0x91E23C", Offset = "0x91E23C", VA = "0x91E23C")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60023E0")]
			[Address(RVA = "0x91E244", Offset = "0x91E244", VA = "0x91E244")]
			internal bool <UpdateParentObjects>b__1(GaiaHierarchyVisibility x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200059E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5730D8", Offset = "0x5730D8")]
		private sealed class <>c__DisplayClass5_1
		{
			[Token(Token = "0x4002FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform t;

			[Token(Token = "0x60023E1")]
			[Address(RVA = "0x91E348", Offset = "0x91E348", VA = "0x91E348")]
			public <>c__DisplayClass5_1()
			{
			}

			[Token(Token = "0x60023E2")]
			[Address(RVA = "0x91E350", Offset = "0x91E350", VA = "0x91E350")]
			internal bool <UpdateParentObjects>b__0(GaiaHierarchyVisibility x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200059F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5730E8", Offset = "0x5730E8")]
		private sealed class <>c__DisplayClass5_2
		{
			[Token(Token = "0x4002FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GaiaHierarchyVisibility x;

			[Token(Token = "0x60023E3")]
			[Address(RVA = "0x91E340", Offset = "0x91E340", VA = "0x91E340")]
			public <>c__DisplayClass5_2()
			{
			}

			[Token(Token = "0x60023E4")]
			[Address(RVA = "0x91E390", Offset = "0x91E390", VA = "0x91E390")]
			internal bool <UpdateParentObjects>b__2(GaiaHierarchyVisibility y)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public List<GaiaHierarchyVisibility> m_visibilityEntries;

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x8292FC", Offset = "0x8292FC", VA = "0x8292FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x829300", Offset = "0x829300", VA = "0x829300")]
		public void SetupHideInHierarchy()
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x82A37C", Offset = "0x82A37C", VA = "0x82A37C")]
		public void SetupAllHideInHierarchy()
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x82A460", Offset = "0x82A460", VA = "0x82A460")]
		public void SetupAllHideOnTerrain(Terrain t)
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x829B94", Offset = "0x829B94", VA = "0x829B94")]
		public void UpdateParentObjects()
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x82A534", Offset = "0x82A534", VA = "0x82A534")]
		public void RemoveOldEntries()
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x82A66C", Offset = "0x82A66C", VA = "0x82A66C")]
		public GaiaHierarchyUtils()
		{
		}
	}
}
namespace ProceduralWorlds.Flora
{
	[Token(Token = "0x20002C1")]
	public class DetailObject : MonoBehaviour
	{
		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DetailObjectData m_data;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FloraTerrainTile m_terrainTile;

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xA1D3A0", Offset = "0xA1D3A0", VA = "0xA1D3A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xA1D58C", Offset = "0xA1D58C", VA = "0xA1D58C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xA1D748", Offset = "0xA1D748", VA = "0xA1D748")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xA1D7CC", Offset = "0xA1D7CC", VA = "0xA1D7CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xA1D9D4", Offset = "0xA1D9D4", VA = "0xA1D9D4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xA1DAC4", Offset = "0xA1DAC4", VA = "0xA1DAC4")]
		public bool SupportsInstancing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xA1D5C8", Offset = "0xA1D5C8", VA = "0xA1D5C8")]
		internal bool InitPool()
		{
			return default(bool);
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xA1DB78", Offset = "0xA1DB78", VA = "0xA1DB78")]
		public void RefreshAll()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xA1DBD8", Offset = "0xA1DBD8", VA = "0xA1DBD8")]
		public DetailObject()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x571D68", Offset = "0x571D68")]
	public class DetailScriptableObject : ScriptableObject
	{
		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DetailData m_data;

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xA1DC3C", Offset = "0xA1DC3C", VA = "0xA1DC3C")]
		public DetailScriptableObject()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class FloraCameraCells : MonoBehaviour
	{
		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FloraCameraCellsData m_data;

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x8B442C", Offset = "0x8B442C", VA = "0x8B442C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x8B4588", Offset = "0x8B4588", VA = "0x8B4588")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x8B46E4", Offset = "0x8B46E4", VA = "0x8B46E4")]
		public FloraCameraCells()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class FloraGlobalManager : MonoBehaviour
	{
		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected FloraGlobalData m_settings;

		[NonSerialized]
		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected FloraGlobalData m_oldSettings;

		[Token(Token = "0x1700021E")]
		public FloraGlobalData Settings
		{
			[Token(Token = "0x600169B")]
			[Address(RVA = "0x8B4748", Offset = "0x8B4748", VA = "0x8B4748")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x8B4750", Offset = "0x8B4750", VA = "0x8B4750")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x8B4934", Offset = "0x8B4934", VA = "0x8B4934")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x8B484C", Offset = "0x8B484C", VA = "0x8B484C")]
		public void SetGlobals()
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x8B4A14", Offset = "0x8B4A14", VA = "0x8B4A14")]
		public void GetGlobals()
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x8B4774", Offset = "0x8B4774", VA = "0x8B4774")]
		public void StoreGlobals()
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x8B4938", Offset = "0x8B4938", VA = "0x8B4938")]
		public void ResetGlobals()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x8B4AEC", Offset = "0x8B4AEC", VA = "0x8B4AEC")]
		public FloraGlobalManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C5")]
	public struct DetailOverrideData
	{
		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public DetailScriptableObject DetailScriptableObject;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public FloraCommonData.SourceDataType SourceDataType;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int SourceDataIndex;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color DebugColor;
	}
	[Token(Token = "0x20002C6")]
	public class FloraTerrainTile : MonoBehaviour
	{
		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FloraTerrainTileData m_data;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<DetailOverrideData> m_detailObjectList;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FloraCameraCells m_detailCameraCells;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Plane[] cFPlanes;

		[Token(Token = "0x1700021F")]
		public FloraCameraCellsData DetailCameraCellsData
		{
			[Token(Token = "0x60016A3")]
			[Address(RVA = "0x8B4B70", Offset = "0x8B4B70", VA = "0x8B4B70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x8B4B8C", Offset = "0x8B4B8C", VA = "0x8B4B8C")]
		private void DrawDebug()
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x8B4C84", Offset = "0x8B4C84", VA = "0x8B4C84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x8B4EF0", Offset = "0x8B4EF0", VA = "0x8B4EF0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x8B5198", Offset = "0x8B5198", VA = "0x8B5198")]
		private void Start()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x8B572C", Offset = "0x8B572C", VA = "0x8B572C")]
		private void Update()
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x8B4E80", Offset = "0x8B4E80", VA = "0x8B4E80")]
		internal void Refresh()
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x8B5E60", Offset = "0x8B5E60", VA = "0x8B5E60")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x8B5A4C", Offset = "0x8B5A4C", VA = "0x8B5A4C")]
		internal bool InitCameraCells()
		{
			return default(bool);
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x8B590C", Offset = "0x8B590C", VA = "0x8B590C")]
		internal bool InitTerrain()
		{
			return default(bool);
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x8B6190", Offset = "0x8B6190", VA = "0x8B6190")]
		private void FindUnityTerrain(ref Terrain terrain)
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x8B50E8", Offset = "0x8B50E8", VA = "0x8B50E8")]
		public void CleanUpCameraCells()
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x8B6390", Offset = "0x8B6390", VA = "0x8B6390")]
		public Terrain GetTerrain()
		{
			return null;
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x8B6448", Offset = "0x8B6448", VA = "0x8B6448")]
		public FloraTerrainTile()
		{
		}
	}
}
namespace Photon.Realtime.Demo
{
	[Token(Token = "0x20002C7")]
	public class ConnectAndJoinRandomLb : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks, ILobbyCallbacks
	{
		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppSettings appSettings;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LoadBalancingClient lbc;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConnectionHandler ch;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text StateUiText;

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xA0D7D8", Offset = "0xA0D7D8", VA = "0xA0D7D8")]
		public void Start()
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xA0D954", Offset = "0xA0D954", VA = "0xA0D954")]
		public void Update()
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xA0DAA4", Offset = "0xA0DAA4", VA = "0xA0DAA4", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xA0DAA8", Offset = "0xA0DAA8", VA = "0xA0DAA8", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xA0DB38", Offset = "0xA0DB38", VA = "0xA0DB38", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xA0DC38", Offset = "0xA0DC38", VA = "0xA0DC38", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xA0DC3C", Offset = "0xA0DC3C", VA = "0xA0DC3C", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xA0DC40", Offset = "0xA0DC40", VA = "0xA0DC40", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xA0DD38", Offset = "0xA0DD38", VA = "0xA0DD38", Slot = "19")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xA0DD3C", Offset = "0xA0DD3C", VA = "0xA0DD3C", Slot = "20")]
		public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xA0DD40", Offset = "0xA0DD40", VA = "0xA0DD40", Slot = "17")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xA0DD44", Offset = "0xA0DD44", VA = "0xA0DD44", Slot = "18")]
		public void OnLeftLobby()
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xA0DD48", Offset = "0xA0DD48", VA = "0xA0DD48", Slot = "10")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xA0DD4C", Offset = "0xA0DD4C", VA = "0xA0DD4C", Slot = "11")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xA0DD50", Offset = "0xA0DD50", VA = "0xA0DD50", Slot = "12")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xA0DD54", Offset = "0xA0DD54", VA = "0xA0DD54", Slot = "13")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xA0DDC8", Offset = "0xA0DDC8", VA = "0xA0DDC8", Slot = "14")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xA0DDCC", Offset = "0xA0DDCC", VA = "0xA0DDCC", Slot = "15")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xA0DE88", Offset = "0xA0DE88", VA = "0xA0DE88", Slot = "16")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xA0DE8C", Offset = "0xA0DE8C", VA = "0xA0DE8C")]
		private void OnRegionPingCompleted(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xA0DFBC", Offset = "0xA0DFBC", VA = "0xA0DFBC")]
		public ConnectAndJoinRandomLb()
		{
		}
	}
}
namespace Photon.Chat.UtilityScripts
{
	[Token(Token = "0x20002C8")]
	public class EventSystemSpawner : MonoBehaviour
	{
		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x8AE1C0", Offset = "0x8AE1C0", VA = "0x8AE1C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x8AE2D4", Offset = "0x8AE2D4", VA = "0x8AE2D4")]
		public EventSystemSpawner()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class OnStartDelete : MonoBehaviour
	{
		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xF8A4C0", Offset = "0xF8A4C0", VA = "0xF8A4C0")]
		private void Start()
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xF8A538", Offset = "0xF8A538", VA = "0xF8A538")]
		public OnStartDelete()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x571DA4", Offset = "0x571DA4")]
	public class TextButtonTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Selectable Selectable;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalColor;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color HoverColor;

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xA23234", Offset = "0xA23234", VA = "0xA23234")]
		public void Awake()
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xA23288", Offset = "0xA23288", VA = "0xA23288")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xA232B8", Offset = "0xA232B8", VA = "0xA232B8")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xA232E8", Offset = "0xA232E8", VA = "0xA232E8", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xA233A4", Offset = "0xA233A4", VA = "0xA233A4", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xA23460", Offset = "0xA23460", VA = "0xA23460")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x571E04", Offset = "0x571E04")]
	public class TextToggleIsOnTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xA234A4", Offset = "0xA234A4", VA = "0xA234A4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xA23604", Offset = "0xA23604", VA = "0xA23604")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xA235A0", Offset = "0xA235A0", VA = "0xA235A0")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xA236C8", Offset = "0xA236C8", VA = "0xA236C8", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xA23740", Offset = "0xA23740", VA = "0xA23740", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xA237B4", Offset = "0xA237B4", VA = "0xA237B4")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace TriangleNet
{
	[Token(Token = "0x20002CC")]
	internal class Behavior
	{
		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool poly;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool quality;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool varArea;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool convex;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool jettison;

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private bool boundaryMarkers;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		private bool noHoles;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		private bool conformDel;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Func<ITriangle, double, bool> usertest;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int noBisect;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double minAngle;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double maxAngle;

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double maxArea;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal bool fixedArea;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		internal bool useSegments;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		internal bool useRegions;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal double goodAngle;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal double maxGoodAngle;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal double offconstant;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584D04", Offset = "0x584D04")]
		private static bool <NoExact>k__BackingField;

		[Token(Token = "0x17000220")]
		public static bool NoExact
		{
			[Token(Token = "0x60016D8")]
			[Address(RVA = "0x88C260", Offset = "0x88C260", VA = "0x88C260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591748", Offset = "0x591748")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016D9")]
			[Address(RVA = "0x88C2AC", Offset = "0x88C2AC", VA = "0x88C2AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591758", Offset = "0x591758")]
			set
			{
			}
		}

		[Token(Token = "0x17000221")]
		public bool Quality
		{
			[Token(Token = "0x60016DA")]
			[Address(RVA = "0x88C300", Offset = "0x88C300", VA = "0x88C300")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016DB")]
			[Address(RVA = "0x88C308", Offset = "0x88C308", VA = "0x88C308")]
			set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public double MinAngle
		{
			[Token(Token = "0x60016DC")]
			[Address(RVA = "0x88C31C", Offset = "0x88C31C", VA = "0x88C31C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60016DD")]
			[Address(RVA = "0x88C324", Offset = "0x88C324", VA = "0x88C324")]
			set
			{
			}
		}

		[Token(Token = "0x17000223")]
		public double MaxAngle
		{
			[Token(Token = "0x60016DE")]
			[Address(RVA = "0x88C32C", Offset = "0x88C32C", VA = "0x88C32C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60016DF")]
			[Address(RVA = "0x88C334", Offset = "0x88C334", VA = "0x88C334")]
			set
			{
			}
		}

		[Token(Token = "0x17000224")]
		public double MaxArea
		{
			[Token(Token = "0x60016E0")]
			[Address(RVA = "0x88C33C", Offset = "0x88C33C", VA = "0x88C33C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60016E1")]
			[Address(RVA = "0x88C344", Offset = "0x88C344", VA = "0x88C344")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public bool VarArea
		{
			[Token(Token = "0x60016E2")]
			[Address(RVA = "0x88C358", Offset = "0x88C358", VA = "0x88C358")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016E3")]
			[Address(RVA = "0x88C360", Offset = "0x88C360", VA = "0x88C360")]
			set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public bool Poly
		{
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0x88C36C", Offset = "0x88C36C", VA = "0x88C36C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0x88C374", Offset = "0x88C374", VA = "0x88C374")]
			set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public Func<ITriangle, double, bool> UserTest
		{
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0x88C380", Offset = "0x88C380", VA = "0x88C380")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E7")]
			[Address(RVA = "0x88C388", Offset = "0x88C388", VA = "0x88C388")]
			set
			{
			}
		}

		[Token(Token = "0x17000228")]
		public bool Convex
		{
			[Token(Token = "0x60016E8")]
			[Address(RVA = "0x88C390", Offset = "0x88C390", VA = "0x88C390")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0x88C398", Offset = "0x88C398", VA = "0x88C398")]
			set
			{
			}
		}

		[Token(Token = "0x17000229")]
		public bool ConformingDelaunay
		{
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0x88C3A4", Offset = "0x88C3A4", VA = "0x88C3A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0x88C3AC", Offset = "0x88C3AC", VA = "0x88C3AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public int NoBisect
		{
			[Token(Token = "0x60016EC")]
			[Address(RVA = "0x88C3B8", Offset = "0x88C3B8", VA = "0x88C3B8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016ED")]
			[Address(RVA = "0x88C3C0", Offset = "0x88C3C0", VA = "0x88C3C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700022B")]
		public bool UseBoundaryMarkers
		{
			[Token(Token = "0x60016EE")]
			[Address(RVA = "0x88C3D0", Offset = "0x88C3D0", VA = "0x88C3D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016EF")]
			[Address(RVA = "0x88C3D8", Offset = "0x88C3D8", VA = "0x88C3D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700022C")]
		public bool NoHoles
		{
			[Token(Token = "0x60016F0")]
			[Address(RVA = "0x88C3E4", Offset = "0x88C3E4", VA = "0x88C3E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016F1")]
			[Address(RVA = "0x88C3EC", Offset = "0x88C3EC", VA = "0x88C3EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700022D")]
		public bool Jettison
		{
			[Token(Token = "0x60016F2")]
			[Address(RVA = "0x88C3F8", Offset = "0x88C3F8", VA = "0x88C3F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016F3")]
			[Address(RVA = "0x88C400", Offset = "0x88C400", VA = "0x88C400")]
			set
			{
			}
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x88BE2C", Offset = "0x88BE2C", VA = "0x88BE2C")]
		public Behavior(bool quality = false, double minAngle = 20.0)
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x88BEA0", Offset = "0x88BEA0", VA = "0x88BEA0")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class Configuration
	{
		[Serializable]
		[Token(Token = "0x20005A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5730F8", Offset = "0x5730F8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002FD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002FD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IPredicates> <>9__0_0;

			[Token(Token = "0x4002FD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<TrianglePool> <>9__0_1;

			[Token(Token = "0x4002FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<TrianglePool> <>9__1_0;

			[Token(Token = "0x60023E6")]
			[Address(RVA = "0x91BB18", Offset = "0x91BB18", VA = "0x91BB18")]
			public <>c()
			{
			}

			[Token(Token = "0x60023E7")]
			[Address(RVA = "0x91BB20", Offset = "0x91BB20", VA = "0x91BB20")]
			internal IPredicates <.ctor>b__0_0()
			{
				return null;
			}

			[Token(Token = "0x60023E8")]
			[Address(RVA = "0x91BB7C", Offset = "0x91BB7C", VA = "0x91BB7C")]
			internal TrianglePool <.ctor>b__0_1()
			{
				return null;
			}

			[Token(Token = "0x60023E9")]
			[Address(RVA = "0x91BBD4", Offset = "0x91BBD4", VA = "0x91BBD4")]
			internal TrianglePool <.ctor>b__1_0()
			{
				return null;
			}
		}

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584D14", Offset = "0x584D14")]
		private Func<IPredicates> <Predicates>k__BackingField;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584D24", Offset = "0x584D24")]
		private Func<TrianglePool> <TrianglePool>k__BackingField;

		[Token(Token = "0x1700022E")]
		public Func<IPredicates> Predicates
		{
			[Token(Token = "0x60016F7")]
			[Address(RVA = "0xA0D7B8", Offset = "0xA0D7B8", VA = "0xA0D7B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591768", Offset = "0x591768")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016F8")]
			[Address(RVA = "0xA0D7C0", Offset = "0xA0D7C0", VA = "0xA0D7C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591778", Offset = "0x591778")]
			set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public Func<TrianglePool> TrianglePool
		{
			[Token(Token = "0x60016F9")]
			[Address(RVA = "0xA0D7C8", Offset = "0xA0D7C8", VA = "0xA0D7C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591788", Offset = "0x591788")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016FA")]
			[Address(RVA = "0xA0D7D0", Offset = "0xA0D7D0", VA = "0xA0D7D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591798", Offset = "0x591798")]
			set
			{
			}
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xA0D4A4", Offset = "0xA0D4A4", VA = "0xA0D4A4")]
		public Configuration()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xA0D69C", Offset = "0xA0D69C", VA = "0xA0D69C")]
		public Configuration(Func<IPredicates> predicates)
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xA0D664", Offset = "0xA0D664", VA = "0xA0D664")]
		public Configuration(Func<IPredicates> predicates, Func<TrianglePool> trianglePool)
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public enum VertexType
	{
		[Token(Token = "0x4001FA9")]
		InputVertex,
		[Token(Token = "0x4001FAA")]
		SegmentVertex,
		[Token(Token = "0x4001FAB")]
		FreeVertex,
		[Token(Token = "0x4001FAC")]
		DeadVertex,
		[Token(Token = "0x4001FAD")]
		UndeadVertex
	}
	[Token(Token = "0x20002CF")]
	public enum NodeNumbering
	{
		[Token(Token = "0x4001FAF")]
		None,
		[Token(Token = "0x4001FB0")]
		Linear,
		[Token(Token = "0x4001FB1")]
		CuthillMcKee
	}
	[Token(Token = "0x20002D0")]
	public enum LocateResult
	{
		[Token(Token = "0x4001FB3")]
		InTriangle,
		[Token(Token = "0x4001FB4")]
		OnEdge,
		[Token(Token = "0x4001FB5")]
		OnVertex,
		[Token(Token = "0x4001FB6")]
		Outside
	}
	[Token(Token = "0x20002D1")]
	internal enum InsertVertexResult
	{
		[Token(Token = "0x4001FB8")]
		Successful,
		[Token(Token = "0x4001FB9")]
		Encroaching,
		[Token(Token = "0x4001FBA")]
		Violating,
		[Token(Token = "0x4001FBB")]
		Duplicate
	}
	[Token(Token = "0x20002D2")]
	internal enum FindDirectionResult
	{
		[Token(Token = "0x4001FBD")]
		Within,
		[Token(Token = "0x4001FBE")]
		Leftcollinear,
		[Token(Token = "0x4001FBF")]
		Rightcollinear
	}
	[Token(Token = "0x20002D3")]
	public interface IPredicates
	{
		[Token(Token = "0x60016FB")]
		double CounterClockwise(Point a, Point b, Point c);

		[Token(Token = "0x60016FC")]
		double InCircle(Point a, Point b, Point c, Point p);

		[Token(Token = "0x60016FD")]
		Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta);

		[Token(Token = "0x60016FE")]
		Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta, double offconstant);
	}
	[Token(Token = "0x20002D4")]
	public sealed class Log : ILog<LogItem>
	{
		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584D34", Offset = "0x584D34")]
		private static bool <Verbose>k__BackingField;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<LogItem> log;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LogLevel level;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Log instance;

		[Token(Token = "0x17000230")]
		public static bool Verbose
		{
			[Token(Token = "0x60016FF")]
			[Address(RVA = "0xA3E440", Offset = "0xA3E440", VA = "0xA3E440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5917A8", Offset = "0x5917A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001700")]
			[Address(RVA = "0xA3E4A4", Offset = "0xA3E4A4", VA = "0xA3E4A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5917B8", Offset = "0x5917B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000231")]
		public static ILog<LogItem> Instance
		{
			[Token(Token = "0x6001703")]
			[Address(RVA = "0xA3E5E4", Offset = "0xA3E5E4", VA = "0xA3E5E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		public IList<LogItem> Data
		{
			[Token(Token = "0x6001709")]
			[Address(RVA = "0xA3E9C8", Offset = "0xA3E9C8", VA = "0xA3E9C8", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		public LogLevel Level
		{
			[Token(Token = "0x600170A")]
			[Address(RVA = "0xA3E9D0", Offset = "0xA3E9D0", VA = "0xA3E9D0", Slot = "10")]
			get
			{
				return default(LogLevel);
			}
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xA3E510", Offset = "0xA3E510", VA = "0xA3E510")]
		static Log()
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xA3E56C", Offset = "0xA3E56C", VA = "0xA3E56C")]
		private Log()
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xA3E648", Offset = "0xA3E648", VA = "0xA3E648", Slot = "4")]
		public void Add(LogItem item)
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xA3E6AC", Offset = "0xA3E6AC", VA = "0xA3E6AC", Slot = "5")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xA3E700", Offset = "0xA3E700", VA = "0xA3E700", Slot = "6")]
		public void Info(string message)
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xA3E7F8", Offset = "0xA3E7F8", VA = "0xA3E7F8", Slot = "8")]
		public void Warning(string message, string location)
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xA3E92C", Offset = "0xA3E92C", VA = "0xA3E92C", Slot = "7")]
		public void Error(string message, string location)
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public class Mesh : IMesh
	{
		[Token(Token = "0x20005A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573108", Offset = "0x573108")]
		private sealed class <get_Edges>d__39 : IEnumerable<Edge>, IEnumerable, IEnumerator<Edge>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Edge <>2__current;

			[Token(Token = "0x4002FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Mesh <>4__this;

			[Token(Token = "0x4002FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private EdgeIterator <e>5__2;

			[Token(Token = "0x170003F8")]
			private Edge System.Collections.Generic.IEnumerator<TriangleNet.Geometry.Edge>.Current
			{
				[Token(Token = "0x60023ED")]
				[Address(RVA = "0x8681D4", Offset = "0x8681D4", VA = "0x8681D4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023EF")]
				[Address(RVA = "0x86821C", Offset = "0x86821C", VA = "0x86821C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023EA")]
			[Address(RVA = "0x8680C0", Offset = "0x8680C0", VA = "0x8680C0")]
			[DebuggerHidden]
			public <get_Edges>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x60023EB")]
			[Address(RVA = "0x8680F8", Offset = "0x8680F8", VA = "0x8680F8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023EC")]
			[Address(RVA = "0x8680FC", Offset = "0x8680FC", VA = "0x8680FC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023EE")]
			[Address(RVA = "0x8681DC", Offset = "0x8681DC", VA = "0x8681DC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60023F0")]
			[Address(RVA = "0x868224", Offset = "0x868224", VA = "0x868224", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Edge> System.Collections.Generic.IEnumerable<TriangleNet.Geometry.Edge>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60023F1")]
			[Address(RVA = "0x8682CC", Offset = "0x8682CC", VA = "0x8682CC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ILog<LogItem> logger;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private QualityMesher qualityMesher;

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stack<Otri> flipstack;

		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal TrianglePool triangles;

		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal Dictionary<int, SubSegment> subsegs;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal Dictionary<int, TriangleNet.Geometry.Vertex> vertices;

		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal int hash_vtx;

		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal int hash_seg;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal int hash_tri;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal List<Point> holes;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal List<RegionPointer> regions;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal Rectangle bounds;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal int invertices;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		internal int insegments;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal int undeads;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		internal int mesh_dim;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal int nextras;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		internal int hullsize;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal int steinerleft;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		internal bool checksegments;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		internal bool checkquality;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal TriangleNet.Geometry.Vertex infvertex1;

		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal TriangleNet.Geometry.Vertex infvertex2;

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal TriangleNet.Geometry.Vertex infvertex3;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal TriangleLocator locator;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal Behavior behavior;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal NodeNumbering numbering;

		[Token(Token = "0x4001FE0")]
		internal const int DUMMY = -1;

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal Triangle dummytri;

		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal SubSegment dummysub;

		[Token(Token = "0x17000234")]
		public Rectangle Bounds
		{
			[Token(Token = "0x600170B")]
			[Address(RVA = "0xA45D14", Offset = "0xA45D14", VA = "0xA45D14", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000235")]
		public ICollection<TriangleNet.Geometry.Vertex> Vertices
		{
			[Token(Token = "0x600170C")]
			[Address(RVA = "0xA45D1C", Offset = "0xA45D1C", VA = "0xA45D1C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		public IList<Point> Holes
		{
			[Token(Token = "0x600170D")]
			[Address(RVA = "0xA45D70", Offset = "0xA45D70", VA = "0xA45D70", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000237")]
		public ICollection<Triangle> Triangles
		{
			[Token(Token = "0x600170E")]
			[Address(RVA = "0xA45D78", Offset = "0xA45D78", VA = "0xA45D78", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000238")]
		public ICollection<SubSegment> Segments
		{
			[Token(Token = "0x600170F")]
			[Address(RVA = "0xA45D80", Offset = "0xA45D80", VA = "0xA45D80", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000239")]
		public IEnumerable<Edge> Edges
		{
			[Token(Token = "0x6001710")]
			[Address(RVA = "0xA45DD4", Offset = "0xA45DD4", VA = "0xA45DD4", Slot = "5")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5917C8", Offset = "0x5917C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023A")]
		public int NumberOfInputPoints
		{
			[Token(Token = "0x6001711")]
			[Address(RVA = "0xA45E40", Offset = "0xA45E40", VA = "0xA45E40")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700023B")]
		public int NumberOfEdges
		{
			[Token(Token = "0x6001712")]
			[Address(RVA = "0xA45E48", Offset = "0xA45E48", VA = "0xA45E48")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700023C")]
		public bool IsPolygon
		{
			[Token(Token = "0x6001713")]
			[Address(RVA = "0xA45E90", Offset = "0xA45E90", VA = "0xA45E90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023D")]
		public NodeNumbering CurrentNumbering
		{
			[Token(Token = "0x6001714")]
			[Address(RVA = "0xA45EA0", Offset = "0xA45EA0", VA = "0xA45EA0")]
			get
			{
				return default(NodeNumbering);
			}
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xA45EA8", Offset = "0xA45EA8", VA = "0xA45EA8")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xA46058", Offset = "0xA46058", VA = "0xA46058")]
		public Mesh(Configuration config)
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xA46328", Offset = "0xA46328", VA = "0xA46328", Slot = "11")]
		public void Refine(QualityOptions quality, bool delaunay = false)
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xA46514", Offset = "0xA46514", VA = "0xA46514", Slot = "10")]
		public void Renumber()
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xA4651C", Offset = "0xA4651C", VA = "0xA4651C")]
		public void Renumber(NodeNumbering num)
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xA46A04", Offset = "0xA46A04", VA = "0xA46A04")]
		internal void SetQualityMesher(QualityMesher qmesher)
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xA46A0C", Offset = "0xA46A0C", VA = "0xA46A0C")]
		internal void CopyTo(Mesh target)
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xA46A70", Offset = "0xA46A70", VA = "0xA46A70")]
		private void ResetData()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xA46464", Offset = "0xA46464", VA = "0xA46464")]
		private void Reset()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xA46B88", Offset = "0xA46B88", VA = "0xA46B88")]
		internal void TransferNodes(IList<TriangleNet.Geometry.Vertex> points)
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xA47168", Offset = "0xA47168", VA = "0xA47168")]
		internal void MakeVertexMap()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xA473E0", Offset = "0xA473E0", VA = "0xA473E0")]
		internal void MakeTriangle(ref Otri newotri)
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xA474CC", Offset = "0xA474CC", VA = "0xA474CC")]
		internal void MakeSegment(ref Osub newsubseg)
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xA475EC", Offset = "0xA475EC", VA = "0xA475EC")]
		internal InsertVertexResult InsertVertex(TriangleNet.Geometry.Vertex newvertex, ref Otri searchtri, ref Osub splitseg, bool segmentflaws, bool triflaws)
		{
			return default(InsertVertexResult);
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xA486D4", Offset = "0xA486D4", VA = "0xA486D4")]
		internal void InsertSubseg(ref Otri tri, int subsegmark)
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xA48824", Offset = "0xA48824", VA = "0xA48824")]
		internal void Flip(ref Otri flipedge)
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xA48B34", Offset = "0xA48B34", VA = "0xA48B34")]
		internal void Unflip(ref Otri flipedge)
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xA48E44", Offset = "0xA48E44", VA = "0xA48E44")]
		private void TriangulatePolygon(Otri firstedge, Otri lastedge, int edgecount, bool doflip, bool triflaws)
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xA490DC", Offset = "0xA490DC", VA = "0xA490DC")]
		internal void DeleteVertex(ref Otri deltri)
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xA49418", Offset = "0xA49418", VA = "0xA49418")]
		internal void UndoVertex()
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xA49390", Offset = "0xA49390", VA = "0xA49390")]
		internal void TriangleDealloc(Triangle dyingtriangle)
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xA49320", Offset = "0xA49320", VA = "0xA49320")]
		internal void VertexDealloc(TriangleNet.Geometry.Vertex dyingvertex)
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xA49778", Offset = "0xA49778", VA = "0xA49778")]
		internal void SubsegDealloc(SubSegment dyingsubseg)
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public static class MeshValidator
	{
		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RobustPredicates predicates;

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xDFD7E4", Offset = "0xDFD7E4", VA = "0xDFD7E4")]
		public static bool IsConsistent(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xDFE32C", Offset = "0xDFE32C", VA = "0xDFE32C")]
		public static bool IsDelaunay(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xDFEC04", Offset = "0xDFEC04", VA = "0xDFEC04")]
		public static bool IsConstrainedDelaunay(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xDFE390", Offset = "0xDFE390", VA = "0xDFE390")]
		private static bool IsDelaunay(Mesh mesh, bool constrained)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002D7")]
	internal class NewLocation
	{
		[Token(Token = "0x4001FE4")]
		private const double EPS = 1E-50;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Behavior behavior;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double[] petalx;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double[] petaly;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double[] petalr;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double[] wedges;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private double[] initialConvexPoly;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private double[] points_p;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private double[] points_q;

		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private double[] points_r;

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private double[] poly1;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double[] poly2;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private double[][] polys;

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xE06018", Offset = "0xE06018", VA = "0xE06018")]
		public NewLocation(Mesh mesh, IPredicates predicates)
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xE06150", Offset = "0xE06150", VA = "0xE06150")]
		public Point FindLocation(TriangleNet.Geometry.Vertex org, TriangleNet.Geometry.Vertex dest, TriangleNet.Geometry.Vertex apex, ref double xi, ref double eta, bool offcenter, Otri badotri)
		{
			return null;
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xE06194", Offset = "0xE06194", VA = "0xE06194")]
		private Point FindNewLocationWithoutMaxAngle(TriangleNet.Geometry.Vertex torg, TriangleNet.Geometry.Vertex tdest, TriangleNet.Geometry.Vertex tapex, ref double xi, ref double eta, bool offcenter, Otri badotri)
		{
			return null;
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xE07538", Offset = "0xE07538", VA = "0xE07538")]
		private Point FindNewLocation(TriangleNet.Geometry.Vertex torg, TriangleNet.Geometry.Vertex tdest, TriangleNet.Geometry.Vertex tapex, ref double xi, ref double eta, bool offcenter, Otri badotri)
		{
			return null;
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xE09820", Offset = "0xE09820", VA = "0xE09820")]
		private int LongestShortestEdge(double aodist, double dadist, double dodist)
		{
			return default(int);
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xE098AC", Offset = "0xE098AC", VA = "0xE098AC")]
		private int DoSmoothing(Otri badotri, TriangleNet.Geometry.Vertex torg, TriangleNet.Geometry.Vertex tdest, TriangleNet.Geometry.Vertex tapex, ref double[] newloc)
		{
			return default(int);
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xE0ADB0", Offset = "0xE0ADB0", VA = "0xE0ADB0")]
		private int GetStarPoints(Otri badotri, TriangleNet.Geometry.Vertex p, TriangleNet.Geometry.Vertex q, TriangleNet.Geometry.Vertex r, int whichPoint, ref double[] points)
		{
			return default(int);
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xE09D28", Offset = "0xE09D28", VA = "0xE09D28")]
		private bool GetNeighborsVertex(Otri badotri, double first_x, double first_y, double second_x, double second_y, ref double[] thirdpoint, ref Otri neighotri)
		{
			return default(bool);
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xE0B274", Offset = "0xE0B274", VA = "0xE0B274")]
		private bool GetWedgeIntersectionWithoutMaxAngle(int numpoints, double[] points, ref double[] newloc)
		{
			return default(bool);
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xE0C430", Offset = "0xE0C430", VA = "0xE0C430")]
		private bool GetWedgeIntersection(int numpoints, double[] points, ref double[] newloc)
		{
			return default(bool);
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xE0B0A0", Offset = "0xE0B0A0", VA = "0xE0B0A0")]
		private bool ValidPolygonAngles(int numpoints, double[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xE0EC60", Offset = "0xE0EC60", VA = "0xE0EC60")]
		private bool IsBadPolygonAngle(double x1, double y1, double x2, double y2, double x3, double y3)
		{
			return default(bool);
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xE0A874", Offset = "0xE0A874", VA = "0xE0A874")]
		private void LineLineIntersection(double x1, double y1, double x2, double y2, double x3, double y3, double x4, double y4, ref double[] p)
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xE0E89C", Offset = "0xE0E89C", VA = "0xE0E89C")]
		private int HalfPlaneIntersection(int numvertices, ref double[] convexPoly, double x1, double y1, double x2, double y2)
		{
			return default(int);
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xE0EDAC", Offset = "0xE0EDAC", VA = "0xE0EDAC")]
		private int SplitConvexPolygon(int numvertices, double[] convexPoly, double x1, double y1, double x2, double y2, double[][] polys)
		{
			return default(int);
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xE0FB4C", Offset = "0xE0FB4C", VA = "0xE0FB4C")]
		private int LinePointLocation(double x1, double y1, double x2, double y2, double x, double y)
		{
			return default(int);
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xE0F940", Offset = "0xE0F940", VA = "0xE0F940")]
		private void LineLineSegmentIntersection(double x1, double y1, double x2, double y2, double x3, double y3, double x4, double y4, ref double[] p)
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xE0EB50", Offset = "0xE0EB50", VA = "0xE0EB50")]
		private void FindPolyCentroid(int numpoints, double[] points, ref double[] centroid)
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xE0A230", Offset = "0xE0A230", VA = "0xE0A230")]
		private void CircleLineIntersection(double x1, double y1, double x2, double y2, double x3, double y3, double r, ref double[] p)
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xE0A508", Offset = "0xE0A508", VA = "0xE0A508")]
		private bool ChooseCorrectPoint(double x1, double y1, double x2, double y2, double x3, double y3, bool isObtuse)
		{
			return default(bool);
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xE0A548", Offset = "0xE0A548", VA = "0xE0A548")]
		private void PointBetweenPoints(double x1, double y1, double x2, double y2, double x, double y, ref double[] p)
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xE0A658", Offset = "0xE0A658", VA = "0xE0A658")]
		private bool IsBadTriangleAngle(double x1, double y1, double x2, double y2, double x3, double y3)
		{
			return default(bool);
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xE0AAAC", Offset = "0xE0AAAC", VA = "0xE0AAAC")]
		private double MinDistanceToNeighbor(double newlocX, double newlocY, ref Otri searchtri)
		{
			return default(double);
		}
	}
	[Token(Token = "0x20002D8")]
	public class RobustPredicates : IPredicates
	{
		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly object creationLock;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static RobustPredicates _default;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static double epsilon;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static double splitter;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static double resulterrbound;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static double ccwerrboundA;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static double ccwerrboundB;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static double ccwerrboundC;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static double iccerrboundA;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static double iccerrboundB;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static double iccerrboundC;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double[] fin1;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double[] fin2;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double[] abdet;

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double[] axbc;

		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double[] axxbc;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double[] aybc;

		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double[] ayybc;

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private double[] adet;

		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private double[] bxca;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private double[] bxxca;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private double[] byca;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private double[] byyca;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double[] bdet;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private double[] cxab;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private double[] cxxab;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private double[] cyab;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private double[] cyyab;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private double[] cdet;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private double[] temp8;

		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private double[] temp16a;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private double[] temp16b;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private double[] temp16c;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private double[] temp32a;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private double[] temp32b;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private double[] temp48;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private double[] temp64;

		[Token(Token = "0x1700023E")]
		public static RobustPredicates Default
		{
			[Token(Token = "0x6001748")]
			[Address(RVA = "0xAC8378", Offset = "0xAC8378", VA = "0xAC8378")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xAC8558", Offset = "0xAC8558", VA = "0xAC8558")]
		static RobustPredicates()
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xAC8530", Offset = "0xAC8530", VA = "0xAC8530")]
		public RobustPredicates()
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xAC8928", Offset = "0xAC8928", VA = "0xAC8928", Slot = "4")]
		public double CounterClockwise(Point pa, Point pb, Point pc)
		{
			return default(double);
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xAC92DC", Offset = "0xAC92DC", VA = "0xAC92DC", Slot = "5")]
		public double InCircle(Point pa, Point pb, Point pc, Point pd)
		{
			return default(double);
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xACC45C", Offset = "0xACC45C", VA = "0xACC45C")]
		public double NonRegular(Point pa, Point pb, Point pc, Point pd)
		{
			return default(double);
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xACC460", Offset = "0xACC460", VA = "0xACC460", Slot = "7")]
		public Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta, double offconstant)
		{
			return null;
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xACC7BC", Offset = "0xACC7BC", VA = "0xACC7BC", Slot = "6")]
		public Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta)
		{
			return null;
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xACC9D4", Offset = "0xACC9D4", VA = "0xACC9D4")]
		private int FastExpansionSumZeroElim(int elen, double[] e, int flen, double[] f, double[] h)
		{
			return default(int);
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xACCCCC", Offset = "0xACCCCC", VA = "0xACCCCC")]
		private int ScaleExpansionZeroElim(int elen, double[] e, double b, double[] h)
		{
			return default(int);
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xACCF14", Offset = "0xACCF14", VA = "0xACCF14")]
		private double Estimate(int elen, double[] e)
		{
			return default(double);
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xAC8B10", Offset = "0xAC8B10", VA = "0xAC8B10")]
		private double CounterClockwiseAdapt(Point pa, Point pb, Point pc, double detsum)
		{
			return default(double);
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xAC95BC", Offset = "0xAC95BC", VA = "0xAC95BC")]
		private double InCircleAdapt(Point pa, Point pb, Point pc, Point pd, double permanent)
		{
			return default(double);
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xAC8744", Offset = "0xAC8744", VA = "0xAC8744")]
		private void AllocateWorkspace()
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xACCF7C", Offset = "0xACCF7C", VA = "0xACCF7C")]
		private void ClearWorkspace()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class TriangleLocator
	{
		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TriangleSampler sampler;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IPredicates predicates;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Otri recenttri;

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xA2E8E8", Offset = "0xA2E8E8", VA = "0xA2E8E8")]
		public TriangleLocator(Mesh mesh)
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xA2E964", Offset = "0xA2E964", VA = "0xA2E964")]
		public TriangleLocator(Mesh mesh, IPredicates predicates)
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xA2EA64", Offset = "0xA2EA64", VA = "0xA2EA64")]
		public void Update(ref Otri otri)
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xA2EA78", Offset = "0xA2EA78", VA = "0xA2EA78")]
		public void Reset()
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xA2EAB0", Offset = "0xA2EAB0", VA = "0xA2EAB0")]
		public LocateResult PreciseLocate(Point searchpoint, ref Otri searchtri, bool stopatsubsegment)
		{
			return default(LocateResult);
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xA2EDD4", Offset = "0xA2EDD4", VA = "0xA2EDD4")]
		public LocateResult Locate(Point searchpoint, ref Otri searchtri)
		{
			return default(LocateResult);
		}
	}
	[Token(Token = "0x20002DA")]
	public class TrianglePool : ICollection<Triangle>, IEnumerable<Triangle>, IEnumerable
	{
		[Token(Token = "0x20005A2")]
		private class Enumerator : IEnumerator<Triangle>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int count;

			[Token(Token = "0x4002FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Triangle[][] pool;

			[Token(Token = "0x4002FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Triangle current;

			[Token(Token = "0x4002FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int index;

			[Token(Token = "0x4002FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int offset;

			[Token(Token = "0x170003FA")]
			public Triangle Current
			{
				[Token(Token = "0x60023F3")]
				[Address(RVA = "0x879240", Offset = "0x879240", VA = "0x879240", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023F5")]
				[Address(RVA = "0x87924C", Offset = "0x87924C", VA = "0x87924C", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023F2")]
			[Address(RVA = "0x8791F4", Offset = "0x8791F4", VA = "0x8791F4")]
			public Enumerator(TrianglePool pool)
			{
			}

			[Token(Token = "0x60023F4")]
			[Address(RVA = "0x879248", Offset = "0x879248", VA = "0x879248", Slot = "5")]
			public void Dispose()
			{
			}

			[Token(Token = "0x60023F6")]
			[Address(RVA = "0x879254", Offset = "0x879254", VA = "0x879254", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023F7")]
			[Address(RVA = "0x8792FC", Offset = "0x8792FC", VA = "0x8792FC", Slot = "8")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573118", Offset = "0x573118")]
		private sealed class <Sample>d__9 : IEnumerable<Triangle>, IEnumerable, IEnumerator<Triangle>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Triangle <>2__current;

			[Token(Token = "0x4002FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrianglePool <>4__this;

			[Token(Token = "0x4002FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int k;

			[Token(Token = "0x4002FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int <>3__k;

			[Token(Token = "0x4002FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private System.Random random;

			[Token(Token = "0x4002FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public System.Random <>3__random;

			[Token(Token = "0x4002FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <count>5__2;

			[Token(Token = "0x170003FC")]
			private Triangle System.Collections.Generic.IEnumerator<TriangleNet.Topology.Triangle>.Current
			{
				[Token(Token = "0x60023FB")]
				[Address(RVA = "0x8790E8", Offset = "0x8790E8", VA = "0x8790E8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023FD")]
				[Address(RVA = "0x879130", Offset = "0x879130", VA = "0x879130", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023F8")]
			[Address(RVA = "0x878F7C", Offset = "0x878F7C", VA = "0x878F7C")]
			[DebuggerHidden]
			public <Sample>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60023F9")]
			[Address(RVA = "0x878FB4", Offset = "0x878FB4", VA = "0x878FB4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023FA")]
			[Address(RVA = "0x878FB8", Offset = "0x878FB8", VA = "0x878FB8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023FC")]
			[Address(RVA = "0x8790F0", Offset = "0x8790F0", VA = "0x8790F0", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60023FE")]
			[Address(RVA = "0x879138", Offset = "0x879138", VA = "0x879138", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Triangle> System.Collections.Generic.IEnumerable<TriangleNet.Topology.Triangle>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60023FF")]
			[Address(RVA = "0x8791F0", Offset = "0x8791F0", VA = "0x8791F0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400201C")]
		private const int BLOCKSIZE = 1024;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int size;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int count;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Triangle[][] pool;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Stack<Triangle> stack;

		[Token(Token = "0x1700023F")]
		public int Count
		{
			[Token(Token = "0x6001767")]
			[Address(RVA = "0xA2FF4C", Offset = "0xA2FF4C", VA = "0xA2FF4C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000240")]
		public bool IsReadOnly
		{
			[Token(Token = "0x6001768")]
			[Address(RVA = "0xA2FFA0", Offset = "0xA2FFA0", VA = "0xA2FFA0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xA2F494", Offset = "0xA2F494", VA = "0xA2F494")]
		public TrianglePool()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xA2F5F0", Offset = "0xA2F5F0", VA = "0xA2F5F0")]
		public Triangle Get()
		{
			return null;
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xA2F928", Offset = "0xA2F928", VA = "0xA2F928")]
		public void Release(Triangle triangle)
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xA2F9A0", Offset = "0xA2F9A0", VA = "0xA2F9A0")]
		public TrianglePool Restart()
		{
			return null;
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xA2FB00", Offset = "0xA2FB00", VA = "0xA2FB00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x591828", Offset = "0x591828")]
		internal IEnumerable<Triangle> Sample(int k, System.Random random)
		{
			return null;
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xA2F88C", Offset = "0xA2F88C", VA = "0xA2F88C")]
		private void Cleanup(Triangle triangle)
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xA2FB84", Offset = "0xA2FB84", VA = "0xA2FB84", Slot = "6")]
		public void Add(Triangle item)
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xA2FBC4", Offset = "0xA2FBC4", VA = "0xA2FBC4", Slot = "7")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xA2FCC4", Offset = "0xA2FCC4", VA = "0xA2FCC4", Slot = "8")]
		public bool Contains(Triangle item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xA2FD50", Offset = "0xA2FD50", VA = "0xA2FD50", Slot = "9")]
		public void CopyTo(Triangle[] array, int index)
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xA2FFA8", Offset = "0xA2FFA8", VA = "0xA2FFA8", Slot = "10")]
		public bool Remove(Triangle item)
		{
			return default(bool);
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xA2FEEC", Offset = "0xA2FEEC", VA = "0xA2FEEC", Slot = "11")]
		public IEnumerator<Triangle> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xA2FFE8", Offset = "0xA2FFE8", VA = "0xA2FFE8", Slot = "12")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x20002DB")]
	internal class TriangleSampler : IEnumerable<Triangle>, IEnumerable
	{
		[Token(Token = "0x4002021")]
		private const int RANDOM_SEED = 110503;

		[Token(Token = "0x4002022")]
		private const int samplefactor = 11;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private System.Random random;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int samples;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int triangleCount;

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xA2E9E0", Offset = "0xA2E9E0", VA = "0xA2E9E0")]
		public TriangleSampler(Mesh mesh)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xA33624", Offset = "0xA33624", VA = "0xA33624")]
		public TriangleSampler(Mesh mesh, System.Random random)
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xA2EAA0", Offset = "0xA2EAA0", VA = "0xA2EAA0")]
		public void Reset()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xA2F348", Offset = "0xA2F348", VA = "0xA2F348")]
		public void Update()
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xA2F3CC", Offset = "0xA2F3CC", VA = "0xA2F3CC", Slot = "4")]
		public IEnumerator<Triangle> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xA33664", Offset = "0xA33664", VA = "0xA33664", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
}
namespace TriangleNet.Voronoi
{
	[Token(Token = "0x20002DC")]
	public class BoundedVoronoi : VoronoiBase
	{
		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int offset;

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x924768", Offset = "0x924768", VA = "0x924768")]
		public BoundedVoronoi(Mesh mesh)
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x924810", Offset = "0x924810", VA = "0x924810")]
		public BoundedVoronoi(Mesh mesh, IVoronoiFactory factory, IPredicates predicates)
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x9248D0", Offset = "0x9248D0", VA = "0x9248D0")]
		private void PostProcess()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x924B9C", Offset = "0x924B9C", VA = "0x924B9C")]
		private void HandleCase1(HalfEdge edge, TriangleNet.Geometry.Vertex v1, TriangleNet.Geometry.Vertex v2)
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x924EA0", Offset = "0x924EA0", VA = "0x924EA0")]
		private void HandleCase2(HalfEdge edge, TriangleNet.Geometry.Vertex v1, TriangleNet.Geometry.Vertex v2)
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class DefaultVoronoiFactory : IVoronoiFactory
	{
		[Token(Token = "0x6001777")]
		[Address(RVA = "0xA1A5D8", Offset = "0xA1A5D8", VA = "0xA1A5D8", Slot = "4")]
		public void Initialize(int vertexCount, int edgeCount, int faceCount)
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xA1A5DC", Offset = "0xA1A5DC", VA = "0xA1A5DC", Slot = "5")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xA1A5E0", Offset = "0xA1A5E0", VA = "0xA1A5E0", Slot = "6")]
		public TriangleNet.Topology.DCEL.Vertex CreateVertex(double x, double y)
		{
			return null;
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xA1A650", Offset = "0xA1A650", VA = "0xA1A650", Slot = "7")]
		public HalfEdge CreateHalfEdge(TriangleNet.Topology.DCEL.Vertex origin, Face face)
		{
			return null;
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xA1A6C0", Offset = "0xA1A6C0", VA = "0xA1A6C0", Slot = "8")]
		public Face CreateFace(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xA1A720", Offset = "0xA1A720", VA = "0xA1A720")]
		public DefaultVoronoiFactory()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public interface IVoronoiFactory
	{
		[Token(Token = "0x600177D")]
		void Initialize(int vertexCount, int edgeCount, int faceCount);

		[Token(Token = "0x600177E")]
		void Reset();

		[Token(Token = "0x600177F")]
		TriangleNet.Topology.DCEL.Vertex CreateVertex(double x, double y);

		[Token(Token = "0x6001780")]
		HalfEdge CreateHalfEdge(TriangleNet.Topology.DCEL.Vertex origin, Face face);

		[Token(Token = "0x6001781")]
		Face CreateFace(TriangleNet.Geometry.Vertex vertex);
	}
	[Token(Token = "0x20002DF")]
	public class StandardVoronoi : VoronoiBase
	{
		[Token(Token = "0x6001782")]
		[Address(RVA = "0xB51E64", Offset = "0xB51E64", VA = "0xB51E64")]
		public StandardVoronoi(Mesh mesh)
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xB51F84", Offset = "0xB51F84", VA = "0xB51F84")]
		public StandardVoronoi(Mesh mesh, Rectangle box)
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xB51F1C", Offset = "0xB51F1C", VA = "0xB51F1C")]
		public StandardVoronoi(Mesh mesh, Rectangle box, IVoronoiFactory factory, IPredicates predicates)
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xB52034", Offset = "0xB52034", VA = "0xB52034")]
		private void PostProcess(Rectangle box)
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public abstract class VoronoiBase : DcelMesh
	{
		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected IPredicates predicates;

		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IVoronoiFactory factory;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<HalfEdge> rays;

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x93D374", Offset = "0x93D374", VA = "0x93D374")]
		protected VoronoiBase(Mesh mesh, IVoronoiFactory factory, IPredicates predicates, bool generate)
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x93D3E0", Offset = "0x93D3E0", VA = "0x93D3E0")]
		protected void Generate(Mesh mesh)
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x93D8A4", Offset = "0x93D8A4", VA = "0x93D8A4")]
		protected List<HalfEdge>[] ComputeVertices(Mesh mesh, TriangleNet.Topology.DCEL.Vertex[] vertices)
		{
			return null;
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x93DDDC", Offset = "0x93DDDC", VA = "0x93DDDC")]
		protected void ComputeEdges(Mesh mesh, TriangleNet.Topology.DCEL.Vertex[] vertices, Face[] faces, List<HalfEdge>[] map)
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x93E738", Offset = "0x93E738", VA = "0x93E738", Slot = "6")]
		protected virtual void ConnectEdges(List<HalfEdge>[] map)
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x93EA5C", Offset = "0x93EA5C", VA = "0x93EA5C", Slot = "5")]
		protected override IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
}
namespace TriangleNet.Voronoi.Legacy
{
	[Token(Token = "0x20002E1")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x571E64", Offset = "0x571E64")]
	public class BoundedVoronoiLegacy : IVoronoi
	{
		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Point[] points;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<VoronoiRegion> regions;

		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Point> segPoints;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int segIndex;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<int, SubSegment> subsegMap;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool includeBoundary;

		[Token(Token = "0x17000241")]
		public Point[] Points
		{
			[Token(Token = "0x600178E")]
			[Address(RVA = "0x925638", Offset = "0x925638", VA = "0x925638", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000242")]
		public ICollection<VoronoiRegion> Regions
		{
			[Token(Token = "0x600178F")]
			[Address(RVA = "0x925640", Offset = "0x925640", VA = "0x925640", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000243")]
		public IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x6001790")]
			[Address(RVA = "0x925648", Offset = "0x925648", VA = "0x925648", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x925178", Offset = "0x925178", VA = "0x925178")]
		public BoundedVoronoiLegacy(Mesh mesh)
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x925180", Offset = "0x925180", VA = "0x925180")]
		public BoundedVoronoiLegacy(Mesh mesh, bool includeBoundary)
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x92521C", Offset = "0x92521C", VA = "0x92521C")]
		private void Generate()
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x925E08", Offset = "0x925E08", VA = "0x925E08")]
		private void ComputeCircumCenters()
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x9261C8", Offset = "0x9261C8", VA = "0x9261C8")]
		private void TagBlindTriangles()
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x927500", Offset = "0x927500", VA = "0x927500")]
		private bool TriangleIsBlinded(ref Otri tri, ref Osub seg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x926824", Offset = "0x926824", VA = "0x926824")]
		private void ConstructCell(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x926CD8", Offset = "0x926CD8", VA = "0x926CD8")]
		private void ConstructBoundaryCell(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x927634", Offset = "0x927634", VA = "0x927634")]
		private bool SegmentsIntersect(Point p1, Point p2, Point p3, Point p4, out Point p, bool strictIntersect)
		{
			return default(bool);
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x92564C", Offset = "0x92564C", VA = "0x92564C")]
		private IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
	[Token(Token = "0x20002E2")]
	public interface IVoronoi
	{
		[Token(Token = "0x17000244")]
		Point[] Points
		{
			[Token(Token = "0x6001799")]
			get;
		}

		[Token(Token = "0x17000245")]
		ICollection<VoronoiRegion> Regions
		{
			[Token(Token = "0x600179A")]
			get;
		}

		[Token(Token = "0x17000246")]
		IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x600179B")]
			get;
		}
	}
	[Token(Token = "0x20002E3")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x571E9C", Offset = "0x571E9C")]
	public class SimpleVoronoi : IVoronoi
	{
		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Point[] points;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, VoronoiRegion> regions;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, Point> rayPoints;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int rayIndex;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rectangle bounds;

		[Token(Token = "0x17000247")]
		public Point[] Points
		{
			[Token(Token = "0x600179D")]
			[Address(RVA = "0x8CB298", Offset = "0x8CB298", VA = "0x8CB298", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000248")]
		public ICollection<VoronoiRegion> Regions
		{
			[Token(Token = "0x600179E")]
			[Address(RVA = "0x8CB2A0", Offset = "0x8CB2A0", VA = "0x8CB2A0", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000249")]
		public IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x600179F")]
			[Address(RVA = "0x8CB2F4", Offset = "0x8CB2F4", VA = "0x8CB2F4", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x8CADB8", Offset = "0x8CADB8", VA = "0x8CADB8")]
		public SimpleVoronoi(Mesh mesh)
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x8CAE40", Offset = "0x8CAE40", VA = "0x8CAE40")]
		private void Generate()
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x8CBAC4", Offset = "0x8CBAC4", VA = "0x8CBAC4")]
		private void ComputeCircumCenters()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x8CBF30", Offset = "0x8CBF30", VA = "0x8CBF30")]
		private void ConstructCell(VoronoiRegion region)
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x8CC694", Offset = "0x8CC694", VA = "0x8CC694")]
		private bool BoxRayIntersection(Point pt, double dx, double dy, out Point intersect)
		{
			return default(bool);
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x8CB2F8", Offset = "0x8CB2F8", VA = "0x8CB2F8")]
		private IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
	[Token(Token = "0x20002E4")]
	public class VoronoiRegion
	{
		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int id;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Point generator;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Point> vertices;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool bounded;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, VoronoiRegion> neighbors;

		[Token(Token = "0x1700024A")]
		public int ID
		{
			[Token(Token = "0x60017A5")]
			[Address(RVA = "0x93F44C", Offset = "0x93F44C", VA = "0x93F44C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700024B")]
		public Point Generator
		{
			[Token(Token = "0x60017A6")]
			[Address(RVA = "0x93F454", Offset = "0x93F454", VA = "0x93F454")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024C")]
		public ICollection<Point> Vertices
		{
			[Token(Token = "0x60017A7")]
			[Address(RVA = "0x93F45C", Offset = "0x93F45C", VA = "0x93F45C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024D")]
		public bool Bounded
		{
			[Token(Token = "0x60017A8")]
			[Address(RVA = "0x93F464", Offset = "0x93F464", VA = "0x93F464")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017A9")]
			[Address(RVA = "0x93F46C", Offset = "0x93F46C", VA = "0x93F46C")]
			set
			{
			}
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x93F478", Offset = "0x93F478", VA = "0x93F478")]
		public VoronoiRegion(TriangleNet.Geometry.Vertex generator)
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x93F55C", Offset = "0x93F55C", VA = "0x93F55C")]
		public void Add(Point point)
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x93F5C0", Offset = "0x93F5C0", VA = "0x93F5C0")]
		public void Add(List<Point> points)
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x93F624", Offset = "0x93F624", VA = "0x93F624")]
		public VoronoiRegion GetNeighbor(Point p)
		{
			return null;
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x93F6A4", Offset = "0x93F6A4", VA = "0x93F6A4")]
		internal void AddNeighbor(int id, VoronoiRegion neighbor)
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x93F710", Offset = "0x93F710", VA = "0x93F710", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace TriangleNet.Topology
{
	[Token(Token = "0x20002E5")]
	public struct Osub
	{
		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal SubSegment seg;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int orient;

		[Token(Token = "0x1700024E")]
		public SubSegment Segment
		{
			[Token(Token = "0x60017B0")]
			[Address(RVA = "0xF8B8F4", Offset = "0xF8B8F4", VA = "0xF8B8F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xF8B8FC", Offset = "0xF8B8FC", VA = "0xF8B8FC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xF8B9A8", Offset = "0xF8B9A8", VA = "0xF8B9A8")]
		public void Sym(ref Osub os)
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xF8B9C4", Offset = "0xF8B9C4", VA = "0xF8B9C4")]
		public void Sym()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xF8B9D8", Offset = "0xF8B9D8", VA = "0xF8B9D8")]
		public void Pivot(ref Osub os)
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xF8BA24", Offset = "0xF8BA24", VA = "0xF8BA24")]
		internal void Pivot(ref Otri ot)
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xF8BA70", Offset = "0xF8BA70", VA = "0xF8BA70")]
		public void Next(ref Osub ot)
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xF8BAC4", Offset = "0xF8BAC4", VA = "0xF8BAC4")]
		public void Next()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xF8BB18", Offset = "0xF8BB18", VA = "0xF8BB18")]
		public TriangleNet.Geometry.Vertex Org()
		{
			return null;
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xF8BB60", Offset = "0xF8BB60", VA = "0xF8BB60")]
		public TriangleNet.Geometry.Vertex Dest()
		{
			return null;
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xF8BBB0", Offset = "0xF8BBB0", VA = "0xF8BBB0")]
		internal void SetOrg(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xF8BC30", Offset = "0xF8BC30", VA = "0xF8BC30")]
		internal void SetDest(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xF8BCB8", Offset = "0xF8BCB8", VA = "0xF8BCB8")]
		internal TriangleNet.Geometry.Vertex SegOrg()
		{
			return null;
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xF8BD04", Offset = "0xF8BD04", VA = "0xF8BD04")]
		internal TriangleNet.Geometry.Vertex SegDest()
		{
			return null;
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xF8BD54", Offset = "0xF8BD54", VA = "0xF8BD54")]
		internal void SetSegOrg(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xF8BDD8", Offset = "0xF8BDD8", VA = "0xF8BDD8")]
		internal void SetSegDest(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xF8BE60", Offset = "0xF8BE60", VA = "0xF8BE60")]
		internal void Bond(ref Osub os)
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xF8BED8", Offset = "0xF8BED8", VA = "0xF8BED8")]
		internal void Dissolve(SubSegment dummy)
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xF8BF20", Offset = "0xF8BF20", VA = "0xF8BF20")]
		internal bool Equal(Osub os)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xF8BF44", Offset = "0xF8BF44", VA = "0xF8BF44")]
		internal void TriDissolve(Triangle dummy)
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xF8BF8C", Offset = "0xF8BF8C", VA = "0xF8BF8C")]
		internal static bool IsDead(SubSegment sub)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xF8BFCC", Offset = "0xF8BFCC", VA = "0xF8BFCC")]
		internal static void Kill(SubSegment sub)
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public struct Otri
	{
		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Triangle tri;

		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int orient;

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] plus1Mod3;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int[] minus1Mod3;

		[Token(Token = "0x1700024F")]
		public Triangle Triangle
		{
			[Token(Token = "0x60017C6")]
			[Address(RVA = "0xF8C01C", Offset = "0xF8C01C", VA = "0xF8C01C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017C7")]
			[Address(RVA = "0xF8C024", Offset = "0xF8C024", VA = "0xF8C024")]
			set
			{
			}
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xF8C02C", Offset = "0xF8C02C", VA = "0xF8C02C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xF8C0D8", Offset = "0xF8C0D8", VA = "0xF8C0D8")]
		public void Sym(ref Otri ot)
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xF8C150", Offset = "0xF8C150", VA = "0xF8C150")]
		public void Sym()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xF8C1BC", Offset = "0xF8C1BC", VA = "0xF8C1BC")]
		public void Lnext(ref Otri ot)
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xF8C268", Offset = "0xF8C268", VA = "0xF8C268")]
		public void Lnext()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xF8C300", Offset = "0xF8C300", VA = "0xF8C300")]
		public void Lprev(ref Otri ot)
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xF8C3AC", Offset = "0xF8C3AC", VA = "0xF8C3AC")]
		public void Lprev()
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xF8C444", Offset = "0xF8C444", VA = "0xF8C444")]
		public void Onext(ref Otri ot)
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xF8C538", Offset = "0xF8C538", VA = "0xF8C538")]
		public void Onext()
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xF8C618", Offset = "0xF8C618", VA = "0xF8C618")]
		public void Oprev(ref Otri ot)
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xF8C714", Offset = "0xF8C714", VA = "0xF8C714")]
		public void Oprev()
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xF8C7F8", Offset = "0xF8C7F8", VA = "0xF8C7F8")]
		public void Dnext(ref Otri ot)
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xF8C8F4", Offset = "0xF8C8F4", VA = "0xF8C8F4")]
		public void Dnext()
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xF8C9D8", Offset = "0xF8C9D8", VA = "0xF8C9D8")]
		public void Dprev(ref Otri ot)
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xF8CACC", Offset = "0xF8CACC", VA = "0xF8CACC")]
		public void Dprev()
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xF8CBAC", Offset = "0xF8CBAC", VA = "0xF8CBAC")]
		public void Rnext(ref Otri ot)
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xF8CCF0", Offset = "0xF8CCF0", VA = "0xF8CCF0")]
		public void Rnext()
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xF8CE1C", Offset = "0xF8CE1C", VA = "0xF8CE1C")]
		public void Rprev(ref Otri ot)
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xF8CF60", Offset = "0xF8CF60", VA = "0xF8CF60")]
		public void Rprev()
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xF8D08C", Offset = "0xF8D08C", VA = "0xF8D08C")]
		public TriangleNet.Geometry.Vertex Org()
		{
			return null;
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xF8D14C", Offset = "0xF8D14C", VA = "0xF8D14C")]
		public TriangleNet.Geometry.Vertex Dest()
		{
			return null;
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xF8D20C", Offset = "0xF8D20C", VA = "0xF8D20C")]
		public TriangleNet.Geometry.Vertex Apex()
		{
			return null;
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xF8D254", Offset = "0xF8D254", VA = "0xF8D254")]
		public void Copy(ref Otri ot)
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xF8D268", Offset = "0xF8D268", VA = "0xF8D268")]
		public bool Equals(Otri ot)
		{
			return default(bool);
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xF8D28C", Offset = "0xF8D28C", VA = "0xF8D28C")]
		internal void SetOrg(TriangleNet.Geometry.Vertex v)
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xF8D374", Offset = "0xF8D374", VA = "0xF8D374")]
		internal void SetDest(TriangleNet.Geometry.Vertex v)
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xF8D45C", Offset = "0xF8D45C", VA = "0xF8D45C")]
		internal void SetApex(TriangleNet.Geometry.Vertex v)
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xF8D4DC", Offset = "0xF8D4DC", VA = "0xF8D4DC")]
		internal void Bond(ref Otri ot)
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xF8D5AC", Offset = "0xF8D5AC", VA = "0xF8D5AC")]
		internal void Dissolve(Triangle dummy)
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xF8D61C", Offset = "0xF8D61C", VA = "0xF8D61C")]
		internal void Infect()
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xF8D63C", Offset = "0xF8D63C", VA = "0xF8D63C")]
		internal void Uninfect()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xF8D658", Offset = "0xF8D658", VA = "0xF8D658")]
		internal bool IsInfected()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xF8D674", Offset = "0xF8D674", VA = "0xF8D674")]
		internal void Pivot(ref Osub os)
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xF8D6C0", Offset = "0xF8D6C0", VA = "0xF8D6C0")]
		internal void SegBond(ref Osub os)
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xF8D738", Offset = "0xF8D738", VA = "0xF8D738")]
		internal void SegDissolve(SubSegment dummy)
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xF8D780", Offset = "0xF8D780", VA = "0xF8D780")]
		internal static bool IsDead(Triangle tria)
		{
			return default(bool);
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xF8D7C0", Offset = "0xF8D7C0", VA = "0xF8D7C0")]
		internal static void Kill(Triangle tri)
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class SubSegment : ISegment, IEdge
	{
		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int hash;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Osub[] subsegs;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal TriangleNet.Geometry.Vertex[] vertices;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Otri[] triangles;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int boundary;

		[Token(Token = "0x17000250")]
		public int P0
		{
			[Token(Token = "0x60017EF")]
			[Address(RVA = "0xAFA584", Offset = "0xAFA584", VA = "0xAFA584", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000251")]
		public int P1
		{
			[Token(Token = "0x60017F0")]
			[Address(RVA = "0xAFA5C0", Offset = "0xAFA5C0", VA = "0xAFA5C0", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000252")]
		public int Label
		{
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0xAFA600", Offset = "0xAFA600", VA = "0xAFA600", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xAFA4D8", Offset = "0xAFA4D8", VA = "0xAFA4D8")]
		public SubSegment()
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xAFA608", Offset = "0xAFA608", VA = "0xAFA608", Slot = "4")]
		public TriangleNet.Geometry.Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xAFA644", Offset = "0xAFA644", VA = "0xAFA644", Slot = "5")]
		public ITriangle GetTriangle(int index)
		{
			return null;
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xAFA690", Offset = "0xAFA690", VA = "0xAFA690", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xAFA698", Offset = "0xAFA698", VA = "0xAFA698", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002E8")]
	public class Triangle : ITriangle
	{
		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int hash;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int id;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Otri[] neighbors;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal TriangleNet.Geometry.Vertex[] vertices;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Osub[] subsegs;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int label;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal double area;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal bool infected;

		[Token(Token = "0x17000253")]
		public int ID
		{
			[Token(Token = "0x60017F7")]
			[Address(RVA = "0xA2C498", Offset = "0xA2C498", VA = "0xA2C498", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60017F8")]
			[Address(RVA = "0xA2C4A0", Offset = "0xA2C4A0", VA = "0xA2C4A0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000254")]
		public int Label
		{
			[Token(Token = "0x60017F9")]
			[Address(RVA = "0xA2C4A8", Offset = "0xA2C4A8", VA = "0xA2C4A8", Slot = "6")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60017FA")]
			[Address(RVA = "0xA2C4B0", Offset = "0xA2C4B0", VA = "0xA2C4B0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000255")]
		public double Area
		{
			[Token(Token = "0x60017FB")]
			[Address(RVA = "0xA2C4B8", Offset = "0xA2C4B8", VA = "0xA2C4B8", Slot = "8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60017FC")]
			[Address(RVA = "0xA2C4C0", Offset = "0xA2C4C0", VA = "0xA2C4C0", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xA2C3F0", Offset = "0xA2C3F0", VA = "0xA2C3F0")]
		public Triangle()
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xA2C4C8", Offset = "0xA2C4C8", VA = "0xA2C4C8", Slot = "10")]
		public TriangleNet.Geometry.Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xA2C504", Offset = "0xA2C504", VA = "0xA2C504", Slot = "11")]
		public int GetVertexID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xA2C548", Offset = "0xA2C548", VA = "0xA2C548", Slot = "12")]
		public ITriangle GetNeighbor(int index)
		{
			return null;
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xA2C594", Offset = "0xA2C594", VA = "0xA2C594", Slot = "13")]
		public int GetNeighborID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xA2C5EC", Offset = "0xA2C5EC", VA = "0xA2C5EC", Slot = "14")]
		public ISegment GetSegment(int index)
		{
			return null;
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xA2C638", Offset = "0xA2C638", VA = "0xA2C638", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xA2C640", Offset = "0xA2C640", VA = "0xA2C640", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace TriangleNet.Topology.DCEL
{
	[Token(Token = "0x20002E9")]
	public class DcelMesh
	{
		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<Vertex> vertices;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected List<HalfEdge> edges;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<Face> faces;

		[Token(Token = "0x17000256")]
		public List<Vertex> Vertices
		{
			[Token(Token = "0x6001806")]
			[Address(RVA = "0xA17550", Offset = "0xA17550", VA = "0xA17550")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000257")]
		public List<HalfEdge> HalfEdges
		{
			[Token(Token = "0x6001807")]
			[Address(RVA = "0xA17558", Offset = "0xA17558", VA = "0xA17558")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000258")]
		public List<Face> Faces
		{
			[Token(Token = "0x6001808")]
			[Address(RVA = "0xA17560", Offset = "0xA17560", VA = "0xA17560")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000259")]
		public IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x6001809")]
			[Address(RVA = "0xA17568", Offset = "0xA17568", VA = "0xA17568")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xA14E60", Offset = "0xA14E60", VA = "0xA14E60")]
		public DcelMesh()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xA17444", Offset = "0xA17444", VA = "0xA17444")]
		protected DcelMesh(bool initialize)
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0xA17574", Offset = "0xA17574", VA = "0xA17574", Slot = "4")]
		public virtual bool IsConsistent(bool closed = true, int depth = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0xA17CB4", Offset = "0xA17CB4", VA = "0xA17CB4")]
		public void ResolveBoundaryEdges()
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xA180FC", Offset = "0xA180FC", VA = "0xA180FC", Slot = "5")]
		protected virtual IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
	[Token(Token = "0x20002EA")]
	public class Face
	{
		[Token(Token = "0x20005A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573128", Offset = "0x573128")]
		private sealed class <EnumerateEdges>d__17 : IEnumerable<HalfEdge>, IEnumerable, IEnumerator<HalfEdge>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private HalfEdge <>2__current;

			[Token(Token = "0x4002FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Face <>4__this;

			[Token(Token = "0x4002FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private HalfEdge <edge>5__2;

			[Token(Token = "0x4002FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <first>5__3;

			[Token(Token = "0x170003FE")]
			private HalfEdge System.Collections.Generic.IEnumerator<TriangleNet.Topology.DCEL.HalfEdge>.Current
			{
				[Token(Token = "0x6002403")]
				[Address(RVA = "0x91CC04", Offset = "0x91CC04", VA = "0x91CC04", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002405")]
				[Address(RVA = "0x91CC4C", Offset = "0x91CC4C", VA = "0x91CC4C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002400")]
			[Address(RVA = "0x91CB38", Offset = "0x91CB38", VA = "0x91CB38")]
			[DebuggerHidden]
			public <EnumerateEdges>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002401")]
			[Address(RVA = "0x91CB70", Offset = "0x91CB70", VA = "0x91CB70", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002402")]
			[Address(RVA = "0x91CB74", Offset = "0x91CB74", VA = "0x91CB74", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002404")]
			[Address(RVA = "0x91CC0C", Offset = "0x91CC0C", VA = "0x91CC0C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002406")]
			[Address(RVA = "0x91CC54", Offset = "0x91CC54", VA = "0x91CC54", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<HalfEdge> System.Collections.Generic.IEnumerable<TriangleNet.Topology.DCEL.HalfEdge>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002407")]
			[Address(RVA = "0x91CCFC", Offset = "0x91CCFC", VA = "0x91CCFC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Face Empty;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int id;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Point generator;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal HalfEdge edge;

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal bool bounded;

		[Token(Token = "0x1700025A")]
		public int ID
		{
			[Token(Token = "0x600180E")]
			[Address(RVA = "0x8B13B0", Offset = "0x8B13B0", VA = "0x8B13B0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600180F")]
			[Address(RVA = "0x8B13B8", Offset = "0x8B13B8", VA = "0x8B13B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public HalfEdge Edge
		{
			[Token(Token = "0x6001810")]
			[Address(RVA = "0x8B13C0", Offset = "0x8B13C0", VA = "0x8B13C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001811")]
			[Address(RVA = "0x8B13C8", Offset = "0x8B13C8", VA = "0x8B13C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public bool Bounded
		{
			[Token(Token = "0x6001812")]
			[Address(RVA = "0x8B13D0", Offset = "0x8B13D0", VA = "0x8B13D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001813")]
			[Address(RVA = "0x8B13D8", Offset = "0x8B13D8", VA = "0x8B13D8")]
			set
			{
			}
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0x8B1328", Offset = "0x8B1328", VA = "0x8B1328")]
		static Face()
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x8B13A8", Offset = "0x8B13A8", VA = "0x8B13A8")]
		public Face(Point generator)
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x8B13E4", Offset = "0x8B13E4", VA = "0x8B13E4")]
		public Face(Point generator, HalfEdge edge)
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x8B1448", Offset = "0x8B1448", VA = "0x8B1448")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x591888", Offset = "0x591888")]
		public IEnumerable<HalfEdge> EnumerateEdges()
		{
			return null;
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x8B14B4", Offset = "0x8B14B4", VA = "0x8B14B4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002EB")]
	public class HalfEdge
	{
		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int id;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int mark;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Vertex origin;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Face face;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal HalfEdge twin;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal HalfEdge next;

		[Token(Token = "0x1700025D")]
		public int ID
		{
			[Token(Token = "0x6001818")]
			[Address(RVA = "0xE49BF0", Offset = "0xE49BF0", VA = "0xE49BF0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001819")]
			[Address(RVA = "0xE49BF8", Offset = "0xE49BF8", VA = "0xE49BF8")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public int Boundary
		{
			[Token(Token = "0x600181A")]
			[Address(RVA = "0xE49C00", Offset = "0xE49C00", VA = "0xE49C00")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600181B")]
			[Address(RVA = "0xE49C08", Offset = "0xE49C08", VA = "0xE49C08")]
			set
			{
			}
		}

		[Token(Token = "0x1700025F")]
		public Vertex Origin
		{
			[Token(Token = "0x600181C")]
			[Address(RVA = "0xE49C10", Offset = "0xE49C10", VA = "0xE49C10")]
			get
			{
				return null;
			}
			[Token(Token = "0x600181D")]
			[Address(RVA = "0xE49C18", Offset = "0xE49C18", VA = "0xE49C18")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public Face Face
		{
			[Token(Token = "0x600181E")]
			[Address(RVA = "0xE49C20", Offset = "0xE49C20", VA = "0xE49C20")]
			get
			{
				return null;
			}
			[Token(Token = "0x600181F")]
			[Address(RVA = "0xE49C28", Offset = "0xE49C28", VA = "0xE49C28")]
			set
			{
			}
		}

		[Token(Token = "0x17000261")]
		public HalfEdge Twin
		{
			[Token(Token = "0x6001820")]
			[Address(RVA = "0xE49C30", Offset = "0xE49C30", VA = "0xE49C30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001821")]
			[Address(RVA = "0xE49C38", Offset = "0xE49C38", VA = "0xE49C38")]
			set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public HalfEdge Next
		{
			[Token(Token = "0x6001822")]
			[Address(RVA = "0xE49C40", Offset = "0xE49C40", VA = "0xE49C40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001823")]
			[Address(RVA = "0xE49C48", Offset = "0xE49C48", VA = "0xE49C48")]
			set
			{
			}
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xE49C50", Offset = "0xE49C50", VA = "0xE49C50")]
		public HalfEdge(Vertex origin)
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xE49C7C", Offset = "0xE49C7C", VA = "0xE49C7C")]
		public HalfEdge(Vertex origin, Face face)
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xE49CC4", Offset = "0xE49CC4", VA = "0xE49CC4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002EC")]
	public class Vertex : Point
	{
		[Token(Token = "0x20005A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573138", Offset = "0x573138")]
		private sealed class <EnumerateEdges>d__6 : IEnumerable<HalfEdge>, IEnumerable, IEnumerator<HalfEdge>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private HalfEdge <>2__current;

			[Token(Token = "0x4002FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vertex <>4__this;

			[Token(Token = "0x4002FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private HalfEdge <edge>5__2;

			[Token(Token = "0x4002FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <first>5__3;

			[Token(Token = "0x17000400")]
			private HalfEdge System.Collections.Generic.IEnumerator<TriangleNet.Topology.DCEL.HalfEdge>.Current
			{
				[Token(Token = "0x600240B")]
				[Address(RVA = "0x1377328", Offset = "0x1377328", VA = "0x1377328", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000401")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600240D")]
				[Address(RVA = "0x1377370", Offset = "0x1377370", VA = "0x1377370", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002408")]
			[Address(RVA = "0x1377254", Offset = "0x1377254", VA = "0x1377254")]
			[DebuggerHidden]
			public <EnumerateEdges>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002409")]
			[Address(RVA = "0x137728C", Offset = "0x137728C", VA = "0x137728C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600240A")]
			[Address(RVA = "0x1377290", Offset = "0x1377290", VA = "0x1377290", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600240C")]
			[Address(RVA = "0x1377330", Offset = "0x1377330", VA = "0x1377330", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600240E")]
			[Address(RVA = "0x1377378", Offset = "0x1377378", VA = "0x1377378", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<HalfEdge> System.Collections.Generic.IEnumerable<TriangleNet.Topology.DCEL.HalfEdge>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600240F")]
			[Address(RVA = "0x1377420", Offset = "0x1377420", VA = "0x1377420", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal HalfEdge leaving;

		[Token(Token = "0x17000263")]
		public HalfEdge Leaving
		{
			[Token(Token = "0x6001827")]
			[Address(RVA = "0x93C0EC", Offset = "0x93C0EC", VA = "0x93C0EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001828")]
			[Address(RVA = "0x93C0F4", Offset = "0x93C0F4", VA = "0x93C0F4")]
			set
			{
			}
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x93C0FC", Offset = "0x93C0FC", VA = "0x93C0FC")]
		public Vertex(double x, double y)
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x93C104", Offset = "0x93C104", VA = "0x93C104")]
		public Vertex(double x, double y, HalfEdge leaving)
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x93C130", Offset = "0x93C130", VA = "0x93C130")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5918E8", Offset = "0x5918E8")]
		public IEnumerable<HalfEdge> EnumerateEdges()
		{
			return null;
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x93C19C", Offset = "0x93C19C", VA = "0x93C19C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace TriangleNet.Tools
{
	[Token(Token = "0x20002ED")]
	public class AdjacencyMatrix
	{
		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int nnz;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[] pcol;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] irow;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int N;

		[Token(Token = "0x17000264")]
		public int[] ColumnPointers
		{
			[Token(Token = "0x600182D")]
			[Address(RVA = "0x87C864", Offset = "0x87C864", VA = "0x87C864")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000265")]
		public int[] RowIndices
		{
			[Token(Token = "0x600182E")]
			[Address(RVA = "0x87C86C", Offset = "0x87C86C", VA = "0x87C86C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x87C874", Offset = "0x87C874", VA = "0x87C874")]
		public AdjacencyMatrix(Mesh mesh)
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x87D6A8", Offset = "0x87D6A8", VA = "0x87D6A8")]
		public AdjacencyMatrix(int[] pcol, int[] irow)
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x87D7B4", Offset = "0x87D7B4", VA = "0x87D7B4")]
		public int Bandwidth()
		{
			return default(int);
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x87C940", Offset = "0x87C940", VA = "0x87C940")]
		private int[] AdjacencyCount(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0x87CF3C", Offset = "0x87CF3C", VA = "0x87CF3C")]
		private int[] AdjacencySet(Mesh mesh, int[] pcol)
		{
			return null;
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x87D5EC", Offset = "0x87D5EC", VA = "0x87D5EC")]
		public void SortIndices()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class CuthillMcKee
	{
		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AdjacencyMatrix matrix;

		[Token(Token = "0x6001835")]
		[Address(RVA = "0xA15530", Offset = "0xA15530", VA = "0xA15530")]
		public int[] Renumber(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xA155B8", Offset = "0xA155B8", VA = "0xA155B8")]
		public int[] Renumber(AdjacencyMatrix matrix)
		{
			return null;
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xA158C0", Offset = "0xA158C0", VA = "0xA158C0")]
		private int[] GenerateRcm()
		{
			return null;
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xA15ED4", Offset = "0xA15ED4", VA = "0xA15ED4")]
		private void Rcm(int root, int[] mask, int[] perm, int offset, ref int iccsze)
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xA15CD0", Offset = "0xA15CD0", VA = "0xA15CD0")]
		private void FindRoot(ref int root, int[] mask, ref int level_num, int[] level_row, int[] level, int offset)
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xA16530", Offset = "0xA16530", VA = "0xA16530")]
		private void GetLevelSet(ref int root, int[] mask, ref int level_num, int[] level_row, int[] level, int offset)
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xA161D4", Offset = "0xA161D4", VA = "0xA161D4")]
		private void Degree(int root, int[] mask, int[] deg, ref int iccsze, int[] ls, int offset)
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xA15B10", Offset = "0xA15B10", VA = "0xA15B10")]
		private int PermBandwidth(int[] perm, int[] perm_inv)
		{
			return default(int);
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xA15A50", Offset = "0xA15A50", VA = "0xA15A50")]
		private int[] PermInverse(int[] perm)
		{
			return null;
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xA1648C", Offset = "0xA1648C", VA = "0xA1648C")]
		private void ReverseVector(int[] a, int offset, int size)
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xA15828", Offset = "0xA15828", VA = "0xA15828")]
		private void Shift(int[] a, bool up)
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0xA16738", Offset = "0xA16738", VA = "0xA16738")]
		public CuthillMcKee()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public static class Interpolation
	{
		[Token(Token = "0x6001841")]
		[Address(RVA = "0xA6E130", Offset = "0xA6E130", VA = "0xA6E130")]
		public static void InterpolateZ(Point p, ITriangle triangle)
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public static class IntersectionHelper
	{
		[Token(Token = "0x6001842")]
		[Address(RVA = "0xA6E360", Offset = "0xA6E360", VA = "0xA6E360")]
		public static void IntersectSegments(Point p0, Point p1, Point q0, Point q1, ref Point c0)
		{
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xA6E3F4", Offset = "0xA6E3F4", VA = "0xA6E3F4")]
		public static bool LiangBarsky(Rectangle rect, Point p0, Point p1, ref Point c0, ref Point c1)
		{
			return default(bool);
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xA6E568", Offset = "0xA6E568", VA = "0xA6E568")]
		public static bool BoxRayIntersection(Rectangle rect, Point p0, Point p1, ref Point c1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002F1")]
	public static class PolygonValidator
	{
		[Token(Token = "0x6001845")]
		[Address(RVA = "0xAA282C", Offset = "0xAA282C", VA = "0xAA282C")]
		public static bool IsConsistent(IPolygon poly)
		{
			return default(bool);
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xAA3C90", Offset = "0xAA3C90", VA = "0xAA3C90")]
		public static bool HasDuplicateVertices(IPolygon poly)
		{
			return default(bool);
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xAA3F4C", Offset = "0xAA3F4C", VA = "0xAA3F4C")]
		public static bool HasBadAngles(IPolygon poly, double threshold = 2E-12)
		{
			return default(bool);
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xAA44AC", Offset = "0xAA44AC", VA = "0xAA44AC")]
		private static bool IsBadAngle(Point a, Point b, Point c, double threshold = 0.0)
		{
			return default(bool);
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xAA456C", Offset = "0xAA456C", VA = "0xAA456C")]
		private static double DotProduct(Point a, Point b, Point c)
		{
			return default(double);
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xAA45B4", Offset = "0xAA45B4", VA = "0xAA45B4")]
		private static double CrossProductLength(Point a, Point b, Point c)
		{
			return default(double);
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xAA33FC", Offset = "0xAA33FC", VA = "0xAA33FC")]
		private static int CheckVertexIDs(IPolygon poly, int count)
		{
			return default(int);
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xAA3934", Offset = "0xAA3934", VA = "0xAA3934")]
		private static int CheckDuplicateIDs(IPolygon poly)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002F2")]
	public class QualityMeasure
	{
		[Token(Token = "0x20005A6")]
		private class AreaMeasure
		{
			[Token(Token = "0x4002FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double area_min;

			[Token(Token = "0x4002FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public double area_max;

			[Token(Token = "0x4002FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double area_total;

			[Token(Token = "0x4002FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int area_zero;

			[Token(Token = "0x6002410")]
			[Address(RVA = "0x869D28", Offset = "0x869D28", VA = "0x869D28")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002411")]
			[Address(RVA = "0x869D40", Offset = "0x869D40", VA = "0x869D40")]
			public double Measure(Point a, Point b, Point c)
			{
				return default(double);
			}

			[Token(Token = "0x6002412")]
			[Address(RVA = "0x869E68", Offset = "0x869E68", VA = "0x869E68")]
			public AreaMeasure()
			{
			}
		}

		[Token(Token = "0x20005A7")]
		private class AlphaMeasure
		{
			[Token(Token = "0x4002FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double alpha_min;

			[Token(Token = "0x4002FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public double alpha_max;

			[Token(Token = "0x4002FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double alpha_ave;

			[Token(Token = "0x4002FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public double alpha_area;

			[Token(Token = "0x6002413")]
			[Address(RVA = "0x869A34", Offset = "0x869A34", VA = "0x869A34")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002414")]
			[Address(RVA = "0x869A48", Offset = "0x869A48", VA = "0x869A48")]
			private double acos(double c)
			{
				return default(double);
			}

			[Token(Token = "0x6002415")]
			[Address(RVA = "0x869AE4", Offset = "0x869AE4", VA = "0x869AE4")]
			public double Measure(double ab, double bc, double ca, double area)
			{
				return default(double);
			}

			[Token(Token = "0x6002416")]
			[Address(RVA = "0x869CE8", Offset = "0x869CE8", VA = "0x869CE8")]
			public void Normalize(int n, double area_total)
			{
			}

			[Token(Token = "0x6002417")]
			[Address(RVA = "0x869D20", Offset = "0x869D20", VA = "0x869D20")]
			public AlphaMeasure()
			{
			}
		}

		[Token(Token = "0x20005A8")]
		private class Q_Measure
		{
			[Token(Token = "0x4002FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double q_min;

			[Token(Token = "0x4002FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public double q_max;

			[Token(Token = "0x4002FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double q_ave;

			[Token(Token = "0x4003000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public double q_area;

			[Token(Token = "0x6002418")]
			[Address(RVA = "0x869E7C", Offset = "0x869E7C", VA = "0x869E7C")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002419")]
			[Address(RVA = "0x869E90", Offset = "0x869E90", VA = "0x869E90")]
			public double Measure(double ab, double bc, double ca, double area)
			{
				return default(double);
			}

			[Token(Token = "0x600241A")]
			[Address(RVA = "0x869F88", Offset = "0x869F88", VA = "0x869F88")]
			public void Normalize(int n, double area_total)
			{
			}

			[Token(Token = "0x600241B")]
			[Address(RVA = "0x869FC0", Offset = "0x869FC0", VA = "0x869FC0")]
			public Q_Measure()
			{
			}
		}

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AreaMeasure areaMeasure;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AlphaMeasure alphaMeasure;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Q_Measure qMeasure;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh mesh;

		[Token(Token = "0x17000266")]
		public double AreaMinimum
		{
			[Token(Token = "0x600184E")]
			[Address(RVA = "0xC6F3DC", Offset = "0xC6F3DC", VA = "0xC6F3DC")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000267")]
		public double AreaMaximum
		{
			[Token(Token = "0x600184F")]
			[Address(RVA = "0xC6F3F8", Offset = "0xC6F3F8", VA = "0xC6F3F8")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000268")]
		public double AreaRatio
		{
			[Token(Token = "0x6001850")]
			[Address(RVA = "0xC6F414", Offset = "0xC6F414", VA = "0xC6F414")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000269")]
		public double AlphaMinimum
		{
			[Token(Token = "0x6001851")]
			[Address(RVA = "0xC6F434", Offset = "0xC6F434", VA = "0xC6F434")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700026A")]
		public double AlphaMaximum
		{
			[Token(Token = "0x6001852")]
			[Address(RVA = "0xC6F450", Offset = "0xC6F450", VA = "0xC6F450")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700026B")]
		public double AlphaAverage
		{
			[Token(Token = "0x6001853")]
			[Address(RVA = "0xC6F46C", Offset = "0xC6F46C", VA = "0xC6F46C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700026C")]
		public double AlphaArea
		{
			[Token(Token = "0x6001854")]
			[Address(RVA = "0xC6F488", Offset = "0xC6F488", VA = "0xC6F488")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700026D")]
		public double Q_Minimum
		{
			[Token(Token = "0x6001855")]
			[Address(RVA = "0xC6F4A4", Offset = "0xC6F4A4", VA = "0xC6F4A4")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700026E")]
		public double Q_Maximum
		{
			[Token(Token = "0x6001856")]
			[Address(RVA = "0xC6F4C0", Offset = "0xC6F4C0", VA = "0xC6F4C0")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700026F")]
		public double Q_Average
		{
			[Token(Token = "0x6001857")]
			[Address(RVA = "0xC6F4DC", Offset = "0xC6F4DC", VA = "0xC6F4DC")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000270")]
		public double Q_Area
		{
			[Token(Token = "0x6001858")]
			[Address(RVA = "0xC6F4F8", Offset = "0xC6F4F8", VA = "0xC6F4F8")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xC6F31C", Offset = "0xC6F31C", VA = "0xC6F31C")]
		public QualityMeasure()
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0xC6F514", Offset = "0xC6F514", VA = "0xC6F514")]
		public void Update(Mesh mesh)
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0xC6F56C", Offset = "0xC6F56C", VA = "0xC6F56C")]
		private void Compute()
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0xC6F9F0", Offset = "0xC6F9F0", VA = "0xC6F9F0")]
		public int Bandwidth()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002F3")]
	public class Statistic
	{
		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static long InCircleCount;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static long InCircleAdaptCount;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static long CounterClockwiseCount;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static long CounterClockwiseAdaptCount;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static long Orient3dCount;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static long HyperbolaCount;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static long CircumcenterCount;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static long CircleTopCount;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static long RelocationCount;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double minEdge;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double maxEdge;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double minAspect;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double maxAspect;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double minArea;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double maxArea;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double minAngle;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private double maxAngle;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int[] angleTable;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int[] minAngles;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] maxAngles;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly int[] plus1Mod3;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static readonly int[] minus1Mod3;

		[Token(Token = "0x17000271")]
		public double ShortestEdge
		{
			[Token(Token = "0x600185C")]
			[Address(RVA = "0xB52824", Offset = "0xB52824", VA = "0xB52824")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000272")]
		public double LongestEdge
		{
			[Token(Token = "0x600185D")]
			[Address(RVA = "0xB5282C", Offset = "0xB5282C", VA = "0xB5282C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000273")]
		public double ShortestAltitude
		{
			[Token(Token = "0x600185E")]
			[Address(RVA = "0xB52834", Offset = "0xB52834", VA = "0xB52834")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000274")]
		public double LargestAspectRatio
		{
			[Token(Token = "0x600185F")]
			[Address(RVA = "0xB5283C", Offset = "0xB5283C", VA = "0xB5283C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000275")]
		public double SmallestArea
		{
			[Token(Token = "0x6001860")]
			[Address(RVA = "0xB52844", Offset = "0xB52844", VA = "0xB52844")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000276")]
		public double LargestArea
		{
			[Token(Token = "0x6001861")]
			[Address(RVA = "0xB5284C", Offset = "0xB5284C", VA = "0xB5284C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000277")]
		public double SmallestAngle
		{
			[Token(Token = "0x6001862")]
			[Address(RVA = "0xB52854", Offset = "0xB52854", VA = "0xB52854")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000278")]
		public double LargestAngle
		{
			[Token(Token = "0x6001863")]
			[Address(RVA = "0xB5285C", Offset = "0xB5285C", VA = "0xB5285C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000279")]
		public int[] AngleHistogram
		{
			[Token(Token = "0x6001864")]
			[Address(RVA = "0xB52864", Offset = "0xB52864", VA = "0xB52864")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027A")]
		public int[] MinAngleHistogram
		{
			[Token(Token = "0x6001865")]
			[Address(RVA = "0xB5286C", Offset = "0xB5286C", VA = "0xB5286C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027B")]
		public int[] MaxAngleHistogram
		{
			[Token(Token = "0x6001866")]
			[Address(RVA = "0xB52874", Offset = "0xB52874", VA = "0xB52874")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xB5287C", Offset = "0xB5287C", VA = "0xB5287C")]
		private void GetAspectHistogram(Mesh mesh)
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xB530A8", Offset = "0xB530A8", VA = "0xB530A8")]
		public void Update(Mesh mesh, int sampleDegrees)
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xB54040", Offset = "0xB54040", VA = "0xB54040")]
		public Statistic()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class TriangleQuadTree
	{
		[Token(Token = "0x20005A9")]
		private class QuadNode
		{
			[Token(Token = "0x4003001")]
			private const int SW = 0;

			[Token(Token = "0x4003002")]
			private const int SE = 1;

			[Token(Token = "0x4003003")]
			private const int NW = 2;

			[Token(Token = "0x4003004")]
			private const int NE = 3;

			[Token(Token = "0x4003005")]
			private const double EPS = 1E-06;

			[Token(Token = "0x4003006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly byte[] BITVECTOR;

			[Token(Token = "0x4003007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Rectangle bounds;

			[Token(Token = "0x4003008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Point pivot;

			[Token(Token = "0x4003009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private TriangleQuadTree tree;

			[Token(Token = "0x400300A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private QuadNode[] regions;

			[Token(Token = "0x400300B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<int> triangles;

			[Token(Token = "0x400300C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private byte bitRegions;

			[Token(Token = "0x600241C")]
			[Address(RVA = "0x879304", Offset = "0x879304", VA = "0x879304")]
			public QuadNode(Rectangle box, TriangleQuadTree tree)
			{
			}

			[Token(Token = "0x600241D")]
			[Address(RVA = "0x87930C", Offset = "0x87930C", VA = "0x87930C")]
			public QuadNode(Rectangle box, TriangleQuadTree tree, bool init)
			{
			}

			[Token(Token = "0x600241E")]
			[Address(RVA = "0x87950C", Offset = "0x87950C", VA = "0x87950C")]
			public List<int> FindTriangles(Point searchPoint)
			{
				return null;
			}

			[Token(Token = "0x600241F")]
			[Address(RVA = "0x8795A8", Offset = "0x8795A8", VA = "0x8795A8")]
			public void CreateSubRegion(int currentDepth)
			{
			}

			[Token(Token = "0x6002420")]
			[Address(RVA = "0x879C78", Offset = "0x879C78", VA = "0x879C78")]
			private void AddTriangleToRegion(Point[] triangle, int index)
			{
			}

			[Token(Token = "0x6002421")]
			[Address(RVA = "0x879F14", Offset = "0x879F14", VA = "0x879F14")]
			private void FindTriangleIntersections(Point[] triangle, int index)
			{
			}

			[Token(Token = "0x6002422")]
			[Address(RVA = "0x87A010", Offset = "0x87A010", VA = "0x87A010")]
			private void FindIntersectionsWithX(double dx, double dy, Point[] triangle, int index, int k)
			{
			}

			[Token(Token = "0x6002423")]
			[Address(RVA = "0x87A28C", Offset = "0x87A28C", VA = "0x87A28C")]
			private void FindIntersectionsWithY(double dx, double dy, Point[] triangle, int index, int k)
			{
			}

			[Token(Token = "0x6002424")]
			[Address(RVA = "0x879568", Offset = "0x879568", VA = "0x879568")]
			private int FindRegion(Point point)
			{
				return default(int);
			}

			[Token(Token = "0x6002425")]
			[Address(RVA = "0x879DCC", Offset = "0x879DCC", VA = "0x879DCC")]
			private void AddToRegion(int index, int region)
			{
			}
		}

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private QuadNode root;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal ITriangle[] triangles;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int sizeBound;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int maxDepth;

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xA2FFEC", Offset = "0xA2FFEC", VA = "0xA2FFEC")]
		public TriangleQuadTree(Mesh mesh, int maxDepth = 10, int sizeBound = 10)
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xA300C0", Offset = "0xA300C0", VA = "0xA300C0")]
		public ITriangle Query(double x, double y)
		{
			return null;
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xA30414", Offset = "0xA30414", VA = "0xA30414")]
		internal static bool IsPointInTriangle(Point p, Point t0, Point t1, Point t2)
		{
			return default(bool);
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xA305B4", Offset = "0xA305B4", VA = "0xA305B4")]
		internal static double DotProduct(Point p, Point q)
		{
			return default(double);
		}
	}
	[Token(Token = "0x20002F5")]
	public class VertexSorter
	{
		[Token(Token = "0x4002084")]
		private const int RANDOM_SEED = 57113;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private System.Random rand;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TriangleNet.Geometry.Vertex[] points;

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x93C574", Offset = "0x93C574", VA = "0x93C574")]
		private VertexSorter(TriangleNet.Geometry.Vertex[] points, int seed)
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x93C5F4", Offset = "0x93C5F4", VA = "0x93C5F4")]
		public static void Sort(TriangleNet.Geometry.Vertex[] array, int seed = 57113)
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x93C9A0", Offset = "0x93C9A0", VA = "0x93C9A0")]
		public static void Alternate(TriangleNet.Geometry.Vertex[] array, int length, int seed = 57113)
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x93C678", Offset = "0x93C678", VA = "0x93C678")]
		private void QuickSort(int left, int right)
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x93CA68", Offset = "0x93CA68", VA = "0x93CA68")]
		private void AlternateAxes(int left, int right, int axis)
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x93CB24", Offset = "0x93CB24", VA = "0x93CB24")]
		private void VertexMedianX(int left, int right, int median)
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x93CDF0", Offset = "0x93CDF0", VA = "0x93CDF0")]
		private void VertexMedianY(int left, int right, int median)
		{
		}
	}
}
namespace TriangleNet.Smoothing
{
	[Token(Token = "0x20002F6")]
	public interface ISmoother
	{
		[Token(Token = "0x6001876")]
		void Smooth(IMesh mesh);

		[Token(Token = "0x6001877")]
		void Smooth(IMesh mesh, int limit);
	}
	[Token(Token = "0x20002F7")]
	public class SimpleSmoother : ISmoother
	{
		[Serializable]
		[Token(Token = "0x20005AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573148", Offset = "0x573148")]
		private sealed class <>c
		{
			[Token(Token = "0x400300D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400300E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IPredicates> <>9__5_0;

			[Token(Token = "0x400300F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Converter<SubSegment, ISegment> <>9__11_0;

			[Token(Token = "0x6002428")]
			[Address(RVA = "0x872444", Offset = "0x872444", VA = "0x872444")]
			public <>c()
			{
			}

			[Token(Token = "0x6002429")]
			[Address(RVA = "0x87244C", Offset = "0x87244C", VA = "0x87244C")]
			internal IPredicates <.ctor>b__5_0()
			{
				return null;
			}

			[Token(Token = "0x600242A")]
			[Address(RVA = "0x8724A8", Offset = "0x8724A8", VA = "0x8724A8")]
			internal ISegment <Rebuild>b__11_0(SubSegment x)
			{
				return null;
			}
		}

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TrianglePool pool;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Configuration config;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IVoronoiFactory factory;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConstraintOptions options;

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x8CA204", Offset = "0x8CA204", VA = "0x8CA204")]
		public SimpleSmoother()
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x8CA264", Offset = "0x8CA264", VA = "0x8CA264")]
		public SimpleSmoother(IVoronoiFactory factory)
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x8CA464", Offset = "0x8CA464", VA = "0x8CA464")]
		public SimpleSmoother(IVoronoiFactory factory, Configuration config)
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x8CA4F0", Offset = "0x8CA4F0", VA = "0x8CA4F0", Slot = "4")]
		public void Smooth(IMesh mesh)
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x8CA4F8", Offset = "0x8CA4F8", VA = "0x8CA4F8", Slot = "5")]
		public void Smooth(IMesh mesh, int limit)
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x8CA768", Offset = "0x8CA768", VA = "0x8CA768")]
		private void Step(Mesh mesh, IVoronoiFactory factory, IPredicates predicates)
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x8CACE8", Offset = "0x8CACE8", VA = "0x8CACE8")]
		private void Centroid(Face face, out double x, out double y)
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x8CA92C", Offset = "0x8CA92C", VA = "0x8CA92C")]
		private Polygon Rebuild(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x8CAD9C", Offset = "0x8CAD9C", VA = "0x8CAD9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591948", Offset = "0x591948")]
		private TrianglePool <.ctor>b__5_1()
		{
			return null;
		}
	}
	[Token(Token = "0x20002F8")]
	internal class VoronoiFactory : IVoronoiFactory
	{
		[Token(Token = "0x20005AB")]
		private class ObjectPool<T> where T : class
		{
			[Token(Token = "0x4003010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int index;

			[Token(Token = "0x4003011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int count;

			[Token(Token = "0x4003012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T[] pool;

			[Token(Token = "0x17000402")]
			public int Count
			{
				[Token(Token = "0x600242B")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000403")]
			public int Capacity
			{
				[Token(Token = "0x600242C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600242D")]
				set
				{
				}
			}

			[Token(Token = "0x600242E")]
			public ObjectPool(int capacity = 3)
			{
			}

			[Token(Token = "0x600242F")]
			public ObjectPool(T[] pool)
			{
			}

			[Token(Token = "0x6002430")]
			public bool TryGet(out T obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6002431")]
			public void Put(T obj)
			{
			}

			[Token(Token = "0x6002432")]
			public void Release()
			{
			}

			[Token(Token = "0x6002433")]
			private void Resize(int size)
			{
			}
		}

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ObjectPool<TriangleNet.Topology.DCEL.Vertex> vertices;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObjectPool<HalfEdge> edges;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ObjectPool<Face> faces;

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x93ED10", Offset = "0x93ED10", VA = "0x93ED10")]
		public VoronoiFactory()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x93EE18", Offset = "0x93EE18", VA = "0x93EE18", Slot = "4")]
		public void Initialize(int vertexCount, int edgeCount, int faceCount)
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x93F0D8", Offset = "0x93F0D8", VA = "0x93F0D8", Slot = "5")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x93F174", Offset = "0x93F174", VA = "0x93F174", Slot = "6")]
		public TriangleNet.Topology.DCEL.Vertex CreateVertex(double x, double y)
		{
			return null;
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x93F264", Offset = "0x93F264", VA = "0x93F264", Slot = "7")]
		public HalfEdge CreateHalfEdge(TriangleNet.Topology.DCEL.Vertex origin, Face face)
		{
			return null;
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x93F364", Offset = "0x93F364", VA = "0x93F364", Slot = "8")]
		public Face CreateFace(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}
	}
}
namespace TriangleNet.Meshing
{
	[Token(Token = "0x20002F9")]
	internal class ConstraintMesher
	{
		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Behavior behavior;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TriangleLocator locator;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Triangle> viri;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ILog<LogItem> logger;

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xA0E134", Offset = "0xA0E134", VA = "0xA0E134")]
		public ConstraintMesher(Mesh mesh, Configuration config)
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xA0E27C", Offset = "0xA0E27C", VA = "0xA0E27C")]
		public void Apply(IPolygon input, ConstraintOptions options)
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xA0EDCC", Offset = "0xA0EDCC", VA = "0xA0EDCC")]
		private void CarveHoles()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xA0E614", Offset = "0xA0E614", VA = "0xA0E614")]
		private void FormSkeleton(IPolygon input)
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xA0F610", Offset = "0xA0F610", VA = "0xA0F610")]
		private void InfectHull()
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xA0F7B4", Offset = "0xA0F7B4", VA = "0xA0F7B4")]
		private void Plague()
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xA100B4", Offset = "0xA100B4", VA = "0xA100B4")]
		private FindDirectionResult FindDirection(ref Otri searchtri, TriangleNet.Geometry.Vertex searchpoint)
		{
			return default(FindDirectionResult);
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xA104F0", Offset = "0xA104F0", VA = "0xA104F0")]
		private void SegmentIntersection(ref Otri splittri, ref Osub splitsubseg, TriangleNet.Geometry.Vertex endpoint2)
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xA10900", Offset = "0xA10900", VA = "0xA10900")]
		private bool ScoutSegment(ref Otri searchtri, TriangleNet.Geometry.Vertex endpoint2, int newmark)
		{
			return default(bool);
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xA10AD0", Offset = "0xA10AD0", VA = "0xA10AD0")]
		private void DelaunayFixup(ref Otri fixuptri, bool leftside)
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xA10E18", Offset = "0xA10E18", VA = "0xA10E18")]
		private void ConstrainedEdge(ref Otri starttri, TriangleNet.Geometry.Vertex endpoint2, int newmark)
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xA0FD4C", Offset = "0xA0FD4C", VA = "0xA0FD4C")]
		private void InsertSegment(TriangleNet.Geometry.Vertex endpoint1, TriangleNet.Geometry.Vertex endpoint2, int newmark)
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xA0FFE0", Offset = "0xA0FFE0", VA = "0xA0FFE0")]
		private void MarkHull()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class ConstraintOptions
	{
		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584D44", Offset = "0x584D44")]
		private bool <UseRegions>k__BackingField;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584D54", Offset = "0x584D54")]
		private bool <ConformingDelaunay>k__BackingField;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584D64", Offset = "0x584D64")]
		private bool <Convex>k__BackingField;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584D74", Offset = "0x584D74")]
		private int <SegmentSplitting>k__BackingField;

		[Token(Token = "0x1700027C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x595F0C", Offset = "0x595F0C")]
		public bool UseRegions
		{
			[Token(Token = "0x6001894")]
			[Address(RVA = "0xA110F0", Offset = "0xA110F0", VA = "0xA110F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591958", Offset = "0x591958")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001895")]
			[Address(RVA = "0xA110F8", Offset = "0xA110F8", VA = "0xA110F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591968", Offset = "0x591968")]
			set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public bool ConformingDelaunay
		{
			[Token(Token = "0x6001896")]
			[Address(RVA = "0xA11104", Offset = "0xA11104", VA = "0xA11104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591978", Offset = "0x591978")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001897")]
			[Address(RVA = "0xA1110C", Offset = "0xA1110C", VA = "0xA1110C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591988", Offset = "0x591988")]
			set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public bool Convex
		{
			[Token(Token = "0x6001898")]
			[Address(RVA = "0xA11118", Offset = "0xA11118", VA = "0xA11118")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591998", Offset = "0x591998")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001899")]
			[Address(RVA = "0xA11120", Offset = "0xA11120", VA = "0xA11120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5919A8", Offset = "0x5919A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public int SegmentSplitting
		{
			[Token(Token = "0x600189A")]
			[Address(RVA = "0xA1112C", Offset = "0xA1112C", VA = "0xA1112C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5919B8", Offset = "0x5919B8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600189B")]
			[Address(RVA = "0xA11134", Offset = "0xA11134", VA = "0xA11134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5919C8", Offset = "0x5919C8")]
			set
			{
			}
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xA1113C", Offset = "0xA1113C", VA = "0xA1113C")]
		public ConstraintOptions()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public static class Converter
	{
		[Token(Token = "0x600189D")]
		[Address(RVA = "0xA12698", Offset = "0xA12698", VA = "0xA12698")]
		public static Mesh ToMesh(Polygon polygon, IList<ITriangle> triangles)
		{
			return null;
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xA126FC", Offset = "0xA126FC", VA = "0xA126FC")]
		public static Mesh ToMesh(Polygon polygon, ITriangle[] triangles)
		{
			return null;
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xA128FC", Offset = "0xA128FC", VA = "0xA128FC")]
		private static List<Otri>[] SetNeighbors(Mesh mesh, ITriangle[] triangles)
		{
			return null;
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xA13438", Offset = "0xA13438", VA = "0xA13438")]
		private static void SetSegments(Mesh mesh, Polygon polygon, List<Otri>[] vertexarray)
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xA13E78", Offset = "0xA13E78", VA = "0xA13E78")]
		public static DcelMesh ToDCEL(Mesh mesh)
		{
			return null;
		}
	}
	[Token(Token = "0x20002FC")]
	public class GenericMesher
	{
		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Configuration config;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ITriangulator triangulator;

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xBFA710", Offset = "0xBFA710", VA = "0xBFA710")]
		public GenericMesher()
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xBFA7E0", Offset = "0xBFA7E0", VA = "0xBFA7E0")]
		public GenericMesher(ITriangulator triangulator)
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xBFA854", Offset = "0xBFA854", VA = "0xBFA854")]
		public GenericMesher(Configuration config)
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xBFA7A8", Offset = "0xBFA7A8", VA = "0xBFA7A8")]
		public GenericMesher(ITriangulator triangulator, Configuration config)
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xBFA8C8", Offset = "0xBFA8C8", VA = "0xBFA8C8")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points)
		{
			return null;
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xBFA98C", Offset = "0xBFA98C", VA = "0xBFA98C")]
		public IMesh Triangulate(IPolygon polygon)
		{
			return null;
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xBFABE8", Offset = "0xBFABE8", VA = "0xBFABE8")]
		public IMesh Triangulate(IPolygon polygon, ConstraintOptions options)
		{
			return null;
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xBFABF0", Offset = "0xBFABF0", VA = "0xBFABF0")]
		public IMesh Triangulate(IPolygon polygon, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xBFA998", Offset = "0xBFA998", VA = "0xBFA998")]
		public IMesh Triangulate(IPolygon polygon, ConstraintOptions options, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xBFABFC", Offset = "0xBFABFC", VA = "0xBFABFC")]
		public static IMesh StructuredMesh(double width, double height, int nx, int ny)
		{
			return null;
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xBFAD04", Offset = "0xBFAD04", VA = "0xBFAD04")]
		public static IMesh StructuredMesh(Rectangle bounds, int nx, int ny)
		{
			return null;
		}
	}
	[Token(Token = "0x20002FD")]
	public interface IConstraintMesher
	{
		[Token(Token = "0x60018AD")]
		IMesh Triangulate(IPolygon polygon);

		[Token(Token = "0x60018AE")]
		IMesh Triangulate(IPolygon polygon, ConstraintOptions options);
	}
	[Token(Token = "0x20002FE")]
	public interface IMesh
	{
		[Token(Token = "0x17000280")]
		ICollection<TriangleNet.Geometry.Vertex> Vertices
		{
			[Token(Token = "0x60018AF")]
			get;
		}

		[Token(Token = "0x17000281")]
		IEnumerable<Edge> Edges
		{
			[Token(Token = "0x60018B0")]
			get;
		}

		[Token(Token = "0x17000282")]
		ICollection<SubSegment> Segments
		{
			[Token(Token = "0x60018B1")]
			get;
		}

		[Token(Token = "0x17000283")]
		ICollection<Triangle> Triangles
		{
			[Token(Token = "0x60018B2")]
			get;
		}

		[Token(Token = "0x17000284")]
		IList<Point> Holes
		{
			[Token(Token = "0x60018B3")]
			get;
		}

		[Token(Token = "0x17000285")]
		Rectangle Bounds
		{
			[Token(Token = "0x60018B4")]
			get;
		}

		[Token(Token = "0x60018B5")]
		void Renumber();

		[Token(Token = "0x60018B6")]
		void Refine(QualityOptions quality, bool delaunay);
	}
	[Token(Token = "0x20002FF")]
	public interface IQualityMesher
	{
		[Token(Token = "0x60018B7")]
		IMesh Triangulate(IPolygon polygon, QualityOptions quality);

		[Token(Token = "0x60018B8")]
		IMesh Triangulate(IPolygon polygon, ConstraintOptions options, QualityOptions quality);
	}
	[Token(Token = "0x2000300")]
	public interface ITriangulator
	{
		[Token(Token = "0x60018B9")]
		IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config);
	}
	[Token(Token = "0x2000301")]
	internal class QualityMesher
	{
		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Queue<BadSubseg> badsubsegs;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BadTriQueue queue;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh mesh;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Behavior behavior;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NewLocation newLocation;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ILog<LogItem> logger;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Triangle newvertex_tri;

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xC6FD64", Offset = "0xC6FD64", VA = "0xC6FD64")]
		public QualityMesher(Mesh mesh, Configuration config)
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xC6FF38", Offset = "0xC6FF38", VA = "0xC6FF38")]
		public void Apply(QualityOptions quality, bool delaunay = false)
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xC70330", Offset = "0xC70330", VA = "0xC70330")]
		public void AddBadSubseg(BadSubseg badseg)
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xC70394", Offset = "0xC70394", VA = "0xC70394")]
		public int CheckSeg4Encroach(ref Osub testsubseg)
		{
			return default(int);
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xC7066C", Offset = "0xC7066C", VA = "0xC7066C")]
		public void TestTriangle(ref Otri testtri)
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xC70C28", Offset = "0xC70C28", VA = "0xC70C28")]
		private void TallyEncs()
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xC70D68", Offset = "0xC70D68", VA = "0xC70D68")]
		private void SplitEncSegs(bool triflaws)
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xC715DC", Offset = "0xC715DC", VA = "0xC715DC")]
		private void TallyFaces()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xC71834", Offset = "0xC71834", VA = "0xC71834")]
		private void SplitTriangle(BadTriangle badtri)
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xC700B0", Offset = "0xC700B0", VA = "0xC700B0")]
		private void EnforceQuality()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class QualityOptions
	{
		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584D84", Offset = "0x584D84")]
		private double <MaximumAngle>k__BackingField;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584D94", Offset = "0x584D94")]
		private double <MinimumAngle>k__BackingField;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584DA4", Offset = "0x584DA4")]
		private double <MaximumArea>k__BackingField;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584DB4", Offset = "0x584DB4")]
		private Func<ITriangle, double, bool> <UserTest>k__BackingField;

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584DC4", Offset = "0x584DC4")]
		private bool <VariableArea>k__BackingField;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584DD4", Offset = "0x584DD4")]
		private int <SteinerPoints>k__BackingField;

		[Token(Token = "0x17000286")]
		public double MaximumAngle
		{
			[Token(Token = "0x60018C4")]
			[Address(RVA = "0xC71E64", Offset = "0xC71E64", VA = "0xC71E64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5919D8", Offset = "0x5919D8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60018C5")]
			[Address(RVA = "0xC71E6C", Offset = "0xC71E6C", VA = "0xC71E6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5919E8", Offset = "0x5919E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000287")]
		public double MinimumAngle
		{
			[Token(Token = "0x60018C6")]
			[Address(RVA = "0xC71E74", Offset = "0xC71E74", VA = "0xC71E74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5919F8", Offset = "0x5919F8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60018C7")]
			[Address(RVA = "0xC71E7C", Offset = "0xC71E7C", VA = "0xC71E7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591A08", Offset = "0x591A08")]
			set
			{
			}
		}

		[Token(Token = "0x17000288")]
		public double MaximumArea
		{
			[Token(Token = "0x60018C8")]
			[Address(RVA = "0xC71E84", Offset = "0xC71E84", VA = "0xC71E84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591A18", Offset = "0x591A18")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60018C9")]
			[Address(RVA = "0xC71E8C", Offset = "0xC71E8C", VA = "0xC71E8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591A28", Offset = "0x591A28")]
			set
			{
			}
		}

		[Token(Token = "0x17000289")]
		public Func<ITriangle, double, bool> UserTest
		{
			[Token(Token = "0x60018CA")]
			[Address(RVA = "0xC71E94", Offset = "0xC71E94", VA = "0xC71E94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591A38", Offset = "0x591A38")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018CB")]
			[Address(RVA = "0xC71E9C", Offset = "0xC71E9C", VA = "0xC71E9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591A48", Offset = "0x591A48")]
			set
			{
			}
		}

		[Token(Token = "0x1700028A")]
		public bool VariableArea
		{
			[Token(Token = "0x60018CC")]
			[Address(RVA = "0xC71EA4", Offset = "0xC71EA4", VA = "0xC71EA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591A58", Offset = "0x591A58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018CD")]
			[Address(RVA = "0xC71EAC", Offset = "0xC71EAC", VA = "0xC71EAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591A68", Offset = "0x591A68")]
			set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public int SteinerPoints
		{
			[Token(Token = "0x60018CE")]
			[Address(RVA = "0xC71EB8", Offset = "0xC71EB8", VA = "0xC71EB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591A78", Offset = "0x591A78")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018CF")]
			[Address(RVA = "0xC71EC0", Offset = "0xC71EC0", VA = "0xC71EC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591A88", Offset = "0x591A88")]
			set
			{
			}
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xC71EC8", Offset = "0xC71EC8", VA = "0xC71EC8")]
		public QualityOptions()
		{
		}
	}
}
namespace TriangleNet.Meshing.Iterators
{
	[Token(Token = "0x2000303")]
	public class EdgeIterator : IEnumerator<Edge>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<Triangle> triangles;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Otri tri;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Otri neighbor;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Osub sub;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Edge current;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TriangleNet.Geometry.Vertex p1;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TriangleNet.Geometry.Vertex p2;

		[Token(Token = "0x1700028C")]
		public Edge Current
		{
			[Token(Token = "0x60018D2")]
			[Address(RVA = "0x8ADBE8", Offset = "0x8ADBE8", VA = "0x8ADBE8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018D4")]
			[Address(RVA = "0x8ADC9C", Offset = "0x8ADC9C", VA = "0x8ADC9C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x8ADA84", Offset = "0x8ADA84", VA = "0x8ADA84")]
		public EdgeIterator(Mesh mesh)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x8ADBF0", Offset = "0x8ADBF0", VA = "0x8ADBF0", Slot = "5")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x8ADCA4", Offset = "0x8ADCA4", VA = "0x8ADCA4", Slot = "6")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x8ADF04", Offset = "0x8ADF04", VA = "0x8ADF04", Slot = "8")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class RegionIterator
	{
		[Token(Token = "0x20005AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573158", Offset = "0x573158")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4003013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Triangle triangle;

			[Token(Token = "0x6002434")]
			[Address(RVA = "0x871738", Offset = "0x871738", VA = "0x871738")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002435")]
			[Address(RVA = "0x871740", Offset = "0x871740", VA = "0x871740")]
			internal void <Process>b__0(Triangle tri)
			{
			}
		}

		[Token(Token = "0x20005AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573168", Offset = "0x573168")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4003014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int boundary;

			[Token(Token = "0x6002436")]
			[Address(RVA = "0x871778", Offset = "0x871778", VA = "0x871778")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002437")]
			[Address(RVA = "0x871780", Offset = "0x871780", VA = "0x871780")]
			internal bool <Process>b__1(SubSegment seg)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20005AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573178", Offset = "0x573178")]
		private sealed class <>c
		{
			[Token(Token = "0x4003015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4003016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<SubSegment, bool> <>9__3_0;

			[Token(Token = "0x6002439")]
			[Address(RVA = "0x871710", Offset = "0x871710", VA = "0x871710")]
			public <>c()
			{
			}

			[Token(Token = "0x600243A")]
			[Address(RVA = "0x871718", Offset = "0x871718", VA = "0x871718")]
			internal bool <Process>b__3_0(SubSegment seg)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Triangle> region;

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xB98790", Offset = "0xB98790", VA = "0xB98790")]
		public RegionIterator(Mesh mesh)
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xB9880C", Offset = "0xB9880C", VA = "0xB9880C")]
		public void Process(Triangle triangle, int boundary = 0)
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xB988F0", Offset = "0xB988F0", VA = "0xB988F0")]
		public void Process(Triangle triangle, Action<Triangle> action, int boundary = 0)
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xB98B3C", Offset = "0xB98B3C", VA = "0xB98B3C")]
		private void ProcessRegion(Action<Triangle> action, Func<SubSegment, bool> protector)
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class VertexCirculator
	{
		[Token(Token = "0x20005AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573188", Offset = "0x573188")]
		private sealed class <EnumerateVertices>d__2 : IEnumerable<TriangleNet.Geometry.Vertex>, IEnumerable, IEnumerator<TriangleNet.Geometry.Vertex>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private TriangleNet.Geometry.Vertex <>2__current;

			[Token(Token = "0x4003019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400301A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VertexCirculator <>4__this;

			[Token(Token = "0x400301B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TriangleNet.Geometry.Vertex vertex;

			[Token(Token = "0x400301C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TriangleNet.Geometry.Vertex <>3__vertex;

			[Token(Token = "0x400301D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<Otri>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000404")]
			private TriangleNet.Geometry.Vertex System.Collections.Generic.IEnumerator<TriangleNet.Geometry.Vertex>.Current
			{
				[Token(Token = "0x600243F")]
				[Address(RVA = "0x1377988", Offset = "0x1377988", VA = "0x1377988", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000405")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002441")]
				[Address(RVA = "0x13779D0", Offset = "0x13779D0", VA = "0x13779D0", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600243B")]
			[Address(RVA = "0x137774C", Offset = "0x137774C", VA = "0x137774C")]
			[DebuggerHidden]
			public <EnumerateVertices>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x600243C")]
			[Address(RVA = "0x1377784", Offset = "0x1377784", VA = "0x1377784", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600243D")]
			[Address(RVA = "0x13777F4", Offset = "0x13777F4", VA = "0x13777F4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600243E")]
			[Address(RVA = "0x13777A0", Offset = "0x13777A0", VA = "0x13777A0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002440")]
			[Address(RVA = "0x1377990", Offset = "0x1377990", VA = "0x1377990", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002442")]
			[Address(RVA = "0x13779D8", Offset = "0x13779D8", VA = "0x13779D8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<TriangleNet.Geometry.Vertex> System.Collections.Generic.IEnumerable<TriangleNet.Geometry.Vertex>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002443")]
			[Address(RVA = "0x1377A88", Offset = "0x1377A88", VA = "0x1377A88", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20005B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573198", Offset = "0x573198")]
		private sealed class <EnumerateTriangles>d__3 : IEnumerable<ITriangle>, IEnumerable, IEnumerator<ITriangle>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400301E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400301F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private ITriangle <>2__current;

			[Token(Token = "0x4003020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4003021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VertexCirculator <>4__this;

			[Token(Token = "0x4003022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TriangleNet.Geometry.Vertex vertex;

			[Token(Token = "0x4003023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TriangleNet.Geometry.Vertex <>3__vertex;

			[Token(Token = "0x4003024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<Otri>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000406")]
			private ITriangle System.Collections.Generic.IEnumerator<TriangleNet.Geometry.ITriangle>.Current
			{
				[Token(Token = "0x6002448")]
				[Address(RVA = "0x1377648", Offset = "0x1377648", VA = "0x1377648", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000407")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600244A")]
				[Address(RVA = "0x1377690", Offset = "0x1377690", VA = "0x1377690", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002444")]
			[Address(RVA = "0x1377424", Offset = "0x1377424", VA = "0x1377424")]
			[DebuggerHidden]
			public <EnumerateTriangles>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002445")]
			[Address(RVA = "0x137745C", Offset = "0x137745C", VA = "0x137745C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002446")]
			[Address(RVA = "0x13774CC", Offset = "0x13774CC", VA = "0x13774CC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002447")]
			[Address(RVA = "0x1377478", Offset = "0x1377478", VA = "0x1377478")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002449")]
			[Address(RVA = "0x1377650", Offset = "0x1377650", VA = "0x1377650", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600244B")]
			[Address(RVA = "0x1377698", Offset = "0x1377698", VA = "0x1377698", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<ITriangle> System.Collections.Generic.IEnumerable<TriangleNet.Geometry.ITriangle>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600244C")]
			[Address(RVA = "0x1377748", Offset = "0x1377748", VA = "0x1377748", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Otri> cache;

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x93C224", Offset = "0x93C224", VA = "0x93C224")]
		public VertexCirculator(Mesh mesh)
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x93C2BC", Offset = "0x93C2BC", VA = "0x93C2BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x591A98", Offset = "0x591A98")]
		public IEnumerable<TriangleNet.Geometry.Vertex> EnumerateVertices(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x93C338", Offset = "0x93C338", VA = "0x93C338")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x591AF8", Offset = "0x591AF8")]
		public IEnumerable<ITriangle> EnumerateTriangles(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x93C3B4", Offset = "0x93C3B4", VA = "0x93C3B4")]
		private void BuildCache(TriangleNet.Geometry.Vertex vertex, bool vertices)
		{
		}
	}
}
namespace TriangleNet.Meshing.Data
{
	[Token(Token = "0x2000306")]
	internal class BadSubseg
	{
		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Osub subseg;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriangleNet.Geometry.Vertex org;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TriangleNet.Geometry.Vertex dest;

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x886EB8", Offset = "0x886EB8", VA = "0x886EB8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x886ED4", Offset = "0x886ED4", VA = "0x886ED4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x886F68", Offset = "0x886F68", VA = "0x886F68")]
		public BadSubseg()
		{
		}
	}
	[Token(Token = "0x2000307")]
	internal class BadTriQueue
	{
		[Token(Token = "0x40020B4")]
		private const double SQRT2 = 1.4142135623730951;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BadTriangle[] queuefront;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BadTriangle[] queuetail;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] nextnonemptyq;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int firstnonemptyq;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int count;

		[Token(Token = "0x1700028E")]
		public int Count
		{
			[Token(Token = "0x60018E2")]
			[Address(RVA = "0x886F70", Offset = "0x886F70", VA = "0x886F70")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x886F78", Offset = "0x886F78", VA = "0x886F78")]
		public BadTriQueue()
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x887014", Offset = "0x887014", VA = "0x887014")]
		public void Enqueue(BadTriangle badtri)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x88724C", Offset = "0x88724C", VA = "0x88724C")]
		public void Enqueue(ref Otri enqtri, double minedge, TriangleNet.Geometry.Vertex apex, TriangleNet.Geometry.Vertex org, TriangleNet.Geometry.Vertex dest)
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x8872FC", Offset = "0x8872FC", VA = "0x8872FC")]
		public BadTriangle Dequeue()
		{
			return null;
		}
	}
	[Token(Token = "0x2000308")]
	internal class BadTriangle
	{
		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Otri poortri;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double key;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TriangleNet.Geometry.Vertex org;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TriangleNet.Geometry.Vertex dest;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TriangleNet.Geometry.Vertex apex;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BadTriangle next;

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x8873F8", Offset = "0x8873F8", VA = "0x8873F8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x8872F4", Offset = "0x8872F4", VA = "0x8872F4")]
		public BadTriangle()
		{
		}
	}
}
namespace TriangleNet.Meshing.Algorithm
{
	[Token(Token = "0x2000309")]
	public class Dwyer : ITriangulator
	{
		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UseDwyer;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TriangleNet.Geometry.Vertex[] sortarray;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh mesh;

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xA1EC50", Offset = "0xA1EC50", VA = "0xA1EC50", Slot = "4")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config)
		{
			return null;
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xA1FE2C", Offset = "0xA1FE2C", VA = "0xA1FE2C")]
		private void MergeHulls(ref Otri farleft, ref Otri innerleft, ref Otri innerright, ref Otri farright, int axis)
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xA1F3D0", Offset = "0xA1F3D0", VA = "0xA1F3D0")]
		private void DivconqRecurse(int left, int right, int axis, ref Otri farleft, ref Otri farright)
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xA1FCAC", Offset = "0xA1FCAC", VA = "0xA1FCAC")]
		private int RemoveGhosts(ref Otri startghost)
		{
			return default(int);
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xA20C5C", Offset = "0xA20C5C", VA = "0xA20C5C")]
		public Dwyer()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public class Incremental : ITriangulator
	{
		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Mesh mesh;

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xA68A38", Offset = "0xA68A38", VA = "0xA68A38", Slot = "4")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config)
		{
			return null;
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xA68E10", Offset = "0xA68E10", VA = "0xA68E10")]
		private void GetBoundingBox()
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xA69020", Offset = "0xA69020", VA = "0xA69020")]
		private int RemoveBox()
		{
			return default(int);
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xA69268", Offset = "0xA69268", VA = "0xA69268")]
		public Incremental()
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class SweepLine : ITriangulator
	{
		[Token(Token = "0x20005B1")]
		private class SweepEvent
		{
			[Token(Token = "0x4003025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double xkey;

			[Token(Token = "0x4003026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public double ykey;

			[Token(Token = "0x4003027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TriangleNet.Geometry.Vertex vertexEvent;

			[Token(Token = "0x4003028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Otri otriEvent;

			[Token(Token = "0x4003029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int heapposition;

			[Token(Token = "0x600244D")]
			[Address(RVA = "0x877074", Offset = "0x877074", VA = "0x877074")]
			public SweepEvent()
			{
			}
		}

		[Token(Token = "0x20005B2")]
		private class SweepEventVertex : TriangleNet.Geometry.Vertex
		{
			[Token(Token = "0x400302A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public SweepEvent evt;

			[Token(Token = "0x600244E")]
			[Address(RVA = "0x87707C", Offset = "0x87707C", VA = "0x87707C")]
			public SweepEventVertex(SweepEvent e)
			{
			}
		}

		[Token(Token = "0x20005B3")]
		private class SplayNode
		{
			[Token(Token = "0x400302B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Otri keyedge;

			[Token(Token = "0x400302C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TriangleNet.Geometry.Vertex keydest;

			[Token(Token = "0x400302D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SplayNode lchild;

			[Token(Token = "0x400302E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SplayNode rchild;

			[Token(Token = "0x600244F")]
			[Address(RVA = "0x87706C", Offset = "0x87706C", VA = "0x87706C")]
			public SplayNode()
			{
			}
		}

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int randomseed;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int SAMPLERATE;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double xminextreme;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<SplayNode> splaynodes;

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xAFA720", Offset = "0xAFA720", VA = "0xAFA720")]
		private static int randomnation(int choices)
		{
			return default(int);
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xAFA7C4", Offset = "0xAFA7C4", VA = "0xAFA7C4", Slot = "4")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config)
		{
			return null;
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xAFC054", Offset = "0xAFC054", VA = "0xAFC054")]
		private void HeapInsert(SweepEvent[] heap, int heapsize, SweepEvent newevent)
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xAFC2F0", Offset = "0xAFC2F0", VA = "0xAFC2F0")]
		private void Heapify(SweepEvent[] heap, int heapsize, int eventnum)
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xAFB914", Offset = "0xAFB914", VA = "0xAFB914")]
		private void HeapDelete(SweepEvent[] heap, int heapsize, int eventnum)
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xAFB72C", Offset = "0xAFB72C", VA = "0xAFB72C")]
		private void CreateHeap(out SweepEvent[] eventheap, int size)
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xAFC4B8", Offset = "0xAFC4B8", VA = "0xAFC4B8")]
		private SplayNode Splay(SplayNode splaytree, Point searchpoint, ref Otri searchtri)
		{
			return null;
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xAFBDF0", Offset = "0xAFBDF0", VA = "0xAFBDF0")]
		private SplayNode SplayInsert(SplayNode splayroot, Otri newkey, Point searchpoint)
		{
			return null;
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xAFBD3C", Offset = "0xAFBD3C", VA = "0xAFBD3C")]
		private SplayNode FrontLocate(SplayNode splayroot, Otri bottommost, TriangleNet.Geometry.Vertex searchvertex, ref Otri searchtri, ref bool farright)
		{
			return null;
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xAFBB78", Offset = "0xAFBB78", VA = "0xAFBB78")]
		private SplayNode CircleTopInsert(SplayNode splayroot, Otri newkey, TriangleNet.Geometry.Vertex pa, TriangleNet.Geometry.Vertex pb, TriangleNet.Geometry.Vertex pc, double topy)
		{
			return null;
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xAFC764", Offset = "0xAFC764", VA = "0xAFC764")]
		private bool RightOfHyperbola(ref Otri fronttri, Point newsite)
		{
			return default(bool);
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xAFBEF4", Offset = "0xAFBEF4", VA = "0xAFBEF4")]
		private double CircleTop(TriangleNet.Geometry.Vertex pa, TriangleNet.Geometry.Vertex pb, TriangleNet.Geometry.Vertex pc, double ccwabc)
		{
			return default(double);
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xAFBA70", Offset = "0xAFBA70", VA = "0xAFBA70")]
		private void Check4DeadEvent(ref Otri checktri, SweepEvent[] eventheap, ref int heapsize)
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xAFC180", Offset = "0xAFC180", VA = "0xAFC180")]
		private int RemoveGhosts(ref Otri startghost)
		{
			return default(int);
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xAFC8A8", Offset = "0xAFC8A8", VA = "0xAFC8A8")]
		public SweepLine()
		{
		}
	}
}
namespace TriangleNet.Logging
{
	[Token(Token = "0x200030C")]
	public enum LogLevel
	{
		[Token(Token = "0x40020CC")]
		Info,
		[Token(Token = "0x40020CD")]
		Warning,
		[Token(Token = "0x40020CE")]
		Error
	}
	[Token(Token = "0x200030D")]
	public interface ILog<T> where T : ILogItem
	{
		[Token(Token = "0x1700028F")]
		IList<T> Data
		{
			[Token(Token = "0x6001907")]
			get;
		}

		[Token(Token = "0x17000290")]
		LogLevel Level
		{
			[Token(Token = "0x6001908")]
			get;
		}

		[Token(Token = "0x6001902")]
		void Add(T item);

		[Token(Token = "0x6001903")]
		void Clear();

		[Token(Token = "0x6001904")]
		void Info(string message);

		[Token(Token = "0x6001905")]
		void Error(string message, string info);

		[Token(Token = "0x6001906")]
		void Warning(string message, string info);
	}
	[Token(Token = "0x200030E")]
	public interface ILogItem
	{
		[Token(Token = "0x17000291")]
		DateTime Time
		{
			[Token(Token = "0x6001909")]
			get;
		}

		[Token(Token = "0x17000292")]
		LogLevel Level
		{
			[Token(Token = "0x600190A")]
			get;
		}

		[Token(Token = "0x17000293")]
		string Message
		{
			[Token(Token = "0x600190B")]
			get;
		}

		[Token(Token = "0x17000294")]
		string Info
		{
			[Token(Token = "0x600190C")]
			get;
		}
	}
	[Token(Token = "0x200030F")]
	public class LogItem : ILogItem
	{
		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private DateTime time;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LogLevel level;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string message;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string info;

		[Token(Token = "0x17000295")]
		public DateTime Time
		{
			[Token(Token = "0x600190D")]
			[Address(RVA = "0xA3E9D8", Offset = "0xA3E9D8", VA = "0xA3E9D8", Slot = "4")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x17000296")]
		public LogLevel Level
		{
			[Token(Token = "0x600190E")]
			[Address(RVA = "0xA3E9E0", Offset = "0xA3E9E0", VA = "0xA3E9E0", Slot = "5")]
			get
			{
				return default(LogLevel);
			}
		}

		[Token(Token = "0x17000297")]
		public string Message
		{
			[Token(Token = "0x600190F")]
			[Address(RVA = "0xA3E9E8", Offset = "0xA3E9E8", VA = "0xA3E9E8", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000298")]
		public string Info
		{
			[Token(Token = "0x6001910")]
			[Address(RVA = "0xA3E9F0", Offset = "0xA3E9F0", VA = "0xA3E9F0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0xA3E794", Offset = "0xA3E794", VA = "0xA3E794")]
		public LogItem(LogLevel level, string message)
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xA3E894", Offset = "0xA3E894", VA = "0xA3E894")]
		public LogItem(LogLevel level, string message, string info)
		{
		}
	}
}
namespace TriangleNet.IO
{
	[Token(Token = "0x2000310")]
	internal class DebugWriter
	{
		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo nfi;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int iteration;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string session;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StreamWriter stream;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string tmpFile;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] vertices;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int triangles;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly DebugWriter instance;

		[Token(Token = "0x17000299")]
		public static DebugWriter Session
		{
			[Token(Token = "0x6001915")]
			[Address(RVA = "0xA187D8", Offset = "0xA187D8", VA = "0xA187D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xA18718", Offset = "0xA18718", VA = "0xA18718")]
		static DebugWriter()
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xA187D0", Offset = "0xA187D0", VA = "0xA187D0")]
		private DebugWriter()
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xA1883C", Offset = "0xA1883C", VA = "0xA1883C")]
		public void Start(string session)
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xA1893C", Offset = "0xA1893C", VA = "0xA1893C")]
		public void Write(Mesh mesh, bool skip = false)
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xA1993C", Offset = "0xA1993C", VA = "0xA1993C")]
		public void Finish()
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xA19998", Offset = "0xA19998", VA = "0xA19998")]
		private void Finish(string path)
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0xA19CE8", Offset = "0xA19CE8", VA = "0xA19CE8")]
		private void WriteGeometry(IPolygon geometry)
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xA18A14", Offset = "0xA18A14", VA = "0xA18A14")]
		private void WriteMesh(Mesh mesh, bool skip)
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xA19D8C", Offset = "0xA19D8C", VA = "0xA19D8C")]
		private bool VerticesChanged(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xA1A188", Offset = "0xA1A188", VA = "0xA1A188")]
		private void HashVertices(Mesh mesh)
		{
		}
	}
	[Token(Token = "0x2000311")]
	public static class FileProcessor
	{
		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<IFileFormat> formats;

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x8B153C", Offset = "0x8B153C", VA = "0x8B153C")]
		static FileProcessor()
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x8B1620", Offset = "0x8B1620", VA = "0x8B1620")]
		public static void Add(IFileFormat format)
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x8B16AC", Offset = "0x8B16AC", VA = "0x8B16AC")]
		public static bool IsSupported(string file)
		{
			return default(bool);
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x8B1894", Offset = "0x8B1894", VA = "0x8B1894")]
		public static IPolygon Read(string filename)
		{
			return null;
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x8B1B80", Offset = "0x8B1B80", VA = "0x8B1B80")]
		public static void Write(IPolygon polygon, string filename)
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x8B1E6C", Offset = "0x8B1E6C", VA = "0x8B1E6C")]
		public static IMesh Import(string filename)
		{
			return null;
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x8B2158", Offset = "0x8B2158", VA = "0x8B2158")]
		public static void Write(IMesh mesh, string filename)
		{
		}
	}
	[Token(Token = "0x2000312")]
	public interface IFileFormat
	{
		[Token(Token = "0x6001925")]
		bool IsSupported(string file);
	}
	[Token(Token = "0x2000313")]
	public interface IMeshFormat : IFileFormat
	{
		[Token(Token = "0x6001926")]
		IMesh Import(string filename);

		[Token(Token = "0x6001927")]
		void Write(IMesh mesh, string filename);

		[Token(Token = "0x6001928")]
		void Write(IMesh mesh, Stream stream);
	}
	[Token(Token = "0x2000314")]
	public interface IPolygonFormat : IFileFormat
	{
		[Token(Token = "0x6001929")]
		IPolygon Read(string filename);

		[Token(Token = "0x600192A")]
		void Write(IPolygon polygon, string filename);

		[Token(Token = "0x600192B")]
		void Write(IPolygon polygon, Stream stream);
	}
	[Token(Token = "0x2000315")]
	public class InputTriangle : ITriangle
	{
		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int[] vertices;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int label;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal double area;

		[Token(Token = "0x1700029A")]
		public int ID
		{
			[Token(Token = "0x600192D")]
			[Address(RVA = "0xA6D18C", Offset = "0xA6D18C", VA = "0xA6D18C", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600192E")]
			[Address(RVA = "0xA6D194", Offset = "0xA6D194", VA = "0xA6D194", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700029B")]
		public int Label
		{
			[Token(Token = "0x600192F")]
			[Address(RVA = "0xA6D198", Offset = "0xA6D198", VA = "0xA6D198", Slot = "6")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001930")]
			[Address(RVA = "0xA6D1A0", Offset = "0xA6D1A0", VA = "0xA6D1A0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700029C")]
		public double Area
		{
			[Token(Token = "0x6001931")]
			[Address(RVA = "0xA6D1A8", Offset = "0xA6D1A8", VA = "0xA6D1A8", Slot = "8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001932")]
			[Address(RVA = "0xA6D1B0", Offset = "0xA6D1B0", VA = "0xA6D1B0", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xA6D0D8", Offset = "0xA6D0D8", VA = "0xA6D0D8")]
		public InputTriangle(int p0, int p1, int p2)
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0xA6D1B8", Offset = "0xA6D1B8", VA = "0xA6D1B8", Slot = "10")]
		public TriangleNet.Geometry.Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xA6D1C0", Offset = "0xA6D1C0", VA = "0xA6D1C0", Slot = "11")]
		public int GetVertexID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0xA6D1FC", Offset = "0xA6D1FC", VA = "0xA6D1FC", Slot = "12")]
		public ITriangle GetNeighbor(int index)
		{
			return null;
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xA6D204", Offset = "0xA6D204", VA = "0xA6D204", Slot = "13")]
		public int GetNeighborID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0xA6D20C", Offset = "0xA6D20C", VA = "0xA6D20C", Slot = "14")]
		public ISegment GetSegment(int index)
		{
			return null;
		}
	}
	[Token(Token = "0x2000316")]
	public class TriangleFormat : IPolygonFormat, IFileFormat, IMeshFormat
	{
		[Token(Token = "0x6001938")]
		[Address(RVA = "0xA2C6C8", Offset = "0xA2C6C8", VA = "0xA2C6C8", Slot = "7")]
		public bool IsSupported(string file)
		{
			return default(bool);
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0xA2C7C0", Offset = "0xA2C7C0", VA = "0xA2C7C0", Slot = "8")]
		public IMesh Import(string filename)
		{
			return null;
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xA2CA7C", Offset = "0xA2CA7C", VA = "0xA2CA7C", Slot = "9")]
		public void Write(IMesh mesh, string filename)
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xA2D2E8", Offset = "0xA2D2E8", VA = "0xA2D2E8", Slot = "10")]
		public void Write(IMesh mesh, Stream stream)
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xA2D328", Offset = "0xA2D328", VA = "0xA2D328", Slot = "4")]
		public IPolygon Read(string filename)
		{
			return null;
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xA2D4D8", Offset = "0xA2D4D8", VA = "0xA2D4D8", Slot = "5")]
		public void Write(IPolygon polygon, string filename)
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xA2E8A0", Offset = "0xA2E8A0", VA = "0xA2E8A0", Slot = "6")]
		public void Write(IPolygon polygon, Stream stream)
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xA2E8E0", Offset = "0xA2E8E0", VA = "0xA2E8E0")]
		public TriangleFormat()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public class TriangleReader
	{
		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo nfi;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int startIndex;

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xA305E0", Offset = "0xA305E0", VA = "0xA305E0")]
		public static bool IsNullOrWhiteSpace(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xA30608", Offset = "0xA30608", VA = "0xA30608")]
		private bool TryReadLine(StreamReader reader, out string[] token)
		{
			return default(bool);
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xA30794", Offset = "0xA30794", VA = "0xA30794")]
		private void ReadVertex(List<TriangleNet.Geometry.Vertex> data, int index, string[] line, int attributes, int marks)
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xA30940", Offset = "0xA30940", VA = "0xA30940")]
		public void Read(string filename, out Polygon polygon)
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xA2C9A0", Offset = "0xA2C9A0", VA = "0xA2C9A0")]
		public void Read(string filename, out Polygon geometry, out List<ITriangle> triangles)
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xA30A5C", Offset = "0xA30A5C", VA = "0xA30A5C")]
		public IPolygon Read(string filename)
		{
			return null;
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xA2D4C4", Offset = "0xA2D4C4", VA = "0xA2D4C4")]
		public Polygon ReadNodeFile(string nodefilename)
		{
			return null;
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xA30A84", Offset = "0xA30A84", VA = "0xA30A84")]
		public Polygon ReadNodeFile(string nodefilename, bool readElements)
		{
			return null;
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xA2D4CC", Offset = "0xA2D4CC", VA = "0xA2D4CC")]
		public Polygon ReadPolyFile(string polyfilename)
		{
			return null;
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xA32908", Offset = "0xA32908", VA = "0xA32908")]
		public Polygon ReadPolyFile(string polyfilename, bool readElements)
		{
			return null;
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0xA31664", Offset = "0xA31664", VA = "0xA31664")]
		public Polygon ReadPolyFile(string polyfilename, bool readElements, bool readArea)
		{
			return null;
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0xA30A54", Offset = "0xA30A54", VA = "0xA30A54")]
		public List<ITriangle> ReadEleFile(string elefilename)
		{
			return null;
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0xA30FAC", Offset = "0xA30FAC", VA = "0xA30FAC")]
		private List<ITriangle> ReadEleFile(string elefilename, bool readArea)
		{
			return null;
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xA32914", Offset = "0xA32914", VA = "0xA32914")]
		private double[] ReadAreaFile(string areafilename, int intriangles)
		{
			return null;
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0xA32E30", Offset = "0xA32E30", VA = "0xA32E30")]
		public List<Edge> ReadEdgeFile(string edgeFile, int invertices)
		{
			return null;
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xA2C998", Offset = "0xA2C998", VA = "0xA2C998")]
		public TriangleReader()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class TriangleWriter
	{
		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo nfi;

		[Token(Token = "0x6001951")]
		[Address(RVA = "0xA33668", Offset = "0xA33668", VA = "0xA33668")]
		public void Write(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0xA33738", Offset = "0xA33738", VA = "0xA33738")]
		public void WriteNodes(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xA3389C", Offset = "0xA3389C", VA = "0xA3389C")]
		private void WriteNodes(StreamWriter writer, Mesh mesh)
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xA33CDC", Offset = "0xA33CDC", VA = "0xA33CDC")]
		private void WriteNodes(StreamWriter writer, IEnumerable<TriangleNet.Geometry.Vertex> nodes, bool markers, int attribs, bool jettison)
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xA2CC04", Offset = "0xA2CC04", VA = "0xA2CC04")]
		public void WriteElements(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xA2D550", Offset = "0xA2D550", VA = "0xA2D550")]
		public void WritePoly(IPolygon polygon, string filename)
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xA2CBFC", Offset = "0xA2CBFC", VA = "0xA2CBFC")]
		public void WritePoly(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xA34128", Offset = "0xA34128", VA = "0xA34128")]
		public void WritePoly(Mesh mesh, string filename, bool writeNodes)
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xA34E88", Offset = "0xA34E88", VA = "0xA34E88")]
		public void WriteEdges(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xA359F4", Offset = "0xA359F4", VA = "0xA359F4")]
		public void WriteNeighbors(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0xA2CBF4", Offset = "0xA2CBF4", VA = "0xA2CBF4")]
		public TriangleWriter()
		{
		}
	}
}
namespace TriangleNet.Geometry
{
	[Token(Token = "0x2000319")]
	public class Contour
	{
		[Serializable]
		[Token(Token = "0x20005B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5731A8", Offset = "0x5731A8")]
		private sealed class <>c
		{
			[Token(Token = "0x400302F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4003030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Converter<Vertex, Point> <>9__12_0;

			[Token(Token = "0x6002451")]
			[Address(RVA = "0x91BC8C", Offset = "0x91BC8C", VA = "0x91BC8C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002452")]
			[Address(RVA = "0x91BC94", Offset = "0x91BC94", VA = "0x91BC94")]
			internal Point <FindPointInPolygon>b__12_0(Vertex x)
			{
				return null;
			}
		}

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int marker;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool convex;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584DE4", Offset = "0x584DE4")]
		private List<Vertex> <Points>k__BackingField;

		[Token(Token = "0x1700029D")]
		public List<Vertex> Points
		{
			[Token(Token = "0x600195D")]
			[Address(RVA = "0xA11144", Offset = "0xA11144", VA = "0xA11144")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591B58", Offset = "0x591B58")]
			get
			{
				return null;
			}
			[Token(Token = "0x600195E")]
			[Address(RVA = "0xA1114C", Offset = "0xA1114C", VA = "0xA1114C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591B68", Offset = "0x591B68")]
			set
			{
			}
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xA11154", Offset = "0xA11154", VA = "0xA11154")]
		public Contour(IEnumerable<Vertex> points)
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xA111E0", Offset = "0xA111E0", VA = "0xA111E0")]
		public Contour(IEnumerable<Vertex> points, int marker)
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0xA11190", Offset = "0xA11190", VA = "0xA11190")]
		public Contour(IEnumerable<Vertex> points, int marker, bool convex)
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xA11354", Offset = "0xA11354", VA = "0xA11354")]
		public List<ISegment> GetSegments()
		{
			return null;
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xA11574", Offset = "0xA11574", VA = "0xA11574")]
		public Point FindInteriorPoint(int limit = 5, double eps = 2E-05)
		{
			return null;
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xA11228", Offset = "0xA11228", VA = "0xA11228")]
		private void AddPoints(IEnumerable<Vertex> points)
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xA116F8", Offset = "0xA116F8", VA = "0xA116F8")]
		private static Point FindPointInPolygon(List<Vertex> contour, int limit, double eps)
		{
			return null;
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xA11B20", Offset = "0xA11B20", VA = "0xA11B20")]
		private static bool IsPointInPolygon(Point point, List<Vertex> poly)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200031A")]
	public class Edge : IEdge
	{
		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584DF4", Offset = "0x584DF4")]
		private int <P0>k__BackingField;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584E04", Offset = "0x584E04")]
		private int <P1>k__BackingField;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584E14", Offset = "0x584E14")]
		private int <Label>k__BackingField;

		[Token(Token = "0x1700029E")]
		public int P0
		{
			[Token(Token = "0x6001967")]
			[Address(RVA = "0x8AD9D8", Offset = "0x8AD9D8", VA = "0x8AD9D8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591B78", Offset = "0x591B78")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001968")]
			[Address(RVA = "0x8AD9E0", Offset = "0x8AD9E0", VA = "0x8AD9E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591B88", Offset = "0x591B88")]
			private set
			{
			}
		}

		[Token(Token = "0x1700029F")]
		public int P1
		{
			[Token(Token = "0x6001969")]
			[Address(RVA = "0x8AD9E8", Offset = "0x8AD9E8", VA = "0x8AD9E8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591B98", Offset = "0x591B98")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600196A")]
			[Address(RVA = "0x8AD9F0", Offset = "0x8AD9F0", VA = "0x8AD9F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591BA8", Offset = "0x591BA8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A0")]
		public int Label
		{
			[Token(Token = "0x600196B")]
			[Address(RVA = "0x8AD9F8", Offset = "0x8AD9F8", VA = "0x8AD9F8", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591BB8", Offset = "0x591BB8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600196C")]
			[Address(RVA = "0x8ADA00", Offset = "0x8ADA00", VA = "0x8ADA00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591BC8", Offset = "0x591BC8")]
			private set
			{
			}
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x8ADA08", Offset = "0x8ADA08", VA = "0x8ADA08")]
		public Edge(int p0, int p1)
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x8ADA44", Offset = "0x8ADA44", VA = "0x8ADA44")]
		public Edge(int p0, int p1, int label)
		{
		}
	}
	[Token(Token = "0x200031B")]
	public static class ExtensionMethods
	{
		[Token(Token = "0x600196F")]
		[Address(RVA = "0x8AFAD4", Offset = "0x8AFAD4", VA = "0x8AFAD4")]
		public static IMesh Triangulate(this IPolygon polygon)
		{
			return null;
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x8AFB48", Offset = "0x8AFB48", VA = "0x8AFB48")]
		public static IMesh Triangulate(this IPolygon polygon, ConstraintOptions options)
		{
			return null;
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x8AFBC8", Offset = "0x8AFBC8", VA = "0x8AFBC8")]
		public static IMesh Triangulate(this IPolygon polygon, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x8AFC48", Offset = "0x8AFC48", VA = "0x8AFC48")]
		public static IMesh Triangulate(this IPolygon polygon, ConstraintOptions options, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x8AFCCC", Offset = "0x8AFCCC", VA = "0x8AFCCC")]
		public static IMesh Triangulate(this IPolygon polygon, ConstraintOptions options, QualityOptions quality, ITriangulator triangulator)
		{
			return null;
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x8AFD60", Offset = "0x8AFD60", VA = "0x8AFD60")]
		public static bool Contains(this ITriangle triangle, Point p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x8AFD78", Offset = "0x8AFD78", VA = "0x8AFD78")]
		public static bool Contains(this ITriangle triangle, double x, double y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x8B009C", Offset = "0x8B009C", VA = "0x8B009C")]
		public static Rectangle Bounds(this ITriangle triangle)
		{
			return null;
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0x8B0070", Offset = "0x8B0070", VA = "0x8B0070")]
		internal static double DotProduct(Point p, Point q)
		{
			return default(double);
		}
	}
	[Token(Token = "0x200031C")]
	public interface IEdge
	{
		[Token(Token = "0x170002A1")]
		int P0
		{
			[Token(Token = "0x6001978")]
			get;
		}

		[Token(Token = "0x170002A2")]
		int P1
		{
			[Token(Token = "0x6001979")]
			get;
		}

		[Token(Token = "0x170002A3")]
		int Label
		{
			[Token(Token = "0x600197A")]
			get;
		}
	}
	[Token(Token = "0x200031D")]
	public interface IPolygon
	{
		[Token(Token = "0x170002A4")]
		List<Vertex> Points
		{
			[Token(Token = "0x600197B")]
			get;
		}

		[Token(Token = "0x170002A5")]
		List<ISegment> Segments
		{
			[Token(Token = "0x600197C")]
			get;
		}

		[Token(Token = "0x170002A6")]
		List<Point> Holes
		{
			[Token(Token = "0x600197D")]
			get;
		}

		[Token(Token = "0x170002A7")]
		List<RegionPointer> Regions
		{
			[Token(Token = "0x600197E")]
			get;
		}

		[Token(Token = "0x170002A8")]
		bool HasPointMarkers
		{
			[Token(Token = "0x600197F")]
			get;
			[Token(Token = "0x6001980")]
			set;
		}

		[Token(Token = "0x170002A9")]
		bool HasSegmentMarkers
		{
			[Token(Token = "0x6001981")]
			get;
			[Token(Token = "0x6001982")]
			set;
		}

		[Token(Token = "0x6001983")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x591C58", Offset = "0x591C58")]
		void AddContour(IEnumerable<Vertex> points, int marker, bool hole, bool convex);

		[Token(Token = "0x6001984")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x591C90", Offset = "0x591C90")]
		void AddContour(IEnumerable<Vertex> points, int marker, Point hole);

		[Token(Token = "0x6001985")]
		Rectangle Bounds();

		[Token(Token = "0x6001986")]
		void Add(Vertex vertex);

		[Token(Token = "0x6001987")]
		void Add(ISegment segment, bool insert = false);

		[Token(Token = "0x6001988")]
		void Add(ISegment segment, int index);

		[Token(Token = "0x6001989")]
		void Add(Contour contour, bool hole = false);

		[Token(Token = "0x600198A")]
		void Add(Contour contour, Point hole);
	}
	[Token(Token = "0x200031E")]
	public interface ISegment : IEdge
	{
		[Token(Token = "0x600198B")]
		Vertex GetVertex(int index);

		[Token(Token = "0x600198C")]
		ITriangle GetTriangle(int index);
	}
	[Token(Token = "0x200031F")]
	public interface ITriangle
	{
		[Token(Token = "0x170002AA")]
		int ID
		{
			[Token(Token = "0x600198D")]
			get;
			[Token(Token = "0x600198E")]
			set;
		}

		[Token(Token = "0x170002AB")]
		int Label
		{
			[Token(Token = "0x600198F")]
			get;
			[Token(Token = "0x6001990")]
			set;
		}

		[Token(Token = "0x170002AC")]
		double Area
		{
			[Token(Token = "0x6001991")]
			get;
			[Token(Token = "0x6001992")]
			set;
		}

		[Token(Token = "0x6001993")]
		Vertex GetVertex(int index);

		[Token(Token = "0x6001994")]
		int GetVertexID(int index);

		[Token(Token = "0x6001995")]
		ITriangle GetNeighbor(int index);

		[Token(Token = "0x6001996")]
		int GetNeighborID(int index);

		[Token(Token = "0x6001997")]
		ISegment GetSegment(int index);
	}
	[Token(Token = "0x2000320")]
	public class Point : IComparable<Point>, IEquatable<Point>
	{
		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int id;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int label;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal double x;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal double y;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal double z;

		[Token(Token = "0x170002AD")]
		public int ID
		{
			[Token(Token = "0x600199B")]
			[Address(RVA = "0xDCE19C", Offset = "0xDCE19C", VA = "0xDCE19C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600199C")]
			[Address(RVA = "0xDCE1A4", Offset = "0xDCE1A4", VA = "0xDCE1A4")]
			set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		public double X
		{
			[Token(Token = "0x600199D")]
			[Address(RVA = "0xDCE1AC", Offset = "0xDCE1AC", VA = "0xDCE1AC")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600199E")]
			[Address(RVA = "0xDCE1B4", Offset = "0xDCE1B4", VA = "0xDCE1B4")]
			set
			{
			}
		}

		[Token(Token = "0x170002AF")]
		public double Y
		{
			[Token(Token = "0x600199F")]
			[Address(RVA = "0xDCE1BC", Offset = "0xDCE1BC", VA = "0xDCE1BC")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60019A0")]
			[Address(RVA = "0xDCE1C4", Offset = "0xDCE1C4", VA = "0xDCE1C4")]
			set
			{
			}
		}

		[Token(Token = "0x170002B0")]
		public double Z
		{
			[Token(Token = "0x60019A1")]
			[Address(RVA = "0xDCE1CC", Offset = "0xDCE1CC", VA = "0xDCE1CC")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60019A2")]
			[Address(RVA = "0xDCE1D4", Offset = "0xDCE1D4", VA = "0xDCE1D4")]
			set
			{
			}
		}

		[Token(Token = "0x170002B1")]
		public int Label
		{
			[Token(Token = "0x60019A3")]
			[Address(RVA = "0xDCE1DC", Offset = "0xDCE1DC", VA = "0xDCE1DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019A4")]
			[Address(RVA = "0xDCE1E4", Offset = "0xDCE1E4", VA = "0xDCE1E4")]
			set
			{
			}
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xDCE0F0", Offset = "0xDCE0F0", VA = "0xDCE0F0")]
		public Point()
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xDCE160", Offset = "0xDCE160", VA = "0xDCE160")]
		public Point(double x, double y)
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xDCE120", Offset = "0xDCE120", VA = "0xDCE120")]
		public Point(double x, double y, int label)
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xDCE1EC", Offset = "0xDCE1EC", VA = "0xDCE1EC")]
		public static bool operator ==(Point a, Point b)
		{
			return default(bool);
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xDCE268", Offset = "0xDCE268", VA = "0xDCE268")]
		public static bool operator !=(Point a, Point b)
		{
			return default(bool);
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xDCE2B4", Offset = "0xDCE2B4", VA = "0xDCE2B4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xDCE238", Offset = "0xDCE238", VA = "0xDCE238", Slot = "5")]
		public bool Equals(Point p)
		{
			return default(bool);
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xDCE368", Offset = "0xDCE368", VA = "0xDCE368", Slot = "4")]
		public int CompareTo(Point other)
		{
			return default(int);
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xDCE3CC", Offset = "0xDCE3CC", VA = "0xDCE3CC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xDCE418", Offset = "0xDCE418", VA = "0xDCE418", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000321")]
	public class Polygon : IPolygon
	{
		[Serializable]
		[Token(Token = "0x20005B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5731B8", Offset = "0x5731B8")]
		private sealed class <>c
		{
			[Token(Token = "0x4003031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4003032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Converter<Vertex, Point> <>9__27_0;

			[Token(Token = "0x6002454")]
			[Address(RVA = "0x8698D0", Offset = "0x8698D0", VA = "0x8698D0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002455")]
			[Address(RVA = "0x8698D8", Offset = "0x8698D8", VA = "0x8698D8")]
			internal Point <Bounds>b__27_0(Vertex x)
			{
				return null;
			}
		}

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vertex> points;

		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Point> holes;

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<RegionPointer> regions;

		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ISegment> segments;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584E24", Offset = "0x584E24")]
		private bool <HasPointMarkers>k__BackingField;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x584E34", Offset = "0x584E34")]
		private bool <HasSegmentMarkers>k__BackingField;

		[Token(Token = "0x170002B2")]
		public List<Vertex> Points
		{
			[Token(Token = "0x60019AC")]
			[Address(RVA = "0xAA1ED0", Offset = "0xAA1ED0", VA = "0xAA1ED0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B3")]
		public List<Point> Holes
		{
			[Token(Token = "0x60019AD")]
			[Address(RVA = "0xAA1ED8", Offset = "0xAA1ED8", VA = "0xAA1ED8", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B4")]
		public List<RegionPointer> Regions
		{
			[Token(Token = "0x60019AE")]
			[Address(RVA = "0xAA1EE0", Offset = "0xAA1EE0", VA = "0xAA1EE0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B5")]
		public List<ISegment> Segments
		{
			[Token(Token = "0x60019AF")]
			[Address(RVA = "0xAA1EE8", Offset = "0xAA1EE8", VA = "0xAA1EE8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B6")]
		public bool HasPointMarkers
		{
			[Token(Token = "0x60019B0")]
			[Address(RVA = "0xAA1EF0", Offset = "0xAA1EF0", VA = "0xAA1EF0", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591CC8", Offset = "0x591CC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019B1")]
			[Address(RVA = "0xAA1EF8", Offset = "0xAA1EF8", VA = "0xAA1EF8", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591CD8", Offset = "0x591CD8")]
			set
			{
			}
		}

		[Token(Token = "0x170002B7")]
		public bool HasSegmentMarkers
		{
			[Token(Token = "0x60019B2")]
			[Address(RVA = "0xAA1F04", Offset = "0xAA1F04", VA = "0xAA1F04", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591CE8", Offset = "0x591CE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019B3")]
			[Address(RVA = "0xAA1F0C", Offset = "0xAA1F0C", VA = "0xAA1F0C", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x591CF8", Offset = "0x591CF8")]
			set
			{
			}
		}

		[Token(Token = "0x170002B8")]
		public int Count
		{
			[Token(Token = "0x60019B4")]
			[Address(RVA = "0xAA1F18", Offset = "0xAA1F18", VA = "0xAA1F18")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xAA1F64", Offset = "0xAA1F64", VA = "0xAA1F64")]
		public Polygon()
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xAA20CC", Offset = "0xAA20CC", VA = "0xAA20CC")]
		public Polygon(int capacity)
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xAA1F70", Offset = "0xAA1F70", VA = "0xAA1F70")]
		public Polygon(int capacity, bool markers)
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xAA20D8", Offset = "0xAA20D8", VA = "0xAA20D8", Slot = "12")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x591D08", Offset = "0x591D08")]
		public void AddContour(IEnumerable<Vertex> points, int marker = 0, bool hole = false, bool convex = false)
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xAA2248", Offset = "0xAA2248", VA = "0xAA2248", Slot = "13")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x591D40", Offset = "0x591D40")]
		public void AddContour(IEnumerable<Vertex> points, int marker, Point hole)
		{
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xAA239C", Offset = "0xAA239C", VA = "0xAA239C", Slot = "14")]
		public Rectangle Bounds()
		{
			return null;
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xAA250C", Offset = "0xAA250C", VA = "0xAA250C", Slot = "15")]
		public void Add(Vertex vertex)
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xAA2570", Offset = "0xAA2570", VA = "0xAA2570", Slot = "16")]
		public void Add(ISegment segment, bool insert = false)
		{
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xAA271C", Offset = "0xAA271C", VA = "0xAA271C", Slot = "17")]
		public void Add(ISegment segment, int index)
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xAA2168", Offset = "0xAA2168", VA = "0xAA2168", Slot = "18")]
		public void Add(Contour contour, bool hole = false)
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xAA22D0", Offset = "0xAA22D0", VA = "0xAA22D0", Slot = "19")]
		public void Add(Contour contour, Point hole)
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class Rectangle
	{
		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double xmin;

		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double ymin;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double xmax;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double ymax;

		[Token(Token = "0x170002B9")]
		public double Left
		{
			[Token(Token = "0x60019C3")]
			[Address(RVA = "0xB94750", Offset = "0xB94750", VA = "0xB94750")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002BA")]
		public double Right
		{
			[Token(Token = "0x60019C4")]
			[Address(RVA = "0xB94758", Offset = "0xB94758", VA = "0xB94758")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002BB")]
		public double Bottom
		{
			[Token(Token = "0x60019C5")]
			[Address(RVA = "0xB94760", Offset = "0xB94760", VA = "0xB94760")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002BC")]
		public double Top
		{
			[Token(Token = "0x60019C6")]
			[Address(RVA = "0xB94768", Offset = "0xB94768", VA = "0xB94768")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002BD")]
		public double Width
		{
			[Token(Token = "0x60019C7")]
			[Address(RVA = "0xB94770", Offset = "0xB94770", VA = "0xB94770")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002BE")]
		public double Height
		{
			[Token(Token = "0x60019C8")]
			[Address(RVA = "0xB94780", Offset = "0xB94780", VA = "0xB94780")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xB94670", Offset = "0xB94670", VA = "0xB94670")]
		public Rectangle()
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xB946A8", Offset = "0xB946A8", VA = "0xB946A8")]
		public Rectangle(Rectangle other)
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xB946FC", Offset = "0xB946FC", VA = "0xB946FC")]
		public Rectangle(double x, double y, double width, double height)
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xB94790", Offset = "0xB94790", VA = "0xB94790")]
		public void Resize(double dx, double dy)
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xB947A8", Offset = "0xB947A8", VA = "0xB947A8")]
		public void Expand(Point p)
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xB94878", Offset = "0xB94878", VA = "0xB94878")]
		public void Expand(IEnumerable<Point> points)
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xB94B2C", Offset = "0xB94B2C", VA = "0xB94B2C")]
		public void Expand(Rectangle other)
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xB94BFC", Offset = "0xB94BFC", VA = "0xB94BFC")]
		public bool Contains(double x, double y)
		{
			return default(bool);
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xB94C38", Offset = "0xB94C38", VA = "0xB94C38")]
		public bool Contains(Point pt)
		{
			return default(bool);
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xB94C8C", Offset = "0xB94C8C", VA = "0xB94C8C")]
		public bool Contains(Rectangle other)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xB94CE8", Offset = "0xB94CE8", VA = "0xB94CE8")]
		public bool Intersects(Rectangle other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000323")]
	public class RegionPointer
	{
		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Point point;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int id;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal double area;

		[Token(Token = "0x170002BF")]
		public double Area
		{
			[Token(Token = "0x60019D1")]
			[Address(RVA = "0xB98DD8", Offset = "0xB98DD8", VA = "0xB98DD8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60019D2")]
			[Address(RVA = "0xB98DE0", Offset = "0xB98DE0", VA = "0xB98DE0")]
			set
			{
			}
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xB98E44", Offset = "0xB98E44", VA = "0xB98E44")]
		public RegionPointer(double x, double y, int id)
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xB98E4C", Offset = "0xB98E4C", VA = "0xB98E4C")]
		public RegionPointer(double x, double y, int id, double area)
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class Segment : ISegment, IEdge
	{
		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vertex v0;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vertex v1;

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int label;

		[Token(Token = "0x170002C0")]
		public int Label
		{
			[Token(Token = "0x60019D5")]
			[Address(RVA = "0x8C8E9C", Offset = "0x8C8E9C", VA = "0x8C8E9C", Slot = "8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019D6")]
			[Address(RVA = "0x8C8EA4", Offset = "0x8C8EA4", VA = "0x8C8EA4")]
			set
			{
			}
		}

		[Token(Token = "0x170002C1")]
		public int P0
		{
			[Token(Token = "0x60019D7")]
			[Address(RVA = "0x8C8EAC", Offset = "0x8C8EAC", VA = "0x8C8EAC", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C2")]
		public int P1
		{
			[Token(Token = "0x60019D8")]
			[Address(RVA = "0x8C8EC8", Offset = "0x8C8EC8", VA = "0x8C8EC8", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x8C8EE4", Offset = "0x8C8EE4", VA = "0x8C8EE4")]
		public Segment(Vertex v0, Vertex v1)
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x8C8F20", Offset = "0x8C8F20", VA = "0x8C8F20")]
		public Segment(Vertex v0, Vertex v1, int label)
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x8C8F60", Offset = "0x8C8F60", VA = "0x8C8F60", Slot = "4")]
		public Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x8C8FC0", Offset = "0x8C8FC0", VA = "0x8C8FC0", Slot = "5")]
		public ITriangle GetTriangle(int index)
		{
			return null;
		}
	}
	[Token(Token = "0x2000325")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x571EE4", Offset = "0x571EE4")]
	public class Vertex : Point
	{
		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int hash;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal VertexType type;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal Otri tri;

		[Token(Token = "0x170002C3")]
		public VertexType Type
		{
			[Token(Token = "0x60019E0")]
			[Address(RVA = "0x93C068", Offset = "0x93C068", VA = "0x93C068")]
			get
			{
				return default(VertexType);
			}
		}

		[Token(Token = "0x170002C4")]
		public double Item
		{
			[Token(Token = "0x60019E1")]
			[Address(RVA = "0x93C070", Offset = "0x93C070", VA = "0x93C070")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x93BFE0", Offset = "0x93BFE0", VA = "0x93BFE0")]
		public Vertex()
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x93C03C", Offset = "0x93C03C", VA = "0x93C03C")]
		public Vertex(double x, double y)
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x93C014", Offset = "0x93C014", VA = "0x93C014")]
		public Vertex(double x, double y, int mark)
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x93C0E4", Offset = "0x93C0E4", VA = "0x93C0E4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
}
namespace AquariusMax.Demo
{
	[Token(Token = "0x2000326")]
	public class TextureScroll : MonoBehaviour
	{
		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float scrollSpeed;

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer rend;

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xA24518", Offset = "0xA24518", VA = "0xA24518")]
		private void Start()
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xA2456C", Offset = "0xA2456C", VA = "0xA2456C")]
		private void Update()
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xA245F0", Offset = "0xA245F0", VA = "0xA245F0")]
		public TextureScroll()
		{
		}
	}
}
namespace AquariusMax.Medieval
{
	[Token(Token = "0x2000327")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x571F1C", Offset = "0x571F1C")]
	public class DemoCharacter : MonoBehaviour
	{
		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Camera cam;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float gravityModifier;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float walkSpeed;

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float runSpeed;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public float jumpSpeed;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float jumpIndicator;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		public bool isJumpPad;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float landingForce;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float mouseXSensitivity;

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float mouseYSensitivity;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CharacterController charControl;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion characterTargetRot;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion cameraTargetRot;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isWalking;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector2 moveInput;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 move;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool jumpPressed;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private CollisionFlags collisionFlags;

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xA1A790", Offset = "0xA1A790", VA = "0xA1A790")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xA1A7B4", Offset = "0xA1A7B4", VA = "0xA1A7B4")]
		private void Start()
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xA1A8A0", Offset = "0xA1A8A0", VA = "0xA1A8A0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xA1A9BC", Offset = "0xA1A9BC", VA = "0xA1A9BC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xA1AA40", Offset = "0xA1AA40", VA = "0xA1AA40")]
		private void GetMoveInput(out float speed)
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xA1AB28", Offset = "0xA1AB28", VA = "0xA1AB28")]
		private void CameraLook()
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xA1AD18", Offset = "0xA1AD18", VA = "0xA1AD18")]
		private void Update()
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xA1AD4C", Offset = "0xA1AD4C", VA = "0xA1AD4C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xA1ACB0", Offset = "0xA1ACB0", VA = "0xA1ACB0")]
		private Quaternion ClampRotationAroundXAxis(Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xA1AFD0", Offset = "0xA1AFD0", VA = "0xA1AFD0")]
		private void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xA1B10C", Offset = "0xA1B10C", VA = "0xA1B10C")]
		public DemoCharacter()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class MakeSomeNoise : MonoBehaviour
	{
		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float power;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float scale;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeScale;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float xOffset;

		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float yOffset;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshFilter mf;

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xA3FE84", Offset = "0xA3FE84", VA = "0xA3FE84")]
		private void Start()
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xA3FFC0", Offset = "0xA3FFC0", VA = "0xA3FFC0")]
		private void Update()
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xA3FEDC", Offset = "0xA3FEDC", VA = "0xA3FEDC")]
		private void MakeNoise()
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xA40020", Offset = "0xA40020", VA = "0xA40020")]
		private float CalculateHeight(float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xA40040", Offset = "0xA40040", VA = "0xA40040")]
		public MakeSomeNoise()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public class Rotator2 : MonoBehaviour
	{
		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float x;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float y;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float z;

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x8C20F8", Offset = "0x8C20F8", VA = "0x8C20F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x8C2130", Offset = "0x8C2130", VA = "0x8C2130")]
		public Rotator2()
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class TextureScroll : MonoBehaviour
	{
		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float scrollSpeed;

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer rend;

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xA24600", Offset = "0xA24600", VA = "0xA24600")]
		private void Start()
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xA24654", Offset = "0xA24654", VA = "0xA24654")]
		private void Update()
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xA246D8", Offset = "0xA246D8", VA = "0xA246D8")]
		public TextureScroll()
		{
		}
	}
}
namespace UnityTemplateProject
{
	[Token(Token = "0x200032B")]
	public class SimpleCameraController : MonoBehaviour
	{
		[Token(Token = "0x20005B6")]
		private class CameraState
		{
			[Token(Token = "0x4003033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yaw;

			[Token(Token = "0x4003034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pitch;

			[Token(Token = "0x4003035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float roll;

			[Token(Token = "0x4003036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float x;

			[Token(Token = "0x4003037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float y;

			[Token(Token = "0x4003038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float z;

			[Token(Token = "0x6002456")]
			[Address(RVA = "0x8721C4", Offset = "0x8721C4", VA = "0x8721C4")]
			public void SetFromTransform(Transform t)
			{
			}

			[Token(Token = "0x6002457")]
			[Address(RVA = "0x87224C", Offset = "0x87224C", VA = "0x87224C")]
			public void Translate(Vector3 translation)
			{
			}

			[Token(Token = "0x6002458")]
			[Address(RVA = "0x8722C8", Offset = "0x8722C8", VA = "0x8722C8")]
			public void LerpTowards(CameraState target, float positionLerpPct, float rotationLerpPct)
			{
			}

			[Token(Token = "0x6002459")]
			[Address(RVA = "0x872390", Offset = "0x872390", VA = "0x872390")]
			public void UpdateTransform(Transform t)
			{
			}

			[Token(Token = "0x600245A")]
			[Address(RVA = "0x8723DC", Offset = "0x8723DC", VA = "0x8723DC")]
			public CameraState()
			{
			}
		}

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraState m_TargetCameraState;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraState m_InterpolatingCameraState;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x584EE4", Offset = "0x584EE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x584EE4", Offset = "0x584EE4")]
		public float boost;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x584F44", Offset = "0x584F44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x584F44", Offset = "0x584F44")]
		public float positionLerpTime;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x584F9C", Offset = "0x584F9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x584F9C", Offset = "0x584F9C")]
		public AnimationCurve mouseSensitivityCurve;

		[Token(Token = "0x4002124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x584FFC", Offset = "0x584FFC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x584FFC", Offset = "0x584FFC")]
		public float rotationLerpTime;

		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585054", Offset = "0x585054")]
		public bool invertY;

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x8C9694", Offset = "0x8C9694", VA = "0x8C9694")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x8C96F4", Offset = "0x8C96F4", VA = "0x8C96F4")]
		private Vector3 GetInputTranslationDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x8C9808", Offset = "0x8C9808", VA = "0x8C9808")]
		private void Update()
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x8C9A84", Offset = "0x8C9A84", VA = "0x8C9A84")]
		public SimpleCameraController()
		{
		}
	}
}
namespace BNG
{
	[Token(Token = "0x200032C")]
	public enum HandPoseId
	{
		[Token(Token = "0x4002127")]
		Default = 0,
		[Token(Token = "0x4002128")]
		Generic = 1,
		[Token(Token = "0x4002129")]
		PingPongBall = 2,
		[Token(Token = "0x400212A")]
		Controller = 3,
		[Token(Token = "0x400212B")]
		Rock = 4,
		[Token(Token = "0x400212C")]
		PistolGrip = 50
	}
	[Token(Token = "0x200032D")]
	public class HandPoseDefinitions : MonoBehaviour
	{
		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xE4F104", Offset = "0xE4F104", VA = "0xE4F104")]
		public HandPoseDefinitions()
		{
		}
	}
	[Token(Token = "0x200032E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x571F7C", Offset = "0x571F7C")]
	[ExecuteInEditMode]
	public class AutoPoser : MonoBehaviour
	{
		[Token(Token = "0x20005B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5731C8", Offset = "0x5731C8")]
		private sealed class <updateAutoPoseRoutine>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400303A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400303B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AutoPoser <>4__this;

			[Token(Token = "0x17000408")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600245E")]
				[Address(RVA = "0x91AF28", Offset = "0x91AF28", VA = "0x91AF28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000409")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002460")]
				[Address(RVA = "0x91AF70", Offset = "0x91AF70", VA = "0x91AF70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600245B")]
			[Address(RVA = "0x91AE3C", Offset = "0x91AE3C", VA = "0x91AE3C")]
			[DebuggerHidden]
			public <updateAutoPoseRoutine>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x600245C")]
			[Address(RVA = "0x91AE68", Offset = "0x91AE68", VA = "0x91AE68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600245D")]
			[Address(RVA = "0x91AE6C", Offset = "0x91AE6C", VA = "0x91AE6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600245F")]
			[Address(RVA = "0x91AF30", Offset = "0x91AF30", VA = "0x91AF30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58508C", Offset = "0x58508C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58508C", Offset = "0x58508C")]
		public HandPose OpenHandPose;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5850EC", Offset = "0x5850EC")]
		public HandPose ClosedHandPose;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x585124", Offset = "0x585124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585124", Offset = "0x585124")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x585124", Offset = "0x585124")]
		public float FingerTipRadius;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5851A0", Offset = "0x5851A0")]
		public FingerTipCollider ThumbCollider;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5851D8", Offset = "0x5851D8")]
		public FingerTipCollider IndexFingerCollider;

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585210", Offset = "0x585210")]
		public FingerTipCollider MiddleFingerCollider;

		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585248", Offset = "0x585248")]
		public FingerTipCollider RingFingerCollider;

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585280", Offset = "0x585280")]
		public FingerTipCollider PinkyFingerCollider;

		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5852B8", Offset = "0x5852B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5852B8", Offset = "0x5852B8")]
		public bool UpdateContinuously;

		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585318", Offset = "0x585318")]
		public HandPose IdleHandPose;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LayerMask CollisionLayerMask;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x585350", Offset = "0x585350")]
		public bool ShowGizmos;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GizmoDisplayType GizmoType;

		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Color GizmoColor;

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public HandPoser InspectedPose;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private HandPoseDefinition currentPose;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private HandPoseDefinition tempPose;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private HandPoseDefinition collisionPose;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int _count;

		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool _thumbHit;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		private bool _indexHit;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
		private bool _middleHit;

		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
		private bool _ringHit;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _pinkyHit;

		[Token(Token = "0x170002C5")]
		public HandPoseDefinition CollisionPose
		{
			[Token(Token = "0x6001A00")]
			[Address(RVA = "0x8847EC", Offset = "0x8847EC", VA = "0x8847EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C6")]
		public bool CollisionDetected
		{
			[Token(Token = "0x6001A01")]
			[Address(RVA = "0x8847F4", Offset = "0x8847F4", VA = "0x8847F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x88482C", Offset = "0x88482C", VA = "0x88482C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x8848C4", Offset = "0x8848C4", VA = "0x8848C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x884AA8", Offset = "0x884AA8", VA = "0x884AA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x884E48", Offset = "0x884E48", VA = "0x884E48", Slot = "4")]
		public virtual void UpdateAutoPose(bool lerp)
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x884E9C", Offset = "0x884E9C", VA = "0x884E9C", Slot = "5")]
		public virtual void UpdateAutoPoseOnce()
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x884EC8", Offset = "0x884EC8", VA = "0x884EC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x591D78", Offset = "0x591D78")]
		private IEnumerator updateAutoPoseRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x884BE4", Offset = "0x884BE4", VA = "0x884BE4")]
		public HandPoseDefinition GetAutoPose()
		{
			return null;
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x884F34", Offset = "0x884F34", VA = "0x884F34")]
		public HandPoseDefinition CopyHandDefinition(HandPoseDefinition ToCopy)
		{
			return null;
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x885600", Offset = "0x885600", VA = "0x885600")]
		public FingerJoint GetJointCopy(FingerJoint ToClone)
		{
			return null;
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x885500", Offset = "0x885500", VA = "0x885500")]
		public List<FingerJoint> GetJointsCopy(List<FingerJoint> ToClone)
		{
			return null;
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x885014", Offset = "0x885014", VA = "0x885014")]
		public bool GetThumbHit(HandPoser poser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x885110", Offset = "0x885110", VA = "0x885110")]
		public bool GetIndexHit(HandPoser poser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x88520C", Offset = "0x88520C", VA = "0x88520C")]
		public bool GetMiddleHit(HandPoser poser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x885308", Offset = "0x885308", VA = "0x885308")]
		public bool GetRingHit(HandPoser poser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x885404", Offset = "0x885404", VA = "0x885404")]
		public bool GetPinkyHit(HandPoser poser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x885690", Offset = "0x885690", VA = "0x885690", Slot = "6")]
		public virtual bool LoopThroughJoints(List<Transform> fromJoints, List<FingerJoint> toJoints, Vector3 tipPosition, float tipRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x885930", Offset = "0x885930", VA = "0x885930", Slot = "7")]
		public virtual bool IsValidCollision(Collider col)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x8859C4", Offset = "0x8859C4", VA = "0x8859C4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x885BBC", Offset = "0x885BBC", VA = "0x885BBC")]
		public void DrawJointGizmo(FingerTipCollider tipCollider, Vector3 defaultPosition, float radius, GizmoDisplayType gizmoType)
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x885CF4", Offset = "0x885CF4", VA = "0x885CF4")]
		public AutoPoser()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public enum GizmoDisplayType
	{
		[Token(Token = "0x4002146")]
		Wire,
		[Token(Token = "0x4002147")]
		Solid,
		[Token(Token = "0x4002148")]
		None
	}
	[Token(Token = "0x2000330")]
	public class BoneMapping : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005B8")]
		public enum Mode
		{
			[Token(Token = "0x400303D")]
			FromToRotation,
			[Token(Token = "0x400303E")]
			MatchRotation
		}

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x585388", Offset = "0x585388")]
		public float weight;

		[Token(Token = "0x400214A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoneObject[] Fingers;

		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5853A0", Offset = "0x5853A0")]
		public bool ShowGizmos;

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x923FA4", Offset = "0x923FA4", VA = "0x923FA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x924230", Offset = "0x924230", VA = "0x924230")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x9246A4", Offset = "0x9246A4", VA = "0x9246A4")]
		public BoneMapping()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000331")]
	public class BoneObject
	{
		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] targetBones;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] destinationBones;

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 avatarForwardAxis;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 avatarUpAxis;

		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 targetForwardAxis;

		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 targetUpAxis;

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x9246BC", Offset = "0x9246BC", VA = "0x9246BC")]
		public BoneObject()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class EditorHandle : MonoBehaviour
	{
		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ShowTransformName;

		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Radius;

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color BaseColor;

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x8ADFB4", Offset = "0x8ADFB4", VA = "0x8ADFB4")]
		public EditorHandle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000333")]
	public class FingerJoint
	{
		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string TransformName;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Vector3 LocalPosition;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public Quaternion LocalRotation;

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x8B24F0", Offset = "0x8B24F0", VA = "0x8B24F0")]
		public FingerJoint()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class FingerTipCollider : MonoBehaviour
	{
		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585408", Offset = "0x585408")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x585408", Offset = "0x585408")]
		public float Radius;

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x8B2DC4", Offset = "0x8B2DC4", VA = "0x8B2DC4")]
		public FingerTipCollider()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000335")]
	public class HandPose : ScriptableObject
	{
		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x585460", Offset = "0x585460")]
		public string PoseName;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x585498", Offset = "0x585498")]
		public HandPoseDefinition Joints;

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xE4F0F4", Offset = "0xE4F0F4", VA = "0xE4F0F4")]
		public HandPose()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000336")]
	public class HandPoseDefinition
	{
		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5854E4", Offset = "0x5854E4")]
		public FingerJoint WristJoint;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x585530", Offset = "0x585530")]
		public List<FingerJoint> ThumbJoints;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58557C", Offset = "0x58557C")]
		public List<FingerJoint> IndexJoints;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5855C8", Offset = "0x5855C8")]
		public List<FingerJoint> MiddleJoints;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x585614", Offset = "0x585614")]
		public List<FingerJoint> RingJoints;

		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x585660", Offset = "0x585660")]
		public List<FingerJoint> PinkyJoints;

		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5856AC", Offset = "0x5856AC")]
		public List<FingerJoint> OtherJoints;

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0xE4F0FC", Offset = "0xE4F0FC", VA = "0xE4F0FC")]
		public HandPoseDefinition()
		{
		}
	}
	[Token(Token = "0x2000337")]
	[ExecuteInEditMode]
	public class HandPoser : MonoBehaviour
	{
		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ShowGizmos;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5856F8", Offset = "0x5856F8")]
		public string ResourcePath;

		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string PoseName;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HandPose CurrentPose;

		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float AnimationSpeed;

		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform WristJoint;

		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Transform> ThumbJoints;

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Transform> IndexJoints;

		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<Transform> MiddleJoints;

		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<Transform> RingJoints;

		[Token(Token = "0x400216C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Transform> PinkyJoints;

		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<Transform> OtherJoints;

		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private HandPose previousPose;

		[Token(Token = "0x400216F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool doSingleAnimation;

		[Token(Token = "0x4002170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool ContinuousUpdate;

		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float editorAnimationTime;

		[Token(Token = "0x4002172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float maxEditorAnimationTime;

		[Token(Token = "0x170002C7")]
		public HandPoseDefinition HandPoseJoints
		{
			[Token(Token = "0x6001A1F")]
			[Address(RVA = "0xE4F10C", Offset = "0xE4F10C", VA = "0xE4F10C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xE4F118", Offset = "0xE4F118", VA = "0xE4F118")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xE4F128", Offset = "0xE4F128", VA = "0xE4F128")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xE4F174", Offset = "0xE4F174", VA = "0xE4F174")]
		public void CheckForPoseChange()
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0xE4B8F4", Offset = "0xE4B8F4", VA = "0xE4B8F4")]
		public void OnPoseChanged()
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0xE4F2D8", Offset = "0xE4F2D8", VA = "0xE4F2D8")]
		public FingerJoint GetWristJoint()
		{
			return null;
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0xE4F2E8", Offset = "0xE4F2E8", VA = "0xE4F2E8")]
		public List<FingerJoint> GetThumbJoints()
		{
			return null;
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xE4F2F8", Offset = "0xE4F2F8", VA = "0xE4F2F8")]
		public List<FingerJoint> GetIndexJoints()
		{
			return null;
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0xE4F308", Offset = "0xE4F308", VA = "0xE4F308")]
		public List<FingerJoint> GetMiddleJoints()
		{
			return null;
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0xE4F318", Offset = "0xE4F318", VA = "0xE4F318")]
		public List<FingerJoint> GetRingJoints()
		{
			return null;
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0xE4F328", Offset = "0xE4F328", VA = "0xE4F328")]
		public List<FingerJoint> GetPinkyJoints()
		{
			return null;
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0xE4F338", Offset = "0xE4F338", VA = "0xE4F338")]
		public List<FingerJoint> GetOtherJoints()
		{
			return null;
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0xE4F348", Offset = "0xE4F348", VA = "0xE4F348")]
		public Transform GetTip(List<Transform> transforms)
		{
			return null;
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xE4F3BC", Offset = "0xE4F3BC", VA = "0xE4F3BC")]
		public Transform GetThumbTip()
		{
			return null;
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xE4F3C4", Offset = "0xE4F3C4", VA = "0xE4F3C4")]
		public Transform GetIndexTip()
		{
			return null;
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xE4F3CC", Offset = "0xE4F3CC", VA = "0xE4F3CC")]
		public Transform GetMiddleTip()
		{
			return null;
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xE4F3D4", Offset = "0xE4F3D4", VA = "0xE4F3D4")]
		public Transform GetRingTip()
		{
			return null;
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xE4F3DC", Offset = "0xE4F3DC", VA = "0xE4F3DC")]
		public Transform GetPinkyTip()
		{
			return null;
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xE4F3E4", Offset = "0xE4F3E4", VA = "0xE4F3E4")]
		public static Vector3 GetFingerTipPositionWithOffset(List<Transform> jointTransforms, float tipRadius)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xE4F578", Offset = "0xE4F578", VA = "0xE4F578", Slot = "4")]
		public virtual List<FingerJoint> GetJointsFromTransforms(List<Transform> jointTransforms)
		{
			return null;
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xE4F6F8", Offset = "0xE4F6F8", VA = "0xE4F6F8", Slot = "5")]
		public virtual FingerJoint GetJointFromTransform(Transform jointTransform)
		{
			return null;
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xE4F7DC", Offset = "0xE4F7DC", VA = "0xE4F7DC", Slot = "6")]
		public virtual void UpdateHandPose(HandPoseDefinition pose, bool lerp)
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xE4F8D0", Offset = "0xE4F8D0", VA = "0xE4F8D0", Slot = "7")]
		public virtual void UpdateJoint(FingerJoint fromJoint, Transform toTransform, bool doLerp)
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xE4FAB0", Offset = "0xE4FAB0", VA = "0xE4FAB0", Slot = "8")]
		public virtual void UpdateJoints(List<FingerJoint> joints, List<Transform> toTransforms, bool doLerp)
		{
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xE4FCC8", Offset = "0xE4FCC8", VA = "0xE4FCC8", Slot = "9")]
		public virtual HandPoseDefinition GetHandPoseDefinition()
		{
			return null;
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xE4FDD4", Offset = "0xE4FDD4", VA = "0xE4FDD4", Slot = "10")]
		public virtual void SavePoseAsScriptablObject(string poseName)
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xE4FE48", Offset = "0xE4FE48", VA = "0xE4FE48", Slot = "11")]
		public virtual void CreateUniquePose(string poseName)
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xE4FF74", Offset = "0xE4FF74", VA = "0xE4FF74", Slot = "12")]
		public virtual HandPose GetHandPoseScriptableObject()
		{
			return null;
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xE4FF7C", Offset = "0xE4FF7C", VA = "0xE4FF7C", Slot = "13")]
		public virtual void DoPoseUpdate()
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xE5004C", Offset = "0xE5004C", VA = "0xE5004C", Slot = "14")]
		public virtual void ResetEditorHandles()
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xE501BC", Offset = "0xE501BC", VA = "0xE501BC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xE501C0", Offset = "0xE501C0", VA = "0xE501C0")]
		public HandPoser()
		{
		}
	}
	[Token(Token = "0x2000338")]
	[ExecuteInEditMode]
	public class SkeletonVisualizer : MonoBehaviour
	{
		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ShowGizmos;

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x585730", Offset = "0x585730")]
		public float JointRadius;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x585748", Offset = "0x585748")]
		public float BoneThickness;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color GizmoColor;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool ShowTransformNames;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool isQuiting;

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x8CD644", Offset = "0x8CD644", VA = "0x8CD644")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x8CD650", Offset = "0x8CD650", VA = "0x8CD650")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x8CD654", Offset = "0x8CD654", VA = "0x8CD654", Slot = "4")]
		public virtual bool IsTipOfBone(Transform fingerJoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x8CD758", Offset = "0x8CD758", VA = "0x8CD758")]
		public void ResetEditorHandles()
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x8CD8C8", Offset = "0x8CD8C8", VA = "0x8CD8C8")]
		public SkeletonVisualizer()
		{
		}
	}
	[Token(Token = "0x2000339")]
	public class BNGIKPlayerScale : MonoBehaviour
	{
		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRIK ik;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float scaleMlp;

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ControllerBinding ScalePlayerInput;

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x885D64", Offset = "0x885D64", VA = "0x885D64")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x885EE4", Offset = "0x885EE4", VA = "0x885EE4")]
		public BNGIKPlayerScale()
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class FingerMapping : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005B9")]
		public enum Mode
		{
			[Token(Token = "0x4003040")]
			FromToRotation,
			[Token(Token = "0x4003041")]
			MatchRotation
		}

		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IK ik;

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x585760", Offset = "0x585760")]
		public float weight;

		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Mode mode;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Finger[] fingers;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x585778", Offset = "0x585778")]
		public bool ShowGizmos;

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x8B24F8", Offset = "0x8B24F8", VA = "0x8B24F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x8B263C", Offset = "0x8B263C", VA = "0x8B263C")]
		private void AfterVRIK()
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x8B2AA8", Offset = "0x8B2AA8", VA = "0x8B2AA8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x8B2DAC", Offset = "0x8B2DAC", VA = "0x8B2DAC")]
		public FingerMapping()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033B")]
	public class Finger
	{
		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] avatarBones;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] targetBones;

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 avatarForwardAxis;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 avatarUpAxis;

		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 targetForwardAxis;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 targetUpAxis;

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x8B2444", Offset = "0x8B2444", VA = "0x8B2444")]
		public Finger()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public class IKHandTargetMover : MonoBehaviour
	{
		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Grabber grabber;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform HandTarget;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 rotationOffset;

		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 positionOffset;

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xA65098", Offset = "0xA65098", VA = "0xA65098")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xA65328", Offset = "0xA65328", VA = "0xA65328")]
		public IKHandTargetMover()
		{
		}
	}
	[Token(Token = "0x200033D")]
	public class NetworkManager : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x20005BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5731D8", Offset = "0x5731D8")]
		private sealed class <doLoadLevelWithFade>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkManager <>4__this;

			[Token(Token = "0x4003045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string sceneName;

			[Token(Token = "0x1700040A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002464")]
				[Address(RVA = "0x868464", Offset = "0x868464", VA = "0x868464", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002466")]
				[Address(RVA = "0x8684AC", Offset = "0x8684AC", VA = "0x8684AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002461")]
			[Address(RVA = "0x8682D0", Offset = "0x8682D0", VA = "0x8682D0")]
			[DebuggerHidden]
			public <doLoadLevelWithFade>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002462")]
			[Address(RVA = "0x8682FC", Offset = "0x8682FC", VA = "0x8682FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002463")]
			[Address(RVA = "0x868300", Offset = "0x868300", VA = "0x868300", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002465")]
			[Address(RVA = "0x86846C", Offset = "0x86846C", VA = "0x86846C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5857B0", Offset = "0x5857B0")]
		[SerializeField]
		private byte maxPlayersPerRoom;

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5857FC", Offset = "0x5857FC")]
		public bool JoinRoomOnStart;

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585834", Offset = "0x585834")]
		public bool dontDestroyOnLoad;

		[Token(Token = "0x400218E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string JoinRoomName;

		[Token(Token = "0x400218F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58586C", Offset = "0x58586C")]
		public string GameVersion;

		[Token(Token = "0x4002190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5858A4", Offset = "0x5858A4")]
		public string RemotePlayerObjectName;

		[Token(Token = "0x4002191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5858DC", Offset = "0x5858DC")]
		public Text DebugText;

		[Token(Token = "0x4002192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ScreenFader sf;

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xE01784", Offset = "0xE01784", VA = "0xE01784")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xE018B8", Offset = "0xE018B8", VA = "0xE018B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xE01ACC", Offset = "0xE01ACC", VA = "0xE01ACC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xE01BE4", Offset = "0xE01BE4", VA = "0xE01BE4", Slot = "34")]
		public override void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xE01D1C", Offset = "0xE01D1C", VA = "0xE01D1C", Slot = "44")]
		public override void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xE01DAC", Offset = "0xE01DAC", VA = "0xE01DAC", Slot = "45")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xE01E94", Offset = "0xE01E94", VA = "0xE01E94", Slot = "42")]
		public override void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xE01FD0", Offset = "0xE01FD0", VA = "0xE01FD0", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xE02294", Offset = "0xE02294", VA = "0xE02294", Slot = "38")]
		public override void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xE023B4", Offset = "0xE023B4", VA = "0xE023B4")]
		public void LoadScene(string sceneName)
		{
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xE023E0", Offset = "0xE023E0", VA = "0xE023E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x591DD8", Offset = "0x591DD8")]
		private IEnumerator doLoadLevelWithFade(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xE019C0", Offset = "0xE019C0", VA = "0xE019C0")]
		private void LogText(string message)
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xE02458", Offset = "0xE02458", VA = "0xE02458")]
		public NetworkManager()
		{
		}
	}
	[Token(Token = "0x200033E")]
	public class NetworkManager2 : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x20005BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5731E8", Offset = "0x5731E8")]
		private sealed class <doLoadLevelWithFade>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkManager2 <>4__this;

			[Token(Token = "0x4003049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string sceneName;

			[Token(Token = "0x1700040C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600246A")]
				[Address(RVA = "0x868648", Offset = "0x868648", VA = "0x868648", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600246C")]
				[Address(RVA = "0x868690", Offset = "0x868690", VA = "0x868690", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002467")]
			[Address(RVA = "0x8684B4", Offset = "0x8684B4", VA = "0x8684B4")]
			[DebuggerHidden]
			public <doLoadLevelWithFade>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002468")]
			[Address(RVA = "0x8684E0", Offset = "0x8684E0", VA = "0x8684E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002469")]
			[Address(RVA = "0x8684E4", Offset = "0x8684E4", VA = "0x8684E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600246B")]
			[Address(RVA = "0x868650", Offset = "0x868650", VA = "0x868650", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585914", Offset = "0x585914")]
		[SerializeField]
		private byte maxPlayersPerRoom;

		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585960", Offset = "0x585960")]
		public bool JoinRoomOnStart;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585998", Offset = "0x585998")]
		public bool dontDestroyOnLoad;

		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string JoinRoomName;

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5859D0", Offset = "0x5859D0")]
		public string GameVersion;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585A08", Offset = "0x585A08")]
		public string RemotePlayerObjectName;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585A40", Offset = "0x585A40")]
		public Text DebugText;

		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ScreenFader sf;

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xE024EC", Offset = "0xE024EC", VA = "0xE024EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xE02620", Offset = "0xE02620", VA = "0xE02620")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xE02834", Offset = "0xE02834", VA = "0xE02834")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xE0294C", Offset = "0xE0294C", VA = "0xE0294C", Slot = "34")]
		public override void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xE02A84", Offset = "0xE02A84", VA = "0xE02A84", Slot = "44")]
		public override void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xE02B14", Offset = "0xE02B14", VA = "0xE02B14", Slot = "45")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xE02BFC", Offset = "0xE02BFC", VA = "0xE02BFC", Slot = "42")]
		public override void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xE02D38", Offset = "0xE02D38", VA = "0xE02D38", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xE02ED0", Offset = "0xE02ED0", VA = "0xE02ED0", Slot = "38")]
		public override void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xE02FF0", Offset = "0xE02FF0", VA = "0xE02FF0")]
		public void LoadScene(string sceneName)
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xE0301C", Offset = "0xE0301C", VA = "0xE0301C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x591E38", Offset = "0x591E38")]
		private IEnumerator doLoadLevelWithFade(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xE02728", Offset = "0xE02728", VA = "0xE02728")]
		private void LogText(string message)
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xE03094", Offset = "0xE03094", VA = "0xE03094")]
		public NetworkManager2()
		{
		}
	}
	[Token(Token = "0x200033F")]
	public class NetworkManager3 : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x20005BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5731F8", Offset = "0x5731F8")]
		private sealed class <doLoadLevelWithFade>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400304A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400304B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400304C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkManager3 <>4__this;

			[Token(Token = "0x400304D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string sceneName;

			[Token(Token = "0x1700040E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002470")]
				[Address(RVA = "0x86882C", Offset = "0x86882C", VA = "0x86882C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002472")]
				[Address(RVA = "0x868874", Offset = "0x868874", VA = "0x868874", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600246D")]
			[Address(RVA = "0x868698", Offset = "0x868698", VA = "0x868698")]
			[DebuggerHidden]
			public <doLoadLevelWithFade>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600246E")]
			[Address(RVA = "0x8686C4", Offset = "0x8686C4", VA = "0x8686C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600246F")]
			[Address(RVA = "0x8686C8", Offset = "0x8686C8", VA = "0x8686C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002471")]
			[Address(RVA = "0x868834", Offset = "0x868834", VA = "0x868834", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585A78", Offset = "0x585A78")]
		[SerializeField]
		private byte maxPlayersPerRoom;

		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585AC4", Offset = "0x585AC4")]
		public bool JoinRoomOnStart;

		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585AFC", Offset = "0x585AFC")]
		public bool dontDestroyOnLoad;

		[Token(Token = "0x400219E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string JoinRoomName;

		[Token(Token = "0x400219F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585B34", Offset = "0x585B34")]
		public string GameVersion;

		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585B6C", Offset = "0x585B6C")]
		public string RemotePlayerObjectName;

		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585BA4", Offset = "0x585BA4")]
		public Text DebugText;

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ScreenFader sf;

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xE03128", Offset = "0xE03128", VA = "0xE03128")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xE0325C", Offset = "0xE0325C", VA = "0xE0325C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xE03470", Offset = "0xE03470", VA = "0xE03470")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xE03588", Offset = "0xE03588", VA = "0xE03588", Slot = "34")]
		public override void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xE036C0", Offset = "0xE036C0", VA = "0xE036C0", Slot = "44")]
		public override void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xE03750", Offset = "0xE03750", VA = "0xE03750", Slot = "45")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xE03838", Offset = "0xE03838", VA = "0xE03838", Slot = "42")]
		public override void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xE03974", Offset = "0xE03974", VA = "0xE03974", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xE03B0C", Offset = "0xE03B0C", VA = "0xE03B0C", Slot = "38")]
		public override void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xE03C2C", Offset = "0xE03C2C", VA = "0xE03C2C")]
		public void LoadScene(string sceneName)
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xE03C58", Offset = "0xE03C58", VA = "0xE03C58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x591E98", Offset = "0x591E98")]
		private IEnumerator doLoadLevelWithFade(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xE03364", Offset = "0xE03364", VA = "0xE03364")]
		private void LogText(string message)
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xE03CD0", Offset = "0xE03CD0", VA = "0xE03CD0")]
		public NetworkManager3()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class NetworkPlayer : MonoBehaviourPunCallbacks, IPunObservable, IPunOwnershipCallbacks
	{
		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585BDC", Offset = "0x585BDC")]
		public Transform PlayerHeadTransform;

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform PlayerLeftHandTransform;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform PlayerRightHandTransform;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585C14", Offset = "0x585C14")]
		public Transform RemoteHeadTransform;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _syncHeadStartPosition;

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 _syncHeadEndPosition;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion _syncHeadStartRotation;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion _syncHeadEndRotation;

		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585C4C", Offset = "0x585C4C")]
		public Transform RemoteLeftHandTransform;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 _syncLHandStartPosition;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 _syncLHandEndPosition;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion _syncLHandStartRotation;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Quaternion _syncLHandEndRotation;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585C84", Offset = "0x585C84")]
		public Transform RemoteRightHandTransform;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 _syncRHandStartPosition;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 _syncRHandEndPosition;

		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Quaternion _syncRHandStartRotation;

		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion _syncRHandEndRotation;

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public HandController LeftHandController;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public HandController RightHandController;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Animator RemoteLeftHandAnimator;

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Animator RemoteRightHandAnimator;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585CBC", Offset = "0x585CBC")]
		public Grabber LeftGrabber;

		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private GrabbablesInTrigger gitLeft;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585CF4", Offset = "0x585CF4")]
		public Grabber RightGrabber;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private GrabbablesInTrigger gitRight;

		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585D2C", Offset = "0x585D2C")]
		public float HandAnimationSpeed;

		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float _syncLeftGripStart;

		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float _syncRightGripStart;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float _syncLeftPointStart;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private float _syncRightPointStart;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private float _syncLeftThumbStart;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private float _syncRightThumbStart;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private float _syncLeftGripEnd;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private float _syncRightGripEnd;

		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private float _syncLeftPointEnd;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private float _syncRightPointEnd;

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private float _syncLeftThumbEnd;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float _syncRightThumbEnd;

		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float _lastSynchronizationTime;

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float _syncDelay;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float _syncTime;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		protected double lastRequestTime;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		protected float requestInterval;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Dictionary<int, double> requestedGrabbables;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private bool disabledObjects;

		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
		private bool _syncLeftHoldingItem;

		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x192")]
		private bool _syncRightHoldingItem;

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xE03D64", Offset = "0xE03D64", VA = "0xE03D64")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xE03E88", Offset = "0xE03E88", VA = "0xE03E88", Slot = "57")]
		public void OnOwnershipTransferFailed(PhotonView targetView, Player senderOfFailedRequest)
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xE03EC8", Offset = "0xE03EC8", VA = "0xE03EC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xE02164", Offset = "0xE02164", VA = "0xE02164")]
		public void AssignPlayerObjects()
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xE04610", Offset = "0xE04610", VA = "0xE04610")]
		private Transform getChildTransformByName(Transform search, string name)
		{
			return null;
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xE04434", Offset = "0xE04434", VA = "0xE04434")]
		private void toggleObjects(bool enableObjects)
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xE04398", Offset = "0xE04398", VA = "0xE04398")]
		private void checkGrabbablesTransfer()
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xE046E0", Offset = "0xE046E0", VA = "0xE046E0")]
		private void requestOwnerShipForNearbyGrabbables(GrabbablesInTrigger grabbables)
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xE04A8C", Offset = "0xE04A8C", VA = "0xE04A8C", Slot = "58")]
		public virtual bool RecentlyRequested(PhotonView view)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xE04B7C", Offset = "0xE04B7C", VA = "0xE04B7C", Slot = "59")]
		public virtual void RequestGrabbableOwnership(PhotonView view)
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xE044C4", Offset = "0xE044C4", VA = "0xE044C4")]
		private void updateRemotePositionRotation(Transform moveTransform, Vector3 startPosition, Vector3 endPosition, Quaternion syncStartRotation, Quaternion syncEndRotation, float syncValue)
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xE04C80", Offset = "0xE04C80", VA = "0xE04C80", Slot = "54")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xE055E0", Offset = "0xE055E0", VA = "0xE055E0", Slot = "55")]
		public void OnOwnershipRequest(PhotonView targetView, Player requestingPlayer)
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xE05720", Offset = "0xE05720", VA = "0xE05720", Slot = "56")]
		public void OnOwnershipTransfered(PhotonView targetView, Player requestingPlayer)
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xE05724", Offset = "0xE05724", VA = "0xE05724")]
		public NetworkPlayer()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class NetworkedGrabbable : Grabbable, IPunObservable
	{
		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private PhotonView view;

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private Rigidbody rb;

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private Vector3 _syncStartPosition;

		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private Vector3 _syncEndPosition;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private Quaternion _syncStartRotation;

		[Token(Token = "0x40021D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private Quaternion _syncEndRotation;

		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private bool _syncBeingHeld;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private float _lastSynchronizationTime;

		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private float _syncDelay;

		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		private float _syncTime;

		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		protected bool requestingOwnerShip;

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xE0581C", Offset = "0xE0581C", VA = "0xE0581C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xE05894", Offset = "0xE05894", VA = "0xE05894", Slot = "4")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xE05B40", Offset = "0xE05B40", VA = "0xE05B40", Slot = "51")]
		public virtual void CheckForNullOwner()
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xE05C2C", Offset = "0xE05C2C", VA = "0xE05C2C", Slot = "8")]
		public override bool IsGrabbable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xE05D10", Offset = "0xE05D10", VA = "0xE05D10", Slot = "50")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xE05F8C", Offset = "0xE05F8C", VA = "0xE05F8C")]
		public NetworkedGrabbable()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class DemoCube : MonoBehaviour
	{
		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material HighlightMaterial;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material ActiveMaterial;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool active;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool hovering;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material initialMaterial;

		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer render;

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xA1B174", Offset = "0xA1B174", VA = "0xA1B174")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xA1B1DC", Offset = "0xA1B1DC", VA = "0xA1B1DC")]
		public void SetActive(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xA1B23C", Offset = "0xA1B23C", VA = "0xA1B23C")]
		public void SetInactive(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xA1B244", Offset = "0xA1B244", VA = "0xA1B244")]
		public void SetHovering(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xA1B250", Offset = "0xA1B250", VA = "0xA1B250")]
		public void ResetHovering(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xA1B1E8", Offset = "0xA1B1E8", VA = "0xA1B1E8")]
		public void UpdateMaterial()
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xA1B258", Offset = "0xA1B258", VA = "0xA1B258")]
		public DemoCube()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class DemoScript : MonoBehaviour
	{
		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text LabelToUpdate;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ProjectileLauncher DemoLauncher;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int MaxLaunchedObjects;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GameObject> launchedObjects;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text JoystickText;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject AmmoObject;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform ItemsHolder;

		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<Grabbable, PosRot> _initalGrabbables;

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody cubeRigid;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody cubeRigid1;

		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody cubeRigid2;

		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody cubeRigid3;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Grabbable> demoClips;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 rotateX;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 rotateY;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 rotateZ;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 rotateXYX;

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xA1B260", Offset = "0xA1B260", VA = "0xA1B260")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xA1B6FC", Offset = "0xA1B6FC", VA = "0xA1B6FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xA1B86C", Offset = "0xA1B86C", VA = "0xA1B86C")]
		public void UpdateSliderText(float sliderValue)
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xA1B9C4", Offset = "0xA1B9C4", VA = "0xA1B9C4")]
		public void UpdateJoystickText(float leverX, float leverY)
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xA1BAE8", Offset = "0xA1BAE8", VA = "0xA1BAE8")]
		public void ResetGrabbables()
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xA1BDF8", Offset = "0xA1BDF8", VA = "0xA1BDF8")]
		public void GrabAmmo(Grabber grabber)
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xA1C2A8", Offset = "0xA1C2A8", VA = "0xA1C2A8")]
		public void ShootLauncher()
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xA1B4D0", Offset = "0xA1B4D0", VA = "0xA1B4D0")]
		private void initGravityCubes()
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xA1B700", Offset = "0xA1B700", VA = "0xA1B700")]
		private void rotateGravityCubes()
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xA1C418", Offset = "0xA1C418", VA = "0xA1C418")]
		public DemoScript()
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class PosRot
	{
		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xAA45FC", Offset = "0xAA45FC", VA = "0xAA45FC")]
		public PosRot()
		{
		}
	}
	[Token(Token = "0x2000345")]
	public class CharacterConstraint : MonoBehaviour
	{
		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BNGPlayerController bngController;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CharacterController character;

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x92E380", Offset = "0x92E380", VA = "0x92E380")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x92E408", Offset = "0x92E408", VA = "0x92E408")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x92E414", Offset = "0x92E414", VA = "0x92E414", Slot = "4")]
		public virtual void CheckCharacterCollisionMove()
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x92E534", Offset = "0x92E534", VA = "0x92E534")]
		public CharacterConstraint()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public class CharacterIK : MonoBehaviour
	{
		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform FollowLeftController;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform FollowRightController;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform FollowLeftFoot;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform FollowRightFoot;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform FollowHead;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float FootYPosition;

		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool IKActive;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool IKFeetActive;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool HideHead;

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		public bool HideLeftArm;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool HideRightArm;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool HideLeftHand;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool HideRightHand;

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		public bool HideLegs;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform HipsJoint;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CharacterController FollowPlayer;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform headBone;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform leftShoulderJoint;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform rightShoulderJoint;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform leftHandJoint;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform rightHandJoint;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Animator animator;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float HipOffset;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector3 hideBoneScale;

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x92E888", Offset = "0x92E888", VA = "0x92E888")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x92E964", Offset = "0x92E964", VA = "0x92E964")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x92EC08", Offset = "0x92EC08", VA = "0x92EC08")]
		private void OnAnimatorIK()
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x92F0AC", Offset = "0x92F0AC", VA = "0x92F0AC")]
		public CharacterIK()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public class CharacterYOffset : MonoBehaviour
	{
		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x92F0D8", Offset = "0x92F0D8", VA = "0x92F0D8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x92F180", Offset = "0x92F180", VA = "0x92F180")]
		public CharacterYOffset()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class Climbable : Grabbable
	{
		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private PlayerClimbing playerClimbing;

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xA0BAE8", Offset = "0xA0BAE8", VA = "0xA0BAE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xA0BBD4", Offset = "0xA0BBD4", VA = "0xA0BBD4", Slot = "20")]
		public override void GrabItem(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xA0BC7C", Offset = "0xA0BC7C", VA = "0xA0BC7C", Slot = "28")]
		public override void DropItem(Grabber droppedBy)
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xA0BD50", Offset = "0xA0BD50", VA = "0xA0BD50")]
		public Climbable()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public class CollisionSound : MonoBehaviour
	{
		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip CollisionAudio;

		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource audioSource;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float startTime;

		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider col;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Grabbable grab;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MinimumVolume;

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MaximumVolume;

		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool RecentlyPlayedSound;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float lastPlayedSound;

		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float LastRelativeVelocity;

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xA0BDB4", Offset = "0xA0BDB4", VA = "0xA0BDB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xA0BEE4", Offset = "0xA0BEE4", VA = "0xA0BEE4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xA0C254", Offset = "0xA0C254", VA = "0xA0C254")]
		private void resetLastPlayedSound()
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xA0C25C", Offset = "0xA0C25C", VA = "0xA0C25C")]
		public CollisionSound()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class ConstrainLocalPosition : MonoBehaviour
	{
		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ConstrainLocalX;

		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float LocalXMin;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float LocalXMax;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool ConstrainLocalY;

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LocalYMin;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float LocalYMax;

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool ConstrainLocalZ;

		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float LocalZMin;

		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float LocalZMax;

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xA0E020", Offset = "0xA0E020", VA = "0xA0E020")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xA0E024", Offset = "0xA0E024", VA = "0xA0E024")]
		private void doConstrain()
		{
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xA0E118", Offset = "0xA0E118", VA = "0xA0E118")]
		public ConstrainLocalPosition()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public class DamageCollider : MonoBehaviour
	{
		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Damage;

		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody ColliderRigidbody;

		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MinForce;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float LastRelativeVelocity;

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float LastDamageForce;

		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool TakeCollisionDamage;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float CollisionDamage;

		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Damageable thisDamageable;

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xA16740", Offset = "0xA16740", VA = "0xA16740")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xA167FC", Offset = "0xA167FC", VA = "0xA167FC")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xA16844", Offset = "0xA16844", VA = "0xA16844", Slot = "4")]
		public virtual void OnCollisionEvent(Collision collision)
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xA16AA4", Offset = "0xA16AA4", VA = "0xA16AA4")]
		public DamageCollider()
		{
		}
	}
	[Token(Token = "0x200034C")]
	public class Damageable : MonoBehaviour
	{
		[Token(Token = "0x20005BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573208", Offset = "0x573208")]
		private sealed class <RespawnRoutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400304E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400304F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float seconds;

			[Token(Token = "0x4003051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Damageable <>4__this;

			[Token(Token = "0x17000410")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002476")]
				[Address(RVA = "0x91C500", Offset = "0x91C500", VA = "0x91C500", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000411")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002478")]
				[Address(RVA = "0x91C548", Offset = "0x91C548", VA = "0x91C548", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002473")]
			[Address(RVA = "0x91C0BC", Offset = "0x91C0BC", VA = "0x91C0BC")]
			[DebuggerHidden]
			public <RespawnRoutine>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002474")]
			[Address(RVA = "0x91C0E8", Offset = "0x91C0E8", VA = "0x91C0E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002475")]
			[Address(RVA = "0x91C0EC", Offset = "0x91C0EC", VA = "0x91C0EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002477")]
			[Address(RVA = "0x91C508", Offset = "0x91C508", VA = "0x91C508", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Health;

		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _startingHealth;

		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585D64", Offset = "0x585D64")]
		public GameObject SpawnOnDeath;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585D9C", Offset = "0x585D9C")]
		public List<GameObject> ActivateGameObjectsOnDeath;

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585DD4", Offset = "0x585DD4")]
		public List<GameObject> DeactivateGameObjectsOnDeath;

		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585E0C", Offset = "0x585E0C")]
		public List<Collider> DeactivateCollidersOnDeath;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585E44", Offset = "0x585E44")]
		public bool DestroyOnDeath;

		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585E7C", Offset = "0x585E7C")]
		public bool DropOnDeath;

		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585EB4", Offset = "0x585EB4")]
		public float DestroyDelay;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585EEC", Offset = "0x585EEC")]
		public bool Respawn;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585F24", Offset = "0x585F24")]
		public float RespawnTime;

		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585F5C", Offset = "0x585F5C")]
		public bool RemoveBulletHolesOnDeath;

		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x585F94", Offset = "0x585F94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585F94", Offset = "0x585F94")]
		public FloatEvent onDamaged;

		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x585FF4", Offset = "0x585FF4")]
		public UnityEvent onDestroyed;

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58602C", Offset = "0x58602C")]
		public UnityEvent onRespawn;

		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool destroyed;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody rigid;

		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool initialWasKinematic;

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xA16AC8", Offset = "0xA16AC8", VA = "0xA16AC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xA16B80", Offset = "0xA16B80", VA = "0xA16B80", Slot = "4")]
		public virtual void DealDamage(float damageAmount)
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xA16C34", Offset = "0xA16C34", VA = "0xA16C34", Slot = "5")]
		public virtual void DealDamage(float damageAmount, [Optional] Vector3? hitPosition, [Optional] Vector3? hitNormal, bool reactToHit = true, [Optional] GameObject sender, [Optional] GameObject receiver)
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xA16CD4", Offset = "0xA16CD4", VA = "0xA16CD4", Slot = "6")]
		public virtual void DestroyThis()
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xA173A0", Offset = "0xA173A0", VA = "0xA173A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x591EF8", Offset = "0x591EF8")]
		private IEnumerator RespawnRoutine(float seconds)
		{
			return null;
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xA1741C", Offset = "0xA1741C", VA = "0xA1741C")]
		public Damageable()
		{
		}
	}
	[Token(Token = "0x200034D")]
	public class DestroyObjectWithDelay : MonoBehaviour
	{
		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float DestroySeconds;

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xA1CF78", Offset = "0xA1CF78", VA = "0xA1CF78")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xA1D000", Offset = "0xA1D000", VA = "0xA1D000")]
		public DestroyObjectWithDelay()
		{
		}
	}
	[Token(Token = "0x200034E")]
	public class FollowRigidbody : MonoBehaviour
	{
		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform FollowTransform;

		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rigid;

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x8B6C2C", Offset = "0x8B6C2C", VA = "0x8B6C2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x8B6C80", Offset = "0x8B6C80", VA = "0x8B6C80")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x8B6CCC", Offset = "0x8B6CCC", VA = "0x8B6CCC")]
		public FollowRigidbody()
		{
		}
	}
	[Token(Token = "0x200034F")]
	public class FollowTransform : MonoBehaviour
	{
		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform FollowTarget;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool MatchRotation;

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x8B6CD4", Offset = "0x8B6CD4", VA = "0x8B6CD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x8B6DC0", Offset = "0x8B6DC0", VA = "0x8B6DC0")]
		public FollowTransform()
		{
		}
	}
	[Token(Token = "0x2000350")]
	public class GrabAction : GrabbableEvents
	{
		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrabberEvent OnGrabEvent;

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Grabbable g;

		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float lastGrabTime;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float minTimeBetweenGrabs;

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xBFB880", Offset = "0xBFB880", VA = "0xBFB880", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xBFB9CC", Offset = "0xBFB9CC", VA = "0xBFB9CC")]
		public GrabAction()
		{
		}
	}
	[Token(Token = "0x2000351")]
	public class GrabPointTrigger : MonoBehaviour
	{
		[Token(Token = "0x20005BE")]
		public enum HandMovement
		{
			[Token(Token = "0x4003053")]
			Instant,
			[Token(Token = "0x4003054")]
			Lerp,
			[Token(Token = "0x4003055")]
			None
		}

		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x586064", Offset = "0x586064")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586064", Offset = "0x586064")]
		public HandMovement MoveInStyle;

		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5860C4", Offset = "0x5860C4")]
		public HandMovement MoveOutStyle;

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5860FC", Offset = "0x5860FC")]
		public float HandSpeed;

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586134", Offset = "0x586134")]
		public bool LiveUpdateNearestGrabPoint;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58616C", Offset = "0x58616C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58616C", Offset = "0x58616C")]
		public Grabbable GrabObject;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5861CC", Offset = "0x5861CC")]
		public Grabbable OtherGrabbableMustBeHeld;

		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586204", Offset = "0x586204")]
		public List<GrabPoint> GrabPoints;

		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Grabber currentGrabber;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Grabbable dummyGrabbable;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabPoint closestPoint;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Grabber grabberInTrigger;

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xBFC3E4", Offset = "0xBFC3E4", VA = "0xBFC3E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xBFC6B8", Offset = "0xBFC6B8", VA = "0xBFC6B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xBFCB74", Offset = "0xBFCB74", VA = "0xBFCB74", Slot = "4")]
		public virtual void UpdateGrabPoint(GrabPoint newPoint)
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xBFCCDC", Offset = "0xBFCCDC", VA = "0xBFCCDC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xBFCF70", Offset = "0xBFCF70", VA = "0xBFCF70")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xBFCB24", Offset = "0xBFCB24", VA = "0xBFCB24")]
		private void setGrabber(Grabber theGrabber)
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xBFD0C8", Offset = "0xBFD0C8", VA = "0xBFD0C8", Slot = "5")]
		public virtual void ReleaseGrabber()
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xBFD190", Offset = "0xBFD190", VA = "0xBFD190")]
		public GrabPointTrigger()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class GrabbableBezierLine : GrabbableEvents
	{
		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool HighlightOnGrabbable;

		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool HighlightOnRemoteGrabbable;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LineRenderer LineToDraw;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int SegmentCount;

		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float LerpAmount;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float HeightAdjustment;

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Grabber lineToGrabber;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Grabber lineRemoteGrabbing;

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xC05D84", Offset = "0xC05D84", VA = "0xC05D84")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xC05EBC", Offset = "0xC05EBC", VA = "0xC05EBC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xC0636C", Offset = "0xC0636C", VA = "0xC0636C", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xC06394", Offset = "0xC06394", VA = "0xC06394", Slot = "8")]
		public override void OnBecomesClosestGrabbable(Grabber touchingGrabber)
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xC06458", Offset = "0xC06458", VA = "0xC06458", Slot = "10")]
		public override void OnNoLongerClosestGrabbable(Grabber touchingGrabber)
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xC0646C", Offset = "0xC0646C", VA = "0xC0646C", Slot = "12")]
		public override void OnBecomesClosestRemoteGrabbable(Grabber touchingGrabber)
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xC06480", Offset = "0xC06480", VA = "0xC06480", Slot = "14")]
		public override void OnNoLongerClosestRemoteGrabbable(Grabber touchingGrabber)
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xC063A4", Offset = "0xC063A4", VA = "0xC063A4")]
		public void HighlightItem(Grabber touchingGrabber)
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xC05E30", Offset = "0xC05E30", VA = "0xC05E30")]
		public void UnhighlightItem()
		{
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xC061F8", Offset = "0xC061F8", VA = "0xC061F8")]
		public void DrawBezierCurve(Vector3 point0, Vector3 point1, Vector3 point2, LineRenderer lineRenderer)
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xC06494", Offset = "0xC06494", VA = "0xC06494")]
		public GrabbableBezierLine()
		{
		}
	}
	[Token(Token = "0x2000353")]
	public class GrabbableHaptics : GrabbableEvents
	{
		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool HapticsOnValidPickup;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool HapticsOnValidRemotePickup;

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool HapticsOnCollision;

		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool HapticsOnGrab;

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float VibrateFrequency;

		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float VibrateAmplitude;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float VibrateDuration;

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Grabber currentGrabber;

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xC065E0", Offset = "0xC065E0", VA = "0xC065E0", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xC066B0", Offset = "0xC066B0", VA = "0xC066B0", Slot = "6")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xC066B8", Offset = "0xC066B8", VA = "0xC066B8", Slot = "7")]
		public override void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xC066C8", Offset = "0xC066C8", VA = "0xC066C8", Slot = "11")]
		public override void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xC06608", Offset = "0xC06608", VA = "0xC06608")]
		private void doHaptics(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xC066D8", Offset = "0xC066D8", VA = "0xC066D8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xC06808", Offset = "0xC06808", VA = "0xC06808")]
		public GrabbableHaptics()
		{
		}
	}
	[Token(Token = "0x2000354")]
	public class GrabbableHighlight : GrabbableEvents
	{
		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool HighlightOnGrabbable;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool HighlightOnRemoteGrabbable;

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xC06830", Offset = "0xC06830", VA = "0xC06830", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xC06838", Offset = "0xC06838", VA = "0xC06838", Slot = "7")]
		public override void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xC06840", Offset = "0xC06840", VA = "0xC06840", Slot = "9")]
		public override void OnNoLongerClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xC06844", Offset = "0xC06844", VA = "0xC06844", Slot = "11")]
		public override void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xC06848", Offset = "0xC06848", VA = "0xC06848", Slot = "13")]
		public override void OnNoLongerClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xC0683C", Offset = "0xC0683C", VA = "0xC0683C")]
		public void HighlightItem()
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xC06834", Offset = "0xC06834", VA = "0xC06834")]
		public void UnhighlightItem()
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xC0684C", Offset = "0xC0684C", VA = "0xC0684C")]
		public GrabbableHighlight()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class GrabbableHighlightMaterial : GrabbableEvents
	{
		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool HighlightOnGrabbable;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool HighlightOnRemoteGrabbable;

		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58623C", Offset = "0x58623C")]
		public List<Material> StandardMaterials;

		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586274", Offset = "0x586274")]
		public List<Material> HighlightMaterials;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Renderer Renderer;

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xC0685C", Offset = "0xC0685C", VA = "0xC0685C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0xC06A10", Offset = "0xC06A10", VA = "0xC06A10", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0xC06AD0", Offset = "0xC06AD0", VA = "0xC06AD0", Slot = "7")]
		public override void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xC06B9C", Offset = "0xC06B9C", VA = "0xC06B9C", Slot = "9")]
		public override void OnNoLongerClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xC06BAC", Offset = "0xC06BAC", VA = "0xC06BAC", Slot = "11")]
		public override void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xC06BBC", Offset = "0xC06BBC", VA = "0xC06BBC", Slot = "13")]
		public override void OnNoLongerClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xC06AE0", Offset = "0xC06AE0", VA = "0xC06AE0")]
		public void HighlightItem()
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xC06A14", Offset = "0xC06A14", VA = "0xC06A14")]
		public void UnhighlightItem()
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xC06BCC", Offset = "0xC06BCC", VA = "0xC06BCC")]
		public GrabbableHighlightMaterial()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public class GrabbableRingHelper : GrabbableEvents
	{
		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool RingOnValidPickup;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool RingOnValidRemotePickup;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float RingHelperScale;

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xC06BDC", Offset = "0xC06BDC", VA = "0xC06BDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xC06EAC", Offset = "0xC06EAC", VA = "0xC06EAC")]
		public GrabbableRingHelper()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class LineToTransform : MonoBehaviour
	{
		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform ConnectTo;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LineRenderer line;

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xA3C0D8", Offset = "0xA3C0D8", VA = "0xA3C0D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xA3C0DC", Offset = "0xA3C0DC", VA = "0xA3C0DC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xA3C0E0", Offset = "0xA3C0E0", VA = "0xA3C0E0")]
		public void UpdateLine()
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xA3C270", Offset = "0xA3C270", VA = "0xA3C270")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xA3C274", Offset = "0xA3C274", VA = "0xA3C274")]
		public LineToTransform()
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class LookAtTransform : MonoBehaviour
	{
		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform LookAt;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool UseLerp;

		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Speed;

		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool UseUpdate;

		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool UseLateUpdate;

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xA3E9F8", Offset = "0xA3E9F8", VA = "0xA3E9F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xA3EC14", Offset = "0xA3EC14", VA = "0xA3EC14")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xA3EA08", Offset = "0xA3EA08", VA = "0xA3EA08")]
		private void lookAt()
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xA3EC24", Offset = "0xA3EC24", VA = "0xA3EC24")]
		public LookAtTransform()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class PlaySoundOnGrab : GrabbableEvents
	{
		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip SoundToPlay;

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xDC9528", Offset = "0xDC9528", VA = "0xDC9528", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xDC95F4", Offset = "0xDC95F4", VA = "0xDC95F4")]
		public PlaySoundOnGrab()
		{
		}
	}
	[Token(Token = "0x200035A")]
	public class PunctureCollider : MonoBehaviour
	{
		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5862AC", Offset = "0x5862AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5862AC", Offset = "0x5862AC")]
		public float FRequiredPenetrationForce;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58630C", Offset = "0x58630C")]
		public float MinPenetration;

		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586344", Offset = "0x586344")]
		public float MaxPenetration;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58637C", Offset = "0x58637C")]
		public float BreakDistance;

		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5863B4", Offset = "0x5863B4")]
		public List<Collider> PunctureColliders;

		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5863EC", Offset = "0x5863EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5863EC", Offset = "0x5863EC")]
		public bool HasPunctured;

		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58644C", Offset = "0x58644C")]
		public GameObject PuncturedObject;

		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586484", Offset = "0x586484")]
		public float PunctureValue;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float previousPunctureValue;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Collider col;

		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Collider hitCollilder;

		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Collider[] ignoreColliders;

		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigid;

		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject jointHelper;

		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody jointHelperRigid;

		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ConfigurableJoint jointHelperJoint;

		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Grabbable thisGrabbable;

		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FixedJoint fj;

		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float yPuncture;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float yPunctureMin;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float yPunctureMax;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float TargetDistance;

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xC6DA20", Offset = "0xC6DA20", VA = "0xC6DA20")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xC6DAD0", Offset = "0xC6DAD0", VA = "0xC6DAD0")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xC6DC00", Offset = "0xC6DC00", VA = "0xC6DC00", Slot = "4")]
		public virtual void UpdatePunctureValue()
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xC6DDC4", Offset = "0xC6DDC4", VA = "0xC6DDC4", Slot = "5")]
		public virtual void MovePunctureUp()
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xC6DE78", Offset = "0xC6DE78", VA = "0xC6DE78", Slot = "6")]
		public virtual void MovePunctureDown()
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xC6DF2C", Offset = "0xC6DF2C", VA = "0xC6DF2C", Slot = "7")]
		public virtual void CheckBreakDistance()
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xC6E20C", Offset = "0xC6E20C", VA = "0xC6E20C", Slot = "8")]
		public virtual void CheckPunctureRelease()
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xC6E2D4", Offset = "0xC6E2D4", VA = "0xC6E2D4", Slot = "9")]
		public virtual void AdjustJointMass()
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xC6E3F8", Offset = "0xC6E3F8", VA = "0xC6E3F8", Slot = "10")]
		public virtual void ApplyResistanceForce()
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xC6E500", Offset = "0xC6E500", VA = "0xC6E500", Slot = "11")]
		public virtual void DoPuncture(Collider colliderHit, Vector3 connectPosition)
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xC6E8A4", Offset = "0xC6E8A4", VA = "0xC6E8A4")]
		public void SetPenetration(float penetrationAmount)
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xC6E010", Offset = "0xC6E010", VA = "0xC6E010")]
		public void ReleasePuncture()
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xC6E9B4", Offset = "0xC6E9B4", VA = "0xC6E9B4", Slot = "12")]
		public virtual bool CanPunctureObject(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xC6EA84", Offset = "0xC6EA84", VA = "0xC6EA84")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xC6EC0C", Offset = "0xC6EC0C", VA = "0xC6EC0C")]
		public PunctureCollider()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class ReturnToSnapZone : MonoBehaviour
	{
		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5864BC", Offset = "0x5864BC")]
		public SnapZone ReturnTo;

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5864F4", Offset = "0x5864F4")]
		public float LerpSpeed;

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58652C", Offset = "0x58652C")]
		public float ReturnDelay;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float currentDelay;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Grabbable grab;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody rigid;

		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool useGravityInitial;

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586564", Offset = "0x586564")]
		public float SnapDistance;

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xAC7044", Offset = "0xAC7044", VA = "0xAC7044")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xAC70D4", Offset = "0xAC70D4", VA = "0xAC70D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xAC7220", Offset = "0xAC7220", VA = "0xAC7220")]
		private void moveToSnapZone()
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xAC73B0", Offset = "0xAC73B0", VA = "0xAC73B0")]
		public ReturnToSnapZone()
		{
		}
	}
	[Token(Token = "0x200035C")]
	public class RotateTowards : MonoBehaviour
	{
		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform TargetTransform;

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x8C1AA4", Offset = "0x8C1AA4", VA = "0x8C1AA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x8C1B90", Offset = "0x8C1B90", VA = "0x8C1B90")]
		public RotateTowards()
		{
		}
	}
	[Token(Token = "0x200035D")]
	public class RotateWithHMD : MonoBehaviour
	{
		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58659C", Offset = "0x58659C")]
		public CharacterController Character;

		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 Offset;

		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float RotateSpeed;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float MovementSmoothing;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 velocity;

		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5865D4", Offset = "0x5865D4")]
		public bool ParentToCharacter;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform originalParent;

		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform followTransform;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform camTransform;

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x8C1B98", Offset = "0x8C1B98", VA = "0x8C1B98")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x8C1D64", Offset = "0x8C1D64", VA = "0x8C1D64")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x8C1D68", Offset = "0x8C1D68", VA = "0x8C1D68")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x8C20B0", Offset = "0x8C20B0", VA = "0x8C20B0")]
		public RotateWithHMD()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class ScaleBetweenPoints : MonoBehaviour
	{
		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Begin;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform End;

		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool DoUpdate;

		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool DoLateUpdate;

		[Token(Token = "0x40022A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool LookAtTarget;

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x8C2D2C", Offset = "0x8C2D2C", VA = "0x8C2D2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x8C2EF4", Offset = "0x8C2EF4", VA = "0x8C2EF4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x8C2D3C", Offset = "0x8C2D3C", VA = "0x8C2D3C")]
		private void doScale()
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x8C2F04", Offset = "0x8C2F04", VA = "0x8C2F04")]
		public ScaleBetweenPoints()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class ScreenFader : MonoBehaviour
	{
		[Token(Token = "0x20005BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573218", Offset = "0x573218")]
		private sealed class <fadeOutWithDelay>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySeconds;

			[Token(Token = "0x4003059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ScreenFader <>4__this;

			[Token(Token = "0x17000412")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600247C")]
				[Address(RVA = "0x871F78", Offset = "0x871F78", VA = "0x871F78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000413")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600247E")]
				[Address(RVA = "0x871FC0", Offset = "0x871FC0", VA = "0x871FC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002479")]
			[Address(RVA = "0x871E94", Offset = "0x871E94", VA = "0x871E94")]
			[DebuggerHidden]
			public <fadeOutWithDelay>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600247A")]
			[Address(RVA = "0x871EC0", Offset = "0x871EC0", VA = "0x871EC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600247B")]
			[Address(RVA = "0x871EC4", Offset = "0x871EC4", VA = "0x871EC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600247D")]
			[Address(RVA = "0x871F80", Offset = "0x871F80", VA = "0x871F80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573228", Offset = "0x573228")]
		private sealed class <doFade>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400305A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400305B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400305C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float alphaFrom;

			[Token(Token = "0x400305D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ScreenFader <>4__this;

			[Token(Token = "0x400305E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float alphaTo;

			[Token(Token = "0x400305F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <alpha>5__2;

			[Token(Token = "0x17000414")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002482")]
				[Address(RVA = "0x871E44", Offset = "0x871E44", VA = "0x871E44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000415")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002484")]
				[Address(RVA = "0x871E8C", Offset = "0x871E8C", VA = "0x871E8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600247F")]
			[Address(RVA = "0x871C70", Offset = "0x871C70", VA = "0x871C70")]
			[DebuggerHidden]
			public <doFade>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002480")]
			[Address(RVA = "0x871C9C", Offset = "0x871C9C", VA = "0x871C9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002481")]
			[Address(RVA = "0x871CA0", Offset = "0x871CA0", VA = "0x871CA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002483")]
			[Address(RVA = "0x871E4C", Offset = "0x871E4C", VA = "0x871E4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40022A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58660C", Offset = "0x58660C")]
		public bool FadeOnSceneLoaded;

		[Token(Token = "0x40022A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586644", Offset = "0x586644")]
		public Color FadeColor;

		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58667C", Offset = "0x58667C")]
		public float FadeInSpeed;

		[Token(Token = "0x40022A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FadeOutSpeed;

		[Token(Token = "0x40022A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5866B4", Offset = "0x5866B4")]
		public float SceneFadeInDelay;

		[Token(Token = "0x40022A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject fadeObject;

		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RectTransform fadeObjectRect;

		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Canvas fadeCanvas;

		[Token(Token = "0x40022AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CanvasGroup canvasGroup;

		[Token(Token = "0x40022AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Image fadeImage;

		[Token(Token = "0x40022AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IEnumerator fadeRoutine;

		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string faderName;

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x8C6A08", Offset = "0x8C6A08", VA = "0x8C6A08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x8C6A14", Offset = "0x8C6A14", VA = "0x8C6A14", Slot = "4")]
		protected virtual void initialize()
		{
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x8C6DB8", Offset = "0x8C6DB8", VA = "0x8C6DB8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x8C6E74", Offset = "0x8C6E74", VA = "0x8C6E74")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x8C6F30", Offset = "0x8C6F30", VA = "0x8C6F30")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x8C6FE4", Offset = "0x8C6FE4", VA = "0x8C6FE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x591F58", Offset = "0x591F58")]
		private IEnumerator fadeOutWithDelay(float delaySeconds)
		{
			return null;
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x8C7060", Offset = "0x8C7060", VA = "0x8C7060", Slot = "5")]
		public virtual void DoFadeIn()
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x8C71A8", Offset = "0x8C71A8", VA = "0x8C71A8", Slot = "6")]
		public virtual void DoFadeOut()
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x8C7208", Offset = "0x8C7208", VA = "0x8C7208", Slot = "7")]
		public virtual void SetFadeLevel(float fadeLevel)
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x8C7124", Offset = "0x8C7124", VA = "0x8C7124")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x591FB8", Offset = "0x591FB8")]
		private IEnumerator doFade(float alphaFrom, float alphaTo)
		{
			return null;
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x8C72DC", Offset = "0x8C72DC", VA = "0x8C72DC", Slot = "8")]
		protected virtual void updateImageAlpha(float alphaValue)
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x8C7408", Offset = "0x8C7408", VA = "0x8C7408")]
		public ScreenFader()
		{
		}
	}
	[Token(Token = "0x2000360")]
	public class SnapZoneRingHelper : MonoBehaviour
	{
		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SnapZone Snap;

		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color RestingColor;

		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color ValidSnapColor;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float RestingScale;

		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float ValidSnapScale;

		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CanvasScaler ringCanvas;

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Text ringText;

		[Token(Token = "0x40022B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabbablesInTrigger nearbyGrabbables;

		[Token(Token = "0x40022B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool validSnap;

		[Token(Token = "0x40022B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float ScaleSpeed;

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x8D0634", Offset = "0x8D0634", VA = "0x8D0634")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x8D06DC", Offset = "0x8D06DC", VA = "0x8D06DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x8D07A4", Offset = "0x8D07A4", VA = "0x8D07A4")]
		private bool checkIsValidSnap()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x8D08A0", Offset = "0x8D08A0", VA = "0x8D08A0")]
		public SnapZoneRingHelper()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class Tooltip : MonoBehaviour
	{
		[Token(Token = "0x40022B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 TipOffset;

		[Token(Token = "0x40022B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool UseWorldYAxis;

		[Token(Token = "0x40022BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MaxViewDistance;

		[Token(Token = "0x40022BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform childTransform;

		[Token(Token = "0x40022BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform DrawLineTo;

		[Token(Token = "0x40022BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LineToTransform lineTo;

		[Token(Token = "0x40022BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lookAt;

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xA25CF4", Offset = "0xA25CF4", VA = "0xA25CF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xA25E08", Offset = "0xA25E08", VA = "0xA25E08")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xA26110", Offset = "0xA26110", VA = "0xA26110")]
		public Tooltip()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class VelocityTracker : MonoBehaviour
	{
		[Token(Token = "0x20005C1")]
		public enum VelocityTrackingType
		{
			[Token(Token = "0x4003061")]
			Device,
			[Token(Token = "0x4003062")]
			PerFrame
		}

		[Token(Token = "0x40022BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5866EC", Offset = "0x5866EC")]
		public VelocityTrackingType trackingType;

		[Token(Token = "0x40022C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586724", Offset = "0x586724")]
		public ControllerHand controllerHand;

		[Token(Token = "0x40022C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58675C", Offset = "0x58675C")]
		public float AverageVelocityCount;

		[Token(Token = "0x40022C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 _velocity;

		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _angularVelocity;

		[Token(Token = "0x40022C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 _lastPosition;

		[Token(Token = "0x40022C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion _lastRotation;

		[Token(Token = "0x40022C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Vector3> previousVelocities;

		[Token(Token = "0x40022C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Vector3> previousAngularVelocities;

		[Token(Token = "0x40022C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float angle;

		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 axis;

		[Token(Token = "0x40022CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject playSpace;

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x93B630", Offset = "0x93B630", VA = "0x93B630")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x93B684", Offset = "0x93B684", VA = "0x93B684")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x93B6F0", Offset = "0x93B6F0", VA = "0x93B6F0", Slot = "4")]
		public virtual void UpdateVelocities()
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x93B724", Offset = "0x93B724", VA = "0x93B724", Slot = "5")]
		public virtual void UpdateVelocity()
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x93B834", Offset = "0x93B834", VA = "0x93B834", Slot = "6")]
		public virtual void UpdateAngularVelocity()
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x93B9CC", Offset = "0x93B9CC", VA = "0x93B9CC", Slot = "7")]
		public virtual Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x93BB30", Offset = "0x93BB30", VA = "0x93BB30", Slot = "8")]
		public virtual Vector3 GetAveragedVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x93BB40", Offset = "0x93BB40", VA = "0x93BB40", Slot = "9")]
		public virtual Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x93BB4C", Offset = "0x93BB4C", VA = "0x93BB4C", Slot = "10")]
		public virtual Vector3 GetAveragedAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x93BB5C", Offset = "0x93BB5C", VA = "0x93BB5C", Slot = "11")]
		public virtual Vector3 GetAveragedVector(List<Vector3> vectors)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x93BC60", Offset = "0x93BC60", VA = "0x93BC60")]
		public VelocityTracker()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public enum LocomotionType
	{
		[Token(Token = "0x40022CC")]
		Teleport,
		[Token(Token = "0x40022CD")]
		SmoothLocomotion,
		[Token(Token = "0x40022CE")]
		None
	}
	[Token(Token = "0x2000364")]
	public class BNGPlayerController : MonoBehaviour
	{
		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x586794", Offset = "0x586794")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586794", Offset = "0x586794")]
		public bool MoveCharacterWithCamera;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5867F4", Offset = "0x5867F4")]
		public bool RotateCharacterWithCamera;

		[Token(Token = "0x40022D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58682C", Offset = "0x58682C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58682C", Offset = "0x58682C")]
		public Transform TrackingSpace;

		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58688C", Offset = "0x58688C")]
		public Transform CameraRig;

		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5868C4", Offset = "0x5868C4")]
		public Transform CenterEyeAnchor;

		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5868FC", Offset = "0x5868FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5868FC", Offset = "0x5868FC")]
		public LayerMask GroundedLayers;

		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58695C", Offset = "0x58695C")]
		public float DistanceFromGround;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x586994", Offset = "0x586994")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586994", Offset = "0x586994")]
		public float MinimumCapsuleHeight;

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5869F4", Offset = "0x5869F4")]
		public float MaximumCapsuleHeight;

		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public float LastTeleportTime;

		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x586A3C", Offset = "0x586A3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586A3C", Offset = "0x586A3C")]
		public float CharacterControllerYOffset;

		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float CameraHeight;

		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x586AAC", Offset = "0x586AAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586AAC", Offset = "0x586AAC")]
		public bool ElevateCameraIfNoHMDPresent;

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586B0C", Offset = "0x586B0C")]
		public float ElevateCameraHeight;

		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586B44", Offset = "0x586B44")]
		public float MinElevation;

		[Token(Token = "0x40022DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float MaxElevation;

		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		public float LastPlayerMoveTime;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CharacterController characterController;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PlayerClimbing playerClimbing;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public RaycastHit groundHit;

		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform mainCamera;

		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 _initialPosition;

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x885EF8", Offset = "0x885EF8", VA = "0x885EF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x886034", Offset = "0x886034", VA = "0x886034")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x886198", Offset = "0x886198", VA = "0x886198")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x8861CC", Offset = "0x8861CC", VA = "0x8861CC", Slot = "4")]
		public virtual void CheckPlayerElevationRespawn()
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x886324", Offset = "0x886324", VA = "0x886324", Slot = "5")]
		public virtual void UpdateDistanceFromGround()
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x8866A0", Offset = "0x8866A0", VA = "0x8866A0", Slot = "6")]
		public virtual void RotateTrackingSpaceToCamera()
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x8867C0", Offset = "0x8867C0", VA = "0x8867C0", Slot = "7")]
		public virtual void UpdateCameraRigPosition()
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x886990", Offset = "0x886990", VA = "0x886990", Slot = "8")]
		public virtual void UpdateCharacterHeight()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x886B54", Offset = "0x886B54", VA = "0x886B54", Slot = "9")]
		public virtual void UpdateCameraHeight()
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x886BDC", Offset = "0x886BDC", VA = "0x886BDC", Slot = "10")]
		public virtual void CheckCharacterCollisionMove()
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x886DC8", Offset = "0x886DC8", VA = "0x886DC8")]
		public bool IsGrounded()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x886E70", Offset = "0x886E70", VA = "0x886E70")]
		public BNGPlayerController()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class Button : MonoBehaviour
	{
		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586B8C", Offset = "0x586B8C")]
		public float MinLocalY;

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586BC4", Offset = "0x586BC4")]
		public float MaxLocalY;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586BFC", Offset = "0x586BFC")]
		public float ClickTolerance;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586C34", Offset = "0x586C34")]
		public bool AllowPhysicsForces;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Grabber> grabbers;

		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<UITrigger> uiTriggers;

		[Token(Token = "0x40022EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SpringJoint joint;

		[Token(Token = "0x40022ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool clickingDown;

		[Token(Token = "0x40022EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip ButtonClick;

		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip ButtonClickUp;

		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onButtonDown;

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent onButtonUp;

		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioSource audioSource;

		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody rigid;

		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float ButtonSpeed;

		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float SpringForce;

		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 buttonDownPosition;

		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 buttonUpPosition;

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x92B57C", Offset = "0x92B57C", VA = "0x92B57C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x92B69C", Offset = "0x92B69C", VA = "0x92B69C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x92BA5C", Offset = "0x92BA5C", VA = "0x92BA5C", Slot = "4")]
		public virtual Vector3 GetButtonUpPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x92BAC0", Offset = "0x92BAC0", VA = "0x92BAC0", Slot = "5")]
		public virtual Vector3 GetButtonDownPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x92BB24", Offset = "0x92BB24", VA = "0x92BB24", Slot = "6")]
		public virtual void OnButtonDown()
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x92BC0C", Offset = "0x92BC0C", VA = "0x92BC0C", Slot = "7")]
		public virtual void OnButtonUp()
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x92BCF4", Offset = "0x92BCF4", VA = "0x92BCF4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x92BF44", Offset = "0x92BF44", VA = "0x92BF44")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x92C0F8", Offset = "0x92C0F8", VA = "0x92C0F8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x92C2A4", Offset = "0x92C2A4", VA = "0x92C2A4")]
		public Button()
		{
		}
	}
	[Token(Token = "0x2000366")]
	public class ControllerModelSelector : MonoBehaviour
	{
		[Token(Token = "0x40022F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int disableIndex;

		[Token(Token = "0x40022F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool isQuitting;

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xA11E1C", Offset = "0xA11E1C", VA = "0xA11E1C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xA11EC4", Offset = "0xA11EC4", VA = "0xA11EC4")]
		public void UpdateControllerModel()
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xA11FF0", Offset = "0xA11FF0", VA = "0xA11FF0")]
		public void EnableChildController(int childIndex)
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xA12084", Offset = "0xA12084", VA = "0xA12084")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xA12140", Offset = "0xA12140", VA = "0xA12140")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xA1214C", Offset = "0xA1214C", VA = "0xA1214C")]
		public ControllerModelSelector()
		{
		}
	}
	[Token(Token = "0x2000367")]
	public class GrabPoint : MonoBehaviour
	{
		[Token(Token = "0x40022FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x586C6C", Offset = "0x586C6C")]
		public HandPoseType handPoseType;

		[Token(Token = "0x40022FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586CA4", Offset = "0x586CA4")]
		public HandPose SelectedHandPose;

		[Token(Token = "0x40022FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586CDC", Offset = "0x586CDC")]
		public HandPoseId HandPose;

		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x586D14", Offset = "0x586D14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586D14", Offset = "0x586D14")]
		public bool LeftHandIsValid;

		[Token(Token = "0x40022FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586D74", Offset = "0x586D74")]
		public bool RightHandIsValid;

		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x586DAC", Offset = "0x586DAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586DAC", Offset = "0x586DAC")]
		public Transform HandPosition;

		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x586E0C", Offset = "0x586E0C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586E0C", Offset = "0x586E0C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x586E0C", Offset = "0x586E0C")]
		public float MaxDegreeDifferenceAllowed;

		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x586E88", Offset = "0x586E88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586E88", Offset = "0x586E88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x586E88", Offset = "0x586E88")]
		public float IndexBlendMin;

		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586F00", Offset = "0x586F00")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x586F00", Offset = "0x586F00")]
		public float IndexBlendMax;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586F54", Offset = "0x586F54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x586F54", Offset = "0x586F54")]
		public float ThumbBlendMin;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586FA8", Offset = "0x586FA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x586FA8", Offset = "0x586FA8")]
		public float ThumbBlendMax;

		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 previewModelOffsetLeft;

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 previewModelOffsetRight;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x586FFC", Offset = "0x586FFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x586FFC", Offset = "0x586FFC")]
		public bool ShowAngleGizmo;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool offsetFound;

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xBFB9E8", Offset = "0xBFB9E8", VA = "0xBFB9E8")]
		public void UpdatePreviewTransforms()
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xBFBD0C", Offset = "0xBFBD0C", VA = "0xBFBD0C")]
		public void UpdateHandPosePreview()
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xBFBEE0", Offset = "0xBFBEE0", VA = "0xBFBEE0")]
		public void UpdateAutoPoserPreview()
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0xBFC204", Offset = "0xBFC204", VA = "0xBFC204")]
		public void UpdateChildAnimators()
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xBFC3A0", Offset = "0xBFC3A0", VA = "0xBFC3A0")]
		public GrabPoint()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public class Grabbable : MonoBehaviour
	{
		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool BeingHeld;

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Grabber> validGrabbers;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected List<Grabber> heldByGrabbers;

		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool wasKinematic;

		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		protected bool usedGravity;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected CollisionDetectionMode initialCollisionMode;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected RigidbodyInterpolation initialInterpolationMode;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected bool remoteGrabbing;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58705C", Offset = "0x58705C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58705C", Offset = "0x58705C")]
		public GrabButton GrabButton;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5870BC", Offset = "0x5870BC")]
		public HoldType Grabtype;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5870F4", Offset = "0x5870F4")]
		public GrabPhysics GrabPhysics;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58712C", Offset = "0x58712C")]
		public GrabType GrabMechanic;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587164", Offset = "0x587164")]
		public float GrabSpeed;

		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58719C", Offset = "0x58719C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58719C", Offset = "0x58719C")]
		public bool RemoteGrabbable;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public RemoteGrabMovement RemoteGrabMechanic;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5871FC", Offset = "0x5871FC")]
		public float RemoteGrabDistance;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x587234", Offset = "0x587234")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587234", Offset = "0x587234")]
		public float ThrowForceMultiplier;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587294", Offset = "0x587294")]
		public float ThrowForceMultiplierAngular;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5872CC", Offset = "0x5872CC")]
		public float BreakDistance;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x587304", Offset = "0x587304")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587304", Offset = "0x587304")]
		public bool HideHandGraphics;

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587364", Offset = "0x587364")]
		public bool ParentToHands;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58739C", Offset = "0x58739C")]
		public bool ParentHandModel;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5873D4", Offset = "0x5873D4")]
		public bool SnapHandModel;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58740C", Offset = "0x58740C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58740C", Offset = "0x58740C")]
		public bool CanBeDropped;

		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58746C", Offset = "0x58746C")]
		public bool CanBeSnappedToSnapZone;

		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5874A4", Offset = "0x5874A4")]
		public bool ForceDisableKinematicOnDrop;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5874DC", Offset = "0x5874DC")]
		public bool InstantMovement;

		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587514", Offset = "0x587514")]
		public bool MakeChildCollidersGrabbable;

		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58754C", Offset = "0x58754C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58754C", Offset = "0x58754C")]
		public HandPoseType handPoseType;

		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected HandPoseType initialHandPoseType;

		[Token(Token = "0x4002327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5875AC", Offset = "0x5875AC")]
		public HandPose SelectedHandPose;

		[Token(Token = "0x4002328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected HandPose initialHandPose;

		[Token(Token = "0x4002329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5875E4", Offset = "0x5875E4")]
		public HandPoseId CustomHandPose;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected HandPoseId initialHandPoseId;

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58761C", Offset = "0x58761C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58761C", Offset = "0x58761C")]
		public OtherGrabBehavior SecondaryGrabBehavior;

		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58767C", Offset = "0x58767C")]
		public TwoHandedPositionType TwoHandedPosition;

		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5876B4", Offset = "0x5876B4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5876B4", Offset = "0x5876B4")]
		public float TwoHandedPostionLerpAmount;

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587708", Offset = "0x587708")]
		public TwoHandedRotationType TwoHandedRotation;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587740", Offset = "0x587740")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x587740", Offset = "0x587740")]
		public float TwoHandedRotationLerpAmount;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587794", Offset = "0x587794")]
		public TwoHandedDropMechanic TwoHandedDropBehavior;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5877CC", Offset = "0x5877CC")]
		public TwoHandedLookDirection TwoHandedLookVector;

		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587804", Offset = "0x587804")]
		public float SecondHandLookSpeed;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58783C", Offset = "0x58783C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58783C", Offset = "0x58783C")]
		public Grabbable SecondaryGrabbable;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58789C", Offset = "0x58789C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58789C", Offset = "0x58789C")]
		public Grabbable OtherGrabbableMustBeGrabbed;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5878FC", Offset = "0x5878FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5878FC", Offset = "0x5878FC")]
		public float CollisionSpring;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58795C", Offset = "0x58795C")]
		public float CollisionSlerp;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587994", Offset = "0x587994")]
		public ConfigurableJointMotion CollisionLinearMotionX;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5879CC", Offset = "0x5879CC")]
		public ConfigurableJointMotion CollisionLinearMotionY;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587A04", Offset = "0x587A04")]
		public ConfigurableJointMotion CollisionLinearMotionZ;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587A3C", Offset = "0x587A3C")]
		public ConfigurableJointMotion CollisionAngularMotionX;

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587A74", Offset = "0x587A74")]
		public ConfigurableJointMotion CollisionAngularMotionY;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587AAC", Offset = "0x587AAC")]
		public ConfigurableJointMotion CollisionAngularMotionZ;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587AE4", Offset = "0x587AE4")]
		public bool ApplyCorrectiveForce;

		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x587B1C", Offset = "0x587B1C")]
		public float MoveVelocityForce;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float MoveAngularVelocityForce;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[HideInInspector]
		public float LastGrabTime;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public float LastDropTime;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[HideInInspector]
		public bool AddControllerVelocityOnDrop;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float journeyLength;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587B84", Offset = "0x587B84")]
		private float <OriginalScale>k__BackingField;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x587B94", Offset = "0x587B94")]
		[SerializeField]
		public List<Collider> collisions;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587BE0", Offset = "0x587BE0")]
		private float <lastCollisionSeconds>k__BackingField;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587BF0", Offset = "0x587BF0")]
		private float <lastNoCollisionSeconds>k__BackingField;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x587C00", Offset = "0x587C00")]
		private float <requestSpringTime>k__BackingField;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected Transform primaryGrabOffset;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected Transform secondaryGrabOffset;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		public GrabPoint ActiveGrabPoint;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[HideInInspector]
		public Vector3 SecondaryLookOffset;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[HideInInspector]
		public Transform SecondaryLookAtTransform;

		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[HideInInspector]
		public Transform LocalOffsetTransform;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Transform _grabTransform;

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Transform _grabTransformSecondary;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x587C50", Offset = "0x587C50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587C50", Offset = "0x587C50")]
		public List<Transform> GrabPoints;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool _canBeMoved;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		protected Transform originalParent;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		protected InputBridge input;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		protected ConfigurableJoint connectedJoint;

		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		protected Vector3 previousPosition;

		[Token(Token = "0x4002357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		protected float lastItemTeleportTime;

		[Token(Token = "0x4002358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		protected bool recentlyTeleported;

		[Token(Token = "0x4002359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
		[HideInInspector]
		public bool UseCustomInspector;

		[Token(Token = "0x400235A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private BNGPlayerController _player;

		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		protected Collider col;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		protected Rigidbody rigid;

		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		protected Grabber flyingTo;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		protected List<GrabbableEvents> events;

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		protected bool didParentHands;

		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
		private bool initiatedFlick;

		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private float flickStartVelocity;

		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private float FlickSpeed;

		[Token(Token = "0x4002363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public float lastFlickTime;

		[Token(Token = "0x4002364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public float FlickForce;

		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private float angle;

		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Vector3 axis;

		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private Vector3 angularTarget;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private Vector3 angularMovement;

		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private bool subscribedToEvents;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20D")]
		private bool grabbableIsLocked;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Transform _priorParent;

		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Vector3 _priorLocalOffsetPosition;

		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private Quaternion _priorLocalOffsetRotation;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private Grabber _priorPrimaryGrabber;

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private bool lockPos;

		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x241")]
		private bool lockRot;

		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private int lockRequests;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private bool quitting;

		[Token(Token = "0x170002C8")]
		public bool BeingHeldWithTwoHands
		{
			[Token(Token = "0x6001B57")]
			[Address(RVA = "0xBFD1A8", Offset = "0xBFD1A8", VA = "0xBFD1A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C9")]
		public List<Grabber> HeldByGrabbers
		{
			[Token(Token = "0x6001B58")]
			[Address(RVA = "0xBFD270", Offset = "0xBFD270", VA = "0xBFD270")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CA")]
		public bool RemoteGrabbing
		{
			[Token(Token = "0x6001B59")]
			[Address(RVA = "0xBFD278", Offset = "0xBFD278", VA = "0xBFD278")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CB")]
		public float OriginalScale
		{
			[Token(Token = "0x6001B5A")]
			[Address(RVA = "0xBFD280", Offset = "0xBFD280", VA = "0xBFD280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592018", Offset = "0x592018")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B5B")]
			[Address(RVA = "0xBFD288", Offset = "0xBFD288", VA = "0xBFD288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592028", Offset = "0x592028")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		public float lastCollisionSeconds
		{
			[Token(Token = "0x6001B5C")]
			[Address(RVA = "0xBFD290", Offset = "0xBFD290", VA = "0xBFD290")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592038", Offset = "0x592038")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B5D")]
			[Address(RVA = "0xBFD298", Offset = "0xBFD298", VA = "0xBFD298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592048", Offset = "0x592048")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		public float lastNoCollisionSeconds
		{
			[Token(Token = "0x6001B5E")]
			[Address(RVA = "0xBFD2A0", Offset = "0xBFD2A0", VA = "0xBFD2A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592058", Offset = "0x592058")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B5F")]
			[Address(RVA = "0xBFD2A8", Offset = "0xBFD2A8", VA = "0xBFD2A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592068", Offset = "0x592068")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002CE")]
		public bool RecentlyCollided
		{
			[Token(Token = "0x6001B60")]
			[Address(RVA = "0xBFD2B0", Offset = "0xBFD2B0", VA = "0xBFD2B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CF")]
		public float requestSpringTime
		{
			[Token(Token = "0x6001B61")]
			[Address(RVA = "0xBFD32C", Offset = "0xBFD32C", VA = "0xBFD32C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592078", Offset = "0x592078")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B62")]
			[Address(RVA = "0xBFD334", Offset = "0xBFD334", VA = "0xBFD334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592088", Offset = "0x592088")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002D0")]
		private Vector3 grabPosition
		{
			[Token(Token = "0x6001B63")]
			[Address(RVA = "0xBFD33C", Offset = "0xBFD33C", VA = "0xBFD33C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002D1")]
		[HideInInspector]
		public Vector3 GrabPositionOffset
		{
			[Token(Token = "0x6001B64")]
			[Address(RVA = "0xBFD3D0", Offset = "0xBFD3D0", VA = "0xBFD3D0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002D2")]
		[HideInInspector]
		public Vector3 GrabRotationOffset
		{
			[Token(Token = "0x6001B65")]
			[Address(RVA = "0xBFD46C", Offset = "0xBFD46C", VA = "0xBFD46C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002D3")]
		public Transform grabTransform
		{
			[Token(Token = "0x6001B66")]
			[Address(RVA = "0xBFD508", Offset = "0xBFD508", VA = "0xBFD508")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D4")]
		public Transform grabTransformSecondary
		{
			[Token(Token = "0x6001B67")]
			[Address(RVA = "0xBFD628", Offset = "0xBFD628", VA = "0xBFD628")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D5")]
		public bool CanBeMoved
		{
			[Token(Token = "0x6001B68")]
			[Address(RVA = "0xBFD75C", Offset = "0xBFD75C", VA = "0xBFD75C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D6")]
		protected BNGPlayerController player
		{
			[Token(Token = "0x6001B69")]
			[Address(RVA = "0xBFD764", Offset = "0xBFD764", VA = "0xBFD764")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D7")]
		public Grabber FlyingToGrabber
		{
			[Token(Token = "0x6001B6A")]
			[Address(RVA = "0xBFD774", Offset = "0xBFD774", VA = "0xBFD774")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D8")]
		public bool DidParentHands
		{
			[Token(Token = "0x6001B6B")]
			[Address(RVA = "0xBFD77C", Offset = "0xBFD77C", VA = "0xBFD77C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xBFD784", Offset = "0xBFD784", VA = "0xBFD784")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xBFDDC4", Offset = "0xBFDDC4", VA = "0xBFDDC4", Slot = "4")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xBFF0E0", Offset = "0xBFF0E0", VA = "0xBFF0E0", Slot = "5")]
		public virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xBFF1FC", Offset = "0xBFF1FC", VA = "0xBFF1FC", Slot = "6")]
		public virtual Vector3 GetGrabberWithGrabPointOffset(Grabber grabber, Transform grabPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xBFF35C", Offset = "0xBFF35C", VA = "0xBFF35C", Slot = "7")]
		public virtual Quaternion GetGrabberWithOffsetWorldRotation(Grabber grabber)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xBFEA94", Offset = "0xBFEA94", VA = "0xBFEA94")]
		protected void positionHandGraphics(Grabber g)
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xBFF3F8", Offset = "0xBFF3F8", VA = "0xBFF3F8", Slot = "8")]
		public virtual bool IsGrabbable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xBFF4EC", Offset = "0xBFF4EC", VA = "0xBFF4EC", Slot = "9")]
		public virtual void UpdateRemoteGrab()
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xBFF530", Offset = "0xBFF530", VA = "0xBFF530", Slot = "10")]
		public virtual void CheckRemoteGrabLinear()
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xBFFCCC", Offset = "0xBFFCCC", VA = "0xBFFCCC", Slot = "11")]
		public virtual void CheckRemoteGrabVelocity()
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xC005B0", Offset = "0xC005B0", VA = "0xC005B0", Slot = "12")]
		public virtual void InitiateFlick()
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xC00714", Offset = "0xC00714", VA = "0xC00714")]
		public Vector3 GetVelocityToHitTargetByTime(Vector3 startPosition, Vector3 targetPosition, Vector3 gravityBase, float timeToTarget)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xC008A8", Offset = "0xC008A8", VA = "0xC008A8", Slot = "13")]
		public virtual void CheckRemoteGrabFlick()
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xC009A0", Offset = "0xC009A0", VA = "0xC009A0", Slot = "14")]
		public virtual void UpdateFixedJoints()
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xC00C1C", Offset = "0xC00C1C", VA = "0xC00C1C", Slot = "15")]
		public virtual void UpdatePhysicsJoints()
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xC01060", Offset = "0xC01060", VA = "0xC01060")]
		private void setPositionSpring(float spring, float damper)
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xC011F8", Offset = "0xC011F8", VA = "0xC011F8")]
		private void setSlerpDrive(float slerp, float damper)
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xC012DC", Offset = "0xC012DC", VA = "0xC012DC", Slot = "16")]
		public virtual Vector3 GetGrabberVector3(Grabber grabber, bool isSecondary)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xC01334", Offset = "0xC01334", VA = "0xC01334", Slot = "17")]
		public virtual Quaternion GetGrabberQuaternion(Grabber grabber, bool isSecondary)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xC00A68", Offset = "0xC00A68", VA = "0xC00A68")]
		private void moveWithVelocity()
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xC01530", Offset = "0xC01530", VA = "0xC01530")]
		private void rotateWithVelocity()
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xC01378", Offset = "0xC01378", VA = "0xC01378")]
		public Vector3 GetGrabbersAveragedPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xC00038", Offset = "0xC00038", VA = "0xC00038")]
		public Quaternion GetGrabbersAveragedRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xC01898", Offset = "0xC01898", VA = "0xC01898", Slot = "18")]
		public virtual void UpdateKinematicPhysics()
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xC01EEC", Offset = "0xC01EEC", VA = "0xC01EEC", Slot = "19")]
		public virtual void UpdateVelocityPhysics()
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xBFE850", Offset = "0xBFE850", VA = "0xBFE850")]
		private void checkParentHands(Grabber g)
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xBFDCC4", Offset = "0xBFDCC4", VA = "0xBFDCC4")]
		private bool canBeMoved()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xBFEB70", Offset = "0xBFEB70", VA = "0xBFEB70")]
		private void checkSecondaryLook()
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xC01D40", Offset = "0xC01D40", VA = "0xC01D40")]
		private void rotateGrabber(bool lerp = false)
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xC0225C", Offset = "0xC0225C", VA = "0xC0225C")]
		public Transform GetGrabPoint()
		{
			return null;
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xC02264", Offset = "0xC02264", VA = "0xC02264", Slot = "20")]
		public virtual void GrabItem(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xC02C14", Offset = "0xC02C14", VA = "0xC02C14", Slot = "21")]
		protected virtual void setupConfigJointGrab(Grabber grabbedBy, GrabType grabType)
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xC02DF0", Offset = "0xC02DF0", VA = "0xC02DF0", Slot = "22")]
		protected virtual void setupFixedJointGrab(Grabber grabbedBy, GrabType grabType)
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xC02EE4", Offset = "0xC02EE4", VA = "0xC02EE4", Slot = "23")]
		protected virtual void setupKinematicGrab(Grabber grabbedBy, GrabType grabType)
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xC03008", Offset = "0xC03008", VA = "0xC03008", Slot = "24")]
		protected virtual void setupVelocityGrab(Grabber grabbedBy, GrabType grabType)
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xC03058", Offset = "0xC03058", VA = "0xC03058", Slot = "25")]
		public virtual void GrabRemoteItem(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xC03134", Offset = "0xC03134", VA = "0xC03134", Slot = "26")]
		public virtual void ResetGrabbing()
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xC03204", Offset = "0xC03204", VA = "0xC03204", Slot = "27")]
		public virtual void DropItem(Grabber droppedBy, bool resetVelocity, bool resetParent)
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xC0215C", Offset = "0xC0215C", VA = "0xC0215C")]
		private void clearLookAtTransform()
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xBFE35C", Offset = "0xBFE35C", VA = "0xBFE35C")]
		private void callEvents(Grabber g)
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xC03D1C", Offset = "0xC03D1C", VA = "0xC03D1C", Slot = "28")]
		public virtual void DropItem(Grabber droppedBy)
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xC03D34", Offset = "0xC03D34", VA = "0xC03D34", Slot = "29")]
		public virtual void DropItem(bool resetVelocity, bool resetParent)
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xC03D90", Offset = "0xC03D90", VA = "0xC03D90")]
		public void ResetScale()
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xC03A24", Offset = "0xC03A24", VA = "0xC03A24")]
		public void ResetParent()
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xC03DCC", Offset = "0xC03DCC", VA = "0xC03DCC")]
		public void UpdateOriginalParent(Transform newOriginalParent)
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xC03DD4", Offset = "0xC03DD4", VA = "0xC03DD4")]
		public void UpdateOriginalParent()
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xC03E0C", Offset = "0xC03E0C", VA = "0xC03E0C")]
		public ControllerHand GetControllerHand(Grabber g)
		{
			return default(ControllerHand);
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xC03E90", Offset = "0xC03E90", VA = "0xC03E90", Slot = "30")]
		public virtual Grabber GetPrimaryGrabber()
		{
			return null;
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xC03FFC", Offset = "0xC03FFC", VA = "0xC03FFC", Slot = "31")]
		public virtual Grabber GetClosestGrabber()
		{
			return null;
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xC0415C", Offset = "0xC0415C", VA = "0xC0415C", Slot = "32")]
		public virtual Transform GetClosestGrabPoint(Grabber grabber)
		{
			return null;
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xC04460", Offset = "0xC04460", VA = "0xC04460", Slot = "33")]
		public virtual void Release(Vector3 velocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xC0452C", Offset = "0xC0452C", VA = "0xC0452C", Slot = "34")]
		public virtual bool IsValidCollision(Collision collision)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xC04570", Offset = "0xC04570", VA = "0xC04570", Slot = "35")]
		public virtual bool IsValidCollision(Collider col)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xC04724", Offset = "0xC04724", VA = "0xC04724", Slot = "36")]
		public virtual void parentHandGraphics(Grabber g)
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xC02D30", Offset = "0xC02D30", VA = "0xC02D30")]
		private void setupConfigJoint(Grabber g)
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xC03A58", Offset = "0xC03A58", VA = "0xC03A58")]
		private void removeConfigJoint()
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xC02B2C", Offset = "0xC02B2C", VA = "0xC02B2C")]
		private void addGrabber(Grabber g)
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xC03B08", Offset = "0xC03B08", VA = "0xC03B08")]
		private void removeGrabber(Grabber g)
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xBFFB08", Offset = "0xBFFB08", VA = "0xBFFB08")]
		private void movePosition(Vector3 worldPosition)
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xBFFBE4", Offset = "0xBFFBE4", VA = "0xBFFBE4")]
		private void moveRotation(Quaternion worldRotation)
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xC01CFC", Offset = "0xC01CFC", VA = "0xC01CFC")]
		protected Vector3 getRemotePosition(Grabber toGrabber)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xBFF908", Offset = "0xBFF908", VA = "0xBFF908")]
		protected Quaternion getRemoteRotation(Grabber grabber)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xBFE1B4", Offset = "0xBFE1B4", VA = "0xBFE1B4")]
		private void filterCollisions()
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xC0482C", Offset = "0xC0482C", VA = "0xC0482C", Slot = "37")]
		public virtual BNGPlayerController GetBNGPlayerController()
		{
			return null;
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xC0496C", Offset = "0xC0496C", VA = "0xC0496C", Slot = "38")]
		public virtual void RequestSpringTime(float seconds)
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xC049B0", Offset = "0xC049B0", VA = "0xC049B0", Slot = "39")]
		public virtual void AddValidGrabber(Grabber grabber)
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xC04A98", Offset = "0xC04A98", VA = "0xC04A98", Slot = "40")]
		public virtual void RemoveValidGrabber(Grabber grabber)
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xC04B38", Offset = "0xC04B38", VA = "0xC04B38", Slot = "41")]
		public virtual void SubscribeToMoveEvents()
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xC04DAC", Offset = "0xC04DAC", VA = "0xC04DAC", Slot = "42")]
		public virtual void UnsubscribeFromMoveEvents()
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xC0500C", Offset = "0xC0500C", VA = "0xC0500C", Slot = "43")]
		public virtual void LockGrabbable()
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xC05028", Offset = "0xC05028", VA = "0xC05028", Slot = "44")]
		public virtual void LockGrabbableWithRotation()
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xC05044", Offset = "0xC05044", VA = "0xC05044", Slot = "45")]
		public virtual void RequestLockGrabbable()
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xC0520C", Offset = "0xC0520C", VA = "0xC0520C", Slot = "46")]
		public virtual void RequestUnlockGrabbable()
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xC0524C", Offset = "0xC0524C", VA = "0xC0524C", Slot = "47")]
		public virtual void ResetLockResets()
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xC05318", Offset = "0xC05318", VA = "0xC05318", Slot = "48")]
		public virtual void LockGrabbable(bool lockPosition, bool lockRotation, bool overridePriorLock)
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xC05554", Offset = "0xC05554", VA = "0xC05554", Slot = "49")]
		public virtual void UnlockGrabbable()
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xC057F4", Offset = "0xC057F4", VA = "0xC057F4")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xC05984", Offset = "0xC05984", VA = "0xC05984")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xC05A6C", Offset = "0xC05A6C", VA = "0xC05A6C")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xC05B38", Offset = "0xC05B38", VA = "0xC05B38")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xC05B44", Offset = "0xC05B44", VA = "0xC05B44")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xC05B70", Offset = "0xC05B70", VA = "0xC05B70")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xC05CE0", Offset = "0xC05CE0", VA = "0xC05CE0")]
		public Grabbable()
		{
		}
	}
	[Token(Token = "0x2000369")]
	public enum GrabType
	{
		[Token(Token = "0x4002374")]
		Snap,
		[Token(Token = "0x4002375")]
		Precise
	}
	[Token(Token = "0x200036A")]
	public enum RemoteGrabMovement
	{
		[Token(Token = "0x4002377")]
		Linear,
		[Token(Token = "0x4002378")]
		Velocity,
		[Token(Token = "0x4002379")]
		Flick
	}
	[Token(Token = "0x200036B")]
	public enum GrabPhysics
	{
		[Token(Token = "0x400237B")]
		None = 2,
		[Token(Token = "0x400237C")]
		PhysicsJoint = 0,
		[Token(Token = "0x400237D")]
		FixedJoint = 3,
		[Token(Token = "0x400237E")]
		Velocity = 4,
		[Token(Token = "0x400237F")]
		Kinematic = 1
	}
	[Token(Token = "0x200036C")]
	public enum OtherGrabBehavior
	{
		[Token(Token = "0x4002381")]
		None,
		[Token(Token = "0x4002382")]
		SwapHands,
		[Token(Token = "0x4002383")]
		DualGrab
	}
	[Token(Token = "0x200036D")]
	public enum TwoHandedPositionType
	{
		[Token(Token = "0x4002385")]
		Lerp,
		[Token(Token = "0x4002386")]
		None
	}
	[Token(Token = "0x200036E")]
	public enum TwoHandedRotationType
	{
		[Token(Token = "0x4002388")]
		Lerp,
		[Token(Token = "0x4002389")]
		Slerp,
		[Token(Token = "0x400238A")]
		LookAtSecondary,
		[Token(Token = "0x400238B")]
		None
	}
	[Token(Token = "0x200036F")]
	public enum TwoHandedDropMechanic
	{
		[Token(Token = "0x400238D")]
		Drop,
		[Token(Token = "0x400238E")]
		Transfer,
		[Token(Token = "0x400238F")]
		None
	}
	[Token(Token = "0x2000370")]
	public enum TwoHandedLookDirection
	{
		[Token(Token = "0x4002391")]
		Horizontal,
		[Token(Token = "0x4002392")]
		Vertical
	}
	[Token(Token = "0x2000371")]
	public enum HandPoseType
	{
		[Token(Token = "0x4002394")]
		AnimatorID,
		[Token(Token = "0x4002395")]
		HandPose,
		[Token(Token = "0x4002396")]
		AutoPoseOnce,
		[Token(Token = "0x4002397")]
		AutoPoseContinuous,
		[Token(Token = "0x4002398")]
		None
	}
	[Token(Token = "0x2000372")]
	public class GrabbableChild : MonoBehaviour
	{
		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587CC0", Offset = "0x587CC0")]
		public Grabbable ParentGrabbable;

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xC064B4", Offset = "0xC064B4", VA = "0xC064B4")]
		public GrabbableChild()
		{
		}
	}
	[Token(Token = "0x2000373")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x57200C", Offset = "0x57200C")]
	public abstract class GrabbableEvents : MonoBehaviour
	{
		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Grabbable grab;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Grabber thisGrabber;

		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected InputBridge input;

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xC06508", Offset = "0xC06508", VA = "0xC06508", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xC06594", Offset = "0xC06594", VA = "0xC06594", Slot = "5")]
		public virtual void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xC0659C", Offset = "0xC0659C", VA = "0xC0659C", Slot = "6")]
		public virtual void OnRelease()
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xC065A0", Offset = "0xC065A0", VA = "0xC065A0", Slot = "7")]
		public virtual void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xC06454", Offset = "0xC06454", VA = "0xC06454", Slot = "8")]
		public virtual void OnBecomesClosestGrabbable(Grabber touchingGrabber)
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xC065A4", Offset = "0xC065A4", VA = "0xC065A4", Slot = "9")]
		public virtual void OnNoLongerClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xC06468", Offset = "0xC06468", VA = "0xC06468", Slot = "10")]
		public virtual void OnNoLongerClosestGrabbable(Grabber touchingGrabber)
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xC065A8", Offset = "0xC065A8", VA = "0xC065A8", Slot = "11")]
		public virtual void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xC0647C", Offset = "0xC0647C", VA = "0xC0647C", Slot = "12")]
		public virtual void OnBecomesClosestRemoteGrabbable(Grabber theGrabber)
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xC065AC", Offset = "0xC065AC", VA = "0xC065AC", Slot = "13")]
		public virtual void OnNoLongerClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xC06490", Offset = "0xC06490", VA = "0xC06490", Slot = "14")]
		public virtual void OnNoLongerClosestRemoteGrabbable(Grabber theGrabber)
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xC065B0", Offset = "0xC065B0", VA = "0xC065B0", Slot = "15")]
		public virtual void OnGrip(float gripValue)
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xC065B4", Offset = "0xC065B4", VA = "0xC065B4", Slot = "16")]
		public virtual void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xC065B8", Offset = "0xC065B8", VA = "0xC065B8", Slot = "17")]
		public virtual void OnTriggerDown()
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xC065BC", Offset = "0xC065BC", VA = "0xC065BC", Slot = "18")]
		public virtual void OnTriggerUp()
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xC065C0", Offset = "0xC065C0", VA = "0xC065C0", Slot = "19")]
		public virtual void OnButton1()
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xC065C4", Offset = "0xC065C4", VA = "0xC065C4", Slot = "20")]
		public virtual void OnButton1Down()
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xC065C8", Offset = "0xC065C8", VA = "0xC065C8", Slot = "21")]
		public virtual void OnButton1Up()
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xC065CC", Offset = "0xC065CC", VA = "0xC065CC", Slot = "22")]
		public virtual void OnButton2()
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xC065D0", Offset = "0xC065D0", VA = "0xC065D0", Slot = "23")]
		public virtual void OnButton2Down()
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xC065D4", Offset = "0xC065D4", VA = "0xC065D4", Slot = "24")]
		public virtual void OnButton2Up()
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xC065D8", Offset = "0xC065D8", VA = "0xC065D8", Slot = "25")]
		public virtual void OnSnapZoneEnter()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xC065DC", Offset = "0xC065DC", VA = "0xC065DC", Slot = "26")]
		public virtual void OnSnapZoneExit()
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xBFB9E0", Offset = "0xBFB9E0", VA = "0xBFB9E0")]
		protected GrabbableEvents()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000374")]
	public class FloatEvent : UnityEvent<float>
	{
		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x8B3350", Offset = "0x8B3350", VA = "0x8B3350")]
		public FloatEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000375")]
	public class FloatFloatEvent : UnityEvent<float, float>
	{
		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x8B339C", Offset = "0x8B339C", VA = "0x8B339C")]
		public FloatFloatEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000376")]
	public class GrabberEvent : UnityEvent<Grabber>
	{
		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xE4709C", Offset = "0xE4709C", VA = "0xE4709C")]
		public GrabberEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000377")]
	public class GrabbableEvent : UnityEvent<Grabbable>
	{
		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xC064BC", Offset = "0xC064BC", VA = "0xC064BC")]
		public GrabbableEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000378")]
	public class RaycastHitEvent : UnityEvent<RaycastHit>
	{
		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xD23E4C", Offset = "0xD23E4C", VA = "0xD23E4C")]
		public RaycastHitEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000379")]
	public class Vector2Event : UnityEvent<Vector2>
	{
		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xC6971C", Offset = "0xC6971C", VA = "0xC6971C")]
		public Vector2Event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037A")]
	public class Vector3Event : UnityEvent<Vector3>
	{
		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xC6B648", Offset = "0xC6B648", VA = "0xC6B648")]
		public Vector3Event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037B")]
	public class PointerEventDataEvent : UnityEvent<PointerEventData>
	{
		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xAA1BC8", Offset = "0xAA1BC8", VA = "0xAA1BC8")]
		public PointerEventDataEvent()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public class GrabbableUnityEvents : GrabbableEvents
	{
		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrabberEvent onGrab;

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onRelease;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onBecomesClosestGrabbable;

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent onNoLongerClosestGrabbable;

		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onBecomesClosestRemoteGrabbable;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onNoLongerClosestRemoteGrabbable;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FloatEvent onGrip;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FloatEvent onTrigger;

		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent onTriggerDown;

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent onTriggerUp;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent onButton1;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent onButton1Down;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UnityEvent onButton1Up;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UnityEvent onButton2;

		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UnityEvent onButton2Down;

		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UnityEvent onButton2Up;

		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UnityEvent onSnapZoneEnter;

		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UnityEvent onSnapZoneExit;

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xC06EC8", Offset = "0xC06EC8", VA = "0xC06EC8", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xC06F3C", Offset = "0xC06F3C", VA = "0xC06F3C", Slot = "6")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xC06F50", Offset = "0xC06F50", VA = "0xC06F50", Slot = "7")]
		public override void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xC06F64", Offset = "0xC06F64", VA = "0xC06F64", Slot = "9")]
		public override void OnNoLongerClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xC06F78", Offset = "0xC06F78", VA = "0xC06F78", Slot = "11")]
		public override void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xC06F8C", Offset = "0xC06F8C", VA = "0xC06F8C", Slot = "13")]
		public override void OnNoLongerClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xC06FA0", Offset = "0xC06FA0", VA = "0xC06FA0", Slot = "15")]
		public override void OnGrip(float gripValue)
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xC07010", Offset = "0xC07010", VA = "0xC07010", Slot = "16")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xC07080", Offset = "0xC07080", VA = "0xC07080", Slot = "17")]
		public override void OnTriggerDown()
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xC07094", Offset = "0xC07094", VA = "0xC07094", Slot = "18")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xC070A8", Offset = "0xC070A8", VA = "0xC070A8", Slot = "19")]
		public override void OnButton1()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xC070BC", Offset = "0xC070BC", VA = "0xC070BC", Slot = "20")]
		public override void OnButton1Down()
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xC070D0", Offset = "0xC070D0", VA = "0xC070D0", Slot = "21")]
		public override void OnButton1Up()
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xC070E4", Offset = "0xC070E4", VA = "0xC070E4", Slot = "22")]
		public override void OnButton2()
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xC070F8", Offset = "0xC070F8", VA = "0xC070F8", Slot = "23")]
		public override void OnButton2Down()
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xC0710C", Offset = "0xC0710C", VA = "0xC0710C", Slot = "24")]
		public override void OnButton2Up()
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xC07120", Offset = "0xC07120", VA = "0xC07120", Slot = "25")]
		public override void OnSnapZoneEnter()
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xC07134", Offset = "0xC07134", VA = "0xC07134", Slot = "26")]
		public override void OnSnapZoneExit()
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xC07148", Offset = "0xC07148", VA = "0xC07148")]
		public GrabbableUnityEvents()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public class GrabbablesInTrigger : MonoBehaviour
	{
		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<Collider, Grabbable> NearbyGrabbables;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<Collider, Grabbable> ValidGrabbables;

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Grabbable ClosestGrabbable;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<Collider, Grabbable> ValidRemoteGrabbables;

		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Grabbable ClosestRemoteGrabbable;

		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool FireGrabbableEvents;

		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Grabbable _closest;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _lastDistance;

		[Token(Token = "0x40023B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _thisDistance;

		[Token(Token = "0x40023B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Collider, Grabbable> _valids;

		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Collider, Grabbable> _filtered;

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xC07150", Offset = "0xC07150", VA = "0xC07150")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xC071F8", Offset = "0xC071F8", VA = "0xC071F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xC0721C", Offset = "0xC0721C", VA = "0xC0721C")]
		private void updateClosestGrabbable()
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xC07278", Offset = "0xC07278", VA = "0xC07278")]
		private void updateClosestRemoteGrabbables()
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xC07524", Offset = "0xC07524", VA = "0xC07524", Slot = "4")]
		public virtual Grabbable GetClosestGrabbable(Dictionary<Collider, Grabbable> grabbables, bool remoteOnly = false)
		{
			return null;
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xC0730C", Offset = "0xC0730C", VA = "0xC0730C")]
		public Dictionary<Collider, Grabbable> GetValidGrabbables(Dictionary<Collider, Grabbable> grabs)
		{
			return null;
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xC077C8", Offset = "0xC077C8", VA = "0xC077C8", Slot = "5")]
		protected virtual bool isValidGrabbale(Collider col, Grabbable grab)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xC07A14", Offset = "0xC07A14", VA = "0xC07A14", Slot = "6")]
		public virtual Dictionary<Collider, Grabbable> SanitizeGrabbables(Dictionary<Collider, Grabbable> grabs)
		{
			return null;
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xC07D04", Offset = "0xC07D04", VA = "0xC07D04", Slot = "7")]
		public virtual void AddNearbyGrabbable(Collider col, Grabbable grabObject)
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xC07E34", Offset = "0xC07E34", VA = "0xC07E34", Slot = "8")]
		public virtual void RemoveNearbyGrabbable(Collider col, Grabbable grabObject)
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xC07F18", Offset = "0xC07F18", VA = "0xC07F18", Slot = "9")]
		public virtual void RemoveNearbyGrabbable(Grabbable grabObject)
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xC080F0", Offset = "0xC080F0", VA = "0xC080F0", Slot = "10")]
		public virtual void AddValidRemoteGrabbable(Collider col, Grabbable grabObject)
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xC08408", Offset = "0xC08408", VA = "0xC08408", Slot = "11")]
		public virtual void RemoveValidRemoteGrabbable(Collider col, Grabbable grabObject)
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xC084EC", Offset = "0xC084EC", VA = "0xC084EC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xC08658", Offset = "0xC08658", VA = "0xC08658")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xC08794", Offset = "0xC08794", VA = "0xC08794")]
		public GrabbablesInTrigger()
		{
		}
	}
	[Token(Token = "0x200037E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x57206C", Offset = "0x57206C")]
	public class Grabber : MonoBehaviour
	{
		[Token(Token = "0x40023BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x587CF8", Offset = "0x587CF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587CF8", Offset = "0x587CF8")]
		public ControllerHand HandSide;

		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x587D58", Offset = "0x587D58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587D58", Offset = "0x587D58")]
		public HoldType DefaultHoldType;

		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587DB8", Offset = "0x587DB8")]
		public GrabButton DefaultGrabButton;

		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x587DF0", Offset = "0x587DF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587DF0", Offset = "0x587DF0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x587DF0", Offset = "0x587DF0")]
		public float GripAmount;

		[Token(Token = "0x40023BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587E68", Offset = "0x587E68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x587E68", Offset = "0x587E68")]
		public float ReleaseGripAmount;

		[Token(Token = "0x40023BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587EBC", Offset = "0x587EBC")]
		public float GrabCheckSeconds;

		[Token(Token = "0x40023C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float currentGrabTime;

		[Token(Token = "0x40023C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x587EF4", Offset = "0x587EF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587EF4", Offset = "0x587EF4")]
		public Grabbable EquipGrabbableOnStart;

		[Token(Token = "0x40023C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x587F54", Offset = "0x587F54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587F54", Offset = "0x587F54")]
		public Transform HandsGraphics;

		[Token(Token = "0x40023C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform handsGraphicsParent;

		[Token(Token = "0x40023C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 handsGraphicsPosition;

		[Token(Token = "0x40023C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion handsGraphicsRotation;

		[Token(Token = "0x40023C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x587FB4", Offset = "0x587FB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x587FB4", Offset = "0x587FB4")]
		public Grabbable HeldGrabbable;

		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588014", Offset = "0x588014")]
		public bool ForceGrab;

		[Token(Token = "0x40023C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58804C", Offset = "0x58804C")]
		public bool ForceRelease;

		[Token(Token = "0x40023C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588084", Offset = "0x588084")]
		public float LastDropTime;

		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Grabbable previousClosest;

		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Grabbable previousClosestRemote;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GrabbablesInTrigger grabsInTrigger;

		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Grabbable flyingGrabbable;

		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float flyingTime;

		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5880BC", Offset = "0x5880BC")]
		private Vector3 <handsGraphicsGrabberOffset>k__BackingField;

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5880CC", Offset = "0x5880CC")]
		private Vector3 <handsGraphicsGrabberOffsetRotation>k__BackingField;

		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[HideInInspector]
		public Vector3 PreviousPosition;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public Transform DummyTransform;

		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Rigidbody rb;

		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private InputBridge input;

		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private ConfigurableJoint joint;

		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public bool FreshGrip;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58810C", Offset = "0x58810C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58810C", Offset = "0x58810C")]
		public GrabbableEvent onGrabEvent;

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58816C", Offset = "0x58816C")]
		public GrabbableEvent onAfterGrabEvent;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5881A4", Offset = "0x5881A4")]
		public GrabbableEvent onReleaseEvent;

		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		public VelocityTracker velocityTracker;

		[Token(Token = "0x170002D9")]
		public bool HoldingItem
		{
			[Token(Token = "0x6001C03")]
			[Address(RVA = "0xE452B4", Offset = "0xE452B4", VA = "0xE452B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002DA")]
		public bool RemoteGrabbingItem
		{
			[Token(Token = "0x6001C04")]
			[Address(RVA = "0xE45320", Offset = "0xE45320", VA = "0xE45320")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002DB")]
		public GrabbablesInTrigger GrabsInTrigger
		{
			[Token(Token = "0x6001C05")]
			[Address(RVA = "0xE4538C", Offset = "0xE4538C", VA = "0xE4538C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DC")]
		public Grabbable RemoteGrabbingGrabbable
		{
			[Token(Token = "0x6001C06")]
			[Address(RVA = "0xE45394", Offset = "0xE45394", VA = "0xE45394")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DD")]
		public Vector3 handsGraphicsGrabberOffset
		{
			[Token(Token = "0x6001C07")]
			[Address(RVA = "0xE4539C", Offset = "0xE4539C", VA = "0xE4539C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592098", Offset = "0x592098")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C08")]
			[Address(RVA = "0xE453A8", Offset = "0xE453A8", VA = "0xE453A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5920A8", Offset = "0x5920A8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DE")]
		public Vector3 handsGraphicsGrabberOffsetRotation
		{
			[Token(Token = "0x6001C09")]
			[Address(RVA = "0xE453B4", Offset = "0xE453B4", VA = "0xE453B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5920B8", Offset = "0x5920B8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C0A")]
			[Address(RVA = "0xE453C0", Offset = "0xE453C0", VA = "0xE453C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5920C8", Offset = "0x5920C8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xE453CC", Offset = "0xE453CC", VA = "0xE453CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xE45860", Offset = "0xE45860", VA = "0xE45860")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xE45A28", Offset = "0xE45A28", VA = "0xE45A28")]
		private void updateFreshGrabStatus()
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xE45AA8", Offset = "0xE45AA8", VA = "0xE45AA8")]
		private void checkGrabbableEvents()
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xE461C4", Offset = "0xE461C4", VA = "0xE461C4", Slot = "4")]
		public virtual bool InputCheckGrab()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xE462D4", Offset = "0xE462D4", VA = "0xE462D4", Slot = "5")]
		public virtual bool GetInputDownForGrabbable(Grabbable grabObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xE463C4", Offset = "0xE463C4", VA = "0xE463C4")]
		private HoldType getHoldType(Grabbable grab)
		{
			return default(HoldType);
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xE46568", Offset = "0xE46568", VA = "0xE46568", Slot = "6")]
		public virtual GrabButton GetGrabButton(Grabbable grab)
		{
			return default(GrabButton);
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xE461F4", Offset = "0xE461F4", VA = "0xE461F4")]
		private Grabbable getClosestOrRemote()
		{
			return null;
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xE45FE0", Offset = "0xE45FE0", VA = "0xE45FE0")]
		private bool inputCheckRelease()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0xE460D8", Offset = "0xE460D8", VA = "0xE460D8")]
		private float getGrabInput(GrabButton btn)
		{
			return default(float);
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xE46470", Offset = "0xE46470", VA = "0xE46470")]
		private bool getToggleInput(GrabButton btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xE46614", Offset = "0xE46614", VA = "0xE46614", Slot = "7")]
		public virtual bool TryGrab()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xE46780", Offset = "0xE46780", VA = "0xE46780", Slot = "8")]
		public virtual void GrabGrabbable(Grabbable item)
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xE4691C", Offset = "0xE4691C", VA = "0xE4691C", Slot = "9")]
		public virtual void DidDrop()
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xE46A10", Offset = "0xE46A10", VA = "0xE46A10", Slot = "10")]
		public virtual void HideHandGraphics()
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xE46AB0", Offset = "0xE46AB0", VA = "0xE46AB0", Slot = "11")]
		public virtual void ResetHandGraphics()
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xE46BB8", Offset = "0xE46BB8", VA = "0xE46BB8", Slot = "12")]
		public virtual void TryRelease()
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xE45990", Offset = "0xE45990", VA = "0xE45990")]
		private void resetFlyingGrabbable()
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xE46C58", Offset = "0xE46C58", VA = "0xE46C58", Slot = "13")]
		public virtual Vector3 GetGrabberAveragedVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0xE46C78", Offset = "0xE46C78", VA = "0xE46C78", Slot = "14")]
		public virtual Vector3 GetGrabberAveragedAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xE46C98", Offset = "0xE46C98", VA = "0xE46C98")]
		public Grabber()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public class HandModelSelector : MonoBehaviour
	{
		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5881EC", Offset = "0x5881EC")]
		public int DefaultHandsModel;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588224", Offset = "0x588224")]
		public bool LoadHandSelectionFromPrefs;

		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58825C", Offset = "0x58825C")]
		public ControllerBinding ToggleHandsInput;

		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588294", Offset = "0x588294")]
		public Transform LeftHandGFXHolder;

		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5882CC", Offset = "0x5882CC")]
		public Transform RightHandGFXHolder;

		[Token(Token = "0x40023E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _selectedHandGFX;

		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588304", Offset = "0x588304")]
		public CharacterIK IKBody;

		[Token(Token = "0x40023E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UIPointer uiPoint;

		[Token(Token = "0x40023E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Transform> leftHandModels;

		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform activatedLeftModel;

		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Transform> rightHandModels;

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform activatedRightModel;

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xE4CBFC", Offset = "0xE4CBFC", VA = "0xE4CBFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0xE4D340", Offset = "0xE4D340", VA = "0xE4D340")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xE4CC90", Offset = "0xE4CC90", VA = "0xE4CC90")]
		public void CacheHandModels()
		{
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xE4CDEC", Offset = "0xE4CDEC", VA = "0xE4CDEC")]
		public void ChangeHandsModel(int childIndex, bool save = false)
		{
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xE4D388", Offset = "0xE4D388", VA = "0xE4D388")]
		public HandModelSelector()
		{
		}
	}
	[Token(Token = "0x2000380")]
	public class HeadCollisionFade : MonoBehaviour
	{
		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ScreenFader fader;

		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float FadeDistance;

		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float FadeOutDistance;

		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MinFade;

		[Token(Token = "0x40023EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float MaxFade;

		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FadeSpeed;

		[Token(Token = "0x40023ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58833C", Offset = "0x58833C")]
		public bool CheckOnlyIfHMDActive;

		[Token(Token = "0x40023EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool IgnoreHeldGrabbables;

		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform DistanceTransform;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int cols;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float currentFade;

		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float lastFade;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Collider> collisions;

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xE51020", Offset = "0xE51020", VA = "0xE51020")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xE510D8", Offset = "0xE510D8", VA = "0xE510D8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xE51380", Offset = "0xE51380", VA = "0xE51380")]
		private void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xE51664", Offset = "0xE51664", VA = "0xE51664")]
		private void OnCollisionExit(Collision col)
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xE5176C", Offset = "0xE5176C", VA = "0xE5176C")]
		public HeadCollisionFade()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public class HingeHelper : GrabbableEvents
	{
		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588374", Offset = "0x588374")]
		public bool SnapToDegrees;

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5883AC", Offset = "0x5883AC")]
		public float SnapDegrees;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5883E4", Offset = "0x5883E4")]
		public Transform SnapGraphics;

		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58841C", Offset = "0x58841C")]
		public AudioClip SnapSound;

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588454", Offset = "0x588454")]
		public float RandomizePitch;

		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58848C", Offset = "0x58848C")]
		public float SnapHaptics;

		[Token(Token = "0x40023FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text LabelToUpdate;

		[Token(Token = "0x40023FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public FloatEvent onHingeChange;

		[Token(Token = "0x40023FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FloatEvent onHingeSnapChange;

		[Token(Token = "0x40023FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody rigid;

		[Token(Token = "0x40023FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _lastDegrees;

		[Token(Token = "0x40023FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _lastSnapDegrees;

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xA63760", Offset = "0xA63760", VA = "0xA63760")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xA637B4", Offset = "0xA637B4", VA = "0xA637B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xA63A58", Offset = "0xA63A58", VA = "0xA63A58")]
		public void OnSnapChange(float yAngle)
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xA64028", Offset = "0xA64028", VA = "0xA64028", Slot = "6")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xA639E8", Offset = "0xA639E8", VA = "0xA639E8")]
		public void OnHingeChange(float hingeAmount)
		{
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xA639C4", Offset = "0xA639C4", VA = "0xA639C4")]
		private float getSmoothedValue(float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xA64088", Offset = "0xA64088", VA = "0xA64088")]
		public HingeHelper()
		{
		}
	}
	[Token(Token = "0x2000382")]
	public enum ControllerHand
	{
		[Token(Token = "0x4002401")]
		Left,
		[Token(Token = "0x4002402")]
		Right,
		[Token(Token = "0x4002403")]
		None
	}
	[Token(Token = "0x2000383")]
	public enum ControllerBinding
	{
		[Token(Token = "0x4002405")]
		None,
		[Token(Token = "0x4002406")]
		AButton,
		[Token(Token = "0x4002407")]
		AButtonDown,
		[Token(Token = "0x4002408")]
		BButton,
		[Token(Token = "0x4002409")]
		BButtonDown,
		[Token(Token = "0x400240A")]
		XButton,
		[Token(Token = "0x400240B")]
		XButtonDown,
		[Token(Token = "0x400240C")]
		YButton,
		[Token(Token = "0x400240D")]
		YButtonDown,
		[Token(Token = "0x400240E")]
		LeftTrigger,
		[Token(Token = "0x400240F")]
		LeftTriggerDown,
		[Token(Token = "0x4002410")]
		LeftGrip,
		[Token(Token = "0x4002411")]
		LeftGripDown,
		[Token(Token = "0x4002412")]
		LeftThumbstick,
		[Token(Token = "0x4002413")]
		LeftThumbstickDown,
		[Token(Token = "0x4002414")]
		RightTrigger,
		[Token(Token = "0x4002415")]
		RightTriggerDown,
		[Token(Token = "0x4002416")]
		RightGrip,
		[Token(Token = "0x4002417")]
		RightGripDown,
		[Token(Token = "0x4002418")]
		RightThumbstick,
		[Token(Token = "0x4002419")]
		RightThumbstickDown,
		[Token(Token = "0x400241A")]
		StartButton,
		[Token(Token = "0x400241B")]
		StartButtonDown,
		[Token(Token = "0x400241C")]
		BackButton,
		[Token(Token = "0x400241D")]
		BackButtonDown
	}
	[Token(Token = "0x2000384")]
	public enum GrabbedControllerBinding
	{
		[Token(Token = "0x400241F")]
		None,
		[Token(Token = "0x4002420")]
		Button1,
		[Token(Token = "0x4002421")]
		Button1Down,
		[Token(Token = "0x4002422")]
		Button2,
		[Token(Token = "0x4002423")]
		Button2Down,
		[Token(Token = "0x4002424")]
		Trigger,
		[Token(Token = "0x4002425")]
		TriggerDown,
		[Token(Token = "0x4002426")]
		Grip,
		[Token(Token = "0x4002427")]
		GripDown
	}
	[Token(Token = "0x2000385")]
	public enum InputAxis
	{
		[Token(Token = "0x4002429")]
		None,
		[Token(Token = "0x400242A")]
		LeftThumbStickAxis,
		[Token(Token = "0x400242B")]
		LeftTouchPadAxis,
		[Token(Token = "0x400242C")]
		RightThumbStickAxis,
		[Token(Token = "0x400242D")]
		RightTouchPadAxis
	}
	[Token(Token = "0x2000386")]
	public enum ControllerType
	{
		[Token(Token = "0x400242F")]
		None,
		[Token(Token = "0x4002430")]
		Unknown,
		[Token(Token = "0x4002431")]
		OculusTouch,
		[Token(Token = "0x4002432")]
		Wand,
		[Token(Token = "0x4002433")]
		Knuckles
	}
	[Token(Token = "0x2000387")]
	public enum HandControl
	{
		[Token(Token = "0x4002435")]
		LeftGrip,
		[Token(Token = "0x4002436")]
		RightGrip,
		[Token(Token = "0x4002437")]
		LeftTrigger,
		[Token(Token = "0x4002438")]
		RightTrigger,
		[Token(Token = "0x4002439")]
		None
	}
	[Token(Token = "0x2000388")]
	public enum GrabButton
	{
		[Token(Token = "0x400243B")]
		Grip,
		[Token(Token = "0x400243C")]
		Trigger,
		[Token(Token = "0x400243D")]
		Inherit
	}
	[Token(Token = "0x2000389")]
	public enum HoldType
	{
		[Token(Token = "0x400243F")]
		HoldDown,
		[Token(Token = "0x4002440")]
		Toggle,
		[Token(Token = "0x4002441")]
		Inherit
	}
	[Token(Token = "0x200038A")]
	public enum XRInputSource
	{
		[Token(Token = "0x4002443")]
		XRInput,
		[Token(Token = "0x4002444")]
		OVRInput,
		[Token(Token = "0x4002445")]
		SteamVR,
		[Token(Token = "0x4002446")]
		Pico,
		[Token(Token = "0x4002447")]
		UnityInput
	}
	[Token(Token = "0x200038B")]
	public enum SDKProvider
	{
		[Token(Token = "0x4002449")]
		Unknown,
		[Token(Token = "0x400244A")]
		OculusSDK,
		[Token(Token = "0x400244B")]
		OpenVR
	}
	[Token(Token = "0x200038C")]
	public class InputBridge : MonoBehaviour
	{
		[Token(Token = "0x20005C2")]
		public delegate void InputsUpdatedAction();

		[Token(Token = "0x20005C3")]
		public delegate void ControllerFoundAction();

		[Token(Token = "0x20005C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573238", Offset = "0x573238")]
		private sealed class <changeOriginModeRoutine>d__167 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputBridge <>4__this;

			[Token(Token = "0x4003066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrackingOriginModeFlags trackingOrigin;

			[Token(Token = "0x17000416")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002490")]
				[Address(RVA = "0x921958", Offset = "0x921958", VA = "0x921958", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000417")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002492")]
				[Address(RVA = "0x9219A0", Offset = "0x9219A0", VA = "0x9219A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600248D")]
			[Address(RVA = "0x9216DC", Offset = "0x9216DC", VA = "0x9216DC")]
			[DebuggerHidden]
			public <changeOriginModeRoutine>d__167(int <>1__state)
			{
			}

			[Token(Token = "0x600248E")]
			[Address(RVA = "0x921708", Offset = "0x921708", VA = "0x921708", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600248F")]
			[Address(RVA = "0x92170C", Offset = "0x92170C", VA = "0x92170C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002491")]
			[Address(RVA = "0x921960", Offset = "0x921960", VA = "0x921960", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400244C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InputBridge _instance;

		[Token(Token = "0x400244D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5884C4", Offset = "0x5884C4")]
		[SerializeField]
		public XRInputSource InputSource;

		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588510", Offset = "0x588510")]
		public InputActionAsset actionSet;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58855C", Offset = "0x58855C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58855C", Offset = "0x58855C")]
		public TrackingOriginModeFlags TrackingOrigin;

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5885CC", Offset = "0x5885CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5885CC", Offset = "0x5885CC")]
		public float ThumbstickDeadzoneX;

		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58862C", Offset = "0x58862C")]
		public float ThumbstickDeadzoneY;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x588664", Offset = "0x588664")]
		public float LeftGrip;

		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool LeftGripDown;

		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float RightGrip;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool RightGripDown;

		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58869C", Offset = "0x58869C")]
		public float LeftTrigger;

		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool LeftTriggerNear;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool LeftTriggerUp;

		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool LeftTriggerDown;

		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float RightTrigger;

		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool RightTriggerUp;

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool RightTriggerDown;

		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool RightTriggerNear;

		[Token(Token = "0x400245E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool LeftThumbNear;

		[Token(Token = "0x400245F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool RightThumbNear;

		[Token(Token = "0x4002460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5886D4", Offset = "0x5886D4")]
		public bool LeftThumbstickDown;

		[Token(Token = "0x4002461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool LeftThumbstickUp;

		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		public bool RightThumbstickDown;

		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool RightThumbstickUp;

		[Token(Token = "0x4002464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool LeftThumbstick;

		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool RightThumbstick;

		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58870C", Offset = "0x58870C")]
		public bool AButton;

		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588744", Offset = "0x588744")]
		public bool AButtonDown;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public bool AButtonUp;

		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		public bool BButton;

		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58877C", Offset = "0x58877C")]
		public bool BButtonDown;

		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool BButtonUp;

		[Token(Token = "0x400246C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool XButton;

		[Token(Token = "0x400246D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5887B4", Offset = "0x5887B4")]
		public bool XButtonDown;

		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool XButtonUp;

		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool YButton;

		[Token(Token = "0x4002470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool YButtonDown;

		[Token(Token = "0x4002471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		public bool YButtonUp;

		[Token(Token = "0x4002472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
		public bool StartButton;

		[Token(Token = "0x4002473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool StartButtonDown;

		[Token(Token = "0x4002474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool BackButton;

		[Token(Token = "0x4002475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool BackButtonDown;

		[Token(Token = "0x4002476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5887EC", Offset = "0x5887EC")]
		public Vector2 LeftThumbstickAxis;

		[Token(Token = "0x4002477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector2 RightThumbstickAxis;

		[Token(Token = "0x4002478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector2 LeftTouchPadAxis;

		[Token(Token = "0x4002479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector2 RightTouchPadAxis;

		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _downThreshold;

		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool SteamVRSupport;

		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x588824", Offset = "0x588824")]
		public ControllerType ConnectedControllerType;

		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58885C", Offset = "0x58885C")]
		public bool HMDActive;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x588894", Offset = "0x588894")]
		private SDKProvider <LoadedSDK>k__BackingField;

		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5888A4", Offset = "0x5888A4")]
		private bool <IsOculusDevice>k__BackingField;

		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5888B4", Offset = "0x5888B4")]
		private bool <IsOculusQuest>k__BackingField;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5888C4", Offset = "0x5888C4")]
		private bool <IsHTCDevice>k__BackingField;

		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5888D4", Offset = "0x5888D4")]
		private bool <IsPicoDevice>k__BackingField;

		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5888E4", Offset = "0x5888E4")]
		private bool <IsValveIndexController>k__BackingField;

		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5888F4", Offset = "0x5888F4")]
		public bool SupportsBothTouchPadAndJoystick;

		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58892C", Offset = "0x58892C")]
		public bool SupportsIndexTouch;

		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA7")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588964", Offset = "0x588964")]
		public bool SupportsThumbTouch;

		[Token(Token = "0x4002487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<UnityEngine.XR.InputDevice> devices;

		[Token(Token = "0x400248A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private InputAction leftGrip;

		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private InputAction leftTrigger;

		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private InputAction leftTriggerNear;

		[Token(Token = "0x400248D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private InputAction rightGrip;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private InputAction rightTrigger;

		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private InputAction rightTriggerNear;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private InputAction leftThumbstick;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private InputAction leftThumbstickDown;

		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private InputAction leftThumbNear;

		[Token(Token = "0x4002493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private InputAction leftTouchpad;

		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private InputAction leftTouchpadDown;

		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private InputAction rightThumbstick;

		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private InputAction rightThumbstickDown;

		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private InputAction rightThumbNear;

		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private InputAction rightTouchpad;

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private InputAction rightTouchpadDown;

		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private InputAction aButton;

		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private InputAction bButton;

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private InputAction xButton;

		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private InputAction yButton;

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private InputAction startButton;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private InputAction backButton;

		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[HideInInspector]
		public bool ShowInputDebugger;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private UnityEngine.XR.InputDevice primaryLeftController;

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private UnityEngine.XR.InputDevice primaryRightController;

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private InputFeatureUsage<Vector2> thumbstickAxis;

		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private InputFeatureUsage<Vector2> thumbstickAxisSecondary;

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private InputFeatureUsage<bool> thumbstickAxisClick;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private bool setTrackingOrigin;

		[Token(Token = "0x170002DF")]
		public static InputBridge Instance
		{
			[Token(Token = "0x6001C32")]
			[Address(RVA = "0xA63C34", Offset = "0xA63C34", VA = "0xA63C34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E0")]
		public float DownThreshold
		{
			[Token(Token = "0x6001C33")]
			[Address(RVA = "0xA69270", Offset = "0xA69270", VA = "0xA69270")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002E1")]
		public SDKProvider LoadedSDK
		{
			[Token(Token = "0x6001C34")]
			[Address(RVA = "0xA69278", Offset = "0xA69278", VA = "0xA69278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5920D8", Offset = "0x5920D8")]
			get
			{
				return default(SDKProvider);
			}
			[Token(Token = "0x6001C35")]
			[Address(RVA = "0xA69280", Offset = "0xA69280", VA = "0xA69280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5920E8", Offset = "0x5920E8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E2")]
		public bool IsOculusDevice
		{
			[Token(Token = "0x6001C36")]
			[Address(RVA = "0xA69288", Offset = "0xA69288", VA = "0xA69288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5920F8", Offset = "0x5920F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C37")]
			[Address(RVA = "0xA69290", Offset = "0xA69290", VA = "0xA69290")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592108", Offset = "0x592108")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E3")]
		public bool IsOculusQuest
		{
			[Token(Token = "0x6001C38")]
			[Address(RVA = "0xA6929C", Offset = "0xA6929C", VA = "0xA6929C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592118", Offset = "0x592118")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C39")]
			[Address(RVA = "0xA692A4", Offset = "0xA692A4", VA = "0xA692A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592128", Offset = "0x592128")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E4")]
		public bool IsHTCDevice
		{
			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0xA692B0", Offset = "0xA692B0", VA = "0xA692B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592138", Offset = "0x592138")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C3B")]
			[Address(RVA = "0xA692B8", Offset = "0xA692B8", VA = "0xA692B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592148", Offset = "0x592148")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E5")]
		public bool IsPicoDevice
		{
			[Token(Token = "0x6001C3C")]
			[Address(RVA = "0xA692C4", Offset = "0xA692C4", VA = "0xA692C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592158", Offset = "0x592158")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C3D")]
			[Address(RVA = "0xA692CC", Offset = "0xA692CC", VA = "0xA692CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592168", Offset = "0x592168")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E6")]
		public bool IsValveIndexController
		{
			[Token(Token = "0x6001C3E")]
			[Address(RVA = "0xA692D8", Offset = "0xA692D8", VA = "0xA692D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592178", Offset = "0x592178")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C3F")]
			[Address(RVA = "0xA692E0", Offset = "0xA692E0", VA = "0xA692E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592188", Offset = "0x592188")]
			private set
			{
			}
		}

		[Token(Token = "0x14000015")]
		public static event InputsUpdatedAction OnInputsUpdated
		{
			[Token(Token = "0x6001C40")]
			[Address(RVA = "0xA692EC", Offset = "0xA692EC", VA = "0xA692EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592198", Offset = "0x592198")]
			add
			{
			}
			[Token(Token = "0x6001C41")]
			[Address(RVA = "0xA693E4", Offset = "0xA693E4", VA = "0xA693E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5921A8", Offset = "0x5921A8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public static event ControllerFoundAction OnControllerFound
		{
			[Token(Token = "0x6001C42")]
			[Address(RVA = "0xA694DC", Offset = "0xA694DC", VA = "0xA694DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5921B8", Offset = "0x5921B8")]
			add
			{
			}
			[Token(Token = "0x6001C43")]
			[Address(RVA = "0xA695D4", Offset = "0xA695D4", VA = "0xA695D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5921C8", Offset = "0x5921C8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xA696CC", Offset = "0xA696CC", VA = "0xA696CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xA69A2C", Offset = "0xA69A2C", VA = "0xA69A2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xA69A40", Offset = "0xA69A40", VA = "0xA69A40")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xA69B50", Offset = "0xA69B50", VA = "0xA69B50")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xA69C50", Offset = "0xA69C50", VA = "0xA69C50")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xA69C88", Offset = "0xA69C88", VA = "0xA69C88", Slot = "4")]
		public virtual void UpdateInputs()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xA69D6C", Offset = "0xA69D6C", VA = "0xA69D6C", Slot = "5")]
		public virtual void UpdateSteamInput()
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xA69D70", Offset = "0xA69D70", VA = "0xA69D70", Slot = "6")]
		public virtual void UpdateXRInput()
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xA6AB6C", Offset = "0xA6AB6C", VA = "0xA6AB6C", Slot = "7")]
		public virtual void UpdateUnityInput()
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xA6AFB8", Offset = "0xA6AFB8", VA = "0xA6AFB8", Slot = "8")]
		public virtual void CreateUnityInputActions()
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xA6B5B0", Offset = "0xA6B5B0", VA = "0xA6B5B0", Slot = "9")]
		public virtual void EnableActions()
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xA6BAB4", Offset = "0xA6BAB4", VA = "0xA6BAB4", Slot = "10")]
		public virtual void DisableActions()
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xA6B510", Offset = "0xA6B510", VA = "0xA6B510")]
		public InputAction CreateInputAction(string actionName, string binding, bool valueType)
		{
			return null;
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xA6BFB8", Offset = "0xA6BFB8", VA = "0xA6BFB8", Slot = "11")]
		public virtual void UpdateOVRInput()
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xA6C030", Offset = "0xA6C030", VA = "0xA6C030", Slot = "12")]
		public virtual void UpdatePicoInput()
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xA6C034", Offset = "0xA6C034", VA = "0xA6C034", Slot = "13")]
		public virtual void UpdateDeviceActive()
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xA6AA78", Offset = "0xA6AA78", VA = "0xA6AA78")]
		private float correctValue(float inputValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xA6C1C8", Offset = "0xA6C1C8", VA = "0xA6C1C8")]
		public bool GetControllerBindingValue(ControllerBinding val)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xA6C30C", Offset = "0xA6C30C", VA = "0xA6C30C")]
		public bool GetGrabbedControllerBinding(GrabbedControllerBinding val, ControllerHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xA6C41C", Offset = "0xA6C41C", VA = "0xA6C41C")]
		public Vector2 GetInputAxisValue(InputAxis val)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xA6AA18", Offset = "0xA6AA18", VA = "0xA6AA18")]
		private Vector2 ApplyDeadZones(Vector2 pos, float deadZoneX, float deadZoneY)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xA6C474", Offset = "0xA6C474", VA = "0xA6C474")]
		private void onDeviceChanged(UnityEngine.XR.InputDevice inputDevice)
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xA69874", Offset = "0xA69874", VA = "0xA69874")]
		private void setDeviceProperties()
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xA6C4A8", Offset = "0xA6C4A8", VA = "0xA6C4A8", Slot = "14")]
		public virtual bool GetSupportsIndexTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xA6C4B0", Offset = "0xA6C4B0", VA = "0xA6C4B0", Slot = "15")]
		public virtual SDKProvider GetLoadedSDK()
		{
			return default(SDKProvider);
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xA6C564", Offset = "0xA6C564", VA = "0xA6C564", Slot = "16")]
		public virtual bool GetSupportsThumbTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xA6C584", Offset = "0xA6C584", VA = "0xA6C584", Slot = "17")]
		public virtual bool GetIsOculusDevice()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0xA6C644", Offset = "0xA6C644", VA = "0xA6C644", Slot = "18")]
		public virtual bool GetIsOculusQuest()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0xA6C77C", Offset = "0xA6C77C", VA = "0xA6C77C", Slot = "19")]
		public virtual bool GetIsHTCDevice()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0xA6C810", Offset = "0xA6C810", VA = "0xA6C810", Slot = "20")]
		public virtual bool GetIsPicoDevice()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xA6C0F4", Offset = "0xA6C0F4", VA = "0xA6C0F4")]
		public UnityEngine.XR.InputDevice GetHMD()
		{
			return default(UnityEngine.XR.InputDevice);
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0xA6C888", Offset = "0xA6C888", VA = "0xA6C888")]
		public string GetHMDName()
		{
			return null;
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0xA6C8B4", Offset = "0xA6C8B4", VA = "0xA6C8B4")]
		public Vector3 GetHMDLocalPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0xA6C94C", Offset = "0xA6C94C", VA = "0xA6C94C")]
		public Quaternion GetHMDLocalRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0xA6A800", Offset = "0xA6A800", VA = "0xA6A800")]
		public UnityEngine.XR.InputDevice GetLeftController()
		{
			return default(UnityEngine.XR.InputDevice);
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xA6A8D4", Offset = "0xA6A8D4", VA = "0xA6A8D4")]
		public UnityEngine.XR.InputDevice GetRightController()
		{
			return default(UnityEngine.XR.InputDevice);
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xA6C9E0", Offset = "0xA6C9E0", VA = "0xA6C9E0")]
		public Vector3 GetControllerLocalPosition(ControllerHand handSide)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xA6CA9C", Offset = "0xA6CA9C", VA = "0xA6CA9C")]
		public Quaternion GetControllerLocalRotation(ControllerHand handSide)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xA6CB58", Offset = "0xA6CB58", VA = "0xA6CB58", Slot = "21")]
		public virtual ControllerType GetControllerType()
		{
			return default(ControllerType);
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xA6CB8C", Offset = "0xA6CB8C", VA = "0xA6CB8C")]
		public Vector3 GetControllerVelocity(ControllerHand hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0xA6CC80", Offset = "0xA6CC80", VA = "0xA6CC80")]
		public Vector3 GetControllerAngularVelocity(ControllerHand hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0xA6CD34", Offset = "0xA6CD34", VA = "0xA6CD34", Slot = "22")]
		public virtual string GetControllerName()
		{
			return null;
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0xA6CE80", Offset = "0xA6CE80", VA = "0xA6CE80", Slot = "23")]
		public virtual bool GetIsValveIndexController()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0xA6AA38", Offset = "0xA6AA38", VA = "0xA6AA38")]
		private float getFeatureUsage(UnityEngine.XR.InputDevice device, InputFeatureUsage<float> usage, bool clamp = true)
		{
			return default(float);
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0xA6A9A8", Offset = "0xA6A9A8", VA = "0xA6A9A8")]
		private bool getFeatureUsage(UnityEngine.XR.InputDevice device, InputFeatureUsage<bool> usage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0xA6A9E0", Offset = "0xA6A9E0", VA = "0xA6A9E0")]
		private Vector2 getFeatureUsage(UnityEngine.XR.InputDevice device, InputFeatureUsage<Vector2> usage)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0xA6CC40", Offset = "0xA6CC40", VA = "0xA6CC40")]
		private Vector3 getFeatureUsage(UnityEngine.XR.InputDevice device, InputFeatureUsage<Vector3> usage)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0xA6CF7C", Offset = "0xA6CF7C", VA = "0xA6CF7C", Slot = "24")]
		public virtual void SetTrackingOriginMode(TrackingOriginModeFlags trackingOrigin)
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0xA6CFA8", Offset = "0xA6CFA8", VA = "0xA6CFA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5921D8", Offset = "0x5921D8")]
		private IEnumerator changeOriginModeRoutine(TrackingOriginModeFlags trackingOrigin)
		{
			return null;
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0xA63E18", Offset = "0xA63E18", VA = "0xA63E18")]
		public void VibrateController(float frequency, float amplitude, float duration, ControllerHand hand)
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0xA6D024", Offset = "0xA6D024", VA = "0xA6D024")]
		public InputBridge()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public class JoystickControl : MonoBehaviour
	{
		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5889CC", Offset = "0x5889CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5889CC", Offset = "0x5889CC")]
		public float DeadZone;

		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MinDegrees;

		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaxDegrees;

		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float LeverPercentageX;

		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LeverPercentageY;

		[Token(Token = "0x40024AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector2 LeverVector;

		[Token(Token = "0x40024AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool UseSmoothLook;

		[Token(Token = "0x40024AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float SmoothLookSpeed;

		[Token(Token = "0x40024AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool KinematicWhileInactive;

		[Token(Token = "0x40024B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FloatFloatEvent onJoystickChange;

		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2Event onJoystickVectorChange;

		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Grabbable grab;

		[Token(Token = "0x40024B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rb;

		[Token(Token = "0x40024B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentRotation;

		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float angleX;

		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float angleY;

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0xA6EBD8", Offset = "0xA6EBD8", VA = "0xA6EBD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0xA6EC50", Offset = "0xA6EC50", VA = "0xA6EC50")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0xA6EF88", Offset = "0xA6EF88", VA = "0xA6EF88")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0xA6EF8C", Offset = "0xA6EF8C", VA = "0xA6EF8C")]
		private void doJoystickLook()
		{
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xA6F354", Offset = "0xA6F354", VA = "0xA6F354", Slot = "4")]
		public virtual void OnJoystickChange(float leverX, float leverY)
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xA6F3CC", Offset = "0xA6F3CC", VA = "0xA6F3CC", Slot = "5")]
		public virtual void OnJoystickChange(Vector2 joystickVector)
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0xA6F444", Offset = "0xA6F444", VA = "0xA6F444")]
		public JoystickControl()
		{
		}
	}
	[Token(Token = "0x200038E")]
	public class Lever : MonoBehaviour
	{
		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x588A2C", Offset = "0x588A2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588A2C", Offset = "0x588A2C")]
		public float MinimumXRotation;

		[Token(Token = "0x40024B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588A8C", Offset = "0x588A8C")]
		public float MaximumXRotation;

		[Token(Token = "0x40024B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x588AC4", Offset = "0x588AC4")]
		public float InitialXRotation;

		[Token(Token = "0x40024BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x588AFC", Offset = "0x588AFC")]
		public AudioClip SwitchOnSound;

		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip SwitchOffSound;

		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x588B34", Offset = "0x588B34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588B34", Offset = "0x588B34")]
		public float SwitchTolerance;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x588B94", Offset = "0x588B94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588B94", Offset = "0x588B94")]
		public bool UseSmoothLook;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588BF4", Offset = "0x588BF4")]
		public float SmoothLookSpeed;

		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x588C2C", Offset = "0x588C2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588C2C", Offset = "0x588C2C")]
		public bool AllowPhysicsForces;

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x588C8C", Offset = "0x588C8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588C8C", Offset = "0x588C8C")]
		public bool ReturnToCenter;

		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588CEC", Offset = "0x588CEC")]
		public float ReturnLookSpeed;

		[Token(Token = "0x40024C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x588D24", Offset = "0x588D24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588D24", Offset = "0x588D24")]
		public bool SnapToGrabber;

		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x588D84", Offset = "0x588D84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588D84", Offset = "0x588D84")]
		public bool DropLeverOnActivation;

		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x588DE4", Offset = "0x588DE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588DE4", Offset = "0x588DE4")]
		public float LeverPercentage;

		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588E44", Offset = "0x588E44")]
		public bool ShowEditorGizmos;

		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x588E7C", Offset = "0x588E7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588E7C", Offset = "0x588E7C")]
		public UnityEvent onLeverDown;

		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588EDC", Offset = "0x588EDC")]
		public UnityEvent onLeverUp;

		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588F14", Offset = "0x588F14")]
		public FloatEvent onLeverChange;

		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Grabbable grab;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody rb;

		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AudioSource audioSource;

		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool switchedOn;

		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ConfigurableJoint configJoint;

		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private HingeJoint hingedJoint;

		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 _lastLocalAngle;

		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Quaternion initialOffset;

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xA3AF98", Offset = "0xA3AF98", VA = "0xA3AF98")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0xA3B15C", Offset = "0xA3B15C", VA = "0xA3B15C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0xA3B198", Offset = "0xA3B198", VA = "0xA3B198")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0xA3B33C", Offset = "0xA3B33C", VA = "0xA3B33C", Slot = "4")]
		public virtual float GetAnglePercentage(float currentAngle)
		{
			return default(float);
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0xA3B4FC", Offset = "0xA3B4FC", VA = "0xA3B4FC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0xA3B500", Offset = "0xA3B500", VA = "0xA3B500")]
		private void doLeverLook()
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xA3B99C", Offset = "0xA3B99C", VA = "0xA3B99C", Slot = "5")]
		public virtual void SetLeverAngle(float angle)
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xA3B9F8", Offset = "0xA3B9F8", VA = "0xA3B9F8", Slot = "6")]
		public virtual void OnLeverChange(float percentage)
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xA3BA68", Offset = "0xA3BA68", VA = "0xA3BA68", Slot = "7")]
		public virtual void OnLeverDown()
		{
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xA3BB84", Offset = "0xA3BB84", VA = "0xA3BB84", Slot = "8")]
		public virtual void OnLeverUp()
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xA3BCA4", Offset = "0xA3BCA4", VA = "0xA3BCA4")]
		public Lever()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public class LocomotionManager : MonoBehaviour
	{
		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x588F4C", Offset = "0x588F4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588F4C", Offset = "0x588F4C")]
		public LocomotionType DefaultLocomotion;

		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private LocomotionType selectedLocomotion;

		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x588FAC", Offset = "0x588FAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x588FAC", Offset = "0x588FAC")]
		public bool LoadLocomotionFromPrefs;

		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58900C", Offset = "0x58900C")]
		public List<ControllerBinding> locomotionToggleInput;

		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589044", Offset = "0x589044")]
		public InputActionReference LocomotionToggleAction;

		[Token(Token = "0x40024D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BNGPlayerController player;

		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PlayerTeleport teleport;

		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool actionToggle;

		[Token(Token = "0x170002E7")]
		public LocomotionType SelectedLocomotion
		{
			[Token(Token = "0x6001C8A")]
			[Address(RVA = "0xA3DC48", Offset = "0xA3DC48", VA = "0xA3DC48")]
			get
			{
				return default(LocomotionType);
			}
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xA3DC50", Offset = "0xA3DC50", VA = "0xA3DC50")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xA3DDC4", Offset = "0xA3DDC4", VA = "0xA3DDC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0xA3DDFC", Offset = "0xA3DDFC", VA = "0xA3DDFC", Slot = "4")]
		public virtual void CheckControllerToggleInput()
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xA3DF70", Offset = "0xA3DF70", VA = "0xA3DF70")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0xA3E098", Offset = "0xA3E098", VA = "0xA3E098")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xA3E1C0", Offset = "0xA3E1C0", VA = "0xA3E1C0")]
		public void OnLocomotionToggle(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xA3DF4C", Offset = "0xA3DF4C", VA = "0xA3DF4C")]
		public void LocomotionToggle()
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0xA3E1CC", Offset = "0xA3E1CC", VA = "0xA3E1CC")]
		public void UpdateTeleportStatus()
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0xA3DD40", Offset = "0xA3DD40", VA = "0xA3DD40")]
		public void ChangeLocomotion(LocomotionType locomotionType, bool save)
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xA3E1D0", Offset = "0xA3E1D0", VA = "0xA3E1D0")]
		public void ChangeLocomotionType(LocomotionType loc)
		{
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0xA3E2DC", Offset = "0xA3E2DC", VA = "0xA3E2DC")]
		private void toggleTeleport(bool enabled)
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0xA3E2E0", Offset = "0xA3E2E0", VA = "0xA3E2E0")]
		private void toggleSmoothLocomotion(bool enabled)
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xA3E380", Offset = "0xA3E380", VA = "0xA3E380")]
		public void ToggleLocomotionType()
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xA3E39C", Offset = "0xA3E39C", VA = "0xA3E39C")]
		public LocomotionManager()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public class PlayerClimbing : MonoBehaviour
	{
		[Token(Token = "0x40024DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58907C", Offset = "0x58907C")]
		public Transform LeftControllerTransform;

		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform RightControllerTransform;

		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5890B4", Offset = "0x5890B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5890B4", Offset = "0x5890B4")]
		public float ClimbingCapsuleHeight;

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589114", Offset = "0x589114")]
		public float ClimbingCapsuleCenter;

		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58914C", Offset = "0x58914C")]
		public bool ApplyHapticsOnGrab;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589184", Offset = "0x589184")]
		public float VibrateFrequency;

		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5891BC", Offset = "0x5891BC")]
		public float VibrateAmplitude;

		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5891F4", Offset = "0x5891F4")]
		public float VibrateDuration;

		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Grabber> climbers;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool wasGrippingClimbable;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CharacterController characterController;

		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PlayerGravity playerGravity;

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58922C", Offset = "0x58922C")]
		public bool GrippingClimbable;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 moveDirection;

		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 previousLeftControllerPosition;

		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 previousRightControllerPosition;

		[Token(Token = "0x40024EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 controllerMoveAmount;

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0xDC95FC", Offset = "0xDC95FC", VA = "0xDC95FC")]
		public void Start()
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xDC96D8", Offset = "0xDC96D8", VA = "0xDC96D8")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0xDC97C8", Offset = "0xDC97C8", VA = "0xDC97C8", Slot = "4")]
		public virtual void AddClimber(Climbable climbable, Grabber grab)
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xDC9AA4", Offset = "0xDC9AA4", VA = "0xDC9AA4", Slot = "5")]
		public virtual void RemoveClimber(Grabber grab)
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xDC9B88", Offset = "0xDC9B88", VA = "0xDC9B88", Slot = "6")]
		public virtual bool GrippingAtLeastOneClimbable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xDC9CFC", Offset = "0xDC9CFC", VA = "0xDC9CFC", Slot = "7")]
		protected virtual void checkClimbing()
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xDCA0E4", Offset = "0xDCA0E4", VA = "0xDCA0E4")]
		private void onGrabbedClimbable()
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xDCA1C0", Offset = "0xDCA1C0", VA = "0xDCA1C0")]
		private void onReleasedClimbable()
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0xDCA2E8", Offset = "0xDCA2E8", VA = "0xDCA2E8")]
		public PlayerClimbing()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public class PlayerGravity : MonoBehaviour
	{
		[Token(Token = "0x40024EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589264", Offset = "0x589264")]
		public bool GravityEnabled;

		[Token(Token = "0x40024ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58929C", Offset = "0x58929C")]
		public Vector3 Gravity;

		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CharacterController characterController;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody playerRigidbody;

		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _movementY;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _initialGravityModifier;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _validRigidBody;

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xDCA348", Offset = "0xDCA348", VA = "0xDCA348")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xDCA43C", Offset = "0xDCA43C", VA = "0xDCA43C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xDCA5D4", Offset = "0xDCA5D4", VA = "0xDCA5D4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xDCA29C", Offset = "0xDCA29C", VA = "0xDCA29C")]
		public void ToggleGravity(bool gravityOn)
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xDCA670", Offset = "0xDCA670", VA = "0xDCA670")]
		public PlayerGravity()
		{
		}
	}
	[Token(Token = "0x2000392")]
	public class PlayerGravity1 : MonoBehaviour
	{
		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5892D4", Offset = "0x5892D4")]
		public bool GravityEnabled;

		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58930C", Offset = "0x58930C")]
		public Vector3 Gravity;

		[Token(Token = "0x40024F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CharacterController characterController;

		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x40024F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody playerRigidbody;

		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _movementY;

		[Token(Token = "0x40024FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _initialGravityModifier;

		[Token(Token = "0x40024FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _validRigidBody;

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xDCA6AC", Offset = "0xDCA6AC", VA = "0xDCA6AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xDCA7A0", Offset = "0xDCA7A0", VA = "0xDCA7A0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xDCA928", Offset = "0xDCA928", VA = "0xDCA928")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xDCA964", Offset = "0xDCA964", VA = "0xDCA964")]
		public void ToggleGravity(bool gravityOn)
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xDCA9B0", Offset = "0xDCA9B0", VA = "0xDCA9B0")]
		public PlayerGravity1()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public class PlayerGravity2 : MonoBehaviour
	{
		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589344", Offset = "0x589344")]
		public bool GravityEnabled;

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58937C", Offset = "0x58937C")]
		public Vector3 Gravity;

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CharacterController characterController;

		[Token(Token = "0x40024FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody playerRigidbody;

		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _movementY;

		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _initialGravityModifier;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _validRigidBody;

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xDCA9D0", Offset = "0xDCA9D0", VA = "0xDCA9D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xDCAAC4", Offset = "0xDCAAC4", VA = "0xDCAAC4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xDCAC5C", Offset = "0xDCAC5C", VA = "0xDCAC5C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xDCAC98", Offset = "0xDCAC98", VA = "0xDCAC98")]
		public void ToggleGravity(bool gravityOn)
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xDCACE4", Offset = "0xDCACE4", VA = "0xDCACE4")]
		public PlayerGravity2()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public class PlayerMovingPlatformSupport : MonoBehaviour
	{
		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5893B4", Offset = "0x5893B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5893B4", Offset = "0x5893B4")]
		public LayerMask GroundedLayers;

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected RaycastHit groundHit;

		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CharacterController characterController;

		[Token(Token = "0x4002508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _initialCharacterParent;

		[Token(Token = "0x4002509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected float DistanceFromGround;

		[Token(Token = "0x400250A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MovingPlatform currentPlatform;

		[Token(Token = "0x400250B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool wasOnPlatform;

		[Token(Token = "0x400250C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool requiresReparent;

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xDCAE60", Offset = "0xDCAE60", VA = "0xDCAE60")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xDCAEF8", Offset = "0xDCAEF8", VA = "0xDCAEF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0xDCAF04", Offset = "0xDCAF04", VA = "0xDCAF04")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0xDCAF10", Offset = "0xDCAF10", VA = "0xDCAF10", Slot = "4")]
		public virtual void CheckMovingPlatform()
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xDCB218", Offset = "0xDCB218", VA = "0xDCB218", Slot = "5")]
		public virtual void UpdateDistanceFromGround()
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0xDCB594", Offset = "0xDCB594", VA = "0xDCB594")]
		public PlayerMovingPlatformSupport()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public enum RotationMechanic
	{
		[Token(Token = "0x400250E")]
		Snap,
		[Token(Token = "0x400250F")]
		Smooth
	}
	[Token(Token = "0x2000396")]
	public class PlayerRotation : MonoBehaviour
	{
		[Token(Token = "0x20005C5")]
		public delegate void OnBeforeRotateAction();

		[Token(Token = "0x20005C6")]
		public delegate void OnAfterRotateAction();

		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x589414", Offset = "0x589414")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589414", Offset = "0x589414")]
		public bool AllowInput;

		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589474", Offset = "0x589474")]
		public List<InputAxis> inputAxis;

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5894AC", Offset = "0x5894AC")]
		public InputActionReference RotateAction;

		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5894E4", Offset = "0x5894E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5894E4", Offset = "0x5894E4")]
		public RotationMechanic RotationType;

		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x589544", Offset = "0x589544")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589544", Offset = "0x589544")]
		public float SnapRotationAmount;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5895A4", Offset = "0x5895A4")]
		public float SnapInputAmount;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5895DC", Offset = "0x5895DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5895DC", Offset = "0x5895DC")]
		public float SmoothTurnSpeed;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58963C", Offset = "0x58963C")]
		public float SmoothTurnMinInput;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float recentSnapTurnTime;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float rotationAmount;

		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float xAxis;

		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float previousXInput;

		[Token(Token = "0x14000017")]
		public static event OnBeforeRotateAction OnBeforeRotate
		{
			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0xDCB59C", Offset = "0xDCB59C", VA = "0xDCB59C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592238", Offset = "0x592238")]
			add
			{
			}
			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0xDCB658", Offset = "0xDCB658", VA = "0xDCB658")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592248", Offset = "0x592248")]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public static event OnAfterRotateAction OnAfterRotate
		{
			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0xDCB714", Offset = "0xDCB714", VA = "0xDCB714")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592258", Offset = "0x592258")]
			add
			{
			}
			[Token(Token = "0x6001CBA")]
			[Address(RVA = "0xDCB7D4", Offset = "0xDCB7D4", VA = "0xDCB7D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592268", Offset = "0x592268")]
			remove
			{
			}
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xDCB894", Offset = "0xDCB894", VA = "0xDCB894")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xDCB8FC", Offset = "0xDCB8FC", VA = "0xDCB8FC", Slot = "4")]
		public virtual float GetAxisInput()
		{
			return default(float);
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xDCBAB4", Offset = "0xDCBAB4", VA = "0xDCBAB4", Slot = "5")]
		public virtual void DoSnapRotation(float xInput)
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xDCBC88", Offset = "0xDCBC88", VA = "0xDCBC88", Slot = "6")]
		public virtual bool RecentlySnapTurned()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xDCBCC4", Offset = "0xDCBCC4", VA = "0xDCBCC4", Slot = "7")]
		public virtual void DoSmoothRotation(float xInput)
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xDCBDB4", Offset = "0xDCBDB4", VA = "0xDCBDB4")]
		public PlayerRotation()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public enum TeleportControls
	{
		[Token(Token = "0x400251F")]
		ThumbstickRotate,
		[Token(Token = "0x4002520")]
		ThumbstickDown,
		[Token(Token = "0x4002521")]
		BButton
	}
	[Token(Token = "0x2000398")]
	public class PlayerTeleport : MonoBehaviour
	{
		[Token(Token = "0x20005C7")]
		public delegate void OnBeforeTeleportFadeAction();

		[Token(Token = "0x20005C8")]
		public delegate void OnBeforeTeleportAction();

		[Token(Token = "0x20005C9")]
		public delegate void OnAfterTeleportAction();

		[Token(Token = "0x20005CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573248", Offset = "0x573248")]
		private sealed class <doTeleport>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerTeleport <>4__this;

			[Token(Token = "0x400306A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 playerDestination;

			[Token(Token = "0x400306B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool rotatePlayer;

			[Token(Token = "0x400306C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion playerRotation;

			[Token(Token = "0x17000418")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024AA")]
				[Address(RVA = "0x869124", Offset = "0x869124", VA = "0x869124", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000419")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024AC")]
				[Address(RVA = "0x86916C", Offset = "0x86916C", VA = "0x86916C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024A7")]
			[Address(RVA = "0x868E80", Offset = "0x868E80", VA = "0x868E80")]
			[DebuggerHidden]
			public <doTeleport>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x60024A8")]
			[Address(RVA = "0x868EAC", Offset = "0x868EAC", VA = "0x868EAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024A9")]
			[Address(RVA = "0x868EB0", Offset = "0x868EB0", VA = "0x868EB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024AB")]
			[Address(RVA = "0x86912C", Offset = "0x86912C", VA = "0x86912C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x589694", Offset = "0x589694")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589694", Offset = "0x589694")]
		public LineRenderer TeleportLine;

		[Token(Token = "0x4002523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5896F4", Offset = "0x5896F4")]
		public Color ValidTeleport;

		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58972C", Offset = "0x58972C")]
		public Color InvalidTeleport;

		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x589764", Offset = "0x589764")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589764", Offset = "0x589764")]
		public ControllerHand HandSide;

		[Token(Token = "0x4002526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5897C4", Offset = "0x5897C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5897C4", Offset = "0x5897C4")]
		public Transform TeleportBeginTransform;

		[Token(Token = "0x4002527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589824", Offset = "0x589824")]
		public Transform TeleportBeginTransformAlt;

		[Token(Token = "0x4002528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58985C", Offset = "0x58985C")]
		public Transform TeleportDestination;

		[Token(Token = "0x4002529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589894", Offset = "0x589894")]
		public TeleportDestination DestinationObject;

		[Token(Token = "0x400252A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5898E0", Offset = "0x5898E0")]
		public GameObject TeleportMarker;

		[Token(Token = "0x400252B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589918", Offset = "0x589918")]
		public Transform DirectionIndicator;

		[Token(Token = "0x400252C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x589950", Offset = "0x589950")]
		public float MaxRange;

		[Token(Token = "0x400252D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589988", Offset = "0x589988")]
		public int SegmentCount;

		[Token(Token = "0x400252E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5899C0", Offset = "0x5899C0")]
		public float SimulationVelocity;

		[Token(Token = "0x400252F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5899F8", Offset = "0x5899F8")]
		public float SegmentScale;

		[Token(Token = "0x4002530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x589A30", Offset = "0x589A30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589A30", Offset = "0x589A30")]
		public LayerMask CollisionLayers;

		[Token(Token = "0x4002531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589A90", Offset = "0x589A90")]
		public LayerMask ValidLayers;

		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x589AC8", Offset = "0x589AC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589AC8", Offset = "0x589AC8")]
		public TeleportControls ControlType;

		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589B28", Offset = "0x589B28")]
		public bool AllowTeleportRotation;

		[Token(Token = "0x4002534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		private bool _reachThumbThreshold;

		[Token(Token = "0x4002535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x589B60", Offset = "0x589B60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589B60", Offset = "0x589B60")]
		public float MaxSlope;

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x589BC0", Offset = "0x589BC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589BC0", Offset = "0x589BC0")]
		public bool FadeScreenOnTeleport;

		[Token(Token = "0x4002537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589C20", Offset = "0x589C20")]
		public float TeleportFadeSpeed;

		[Token(Token = "0x4002538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589C58", Offset = "0x589C58")]
		public float TeleportDelay;

		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private CharacterController controller;

		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BNGPlayerController playerController;

		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private InputBridge input;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Transform cameraRig;

		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ScreenFader fader;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool aimingTeleport;

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool validTeleport;

		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		private bool teleportationEnabled;

		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int _invalidFrames;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float _initialLineWidth;

		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private bool setVariables;

		[Token(Token = "0x4002547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Collider _hitObject;

		[Token(Token = "0x4002548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 _hitVector;

		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float _hitAngle;

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private RaycastHit hit;

		[Token(Token = "0x170002E8")]
		private Transform teleportTransform
		{
			[Token(Token = "0x6001CC1")]
			[Address(RVA = "0xDCC09C", Offset = "0xDCC09C", VA = "0xDCC09C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E9")]
		private Vector2 handedThumbstickAxis
		{
			[Token(Token = "0x6001CC2")]
			[Address(RVA = "0xDCC0B8", Offset = "0xDCC0B8", VA = "0xDCC0B8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x14000019")]
		public static event OnBeforeTeleportFadeAction OnBeforeTeleportFade
		{
			[Token(Token = "0x6001CC3")]
			[Address(RVA = "0xDCC0F8", Offset = "0xDCC0F8", VA = "0xDCC0F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592278", Offset = "0x592278")]
			add
			{
			}
			[Token(Token = "0x6001CC4")]
			[Address(RVA = "0xDCC1B4", Offset = "0xDCC1B4", VA = "0xDCC1B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592288", Offset = "0x592288")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public static event OnBeforeTeleportAction OnBeforeTeleport
		{
			[Token(Token = "0x6001CC5")]
			[Address(RVA = "0xDCC270", Offset = "0xDCC270", VA = "0xDCC270")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592298", Offset = "0x592298")]
			add
			{
			}
			[Token(Token = "0x6001CC6")]
			[Address(RVA = "0xDCC330", Offset = "0xDCC330", VA = "0xDCC330")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5922A8", Offset = "0x5922A8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public static event OnAfterTeleportAction OnAfterTeleport
		{
			[Token(Token = "0x6001CC7")]
			[Address(RVA = "0xDCC3F0", Offset = "0xDCC3F0", VA = "0xDCC3F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5922B8", Offset = "0x5922B8")]
			add
			{
			}
			[Token(Token = "0x6001CC8")]
			[Address(RVA = "0xDCC4B0", Offset = "0xDCC4B0", VA = "0xDCC4B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5922C8", Offset = "0x5922C8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xDCC570", Offset = "0xDCC570", VA = "0xDCC570")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0xDCC574", Offset = "0xDCC574", VA = "0xDCC574")]
		private void setupVariables()
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0xDCC800", Offset = "0xDCC800", VA = "0xDCC800")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0xDCC964", Offset = "0xDCC964", VA = "0xDCC964")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xDCC868", Offset = "0xDCC868", VA = "0xDCC868")]
		public void DoCheckTeleport()
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xDCC954", Offset = "0xDCC954", VA = "0xDCC954")]
		public void TryOrHideTeleport()
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xDCD3A4", Offset = "0xDCD3A4", VA = "0xDCD3A4")]
		public void EnableTeleportation()
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xDCD3B0", Offset = "0xDCD3B0", VA = "0xDCD3B0")]
		public void DisableTeleportation()
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xDCC974", Offset = "0xDCC974", VA = "0xDCC974")]
		private void calculateParabola()
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xDCD3BC", Offset = "0xDCD3BC", VA = "0xDCD3BC")]
		private bool teleportClear()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xDCD340", Offset = "0xDCD340", VA = "0xDCD340")]
		private void hideTeleport()
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xDCD138", Offset = "0xDCD138", VA = "0xDCD138")]
		private void updateTeleport()
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xDCD5F8", Offset = "0xDCD5F8", VA = "0xDCD5F8")]
		private void rotateMarker()
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0xDCD18C", Offset = "0xDCD18C", VA = "0xDCD18C")]
		private void tryTeleport()
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xDCD8DC", Offset = "0xDCD8DC", VA = "0xDCD8DC", Slot = "4")]
		public virtual void BeforeTeleportFade()
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0xDCD9B0", Offset = "0xDCD9B0", VA = "0xDCD9B0", Slot = "5")]
		public virtual void BeforeTeleport()
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0xDCDA84", Offset = "0xDCDA84", VA = "0xDCDA84", Slot = "6")]
		public virtual void AfterTeleport()
		{
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0xDCD810", Offset = "0xDCD810", VA = "0xDCD810")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5922D8", Offset = "0x5922D8")]
		private IEnumerator doTeleport(Vector3 playerDestination, Quaternion playerRotation, bool rotatePlayer)
		{
			return null;
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0xDCDB94", Offset = "0xDCDB94", VA = "0xDCDB94")]
		public void TeleportPlayer(Vector3 destination, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0xDCDBC4", Offset = "0xDCDBC4", VA = "0xDCDBC4")]
		public void TeleportPlayerToTransform(Transform destination)
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xDCDC64", Offset = "0xDCDC64", VA = "0xDCDC64", Slot = "7")]
		public virtual bool KeyDownForTeleport()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xDCDE54", Offset = "0xDCDE54", VA = "0xDCDE54", Slot = "8")]
		public virtual bool KeyUpFromTeleport()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xDCDF58", Offset = "0xDCDF58", VA = "0xDCDF58")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xDCE06C", Offset = "0xDCE06C", VA = "0xDCE06C")]
		public PlayerTeleport()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class PointerEvents : MonoBehaviour, IPointerClickHandler, IEventSystemHandler, IPointerEnterHandler, IPointerExitHandler, IPointerDownHandler, IPointerUpHandler
	{
		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x589CC0", Offset = "0x589CC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589CC0", Offset = "0x589CC0")]
		public float MaxDistance;

		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x589D20", Offset = "0x589D20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589D20", Offset = "0x589D20")]
		public bool Enabled;

		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x589D80", Offset = "0x589D80")]
		public PointerEventDataEvent OnPointerClickEvent;

		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PointerEventDataEvent OnPointerEnterEvent;

		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PointerEventDataEvent OnPointerExitEvent;

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PointerEventDataEvent OnPointerDownEvent;

		[Token(Token = "0x4002551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PointerEventDataEvent OnPointerUpEvent;

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xAA1C14", Offset = "0xAA1C14", VA = "0xAA1C14", Slot = "9")]
		public virtual void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xAA1CA0", Offset = "0xAA1CA0", VA = "0xAA1CA0", Slot = "10")]
		public virtual void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xAA1D2C", Offset = "0xAA1D2C", VA = "0xAA1D2C", Slot = "11")]
		public virtual void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xAA1D9C", Offset = "0xAA1D9C", VA = "0xAA1D9C", Slot = "12")]
		public virtual void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xAA1E28", Offset = "0xAA1E28", VA = "0xAA1E28", Slot = "13")]
		public virtual void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xAA1E98", Offset = "0xAA1E98", VA = "0xAA1E98", Slot = "14")]
		public virtual bool DistanceExceeded(PointerEventData eventData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xAA1EB8", Offset = "0xAA1EB8", VA = "0xAA1EB8")]
		public PointerEvents()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public enum RemoteGrabType
	{
		[Token(Token = "0x4002553")]
		Trigger,
		[Token(Token = "0x4002554")]
		Raycast,
		[Token(Token = "0x4002555")]
		Spherecast
	}
	[Token(Token = "0x200039B")]
	public class RemoteGrabber : MonoBehaviour
	{
		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RemoteGrabType PhysicsCheckType;

		[Token(Token = "0x4002557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float RaycastLength;

		[Token(Token = "0x4002558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float SphereCastLength;

		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float SphereCastRadius;

		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask RemoteGrabLayers;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrabbablesInTrigger ParentGrabber;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider _lastColliderHit;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool ShowGizmos;

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xB98EEC", Offset = "0xB98EEC", VA = "0xB98EEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xB98FE0", Offset = "0xB98FE0", VA = "0xB98FE0", Slot = "4")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xB991E4", Offset = "0xB991E4", VA = "0xB991E4")]
		private void ObjectHit(Collider colliderHit)
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xB99364", Offset = "0xB99364", VA = "0xB99364")]
		public void RemovePreviousHitObject()
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xB9948C", Offset = "0xB9948C", VA = "0xB9948C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xB99694", Offset = "0xB99694", VA = "0xB99694")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xB9987C", Offset = "0xB9987C", VA = "0xB9987C")]
		public RemoteGrabber()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public class Slider : MonoBehaviour
	{
		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _slidePercentage;

		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FloatEvent onSliderChange;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastSliderPercentage;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float slideRangeLow;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float slideRangeHigh;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float slideRange;

		[Token(Token = "0x170002EA")]
		public float SlidePercentage
		{
			[Token(Token = "0x6001CEF")]
			[Address(RVA = "0x8CD938", Offset = "0x8CD938", VA = "0x8CD938")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x8CD940", Offset = "0x8CD940", VA = "0x8CD940")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x8CDA4C", Offset = "0x8CDA4C", VA = "0x8CDA4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x8CDAD8", Offset = "0x8CDAD8", VA = "0x8CDAD8", Slot = "4")]
		public virtual void OnSliderChange(float percentage)
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x8CDB48", Offset = "0x8CDB48", VA = "0x8CDB48")]
		public Slider()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public enum MovementVector
	{
		[Token(Token = "0x4002565")]
		HMD,
		[Token(Token = "0x4002566")]
		Controller
	}
	[Token(Token = "0x200039E")]
	public class SmoothLocomotion : MonoBehaviour
	{
		[Token(Token = "0x20005CB")]
		public delegate void OnBeforeMoveAction();

		[Token(Token = "0x20005CC")]
		public delegate void OnAfterMoveAction();

		[Token(Token = "0x20005CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573258", Offset = "0x573258")]
		private sealed class <Example>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400306D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400306E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400306F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SmoothLocomotion <>4__this;

			[Token(Token = "0x1700041A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024B8")]
				[Address(RVA = "0x8725D8", Offset = "0x8725D8", VA = "0x8725D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024BA")]
				[Address(RVA = "0x872620", Offset = "0x872620", VA = "0x872620", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024B5")]
			[Address(RVA = "0x8724B0", Offset = "0x8724B0", VA = "0x8724B0")]
			[DebuggerHidden]
			public <Example>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x60024B6")]
			[Address(RVA = "0x8724DC", Offset = "0x8724DC", VA = "0x8724DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024B7")]
			[Address(RVA = "0x8724E0", Offset = "0x8724E0", VA = "0x8724E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024B9")]
			[Address(RVA = "0x8725E0", Offset = "0x8725E0", VA = "0x8725E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x589DB8", Offset = "0x589DB8")]
		public float MovementSpeed;

		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589DF0", Offset = "0x589DF0")]
		public Transform ForwardDirection;

		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589E28", Offset = "0x589E28")]
		public List<InputAxis> inputAxis;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589E60", Offset = "0x589E60")]
		public InputActionReference MoveAction;

		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589E98", Offset = "0x589E98")]
		public bool RequireAppFocus;

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x589ED0", Offset = "0x589ED0")]
		public float SprintSpeed;

		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589F08", Offset = "0x589F08")]
		public List<ControllerBinding> SprintInput;

		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589F40", Offset = "0x589F40")]
		public InputActionReference SprintAction;

		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x589F78", Offset = "0x589F78")]
		public float StrafeSpeed;

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float StrafeSprintSpeed;

		[Token(Token = "0x4002571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x589FB0", Offset = "0x589FB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x589FB0", Offset = "0x589FB0")]
		public float JumpForce;

		[Token(Token = "0x4002572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A010", Offset = "0x58A010")]
		public List<ControllerBinding> JumpInput;

		[Token(Token = "0x4002573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A048", Offset = "0x58A048")]
		public InputActionReference JumpAction;

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58A080", Offset = "0x58A080")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A080", Offset = "0x58A080")]
		public bool AirControl;

		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A0E0", Offset = "0x58A0E0")]
		public float AirControlSpeed;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private BNGPlayerController playerController;

		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private CharacterController characterController;

		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float movementX;

		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float test;

		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float test2;

		[Token(Token = "0x400257B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float movementY;

		[Token(Token = "0x400257C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float movementZ;

		[Token(Token = "0x400257D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool movementDisabled;

		[Token(Token = "0x400257E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _verticalSpeed;

		[Token(Token = "0x4002581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float Magnitude;

		[Token(Token = "0x1400001C")]
		public static event OnBeforeMoveAction OnBeforeMove
		{
			[Token(Token = "0x6001CF4")]
			[Address(RVA = "0x8CDCB4", Offset = "0x8CDCB4", VA = "0x8CDCB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592338", Offset = "0x592338")]
			add
			{
			}
			[Token(Token = "0x6001CF5")]
			[Address(RVA = "0x8CDD70", Offset = "0x8CDD70", VA = "0x8CDD70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592348", Offset = "0x592348")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public static event OnAfterMoveAction OnAfterMove
		{
			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0x8CDE2C", Offset = "0x8CDE2C", VA = "0x8CDE2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592358", Offset = "0x592358")]
			add
			{
			}
			[Token(Token = "0x6001CF7")]
			[Address(RVA = "0x8CDEEC", Offset = "0x8CDEEC", VA = "0x8CDEEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592368", Offset = "0x592368")]
			remove
			{
			}
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x8CDFAC", Offset = "0x8CDFAC", VA = "0x8CDFAC", Slot = "4")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x8CDFF0", Offset = "0x8CDFF0", VA = "0x8CDFF0", Slot = "5")]
		public virtual void CheckControllerReferences()
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x8CE0E4", Offset = "0x8CE0E4", VA = "0x8CE0E4", Slot = "6")]
		public virtual void UpdateInputs()
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x8CE218", Offset = "0x8CE218", VA = "0x8CE218", Slot = "7")]
		public virtual Vector2 GetMovementAxis()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x8CE534", Offset = "0x8CE534", VA = "0x8CE534", Slot = "8")]
		public virtual void MoveCharacter()
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x8CE7DC", Offset = "0x8CE7DC", VA = "0x8CE7DC", Slot = "9")]
		public virtual void MoveCharacter(Vector3 motion)
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x8CEA10", Offset = "0x8CEA10", VA = "0x8CEA10", Slot = "10")]
		public virtual bool CheckJump()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x8CEBD4", Offset = "0x8CEBD4", VA = "0x8CEBD4", Slot = "11")]
		public virtual bool CheckSprint()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x8CED5C", Offset = "0x8CED5C", VA = "0x8CED5C", Slot = "12")]
		public virtual void EnableMovement()
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x8CED64", Offset = "0x8CED64", VA = "0x8CED64", Slot = "13")]
		public virtual void DisableMovement()
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x8CE770", Offset = "0x8CE770", VA = "0x8CE770")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x592378", Offset = "0x592378")]
		private IEnumerator Example()
		{
			return null;
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x8CED70", Offset = "0x8CED70", VA = "0x8CED70")]
		public SmoothLocomotion()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class SnapZone : MonoBehaviour
	{
		[Token(Token = "0x4002582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58A138", Offset = "0x58A138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A138", Offset = "0x58A138")]
		public Grabbable HeldItem;

		[Token(Token = "0x4002583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58A198", Offset = "0x58A198")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A198", Offset = "0x58A198")]
		public bool CanDropItem;

		[Token(Token = "0x4002584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A1F8", Offset = "0x58A1F8")]
		public bool CanSwapItem;

		[Token(Token = "0x4002585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A230", Offset = "0x58A230")]
		public bool CanRemoveItem;

		[Token(Token = "0x4002586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A268", Offset = "0x58A268")]
		public float ScaleItem;

		[Token(Token = "0x4002587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _scaleTo;

		[Token(Token = "0x4002588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool DisableColliders;

		[Token(Token = "0x4002589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Collider> disabledColliders;

		[Token(Token = "0x400258A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A2A0", Offset = "0x58A2A0")]
		public bool DuplicateItemOnGrab;

		[Token(Token = "0x400258B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A2D8", Offset = "0x58A2D8")]
		public float MaxDropTime;

		[Token(Token = "0x400258C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float LastSnapTime;

		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58A320", Offset = "0x58A320")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A320", Offset = "0x58A320")]
		public List<string> OnlyAllowNames;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A380", Offset = "0x58A380")]
		public List<string> ExcludeTransformNames;

		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58A3B8", Offset = "0x58A3B8")]
		public AudioClip SoundOnSnap;

		[Token(Token = "0x4002590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip SoundOnUnsnap;

		[Token(Token = "0x4002591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58A3F0", Offset = "0x58A3F0")]
		public GrabbableEvent OnSnapEvent;

		[Token(Token = "0x4002592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GrabbableEvent OnDetachEvent;

		[Token(Token = "0x4002593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GrabbablesInTrigger gZone;

		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rigidbody heldItemRigid;

		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool heldItemWasKinematic;

		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Grabbable trackedItem;

		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Grabbable ClosestGrabbable;

		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private SnapZoneOffset offset;

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x8CEF04", Offset = "0x8CEF04", VA = "0x8CEF04")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x8CF4F8", Offset = "0x8CF4F8", VA = "0x8CF4F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x8CF880", Offset = "0x8CF880", VA = "0x8CF880")]
		private Grabbable getClosestGrabbable()
		{
			return null;
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x8CEFB8", Offset = "0x8CEFB8", VA = "0x8CEFB8")]
		public void GrabGrabbable(Grabbable grab)
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x8D0130", Offset = "0x8D0130", VA = "0x8D0130")]
		private void disableGrabbable(Grabbable grab)
		{
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x8D023C", Offset = "0x8D023C", VA = "0x8D023C")]
		public void GrabEquipped(Grabber grabber)
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x8D0524", Offset = "0x8D0524", VA = "0x8D0524", Slot = "4")]
		public virtual bool CanBeRemoved()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x8CFD60", Offset = "0x8CFD60", VA = "0x8CFD60")]
		public void ReleaseAll()
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x8D058C", Offset = "0x8D058C", VA = "0x8D058C")]
		public SnapZone()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public class SnapZoneOffset : MonoBehaviour
	{
		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 LocalPositionOffset;

		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 LocalRotationOffset;

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x8D062C", Offset = "0x8D062C", VA = "0x8D062C")]
		public SnapZoneOffset()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class SnapZoneScale : MonoBehaviour
	{
		[Token(Token = "0x400259B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A438", Offset = "0x58A438")]
		public float Scale;

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x8D08F8", Offset = "0x8D08F8", VA = "0x8D08F8")]
		public SnapZoneScale()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	public class SteeringWheel : GrabbableEvents
	{
		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58A470", Offset = "0x58A470")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A470", Offset = "0x58A470")]
		public float MinAngle;

		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A4D0", Offset = "0x58A4D0")]
		public float MaxAngle;

		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58A508", Offset = "0x58A508")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A508", Offset = "0x58A508")]
		public Transform RotatorObject;

		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58A568", Offset = "0x58A568")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A568", Offset = "0x58A568")]
		public float RotationSpeed;

		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58A5C8", Offset = "0x58A5C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A5C8", Offset = "0x58A5C8")]
		public bool AllowTwoHanded;

		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58A628", Offset = "0x58A628")]
		public bool ReturnToCenter;

		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float ReturnToCenterSpeed;

		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58A660", Offset = "0x58A660")]
		public Text DebugText;

		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58A698", Offset = "0x58A698")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A698", Offset = "0x58A698")]
		public FloatEvent onAngleChange;

		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A6F8", Offset = "0x58A6F8")]
		public FloatEvent onValueChange;

		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58A730", Offset = "0x58A730")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A730", Offset = "0x58A730")]
		public bool ShowEditorGizmos;

		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected Vector3 rotatePosition;

		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3 previousPrimaryPosition;

		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected Vector3 previousSecondaryPosition;

		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected float targetAngle;

		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected float previousTargetAngle;

		[Token(Token = "0x40025AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected float smoothedAngle;

		[Token(Token = "0x170002EB")]
		public float Angle
		{
			[Token(Token = "0x6001D0F")]
			[Address(RVA = "0xB54174", Offset = "0xB54174", VA = "0xB54174")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002EC")]
		public float RawAngle
		{
			[Token(Token = "0x6001D10")]
			[Address(RVA = "0xB54184", Offset = "0xB54184", VA = "0xB54184")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002ED")]
		public float ScaleValue
		{
			[Token(Token = "0x6001D11")]
			[Address(RVA = "0xB5418C", Offset = "0xB5418C", VA = "0xB5418C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002EE")]
		public float ScaleValueInverted
		{
			[Token(Token = "0x6001D12")]
			[Address(RVA = "0xB541CC", Offset = "0xB541CC", VA = "0xB541CC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002EF")]
		public float AngleInverted
		{
			[Token(Token = "0x6001D13")]
			[Address(RVA = "0xB541E4", Offset = "0xB541E4", VA = "0xB541E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002F0")]
		public Grabber PrimaryGrabber
		{
			[Token(Token = "0x6001D14")]
			[Address(RVA = "0xB54208", Offset = "0xB54208", VA = "0xB54208")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F1")]
		public Grabber SecondaryGrabber
		{
			[Token(Token = "0x6001D15")]
			[Address(RVA = "0xB542C4", Offset = "0xB542C4", VA = "0xB542C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xB5437C", Offset = "0xB5437C", VA = "0xB5437C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xB54438", Offset = "0xB54438", VA = "0xB54438", Slot = "27")]
		public virtual void UpdateAngleCalculations()
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0xB5479C", Offset = "0xB5479C", VA = "0xB5479C")]
		public float GetRelativeAngle(Vector3 position1, Vector3 position2)
		{
			return default(float);
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0xB5481C", Offset = "0xB5481C", VA = "0xB5481C", Slot = "28")]
		public virtual void ApplyAngleToSteeringWheel(float angle)
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0xB54844", Offset = "0xB54844", VA = "0xB54844", Slot = "29")]
		public virtual void UpdatePreviewText()
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xB54984", Offset = "0xB54984", VA = "0xB54984", Slot = "30")]
		public virtual void CallEvents()
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xB54A08", Offset = "0xB54A08", VA = "0xB54A08", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xB54B1C", Offset = "0xB54B1C", VA = "0xB54B1C", Slot = "31")]
		public virtual void ReturnToCenterAngle()
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xB5420C", Offset = "0xB5420C", VA = "0xB5420C")]
		public Grabber GetPrimaryGrabber()
		{
			return null;
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xB542C8", Offset = "0xB542C8", VA = "0xB542C8")]
		public Grabber GetSecondaryGrabber()
		{
			return null;
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xB54BE0", Offset = "0xB54BE0", VA = "0xB54BE0", Slot = "32")]
		public virtual void UpdatePreviousAngle(float angle)
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xB54BE8", Offset = "0xB54BE8", VA = "0xB54BE8", Slot = "33")]
		public virtual float GetScaledValue(float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xB54C08", Offset = "0xB54C08", VA = "0xB54C08")]
		public SteeringWheel()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public class TrackedDevice : MonoBehaviour
	{
		[Token(Token = "0x40025AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TrackableDevice Device;

		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected UnityEngine.XR.InputDevice deviceToTrack;

		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Vector3 initialLocalPosition;

		[Token(Token = "0x40025B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected Quaternion initialLocalRotation;

		[Token(Token = "0x40025B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Vector3 currentLocalPosition;

		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Quaternion currentLocalRotation;

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xA2785C", Offset = "0xA2785C", VA = "0xA2785C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xA278B8", Offset = "0xA278B8", VA = "0xA278B8", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xA2792C", Offset = "0xA2792C", VA = "0xA2792C", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xA279A0", Offset = "0xA279A0", VA = "0xA279A0", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xA279D4", Offset = "0xA279D4", VA = "0xA279D4", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xA279E0", Offset = "0xA279E0", VA = "0xA279E0", Slot = "9")]
		public virtual void RefreshDeviceStatus()
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xA27AF0", Offset = "0xA27AF0", VA = "0xA27AF0", Slot = "10")]
		public virtual void UpdateDevice()
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xA27D14", Offset = "0xA27D14", VA = "0xA27D14", Slot = "11")]
		protected virtual void OnBeforeRender()
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xA27D20", Offset = "0xA27D20", VA = "0xA27D20")]
		public TrackedDevice()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	public enum TrackableDevice
	{
		[Token(Token = "0x40025B4")]
		HMD,
		[Token(Token = "0x40025B5")]
		LeftController,
		[Token(Token = "0x40025B6")]
		RightController
	}
	[Token(Token = "0x20003A5")]
	public class Arrow : MonoBehaviour
	{
		[Token(Token = "0x20005CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573268", Offset = "0x573268")]
		private sealed class <QueueDestroy>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Arrow <>4__this;

			[Token(Token = "0x1700041C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024BE")]
				[Address(RVA = "0x91AC9C", Offset = "0x91AC9C", VA = "0x91AC9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024C0")]
				[Address(RVA = "0x91ACE4", Offset = "0x91ACE4", VA = "0x91ACE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024BB")]
			[Address(RVA = "0x91AAE0", Offset = "0x91AAE0", VA = "0x91AAE0")]
			[DebuggerHidden]
			public <QueueDestroy>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60024BC")]
			[Address(RVA = "0x91AB0C", Offset = "0x91AB0C", VA = "0x91AB0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024BD")]
			[Address(RVA = "0x91AB10", Offset = "0x91AB10", VA = "0x91AB10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024BF")]
			[Address(RVA = "0x91ACA4", Offset = "0x91ACA4", VA = "0x91ACA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573278", Offset = "0x573278")]
		private sealed class <ReEnableCollider>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Arrow <>4__this;

			[Token(Token = "0x4003076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <waitFrames>5__2;

			[Token(Token = "0x4003077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <x>5__3;

			[Token(Token = "0x1700041E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024C4")]
				[Address(RVA = "0x91ADEC", Offset = "0x91ADEC", VA = "0x91ADEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024C6")]
				[Address(RVA = "0x91AE34", Offset = "0x91AE34", VA = "0x91AE34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024C1")]
			[Address(RVA = "0x91ACEC", Offset = "0x91ACEC", VA = "0x91ACEC")]
			[DebuggerHidden]
			public <ReEnableCollider>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60024C2")]
			[Address(RVA = "0x91AD18", Offset = "0x91AD18", VA = "0x91AD18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024C3")]
			[Address(RVA = "0x91AD1C", Offset = "0x91AD1C", VA = "0x91AD1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024C5")]
			[Address(RVA = "0x91ADF4", Offset = "0x91ADF4", VA = "0x91ADF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40025B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody rb;

		[Token(Token = "0x40025B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Grabbable grab;

		[Token(Token = "0x40025B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool Flying;

		[Token(Token = "0x40025BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ZVel;

		[Token(Token = "0x40025BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Collider ShaftCollider;

		[Token(Token = "0x40025BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource impactSound;

		[Token(Token = "0x40025BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float flightTime;

		[Token(Token = "0x40025BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float destroyTime;

		[Token(Token = "0x40025BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine queueDestroy;

		[Token(Token = "0x40025C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Projectile ProjectileObject;

		[Token(Token = "0x40025C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float arrowDamage;

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x8820B4", Offset = "0x8820B4", VA = "0x8820B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x88222C", Offset = "0x88222C", VA = "0x88222C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x88244C", Offset = "0x88244C", VA = "0x88244C")]
		public void ShootArrow(Vector3 shotForce)
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x8825BC", Offset = "0x8825BC", VA = "0x8825BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5923D8", Offset = "0x5923D8")]
		private IEnumerator QueueDestroy()
		{
			return null;
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x882550", Offset = "0x882550", VA = "0x882550")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x592438", Offset = "0x592438")]
		private IEnumerator ReEnableCollider()
		{
			return null;
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x882628", Offset = "0x882628", VA = "0x882628")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x882B88", Offset = "0x882B88", VA = "0x882B88")]
		private void tryStickArrow(Collision collision)
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x882F50", Offset = "0x882F50", VA = "0x882F50")]
		private void playSoundInterval(float fromSeconds, float toSeconds)
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x88306C", Offset = "0x88306C", VA = "0x88306C")]
		public Arrow()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public class ArrowGrabArea : MonoBehaviour
	{
		[Token(Token = "0x40025C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Bow theBow;

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x88307C", Offset = "0x88307C", VA = "0x88307C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x8830EC", Offset = "0x8830EC", VA = "0x8830EC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x8832B8", Offset = "0x8832B8", VA = "0x8832B8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x8833E8", Offset = "0x8833E8", VA = "0x8833E8")]
		public ArrowGrabArea()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public class Bow : GrabbableEvents
	{
		[Token(Token = "0x40025C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58A790", Offset = "0x58A790")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A790", Offset = "0x58A790")]
		public float BowForce;

		[Token(Token = "0x40025C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A7F0", Offset = "0x58A7F0")]
		public bool AlignBowToArrow;

		[Token(Token = "0x40025C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A828", Offset = "0x58A828")]
		public Transform BowModel;

		[Token(Token = "0x40025C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58A860", Offset = "0x58A860")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A860", Offset = "0x58A860")]
		public Transform ArrowRest;

		[Token(Token = "0x40025C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool CanGrabArrowFromKnock;

		[Token(Token = "0x40025C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A8C0", Offset = "0x58A8C0")]
		public string ArrowPrefabName;

		[Token(Token = "0x40025C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58A8F8", Offset = "0x58A8F8")]
		public Transform ArrowRestLeftHanded;

		[Token(Token = "0x40025CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform ArrowKnock;

		[Token(Token = "0x40025CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58A930", Offset = "0x58A930")]
		public bool IgnoreXPosition;

		[Token(Token = "0x40025CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool IgnoreYPosition;

		[Token(Token = "0x40025CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool AllowNegativeZ;

		[Token(Token = "0x40025CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58A968", Offset = "0x58A968")]
		public bool CanGrabArrow;

		[Token(Token = "0x40025CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Grabber ClosestGrabber;

		[Token(Token = "0x40025D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Arrow GrabbedArrow;

		[Token(Token = "0x40025D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Grabbable arrowGrabbable;

		[Token(Token = "0x40025D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public Grabber arrowGrabber;

		[Token(Token = "0x40025D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Vector3 LastValidPosition;

		[Token(Token = "0x40025D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58A9E0", Offset = "0x58A9E0")]
		public float MaxStringDistance;

		[Token(Token = "0x40025D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float StringDistance;

		[Token(Token = "0x40025D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AA18", Offset = "0x58AA18")]
		private float <DrawPercent>k__BackingField;

		[Token(Token = "0x40025D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float _lastDrawPercent;

		[Token(Token = "0x40025D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float _lastDrawHaptic;

		[Token(Token = "0x40025D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float _lastDrawHapticTime;

		[Token(Token = "0x40025DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool playedDrawSound;

		[Token(Token = "0x40025DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 initialKnockPosition;

		[Token(Token = "0x40025DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool holdingArrow;

		[Token(Token = "0x40025DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Grabbable bowGrabbable;

		[Token(Token = "0x40025DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58AA28", Offset = "0x58AA28")]
		public Text PercentageUI;

		[Token(Token = "0x40025DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<DrawDefinition> drawDefs;

		[Token(Token = "0x40025E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private AudioSource audioSource;

		[Token(Token = "0x40025E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Vector3 BowUp;

		[Token(Token = "0x40025E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float AlignBowSpeed;

		[Token(Token = "0x170002F2")]
		public float DrawPercent
		{
			[Token(Token = "0x6001D39")]
			[Address(RVA = "0x928430", Offset = "0x928430", VA = "0x928430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592498", Offset = "0x592498")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D3A")]
			[Address(RVA = "0x928438", Offset = "0x928438", VA = "0x928438")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5924A8", Offset = "0x5924A8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x928440", Offset = "0x928440", VA = "0x928440")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x92873C", Offset = "0x92873C", VA = "0x92873C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x929028", Offset = "0x929028", VA = "0x929028")]
		private Transform getArrowRest()
		{
			return null;
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x928F9C", Offset = "0x928F9C", VA = "0x928F9C")]
		private bool canGrabArrowFromKnock()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x92957C", Offset = "0x92957C", VA = "0x92957C")]
		private float getGrabArrowInput()
		{
			return default(float);
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x9296D8", Offset = "0x9296D8", VA = "0x9296D8")]
		private float getGripInput(ControllerHand handSide)
		{
			return default(float);
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x929694", Offset = "0x929694", VA = "0x929694")]
		private float getTriggerInput(ControllerHand handSide)
		{
			return default(float);
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x9292DC", Offset = "0x9292DC", VA = "0x9292DC")]
		private void setKnockPosition()
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0x92951C", Offset = "0x92951C", VA = "0x92951C")]
		private void checkDrawSound()
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x928AE0", Offset = "0x928AE0", VA = "0x928AE0")]
		private void updateDrawDistance()
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x928C30", Offset = "0x928C30", VA = "0x928C30")]
		private void checkBowHaptics()
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x928EF4", Offset = "0x928EF4", VA = "0x928EF4")]
		private void resetStringPosition()
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x929734", Offset = "0x929734", VA = "0x929734", Slot = "27")]
		protected virtual void alignArrow()
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x929860", Offset = "0x929860", VA = "0x929860", Slot = "28")]
		protected virtual void alignBow()
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0x929BD4", Offset = "0x929BD4", VA = "0x929BD4", Slot = "29")]
		public virtual void ResetBowAlignment()
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x929128", Offset = "0x929128", VA = "0x929128")]
		public void GrabArrow(Arrow arrow)
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0x928DA8", Offset = "0x928DA8", VA = "0x928DA8")]
		public void ReleaseArrow()
		{
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0x929CA0", Offset = "0x929CA0", VA = "0x929CA0", Slot = "6")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0x929C8C", Offset = "0x929C8C", VA = "0x929C8C")]
		private void resetArrowValues()
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0x929CD0", Offset = "0x929CD0", VA = "0x929CD0")]
		private void playSoundInterval(float fromSeconds, float toSeconds, float volume)
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0x92971C", Offset = "0x92971C", VA = "0x92971C")]
		private void playBowDraw()
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x929C70", Offset = "0x929C70", VA = "0x929C70")]
		private void playBowRelease()
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x929E10", Offset = "0x929E10", VA = "0x929E10")]
		public Bow()
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x929EA0", Offset = "0x929EA0", VA = "0x929EA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5924B8", Offset = "0x5924B8")]
		private bool <checkBowHaptics>b__43_0(DrawDefinition x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003A8")]
	public class DrawDefinition
	{
		[Token(Token = "0x40025E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AA60", Offset = "0x58AA60")]
		private float <DrawPercentage>k__BackingField;

		[Token(Token = "0x40025E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AA70", Offset = "0x58AA70")]
		private float <HapticAmplitude>k__BackingField;

		[Token(Token = "0x40025E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58AA80", Offset = "0x58AA80")]
		private float <HapticFrequency>k__BackingField;

		[Token(Token = "0x170002F3")]
		public float DrawPercentage
		{
			[Token(Token = "0x6001D53")]
			[Address(RVA = "0xA1EA54", Offset = "0xA1EA54", VA = "0xA1EA54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5924C8", Offset = "0x5924C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D54")]
			[Address(RVA = "0xA1EA5C", Offset = "0xA1EA5C", VA = "0xA1EA5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5924D8", Offset = "0x5924D8")]
			set
			{
			}
		}

		[Token(Token = "0x170002F4")]
		public float HapticAmplitude
		{
			[Token(Token = "0x6001D55")]
			[Address(RVA = "0xA1EA64", Offset = "0xA1EA64", VA = "0xA1EA64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5924E8", Offset = "0x5924E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D56")]
			[Address(RVA = "0xA1EA6C", Offset = "0xA1EA6C", VA = "0xA1EA6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5924F8", Offset = "0x5924F8")]
			set
			{
			}
		}

		[Token(Token = "0x170002F5")]
		public float HapticFrequency
		{
			[Token(Token = "0x6001D57")]
			[Address(RVA = "0xA1EA74", Offset = "0xA1EA74", VA = "0xA1EA74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592508", Offset = "0x592508")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D58")]
			[Address(RVA = "0xA1EA7C", Offset = "0xA1EA7C", VA = "0xA1EA7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592518", Offset = "0x592518")]
			set
			{
			}
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xA1EA84", Offset = "0xA1EA84", VA = "0xA1EA84")]
		public DrawDefinition()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public class BowArm : MonoBehaviour
	{
		[Token(Token = "0x40025E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Bow BowItem;

		[Token(Token = "0x40025E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float BowPercentStart;

		[Token(Token = "0x40025E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RotateDegrees;

		[Token(Token = "0x40025E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Speed;

		[Token(Token = "0x40025EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion _startRotation;

		[Token(Token = "0x40025EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion _endRotation;

		[Token(Token = "0x40025EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool RotateX;

		[Token(Token = "0x40025ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool RotateZ;

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x929ED8", Offset = "0x929ED8", VA = "0x929ED8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0x92A000", Offset = "0x92A000", VA = "0x92A000")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x92A13C", Offset = "0x92A13C", VA = "0x92A13C")]
		public BowArm()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public class BulletHole : MonoBehaviour
	{
		[Token(Token = "0x40025EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform BulletHoleDecal;

		[Token(Token = "0x40025EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaxScale;

		[Token(Token = "0x40025F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float MinScale;

		[Token(Token = "0x40025F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool RandomYRotation;

		[Token(Token = "0x40025F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float DestroyTime;

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x92AE78", Offset = "0x92AE78", VA = "0x92AE78")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0x92B024", Offset = "0x92B024", VA = "0x92B024")]
		public void TryAttachTo(Collider col)
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0x92B18C", Offset = "0x92B18C", VA = "0x92B18C")]
		private bool transformIsEqualScale(Transform theTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x92B208", Offset = "0x92B208", VA = "0x92B208")]
		private void DestroySelf()
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x92B2A0", Offset = "0x92B2A0", VA = "0x92B2A0")]
		public BulletHole()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class CustomCenterOfMass : MonoBehaviour
	{
		[Token(Token = "0x40025F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58AA90", Offset = "0x58AA90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58AA90", Offset = "0x58AA90")]
		public Vector3 CenterOfMass;

		[Token(Token = "0x40025F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58AAF0", Offset = "0x58AAF0")]
		public Transform CenterOfMassTransform;

		[Token(Token = "0x40025F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58AB28", Offset = "0x58AB28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58AB28", Offset = "0x58AB28")]
		public bool ShowGizmo;

		[Token(Token = "0x40025F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody rigid;

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xA151FC", Offset = "0xA151FC", VA = "0xA151FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xA1526C", Offset = "0xA1526C", VA = "0xA1526C", Slot = "4")]
		public virtual void SetCenterOfMass(Vector3 center)
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xA15328", Offset = "0xA15328", VA = "0xA15328", Slot = "5")]
		protected virtual Vector3 getThisCenterOfMass()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xA153BC", Offset = "0xA153BC", VA = "0xA153BC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xA154F4", Offset = "0xA154F4", VA = "0xA154F4")]
		public CustomCenterOfMass()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public class DrawerSound : MonoBehaviour
	{
		[Token(Token = "0x40025F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip DrawerOpenSound;

		[Token(Token = "0x40025F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DrawerOpenValue;

		[Token(Token = "0x40025F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip DrawerCloseSound;

		[Token(Token = "0x40025FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float DrawerCloseValue;

		[Token(Token = "0x40025FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool playedOpenSound;

		[Token(Token = "0x40025FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool playedCloseSound;

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xA1EA8C", Offset = "0xA1EA8C", VA = "0xA1EA8C")]
		public void OnDrawerUpdate(float drawerValue)
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xA1EC38", Offset = "0xA1EC38", VA = "0xA1EC38")]
		public DrawerSound()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public class Explosive : MonoBehaviour
	{
		[Token(Token = "0x20005D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573288", Offset = "0x573288")]
		private sealed class <explosionRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400307A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Explosive <>4__this;

			[Token(Token = "0x17000420")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024CA")]
				[Address(RVA = "0x91CAE8", Offset = "0x91CAE8", VA = "0x91CAE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000421")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024CC")]
				[Address(RVA = "0x91CB30", Offset = "0x91CB30", VA = "0x91CB30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024C7")]
			[Address(RVA = "0x91C690", Offset = "0x91C690", VA = "0x91C690")]
			[DebuggerHidden]
			public <explosionRoutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60024C8")]
			[Address(RVA = "0x91C6BC", Offset = "0x91C6BC", VA = "0x91C6BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024C9")]
			[Address(RVA = "0x91C6C0", Offset = "0x91C6C0", VA = "0x91C6C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024CB")]
			[Address(RVA = "0x91CAF0", Offset = "0x91CAF0", VA = "0x91CAF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573298", Offset = "0x573298")]
		private sealed class <dealDelayedDamaged>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400307B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400307C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400307D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delayTime;

			[Token(Token = "0x400307E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Damageable damageable;

			[Token(Token = "0x400307F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Explosive <>4__this;

			[Token(Token = "0x17000422")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024D0")]
				[Address(RVA = "0x91C640", Offset = "0x91C640", VA = "0x91C640", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000423")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024D2")]
				[Address(RVA = "0x91C688", Offset = "0x91C688", VA = "0x91C688", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024CD")]
			[Address(RVA = "0x91C550", Offset = "0x91C550", VA = "0x91C550")]
			[DebuggerHidden]
			public <dealDelayedDamaged>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60024CE")]
			[Address(RVA = "0x91C57C", Offset = "0x91C57C", VA = "0x91C57C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024CF")]
			[Address(RVA = "0x91C580", Offset = "0x91C580", VA = "0x91C580", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024D1")]
			[Address(RVA = "0x91C648", Offset = "0x91C648", VA = "0x91C648", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40025FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58AB88", Offset = "0x58AB88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58AB88", Offset = "0x58AB88")]
		public float ExplosionRadius;

		[Token(Token = "0x40025FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58ABE8", Offset = "0x58ABE8")]
		public float ExplosionDamage;

		[Token(Token = "0x40025FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58AC20", Offset = "0x58AC20")]
		public float ExplosionForce;

		[Token(Token = "0x4002600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58AC58", Offset = "0x58AC58")]
		public float ExplosiveUpwardsModifier;

		[Token(Token = "0x4002601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58AC90", Offset = "0x58AC90")]
		public bool ShowExplosionRadius;

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x8AE2DC", Offset = "0x8AE2DC", VA = "0x8AE2DC", Slot = "4")]
		public virtual void DoExplosion()
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x8AE308", Offset = "0x8AE308", VA = "0x8AE308")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x592528", Offset = "0x592528")]
		private IEnumerator explosionRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x8AE374", Offset = "0x8AE374", VA = "0x8AE374")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x592588", Offset = "0x592588")]
		private IEnumerator dealDelayedDamaged(Damageable damageable, float delayTime)
		{
			return null;
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0x8AE3FC", Offset = "0x8AE3FC", VA = "0x8AE3FC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x8AE460", Offset = "0x8AE460", VA = "0x8AE460")]
		public Explosive()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public static class ExtensionMethods
	{
		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0x8AFA60", Offset = "0x8AFA60", VA = "0x8AFA60")]
		public static bool GetDown(this ControllerBinding binding)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003AF")]
	public class FPSText : MonoBehaviour
	{
		[Token(Token = "0x4002602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text text;

		[Token(Token = "0x4002603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float deltaTime;

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0x8B1108", Offset = "0x8B1108", VA = "0x8B1108")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x8B115C", Offset = "0x8B115C", VA = "0x8B115C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x8B1250", Offset = "0x8B1250", VA = "0x8B1250")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x8B1320", Offset = "0x8B1320", VA = "0x8B1320")]
		public FPSText()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public class Flashlight : GrabbableEvents
	{
		[Token(Token = "0x4002604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Light SpotLight;

		[Token(Token = "0x4002605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform LightSwitch;

		[Token(Token = "0x4002606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 originalSwitchPosition;

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x8B3234", Offset = "0x8B3234", VA = "0x8B3234")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x8B3278", Offset = "0x8B3278", VA = "0x8B3278", Slot = "16")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0x8B32EC", Offset = "0x8B32EC", VA = "0x8B32EC", Slot = "18")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x8B3340", Offset = "0x8B3340", VA = "0x8B3340")]
		public Flashlight()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public class GrappleShot : GrabbableEvents
	{
		[Token(Token = "0x4002607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float MaxRange;

		[Token(Token = "0x4002608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float GrappleReelForce;

		[Token(Token = "0x4002609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MinReelDistance;

		[Token(Token = "0x400260A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public LayerMask GrappleLayers;

		[Token(Token = "0x400260B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform MuzzleTransform;

		[Token(Token = "0x400260C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform HitTargetPrefab;

		[Token(Token = "0x400260D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LineRenderer GrappleLine;

		[Token(Token = "0x400260E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LineRenderer HelperLine;

		[Token(Token = "0x400260F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip GrappleShotSound;

		[Token(Token = "0x4002610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool grappling;

		[Token(Token = "0x4002611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool wasGrappling;

		[Token(Token = "0x4002612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CharacterController characterController;

		[Token(Token = "0x4002613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x4002614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PlayerGravity playerGravity;

		[Token(Token = "0x4002615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PlayerClimbing playerClimbing;

		[Token(Token = "0x4002616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private AudioSource audioSource;

		[Token(Token = "0x4002617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float currentGrappleDistance;

		[Token(Token = "0x4002618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool validTargetFound;

		[Token(Token = "0x4002619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		private bool isDynamic;

		[Token(Token = "0x400261A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Rigidbody grappleTargetRigid;

		[Token(Token = "0x400261B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider grappleTargetCollider;

		[Token(Token = "0x400261C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform grappleTargetParent;

		[Token(Token = "0x400261D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool requireRelease;

		[Token(Token = "0x400261E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool climbing;

		[Token(Token = "0x400261F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Climbable ClimbHelper;

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xE470E8", Offset = "0xE470E8", VA = "0xE470E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xE47288", Offset = "0xE47288", VA = "0xE47288")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xE47974", Offset = "0xE47974", VA = "0xE47974", Slot = "16")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xE479FC", Offset = "0xE479FC", VA = "0xE479FC")]
		private void updateGrappleDistance()
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xE480F8", Offset = "0xE480F8", VA = "0xE480F8", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xE48100", Offset = "0xE48100", VA = "0xE48100", Slot = "6")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xE47F60", Offset = "0xE47F60", VA = "0xE47F60")]
		private void onReleaseGrapple()
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xE47310", Offset = "0xE47310", VA = "0xE47310")]
		private void drawGrappleHelper()
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xE4782C", Offset = "0xE4782C", VA = "0xE4782C")]
		private void drawGrappleLine()
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xE478B8", Offset = "0xE478B8", VA = "0xE478B8")]
		private void hideGrappleLine()
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xE481C8", Offset = "0xE481C8", VA = "0xE481C8")]
		private void showGrappleHelper(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xE476F8", Offset = "0xE476F8", VA = "0xE476F8")]
		private void hideGrappleHelper()
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xE47A8C", Offset = "0xE47A8C", VA = "0xE47A8C")]
		private void reelInGrapple(float triggerValue)
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xE47E60", Offset = "0xE47E60", VA = "0xE47E60")]
		private void shootGrapple()
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xE48370", Offset = "0xE48370", VA = "0xE48370")]
		private void dropGrapple()
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xE48128", Offset = "0xE48128", VA = "0xE48128")]
		private void changeGravity(bool gravityOn)
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xE4837C", Offset = "0xE4837C", VA = "0xE4837C")]
		public GrappleShot()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public class HandJet : GrabbableEvents
	{
		[Token(Token = "0x4002620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float JetForce;

		[Token(Token = "0x4002621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem JetFX;

		[Token(Token = "0x4002622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CharacterController characterController;

		[Token(Token = "0x4002623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x4002624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PlayerGravity playerGravity;

		[Token(Token = "0x4002625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource audioSource;

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xE4B928", Offset = "0xE4B928", VA = "0xE4B928")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xE4BAA4", Offset = "0xE4BAA4", VA = "0xE4BAA4", Slot = "16")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xE4BE6C", Offset = "0xE4BE6C", VA = "0xE4BE6C", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xE4BE74", Offset = "0xE4BE74", VA = "0xE4BE74")]
		public void ChangeGravity(bool gravityOn)
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xE4BF14", Offset = "0xE4BF14", VA = "0xE4BF14", Slot = "6")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xE4BAF4", Offset = "0xE4BAF4", VA = "0xE4BAF4")]
		private void doJet(float triggerValue)
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xE4BDA4", Offset = "0xE4BDA4", VA = "0xE4BDA4")]
		private void stopJet()
		{
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xE4BF3C", Offset = "0xE4BF3C", VA = "0xE4BF3C", Slot = "18")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xE4BF64", Offset = "0xE4BF64", VA = "0xE4BF64")]
		public HandJet()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public class HandJet1 : GrabbableEvents
	{
		[Token(Token = "0x4002626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float JetForce;

		[Token(Token = "0x4002627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem JetFX;

		[Token(Token = "0x4002628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CharacterController characterController;

		[Token(Token = "0x4002629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x400262A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PlayerGravity playerGravity;

		[Token(Token = "0x400262B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource audioSource;

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xE4BF74", Offset = "0xE4BF74", VA = "0xE4BF74")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xE4C0F0", Offset = "0xE4C0F0", VA = "0xE4C0F0", Slot = "16")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xE4C4B8", Offset = "0xE4C4B8", VA = "0xE4C4B8", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xE4C4C0", Offset = "0xE4C4C0", VA = "0xE4C4C0")]
		public void ChangeGravity(bool gravityOn)
		{
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xE4C560", Offset = "0xE4C560", VA = "0xE4C560", Slot = "6")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xE4C140", Offset = "0xE4C140", VA = "0xE4C140")]
		private void doJet(float triggerValue)
		{
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xE4C3F0", Offset = "0xE4C3F0", VA = "0xE4C3F0")]
		private void stopJet()
		{
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xE4C588", Offset = "0xE4C588", VA = "0xE4C588", Slot = "18")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xE4C5B0", Offset = "0xE4C5B0", VA = "0xE4C5B0")]
		public HandJet1()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public class HandJet2 : GrabbableEvents
	{
		[Token(Token = "0x400262C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float JetForce;

		[Token(Token = "0x400262D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem JetFX;

		[Token(Token = "0x400262E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CharacterController characterController;

		[Token(Token = "0x400262F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x4002630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PlayerGravity playerGravity;

		[Token(Token = "0x4002631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource audioSource;

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xE4C5C0", Offset = "0xE4C5C0", VA = "0xE4C5C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xE4C73C", Offset = "0xE4C73C", VA = "0xE4C73C", Slot = "16")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xE4CAF8", Offset = "0xE4CAF8", VA = "0xE4CAF8", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xE4CAFC", Offset = "0xE4CAFC", VA = "0xE4CAFC")]
		public void ChangeGravity(bool gravityOn)
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xE4CB9C", Offset = "0xE4CB9C", VA = "0xE4CB9C", Slot = "6")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xE4C78C", Offset = "0xE4C78C", VA = "0xE4C78C")]
		private void doJet(float triggerValue)
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xE4CA30", Offset = "0xE4CA30", VA = "0xE4CA30")]
		private void stopJet()
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xE4CBC4", Offset = "0xE4CBC4", VA = "0xE4CBC4", Slot = "18")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xE4CBEC", Offset = "0xE4CBEC", VA = "0xE4CBEC")]
		public HandJet2()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	public class IKDummy : MonoBehaviour
	{
		[Token(Token = "0x4002632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform ThisEyeBone;

		[Token(Token = "0x4002633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform PlayerTransform;

		[Token(Token = "0x4002634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform HeadFollow;

		[Token(Token = "0x4002635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform RightHandFollow;

		[Token(Token = "0x4002636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform LeftHandFollow;

		[Token(Token = "0x4002637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 HandRotationOffset;

		[Token(Token = "0x4002638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Animator animator;

		[Token(Token = "0x4002639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform headBone;

		[Token(Token = "0x400263A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform leftHandDummy;

		[Token(Token = "0x400263B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform rightHandDummy;

		[Token(Token = "0x400263C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform leftHandOnPlayer;

		[Token(Token = "0x400263D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform rightHandOnPlayer;

		[Token(Token = "0x400263E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform lookatDummy;

		[Token(Token = "0x400263F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 localPos;

		[Token(Token = "0x4002640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion localRot;

		[Token(Token = "0x4002641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform cam;

		[Token(Token = "0x4002642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 leftHandLocalPos;

		[Token(Token = "0x4002643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 rightHandLocalPos;

		[Token(Token = "0x4002644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion leftHandLocalRot;

		[Token(Token = "0x4002645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Quaternion rightHandLocalRot;

		[Token(Token = "0x4002646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Vector3 LeftHandsOffset;

		[Token(Token = "0x4002647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public Vector3 RightHandsOffset;

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xA647A4", Offset = "0xA647A4", VA = "0xA647A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xA64A04", Offset = "0xA64A04", VA = "0xA64A04")]
		public Transform SetParentAndLocalPosRot(string transformName, Transform parentToSet)
		{
			return null;
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xA64AC0", Offset = "0xA64AC0", VA = "0xA64AC0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xA64D9C", Offset = "0xA64D9C", VA = "0xA64D9C")]
		private void OnAnimatorIK()
		{
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xA65044", Offset = "0xA65044", VA = "0xA65044")]
		public IKDummy()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public class LaserPointer : MonoBehaviour
	{
		[Token(Token = "0x4002648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MaxRange;

		[Token(Token = "0x4002649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask ValidLayers;

		[Token(Token = "0x400264A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform LaserEnd;

		[Token(Token = "0x400264B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool Active;

		[Token(Token = "0x400264C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LineRenderer line;

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xA3A440", Offset = "0xA3A440", VA = "0xA3A440")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xA3A494", Offset = "0xA3A494", VA = "0xA3A494")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xA3A7A4", Offset = "0xA3A7A4", VA = "0xA3A7A4")]
		public LaserPointer()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public class LaserSword : GrabbableEvents
	{
		[Token(Token = "0x400264D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Grabbable grabbable;

		[Token(Token = "0x400264E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform BladeTransform;

		[Token(Token = "0x400264F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform RaycastTransform;

		[Token(Token = "0x4002650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LayerMask LaserCollision;

		[Token(Token = "0x4002651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ParticleSystem CollisionParticle;

		[Token(Token = "0x4002652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool BladeEnabled;

		[Token(Token = "0x4002653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool SaberSwitchOn;

		[Token(Token = "0x4002654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float LaserLength;

		[Token(Token = "0x4002655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float LaserActivateSpeed;

		[Token(Token = "0x4002656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioSource CollisionAudio;

		[Token(Token = "0x4002657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool Colliding;

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xA3A7BC", Offset = "0xA3A7BC", VA = "0xA3A7BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xA3A870", Offset = "0xA3A870", VA = "0xA3A870")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xA3ADB4", Offset = "0xA3ADB4", VA = "0xA3ADB4", Slot = "16")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xA3AA4C", Offset = "0xA3AA4C", VA = "0xA3AA4C")]
		private void checkCollision()
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xA3ADD0", Offset = "0xA3ADD0", VA = "0xA3ADD0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xA3AEFC", Offset = "0xA3AEFC", VA = "0xA3AEFC")]
		public LaserSword()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public class LiquidWobble : MonoBehaviour
	{
		[Token(Token = "0x4002658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer rend;

		[Token(Token = "0x4002659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 lastPos;

		[Token(Token = "0x400265A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 velocity;

		[Token(Token = "0x400265B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 lastRot;

		[Token(Token = "0x400265C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 angularVelocity;

		[Token(Token = "0x400265D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float MaxWobble;

		[Token(Token = "0x400265E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float WobbleSpeed;

		[Token(Token = "0x400265F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float Recovery;

		[Token(Token = "0x4002660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float wobbleAmountX;

		[Token(Token = "0x4002661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float wobbleAmountZ;

		[Token(Token = "0x4002662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float wobbleAmountToAddX;

		[Token(Token = "0x4002663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float wobbleAmountToAddZ;

		[Token(Token = "0x4002664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float pulse;

		[Token(Token = "0x4002665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float time;

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xA3C27C", Offset = "0xA3C27C", VA = "0xA3C27C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xA3C2D0", Offset = "0xA3C2D0", VA = "0xA3C2D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xA3C574", Offset = "0xA3C574", VA = "0xA3C574")]
		public LiquidWobble()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	public class Marker : GrabbableEvents
	{
		[Token(Token = "0x20005D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5732A8", Offset = "0x5732A8")]
		private sealed class <WriteRoutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Marker <>4__this;

			[Token(Token = "0x17000424")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024D6")]
				[Address(RVA = "0x867F50", Offset = "0x867F50", VA = "0x867F50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000425")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024D8")]
				[Address(RVA = "0x867F98", Offset = "0x867F98", VA = "0x867F98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024D3")]
			[Address(RVA = "0x867C8C", Offset = "0x867C8C", VA = "0x867C8C")]
			[DebuggerHidden]
			public <WriteRoutine>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60024D4")]
			[Address(RVA = "0x867CB8", Offset = "0x867CB8", VA = "0x867CB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024D5")]
			[Address(RVA = "0x867CBC", Offset = "0x867CBC", VA = "0x867CBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024D7")]
			[Address(RVA = "0x867F58", Offset = "0x867F58", VA = "0x867F58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material DrawMaterial;

		[Token(Token = "0x4002667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color DrawColor;

		[Token(Token = "0x4002668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float LineWidth;

		[Token(Token = "0x4002669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform RaycastStart;

		[Token(Token = "0x400266A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LayerMask DrawingLayers;

		[Token(Token = "0x400266B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float RaycastLength;

		[Token(Token = "0x400266C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float MinDrawDistance;

		[Token(Token = "0x400266D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float ReuseTolerance;

		[Token(Token = "0x400266E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool IsNewDraw;

		[Token(Token = "0x400266F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 lastDrawPoint;

		[Token(Token = "0x4002670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private LineRenderer LineRenderer;

		[Token(Token = "0x4002671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform root;

		[Token(Token = "0x4002672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform lastTransform;

		[Token(Token = "0x4002673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine drawRoutine;

		[Token(Token = "0x4002674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float lastLineWidth;

		[Token(Token = "0x4002675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int renderLifeTime;

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xA40178", Offset = "0xA40178", VA = "0xA40178", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xA4022C", Offset = "0xA4022C", VA = "0xA4022C", Slot = "6")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xA401C0", Offset = "0xA401C0", VA = "0xA401C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5925F8", Offset = "0x5925F8")]
		private IEnumerator WriteRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xA40268", Offset = "0xA40268", VA = "0xA40268")]
		private void InitDraw(Vector3 position, Quaternion rotation, float lineWidth, Color lineColor)
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xA40390", Offset = "0xA40390", VA = "0xA40390")]
		private Vector3 DrawPoint(Vector3 lastDrawPoint, Vector3 endPosition, float lineWidth, Color lineColor, Quaternion rotation)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xA4089C", Offset = "0xA4089C", VA = "0xA4089C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xA40958", Offset = "0xA40958", VA = "0xA40958")]
		public Marker()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public class MoveToWaypoint : MonoBehaviour
	{
		[Token(Token = "0x4002676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsActive;

		[Token(Token = "0x4002677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Waypoint Destination;

		[Token(Token = "0x4002678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MovementSpeed;

		[Token(Token = "0x4002679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ReachedDestination;

		[Token(Token = "0x400267A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58ACC8", Offset = "0x58ACC8")]
		public float StartDelay;

		[Token(Token = "0x400267B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool reachedDelay;

		[Token(Token = "0x400267C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float delayedTime;

		[Token(Token = "0x400267D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 previousPosition;

		[Token(Token = "0x400267E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 PositionDifference;

		[Token(Token = "0x400267F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool MoveInUpdate;

		[Token(Token = "0x4002680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool MoveInFixedUpdate;

		[Token(Token = "0x4002681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rigid;

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xE00BB4", Offset = "0xE00BB4", VA = "0xE00BB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xE00C18", Offset = "0xE00C18", VA = "0xE00C18")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xE00F88", Offset = "0xE00F88", VA = "0xE00F88")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xE00CDC", Offset = "0xE00CDC", VA = "0xE00CDC")]
		private void movePlatform(float timeDelta)
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xE00FBC", Offset = "0xE00FBC", VA = "0xE00FBC")]
		private void resetDelayStatus()
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xE00FC8", Offset = "0xE00FC8", VA = "0xE00FC8")]
		public MoveToWaypoint()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public class MovingPlatform : MonoBehaviour
	{
		[Token(Token = "0x4002682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58AD00", Offset = "0x58AD00")]
		public MovingPlatformMethod MovementMethod;

		[Token(Token = "0x4002683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public Vector3 PositionDelta;

		[Token(Token = "0x4002684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Quaternion RotationDelta;

		[Token(Token = "0x4002685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Vector3 previousPosition;

		[Token(Token = "0x4002686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected Quaternion previousRotation;

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xE011F8", Offset = "0xE011F8", VA = "0xE011F8")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xE01304", Offset = "0xE01304", VA = "0xE01304")]
		public MovingPlatform()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public enum MovingPlatformMethod
	{
		[Token(Token = "0x4002688")]
		ParentToPlatform,
		[Token(Token = "0x4002689")]
		PositionDifference
	}
	[Token(Token = "0x20003BD")]
	public class PlayerScaler : MonoBehaviour
	{
		[Token(Token = "0x400268A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> ScaleObjects;

		[Token(Token = "0x400268B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Scale;

		[Token(Token = "0x400268C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float scaleSpeed;

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xDCBE6C", Offset = "0xDCBE6C", VA = "0xDCBE6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xDCC088", Offset = "0xDCC088", VA = "0xDCC088")]
		public PlayerScaler()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public class ProjectileLauncher : MonoBehaviour
	{
		[Token(Token = "0x400268D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject ProjectileObject;

		[Token(Token = "0x400268E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ProjectileForce;

		[Token(Token = "0x400268F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip LaunchSound;

		[Token(Token = "0x4002690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleSystem LaunchParticles;

		[Token(Token = "0x4002691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform MuzzleTransform;

		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _initialProjectileForce;

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xC6BEE0", Offset = "0xC6BEE0", VA = "0xC6BEE0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xC6BEEC", Offset = "0xC6BEEC", VA = "0xC6BEEC")]
		public GameObject ShootProjectile(float projectileForce)
		{
			return null;
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xC6C1B4", Offset = "0xC6C1B4", VA = "0xC6C1B4")]
		public void ShootProjectile()
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xC6C1BC", Offset = "0xC6C1BC", VA = "0xC6C1BC")]
		public void SetForce(float force)
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xC6C1C4", Offset = "0xC6C1C4", VA = "0xC6C1C4")]
		public float GetInitialProjectileForce()
		{
			return default(float);
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0xC6C1CC", Offset = "0xC6C1CC", VA = "0xC6C1CC")]
		public ProjectileLauncher()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public class TimeController : MonoBehaviour
	{
		[Token(Token = "0x20005D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5732B8", Offset = "0x5732B8")]
		private sealed class <resumeTimeRoutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TimeController <>4__this;

			[Token(Token = "0x17000426")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024DC")]
				[Address(RVA = "0x878900", Offset = "0x878900", VA = "0x878900", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000427")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024DE")]
				[Address(RVA = "0x878948", Offset = "0x878948", VA = "0x878948", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024D9")]
			[Address(RVA = "0x878768", Offset = "0x878768", VA = "0x878768")]
			[DebuggerHidden]
			public <resumeTimeRoutine>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60024DA")]
			[Address(RVA = "0x878794", Offset = "0x878794", VA = "0x878794", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024DB")]
			[Address(RVA = "0x878798", Offset = "0x878798", VA = "0x878798", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024DD")]
			[Address(RVA = "0x878908", Offset = "0x878908", VA = "0x878908", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58AD58", Offset = "0x58AD58")]
		public float SlowTimeScale;

		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58AD90", Offset = "0x58AD90")]
		public bool YKeySlowsTime;

		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58ADC8", Offset = "0x58ADC8")]
		public InputActionReference SlowTimeAction;

		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58AE00", Offset = "0x58AE00")]
		public AudioClip SlowTimeClip;

		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58AE38", Offset = "0x58AE38")]
		public AudioClip SpeedupTimeClip;

		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58AE70", Offset = "0x58AE70")]
		public bool SetFixedDelta;

		[Token(Token = "0x4002699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool _slowingTime;

		[Token(Token = "0x400269A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private bool routineRunning;

		[Token(Token = "0x400269B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float originalFixedDelta;

		[Token(Token = "0x400269C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AudioSource audioSource;

		[Token(Token = "0x400269D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool ForceTimeScale;

		[Token(Token = "0x400269E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IEnumerator resumeRoutine;

		[Token(Token = "0x170002F6")]
		public bool TimeSlowing
		{
			[Token(Token = "0x6001DCB")]
			[Address(RVA = "0xA25424", Offset = "0xA25424", VA = "0xA25424")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xA2542C", Offset = "0xA2542C", VA = "0xA2542C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xA254E8", Offset = "0xA254E8", VA = "0xA254E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xA256F4", Offset = "0xA256F4", VA = "0xA256F4", Slot = "4")]
		public virtual bool SlowTimeInputDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xA25530", Offset = "0xA25530", VA = "0xA25530")]
		public void SlowTime()
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0xA2568C", Offset = "0xA2568C", VA = "0xA2568C")]
		public void ResumeTime()
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xA257FC", Offset = "0xA257FC", VA = "0xA257FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x592658", Offset = "0x592658")]
		private IEnumerator resumeTimeRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xA25868", Offset = "0xA25868", VA = "0xA25868")]
		public TimeController()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public class ToggleActiveOnInputAction : MonoBehaviour
	{
		[Token(Token = "0x400269F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputActionReference InputAction;

		[Token(Token = "0x40026A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ToggleObject;

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xA25AD0", Offset = "0xA25AD0", VA = "0xA25AD0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xA25B8C", Offset = "0xA25B8C", VA = "0xA25B8C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xA25C48", Offset = "0xA25C48", VA = "0xA25C48")]
		public void ToggleActive(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xA25CEC", Offset = "0xA25CEC", VA = "0xA25CEC")]
		public ToggleActiveOnInputAction()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public class VREmulator : MonoBehaviour
	{
		[Token(Token = "0x40026A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58AEA8", Offset = "0x58AEA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58AEA8", Offset = "0x58AEA8")]
		public bool EmulatorEnabled;

		[Token(Token = "0x40026A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58AF08", Offset = "0x58AF08")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58AF08", Offset = "0x58AF08")]
		public InputActionAsset EmulatorActionSet;

		[Token(Token = "0x40026A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58AF78", Offset = "0x58AF78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58AF78", Offset = "0x58AF78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58AF78", Offset = "0x58AF78")]
		public InputActionReference PlayerUpAction;

		[Token(Token = "0x40026A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58AFFC", Offset = "0x58AFFC")]
		public InputActionReference PlayerDownAction;

		[Token(Token = "0x40026A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58B034", Offset = "0x58B034")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B034", Offset = "0x58B034")]
		public InputActionReference LockCameraAction;

		[Token(Token = "0x40026A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B094", Offset = "0x58B094")]
		public InputActionReference CameraLookAction;

		[Token(Token = "0x40026A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B0CC", Offset = "0x58B0CC")]
		public float CameraLookSensitivityX;

		[Token(Token = "0x40026A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B104", Offset = "0x58B104")]
		public float CameraLookSensitivityY;

		[Token(Token = "0x40026A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B13C", Offset = "0x58B13C")]
		public float MinimumCameraY;

		[Token(Token = "0x40026AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B174", Offset = "0x58B174")]
		public float MaximumCameraY;

		[Token(Token = "0x40026AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58B1AC", Offset = "0x58B1AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B1AC", Offset = "0x58B1AC")]
		public InputActionReference LeftGripAction;

		[Token(Token = "0x40026AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B20C", Offset = "0x58B20C")]
		public InputActionReference LeftTriggerAction;

		[Token(Token = "0x40026AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B244", Offset = "0x58B244")]
		public InputActionReference LeftThumbNearAction;

		[Token(Token = "0x40026AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B27C", Offset = "0x58B27C")]
		public InputActionReference RightGripAction;

		[Token(Token = "0x40026AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B2B4", Offset = "0x58B2B4")]
		public InputActionReference RightTriggerAction;

		[Token(Token = "0x40026B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B2EC", Offset = "0x58B2EC")]
		public InputActionReference RightThumbNearAction;

		[Token(Token = "0x40026B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float mouseRotationX;

		[Token(Token = "0x40026B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float mouseRotationY;

		[Token(Token = "0x40026B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform mainCameraTransform;

		[Token(Token = "0x40026B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform leftControllerTranform;

		[Token(Token = "0x40026B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform rightControllerTranform;

		[Token(Token = "0x40026B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform leftHandAnchor;

		[Token(Token = "0x40026B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform rightHandAnchor;

		[Token(Token = "0x40026B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private BNGPlayerController player;

		[Token(Token = "0x40026B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x40026BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool didFirstActivate;

		[Token(Token = "0x40026BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Grabber grabberLeft;

		[Token(Token = "0x40026BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Grabber grabberRight;

		[Token(Token = "0x40026BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float _originalPlayerYOffset;

		[Token(Token = "0x40026BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58B324", Offset = "0x58B324")]
		public bool HMDIsActive;

		[Token(Token = "0x40026BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Vector3 LeftControllerPosition;

		[Token(Token = "0x40026C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public Vector3 RightControllerPosition;

		[Token(Token = "0x40026C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float prevVal;

		[Token(Token = "0x40026C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private bool isQuitting;

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xC61048", Offset = "0xC61048", VA = "0xC61048")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xC61390", Offset = "0xC61390", VA = "0xC61390")]
		public void OnBeforeRender()
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xC61428", Offset = "0xC61428", VA = "0xC61428")]
		private void onFirstActivate()
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xC61458", Offset = "0xC61458", VA = "0xC61458")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0xC61548", Offset = "0xC61548", VA = "0xC61548")]
		public void CheckHeadControls()
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0xC61994", Offset = "0xC61994", VA = "0xC61994")]
		public void UpdateInputs()
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0xC61794", Offset = "0xC61794", VA = "0xC61794")]
		public void CheckPlayerControls()
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0xC6235C", Offset = "0xC6235C", VA = "0xC6235C", Slot = "4")]
		public virtual void UpdateControllerPositions()
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0xC620C0", Offset = "0xC620C0", VA = "0xC620C0")]
		private void checkGrabbers()
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xC62418", Offset = "0xC62418", VA = "0xC62418", Slot = "5")]
		public virtual void ResetHands()
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xC624E4", Offset = "0xC624E4", VA = "0xC624E4", Slot = "6")]
		public virtual void ResetAll()
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xC62598", Offset = "0xC62598", VA = "0xC62598")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xC62B6C", Offset = "0xC62B6C", VA = "0xC62B6C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xC63158", Offset = "0xC63158", VA = "0xC63158")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xC63164", Offset = "0xC63164", VA = "0xC63164")]
		public VREmulator()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public class VehicleController : MonoBehaviour
	{
		[Token(Token = "0x20005D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5732C8", Offset = "0x5732C8")]
		private sealed class <crankEngine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VehicleController <>4__this;

			[Token(Token = "0x17000428")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024E2")]
				[Address(RVA = "0x1377204", Offset = "0x1377204", VA = "0x1377204", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000429")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024E4")]
				[Address(RVA = "0x137724C", Offset = "0x137724C", VA = "0x137724C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024DF")]
			[Address(RVA = "0x1376FC8", Offset = "0x1376FC8", VA = "0x1376FC8")]
			[DebuggerHidden]
			public <crankEngine>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60024E0")]
			[Address(RVA = "0x1376FF4", Offset = "0x1376FF4", VA = "0x1376FF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024E1")]
			[Address(RVA = "0x1376FF8", Offset = "0x1376FF8", VA = "0x1376FF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024E3")]
			[Address(RVA = "0x137720C", Offset = "0x137720C", VA = "0x137720C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40026C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58B35C", Offset = "0x58B35C")]
		public float MotorTorque;

		[Token(Token = "0x40026C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxSpeed;

		[Token(Token = "0x40026C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaxSteeringAngle;

		[Token(Token = "0x40026C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58B394", Offset = "0x58B394")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B394", Offset = "0x58B394")]
		public bool CheckTriggerInput;

		[Token(Token = "0x40026C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Grabbable SteeringGrabbable;

		[Token(Token = "0x40026C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58B3F4", Offset = "0x58B3F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B3F4", Offset = "0x58B3F4")]
		public bool EngineOn;

		[Token(Token = "0x40026C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B454", Offset = "0x58B454")]
		public float CrankTime;

		[Token(Token = "0x40026CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58B48C", Offset = "0x58B48C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B48C", Offset = "0x58B48C")]
		public Text SpeedLabel;

		[Token(Token = "0x40026CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58B4EC", Offset = "0x58B4EC")]
		public AudioSource EngineAudio;

		[Token(Token = "0x40026CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B524", Offset = "0x58B524")]
		public AudioClip IdleSound;

		[Token(Token = "0x40026CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B55C", Offset = "0x58B55C")]
		public AudioClip CrankSound;

		[Token(Token = "0x40026CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip CollisionSound;

		[Token(Token = "0x40026CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public float SteeringAngle;

		[Token(Token = "0x40026D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		public float MotorInput;

		[Token(Token = "0x40026D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public float CurrentSpeed;

		[Token(Token = "0x40026D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58B5C4", Offset = "0x58B5C4")]
		public List<WheelObject> Wheels;

		[Token(Token = "0x40026D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 initialPosition;

		[Token(Token = "0x40026D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Rigidbody rb;

		[Token(Token = "0x40026D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool wasHoldingSteering;

		[Token(Token = "0x40026D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool isHoldingSteering;

		[Token(Token = "0x40026D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		protected bool crankingEngine;

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x93ACB8", Offset = "0x93ACB8", VA = "0x93ACB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x93AD30", Offset = "0x93AD30", VA = "0x93AD30")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x93AEB8", Offset = "0x93AEB8", VA = "0x93AEB8", Slot = "4")]
		public virtual void CrankEngine()
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x93AF04", Offset = "0x93AF04", VA = "0x93AF04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5926B8", Offset = "0x5926B8")]
		private IEnumerator crankEngine()
		{
			return null;
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x93AF70", Offset = "0x93AF70", VA = "0x93AF70", Slot = "5")]
		public virtual void CheckOutOfBounds()
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x93AFDC", Offset = "0x93AFDC", VA = "0x93AFDC", Slot = "6")]
		public virtual void GetTorqueInputFromTriggers()
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x93B0A4", Offset = "0x93B0A4", VA = "0x93B0A4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x93B210", Offset = "0x93B210", VA = "0x93B210", Slot = "7")]
		public virtual void UpdateWheelTorque()
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x93B320", Offset = "0x93B320", VA = "0x93B320", Slot = "8")]
		public virtual void SetSteeringAngle(float steeringAngle)
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x93B328", Offset = "0x93B328", VA = "0x93B328", Slot = "9")]
		public virtual void SetSteeringAngleInverted(float steeringAngle)
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x93B334", Offset = "0x93B334", VA = "0x93B334", Slot = "10")]
		public virtual void SetSteeringAngle(Vector2 steeringAngle)
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x93B33C", Offset = "0x93B33C", VA = "0x93B33C", Slot = "11")]
		public virtual void SetSteeringAngleInverted(Vector2 steeringAngle)
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x93B348", Offset = "0x93B348", VA = "0x93B348", Slot = "12")]
		public virtual void SetMotorTorqueInput(float input)
		{
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0x93B350", Offset = "0x93B350", VA = "0x93B350", Slot = "13")]
		public virtual void SetMotorTorqueInputInverted(float input)
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x93B35C", Offset = "0x93B35C", VA = "0x93B35C", Slot = "14")]
		public virtual void SetMotorTorqueInput(Vector2 input)
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x93B364", Offset = "0x93B364", VA = "0x93B364", Slot = "15")]
		public virtual void SetMotorTorqueInputInverted(Vector2 input)
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x93B370", Offset = "0x93B370", VA = "0x93B370", Slot = "16")]
		public virtual void UpdateWheelVisuals(WheelObject wheel)
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x93B460", Offset = "0x93B460", VA = "0x93B460", Slot = "17")]
		public virtual void UpdateEngineAudio()
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x93B520", Offset = "0x93B520", VA = "0x93B520")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x93B11C", Offset = "0x93B11C", VA = "0x93B11C")]
		private float correctValue(float inputValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x93B600", Offset = "0x93B600", VA = "0x93B600")]
		public VehicleController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C3")]
	public class WheelObject
	{
		[Token(Token = "0x40026D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WheelCollider Wheel;

		[Token(Token = "0x40026D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform WheelVisual;

		[Token(Token = "0x40026DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool ApplyTorque;

		[Token(Token = "0x40026DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool ApplySteering;

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0x940F78", Offset = "0x940F78", VA = "0x940F78")]
		public WheelObject()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public class Waypoint : MonoBehaviour
	{
		[Token(Token = "0x40026DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Waypoint Destination;

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0x93FD88", Offset = "0x93FD88", VA = "0x93FD88")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x93FEE4", Offset = "0x93FEE4", VA = "0x93FEE4")]
		public Waypoint()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public class Zipline : GrabbableEvents
	{
		[Token(Token = "0x40026DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform ZiplineStart;

		[Token(Token = "0x40026DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform ZiplineEnd;

		[Token(Token = "0x40026DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float ZiplineSpeed;

		[Token(Token = "0x40026E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool UseLinearMovement;

		[Token(Token = "0x40026E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float lastMoveTime;

		[Token(Token = "0x40026E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool movingForward;

		[Token(Token = "0x40026E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioSource audioSource;

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0x945424", Offset = "0x945424", VA = "0x945424")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0x9454F4", Offset = "0x9454F4", VA = "0x9454F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0x9455CC", Offset = "0x9455CC", VA = "0x9455CC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0x9456FC", Offset = "0x9456FC", VA = "0x9456FC", Slot = "16")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0x9459B4", Offset = "0x9459B4", VA = "0x9459B4", Slot = "19")]
		public override void OnButton1()
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x9459F8", Offset = "0x9459F8", VA = "0x9459F8", Slot = "22")]
		public override void OnButton2()
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0x94575C", Offset = "0x94575C", VA = "0x94575C")]
		private void moveTowards(Vector3 pos, bool forwardDirection)
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0x945A3C", Offset = "0x945A3C", VA = "0x945A3C")]
		public Zipline()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public class ControllerOffsetHelper : MonoBehaviour
	{
		[Token(Token = "0x20005D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5732D8", Offset = "0x5732D8")]
		private sealed class <checkForController>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400308A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400308B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControllerOffsetHelper <>4__this;

			[Token(Token = "0x1700042A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024E8")]
				[Address(RVA = "0x91BDC4", Offset = "0x91BDC4", VA = "0x91BDC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024EA")]
				[Address(RVA = "0x91BE0C", Offset = "0x91BE0C", VA = "0x91BE0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024E5")]
			[Address(RVA = "0x91BC9C", Offset = "0x91BC9C", VA = "0x91BC9C")]
			[DebuggerHidden]
			public <checkForController>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60024E6")]
			[Address(RVA = "0x91BCC8", Offset = "0x91BCC8", VA = "0x91BCC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024E7")]
			[Address(RVA = "0x91BCCC", Offset = "0x91BCCC", VA = "0x91BCCC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024E9")]
			[Address(RVA = "0x91BDCC", Offset = "0x91BDCC", VA = "0x91BDCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40026E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControllerHand ControllerHand;

		[Token(Token = "0x40026E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58B5FC", Offset = "0x58B5FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B5FC", Offset = "0x58B5FC")]
		[SerializeField]
		private string thisControllerModel;

		[Token(Token = "0x40026E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ControllerOffset thisOffset;

		[Token(Token = "0x40026E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B67C", Offset = "0x58B67C")]
		public Vector3 OffsetPosition;

		[Token(Token = "0x40026E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B6B4", Offset = "0x58B6B4")]
		public Vector3 OffsetRotation;

		[Token(Token = "0x40026E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<ControllerOffset> ControllerOffsets;

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xA121CC", Offset = "0xA121CC", VA = "0xA121CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xA12258", Offset = "0xA12258", VA = "0xA12258")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x592718", Offset = "0x592718")]
		private IEnumerator checkForController()
		{
			return null;
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0xA122C4", Offset = "0xA122C4", VA = "0xA122C4", Slot = "4")]
		public virtual void OnControllerFound()
		{
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xA123D8", Offset = "0xA123D8", VA = "0xA123D8", Slot = "5")]
		public virtual ControllerOffset GetControllerOffset(string controllerName)
		{
			return null;
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0xA1248C", Offset = "0xA1248C", VA = "0xA1248C", Slot = "6")]
		public virtual void DefineControllerOffsets()
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0xA12660", Offset = "0xA12660", VA = "0xA12660")]
		public ControllerOffsetHelper()
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0xA12670", Offset = "0xA12670", VA = "0xA12670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592778", Offset = "0x592778")]
		private bool <GetControllerOffset>b__9_0(ControllerOffset x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003C7")]
	public class ControllerOffset
	{
		[Token(Token = "0x40026EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B6EC", Offset = "0x58B6EC")]
		private string <ControllerName>k__BackingField;

		[Token(Token = "0x40026EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B6FC", Offset = "0x58B6FC")]
		private Vector3 <LeftControllerPositionOffset>k__BackingField;

		[Token(Token = "0x40026EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B70C", Offset = "0x58B70C")]
		private Vector3 <RightControllerPositionOffset>k__BackingField;

		[Token(Token = "0x40026ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B71C", Offset = "0x58B71C")]
		private Vector3 <LeftControllerRotationOffset>k__BackingField;

		[Token(Token = "0x40026EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58B72C", Offset = "0x58B72C")]
		private Vector3 <RightControlleRotationOffset>k__BackingField;

		[Token(Token = "0x170002F7")]
		public string ControllerName
		{
			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0xA12154", Offset = "0xA12154", VA = "0xA12154")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592788", Offset = "0x592788")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E0E")]
			[Address(RVA = "0xA1215C", Offset = "0xA1215C", VA = "0xA1215C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592798", Offset = "0x592798")]
			set
			{
			}
		}

		[Token(Token = "0x170002F8")]
		public Vector3 LeftControllerPositionOffset
		{
			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0xA12164", Offset = "0xA12164", VA = "0xA12164")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5927A8", Offset = "0x5927A8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001E10")]
			[Address(RVA = "0xA12170", Offset = "0xA12170", VA = "0xA12170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5927B8", Offset = "0x5927B8")]
			set
			{
			}
		}

		[Token(Token = "0x170002F9")]
		public Vector3 RightControllerPositionOffset
		{
			[Token(Token = "0x6001E11")]
			[Address(RVA = "0xA1217C", Offset = "0xA1217C", VA = "0xA1217C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5927C8", Offset = "0x5927C8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001E12")]
			[Address(RVA = "0xA12188", Offset = "0xA12188", VA = "0xA12188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5927D8", Offset = "0x5927D8")]
			set
			{
			}
		}

		[Token(Token = "0x170002FA")]
		public Vector3 LeftControllerRotationOffset
		{
			[Token(Token = "0x6001E13")]
			[Address(RVA = "0xA12194", Offset = "0xA12194", VA = "0xA12194")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5927E8", Offset = "0x5927E8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001E14")]
			[Address(RVA = "0xA121A0", Offset = "0xA121A0", VA = "0xA121A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5927F8", Offset = "0x5927F8")]
			set
			{
			}
		}

		[Token(Token = "0x170002FB")]
		public Vector3 RightControlleRotationOffset
		{
			[Token(Token = "0x6001E15")]
			[Address(RVA = "0xA121AC", Offset = "0xA121AC", VA = "0xA121AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592808", Offset = "0x592808")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001E16")]
			[Address(RVA = "0xA121B8", Offset = "0xA121B8", VA = "0xA121B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x592818", Offset = "0x592818")]
			set
			{
			}
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xA121C4", Offset = "0xA121C4", VA = "0xA121C4")]
		public ControllerOffset()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public class DetachableLimb : MonoBehaviour
	{
		[Token(Token = "0x40026EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform ShrinkBone;

		[Token(Token = "0x40026F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ReplaceGrabbableWith;

		[Token(Token = "0x40026F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject EnableOnDetach;

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xA1D008", Offset = "0xA1D008", VA = "0xA1D008")]
		public void DoDismemberment(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xA1D294", Offset = "0xA1D294", VA = "0xA1D294")]
		public void ReverseDismemberment()
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xA1D398", Offset = "0xA1D398", VA = "0xA1D398")]
		public DetachableLimb()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public class DoorHelper : MonoBehaviour
	{
		[Token(Token = "0x40026F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip DoorOpenSound;

		[Token(Token = "0x40026F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip DoorCloseSound;

		[Token(Token = "0x40026F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B73C", Offset = "0x58B73C")]
		public bool RequireHandleTurnToOpen;

		[Token(Token = "0x40026F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform HandleFollower;

		[Token(Token = "0x40026F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float DegreesTurned;

		[Token(Token = "0x40026F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float DegreesTurnToOpen;

		[Token(Token = "0x40026F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform DoorLockTransform;

		[Token(Token = "0x40026F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float initialLockPosition;

		[Token(Token = "0x40026FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HingeJoint hinge;

		[Token(Token = "0x40026FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rigid;

		[Token(Token = "0x40026FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool playedOpenSound;

		[Token(Token = "0x40026FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool readyToPlayCloseSound;

		[Token(Token = "0x40026FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float AngularVelocitySnapDoor;

		[Token(Token = "0x40026FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float angle;

		[Token(Token = "0x4002700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float AngularVelocity;

		[Token(Token = "0x4002701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool doorLocked;

		[Token(Token = "0x4002702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float lockPos;

		[Token(Token = "0x4002703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 currentRotation;

		[Token(Token = "0x4002704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float moveLockAmount;

		[Token(Token = "0x4002705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float rotateAngles;

		[Token(Token = "0x4002706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float ratio;

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xA1E188", Offset = "0xA1E188", VA = "0xA1E188")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xA1E264", Offset = "0xA1E264", VA = "0xA1E264")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xA1E678", Offset = "0xA1E678", VA = "0xA1E678")]
		public DoorHelper()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	public class GrabberArea : MonoBehaviour
	{
		[Token(Token = "0x4002707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Grabber InArea;

		[Token(Token = "0x4002708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Grabber> grabbersInArea;

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xE46CBC", Offset = "0xE46CBC", VA = "0xE46CBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xE46CE0", Offset = "0xE46CE0", VA = "0xE46CE0")]
		public Grabber GetOpenGrabber()
		{
			return null;
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xE46E34", Offset = "0xE46E34", VA = "0xE46E34")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xE46F88", Offset = "0xE46F88", VA = "0xE46F88")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xE47094", Offset = "0xE47094", VA = "0xE47094")]
		public GrabberArea()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public class HandCollision : MonoBehaviour
	{
		[Token(Token = "0x4002709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandController HandControl;

		[Token(Token = "0x400270A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabber HandGrabber;

		[Token(Token = "0x400270B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool EnableHandCollision;

		[Token(Token = "0x400270C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool EnableCollisionOnPoint;

		[Token(Token = "0x400270D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool EnableCollisionOnFist;

		[Token(Token = "0x400270E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool EnableCollisionOnAllPoses;

		[Token(Token = "0x400270F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool EnableCollisionDuringGrab;

		[Token(Token = "0x4002710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float PointAmount;

		[Token(Token = "0x4002711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float GripAmount;

		[Token(Token = "0x4002712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool MakingFist;

		[Token(Token = "0x4002713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Collider> handColliders;

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xE49D74", Offset = "0xE49D74", VA = "0xE49D74")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xE49E9C", Offset = "0xE49E9C", VA = "0xE49E9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xE4A178", Offset = "0xE4A178", VA = "0xE4A178")]
		public HandCollision()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	public class HandController : MonoBehaviour
	{
		[Token(Token = "0x4002714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B774", Offset = "0x58B774")]
		public Transform HandAnchor;

		[Token(Token = "0x4002715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B7AC", Offset = "0x58B7AC")]
		public bool ResetHandAnchorPosition;

		[Token(Token = "0x4002716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator HandAnimator;

		[Token(Token = "0x4002717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B7E4", Offset = "0x58B7E4")]
		public HandPoser handPoser;

		[Token(Token = "0x4002718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B81C", Offset = "0x58B81C")]
		public AutoPoser autoPoser;

		[Token(Token = "0x4002719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B854", Offset = "0x58B854")]
		public bool AutoPoseWhenNoGrabbable;

		[Token(Token = "0x400271A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B88C", Offset = "0x58B88C")]
		public float HandAnimationSpeed;

		[Token(Token = "0x400271B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B8C4", Offset = "0x58B8C4")]
		public Grabber grabber;

		[Token(Token = "0x400271C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58B8FC", Offset = "0x58B8FC")]
		public float GripAmount;

		[Token(Token = "0x400271D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _prevGrip;

		[Token(Token = "0x400271E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float PointAmount;

		[Token(Token = "0x400271F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _prevPoint;

		[Token(Token = "0x4002720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float ThumbAmount;

		[Token(Token = "0x4002721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _prevThumb;

		[Token(Token = "0x4002722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int PoseId;

		[Token(Token = "0x4002723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ControllerOffsetHelper offset;

		[Token(Token = "0x4002724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private InputBridge input;

		[Token(Token = "0x4002725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rigidbody rigid;

		[Token(Token = "0x4002726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform offsetTransform;

		[Token(Token = "0x4002727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject PreviousHeldObject;

		[Token(Token = "0x4002728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool DoUpdateAnimationStates;

		[Token(Token = "0x4002729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool DoUpdateHandPoser;

		[Token(Token = "0x170002FC")]
		private Vector3 offsetPosition
		{
			[Token(Token = "0x6001E26")]
			[Address(RVA = "0xE4A190", Offset = "0xE4A190", VA = "0xE4A190")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002FD")]
		private Vector3 offsetRotation
		{
			[Token(Token = "0x6001E27")]
			[Address(RVA = "0xE4A220", Offset = "0xE4A220", VA = "0xE4A220")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xE4A2B0", Offset = "0xE4A2B0", VA = "0xE4A2B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xE4A5FC", Offset = "0xE4A5FC", VA = "0xE4A5FC")]
		public void Update()
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xE4A660", Offset = "0xE4A660", VA = "0xE4A660", Slot = "4")]
		public virtual void CheckForGrabChange()
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xE4A810", Offset = "0xE4A810", VA = "0xE4A810", Slot = "5")]
		public virtual void OnGrabChange(GameObject newlyHeldObject)
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xE4A980", Offset = "0xE4A980", VA = "0xE4A980", Slot = "6")]
		public virtual void OnGrabDrop()
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xE4A9E8", Offset = "0xE4A9E8", VA = "0xE4A9E8", Slot = "7")]
		public virtual void SetHandAnimator()
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xE4AAA4", Offset = "0xE4AAA4", VA = "0xE4AAA4", Slot = "8")]
		public virtual void UpdateFromInputs()
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xE4ACEC", Offset = "0xE4ACEC", VA = "0xE4ACEC", Slot = "9")]
		public virtual void UpdateAnimimationStates()
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xE4B15C", Offset = "0xE4B15C", VA = "0xE4B15C")]
		private void setAnimatorBlend(float min, float max, float input, int animationLayer)
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xE4B184", Offset = "0xE4B184", VA = "0xE4B184", Slot = "10")]
		public virtual bool IsAnimatorGrabbable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0xE4B290", Offset = "0xE4B290", VA = "0xE4B290", Slot = "11")]
		public virtual void UpdateHandPoser()
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xE4B400", Offset = "0xE4B400", VA = "0xE4B400", Slot = "12")]
		public virtual void EnableHandPoser()
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xE4B490", Offset = "0xE4B490", VA = "0xE4B490", Slot = "13")]
		public virtual void EnableAutoPoser(bool continuous)
		{
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xE4B634", Offset = "0xE4B634", VA = "0xE4B634", Slot = "14")]
		public virtual void DisableAutoPoser()
		{
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0xE4B6B8", Offset = "0xE4B6B8", VA = "0xE4B6B8", Slot = "15")]
		public virtual void EnableHandAnimator()
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0xE4B760", Offset = "0xE4B760", VA = "0xE4B760", Slot = "16")]
		public virtual void DisableHandAnimator()
		{
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0xE4B808", Offset = "0xE4B808", VA = "0xE4B808", Slot = "17")]
		public virtual void OnGrabberGrabbed(Grabbable grabbed)
		{
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0xE4B904", Offset = "0xE4B904", VA = "0xE4B904", Slot = "18")]
		public virtual void OnGrabberReleased(Grabbable released)
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0xE4B908", Offset = "0xE4B908", VA = "0xE4B908")]
		public HandController()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public class HandPhysics : MonoBehaviour
	{
		[Token(Token = "0x20005D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5732E8", Offset = "0x5732E8")]
		private sealed class <UnignoreAllCollisions>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400308C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400308D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400308E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandPhysics <>4__this;

			[Token(Token = "0x400308F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Grabbable <thisGrabbable>5__2;

			[Token(Token = "0x1700042C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024EE")]
				[Address(RVA = "0x92131C", Offset = "0x92131C", VA = "0x92131C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024F0")]
				[Address(RVA = "0x921364", Offset = "0x921364", VA = "0x921364", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024EB")]
			[Address(RVA = "0x92122C", Offset = "0x92122C", VA = "0x92122C")]
			[DebuggerHidden]
			public <UnignoreAllCollisions>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x60024EC")]
			[Address(RVA = "0x921258", Offset = "0x921258", VA = "0x921258", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024ED")]
			[Address(RVA = "0x92125C", Offset = "0x92125C", VA = "0x92125C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024EF")]
			[Address(RVA = "0x921324", Offset = "0x921324", VA = "0x921324", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400272A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B934", Offset = "0x58B934")]
		public Transform AttachTo;

		[Token(Token = "0x400272B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B96C", Offset = "0x58B96C")]
		public float HandVelocity;

		[Token(Token = "0x400272C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B9A4", Offset = "0x58B9A4")]
		public bool DisableHandCollidersOnGrab;

		[Token(Token = "0x400272D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58B9DC", Offset = "0x58B9DC")]
		public float SnapBackDistance;

		[Token(Token = "0x400272E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BA14", Offset = "0x58BA14")]
		public Grabber ThisGrabber;

		[Token(Token = "0x400272F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BA4C", Offset = "0x58BA4C")]
		public Grabber DisableGrabber;

		[Token(Token = "0x4002730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BA84", Offset = "0x58BA84")]
		public RemoteGrabber ThisRemoteGrabber;

		[Token(Token = "0x4002731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BABC", Offset = "0x58BABC")]
		public RemoteGrabber DisableRemoteGrabber;

		[Token(Token = "0x4002732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BAF4", Offset = "0x58BAF4")]
		public PhysicMaterial ColliderMaterial;

		[Token(Token = "0x4002733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform HandModel;

		[Token(Token = "0x4002734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform HandModelOffset;

		[Token(Token = "0x4002735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Collider> handColliders;

		[Token(Token = "0x4002736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody rigid;

		[Token(Token = "0x4002737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ConfigurableJoint configJoint;

		[Token(Token = "0x4002738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Grabbable heldGrabbable;

		[Token(Token = "0x4002739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Collider> collisions;

		[Token(Token = "0x400273A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private LineRenderer line;

		[Token(Token = "0x400273B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 localHandOffset;

		[Token(Token = "0x400273C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 localHandOffsetRotation;

		[Token(Token = "0x400273D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool wasHoldingObject;

		[Token(Token = "0x400273E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Grabbable remoteIgnoredGrabbable;

		[Token(Token = "0x400273F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Transform _priorParent;

		[Token(Token = "0x4002740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 _priorLocalOffsetPosition;

		[Token(Token = "0x170002FE")]
		public bool HoldingObject
		{
			[Token(Token = "0x6001E3B")]
			[Address(RVA = "0xE4D3A0", Offset = "0xE4D3A0", VA = "0xE4D3A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xE4D464", Offset = "0xE4D464", VA = "0xE4D464")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xE4D9A8", Offset = "0xE4D9A8", VA = "0xE4D9A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0xE4E088", Offset = "0xE4E088", VA = "0xE4E088")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xE4D760", Offset = "0xE4D760", VA = "0xE4D760")]
		private void initHandColliders()
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0xE4DE04", Offset = "0xE4DE04", VA = "0xE4DE04")]
		private void checkRemoteCollision()
		{
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0xE4DC84", Offset = "0xE4DC84", VA = "0xE4DC84")]
		private void drawDistanceLine()
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0xE4DFAC", Offset = "0xE4DFAC", VA = "0xE4DFAC")]
		private void checkBreakDistance()
		{
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0xE4DAD4", Offset = "0xE4DAD4", VA = "0xE4DAD4")]
		private void updateHandGraphics()
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0xE4E498", Offset = "0xE4E498", VA = "0xE4E498")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x592828", Offset = "0x592828")]
		private IEnumerator UnignoreAllCollisions()
		{
			return null;
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0xE4E364", Offset = "0xE4E364", VA = "0xE4E364")]
		public void IgnoreGrabbableCollisions(Grabbable grab, bool ignorePhysics)
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0xE4E504", Offset = "0xE4E504", VA = "0xE4E504")]
		public void DisableHandColliders()
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0xE4E64C", Offset = "0xE4E64C", VA = "0xE4E64C")]
		public void EnableHandColliders()
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0xE4E794", Offset = "0xE4E794", VA = "0xE4E794", Slot = "4")]
		public virtual void OnGrabbedObject(Grabbable grabbedObject)
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0xE4E7AC", Offset = "0xE4E7AC", VA = "0xE4E7AC", Slot = "5")]
		public virtual void LockLocalPosition()
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0xE4E7FC", Offset = "0xE4E7FC", VA = "0xE4E7FC", Slot = "6")]
		public virtual void UnlockLocalPosition()
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0xE4E830", Offset = "0xE4E830", VA = "0xE4E830", Slot = "7")]
		public virtual void OnReleasedObject(Grabbable grabbedObject)
		{
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0xE4E8D4", Offset = "0xE4E8D4", VA = "0xE4E8D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0xE4EB14", Offset = "0xE4EB14", VA = "0xE4EB14", Slot = "8")]
		public virtual void LockOffset()
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0xE4EB64", Offset = "0xE4EB64", VA = "0xE4EB64", Slot = "9")]
		public virtual void UnlockOffset()
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xE4EC28", Offset = "0xE4EC28", VA = "0xE4EC28")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0xE4EEF4", Offset = "0xE4EEF4", VA = "0xE4EEF4")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0xE4F058", Offset = "0xE4F058", VA = "0xE4F058")]
		public bool IsValidCollision(Collider col)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0xE4F060", Offset = "0xE4F060", VA = "0xE4F060")]
		public HandPhysics()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public class HandRepresentationHelper : MonoBehaviour
	{
		[Token(Token = "0x4002741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BB2C", Offset = "0x58BB2C")]
		public Transform HandToToggle;

		[Token(Token = "0x4002742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BB64", Offset = "0x58BB64")]
		public Transform OtherHandTransform;

		[Token(Token = "0x4002743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BB9C", Offset = "0x58BB9C")]
		public float DistanceToShow;

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0xE50248", Offset = "0xE50248", VA = "0xE50248")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0xE502F8", Offset = "0xE502F8", VA = "0xE502F8")]
		public HandRepresentationHelper()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public class HandleGFXHelper : MonoBehaviour
	{
		[Token(Token = "0x4002744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform LookAt;

		[Token(Token = "0x4002745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable HandleGrabbable;

		[Token(Token = "0x4002746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Speed;

		[Token(Token = "0x4002747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float LocalYMin;

		[Token(Token = "0x4002748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float LocalYMax;

		[Token(Token = "0x4002749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 initialRot;

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0xE5030C", Offset = "0xE5030C", VA = "0xE5030C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0xE50348", Offset = "0xE50348", VA = "0xE50348")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0xE505DC", Offset = "0xE505DC", VA = "0xE505DC")]
		public HandleGFXHelper()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public class HandleHelper : MonoBehaviour
	{
		[Token(Token = "0x20005D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5732F8", Offset = "0x5732F8")]
		private sealed class <doRelease>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandleHelper <>4__this;

			[Token(Token = "0x1700042E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024F4")]
				[Address(RVA = "0x92144C", Offset = "0x92144C", VA = "0x92144C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024F6")]
				[Address(RVA = "0x921494", Offset = "0x921494", VA = "0x921494", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024F1")]
			[Address(RVA = "0x92136C", Offset = "0x92136C", VA = "0x92136C")]
			[DebuggerHidden]
			public <doRelease>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60024F2")]
			[Address(RVA = "0x921398", Offset = "0x921398", VA = "0x921398", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024F3")]
			[Address(RVA = "0x92139C", Offset = "0x92139C", VA = "0x92139C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024F5")]
			[Address(RVA = "0x921454", Offset = "0x921454", VA = "0x921454", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400274A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody ParentRigid;

		[Token(Token = "0x400274B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform HandleTransform;

		[Token(Token = "0x400274C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Grabbable thisGrab;

		[Token(Token = "0x400274D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody rb;

		[Token(Token = "0x400274E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool didRelease;

		[Token(Token = "0x400274F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Collider col;

		[Token(Token = "0x4002750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 lastAngularVelocity;

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0xE505F8", Offset = "0xE505F8", VA = "0xE505F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0xE5078C", Offset = "0xE5078C", VA = "0xE5078C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xE50A4C", Offset = "0xE50A4C", VA = "0xE50A4C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xE509E0", Offset = "0xE509E0", VA = "0xE509E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x592888", Offset = "0x592888")]
		private IEnumerator doRelease()
		{
			return null;
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xE50A8C", Offset = "0xE50A8C", VA = "0xE50A8C")]
		public HandleHelper()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public class IgnoreColliders : MonoBehaviour
	{
		[Token(Token = "0x4002751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Collider> CollidersToIgnore;

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xA6536C", Offset = "0xA6536C", VA = "0xA6536C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xA65514", Offset = "0xA65514", VA = "0xA65514")]
		public IgnoreColliders()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public class InvalidTeleportArea : MonoBehaviour
	{
		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xA6E6A0", Offset = "0xA6E6A0", VA = "0xA6E6A0")]
		public InvalidTeleportArea()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public class JointBreaker : MonoBehaviour
	{
		[Token(Token = "0x4002752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float BreakDistance;

		[Token(Token = "0x4002753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float JointDistance;

		[Token(Token = "0x4002754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool DestroyJointOnBreak;

		[Token(Token = "0x4002755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrabberEvent OnBreakEvent;

		[Token(Token = "0x4002756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Joint theJoint;

		[Token(Token = "0x4002757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 startPos;

		[Token(Token = "0x4002758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool brokeJoint;

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xA6E6A8", Offset = "0xA6E6A8", VA = "0xA6E6A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xA6E720", Offset = "0xA6E720", VA = "0xA6E720")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xA6E78C", Offset = "0xA6E78C", VA = "0xA6E78C")]
		public void BreakJoint()
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xA6E934", Offset = "0xA6E934", VA = "0xA6E934")]
		public JointBreaker()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class JointHelper : MonoBehaviour
	{
		[Token(Token = "0x4002759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool LockXPosition;

		[Token(Token = "0x400275A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool LockYPosition;

		[Token(Token = "0x400275B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool LockZPosition;

		[Token(Token = "0x400275C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool LockXScale;

		[Token(Token = "0x400275D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool LockYScale;

		[Token(Token = "0x400275E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool LockZScale;

		[Token(Token = "0x400275F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool LockXRotation;

		[Token(Token = "0x4002760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public bool LockYRotation;

		[Token(Token = "0x4002761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool LockZRotation;

		[Token(Token = "0x4002762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 initialPosition;

		[Token(Token = "0x4002763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialRotation;

		[Token(Token = "0x4002764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 initialScale;

		[Token(Token = "0x4002765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 currentPosition;

		[Token(Token = "0x4002766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 currentScale;

		[Token(Token = "0x4002767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentRotation;

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xA6E94C", Offset = "0xA6E94C", VA = "0xA6E94C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xA6E9C8", Offset = "0xA6E9C8", VA = "0xA6E9C8")]
		private void lockPosition()
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xA6EBB8", Offset = "0xA6EBB8", VA = "0xA6EBB8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xA6EBBC", Offset = "0xA6EBBC", VA = "0xA6EBBC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xA6EBC0", Offset = "0xA6EBC0", VA = "0xA6EBC0")]
		public JointHelper()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class RagdollHelper : MonoBehaviour
	{
		[Token(Token = "0x4002768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform player;

		[Token(Token = "0x4002769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Collider> colliders;

		[Token(Token = "0x400276A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider playerCol;

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xC4ADB0", Offset = "0xC4ADB0", VA = "0xC4ADB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xC4AF54", Offset = "0xC4AF54", VA = "0xC4AF54")]
		public RagdollHelper()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class RingHelper : MonoBehaviour
	{
		[Token(Token = "0x400276B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BBD4", Offset = "0x58BBD4")]
		public Grabbable grabbable;

		[Token(Token = "0x400276C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BC0C", Offset = "0x58BC0C")]
		public GrabPoint Grabpoint;

		[Token(Token = "0x400276D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BC44", Offset = "0x58BC44")]
		public Color RingColor;

		[Token(Token = "0x400276E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BC7C", Offset = "0x58BC7C")]
		public Color RingSelectedColor;

		[Token(Token = "0x400276F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BCB4", Offset = "0x58BCB4")]
		public Color RingSecondarySelectedColor;

		[Token(Token = "0x4002770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float ringSizeInRange;

		[Token(Token = "0x4002771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float ringSizeGrabbable;

		[Token(Token = "0x4002772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BCEC", Offset = "0x58BCEC")]
		public bool HideIfHandsAreFull;

		[Token(Token = "0x4002773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BD24", Offset = "0x58BD24")]
		public float RingFadeSpeed;

		[Token(Token = "0x4002774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Canvas canvas;

		[Token(Token = "0x4002775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Text text;

		[Token(Token = "0x4002776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CanvasScaler scaler;

		[Token(Token = "0x4002777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Grabber leftGrabber;

		[Token(Token = "0x4002778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Grabber rightGrabber;

		[Token(Token = "0x4002779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Grabber closestGrabber;

		[Token(Token = "0x400277A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool handsFull;

		[Token(Token = "0x400277B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float _initalOpacity;

		[Token(Token = "0x400277C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _currentOpacity;

		[Token(Token = "0x400277D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform mainCam;

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xAC78C0", Offset = "0xAC78C0", VA = "0xAC78C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xAC7AA8", Offset = "0xAC7AA8", VA = "0xAC7AA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xAC80B0", Offset = "0xAC80B0", VA = "0xAC80B0", Slot = "4")]
		public virtual void AssignCamera()
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xAC81A0", Offset = "0xAC81A0", VA = "0xAC81A0", Slot = "5")]
		public virtual void AssignGrabbers()
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xAC7FA0", Offset = "0xAC7FA0", VA = "0xAC7FA0")]
		private Color getSelectedColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xAC8308", Offset = "0xAC8308", VA = "0xAC8308")]
		public RingHelper()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	public class ScaleMaterialHelper : MonoBehaviour
	{
		[Token(Token = "0x400277E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer ren;

		[Token(Token = "0x400277F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 Tiling;

		[Token(Token = "0x4002780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 Offset;

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x8C2F14", Offset = "0x8C2F14", VA = "0x8C2F14")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x8C2F6C", Offset = "0x8C2F6C", VA = "0x8C2F6C")]
		private void updateTexture()
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x8C307C", Offset = "0x8C307C", VA = "0x8C307C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x8C30B4", Offset = "0x8C30B4", VA = "0x8C30B4")]
		public ScaleMaterialHelper()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class StaticBatch : MonoBehaviour
	{
		[Token(Token = "0x4002781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material CombineMaterial;

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xB521D4", Offset = "0xB521D4", VA = "0xB521D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xB5281C", Offset = "0xB5281C", VA = "0xB5281C")]
		public StaticBatch()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public class TeleportDestination : MonoBehaviour
	{
		[Token(Token = "0x4002782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BD5C", Offset = "0x58BD5C")]
		public Transform DestinationTransform;

		[Token(Token = "0x4002783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BD94", Offset = "0x58BD94")]
		public bool ForcePlayerRotation;

		[Token(Token = "0x4002784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BDCC", Offset = "0x58BDCC")]
		public UnityEvent OnPlayerTeleported;

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xB04348", Offset = "0xB04348", VA = "0xB04348")]
		public TeleportDestination()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public class TeleportPlayerOnEnter : MonoBehaviour
	{
		[Token(Token = "0x4002785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform TeleportDestination;

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xB04350", Offset = "0xB04350", VA = "0xB04350")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xB044A0", Offset = "0xB044A0", VA = "0xB044A0")]
		public TeleportPlayerOnEnter()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public class UITrigger : MonoBehaviour
	{
		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xC5A0B8", Offset = "0xC5A0B8", VA = "0xC5A0B8")]
		public UITrigger()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public class VRIFGrabpointUpdater : MonoBehaviour
	{
		[Token(Token = "0x4002786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58BE04", Offset = "0x58BE04")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BE04", Offset = "0x58BE04")]
		public Vector3 PriorModelOffsetRightPosition;

		[Token(Token = "0x4002787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BE64", Offset = "0x58BE64")]
		public Vector3 NewModelOffsetRightPosition;

		[Token(Token = "0x4002788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BE9C", Offset = "0x58BE9C")]
		public Vector3 PriorModelOffsetRightRotation;

		[Token(Token = "0x4002789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BED4", Offset = "0x58BED4")]
		public Vector3 NewModelOffsetRightRotation;

		[Token(Token = "0x400278A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58BF0C", Offset = "0x58BF0C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BF0C", Offset = "0x58BF0C")]
		public Vector3 PriorModelOffsetLeftPosition;

		[Token(Token = "0x400278B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BF6C", Offset = "0x58BF6C")]
		public Vector3 NewModelOffsetLeftPosition;

		[Token(Token = "0x400278C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BFA4", Offset = "0x58BFA4")]
		public Vector3 PriorModelOffsetLeftRotation;

		[Token(Token = "0x400278D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58BFDC", Offset = "0x58BFDC")]
		public Vector3 NewModelOffsetLeftRotation;

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xC631A8", Offset = "0xC631A8", VA = "0xC631A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xC631AC", Offset = "0xC631AC", VA = "0xC631AC")]
		public void ApplyGrabPointUpdate()
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xC63454", Offset = "0xC63454", VA = "0xC63454")]
		public VRIFGrabpointUpdater()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class UIPointer : MonoBehaviour
	{
		[Token(Token = "0x400278E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C014", Offset = "0x58C014")]
		public ControllerHand ControllerSide;

		[Token(Token = "0x400278F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C04C", Offset = "0x58C04C")]
		public bool AutoUpdateUITransforms;

		[Token(Token = "0x4002790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject cursor;

		[Token(Token = "0x4002791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _cursor;

		[Token(Token = "0x4002792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C084", Offset = "0x58C084")]
		public bool HidePointerIfNoObjectsFound;

		[Token(Token = "0x4002793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C0BC", Offset = "0x58C0BC")]
		public float FixedPointerLength;

		[Token(Token = "0x4002794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C0F4", Offset = "0x58C0F4")]
		public bool CursorScaling;

		[Token(Token = "0x4002795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C12C", Offset = "0x58C12C")]
		public float CursorMinScale;

		[Token(Token = "0x4002796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float CursorMaxScale;

		[Token(Token = "0x4002797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _cursorInitialLocalScale;

		[Token(Token = "0x4002798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C164", Offset = "0x58C164")]
		public float LineDistanceModifier;

		[Token(Token = "0x4002799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRUISystem uiSystem;

		[Token(Token = "0x400279A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PointerEvents selectedPointerEvents;

		[Token(Token = "0x400279B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PointerEventData data;

		[Token(Token = "0x400279C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C19C", Offset = "0x58C19C")]
		public LineRenderer lineRenderer;

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xC596A8", Offset = "0xC596A8", VA = "0xC596A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xC59A1C", Offset = "0xC59A1C", VA = "0xC59A1C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xC59AA0", Offset = "0xC59AA0", VA = "0xC59AA0")]
		public void Update()
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xC59F18", Offset = "0xC59F18", VA = "0xC59F18", Slot = "4")]
		public virtual void HidePointer()
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xC5A07C", Offset = "0xC5A07C", VA = "0xC5A07C")]
		public UIPointer()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5720DC", Offset = "0x5720DC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5720DC", Offset = "0x5720DC")]
	public class VRCanvas : MonoBehaviour
	{
		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xC60FCC", Offset = "0xC60FCC", VA = "0xC60FCC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xC61040", Offset = "0xC61040", VA = "0xC61040")]
		public VRCanvas()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public class VRUISystem : BaseInputModule
	{
		[Token(Token = "0x400279D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58C1D4", Offset = "0x58C1D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C1D4", Offset = "0x58C1D4")]
		public ControllerHand SelectedHand;

		[Token(Token = "0x400279E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C234", Offset = "0x58C234")]
		public Transform LeftPointerTransform;

		[Token(Token = "0x400279F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C26C", Offset = "0x58C26C")]
		public Transform RightPointerTransform;

		[Token(Token = "0x40027A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C2A4", Offset = "0x58C2A4")]
		public List<ControllerBinding> ControllerInput;

		[Token(Token = "0x40027A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C2DC", Offset = "0x58C2DC")]
		public InputActionReference UIInputAction;

		[Token(Token = "0x40027A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C314", Offset = "0x58C314")]
		public bool AddPhysicsRaycaster;

		[Token(Token = "0x40027A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public LayerMask PhysicsRaycasterEventMask;

		[Token(Token = "0x40027A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C34C", Offset = "0x58C34C")]
		public bool RightThumbstickScroll;

		[Token(Token = "0x40027A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58C384", Offset = "0x58C384")]
		public GameObject PressingObject;

		[Token(Token = "0x40027A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject DraggingObject;

		[Token(Token = "0x40027A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject ReleasingObject;

		[Token(Token = "0x40027A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58C3BC", Offset = "0x58C3BC")]
		private PointerEventData <EventData>k__BackingField;

		[Token(Token = "0x40027A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Camera cameraCaster;

		[Token(Token = "0x40027AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GameObject _initialPressObject;

		[Token(Token = "0x40027AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _lastInputDown;

		[Token(Token = "0x40027AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		private bool inputDown;

		[Token(Token = "0x40027AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VRUISystem _instance;

		[Token(Token = "0x170002FF")]
		public PointerEventData EventData
		{
			[Token(Token = "0x6001E85")]
			[Address(RVA = "0xC634A4", Offset = "0xC634A4", VA = "0xC634A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5928E8", Offset = "0x5928E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E86")]
			[Address(RVA = "0xC634AC", Offset = "0xC634AC", VA = "0xC634AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5928F8", Offset = "0x5928F8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000300")]
		public static VRUISystem Instance
		{
			[Token(Token = "0x6001E87")]
			[Address(RVA = "0xC59810", Offset = "0xC59810", VA = "0xC59810")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xC634B4", Offset = "0xC634B4", VA = "0xC634B4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xC635A0", Offset = "0xC635A0", VA = "0xC635A0")]
		private void init()
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xC63718", Offset = "0xC63718", VA = "0xC63718", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xC63A98", Offset = "0xC63A98", VA = "0xC63A98", Slot = "26")]
		public virtual bool InputReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xC63C34", Offset = "0xC63C34", VA = "0xC63C34", Slot = "27")]
		public virtual bool CameraCasterReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xC63CD8", Offset = "0xC63CD8", VA = "0xC63CD8", Slot = "28")]
		public virtual void PressDown()
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xC63F14", Offset = "0xC63F14", VA = "0xC63F14", Slot = "29")]
		public virtual void Press()
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xC64104", Offset = "0xC64104", VA = "0xC64104", Slot = "30")]
		public virtual void Release()
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xC643A4", Offset = "0xC643A4", VA = "0xC643A4", Slot = "31")]
		public virtual void ClearAll()
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xC64430", Offset = "0xC64430", VA = "0xC64430", Slot = "32")]
		public virtual void SetPressingObject(GameObject pressing)
		{
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xC64468", Offset = "0xC64468", VA = "0xC64468", Slot = "33")]
		public virtual void SetDraggingObject(GameObject dragging)
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xC64488", Offset = "0xC64488", VA = "0xC64488", Slot = "34")]
		public virtual void SetReleasingObject(GameObject releasing)
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xC64490", Offset = "0xC64490", VA = "0xC64490", Slot = "35")]
		public virtual void AssignCameraToAllCanvases(Camera cam)
		{
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xC64580", Offset = "0xC64580", VA = "0xC64580", Slot = "36")]
		public virtual void AddCanvas(Canvas canvas)
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xC64594", Offset = "0xC64594", VA = "0xC64594", Slot = "37")]
		public virtual void AddCanvasToCamera(Canvas canvas, Camera cam)
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xC645B4", Offset = "0xC645B4", VA = "0xC645B4", Slot = "38")]
		public virtual void UpdateControllerHand(ControllerHand hand)
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xC64724", Offset = "0xC64724", VA = "0xC64724")]
		public VRUISystem()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public class DestroyIfPlayMode : MonoBehaviour
	{
		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xA1CEAC", Offset = "0xA1CEAC", VA = "0xA1CEAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0xA1CF70", Offset = "0xA1CF70", VA = "0xA1CF70")]
		public DestroyIfPlayMode()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	public class VRUtils : MonoBehaviour
	{
		[Token(Token = "0x40027AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VRUtils _instance;

		[Token(Token = "0x40027AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color DebugTextColor;

		[Token(Token = "0x40027B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform DebugTextHolder;

		[Token(Token = "0x40027B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float MaxTextEntries;

		[Token(Token = "0x17000301")]
		public static VRUtils Instance
		{
			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0xC647DC", Offset = "0xC647DC", VA = "0xC647DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xC6494C", Offset = "0xC6494C", VA = "0xC6494C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0xC64A58", Offset = "0xC64A58", VA = "0xC64A58")]
		public void Log(string msg)
		{
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0xC64DFC", Offset = "0xC64DFC", VA = "0xC64DFC")]
		public AudioSource PlaySpatialClipAt(AudioClip clip, Vector3 pos, float volume, float spatialBlend = 1f, float randomizePitch = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0xC64FC8", Offset = "0xC64FC8", VA = "0xC64FC8")]
		private float getRandomizedPitch(float randomAmount)
		{
			return default(float);
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0xC65010", Offset = "0xC65010", VA = "0xC65010")]
		public VRUtils()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public class AmmoDispenser : MonoBehaviour
	{
		[Token(Token = "0x40027B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Grabber LeftGrabber;

		[Token(Token = "0x40027B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabber RightGrabber;

		[Token(Token = "0x40027B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject AmmoDispenserObject;

		[Token(Token = "0x40027B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject PistolClip;

		[Token(Token = "0x40027B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject ShotgunShell;

		[Token(Token = "0x40027B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject RifleClip;

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x87DAD4", Offset = "0x87DAD4", VA = "0x87DAD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x87DB4C", Offset = "0x87DB4C", VA = "0x87DB4C")]
		private bool grabberHasWeapon(Grabber g)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0x87DC9C", Offset = "0x87DC9C", VA = "0x87DC9C")]
		private GameObject getAmmo()
		{
			return null;
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0x87DF10", Offset = "0x87DF10", VA = "0x87DF10")]
		public void GrabAmmo(Grabber grabber)
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x87E184", Offset = "0x87E184", VA = "0x87E184")]
		public AmmoDispenser()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public class AmmoDisplay : MonoBehaviour
	{
		[Token(Token = "0x40027B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RaycastWeapon Weapon;

		[Token(Token = "0x40027B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text AmmoLabel;

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x87E18C", Offset = "0x87E18C", VA = "0x87E18C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x87E274", Offset = "0x87E274", VA = "0x87E274")]
		public AmmoDisplay()
		{
		}
	}
	[Token(Token = "0x20003E4")]
	public class Bullet : MonoBehaviour
	{
		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x92AE70", Offset = "0x92AE70", VA = "0x92AE70")]
		public Bullet()
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public class BulletInsert : MonoBehaviour
	{
		[Token(Token = "0x40027BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RaycastWeapon Weapon;

		[Token(Token = "0x40027BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string AcceptBulletName;

		[Token(Token = "0x40027BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip InsertSound;

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x92B2C4", Offset = "0x92B2C4", VA = "0x92B2C4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0x92B528", Offset = "0x92B528", VA = "0x92B528")]
		public BulletInsert()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class MagazineSlide : MonoBehaviour
	{
		[Token(Token = "0x20005D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573308", Offset = "0x573308")]
		private sealed class <EjectMagRoutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grabbable ejectedMag;

			[Token(Token = "0x4003096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MagazineSlide <>4__this;

			[Token(Token = "0x17000430")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024FA")]
				[Address(RVA = "0x922100", Offset = "0x922100", VA = "0x922100", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000431")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024FC")]
				[Address(RVA = "0x922148", Offset = "0x922148", VA = "0x922148", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024F7")]
			[Address(RVA = "0x921E50", Offset = "0x921E50", VA = "0x921E50")]
			[DebuggerHidden]
			public <EjectMagRoutine>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60024F8")]
			[Address(RVA = "0x921E7C", Offset = "0x921E7C", VA = "0x921E7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024F9")]
			[Address(RVA = "0x921E80", Offset = "0x921E80", VA = "0x921E80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024FB")]
			[Address(RVA = "0x922108", Offset = "0x922108", VA = "0x922108", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40027BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AcceptableMagazineName;

		[Token(Token = "0x40027BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable AttachedWeapon;

		[Token(Token = "0x40027BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ClipSnapDistance;

		[Token(Token = "0x40027C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ClipUnsnapDistance;

		[Token(Token = "0x40027C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float EjectForce;

		[Token(Token = "0x40027C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Grabbable HeldMagazine;

		[Token(Token = "0x40027C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Collider HeldCollider;

		[Token(Token = "0x40027C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float MagazineDistance;

		[Token(Token = "0x40027C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool magazineInPlace;

		[Token(Token = "0x40027C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool lockedInPlace;

		[Token(Token = "0x40027C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip ClipAttachSound;

		[Token(Token = "0x40027C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip ClipDetachSound;

		[Token(Token = "0x40027C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RaycastWeapon parentWeapon;

		[Token(Token = "0x40027CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GrabberArea grabClipArea;

		[Token(Token = "0x40027CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float lastEjectTime;

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xA3EC40", Offset = "0xA3EC40", VA = "0xA3EC40")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xA3EDB8", Offset = "0xA3EDB8", VA = "0xA3EDB8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xA3F2F4", Offset = "0xA3F2F4", VA = "0xA3F2F4")]
		private bool recentlyEjected()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xA3F2A0", Offset = "0xA3F2A0", VA = "0xA3F2A0")]
		private void moveMagazine(Vector3 localPosition)
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0xA3F094", Offset = "0xA3F094", VA = "0xA3F094")]
		public void CheckGrabClipInput()
		{
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0xA3F330", Offset = "0xA3F330", VA = "0xA3F330")]
		private void attachMagazine()
		{
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0xA3F598", Offset = "0xA3F598", VA = "0xA3F598")]
		private Grabbable detachMagazine()
		{
			return null;
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0xA3F968", Offset = "0xA3F968", VA = "0xA3F968")]
		public void EjectMagazine()
		{
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0xA3F9B0", Offset = "0xA3F9B0", VA = "0xA3F9B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x592908", Offset = "0x592908")]
		private IEnumerator EjectMagRoutine(Grabbable ejectedMag)
		{
			return null;
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0xA3F890", Offset = "0xA3F890", VA = "0xA3F890")]
		public void OnGrabClipArea(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xA3FA28", Offset = "0xA3FA28", VA = "0xA3FA28", Slot = "4")]
		public virtual void AttachGrabbableMagazine(Grabbable mag, Collider magCollider)
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xA3FB08", Offset = "0xA3FB08", VA = "0xA3FB08")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0xA3FC44", Offset = "0xA3FC44", VA = "0xA3FC44")]
		public MagazineSlide()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class Projectile : MonoBehaviour
	{
		[Token(Token = "0x20005D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573318", Offset = "0x573318")]
		private sealed class <CheckForRaycast>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Projectile <>4__this;

			[Token(Token = "0x17000432")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002500")]
				[Address(RVA = "0x8699E4", Offset = "0x8699E4", VA = "0x8699E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000433")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002502")]
				[Address(RVA = "0x869A2C", Offset = "0x869A2C", VA = "0x869A2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024FD")]
			[Address(RVA = "0x8698E0", Offset = "0x8698E0", VA = "0x8698E0")]
			[DebuggerHidden]
			public <CheckForRaycast>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60024FE")]
			[Address(RVA = "0x86990C", Offset = "0x86990C", VA = "0x86990C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024FF")]
			[Address(RVA = "0x869910", Offset = "0x869910", VA = "0x869910", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002501")]
			[Address(RVA = "0x8699EC", Offset = "0x8699EC", VA = "0x8699EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40027CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject HitFXPrefab;

		[Token(Token = "0x40027CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _checkRaycast;

		[Token(Token = "0x40027CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Damage;

		[Token(Token = "0x40027CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AddRigidForce;

		[Token(Token = "0x40027D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask ValidLayers;

		[Token(Token = "0x40027D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool StickToObject;

		[Token(Token = "0x40027D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MinForceHit;

		[Token(Token = "0x40027D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C3CC", Offset = "0x58C3CC")]
		public UnityEvent onDealtDamageEvent;

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xC6B6A0", Offset = "0xC6B6A0", VA = "0xC6B6A0")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xC6B6AC", Offset = "0xC6B6AC", VA = "0xC6B6AC", Slot = "4")]
		public virtual void OnCollisionEvent(Collision collision)
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xC6BA38", Offset = "0xC6BA38", VA = "0xC6BA38", Slot = "5")]
		public virtual void DoHitFX(Vector3 pos, Quaternion rot, Collider col)
		{
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0xC6BC38", Offset = "0xC6BC38", VA = "0xC6BC38", Slot = "6")]
		public virtual void MarkAsRaycastBullet()
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0xC6BCD8", Offset = "0xC6BCD8", VA = "0xC6BCD8", Slot = "7")]
		public virtual void DoRayCastProjectile()
		{
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xC6BC6C", Offset = "0xC6BC6C", VA = "0xC6BC6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x592968", Offset = "0x592968")]
		private IEnumerator CheckForRaycast()
		{
			return null;
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xC6BEC0", Offset = "0xC6BEC0", VA = "0xC6BEC0")]
		public Projectile()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class RaycastWeapon : GrabbableEvents
	{
		[Token(Token = "0x20005DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573328", Offset = "0x573328")]
		private sealed class <doMuzzleFlash>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400309A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400309B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400309C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RaycastWeapon <>4__this;

			[Token(Token = "0x17000434")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002506")]
				[Address(RVA = "0x86E76C", Offset = "0x86E76C", VA = "0x86E76C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000435")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002508")]
				[Address(RVA = "0x86E7B4", Offset = "0x86E7B4", VA = "0x86E7B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002503")]
			[Address(RVA = "0x86E610", Offset = "0x86E610", VA = "0x86E610")]
			[DebuggerHidden]
			public <doMuzzleFlash>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x6002504")]
			[Address(RVA = "0x86E63C", Offset = "0x86E63C", VA = "0x86E63C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002505")]
			[Address(RVA = "0x86E640", Offset = "0x86E640", VA = "0x86E640", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002507")]
			[Address(RVA = "0x86E774", Offset = "0x86E774", VA = "0x86E774", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573338", Offset = "0x573338")]
		private sealed class <animateSlideAndEject>d__75 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400309D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400309E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400309F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RaycastWeapon <>4__this;

			[Token(Token = "0x40030A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <frames>5__2;

			[Token(Token = "0x40030A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private bool <slideEndReached>5__3;

			[Token(Token = "0x40030A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <slideDestination>5__4;

			[Token(Token = "0x40030A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private bool <slideBeginningReached>5__5;

			[Token(Token = "0x17000436")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600250C")]
				[Address(RVA = "0x86E5C0", Offset = "0x86E5C0", VA = "0x86E5C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000437")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600250E")]
				[Address(RVA = "0x86E608", Offset = "0x86E608", VA = "0x86E608", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002509")]
			[Address(RVA = "0x86E08C", Offset = "0x86E08C", VA = "0x86E08C")]
			[DebuggerHidden]
			public <animateSlideAndEject>d__75(int <>1__state)
			{
			}

			[Token(Token = "0x600250A")]
			[Address(RVA = "0x86E0B8", Offset = "0x86E0B8", VA = "0x86E0B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600250B")]
			[Address(RVA = "0x86E0BC", Offset = "0x86E0BC", VA = "0x86E0BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600250D")]
			[Address(RVA = "0x86E5C8", Offset = "0x86E5C8", VA = "0x86E5C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40027D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58C404", Offset = "0x58C404")]
		public float MaxRange;

		[Token(Token = "0x40027D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Damage;

		[Token(Token = "0x40027D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C43C", Offset = "0x58C43C")]
		public FiringType FiringMethod;

		[Token(Token = "0x40027D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public ReloadType ReloadMethod;

		[Token(Token = "0x40027D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C474", Offset = "0x58C474")]
		public float FiringRate;

		[Token(Token = "0x40027D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float lastShotTime;

		[Token(Token = "0x40027DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C4AC", Offset = "0x58C4AC")]
		public float BulletImpactForce;

		[Token(Token = "0x40027DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C4E4", Offset = "0x58C4E4")]
		public float InternalAmmo;

		[Token(Token = "0x40027DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C51C", Offset = "0x58C51C")]
		public float MaxInternalAmmo;

		[Token(Token = "0x40027DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C554", Offset = "0x58C554")]
		public bool AutoChamberRounds;

		[Token(Token = "0x40027DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C58C", Offset = "0x58C58C")]
		public bool MustChamberRounds;

		[Token(Token = "0x40027DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58C5C4", Offset = "0x58C5C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C5C4", Offset = "0x58C5C4")]
		public bool AlwaysFireProjectile;

		[Token(Token = "0x40027E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C624", Offset = "0x58C624")]
		public bool FireProjectileInSlowMo;

		[Token(Token = "0x40027E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C65C", Offset = "0x58C65C")]
		public float SlowMoRateOfFire;

		[Token(Token = "0x40027E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C694", Offset = "0x58C694")]
		public float ShotForce;

		[Token(Token = "0x40027E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C6CC", Offset = "0x58C6CC")]
		public float BulletCasingForce;

		[Token(Token = "0x40027E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58C704", Offset = "0x58C704")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C704", Offset = "0x58C704")]
		public Vector3 RecoilForce;

		[Token(Token = "0x40027E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C764", Offset = "0x58C764")]
		public float RecoilDuration;

		[Token(Token = "0x40027E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody weaponRigid;

		[Token(Token = "0x40027E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58C79C", Offset = "0x58C79C")]
		public LayerMask ValidLayers;

		[Token(Token = "0x40027E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58C7D4", Offset = "0x58C7D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C7D4", Offset = "0x58C7D4")]
		public Transform TriggerTransform;

		[Token(Token = "0x40027E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C834", Offset = "0x58C834")]
		public Transform SlideTransform;

		[Token(Token = "0x40027EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C86C", Offset = "0x58C86C")]
		public Transform MuzzlePointTransform;

		[Token(Token = "0x40027EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C8A4", Offset = "0x58C8A4")]
		public Transform EjectPointTransform;

		[Token(Token = "0x40027EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C8DC", Offset = "0x58C8DC")]
		public Transform ChamberedBullet;

		[Token(Token = "0x40027ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C914", Offset = "0x58C914")]
		public GameObject MuzzleFlashObject;

		[Token(Token = "0x40027EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C94C", Offset = "0x58C94C")]
		public GameObject BulletCasingPrefab;

		[Token(Token = "0x40027EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C984", Offset = "0x58C984")]
		public GameObject ProjectilePrefab;

		[Token(Token = "0x40027F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C9BC", Offset = "0x58C9BC")]
		public GameObject HitFXPrefab;

		[Token(Token = "0x40027F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58C9F4", Offset = "0x58C9F4")]
		public AudioClip GunShotSound;

		[Token(Token = "0x40027F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58CA2C", Offset = "0x58CA2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58CA2C", Offset = "0x58CA2C")]
		public float GunShotVolume;

		[Token(Token = "0x40027F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58CA80", Offset = "0x58CA80")]
		public AudioClip EmptySound;

		[Token(Token = "0x40027F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58CAB8", Offset = "0x58CAB8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58CAB8", Offset = "0x58CAB8")]
		public float EmptySoundVolume;

		[Token(Token = "0x40027F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58CB0C", Offset = "0x58CB0C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58CB0C", Offset = "0x58CB0C")]
		public float SlideDistance;

		[Token(Token = "0x40027F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58CB6C", Offset = "0x58CB6C")]
		public bool ForceSlideBackOnLastShot;

		[Token(Token = "0x40027F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58CBA4", Offset = "0x58CBA4")]
		public float slideSpeed;

		[Token(Token = "0x40027F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float minSlideDistance;

		[Token(Token = "0x40027F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58CBDC", Offset = "0x58CBDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58CBDC", Offset = "0x58CBDC")]
		public List<GrabbedControllerBinding> EjectInput;

		[Token(Token = "0x40027FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58CC3C", Offset = "0x58CC3C")]
		public List<GrabbedControllerBinding> ReleaseSlideInput;

		[Token(Token = "0x40027FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58CC74", Offset = "0x58CC74")]
		public List<GrabbedControllerBinding> ReloadInput;

		[Token(Token = "0x40027FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58CCAC", Offset = "0x58CCAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58CCAC", Offset = "0x58CCAC")]
		public bool BulletInChamber;

		[Token(Token = "0x40027FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58CD0C", Offset = "0x58CD0C")]
		public bool EmptyBulletInChamber;

		[Token(Token = "0x40027FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58CD44", Offset = "0x58CD44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58CD44", Offset = "0x58CD44")]
		public UnityEvent onShootEvent;

		[Token(Token = "0x40027FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58CDA4", Offset = "0x58CDA4")]
		public UnityEvent onAttachedAmmoEvent;

		[Token(Token = "0x4002800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58CDDC", Offset = "0x58CDDC")]
		public UnityEvent onDetachedAmmoEvent;

		[Token(Token = "0x4002801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58CE14", Offset = "0x58CE14")]
		public UnityEvent onWeaponChargedEvent;

		[Token(Token = "0x4002802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58CE4C", Offset = "0x58CE4C")]
		public FloatEvent onDealtDamageEvent;

		[Token(Token = "0x4002803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x58CE84", Offset = "0x58CE84")]
		public RaycastHitEvent onRaycastHitEvent;

		[Token(Token = "0x4002804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool slideForcedBack;

		[Token(Token = "0x4002805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private WeaponSlide ws;

		[Token(Token = "0x4002806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private bool readyToShoot;

		[Token(Token = "0x4002807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
		private bool playedEmptySound;

		[Token(Token = "0x4002808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private IEnumerator shotRoutine;

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xD23E98", Offset = "0xD23E98", VA = "0xD23E98")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0xD24024", Offset = "0xD24024", VA = "0xD24024", Slot = "16")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0xD24168", Offset = "0xD24168", VA = "0xD24168")]
		private void checkSlideInput()
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0xD2428C", Offset = "0xD2428C", VA = "0xD2428C")]
		private void checkEjectInput()
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0xD243B0", Offset = "0xD243B0", VA = "0xD243B0", Slot = "27")]
		public virtual void CheckReloadInput()
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0xD244E0", Offset = "0xD244E0", VA = "0xD244E0", Slot = "28")]
		public virtual void UnlockSlide()
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0xD24574", Offset = "0xD24574", VA = "0xD24574", Slot = "29")]
		public virtual void EjectMagazine()
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0xD24628", Offset = "0xD24628", VA = "0xD24628", Slot = "30")]
		public virtual void Shoot()
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0xD24D30", Offset = "0xD24D30", VA = "0xD24D30", Slot = "31")]
		public virtual void ApplyRecoil()
		{
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0xD24E84", Offset = "0xD24E84", VA = "0xD24E84", Slot = "32")]
		public virtual void OnRaycastHit(RaycastHit hit)
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xD251BC", Offset = "0xD251BC", VA = "0xD251BC", Slot = "33")]
		public virtual void ApplyParticleFX(Vector3 position, Quaternion rotation, Collider attachTo)
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xD25330", Offset = "0xD25330", VA = "0xD25330", Slot = "34")]
		public virtual void OnAttachedAmmo()
		{
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xD25368", Offset = "0xD25368", VA = "0xD25368", Slot = "35")]
		public virtual void OnDetachedAmmo()
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xD253A0", Offset = "0xD253A0", VA = "0xD253A0", Slot = "36")]
		public virtual int GetBulletCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xD25424", Offset = "0xD25424", VA = "0xD25424", Slot = "37")]
		public virtual void RemoveBullet()
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0xD25548", Offset = "0xD25548", VA = "0xD25548", Slot = "38")]
		public virtual void Reload()
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xD23F6C", Offset = "0xD23F6C", VA = "0xD23F6C")]
		private void updateChamberedBullet()
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xD24C00", Offset = "0xD24C00", VA = "0xD24C00")]
		private void chamberRound()
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xD25554", Offset = "0xD25554", VA = "0xD25554")]
		private void randomizeMuzzleFlashScaleRotation()
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xD2561C", Offset = "0xD2561C", VA = "0xD2561C", Slot = "39")]
		public virtual void OnWeaponCharged(bool allowCasingEject)
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xD256DC", Offset = "0xD256DC", VA = "0xD256DC", Slot = "40")]
		protected virtual void ejectCasing()
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xD24CC4", Offset = "0xD24CC4", VA = "0xD24CC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5929C8", Offset = "0x5929C8")]
		private IEnumerator doMuzzleFlash()
		{
			return null;
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xD24C58", Offset = "0xD24C58", VA = "0xD24C58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x592A28", Offset = "0x592A28")]
		private IEnumerator animateSlideAndEject()
		{
			return null;
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0xD25864", Offset = "0xD25864", VA = "0xD25864")]
		public RaycastWeapon()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public enum FiringType
	{
		[Token(Token = "0x400280A")]
		Semi,
		[Token(Token = "0x400280B")]
		Automatic
	}
	[Token(Token = "0x20003EA")]
	public enum ReloadType
	{
		[Token(Token = "0x400280D")]
		InfiniteAmmo,
		[Token(Token = "0x400280E")]
		ManualClip,
		[Token(Token = "0x400280F")]
		InternalAmmo
	}
	[Token(Token = "0x20003EB")]
	public class WeaponSlide : MonoBehaviour
	{
		[Token(Token = "0x20005DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573348", Offset = "0x573348")]
		private sealed class <UnlockSlideRoutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WeaponSlide <>4__this;

			[Token(Token = "0x17000438")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002512")]
				[Address(RVA = "0x1377B68", Offset = "0x1377B68", VA = "0x1377B68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000439")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002514")]
				[Address(RVA = "0x1377BB0", Offset = "0x1377BB0", VA = "0x1377BB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600250F")]
			[Address(RVA = "0x1377A8C", Offset = "0x1377A8C", VA = "0x1377A8C")]
			[DebuggerHidden]
			public <UnlockSlideRoutine>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6002510")]
			[Address(RVA = "0x1377AB8", Offset = "0x1377AB8", VA = "0x1377AB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002511")]
			[Address(RVA = "0x1377ABC", Offset = "0x1377ABC", VA = "0x1377ABC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002513")]
			[Address(RVA = "0x1377B70", Offset = "0x1377B70", VA = "0x1377B70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MinLocalZ;

		[Token(Token = "0x4002811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxLocalZ;

		[Token(Token = "0x4002812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool slidingBack;

		[Token(Token = "0x4002813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool LockedBack;

		[Token(Token = "0x4002814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip SlideReleaseSound;

		[Token(Token = "0x4002815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip LockedBackSound;

		[Token(Token = "0x4002816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool ZeroMassWhenNotHeld;

		[Token(Token = "0x4002817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RaycastWeapon parentWeapon;

		[Token(Token = "0x4002818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Grabbable parentGrabbable;

		[Token(Token = "0x4002819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 initialLocalPos;

		[Token(Token = "0x400281A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Grabbable thisGrabbable;

		[Token(Token = "0x400281B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioSource audioSource;

		[Token(Token = "0x400281C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody rigid;

		[Token(Token = "0x400281D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float initialMass;

		[Token(Token = "0x400281E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 _lockPosition;

		[Token(Token = "0x400281F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool lockSlidePosition;

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0x93FEEC", Offset = "0x93FEEC", VA = "0x93FEEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0x9400B4", Offset = "0x9400B4", VA = "0x9400B4", Slot = "4")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0x940168", Offset = "0x940168", VA = "0x940168", Slot = "5")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0x94021C", Offset = "0x94021C", VA = "0x94021C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0x9404F8", Offset = "0x9404F8", VA = "0x9404F8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0x9405F0", Offset = "0x9405F0", VA = "0x9405F0", Slot = "6")]
		public virtual void LockBack()
		{
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0x940694", Offset = "0x940694", VA = "0x940694", Slot = "7")]
		public virtual void UnlockBack()
		{
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0x9403C0", Offset = "0x9403C0", VA = "0x9403C0")]
		private void onSlideBack()
		{
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0x940494", Offset = "0x940494", VA = "0x940494")]
		private void onSlideForward()
		{
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0x9408F4", Offset = "0x9408F4", VA = "0x9408F4", Slot = "8")]
		public virtual void LockSlidePosition()
		{
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0x940964", Offset = "0x940964", VA = "0x940964", Slot = "9")]
		public virtual void UnlockSlidePosition()
		{
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0x94099C", Offset = "0x94099C", VA = "0x94099C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x592A88", Offset = "0x592A88")]
		public IEnumerator UnlockSlideRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0x9407B4", Offset = "0x9407B4", VA = "0x9407B4")]
		private void playSoundInterval(float fromSeconds, float toSeconds, float volume)
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0x940A08", Offset = "0x940A08", VA = "0x940A08")]
		public WeaponSlide()
		{
		}
	}
}
namespace AwesomeTechnologies.Demo
{
	[Token(Token = "0x20003EC")]
	public class ExtendedFlycam : MonoBehaviour
	{
		[Token(Token = "0x4002820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float CameraSensitivity;

		[Token(Token = "0x4002821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float ClimbSpeed;

		[Token(Token = "0x4002822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float NormalMoveSpeed;

		[Token(Token = "0x4002823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float SlowMoveFactor;

		[Token(Token = "0x4002824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float FastMoveFactor;

		[Token(Token = "0x4002825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _rotationX;

		[Token(Token = "0x4002826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _rotationY;

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0x8AF53C", Offset = "0x8AF53C", VA = "0x8AF53C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0x8AF574", Offset = "0x8AF574", VA = "0x8AF574")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0x8AFA2C", Offset = "0x8AFA2C", VA = "0x8AFA2C")]
		public ExtendedFlycam()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class HarvesterDemo : MonoBehaviour
	{
		[Token(Token = "0x20005DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573358", Offset = "0x573358")]
		private sealed class <DestroyEffect>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x40030AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject go;

			[Token(Token = "0x1700043A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002518")]
				[Address(RVA = "0x9215A4", Offset = "0x9215A4", VA = "0x9215A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600251A")]
				[Address(RVA = "0x9215EC", Offset = "0x9215EC", VA = "0x9215EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002515")]
			[Address(RVA = "0x92149C", Offset = "0x92149C", VA = "0x92149C")]
			[DebuggerHidden]
			public <DestroyEffect>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002516")]
			[Address(RVA = "0x9214C8", Offset = "0x9214C8", VA = "0x9214C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002517")]
			[Address(RVA = "0x9214CC", Offset = "0x9214CC", VA = "0x9214CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002519")]
			[Address(RVA = "0x9215AC", Offset = "0x9215AC", VA = "0x9215AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D AxeCursor;

		[Token(Token = "0x4002828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool ChangeCursor;

		[Token(Token = "0x4002829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject SpawnEffect;

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0xE50A94", Offset = "0xE50A94", VA = "0xE50A94")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0xE50AE0", Offset = "0xE50AE0", VA = "0xE50AE0")]
		private void SetHarvestCursor()
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0xE50C5C", Offset = "0xE50C5C", VA = "0xE50C5C")]
		private void RaycastForHarvestObject()
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0xE50E50", Offset = "0xE50E50", VA = "0xE50E50")]
		private void SpawnHarvestEffect(Vector3 position)
		{
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0xE50F9C", Offset = "0xE50F9C", VA = "0xE50F9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x592AE8", Offset = "0x592AE8")]
		private IEnumerator DestroyEffect(GameObject go, float time)
		{
			return null;
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0xE51018", Offset = "0xE51018", VA = "0xE51018")]
		public HarvesterDemo()
		{
		}
	}
}
namespace AwesomeTechnologies.External.MapMagicInterface
{
	[Token(Token = "0x20003EE")]
	public class MapMagicInfiniteTerrain : MonoBehaviour
	{
		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0xA4005C", Offset = "0xA4005C", VA = "0xA4005C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0xA40060", Offset = "0xA40060", VA = "0xA40060")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0xA40064", Offset = "0xA40064", VA = "0xA40064")]
		private void OnGenerateCompleted(Terrain terrain)
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xA40170", Offset = "0xA40170", VA = "0xA40170")]
		public MapMagicInfiniteTerrain()
		{
		}
	}
}
namespace AmplifyImpostors
{
	[Token(Token = "0x20003EF")]
	public enum LODReplacement
	{
		[Token(Token = "0x400282B")]
		DoNothing,
		[Token(Token = "0x400282C")]
		ReplaceCulled,
		[Token(Token = "0x400282D")]
		ReplaceLast,
		[Token(Token = "0x400282E")]
		ReplaceAllExceptFirst,
		[Token(Token = "0x400282F")]
		ReplaceSpecific,
		[Token(Token = "0x4002830")]
		ReplaceAfterSpecific,
		[Token(Token = "0x4002831")]
		InsertAfter
	}
	[Token(Token = "0x20003F0")]
	public enum CutMode
	{
		[Token(Token = "0x4002833")]
		Automatic,
		[Token(Token = "0x4002834")]
		Manual
	}
	[Token(Token = "0x20003F1")]
	public enum FolderMode
	{
		[Token(Token = "0x4002836")]
		RelativeToPrefab,
		[Token(Token = "0x4002837")]
		Global
	}
	[Token(Token = "0x20003F2")]
	public enum RenderPipelineInUse
	{
		[Token(Token = "0x4002839")]
		None = 0,
		[Token(Token = "0x400283A")]
		LW = 1,
		[Token(Token = "0x400283B")]
		HD = 2,
		[Token(Token = "0x400283C")]
		URP = 3,
		[Token(Token = "0x400283D")]
		Custom = 3
	}
	[Token(Token = "0x20003F3")]
	public class AmplifyImpostor : MonoBehaviour
	{
		[Token(Token = "0x400283E")]
		private const string ShaderGUID = "e82933f4c0eb9ba42aab0739f48efe21";

		[Token(Token = "0x400283F")]
		private const string DilateGUID = "57c23892d43bc9f458360024c5985405";

		[Token(Token = "0x4002840")]
		private const string PackerGUID = "31bd3cd74692f384a916d9d7ea87710d";

		[Token(Token = "0x4002841")]
		private const string ShaderOctaGUID = "572f9be5706148142b8da6e9de53acdb";

		[Token(Token = "0x4002842")]
		private const string StandardPreset = "e4786beb7716da54dbb02a632681cc37";

		[Token(Token = "0x4002843")]
		private const string LWPreset = "089f3a2f6b5f48348a48c755f8d9a7a2";

		[Token(Token = "0x4002844")]
		private const string LWShaderOctaGUID = "94e2ddcdfb3257a43872042f97e2fb01";

		[Token(Token = "0x4002845")]
		private const string LWShaderGUID = "990451a2073f6994ebf9fd6f90a842b3";

		[Token(Token = "0x4002846")]
		private const string HDPreset = "47b6b3dcefe0eaf4997acf89caf8c75e";

		[Token(Token = "0x4002847")]
		private const string HDShaderOctaGUID = "56236dc63ad9b7949b63a27f0ad180b3";

		[Token(Token = "0x4002848")]
		private const string HDShaderGUID = "175c951fec709c44fa2f26b8ab78b8dd";

		[Token(Token = "0x4002849")]
		private const string UPreset = "0403878495ffa3c4e9d4bcb3eac9b559";

		[Token(Token = "0x400284A")]
		private const string UShaderOctaGUID = "83dd8de9a5c14874884f9012def4fdcc";

		[Token(Token = "0x400284B")]
		private const string UShaderGUID = "da79d698f4bf0164e910ad798d07efdf";

		[Token(Token = "0x400284C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AmplifyImpostorAsset m_data;

		[Token(Token = "0x400284D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_rootTransform;

		[Token(Token = "0x400284E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LODGroup m_lodGroup;

		[Token(Token = "0x400284F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer[] m_renderers;

		[Token(Token = "0x4002850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LODReplacement m_lodReplacement;

		[Token(Token = "0x4002851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public RenderPipelineInUse m_renderPipelineInUse;

		[Token(Token = "0x4002852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int m_insertIndex;

		[Token(Token = "0x4002853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public GameObject m_lastImpostor;

		[Token(Token = "0x4002854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public string m_folderPath;

		[NonSerialized]
		[Token(Token = "0x4002855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string m_impostorName;

		[Token(Token = "0x4002856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public CutMode m_cutMode;

		[NonSerialized]
		[Token(Token = "0x4002857")]
		private const float StartXRotation = -90f;

		[NonSerialized]
		[Token(Token = "0x4002858")]
		private const float StartYRotation = 90f;

		[NonSerialized]
		[Token(Token = "0x4002859")]
		private const int MinAlphaResolution = 256;

		[NonSerialized]
		[Token(Token = "0x400285A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTexture[] m_rtGBuffers;

		[NonSerialized]
		[Token(Token = "0x400285B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RenderTexture[] m_alphaGBuffers;

		[NonSerialized]
		[Token(Token = "0x400285C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderTexture m_trueDepth;

		[NonSerialized]
		[Token(Token = "0x400285D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Texture2D m_alphaTex;

		[NonSerialized]
		[Token(Token = "0x400285E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_xyFitSize;

		[NonSerialized]
		[Token(Token = "0x400285F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_depthFitSize;

		[NonSerialized]
		[Token(Token = "0x4002860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 m_pixelOffset;

		[NonSerialized]
		[Token(Token = "0x4002861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Bounds m_originalBound;

		[NonSerialized]
		[Token(Token = "0x4002862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 m_oriPos;

		[NonSerialized]
		[Token(Token = "0x4002863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion m_oriRot;

		[NonSerialized]
		[Token(Token = "0x4002864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 m_oriSca;

		[NonSerialized]
		[Token(Token = "0x4002865")]
		private const int BlockSize = 65536;

		[Token(Token = "0x17000302")]
		public AmplifyImpostorAsset Data
		{
			[Token(Token = "0x6001EF2")]
			[Address(RVA = "0x87E27C", Offset = "0x87E27C", VA = "0x87E27C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0x87E284", Offset = "0x87E284", VA = "0x87E284")]
			set
			{
			}
		}

		[Token(Token = "0x17000303")]
		public Transform RootTransform
		{
			[Token(Token = "0x6001EF4")]
			[Address(RVA = "0x87E28C", Offset = "0x87E28C", VA = "0x87E28C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EF5")]
			[Address(RVA = "0x87E294", Offset = "0x87E294", VA = "0x87E294")]
			set
			{
			}
		}

		[Token(Token = "0x17000304")]
		public LODGroup LodGroup
		{
			[Token(Token = "0x6001EF6")]
			[Address(RVA = "0x87E29C", Offset = "0x87E29C", VA = "0x87E29C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EF7")]
			[Address(RVA = "0x87E2A4", Offset = "0x87E2A4", VA = "0x87E2A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000305")]
		public Renderer[] Renderers
		{
			[Token(Token = "0x6001EF8")]
			[Address(RVA = "0x87E2AC", Offset = "0x87E2AC", VA = "0x87E2AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EF9")]
			[Address(RVA = "0x87E2B4", Offset = "0x87E2B4", VA = "0x87E2B4")]
			set
			{
			}
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x87E2BC", Offset = "0x87E2BC", VA = "0x87E2BC")]
		private void GenerateTextures(List<TextureOutput> outputList, bool standardRendering)
		{
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0x87E774", Offset = "0x87E774", VA = "0x87E774")]
		private void GenerateAlphaTextures(List<TextureOutput> outputList)
		{
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0x87E92C", Offset = "0x87E92C", VA = "0x87E92C")]
		private void ClearBuffers()
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x87E9B4", Offset = "0x87E9B4", VA = "0x87E9B4")]
		private void ClearAlphaBuffers()
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0x87EA3C", Offset = "0x87EA3C", VA = "0x87EA3C")]
		public void RenderImpostor(ImpostorType impostorType, int targetAmount, bool impostorMaps = true, bool combinedAlphas = false, bool useMinResolution = false, [Optional] Shader customShader)
		{
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0x880520", Offset = "0x880520", VA = "0x880520")]
		private Matrix4x4 GetCameraRotationMatrix(ImpostorType impostorType, int hframes, int vframes, int x, int y)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0x880844", Offset = "0x880844", VA = "0x880844")]
		private Vector3 OctahedronToVector(Vector2 oct)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x8807A4", Offset = "0x8807A4", VA = "0x8807A4")]
		private Vector3 OctahedronToVector(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x880814", Offset = "0x880814", VA = "0x880814")]
		private Vector3 HemiOctahedronToVector(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x8808B4", Offset = "0x8808B4", VA = "0x8808B4")]
		public void GenerateAutomaticMesh(AmplifyImpostorAsset data)
		{
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x880CF0", Offset = "0x880CF0", VA = "0x880CF0")]
		public Mesh GenerateMesh(Vector2[] points, Vector3 offset, float width = 1f, float height = 1f, bool invertY = true)
		{
			return null;
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x88107C", Offset = "0x88107C", VA = "0x88107C")]
		public AmplifyImpostor()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public enum ImpostorType
	{
		[Token(Token = "0x4002867")]
		Spherical,
		[Token(Token = "0x4002868")]
		Octahedron,
		[Token(Token = "0x4002869")]
		HemiOctahedron
	}
	[Token(Token = "0x20003F5")]
	[Flags]
	public enum DeferredBuffers
	{
		[Token(Token = "0x400286B")]
		AlbedoAlpha = 1,
		[Token(Token = "0x400286C")]
		SpecularSmoothness = 2,
		[Token(Token = "0x400286D")]
		NormalDepth = 4,
		[Token(Token = "0x400286E")]
		EmissionOcclusion = 8
	}
	[Token(Token = "0x20003F6")]
	public enum RenderingMaps
	{
		[Token(Token = "0x4002870")]
		Standard,
		[Token(Token = "0x4002871")]
		Custom
	}
	[Token(Token = "0x20003F7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x572180", Offset = "0x572180")]
	public class AmplifyImpostorAsset : ScriptableObject
	{
		[Token(Token = "0x4002872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material Material;

		[Token(Token = "0x4002873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Mesh Mesh;

		[Token(Token = "0x4002874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		public int Version;

		[Token(Token = "0x4002875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public ImpostorType ImpostorType;

		[Token(Token = "0x4002876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		public bool LockedSizes;

		[Token(Token = "0x4002877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		[SerializeField]
		public int SelectedSize;

		[Token(Token = "0x4002878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public Vector2 TexSize;

		[Token(Token = "0x4002879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[SerializeField]
		public bool DecoupleAxisFrames;

		[Token(Token = "0x400287A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D05C", Offset = "0x58D05C")]
		public int HorizontalFrames;

		[Token(Token = "0x400287B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D0A0", Offset = "0x58D0A0")]
		public int VerticalFrames;

		[Token(Token = "0x400287C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D0E4", Offset = "0x58D0E4")]
		public int PixelPadding;

		[Token(Token = "0x400287D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D128", Offset = "0x58D128")]
		public int MaxVertices;

		[Token(Token = "0x400287E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D168", Offset = "0x58D168")]
		public float Tolerance;

		[Token(Token = "0x400287F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D1AC", Offset = "0x58D1AC")]
		public float NormalScale;

		[Token(Token = "0x4002880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public Vector2[] ShapePoints;

		[Token(Token = "0x4002881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public AmplifyImpostorBakePreset Preset;

		[Token(Token = "0x4002882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public List<TextureOutput> OverrideOutput;

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x881124", Offset = "0x881124", VA = "0x881124")]
		public AmplifyImpostorAsset()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public enum ImageFormat
	{
		[Token(Token = "0x4002884")]
		PNG,
		[Token(Token = "0x4002885")]
		TGA,
		[Token(Token = "0x4002886")]
		EXR
	}
	[Token(Token = "0x20003F9")]
	public enum TextureChannels
	{
		[Token(Token = "0x4002888")]
		RGBA,
		[Token(Token = "0x4002889")]
		RGB
	}
	[Token(Token = "0x20003FA")]
	public enum TextureCompression
	{
		[Token(Token = "0x400288B")]
		None,
		[Token(Token = "0x400288C")]
		Normal,
		[Token(Token = "0x400288D")]
		High,
		[Token(Token = "0x400288E")]
		Low
	}
	[Token(Token = "0x20003FB")]
	public enum TextureScale
	{
		[Token(Token = "0x4002890")]
		Full = 1,
		[Token(Token = "0x4002891")]
		Half = 2,
		[Token(Token = "0x4002892")]
		Quarter = 4,
		[Token(Token = "0x4002893")]
		Eighth = 8
	}
	[Token(Token = "0x20003FC")]
	[Flags]
	public enum OverrideMask
	{
		[Token(Token = "0x4002895")]
		OutputToggle = 1,
		[Token(Token = "0x4002896")]
		NameSuffix = 2,
		[Token(Token = "0x4002897")]
		RelativeScale = 4,
		[Token(Token = "0x4002898")]
		ColorSpace = 8,
		[Token(Token = "0x4002899")]
		QualityCompression = 0x10,
		[Token(Token = "0x400289A")]
		FileFormat = 0x20
	}
	[Token(Token = "0x20003FD")]
	public enum PresetPipeline
	{
		[Token(Token = "0x400289C")]
		Legacy,
		[Token(Token = "0x400289D")]
		Lightweight,
		[Token(Token = "0x400289E")]
		HighDefinition
	}
	[Serializable]
	[Token(Token = "0x20003FE")]
	public class TextureOutput
	{
		[Token(Token = "0x400289F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public int Index;

		[Token(Token = "0x40028A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public OverrideMask OverrideMask;

		[Token(Token = "0x40028A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Active;

		[Token(Token = "0x40028A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Name;

		[Token(Token = "0x40028A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextureScale Scale;

		[Token(Token = "0x40028A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool SRGB;

		[Token(Token = "0x40028A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextureChannels Channels;

		[Token(Token = "0x40028A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public TextureCompression Compression;

		[Token(Token = "0x40028A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ImageFormat ImageFormat;

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0xA24344", Offset = "0xA24344", VA = "0xA24344")]
		public TextureOutput()
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xA243BC", Offset = "0xA243BC", VA = "0xA243BC")]
		public TextureOutput(bool a, string n, TextureScale s, bool sr, TextureChannels c, TextureCompression nc, ImageFormat i)
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0xA24494", Offset = "0xA24494", VA = "0xA24494")]
		public TextureOutput Clone()
		{
			return null;
		}
	}
	[Token(Token = "0x20003FF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x5721D4", Offset = "0x5721D4")]
	public class AmplifyImpostorBakePreset : ScriptableObject
	{
		[Token(Token = "0x40028A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Shader BakeShader;

		[Token(Token = "0x40028A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Shader RuntimeShader;

		[Token(Token = "0x40028AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public PresetPipeline Pipeline;

		[Token(Token = "0x40028AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public int AlphaIndex;

		[Token(Token = "0x40028AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public List<TextureOutput> Output;

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x8812A8", Offset = "0x8812A8", VA = "0x8812A8")]
		public AmplifyImpostorBakePreset()
		{
		}
	}
	[Token(Token = "0x2000400")]
	public class BakeHDRPTool
	{
		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0x8807A0", Offset = "0x8807A0", VA = "0x8807A0")]
		public static void SetupShaderVariableGlobals(Matrix4x4 viewMat, Matrix4x4 projMatrix, CommandBuffer commandBuffer)
		{
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x88748C", Offset = "0x88748C", VA = "0x88748C")]
		public BakeHDRPTool()
		{
		}
	}
	[Token(Token = "0x2000401")]
	public static class BoundsEx
	{
		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0x9282D0", Offset = "0x9282D0", VA = "0x9282D0")]
		public static Bounds Transform(this Bounds bounds, Matrix4x4 matrix)
		{
			return default(Bounds);
		}
	}
	[Token(Token = "0x2000402")]
	public static class Texture2DEx
	{
		[Token(Token = "0x20005DE")]
		public enum Compression
		{
			[Token(Token = "0x40030AC")]
			None,
			[Token(Token = "0x40030AD")]
			RLE
		}

		[Token(Token = "0x40028AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly byte[] Footer;

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0xA23818", Offset = "0xA23818", VA = "0xA23818")]
		public static byte[] EncodeToTGA(this Texture2D tex, Compression compression = Compression.RLE)
		{
			return null;
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0xA24270", Offset = "0xA24270", VA = "0xA24270")]
		private static bool Equals(Color32 first, Color32 second)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000403")]
	public static class SpriteUtilityEx
	{
		[Token(Token = "0x40028AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Type type;

		[Token(Token = "0x17000306")]
		public static Type Type
		{
			[Token(Token = "0x6001F11")]
			[Address(RVA = "0xB49388", Offset = "0xB49388", VA = "0xB49388")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0xB494F4", Offset = "0xB494F4", VA = "0xB494F4")]
		public static void GenerateOutline(Texture2D texture, Rect rect, float detail, byte alphaTolerance, bool holeDetection, out Vector2[][] paths)
		{
		}
	}
	[Token(Token = "0x2000404")]
	public static class RenderTextureEx
	{
		[Token(Token = "0x6001F14")]
		[Address(RVA = "0xABDDA0", Offset = "0xABDDA0", VA = "0xABDDA0")]
		public static RenderTexture GetTemporary(RenderTexture renderTexture)
		{
			return null;
		}
	}
	[Token(Token = "0x2000405")]
	public static class Vector2Ex
	{
		[Serializable]
		[Token(Token = "0x20005DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573368", Offset = "0x573368")]
		private sealed class <>c
		{
			[Token(Token = "0x40030AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40030AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<Vector2> <>9__3_0;

			[Token(Token = "0x600251C")]
			[Address(RVA = "0x1376F00", Offset = "0x1376F00", VA = "0x1376F00")]
			public <>c()
			{
			}

			[Token(Token = "0x600251D")]
			[Address(RVA = "0x1376F08", Offset = "0x1376F08", VA = "0x1376F08")]
			internal int <ConvexHull>b__3_0(Vector2 a, Vector2 b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20005E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573378", Offset = "0x573378")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40030B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2[] P;

			[Token(Token = "0x40030B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int smallestIndex;

			[Token(Token = "0x600251E")]
			[Address(RVA = "0x1376F4C", Offset = "0x1376F4C", VA = "0x1376F4C")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x600251F")]
			[Address(RVA = "0x1376F54", Offset = "0x1376F54", VA = "0x1376F54")]
			internal bool <ReduceLeastSignificantVertice>b__0(Vector2 x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0xC69768", Offset = "0xC69768", VA = "0xC69768")]
		public static float Cross(this Vector2 O, Vector2 A, Vector2 B)
		{
			return default(float);
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xC69788", Offset = "0xC69788", VA = "0xC69788")]
		public static float TriangleArea(this Vector2 O, Vector2 A, Vector2 B)
		{
			return default(float);
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xC697B0", Offset = "0xC697B0", VA = "0xC697B0")]
		public static float TriangleArea(this Vector3 O, Vector3 A, Vector3 B)
		{
			return default(float);
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0xC697DC", Offset = "0xC697DC", VA = "0xC697DC")]
		public static Vector2[] ConvexHull(Vector2[] P)
		{
			return null;
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0xC69B34", Offset = "0xC69B34", VA = "0xC69B34")]
		public static Vector2[] ScaleAlongNormals(Vector2[] P, float scaleAmount)
		{
			return null;
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0xC69D00", Offset = "0xC69D00", VA = "0xC69D00")]
		private static Vector2[] ReduceLeastSignificantVertice(Vector2[] P)
		{
			return null;
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0xC6A148", Offset = "0xC6A148", VA = "0xC6A148")]
		public static Vector2[] ReduceVertices(Vector2[] P, int maxVertices)
		{
			return null;
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0xC69FE8", Offset = "0xC69FE8", VA = "0xC69FE8")]
		private static Vector2 GetIntersectionPointCoordinates(Vector2 A1, Vector2 A2, Vector2 B1, Vector2 B2)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0xC6A0E0", Offset = "0xC6A0E0", VA = "0xC6A0E0")]
		private static float OutsideBounds(Vector2 P)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000406")]
	public static class ImpostorBakingTools
	{
		[Token(Token = "0x40028AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string PrefGlobalFolder;

		[Token(Token = "0x40028B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string PrefGlobalRelativeFolder;

		[Token(Token = "0x40028B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string PrefGlobalDefault;

		[Token(Token = "0x40028B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly string PrefGlobalTexImport;

		[Token(Token = "0x40028B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly string PrefGlobalCreateLodGroup;

		[Token(Token = "0x40028B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly string PrefGlobalGBuffer0Name;

		[Token(Token = "0x40028B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly string PrefGlobalGBuffer1Name;

		[Token(Token = "0x40028B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly string PrefGlobalGBuffer2Name;

		[Token(Token = "0x40028B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly string PrefGlobalGBuffer3Name;

		[Token(Token = "0x40028B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly string PrefGlobalBakingOptions;

		[Token(Token = "0x40028B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly string PrefDataImpType;

		[Token(Token = "0x40028BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly string PrefDataTexSizeLocked;

		[Token(Token = "0x40028BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly string PrefDataTexSizeSelected;

		[Token(Token = "0x40028BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static readonly string PrefDataTexSizeX;

		[Token(Token = "0x40028BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static readonly string PrefDataTexSizeY;

		[Token(Token = "0x40028BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static readonly string PrefDataDecoupledFrames;

		[Token(Token = "0x40028BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static readonly string PrefDataXFrames;

		[Token(Token = "0x40028C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static readonly string PrefDataYFrames;

		[Token(Token = "0x40028C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static readonly string PrefDataPixelBleeding;

		[Token(Token = "0x40028C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static readonly string PrefDataTolerance;

		[Token(Token = "0x40028C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static readonly string PrefDataNormalScale;

		[Token(Token = "0x40028C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static readonly string PrefDataMaxVertices;
	}
	[Token(Token = "0x2000407")]
	public class Triangulator
	{
		[Token(Token = "0x40028C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vector2> m_points;

		[Token(Token = "0x17000307")]
		public List<Vector2> Points
		{
			[Token(Token = "0x6001F1F")]
			[Address(RVA = "0xA36090", Offset = "0xA36090", VA = "0xA36090")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0xA36098", Offset = "0xA36098", VA = "0xA36098")]
		public Triangulator(Vector2[] points)
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0xA36150", Offset = "0xA36150", VA = "0xA36150")]
		public Triangulator(Vector2[] points, bool invertY = true)
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0xA362B0", Offset = "0xA362B0", VA = "0xA362B0")]
		public int[] Triangulate()
		{
			return null;
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0xA36580", Offset = "0xA36580", VA = "0xA36580")]
		private float Area()
		{
			return default(float);
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0xA366A4", Offset = "0xA366A4", VA = "0xA366A4")]
		private bool Snip(int u, int v, int w, int n, int[] V)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0xA368E8", Offset = "0xA368E8", VA = "0xA368E8")]
		private bool InsideTriangle(Vector2 pt, Vector2 v1, Vector2 v2, Vector2 v3)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000408")]
	public class VersionInfo
	{
		[Token(Token = "0x40028C6")]
		public const byte Major = 0;

		[Token(Token = "0x40028C7")]
		public const byte Minor = 9;

		[Token(Token = "0x40028C8")]
		public const byte Release = 7;

		[Token(Token = "0x40028C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static byte Revision;

		[Token(Token = "0x17000308")]
		public static int FullNumber
		{
			[Token(Token = "0x6001F27")]
			[Address(RVA = "0x93BE84", Offset = "0x93BE84", VA = "0x93BE84")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000309")]
		public static string FullLabel
		{
			[Token(Token = "0x6001F28")]
			[Address(RVA = "0x93BEF0", Offset = "0x93BEF0", VA = "0x93BEF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0x93BD04", Offset = "0x93BD04", VA = "0x93BD04")]
		public static string StaticToString()
		{
			return null;
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0x93BF88", Offset = "0x93BF88", VA = "0x93BF88")]
		public VersionInfo()
		{
		}
	}
}
namespace AQUAS
{
	[Token(Token = "0x2000409")]
	public class AQUAS_BubbleBehaviour : MonoBehaviour
	{
		[Token(Token = "0x40028CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float averageUpdrift;

		[Token(Token = "0x40028CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float waterLevel;

		[Token(Token = "0x40028CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject mainCamera;

		[Token(Token = "0x40028CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject smallBubble;

		[Token(Token = "0x40028CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int smallBubbleCount;

		[Token(Token = "0x40028CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int maxSmallBubbleCount;

		[Token(Token = "0x40028D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AQUAS_SmallBubbleBehaviour smallBubbleBehaviour;

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0x12D05E8", Offset = "0x12D05E8", VA = "0x12D05E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0x12D065C", Offset = "0x12D065C", VA = "0x12D065C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0x12D07AC", Offset = "0x12D07AC", VA = "0x12D07AC")]
		private void SmallBubbleSpawner()
		{
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0x12D0A2C", Offset = "0x12D0A2C", VA = "0x12D0A2C")]
		public AQUAS_BubbleBehaviour()
		{
		}
	}
	[Token(Token = "0x200040A")]
	public class AQUAS_BubbleMorph : MonoBehaviour
	{
		[Token(Token = "0x40028D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float t;

		[Token(Token = "0x40028D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float t2;

		[Token(Token = "0x40028D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x58D28C", Offset = "0x58D28C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58D28C", Offset = "0x58D28C")]
		public float tTarget;

		[Token(Token = "0x40028D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SkinnedMeshRenderer skinnedMeshRenderer;

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0x12D0A34", Offset = "0x12D0A34", VA = "0x12D0A34")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0x12D0A88", Offset = "0x12D0A88", VA = "0x12D0A88")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x12D0CB4", Offset = "0x12D0CB4", VA = "0x12D0CB4")]
		public AQUAS_BubbleMorph()
		{
		}
	}
	[Token(Token = "0x200040B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x572248", Offset = "0x572248")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x572248", Offset = "0x572248")]
	public class AQUAS_Camera : MonoBehaviour
	{
		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x12D37F0", Offset = "0x12D37F0", VA = "0x12D37F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x12D37F4", Offset = "0x12D37F4", VA = "0x12D37F4")]
		private void Set()
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x12D3880", Offset = "0x12D3880", VA = "0x12D3880")]
		public AQUAS_Camera()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public class AQUAS_Caustics : MonoBehaviour
	{
		[Token(Token = "0x40028D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fps;

		[Token(Token = "0x40028D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D[] frames;

		[Token(Token = "0x40028D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxCausticDepth;

		[Token(Token = "0x40028D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int frameIndex;

		[Token(Token = "0x40028D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Projector projector;

		[Token(Token = "0x40028DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float currentScale;

		[Token(Token = "0x40028DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float aspectRatio;

		[Token(Token = "0x40028DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float waterLevel;

		[Token(Token = "0x40028DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public bool overrideWaterLevel;

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x12D3DFC", Offset = "0x12D3DFC", VA = "0x12D3DFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x12D40D4", Offset = "0x12D40D4", VA = "0x12D40D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x12D4020", Offset = "0x12D4020", VA = "0x12D4020")]
		private void NextFrame()
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0x12D453C", Offset = "0x12D453C", VA = "0x12D453C")]
		public AQUAS_Caustics()
		{
		}
	}
	[Token(Token = "0x200040D")]
	[ExecuteInEditMode]
	public class AQUAS_Container : MonoBehaviour
	{
		[Token(Token = "0x6001F39")]
		[Address(RVA = "0x12D4544", Offset = "0x12D4544", VA = "0x12D4544")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0x12D4574", Offset = "0x12D4574", VA = "0x12D4574")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0x12D45A4", Offset = "0x12D45A4", VA = "0x12D45A4")]
		public AQUAS_Container()
		{
		}
	}
	[Token(Token = "0x200040E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5722DC", Offset = "0x5722DC")]
	public class AQUAS_DepthSupport : MonoBehaviour
	{
		[Token(Token = "0x40028DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject waterPlane;

		[Token(Token = "0x40028DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask cullingMask;

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x12D45AC", Offset = "0x12D45AC", VA = "0x12D45AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x12D4968", Offset = "0x12D4968", VA = "0x12D4968")]
		public AQUAS_DepthSupport()
		{
		}
	}
	[Token(Token = "0x200040F")]
	public class AQUAS_ReflectNot : MonoBehaviour
	{
		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x12D6DE0", Offset = "0x12D6DE0", VA = "0x12D6DE0")]
		public AQUAS_ReflectNot()
		{
		}
	}
	[Token(Token = "0x2000410")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x572314", Offset = "0x572314")]
	[ExecuteInEditMode]
	public class AQUAS_Reflection : MonoBehaviour
	{
		[Token(Token = "0x40028E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_DisablePixelLights;

		[Token(Token = "0x40028E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int m_TextureSize;

		[Token(Token = "0x40028E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_ClipPlaneOffset;

		[Token(Token = "0x40028E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public LayerMask m_ReflectLayers;

		[Token(Token = "0x40028E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private System.Collections.Hashtable m_ReflectionCameras;

		[Token(Token = "0x40028E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture m_ReflectionTexture;

		[Token(Token = "0x40028E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_OldReflectionTextureSize;

		[Token(Token = "0x40028E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_InsideRendering;

		[Token(Token = "0x40028E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool ignoreOcclusionCulling;

		[Token(Token = "0x40028E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float waterLevel;

		[Token(Token = "0x40028EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public bool overrideWaterLevel;

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x12D6DE8", Offset = "0x12D6DE8", VA = "0x12D6DE8")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x12D8558", Offset = "0x12D8558", VA = "0x12D8558")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0x12D7C9C", Offset = "0x12D7C9C", VA = "0x12D7C9C")]
		private void UpdateCameraModes(Camera src, Camera dest)
		{
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x12D778C", Offset = "0x12D778C", VA = "0x12D778C")]
		private void CreateMirrorObjects(Camera currentCamera, out Camera reflectionCamera)
		{
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0x12D88CC", Offset = "0x12D88CC", VA = "0x12D88CC")]
		private static float sgn(float a)
		{
			return default(float);
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x12D823C", Offset = "0x12D823C", VA = "0x12D823C")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0x12D8368", Offset = "0x12D8368", VA = "0x12D8368")]
		private static void CalculateObliqueMatrix(ref Matrix4x4 projection, Vector4 clipPlane)
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0x12D7F98", Offset = "0x12D7F98", VA = "0x12D7F98")]
		private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0x12D88EC", Offset = "0x12D88EC", VA = "0x12D88EC")]
		public AQUAS_Reflection()
		{
		}
	}
	[Token(Token = "0x2000411")]
	public class AQUAS_RenderColor : MonoBehaviour
	{
		[Token(Token = "0x40028EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transparencyQuality;

		[Token(Token = "0x40028EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public GameObject plane;

		[Token(Token = "0x40028ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture target;

		[Token(Token = "0x40028EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera cam;

		[Token(Token = "0x40028EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LayerMask layerMask;

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0x12D897C", Offset = "0x12D897C", VA = "0x12D897C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x12D8A6C", Offset = "0x12D8A6C", VA = "0x12D8A6C")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x12D8B94", Offset = "0x12D8B94", VA = "0x12D8B94")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x12D8C4C", Offset = "0x12D8C4C", VA = "0x12D8C4C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0x12D8D90", Offset = "0x12D8D90", VA = "0x12D8D90")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0x12D8D94", Offset = "0x12D8D94", VA = "0x12D8D94")]
		public AQUAS_RenderColor()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class AQUAS_RenderDepth : MonoBehaviour
	{
		[Token(Token = "0x40028F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public GameObject plane;

		[Token(Token = "0x40028F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material material;

		[Token(Token = "0x40028F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture target;

		[Token(Token = "0x40028F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string shaderPath;

		[Token(Token = "0x40028F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool checkForGridProjection;

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0x12D8DC8", Offset = "0x12D8DC8", VA = "0x12D8DC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x12D8FB8", Offset = "0x12D8FB8", VA = "0x12D8FB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x12D9154", Offset = "0x12D9154", VA = "0x12D9154")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x12D91DC", Offset = "0x12D91DC", VA = "0x12D91DC")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0x12D9294", Offset = "0x12D9294", VA = "0x12D9294")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x12D934C", Offset = "0x12D934C", VA = "0x12D934C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0x12D9438", Offset = "0x12D9438", VA = "0x12D9438")]
		public AQUAS_RenderDepth()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public class AQUAS_RippleController : MonoBehaviour
	{
		[Token(Token = "0x40028F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject body;

		[Token(Token = "0x40028F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject particleObject;

		[Token(Token = "0x40028F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject particleObjectMove;

		[Token(Token = "0x40028F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera cam;

		[Token(Token = "0x40028F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystem particles;

		[Token(Token = "0x40028FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem.MainModule main;

		[Token(Token = "0x40028FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ParticleSystem.EmissionModule emission;

		[Token(Token = "0x40028FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ParticleSystem.ShapeModule shape;

		[Token(Token = "0x40028FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ParticleSystemRenderer particleRenderer;

		[Token(Token = "0x40028FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem particlesMove;

		[Token(Token = "0x40028FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ParticleSystem.MainModule mainMove;

		[Token(Token = "0x4002900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ParticleSystem.EmissionModule emissionMove;

		[Token(Token = "0x4002901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ParticleSystem.ShapeModule shapeMove;

		[Token(Token = "0x4002902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ParticleSystemRenderer particleRendererMove;

		[Token(Token = "0x4002903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float maxBound;

		[Token(Token = "0x4002904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 lastPosition;

		[Token(Token = "0x4002905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float speed;

		[Token(Token = "0x4002906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector2 firstVec;

		[Token(Token = "0x4002907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector2 secondVec;

		[Token(Token = "0x4002908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float angle;

		[Token(Token = "0x4002909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float startLifetime;

		[Token(Token = "0x400290A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float startSize;

		[Token(Token = "0x400290B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float rateOverTime;

		[Token(Token = "0x400290C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float shapeSize;

		[Token(Token = "0x400290D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Mesh mesh;

		[Token(Token = "0x400290E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Mesh referenceMesh;

		[Token(Token = "0x400290F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float waterLevel;

		[Token(Token = "0x4002910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool ceaseRipples;

		[Token(Token = "0x4002911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private RenderTexture target;

		[Token(Token = "0x4002912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GameObject waterPlane;

		[Token(Token = "0x4002913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<Material> waterMatList;

		[Token(Token = "0x4002914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Material[] waterMat;

		[Token(Token = "0x4002915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public int index;

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x12D94D0", Offset = "0x12D94D0", VA = "0x12D94D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0x12D9884", Offset = "0x12D9884", VA = "0x12D9884")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x12D9EE8", Offset = "0x12D9EE8", VA = "0x12D9EE8")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0x12DA11C", Offset = "0x12DA11C", VA = "0x12DA11C")]
		private Mesh getRelevantMesh(Mesh inputMesh, bool underwaterObject)
		{
			return null;
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0x12DA368", Offset = "0x12DA368", VA = "0x12DA368")]
		public AQUAS_RippleController()
		{
		}
	}
	[Token(Token = "0x2000414")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x572360", Offset = "0x572360")]
	public class AQUAS_RippleManager : MonoBehaviour
	{
		[Token(Token = "0x4002916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D33C", Offset = "0x58D33C")]
		public int numberOfObjects;

		[Token(Token = "0x4002917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x58D354", Offset = "0x58D354")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x58D354", Offset = "0x58D354")]
		public string objectsInfo;

		[Token(Token = "0x4002918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x58D398", Offset = "0x58D398")]
		public GameObject[] objects;

		[Token(Token = "0x4002919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x58D3AC", Offset = "0x58D3AC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58D3AC", Offset = "0x58D3AC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x58D3AC", Offset = "0x58D3AC")]
		public GameObject waterplane;

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x12DA37C", Offset = "0x12DA37C", VA = "0x12DA37C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x12DA404", Offset = "0x12DA404", VA = "0x12DA404")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x12DA7DC", Offset = "0x12DA7DC", VA = "0x12DA7DC")]
		public AQUAS_RippleManager()
		{
		}
	}
	[Token(Token = "0x2000415")]
	public class AQUAS_SmallBubbleBehaviour : MonoBehaviour
	{
		[Token(Token = "0x400291A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float averageUpdrift;

		[Token(Token = "0x400291B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float waterLevel;

		[Token(Token = "0x400291C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject mainCamera;

		[Token(Token = "0x400291D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float updriftFactor;

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x12DA830", Offset = "0x12DA830", VA = "0x12DA830")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x12DA86C", Offset = "0x12DA86C", VA = "0x12DA86C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x12DA9BC", Offset = "0x12DA9BC", VA = "0x12DA9BC")]
		public AQUAS_SmallBubbleBehaviour()
		{
		}
	}
	[Token(Token = "0x2000416")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x572398", Offset = "0x572398")]
	public class AQUAS_CamLock : MonoBehaviour
	{
		[Token(Token = "0x400291E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject mainCamera;

		[Token(Token = "0x400291F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool scaleToFrustum;

		[Token(Token = "0x4002920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58D41C", Offset = "0x58D41C")]
		public bool useDynamicMesh;

		[Token(Token = "0x4002921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D454", Offset = "0x58D454")]
		public int resolution;

		[Token(Token = "0x4002922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Camera[] cameras;

		[Token(Token = "0x4002923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Camera[] sceneCameras;

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x12D27A0", Offset = "0x12D27A0", VA = "0x12D27A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x12D2F64", Offset = "0x12D2F64", VA = "0x12D2F64")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x12D2C20", Offset = "0x12D2C20", VA = "0x12D2C20")]
		private Mesh CreateMesh()
		{
			return null;
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x12D3020", Offset = "0x12D3020", VA = "0x12D3020")]
		private void GetCameras()
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0x12D3048", Offset = "0x12D3048", VA = "0x12D3048")]
		private void HookUpCameras()
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x12D3220", Offset = "0x12D3220", VA = "0x12D3220")]
		private void HookUpSceneCameras()
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0x12D33AC", Offset = "0x12D33AC", VA = "0x12D33AC")]
		public AQUAS_CamLock()
		{
		}
	}
	[Token(Token = "0x2000417")]
	public class AQUAS_ProjectedGrid : MonoBehaviour
	{
		[Token(Token = "0x4002924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject waterplane;

		[Token(Token = "0x4002925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject ContainerObj;

		[Token(Token = "0x4002926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform[] children;

		[Token(Token = "0x4002927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AQUAS_Caustics[] causticComponents;

		[Token(Token = "0x4002928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera cam;

		[Token(Token = "0x4002929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject projectorObj;

		[Token(Token = "0x400292A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera projector;

		[Token(Token = "0x400292B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] farFrustumCorners;

		[Token(Token = "0x400292C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3[] nearFrustumCorners;

		[Token(Token = "0x400292D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3[] pFarFrustumCorners;

		[Token(Token = "0x400292E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] pNearFrustumCorners;

		[Token(Token = "0x400292F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material[] materials;

		[Token(Token = "0x4002930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float waterLevel;

		[Token(Token = "0x4002931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Vector3> intersectionPoints;

		[Token(Token = "0x4002932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector4 minMax;

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0x12D4FF4", Offset = "0x12D4FF4", VA = "0x12D4FF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0x12D57C0", Offset = "0x12D57C0", VA = "0x12D57C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0x12D6238", Offset = "0x12D6238", VA = "0x12D6238")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0x12D6B60", Offset = "0x12D6B60", VA = "0x12D6B60")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0x12D6684", Offset = "0x12D6684", VA = "0x12D6684")]
		private void PositionPlane()
		{
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0x12D5D00", Offset = "0x12D5D00", VA = "0x12D5D00")]
		private void GetAllIntersectionPoints(float level)
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0x12D6BB8", Offset = "0x12D6BB8", VA = "0x12D6BB8")]
		private bool LinePlaneIntersection(Vector3 startPoint, Vector3 targetPoint, Vector3 planeOrigin)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0x12D6C68", Offset = "0x12D6C68", VA = "0x12D6C68")]
		private Vector3 GetIntersectionPoint(Vector3 startPoint, Vector3 targetPoint, Vector3 planeOrigin)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x12D5F9C", Offset = "0x12D5F9C", VA = "0x12D5F9C")]
		private Vector3 AimProjector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x12D67D0", Offset = "0x12D67D0", VA = "0x12D67D0")]
		private Vector4 GetBordersInViewport()
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x12D6DD8", Offset = "0x12D6DD8", VA = "0x12D6DD8")]
		public AQUAS_ProjectedGrid()
		{
		}
	}
	[Token(Token = "0x2000418")]
	public class AQUAS_BoundaryMask : MonoBehaviour
	{
		[Token(Token = "0x4002933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material mat;

		[Token(Token = "0x4002934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material matNull;

		[Token(Token = "0x4002935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTexture target;

		[Token(Token = "0x4002936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera cam;

		[Token(Token = "0x4002937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject nextCam;

		[Token(Token = "0x4002938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject boundaryObj;

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x12D017C", Offset = "0x12D017C", VA = "0x12D017C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x12D0338", Offset = "0x12D0338", VA = "0x12D0338")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0x12D03F0", Offset = "0x12D03F0", VA = "0x12D03F0")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x12D04A8", Offset = "0x12D04A8", VA = "0x12D04A8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x12D05E0", Offset = "0x12D05E0", VA = "0x12D05E0")]
		public AQUAS_BoundaryMask()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public class AQUAS_CaptureBackground : MonoBehaviour
	{
		[Token(Token = "0x4002939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject waterObj;

		[Token(Token = "0x400293A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RenderTexture target;

		[Token(Token = "0x400293B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera cam;

		[Token(Token = "0x400293C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int quality;

		[Token(Token = "0x400293D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask layerMask;

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x12D3888", Offset = "0x12D3888", VA = "0x12D3888")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x12D39C8", Offset = "0x12D39C8", VA = "0x12D39C8")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0x12D3AF0", Offset = "0x12D3AF0", VA = "0x12D3AF0")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0x12D3BA8", Offset = "0x12D3BA8", VA = "0x12D3BA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0x12D3C78", Offset = "0x12D3C78", VA = "0x12D3C78")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0x12D3DC0", Offset = "0x12D3DC0", VA = "0x12D3DC0")]
		public AQUAS_CaptureBackground()
		{
		}
	}
	[Token(Token = "0x200041A")]
	public class AQUAS_FrontFaceMask : MonoBehaviour
	{
		[Token(Token = "0x400293E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material mat;

		[Token(Token = "0x400293F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material bufferMat;

		[Token(Token = "0x4002940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material matNull;

		[Token(Token = "0x4002941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture target;

		[Token(Token = "0x4002942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera cam;

		[Token(Token = "0x4002943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject nextCam;

		[Token(Token = "0x4002944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject waterObj;

		[Token(Token = "0x4002945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Renderer rend;

		[Token(Token = "0x4002946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader[] waterShaders;

		[Token(Token = "0x4002947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool checkForGridProjection;

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0x12D499C", Offset = "0x12D499C", VA = "0x12D499C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x12D4B7C", Offset = "0x12D4B7C", VA = "0x12D4B7C")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x12D4D80", Offset = "0x12D4D80", VA = "0x12D4D80")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0x12D4ECC", Offset = "0x12D4ECC", VA = "0x12D4ECC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x12D4FE0", Offset = "0x12D4FE0", VA = "0x12D4FE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x12D4FE4", Offset = "0x12D4FE4", VA = "0x12D4FE4")]
		public AQUAS_FrontFaceMask()
		{
		}
	}
	[Token(Token = "0x200041B")]
	public class AQUAS_UnderWaterEffect : MonoBehaviour
	{
		[Token(Token = "0x20005E1")]
		public enum QUALITY
		{
			[Token(Token = "0x40030B3")]
			low,
			[Token(Token = "0x40030B4")]
			medium,
			[Token(Token = "0x40030B5")]
			high
		}

		[Token(Token = "0x4002948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58D494", Offset = "0x58D494")]
		public LayerMask cullingMask;

		[Token(Token = "0x4002949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public QUALITY backFaceQuality;

		[Token(Token = "0x400294A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D4CC", Offset = "0x58D4CC")]
		public float fogFade;

		[Token(Token = "0x400294B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D4E8", Offset = "0x58D4E8")]
		public float distortionStrength;

		[Token(Token = "0x400294C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D504", Offset = "0x58D504")]
		public float blurSize;

		[Token(Token = "0x400294D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D520", Offset = "0x58D520")]
		public int blurSmoothness;

		[Token(Token = "0x400294E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool enableWetLensEffect;

		[Token(Token = "0x400294F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D538", Offset = "0x58D538")]
		public float wetLensDuration;

		[Token(Token = "0x4002950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x58D550", Offset = "0x58D550")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58D550", Offset = "0x58D550")]
		public AudioClip underwaterAmbientSound;

		[Token(Token = "0x4002951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D5A0", Offset = "0x58D5A0")]
		public float underwaterAmbientVolume;

		[Token(Token = "0x4002952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip diveSplashSound;

		[Token(Token = "0x4002953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D5B8", Offset = "0x58D5B8")]
		public float diveSplashVolume;

		[Token(Token = "0x4002954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip surfaceSplashSound;

		[Token(Token = "0x4002955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D5D0", Offset = "0x58D5D0")]
		public float surfaceSplashVolume;

		[Token(Token = "0x4002956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x58D5E8", Offset = "0x58D5E8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58D5E8", Offset = "0x58D5E8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D5E8", Offset = "0x58D5E8")]
		public int maximumBubbleCount;

		[Token(Token = "0x4002957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool spawnBubbles;

		[Token(Token = "0x4002958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float fogDensity;

		[Token(Token = "0x4002959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float deepFogDensity;

		[Token(Token = "0x400295A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float maxFogDepth;

		[Token(Token = "0x400295B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float adjustedFogDensity;

		[Token(Token = "0x400295C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Color fogColor;

		[Token(Token = "0x400295D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Color deepFogColor;

		[Token(Token = "0x400295E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Color adjustedFogColor;

		[Token(Token = "0x400295F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject container;

		[Token(Token = "0x4002960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GameObject boundaryMask;

		[Token(Token = "0x4002961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GameObject volumeMask;

		[Token(Token = "0x4002962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private GameObject frontFaceMask;

		[Token(Token = "0x4002963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GameObject background;

		[Token(Token = "0x4002964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GameObject waterPlane;

		[Token(Token = "0x4002965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private GameObject[] waterObjects;

		[Token(Token = "0x4002966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private GameObject[] staticBoundaries;

		[Token(Token = "0x4002967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public GameObject dynamicBoundary;

		[Token(Token = "0x4002968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material fogMat;

		[Token(Token = "0x4002969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Material blurMat;

		[Token(Token = "0x400296A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Material dropletMaskMat;

		[Token(Token = "0x400296B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public RenderTexture mask;

		[Token(Token = "0x400296C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private RenderTexture buffer1;

		[Token(Token = "0x400296D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private RenderTexture buffer2;

		[Token(Token = "0x400296E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private RenderTexture fogBuffer;

		[Token(Token = "0x400296F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private RenderTexture dropletBuffer;

		[Token(Token = "0x4002970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private RenderTexture dropletMask;

		[Token(Token = "0x4002971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[HideInInspector]
		public bool underwater;

		[Token(Token = "0x4002972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private GameObject audioObject;

		[Token(Token = "0x4002973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private AudioSource underwaterAmbient;

		[Token(Token = "0x4002974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private AudioSource diveSplash;

		[Token(Token = "0x4002975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private AudioSource surfaceSplash;

		[Token(Token = "0x4002976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private bool diveSplashPlayed;

		[Token(Token = "0x4002977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
		private bool surfaceSplashPlayed;

		[Token(Token = "0x4002978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private GameObject bubbleContainer;

		[Token(Token = "0x4002979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private GameObject bubble;

		[Token(Token = "0x400297A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private AQUAS_BubbleBehaviour bubbleBehaviour;

		[Token(Token = "0x400297B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float t2;

		[Token(Token = "0x400297C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float bubbleSpawnTimer;

		[Token(Token = "0x400297D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private int maxBubbleCount;

		[Token(Token = "0x400297E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private int bubbleCount;

		[Token(Token = "0x400297F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[HideInInspector]
		public float waterLevel;

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x12DA9C4", Offset = "0x12DA9C4", VA = "0x12DA9C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x12DBDE0", Offset = "0x12DBDE0", VA = "0x12DBDE0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x12DC414", Offset = "0x12DC414", VA = "0x12DC414")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x12DC630", Offset = "0x12DC630", VA = "0x12DC630")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0x12DCB6C", Offset = "0x12DCB6C", VA = "0x12DCB6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0x12DD08C", Offset = "0x12DD08C", VA = "0x12DD08C")]
		private void BubbleSpawner()
		{
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0x12DD67C", Offset = "0x12DD67C", VA = "0x12DD67C")]
		public AQUAS_UnderWaterEffect()
		{
		}
	}
	[Token(Token = "0x200041C")]
	public class AQUAS_UnderWaterEffect_Simple : MonoBehaviour
	{
		[Token(Token = "0x4002980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58D694", Offset = "0x58D694")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D694", Offset = "0x58D694")]
		public float distortionStrength;

		[Token(Token = "0x4002981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D6EC", Offset = "0x58D6EC")]
		public float blurSize;

		[Token(Token = "0x4002982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D708", Offset = "0x58D708")]
		public int blurSmoothness;

		[Token(Token = "0x4002983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool enableWetLensEffect;

		[Token(Token = "0x4002984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D720", Offset = "0x58D720")]
		public float wetLensDuration;

		[Token(Token = "0x4002985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x58D738", Offset = "0x58D738")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58D738", Offset = "0x58D738")]
		public AudioClip underwaterAmbientSound;

		[Token(Token = "0x4002986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D788", Offset = "0x58D788")]
		public float underwaterAmbientVolume;

		[Token(Token = "0x4002987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip diveSplashSound;

		[Token(Token = "0x4002988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D7A0", Offset = "0x58D7A0")]
		public float diveSplashVolume;

		[Token(Token = "0x4002989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip surfaceSplashSound;

		[Token(Token = "0x400298A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D7B8", Offset = "0x58D7B8")]
		public float surfaceSplashVolume;

		[Token(Token = "0x400298B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x58D7D0", Offset = "0x58D7D0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58D7D0", Offset = "0x58D7D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D7D0", Offset = "0x58D7D0")]
		public int maximumBubbleCount;

		[Token(Token = "0x400298C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool spawnBubbles;

		[Token(Token = "0x400298D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float fogDensity;

		[Token(Token = "0x400298E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float maxFogDepth;

		[Token(Token = "0x400298F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Color fogColor;

		[Token(Token = "0x4002990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Color deepFogColor;

		[Token(Token = "0x4002991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Color adjustedFogColor;

		[Token(Token = "0x4002992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool defaultFog;

		[Token(Token = "0x4002993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Color defaultFogColor;

		[Token(Token = "0x4002994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FogMode defaultFogMode;

		[Token(Token = "0x4002995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float defaultFogDensity;

		[Token(Token = "0x4002996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float t;

		[Token(Token = "0x4002997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int realBlurSmoothness;

		[Token(Token = "0x4002998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GameObject waterPlane;

		[Token(Token = "0x4002999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Material underwaterMat;

		[Token(Token = "0x400299A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Material blurMat;

		[Token(Token = "0x400299B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private RenderTexture underwaterBuffer;

		[Token(Token = "0x400299C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RenderTexture buffer1;

		[Token(Token = "0x400299D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private RenderTexture buffer2;

		[Token(Token = "0x400299E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public bool underwater;

		[Token(Token = "0x400299F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[HideInInspector]
		public float waterLevel;

		[Token(Token = "0x40029A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private GameObject audioObject;

		[Token(Token = "0x40029A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private AudioSource underwaterAmbient;

		[Token(Token = "0x40029A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private AudioSource diveSplash;

		[Token(Token = "0x40029A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private AudioSource surfaceSplash;

		[Token(Token = "0x40029A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool diveSplashPlayed;

		[Token(Token = "0x40029A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		private bool surfaceSplashPlayed;

		[Token(Token = "0x40029A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private GameObject bubbleContainer;

		[Token(Token = "0x40029A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private GameObject bubble;

		[Token(Token = "0x40029A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private AQUAS_BubbleBehaviour bubbleBehaviour;

		[Token(Token = "0x40029A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float t2;

		[Token(Token = "0x40029AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float bubbleSpawnTimer;

		[Token(Token = "0x40029AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int maxBubbleCount;

		[Token(Token = "0x40029AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private int bubbleCount;

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x12DD714", Offset = "0x12DD714", VA = "0x12DD714")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0x12DDF10", Offset = "0x12DDF10", VA = "0x12DDF10")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x12DE194", Offset = "0x12DE194", VA = "0x12DE194")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0x12DE2CC", Offset = "0x12DE2CC", VA = "0x12DE2CC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x12DE6EC", Offset = "0x12DE6EC", VA = "0x12DE6EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x12DEB18", Offset = "0x12DEB18", VA = "0x12DEB18")]
		private void ToggleFog(bool isUnderwater)
		{
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0x12DEBA4", Offset = "0x12DEBA4", VA = "0x12DEBA4")]
		private void WetLensDistortionSwitch(bool isUnderwater)
		{
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x12DEC18", Offset = "0x12DEC18", VA = "0x12DEC18")]
		private void BubbleSpawner()
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x12DF208", Offset = "0x12DF208", VA = "0x12DF208")]
		public AQUAS_UnderWaterEffect_Simple()
		{
		}
	}
	[Token(Token = "0x200041D")]
	public class AQUAS_UnderwaterParameters : MonoBehaviour
	{
		[Token(Token = "0x40029AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color mainFogColor;

		[Token(Token = "0x40029AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color deepFogColor;

		[Token(Token = "0x40029AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float mainFogDensity;

		[Token(Token = "0x40029B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float deepFogDensity;

		[Token(Token = "0x40029B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float maxFogDepth;

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0x12DF268", Offset = "0x12DF268", VA = "0x12DF268")]
		public AQUAS_UnderwaterParameters()
		{
		}
	}
	[Token(Token = "0x200041E")]
	public class AQUAS_VolumeMask : MonoBehaviour
	{
		[Token(Token = "0x40029B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material mat;

		[Token(Token = "0x40029B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material matNull;

		[Token(Token = "0x40029B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture target;

		[Token(Token = "0x40029B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera cam;

		[Token(Token = "0x40029B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject nextCam;

		[Token(Token = "0x40029B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject waterObj;

		[Token(Token = "0x40029B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Renderer rend;

		[Token(Token = "0x40029B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader[] waterShaders;

		[Token(Token = "0x40029BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool checkForGridProjection;

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x12DF284", Offset = "0x12DF284", VA = "0x12DF284")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0x12DF464", Offset = "0x12DF464", VA = "0x12DF464")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0x12DF668", Offset = "0x12DF668", VA = "0x12DF668")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0x12DF7B4", Offset = "0x12DF7B4", VA = "0x12DF7B4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0x12DF8EC", Offset = "0x12DF8EC", VA = "0x12DF8EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x12DF8F0", Offset = "0x12DF8F0", VA = "0x12DF8F0")]
		public AQUAS_VolumeMask()
		{
		}
	}
	[Token(Token = "0x200041F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5723D0", Offset = "0x5723D0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5723D0", Offset = "0x5723D0")]
	public class AQUAS_Buoyancy : MonoBehaviour
	{
		[Token(Token = "0x20005E2")]
		public enum debugModes
		{
			[Token(Token = "0x40030B7")]
			none,
			[Token(Token = "0x40030B8")]
			showAffectedFaces,
			[Token(Token = "0x40030B9")]
			showForceRepresentation,
			[Token(Token = "0x40030BA")]
			showReferenceVolume
		}

		[Token(Token = "0x40029BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float waterLevel;

		[Token(Token = "0x40029BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float waterDensity;

		[Token(Token = "0x40029BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x58D85C", Offset = "0x58D85C")]
		public bool useBalanceFactor;

		[Token(Token = "0x40029BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 balanceFactor;

		[Token(Token = "0x40029BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x58D870", Offset = "0x58D870")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D870", Offset = "0x58D870")]
		public float dynamicSurface;

		[Token(Token = "0x40029C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x58D8B4", Offset = "0x58D8B4")]
		public float bounceFrequency;

		[Token(Token = "0x40029C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x58D8CC", Offset = "0x58D8CC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x58D8CC", Offset = "0x58D8CC")]
		public debugModes debug;

		[Token(Token = "0x40029C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] vertices;

		[Token(Token = "0x40029C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int[] triangles;

		[Token(Token = "0x40029C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Mesh mesh;

		[Token(Token = "0x40029C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rb;

		[Token(Token = "0x40029C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float effWaterDensity;

		[Token(Token = "0x40029C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float regWaterDensity;

		[Token(Token = "0x40029C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float maxWaterDensity;

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x12D0CBC", Offset = "0x12D0CBC", VA = "0x12D0CBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x12D0D88", Offset = "0x12D0D88", VA = "0x12D0D88")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x12D1F78", Offset = "0x12D1F78", VA = "0x12D1F78")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0x12D0DDC", Offset = "0x12D0DDC", VA = "0x12D0DDC")]
		private void AddForce()
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x12D1FF8", Offset = "0x12D1FF8", VA = "0x12D1FF8")]
		private Vector3 Center(Vector3 p1, Vector3 p2, Vector3 p3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x12D2090", Offset = "0x12D2090", VA = "0x12D2090")]
		private Vector3 Normal(Vector3 p1, Vector3 p2, Vector3 p3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x12D2200", Offset = "0x12D2200", VA = "0x12D2200")]
		private float Area(Vector3 p1, Vector3 p2, Vector3 p3)
		{
			return default(float);
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x12D278C", Offset = "0x12D278C", VA = "0x12D278C")]
		public AQUAS_Buoyancy()
		{
		}
	}
	[Token(Token = "0x2000420")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x572454", Offset = "0x572454")]
	public class AQUAS_CamNav : MonoBehaviour
	{
		[Token(Token = "0x40029C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool freeLookEnabled;

		[Token(Token = "0x40029CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool showCursor;

		[Token(Token = "0x40029CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float lookSpeed;

		[Token(Token = "0x40029CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float moveSpeed;

		[Token(Token = "0x40029CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float sprintSpeed;

		[Token(Token = "0x40029CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_yaw;

		[Token(Token = "0x40029CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_pitch;

		[Token(Token = "0x40029D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool rotate;

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x12D33BC", Offset = "0x12D33BC", VA = "0x12D33BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x12D3450", Offset = "0x12D3450", VA = "0x12D3450")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x12D37D0", Offset = "0x12D37D0", VA = "0x12D37D0")]
		public AQUAS_CamNav()
		{
		}
	}
	[Token(Token = "0x2000421")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x57248C", Offset = "0x57248C")]
	public class AQUAS_RenderQueueEditor : MonoBehaviour
	{
		[Token(Token = "0x40029D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int renderQueueIndex;

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x12D9448", Offset = "0x12D9448", VA = "0x12D9448")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x12D94C0", Offset = "0x12D94C0", VA = "0x12D94C0")]
		public AQUAS_RenderQueueEditor()
		{
		}
	}
}
