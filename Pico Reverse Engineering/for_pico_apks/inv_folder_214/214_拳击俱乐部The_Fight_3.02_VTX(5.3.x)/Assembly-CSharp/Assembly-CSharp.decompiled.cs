using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using AnimationInstancing;
using Facebook.WitAi;
using Facebook.WitAi.Lib;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using RootMotion.Dynamics;
using RootMotion.FinalIK;
using TMPro;
using Unity.Mathematics;
using Unity.XR.CoreUtils;
using Unity.XR.PXR;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.Rendering.PostProcessing;
using UnityEngine.Rendering.Universal;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class AIAnimatorIdle : StateMachineBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AIController ai_player_controller;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x1D2F1BC", Offset = "0x1D2F1BC", VA = "0x1D2F1BC", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x1D2F224", Offset = "0x1D2F224", VA = "0x1D2F224", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x1D2F228", Offset = "0x1D2F228", VA = "0x1D2F228")]
	public AIAnimatorIdle()
	{
	}
}
[Token(Token = "0x2000003")]
public class AIAnimatorPunch : StateMachineBehaviour
{
	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AIPlayerController.PunchingHand hand;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AIController ai_player_controller;

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x1D2F230", Offset = "0x1D2F230", VA = "0x1D2F230", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x1D2F298", Offset = "0x1D2F298", VA = "0x1D2F298", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x1D2F29C", Offset = "0x1D2F29C", VA = "0x1D2F29C")]
	public AIAnimatorPunch()
	{
	}
}
[Token(Token = "0x2000004")]
public class AIController : MonoBehaviour
{
	[Token(Token = "0x2000005")]
	private enum BlockType
	{
		[Token(Token = "0x4000176")]
		FRONT,
		[Token(Token = "0x4000177")]
		SIDES,
		[Token(Token = "0x4000178")]
		BODY_CENTER,
		[Token(Token = "0x4000179")]
		BODY_LEFT,
		[Token(Token = "0x400017A")]
		BODY_RIGHT
	}

	[Token(Token = "0x2000006")]
	private struct PlayerData
	{
		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x400017C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 velocity;

		[Token(Token = "0x400017D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float time;
	}

	[Token(Token = "0x2000007")]
	public enum KnockdownType
	{
		[Token(Token = "0x400017F")]
		Front,
		[Token(Token = "0x4000180")]
		Back
	}

	[Token(Token = "0x2000008")]
	private enum Action
	{
		[Token(Token = "0x4000182")]
		PUNCH,
		[Token(Token = "0x4000183")]
		DODGE
	}

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool chinese;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float dizziNessCoeff;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float punch_received_coefficient;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MIN_DISTANCE_TO_ATTACK;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float punchPower;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform cpuPlayerHeadTransform;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform scoreLook;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform knockoutTransform;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float MIN_DISTANCE_TO_OPPONENT;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float MAX_DISTANCE_TO_OPPONENT;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float RISKY_HURT_LEVEL_BELOWE_ACCEPTABLE_FOR_CHASE_COEFFICIENT;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float NORMAL_HURT_LEVEL_BELOWE_ACCEPTABLE_FOR_CHASE_COEFFICIENT;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float SAFE_HURT_LEVEL_BELOWE_ACCEPTABLE_FOR_CHASE_COEFFICIENT;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float RISKY_HURT_LEVEL_BELOWE_ACCEPTABLE_FOR_ATTACK_COEFFICIENT;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float NORMAL_HURT_LEVEL_BELOWE_ACCEPTABLE_FOR_ATTACK_COEFFICIENT;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float SAFE_HURT_LEVEL_BELOWE_ACCEPTABLE_FOR_ATTACK_COEFFICIENT;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float RISKY_HURT_LEVEL_BELOWE_ACCEPTABLE_FOR_REST_COEFFICIENT;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float NORMAL_HURT_LEVEL_BELOWE_ACCEPTABLE_FOR_REST_COEFFICIENT;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float SAFE_HURT_LEVEL_BELOWE_ACCEPTABLE_FOR_REST_COEFFICIENT;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float RISKY_STRATEGY_MINIMAL_ENERGY_NEEDED_TO_CHASE_COEFFICIENT;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float NORMAL_STRATEGY_MINIMAL_ENERGY_NEEDED_TO_CHASE_COEFFICIENT;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float SAFE_STRATEGY_MINIMAL_ENERGY_NEEDED_TO_CHASE_COEFFICIENT;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float RISKY_STRATEGY_MINIMAL_ENERGY_NEEDED_TO_ATTACK_COEFFICIENT;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float NORMAL_STRATEGY_MINIMAL_ENERGY_NEEDED_TO_ATTACK_COEFFICIENT;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float SAFE_STRATEGY_MINIMAL_ENERGY_NEEDED_TO_ATTACK_COEFFICIENT;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float safeStrategyChaseProbability;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float normalStrategyChaseProbability;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float riskyStrategyChaseProbability;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float JabWeight;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float CrossWeight;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float LeftUppercutWeight;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float RightUppercutWeight;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float LeftHookWeight;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float RightHookWeight;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float BodyPunchWeight;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float HeadPunchWeight;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float dodgingDirectionMax;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float dodgingDownMax;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float rangeCoefficient;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float distanceCoefficient;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float dodgeCoefficient;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float dodgeProbability;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float dodgingWeight;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float dodgingDownWeight;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float dodgingSpeed;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float dodgingSpeedMin;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float dodgingSpeedMax;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float punchSpeedMin;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float punchSpeedMax;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float punchEnergyCost;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float distanceAttackProbability;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float distanceBackAttackProbability;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float distanceVsDistanceBackProbability;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform frontBlockLead;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Transform frontBlockRear;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Transform sideBlockLead;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Transform sideBlockRear;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Transform centerBodyBlockLead;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Transform centerBodyBlockRear;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Transform leftBodyBlockLead;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Transform leftBodyBlockRear;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Transform rightBodyBlockLead;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Transform rightBodyBlockRear;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public AIFist_[] ai_player_fist;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Transform head;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Cuts cuts;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Vector3 hipsOffset;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Transform AiPlayer_scale;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float default_human_player_height;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float scale;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private PlayerHitEmitter_[] playerFist;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x885104", Offset = "0x885104")]
	public float aiSpeedCoefficient;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public float RearHookTime;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float RearUppercutTime;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public float RearCrossTime;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public float LeadJabTime;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public float LeadHookTime;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public float LeadHookLowTime;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public float RearHookLowTime;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public float LeadJabLowTime;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public float RearCrossLowTime;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public float LeadUpperCutTime;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private float timeToEndAnimLead;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float timeToEndAnimRear;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private List<Punch> punchList;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private HitSpot[] hitSpots;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private float punchBreakTimer;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private float MIN_PUNCHING_DISTANCE;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private float MAX_PUNCHING_DISTANCE;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private float UPPERCUT_RANGE;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private float CROSS_RANGE;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private float HOOK_RANGE;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private float REST_STATE_DISTANCE;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private float DISTANCE_TO_ATTACK;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private float MAX_DISTANCE_TO_ATTACK;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private float restStateDistance;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private float minDistanceToOpponent;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private float maxDistanceToAttack;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private FullBodyBipedIK bodyIk;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private PuppetMaster puppetMaster;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private LookAtIK lookAtIk;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public int alert_blendshape_index;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	public int angry_blendshape_index;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public int blink_blendshape_index;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	public int pain_blendshape_index;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public int stunned_blendshape_index;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	public int tired_blendshape_index;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private bool blink_blendshape_active;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x239")]
	private bool pain_blendshape_active;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23A")]
	private bool alert_blendshape_active;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23B")]
	private bool angry_blendshape_active;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	private bool stunned_blendshape_active;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23D")]
	private bool isDodging;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23E")]
	private bool nose_blood;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23F")]
	private bool upper_lip_blood;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private bool lower_lip_blood;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x241")]
	private bool left_eyebrow_blood;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x242")]
	private bool right_eyebrow_blood;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x243")]
	private bool left_cheek_blood;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	private bool right_cheek_blood;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x245")]
	private bool under_left_eyebrow_blood;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x246")]
	private bool under_right_eyebrow_blood;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x247")]
	private bool is_blood;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88511C", Offset = "0x88511C")]
	public Transform target;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885154", Offset = "0x885154")]
	public Transform pin;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88518C", Offset = "0x88518C")]
	public AimIK aim;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8851C4", Offset = "0x8851C4")]
	public float weight;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8851FC", Offset = "0x8851FC")]
	public FullBodyBipedEffector effector;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885234", Offset = "0x885234")]
	public AnimationCurve aimWeight;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public AnimationCurve punchCurve;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public AnimationCurve impactParticle;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public Transform hand;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public Transform hand2;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public Transform centerFight;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public float ai_block_speed;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public SkinnedMeshRenderer boxer_body;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private float defaultBlockSpeed;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	private Vector3 targetPosLead;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private Vector3 targetPosRear;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	private bool isPunchingLead;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C5")]
	private bool isPunchingRear;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private AIPlayerController.PunchingHand lastPunchingHand;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	private AIPlayerController.PunchingHand punchingHand;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private float punchTimer;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	private float animatorSlowTimerLead;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private float animatorSlowTimerRear;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	private bool workForSolver;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DD")]
	private bool leadBlocked;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DE")]
	private bool rearBlocked;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private Vector3 leadFistLastPosition;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	private Vector3 rearFistLastPosition;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private Quaternion leadFistLastRotation;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private Quaternion rearFistLastRotation;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	private Transform leadFistCurrentBlockTarget;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	private Transform rearFistCurrentBlockTarget;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private BlockType currentBlockType;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
	private float blockTimer;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private bool isKnockDown;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x331")]
	private bool noResponse;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x332")]
	private bool rearHandBack;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
	public float speedToBlockAfterPunchLead;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public float speedToBlockAfterPunchRear;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
	private float speedToBlockAfterPunchLeadCombo;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private float speedToBlockAfterPunchRearCombo;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
	private bool backToBlockAfterPunchLead;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x345")]
	private bool backToBlockAfterPunchRear;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public float leadStopBlock;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
	public float rearStopBlock;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public Transform bodyBlockPosition;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public Transform headBlockPosition;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public bool isBlockingLead;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x361")]
	public bool isBlockingRear;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x362")]
	public bool leadBlockingWeight;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x363")]
	public bool rearBlockingWeight;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
	public float leadBlockingWeightTimer;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public float rearBlockingWeightTimer;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public ParticleSystem bloodParticle;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public ParticleSystem sweatParticle;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	private Animator animator;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	private float effectorWeight;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public AnimationCurve ac;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public AnimationCurve angryCurve;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public AnimationCurve painMultiplierCurve;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	private float timeLead;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
	private float timeRear;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	private bool rearStopped;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B1")]
	private bool leadStopped;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B2")]
	public bool combo;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	private float[] musclesMass;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	private float punchSpeedMpl;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
	private float hurt_level;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	private float total_hurt;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
	private bool no_response;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	private float comboPunchLastTime;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	private RingManager ringManager;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	private PlayerManager playerManager;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	private float minPunchingDistance;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3EC")]
	private float maxPunchingDistance;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	private TargetMatchingManager targetMaching;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	private float LeadPunchTime;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3FC")]
	private float RearPunchTime;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	[HideInInspector]
	public int HitWeightLeadHash;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x404")]
	[HideInInspector]
	public int HitWeightRearHash;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	[HideInInspector]
	public int isOpenHash;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40C")]
	[HideInInspector]
	public int CanPunchLeftComboHash;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	[HideInInspector]
	public int CanPunchRightComboHash;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x414")]
	[HideInInspector]
	public int cantStopLeftHash;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	[HideInInspector]
	public int cantStopRightHash;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41C")]
	[HideInInspector]
	public int velocity_xHash;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	[HideInInspector]
	public int velocity_yHash;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x424")]
	[HideInInspector]
	public int look_weightHash;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	[HideInInspector]
	public int intisPositiveLeadHash;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42C")]
	[HideInInspector]
	public int intisPositiveRearHash;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	[HideInInspector]
	public int idle_speedHash;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	private RingTimer timer;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	private float humanPlayerTotalReceivedForce;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x444")]
	private int humanPlayerKnockdowns;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	private bool isPunching;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44C")]
	private float punchCurveTimerLead;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	private float punchCurveTimerLead2;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x454")]
	private float punchCurveTimerRear;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
	private float punchCurveTimerRear2;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
	public Transform[] faceHitSpots;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
	public string handd;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
	public AudioSource KnockDownAudio;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
	private bool isOnGround;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47C")]
	public float punchBreakTimerMpl;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
	public float knockdown_coefficient;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x484")]
	private float MAX_HURT_LEVEL;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
	private HitSpot lastHitSpot;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	private float lastHitSpotTime;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x494")]
	public int max_left_eyebrow_swollen;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
	private float current_left_eyebrow_swollen_weight;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49C")]
	public int max_right_eyebrow_swollen;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
	private float current_right_eyebrow_swollen_weight;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A4")]
	public int max_under_left_eye_swollen;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
	private float current_under_left_eye_swollen_weight;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4AC")]
	public int max_under_right_eye_swollen;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
	private float current_under_right_eye_swollen_weight;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B4")]
	public int max_left_cheek_swollen;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
	private float current_left_cheek_swollen_weight;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4BC")]
	public int max_right_cheek_swollen;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
	private float current_right_cheek_swollen_weight;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C4")]
	public int max_upper_lip_swollen;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
	private float current_upper_lip_swollen_weight;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4CC")]
	public int max_lower_lip_swollen;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
	private float current_lower_lip_swollen_weight;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D4")]
	public int left_eyebrow_swollen_blendshape_index;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
	public int right_eyebrow_swollen_blendshape_index;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4DC")]
	public int under_left_eye_swollen_blendshape_index;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
	public int under_right_eye_swollen_blendshape_index;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E4")]
	public int left_cheek_swollen_blendshape_index;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
	public int right_cheek_swollen_blendshape_index;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4EC")]
	public int broken_nose_blendshape_index;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
	public int upper_lip_swollen_blendshape_index;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F4")]
	public int lower_lip_swollen_blendshape_index;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
	private float blink_timer;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4FC")]
	private float time_between_blink;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
	private float current_blink_weight;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x504")]
	private bool blink_close;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x505")]
	private bool closed_eyes;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
	private float blink_speed;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50C")]
	private float headPinWeight;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
	private float angry;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x514")]
	private float pain;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
	private float painMultiplier;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51C")]
	private float alert;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
	private bool alertUp;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x524")]
	private float LeadPunchAnimTime;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
	private float RearPunchAnimTime;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52C")]
	private int leftTimesInRow;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
	private int rightTimesInRow;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x534")]
	private Vector3 positionDelta;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
	private Vector3 lastBodyPosition;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54C")]
	private Quaternion lastBodyRotation;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55C")]
	private Quaternion rotationDelta;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56C")]
	private float blockTim;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
	private float recordPlayerMovementTimer;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x574")]
	private Vector3 player_position;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
	private Vector3 distance_to_player;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58C")]
	private float distance_to_player_magnitude;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
	private float last_record_time;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x594")]
	private Vector3 last_player_position;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
	private Vector3 last_distance_to_player;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5AC")]
	private float last_distance_to_player_magnitude;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B0")]
	private List<PlayerData> player_data;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B8")]
	private float recorded_time;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5BC")]
	private float delay_in_movement;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C0")]
	private Vector3 player_position_delayed;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5CC")]
	private Vector3 distance_to_player_delyed;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D8")]
	private float distance_to_player_magnitude_delyed;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5DC")]
	private float recordPlayerDataDeltaTime;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E0")]
	private float speed_x;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E4")]
	private float speed_z;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E8")]
	private bool movement_blocked;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E9")]
	private bool knockout;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5EC")]
	private float SmoothDampX;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F0")]
	private float SmoothDampZ;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F8")]
	public Transform opponent_transform;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x600")]
	private Vector3 opponent_position_delta;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60C")]
	private float distance_to_opponent;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x610")]
	private bool comboTerminated;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x614")]
	public float hurtRegenerationCoefficient;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x618")]
	public float energyRegenerationCoefficient;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61C")]
	public float energyLevel;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x620")]
	private float maxEnergyLevel;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x624")]
	private float MAX_ENERGY_LEVEL;

	[Token(Token = "0x4000137")]
	private const float MIN_PUNCH_VELOCITY = 2f;

	[Token(Token = "0x4000138")]
	private const float OPPONENT_RANGE = 1.05f;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x628")]
	private float horizontalAxisAngle;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62C")]
	private bool defendBlocking;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x630")]
	private float recoveryTimer;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x634")]
	private bool lower;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x635")]
	private bool distance_checked;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x638")]
	private float[] averageDistanceToOpponent;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x640")]
	private int distanceIndex;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x644")]
	private float distanceUpdateTimer;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x648")]
	public bool dodgingAbility;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x649")]
	private bool autoBackDodge;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64C")]
	private float dodgingSpeedMultiplier;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x650")]
	private float dodgeTimer;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x654")]
	public Vector3 rotOffset;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x660")]
	private float angleToOpponent;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x664")]
	private Vector3 update_direction_delta;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x670")]
	private Vector3 update_direction_delta_target;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67C")]
	private float STANDARD_ROTATION_SPEED;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x680")]
	public float direction_rotation_speed;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x688")]
	public BoxingArea boxing_area;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x690")]
	private Transform refereeHeadPosition;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x698")]
	private Transform refereePosition;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A0")]
	private Transform targetPosition;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A8")]
	private float currentLookAtWeight;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6AC")]
	private Vector3 currentTargetPosition;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B8")]
	private float lookAtTargetTimer;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6BC")]
	private bool isAnimationWeight;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C0")]
	private float targetLookAtTargetWeight;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C4")]
	private bool recoveryRefereeDirection;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C8")]
	public AIPlayerController.State currentState;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D0")]
	public Transform dizzyTarget;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D8")]
	public Transform dizzyCenter;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E0")]
	public Transform dizzyTargetPoint;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E8")]
	public float rotSpeed;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6EC")]
	private float dizziNess;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F0")]
	private float dizziNessMpl;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F4")]
	private float dizziNessBlockMpl;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F8")]
	private float dizinessLevel;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6FC")]
	public bool dizzy;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x700")]
	private float blockWieght;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x704")]
	private float blockWeightTarget;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x708")]
	private float blockWeightSpeed;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70C")]
	private int aiPlayerKnockdowns;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x710")]
	private float knockdownTimer;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x714")]
	private bool isDown;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x718")]
	private KnockdownType knockdownType;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71C")]
	public float normal_strategy_min_punch_energy_coefficient;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x720")]
	public float normal_strategy_min_dodge_energy_coefficient;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x724")]
	public float safe_strategy_min_punch_energy_coefficient;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x728")]
	public float safe_strategy_min_dodge_energy_coefficient;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72C")]
	public float risky_strategy_min_punch_energy_coefficient;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x730")]
	public float risky_strategy_min_dodge_energy_coefficient;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x734")]
	private AIPlayerController.AiStrategyState currentAiStrategyState;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x738")]
	private bool leftHandPunch;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x73C")]
	private float TimeBreakTheSameHand;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x740")]
	private HitSpot.HitSpotType hitspot_current_target;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x744")]
	private bool animationTrigger;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x748")]
	private Punch.PunchType lastPunchType;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74C")]
	private int series;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x750")]
	private bool combination;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x751")]
	private bool resetedCombo;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x1D2F2A4", Offset = "0x1D2F2A4", VA = "0x1D2F2A4")]
	public Vector3 GetHipsPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x1D2F2D4", Offset = "0x1D2F2D4", VA = "0x1D2F2D4")]
	public Vector3 GetBonePosition(HumanBodyBones bone)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x1D2F300", Offset = "0x1D2F300", VA = "0x1D2F300")]
	private void LoadData()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x1D2F704", Offset = "0x1D2F704", VA = "0x1D2F704")]
	public void setScale(float height)
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x1D2F76C", Offset = "0x1D2F76C", VA = "0x1D2F76C")]
	public void setRingManager(RingManager rm)
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x1D2F78C", Offset = "0x1D2F78C", VA = "0x1D2F78C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x1D2FE3C", Offset = "0x1D2FE3C", VA = "0x1D2FE3C")]
	private void Start()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x1D303A4", Offset = "0x1D303A4", VA = "0x1D303A4")]
	public Transform getCPUPlayerHeadTransform()
	{
		return null;
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x1D303AC", Offset = "0x1D303AC", VA = "0x1D303AC")]
	public Transform getKnockoutTransform()
	{
		return null;
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x1D303B4", Offset = "0x1D303B4", VA = "0x1D303B4")]
	public void OnKnockDownHumanPlayer()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x1D303C8", Offset = "0x1D303C8", VA = "0x1D303C8")]
	public void OnReadyHumanPlayer()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x1D303D0", Offset = "0x1D303D0", VA = "0x1D303D0")]
	public void OnReceivedHitByHumanPlayer(float force)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x1D303E0", Offset = "0x1D303E0", VA = "0x1D303E0")]
	public float GetTotalHurt()
	{
		return default(float);
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x1D303E8", Offset = "0x1D303E8", VA = "0x1D303E8")]
	public bool IsPunching(AIPlayerController.PunchingHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x1D3041C", Offset = "0x1D3041C", VA = "0x1D3041C")]
	public void StopPunching(AIPlayerController.PunchingHand hand)
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x1D30484", Offset = "0x1D30484", VA = "0x1D30484")]
	private Vector3 CalculatePunchPosition(Vector3 current_position, Vector3 target_position, float weight)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x1D304AC", Offset = "0x1D304AC", VA = "0x1D304AC")]
	private void StartCombo()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x1D304C0", Offset = "0x1D304C0", VA = "0x1D304C0")]
	private void AnimatorSlowTimerLead(float time = 0.02f)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x1D304C8", Offset = "0x1D304C8", VA = "0x1D304C8")]
	private void AnimatorSlowTimerRear(float time = 0.02f)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x1D304D0", Offset = "0x1D304D0", VA = "0x1D304D0")]
	private void UpdateIK()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x1D329C8", Offset = "0x1D329C8", VA = "0x1D329C8")]
	private void UpdateDodgeIK()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x1D32CB0", Offset = "0x1D32CB0", VA = "0x1D32CB0")]
	public Transform GetCenterFight()
	{
		return null;
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x1D32CB8", Offset = "0x1D32CB8", VA = "0x1D32CB8")]
	private void UpdateTimers()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x1D317BC", Offset = "0x1D317BC", VA = "0x1D317BC")]
	private void setBlocking(BlockType type, float time, bool timer = true, bool left_hand = true, bool right_hand = true)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x1D30D54", Offset = "0x1D30D54", VA = "0x1D30D54")]
	private void stopBlocking(bool timer = true)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x1D32D40", Offset = "0x1D32D40", VA = "0x1D32D40")]
	private void PunchVisualImpact(Collision collision, Vector3 position, float power, bool blood)
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x1D302F4", Offset = "0x1D302F4", VA = "0x1D302F4")]
	private void setBlockType(BlockType type)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x1D31844", Offset = "0x1D31844", VA = "0x1D31844")]
	private void UpdateLeadHandBlockIK()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x1D320D8", Offset = "0x1D320D8", VA = "0x1D320D8")]
	private void UpdateRearHandBlockIK()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x1D32EE4", Offset = "0x1D32EE4", VA = "0x1D32EE4")]
	public void HeadHitReceived(HitEmitter_.EMITER_TYPE type, HitEmitter_.EMITER_SIDE side, Collision collision, AIPlayerController.BodyPart body_part, HitReceiver_ punch_receiver, Vector3 collision_point, Vector3 collision_normal, Vector3 velocity, float angle, float speed, PlayerHitEmitter_ hit_emitter, float damage = 0f, bool blood = false)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x1D3472C", Offset = "0x1D3472C", VA = "0x1D3472C")]
	public void KnockedDownSoundEffect()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x1D34748", Offset = "0x1D34748", VA = "0x1D34748")]
	public void OnGround()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x1D34770", Offset = "0x1D34770", VA = "0x1D34770")]
	public void HitReceived(HitEmitter_.EMITER_TYPE type, HitEmitter_.EMITER_SIDE side, Collision collision, AIPlayerController.BodyPart body_part, HitReceiver_ punch_receiver, Vector3 collision_point, Vector3 collision_normal, Vector3 velocity, float angle, float speed, PlayerHitEmitter_ hit_emitter, float damage = 0f, bool blood = false)
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x1D34470", Offset = "0x1D34470", VA = "0x1D34470")]
	private void PunchAnimationReaction(AIPlayerController.BodyPart body_part, float vertical_angle, float horizontal_angle, float power, float speed)
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x1D30D84", Offset = "0x1D30D84", VA = "0x1D30D84")]
	public void Collide(AIPlayerController.PunchingHand h, Rigidbody rb, HitSpot.HitSpotType type = HitSpot.HitSpotType.NONE)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x1D34A2C", Offset = "0x1D34A2C", VA = "0x1D34A2C")]
	public void HitReceiverCollide(AIPlayerController.PunchingHand h)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x1D34E50", Offset = "0x1D34E50", VA = "0x1D34E50")]
	public Cuts GetCuts()
	{
		return null;
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x1D34268", Offset = "0x1D34268", VA = "0x1D34268")]
	public void setBrokenNose()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x1D34360", Offset = "0x1D34360", VA = "0x1D34360")]
	public void leftEyebrowHitBlendShape(float power)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x1D343A4", Offset = "0x1D343A4", VA = "0x1D343A4")]
	public void rightEyebrowHitBlendShape(float power)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x1D343E8", Offset = "0x1D343E8", VA = "0x1D343E8")]
	public void underLeftEyeHitBlendShape(float power)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x1D3442C", Offset = "0x1D3442C", VA = "0x1D3442C")]
	public void underRightEyeHitBlendShape(float power)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x1D342D8", Offset = "0x1D342D8", VA = "0x1D342D8")]
	public void leftCheekHitBlendShape(float power)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x1D3431C", Offset = "0x1D3431C", VA = "0x1D3431C")]
	public void rightCheekHitBlendShape(float power)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x1D33F48", Offset = "0x1D33F48", VA = "0x1D33F48")]
	public void lowerHitBlendShape(float power)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x1D34294", Offset = "0x1D34294", VA = "0x1D34294")]
	public void upperHitBlendShape(float power)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x1D34E58", Offset = "0x1D34E58", VA = "0x1D34E58")]
	public void setKnockout()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x1D34E64", Offset = "0x1D34E64", VA = "0x1D34E64")]
	public void setWinner()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x1D34EF8", Offset = "0x1D34EF8", VA = "0x1D34EF8")]
	private void CloseEyes()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x1D34EE0", Offset = "0x1D34EE0", VA = "0x1D34EE0")]
	private void OpenEyes()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x1D34F10", Offset = "0x1D34F10", VA = "0x1D34F10")]
	private void Update()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x1D2FD44", Offset = "0x1D2FD44", VA = "0x1D2FD44")]
	private void InitDistance()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x1D350F4", Offset = "0x1D350F4", VA = "0x1D350F4")]
	private void OnAnimatorIK(int layerIndex)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x1D353B4", Offset = "0x1D353B4", VA = "0x1D353B4")]
	private void UpdateBlendShapes()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x1D35418", Offset = "0x1D35418", VA = "0x1D35418")]
	private void UpdateBlinkBlendshape()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x1D35614", Offset = "0x1D35614", VA = "0x1D35614")]
	private void UpdateAlertBlendshape()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x1D35528", Offset = "0x1D35528", VA = "0x1D35528")]
	private void UpdatePainBlendshape()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x1D356C0", Offset = "0x1D356C0", VA = "0x1D356C0")]
	private void UpdateAngryBlendshape()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x1D357DC", Offset = "0x1D357DC", VA = "0x1D357DC")]
	private void PunchLeft(Punch punch)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x1D35C44", Offset = "0x1D35C44", VA = "0x1D35C44")]
	private void PunchRight(Punch punch)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x1D360C0", Offset = "0x1D360C0", VA = "0x1D360C0")]
	private void PunchRight2()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x1D36350", Offset = "0x1D36350", VA = "0x1D36350")]
	private void PunchRight3()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x1D365F8", Offset = "0x1D365F8", VA = "0x1D365F8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x1D36704", Offset = "0x1D36704", VA = "0x1D36704")]
	private void RecordPlayerMovement(float time = 1f)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x1D36B30", Offset = "0x1D36B30", VA = "0x1D36B30")]
	private void UpdateDirection()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x1D3661C", Offset = "0x1D3661C", VA = "0x1D3661C")]
	private void RecordPlayerData()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x1D36D28", Offset = "0x1D36D28", VA = "0x1D36D28")]
	public bool IsOnGround()
	{
		return default(bool);
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x1D3578C", Offset = "0x1D3578C", VA = "0x1D3578C")]
	private void RepinHead(float val)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x1D349D8", Offset = "0x1D349D8", VA = "0x1D349D8")]
	private void UnpinHead()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x1D36D30", Offset = "0x1D36D30", VA = "0x1D36D30")]
	private void RepinLeftArm()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x1D36DEC", Offset = "0x1D36DEC", VA = "0x1D36DEC")]
	private void RepinRightArm()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x1D36EA8", Offset = "0x1D36EA8", VA = "0x1D36EA8")]
	private void UnpinLeftArm()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x1D36F64", Offset = "0x1D36F64", VA = "0x1D36F64")]
	private void UnpinRightArm()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x1D34F14", Offset = "0x1D34F14", VA = "0x1D34F14")]
	private void Up()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x1D3757C", Offset = "0x1D3757C", VA = "0x1D3757C")]
	public void UpdateTest2()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x1D37AA8", Offset = "0x1D37AA8", VA = "0x1D37AA8")]
	public void setVictory()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x1D37B00", Offset = "0x1D37B00", VA = "0x1D37B00")]
	public void setDefeat()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x1D37B58", Offset = "0x1D37B58", VA = "0x1D37B58")]
	private void UpdateIdleState()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x1D37B5C", Offset = "0x1D37B5C", VA = "0x1D37B5C")]
	public void onStartRound()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x1D37B68", Offset = "0x1D37B68", VA = "0x1D37B68")]
	public void onStopRound()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x1D37B70", Offset = "0x1D37B70", VA = "0x1D37B70")]
	public void setPosition(Transform transform)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x1D37C08", Offset = "0x1D37C08", VA = "0x1D37C08")]
	private bool IsHurtLevelBeloweAcceptable(AIPlayerController.State state)
	{
		return default(bool);
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x1D37CE0", Offset = "0x1D37CE0", VA = "0x1D37CE0")]
	private void UpdateRecoveryState()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x1D37D58", Offset = "0x1D37D58", VA = "0x1D37D58")]
	private void UpdateRefereeDirection()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x1D37F0C", Offset = "0x1D37F0C", VA = "0x1D37F0C")]
	private void UpdateScoreAnnouncementState()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x1D37F10", Offset = "0x1D37F10", VA = "0x1D37F10")]
	private void UpdateRestState()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x1D3922C", Offset = "0x1D3922C", VA = "0x1D3922C")]
	private void UpdateEvadeState()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x1D392B0", Offset = "0x1D392B0", VA = "0x1D392B0")]
	private void UpdateAttackState()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x1D393D8", Offset = "0x1D393D8", VA = "0x1D393D8")]
	private void UpdateChaseState()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x1D39464", Offset = "0x1D39464", VA = "0x1D39464")]
	private bool IsReadyToAttack()
	{
		return default(bool);
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x1D39194", Offset = "0x1D39194", VA = "0x1D39194")]
	private bool IsEnoughEnergy(AIPlayerController.State state)
	{
		return default(bool);
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x1D3939C", Offset = "0x1D3939C", VA = "0x1D3939C")]
	private bool IsDistanceForAttack()
	{
		return default(bool);
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x1D3019C", Offset = "0x1D3019C", VA = "0x1D3019C")]
	private void ChangeState(AIPlayerController.State state)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x1D38064", Offset = "0x1D38064", VA = "0x1D38064")]
	private float AttackDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x1D37250", Offset = "0x1D37250", VA = "0x1D37250")]
	private void UpdateAi()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x1D39290", Offset = "0x1D39290", VA = "0x1D39290")]
	public bool IsInOpponentRange()
	{
		return default(bool);
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x1D3950C", Offset = "0x1D3950C", VA = "0x1D3950C")]
	public void CheckThreats()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x1D35174", Offset = "0x1D35174", VA = "0x1D35174")]
	private void UpdateDodge()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x1D3A6D0", Offset = "0x1D3A6D0", VA = "0x1D3A6D0")]
	private void UpdateDodgeTimer()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x1D3A660", Offset = "0x1D3A660", VA = "0x1D3A660")]
	private bool setDodge(float direction, float down, float time = 0f, bool auto = false, float speed_multiplier = 1f)
	{
		return default(bool);
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x1D3A450", Offset = "0x1D3A450", VA = "0x1D3A450")]
	private void UpdateState()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x1D3A710", Offset = "0x1D3A710", VA = "0x1D3A710")]
	private void UpdateSafeStateStrategy()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x1D3A7BC", Offset = "0x1D3A7BC", VA = "0x1D3A7BC")]
	private void UpdateNormalStateStrategy()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x1D3A89C", Offset = "0x1D3A89C", VA = "0x1D3A89C")]
	private void UpdateRiskyStateStrategy()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x1D3A48C", Offset = "0x1D3A48C", VA = "0x1D3A48C")]
	private void UpdateStrategy()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x1D3A4B4", Offset = "0x1D3A4B4", VA = "0x1D3A4B4")]
	private void UpdateBlock()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x1D30388", Offset = "0x1D30388", VA = "0x1D30388")]
	private void ChangeLookAtTarget(Transform target)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x1D3A954", Offset = "0x1D3A954", VA = "0x1D3A954")]
	private void SetBlockWeight(float value, float speed = 1f)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x1D32970", Offset = "0x1D32970", VA = "0x1D32970")]
	private void UpdateBlockWeight()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x1D30394", Offset = "0x1D30394", VA = "0x1D30394")]
	private void ChangeLookAtTargetWeight(bool animation = true, float weight = 1f)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x1D341CC", Offset = "0x1D341CC", VA = "0x1D341CC")]
	private void SetDizziness(float timevalue, float dizinessmpl = 1f, float blockweight = 0.7f, float blockweightspeed = 1f)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x1D37020", Offset = "0x1D37020", VA = "0x1D37020")]
	private void UpdateDizziness()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x1D3A960", Offset = "0x1D3A960", VA = "0x1D3A960")]
	public KnockdownType GetKonckDownType()
	{
		return default(KnockdownType);
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x1D33F8C", Offset = "0x1D33F8C", VA = "0x1D33F8C")]
	private void Knockdown(AIPlayerController.BodyPart body_part, float normalized_power, float normalized_angle, float vertical_angle, float time = 5f)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x1D3A968", Offset = "0x1D3A968", VA = "0x1D3A968")]
	public void SetRecoveryTimerZero()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x1D3A970", Offset = "0x1D3A970", VA = "0x1D3A970")]
	public void Recovered()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x1D37190", Offset = "0x1D37190", VA = "0x1D37190")]
	private void GetUp()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x1D3A99C", Offset = "0x1D3A99C", VA = "0x1D3A99C")]
	private bool TargetTooLow(float target_y)
	{
		return default(bool);
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x1D38074", Offset = "0x1D38074", VA = "0x1D38074")]
	private bool IsReadyForPunch(Punch.PunchMode mode)
	{
		return default(bool);
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x1D3B5F8", Offset = "0x1D3B5F8", VA = "0x1D3B5F8")]
	private void setStrategyState(AIPlayerController.AiStrategyState strategy)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1D3B600", Offset = "0x1D3B600", VA = "0x1D3B600")]
	private bool IsEnoughEnergyFor(Action action)
	{
		return default(bool);
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x1D3B6AC", Offset = "0x1D3B6AC", VA = "0x1D3B6AC")]
	public bool CanPunch(AIPlayerController.PunchingHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x1D3A9E4", Offset = "0x1D3A9E4", VA = "0x1D3A9E4")]
	private bool PunchConditionsAreMet(Punch.PunchMode mode)
	{
		return default(bool);
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x1D3B704", Offset = "0x1D3B704", VA = "0x1D3B704")]
	private bool InHookRange(AIPlayerController.PunchingHand hand, float distance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x1D3B734", Offset = "0x1D3B734", VA = "0x1D3B734")]
	private bool InCrossRange(AIPlayerController.PunchingHand hand, float distance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x1D3B764", Offset = "0x1D3B764", VA = "0x1D3B764")]
	private bool InUppercutRange(AIPlayerController.PunchingHand hand, float distance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x1D380BC", Offset = "0x1D380BC", VA = "0x1D380BC")]
	private bool TryToPunch(Punch.PunchMode mode)
	{
		return default(bool);
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x1D34C30", Offset = "0x1D34C30", VA = "0x1D34C30")]
	private void DecreaseHitspotWeight(HitSpot.HitSpotType type)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1D3B794", Offset = "0x1D3B794", VA = "0x1D3B794")]
	private void StartPunch(Punch punch)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x1D3AAD0", Offset = "0x1D3AAD0", VA = "0x1D3AAD0")]
	private int FindOpenHitSpots(Punch.PunchMode mode)
	{
		return default(int);
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x1D34DC8", Offset = "0x1D34DC8", VA = "0x1D34DC8")]
	public void Combination(int animation = 0)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x1D329CC", Offset = "0x1D329CC", VA = "0x1D329CC")]
	private void LookAtTarget()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x1D3B888", Offset = "0x1D3B888", VA = "0x1D3B888")]
	public Animator GetAnimator()
	{
		return null;
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x1D377B4", Offset = "0x1D377B4", VA = "0x1D377B4")]
	private void UpdateMovement(float target_distance_to_opponent)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x1D3B890", Offset = "0x1D3B890", VA = "0x1D3B890")]
	public AIController()
	{
	}
}
[Token(Token = "0x2000009")]
public class AIFist_ : MonoBehaviour
{
	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AIPlayerController.PunchingHand hand;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AIController AiController;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float lastCollision;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool collided;

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x1CD5C10", Offset = "0x1CD5C10", VA = "0x1CD5C10")]
	public bool Collided()
	{
		return default(bool);
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x1CD5C20", Offset = "0x1CD5C20", VA = "0x1CD5C20")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x1CD5DD8", Offset = "0x1CD5DD8", VA = "0x1CD5DD8")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x1CD5E00", Offset = "0x1CD5E00", VA = "0x1CD5E00")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x1CD5E28", Offset = "0x1CD5E28", VA = "0x1CD5E28")]
	public AIFist_()
	{
	}
}
[Token(Token = "0x200000A")]
public class HitReceiver_ : MonoBehaviour
{
	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AIPlayerController.BodyPart bodyPart;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AIController aiController;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rigidBody;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float damage;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool is_blood;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 collision_point;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 collision_normal;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 velocity;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 dist;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float hit_angle;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float velocity_up_angle;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private PlayerHitEmitter_ hitEmitter;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private HitEmitter_.EMITER_TYPE type;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private HitEmitter_.EMITER_SIDE side;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Collision collision;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float time;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool update;

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xF76DDC", Offset = "0xF76DDC", VA = "0xF76DDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xF76E7C", Offset = "0xF76E7C", VA = "0xF76E7C")]
	public void UpdateHitReceiver(HitEmitter_.EMITER_TYPE type, HitEmitter_.EMITER_SIDE side, Collision collision, PlayerHitEmitter_ hit_emitter)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xF771A8", Offset = "0xF771A8", VA = "0xF771A8")]
	public void UpdateHitReceived(AIPlayerController.BodyPart part, TextMeshPro m_text)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xF772CC", Offset = "0xF772CC", VA = "0xF772CC")]
	public HitReceiver_()
	{
	}
}
[Token(Token = "0x200000B")]
public class PlayerBlockCollider : MonoBehaviour
{
	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerHitEmitter_ hitEmitter;

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x10E6A7C", Offset = "0x10E6A7C", VA = "0x10E6A7C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x10E6A98", Offset = "0x10E6A98", VA = "0x10E6A98")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x10E6AB4", Offset = "0x10E6AB4", VA = "0x10E6AB4")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x10E6ACC", Offset = "0x10E6ACC", VA = "0x10E6ACC")]
	public PlayerBlockCollider()
	{
	}
}
[Token(Token = "0x200000C")]
public class PlayerBody : MonoBehaviour
{
	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerController_ playerController;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x10E6AD4", Offset = "0x10E6AD4", VA = "0x10E6AD4")]
	private void Start()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x10E6B3C", Offset = "0x10E6B3C", VA = "0x10E6B3C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x10E6DE4", Offset = "0x10E6DE4", VA = "0x10E6DE4")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x10E6F54", Offset = "0x10E6F54", VA = "0x10E6F54")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x10E6FF4", Offset = "0x10E6FF4", VA = "0x10E6FF4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x10E71D4", Offset = "0x10E71D4", VA = "0x10E71D4")]
	public PlayerBody()
	{
	}
}
[Token(Token = "0x200000D")]
public class PlayerController_ : MonoBehaviour
{
	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float lockTimer;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Collision col;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audio;

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x10E7554", Offset = "0x10E7554", VA = "0x10E7554")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x10E6BDC", Offset = "0x10E6BDC", VA = "0x10E6BDC")]
	public void CollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x10E7558", Offset = "0x10E7558", VA = "0x10E7558")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x10E755C", Offset = "0x10E755C", VA = "0x10E755C")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x10E6E84", Offset = "0x10E6E84", VA = "0x10E6E84")]
	public void UpdateLastCollisionTime(Collision collision)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x10E7560", Offset = "0x10E7560", VA = "0x10E7560")]
	public PlayerController_()
	{
	}
}
[Token(Token = "0x200000E")]
public class testing : MonoBehaviour
{
	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cube;

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xB36C40", Offset = "0xB36C40", VA = "0xB36C40")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xB36C44", Offset = "0xB36C44", VA = "0xB36C44")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xB36D34", Offset = "0xB36D34", VA = "0xB36D34")]
	public testing()
	{
	}
}
[Token(Token = "0x200000F")]
public class AttachmentSample : MonoBehaviour
{
	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject attachment;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool initialize;

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x101E7E0", Offset = "0x101E7E0", VA = "0x101E7E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x101E934", Offset = "0x101E934", VA = "0x101E934")]
	public AttachmentSample()
	{
	}
}
[Token(Token = "0x2000010")]
public class showFPS : MonoBehaviour
{
	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro m_text;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float deltaTime;

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xB365E8", Offset = "0xB365E8", VA = "0xB365E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xB365EC", Offset = "0xB365EC", VA = "0xB365EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xB3672C", Offset = "0xB3672C", VA = "0xB3672C")]
	public showFPS()
	{
	}
}
[Token(Token = "0x2000011")]
public class RandomCharacters : MonoBehaviour
{
	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float AvatarRange;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Animator avatar;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private global::AnimationInstancing.AnimationInstancing instancing;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float SpeedDampTime;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float DirectionDampTime;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 TargetPosition;

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x205AB40", Offset = "0x205AB40", VA = "0x205AB40")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x205AC78", Offset = "0x205AC78", VA = "0x205AC78")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x205AD40", Offset = "0x205AD40", VA = "0x205AD40")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x205B3FC", Offset = "0x205B3FC", VA = "0x205B3FC")]
	public RandomCharacters()
	{
	}
}
[Token(Token = "0x2000012")]
public class Spawner : MonoBehaviour
{
	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefabA;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject prefabB;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int count;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float lastTime;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int showCount;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> objList;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x11CD5C0", Offset = "0x11CD5C0", VA = "0x11CD5C0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x11CDB84", Offset = "0x11CDB84", VA = "0x11CDB84")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x11CDCA0", Offset = "0x11CDCA0", VA = "0x11CDCA0")]
	private void LoadAB()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x11CD990", Offset = "0x11CD990", VA = "0x11CD990")]
	private void Clear()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x11CDD68", Offset = "0x11CDD68", VA = "0x11CDD68")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x11CE150", Offset = "0x11CE150", VA = "0x11CE150")]
	public Spawner()
	{
	}
}
[Token(Token = "0x2000013")]
public class ThirdPersonCamera : MonoBehaviour
{
	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distanceAway;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float distanceUp;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float smooth;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject hovercraft;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 targetPosition;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform follow;

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xB2ED4C", Offset = "0xB2ED4C", VA = "0xB2ED4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xB2EDB0", Offset = "0xB2EDB0", VA = "0xB2EDB0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xB2EEFC", Offset = "0xB2EEFC", VA = "0xB2EEFC")]
	public ThirdPersonCamera()
	{
	}
}
[Token(Token = "0x2000014")]
public class EventReceiver : MonoBehaviour
{
	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string log;

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x1343FB4", Offset = "0x1343FB4", VA = "0x1343FB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x1343FB8", Offset = "0x1343FB8", VA = "0x1343FB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x1343FBC", Offset = "0x1343FBC", VA = "0x1343FBC")]
	public void NewEvent(AnimationInstancing.AnimationEvent evt)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x1343FC0", Offset = "0x1343FC0", VA = "0x1343FC0")]
	public EventReceiver()
	{
	}
}
[Token(Token = "0x2000015")]
public class Singleton<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T _instance;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static object _lock;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool applicationIsQuitting;

	[Token(Token = "0x17000001")]
	public static T Instance
	{
		[Token(Token = "0x60000C2")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000C3")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60000C4")]
	public static bool IsDestroy()
	{
		return default(bool);
	}

	[Token(Token = "0x60000C5")]
	public Singleton()
	{
	}
}
[Token(Token = "0x2000016")]
public class BoxingMatchExitMenu : GameMenu
{
	[Token(Token = "0x2000017")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884654", Offset = "0x884654")]
	private sealed class <MovePlayerToGym>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoxingMatchExitMenu <>4__this;

		[Token(Token = "0x17000002")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000CF")]
			[Address(RVA = "0xB37AA0", Offset = "0xB37AA0", VA = "0xB37AA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000003")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000D1")]
			[Address(RVA = "0xB37AE8", Offset = "0xB37AE8", VA = "0xB37AE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000CC")]
		[Address(RVA = "0xB37930", Offset = "0xB37930", VA = "0xB37930")]
		[DebuggerHidden]
		public <MovePlayerToGym>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60000CD")]
		[Address(RVA = "0xB3795C", Offset = "0xB3795C", VA = "0xB3795C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000CE")]
		[Address(RVA = "0xB37960", Offset = "0xB37960", VA = "0xB37960", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D0")]
		[Address(RVA = "0xB37AA8", Offset = "0xB37AA8", VA = "0xB37AA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BoxingMatchMenu main_menu;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RecenterPlayArea recenter;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FadeInOut fade_in_out;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool exit;

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x1353E9C", Offset = "0x1353E9C", VA = "0x1353E9C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x1353EA4", Offset = "0x1353EA4", VA = "0x1353EA4")]
	public bool IsExit()
	{
		return default(bool);
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x1353EAC", Offset = "0x1353EAC", VA = "0x1353EAC", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x1353FC0", Offset = "0x1353FC0", VA = "0x1353FC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x887FB0", Offset = "0x887FB0")]
	private IEnumerator MovePlayerToGym()
	{
		return null;
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x135402C", Offset = "0x135402C", VA = "0x135402C")]
	public BoxingMatchExitMenu()
	{
	}
}
[Token(Token = "0x2000018")]
public class DDPMouseMovement : MonoBehaviour
{
	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh tm;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh fpsTM;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DokoDemoPainterPen pen;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float fps;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject obj;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Camera cam;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color[] colors;

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xD13668", Offset = "0xD13668", VA = "0xD13668")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xD1377C", Offset = "0xD1377C", VA = "0xD1377C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xD138EC", Offset = "0xD138EC", VA = "0xD138EC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xD138F0", Offset = "0xD138F0", VA = "0xD138F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xD138F4", Offset = "0xD138F4", VA = "0xD138F4")]
	public DDPMouseMovement()
	{
	}
}
[Token(Token = "0x2000019")]
public class DDPPenMovement : MonoBehaviour
{
	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 minPosition;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 maxPosition;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float stepSize;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool lastJump;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DokoDemoPainterPen pen;

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xD138FC", Offset = "0xD138FC", VA = "0xD138FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xD13950", Offset = "0xD13950", VA = "0xD13950")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xD13B38", Offset = "0xD13B38", VA = "0xD13B38")]
	public DDPPenMovement()
	{
	}
}
[Token(Token = "0x200001A")]
public class DokoDemoPainterPaintable : MonoBehaviour
{
	[Token(Token = "0x200001B")]
	private class TextureProcessor
	{
		[Token(Token = "0x200001C")]
		private class PenData
		{
			[Token(Token = "0x40001FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RenderTexture rtOldPos;

			[Token(Token = "0x40001FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RenderTexture rtHist;

			[Token(Token = "0x40001FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int lastDrawn;

			[Token(Token = "0x4000200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float lastTime;

			[Token(Token = "0x4000201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float lastOpacity;

			[Token(Token = "0x4000202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float lastStrength;

			[Token(Token = "0x4000203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Color lastColor;

			[Token(Token = "0x4000204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool lastSmoothTip;

			[Token(Token = "0x4000205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float lastSmoothTipExp;

			[Token(Token = "0x60000FB")]
			[Address(RVA = "0x1D52E60", Offset = "0x1D52E60", VA = "0x1D52E60")]
			public PenData()
			{
			}

			[Token(Token = "0x60000FC")]
			[Address(RVA = "0x1D52F70", Offset = "0x1D52F70", VA = "0x1D52F70")]
			public bool checkPrevPainted(float strength, float opacity, Color color, bool prevPainted, bool smoothTip, float smoothTipExp)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200001D")]
		private class DrawCommand
		{
			[Token(Token = "0x4000206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int penId;

			[Token(Token = "0x4000207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RenderTexture rtPos;

			[Token(Token = "0x4000208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color color;

			[Token(Token = "0x4000209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float maxDist;

			[Token(Token = "0x400020A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool preserveAlpha;

			[Token(Token = "0x400020B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			public bool smoothTip;

			[Token(Token = "0x400020C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float smoothTipExp;

			[Token(Token = "0x400020D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float width;

			[Token(Token = "0x400020E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float strength;

			[Token(Token = "0x400020F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float opacity;

			[Token(Token = "0x4000210")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float fade;

			[Token(Token = "0x4000211")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool prevPainted;

			[Token(Token = "0x4000212")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
			public bool historyDecay;

			[Token(Token = "0x4000213")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public float historyDecayTime;

			[Token(Token = "0x4000214")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Texture2D stampTexture;

			[Token(Token = "0x4000215")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector2 stampPixelSize;

			[Token(Token = "0x4000216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float stampAngle;

			[Token(Token = "0x4000217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Vector2 stampScaleFactor;

			[Token(Token = "0x4000218")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public float stampOpacity;

			[Token(Token = "0x4000219")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public bool enableTint;

			[Token(Token = "0x400021A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public Color tintColor;

			[Token(Token = "0x400021B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public Vector4 tintStrength;

			[Token(Token = "0x60000FD")]
			[Address(RVA = "0x1D52DB0", Offset = "0x1D52DB0", VA = "0x1D52DB0")]
			public DrawCommand()
			{
			}
		}

		[Token(Token = "0x40001F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int renderQueue;

		[Token(Token = "0x40001F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int id;

		[Token(Token = "0x40001F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Texture2D tex;

		[Token(Token = "0x40001F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material targetMaterial;

		[Token(Token = "0x40001FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture rtCurrent;

		[Token(Token = "0x40001FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Texture rtOriginal;

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<int, PenData> pens;

		[Token(Token = "0x60000ED")]
		[Address(RVA = "0xB3A19C", Offset = "0xB3A19C", VA = "0xB3A19C")]
		public TextureProcessor(Material mat, Texture2D persistingTexture, bool defer)
		{
		}

		[Token(Token = "0x60000EE")]
		[Address(RVA = "0xB3A780", Offset = "0xB3A780", VA = "0xB3A780", Slot = "1")]
		~TextureProcessor()
		{
		}

		[Token(Token = "0x60000EF")]
		[Address(RVA = "0xB3A500", Offset = "0xB3A500", VA = "0xB3A500")]
		private bool ensureTextures(int penId)
		{
			return default(bool);
		}

		[Token(Token = "0x60000F0")]
		[Address(RVA = "0xB3A834", Offset = "0xB3A834", VA = "0xB3A834")]
		private void runShader(DrawCommand dc)
		{
		}

		[Token(Token = "0x60000F1")]
		[Address(RVA = "0xB3B850", Offset = "0xB3B850", VA = "0xB3B850")]
		public void draw(int penId, RenderTexture rtPos, Color color, float maxDist, bool preserveAlpha, bool smoothTip, float smoothTipExp, float widthPx, float opacity, float fadeAmount, bool prevPainted, bool historyDecay, float historyDecayTime)
		{
		}

		[Token(Token = "0x60000F2")]
		[Address(RVA = "0xB3B97C", Offset = "0xB3B97C", VA = "0xB3B97C")]
		public void fade(float fadeAmount)
		{
		}

		[Token(Token = "0x60000F3")]
		[Address(RVA = "0xB3B9F4", Offset = "0xB3B9F4", VA = "0xB3B9F4")]
		public void erase(int penId, RenderTexture rtPos, float maxDist, bool smoothTip, float smoothTipExp, float widthPx, float strength, float fadeAmount, bool prevPainted, bool historyDecay, float historyDecayTime)
		{
		}

		[Token(Token = "0x60000F4")]
		[Address(RVA = "0xB3BAF0", Offset = "0xB3BAF0", VA = "0xB3BAF0")]
		public void stampAt(RenderTexture rtPos, bool preserveAlphaStamp, Vector2 stampScaleFactor, Texture2D stampTexture, Vector2 stampPixelSize, float stampAngle, float stampOpacity, bool enableTint, Color tintColor, Vector4 tintStrength, float fadeAmount)
		{
		}

		[Token(Token = "0x60000F5")]
		[Address(RVA = "0xB3B790", Offset = "0xB3B790", VA = "0xB3B790")]
		public void discardRT(RenderTexture rt)
		{
		}

		[Token(Token = "0x60000F6")]
		[Address(RVA = "0xB3BC44", Offset = "0xB3BC44", VA = "0xB3BC44")]
		public void maintainPens()
		{
		}

		[Token(Token = "0x60000F7")]
		[Address(RVA = "0xB3BFB8", Offset = "0xB3BFB8", VA = "0xB3BFB8")]
		private byte[] texToPNG(Texture tex)
		{
			return null;
		}

		[Token(Token = "0x60000F8")]
		[Address(RVA = "0xB3C1A4", Offset = "0xB3C1A4", VA = "0xB3C1A4")]
		public byte[] toPNG()
		{
			return null;
		}

		[Token(Token = "0x60000F9")]
		[Address(RVA = "0xB3C24C", Offset = "0xB3C24C", VA = "0xB3C24C")]
		public byte[] origToPNG()
		{
			return null;
		}

		[Token(Token = "0x60000FA")]
		[Address(RVA = "0xB3C2F4", Offset = "0xB3C2F4", VA = "0xB3C2F4")]
		public int getID()
		{
			return default(int);
		}
	}

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88533C", Offset = "0x88533C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88533C", Offset = "0x88533C")]
	public float radiusFactor;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88539C", Offset = "0x88539C")]
	public float penOpacityFactor;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8853D4", Offset = "0x8853D4")]
	public float eraserRadiusFactor;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88540C", Offset = "0x88540C")]
	public float eraserOpacityFactor;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885444", Offset = "0x885444")]
	public bool preserveAlphaPen;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88547C", Offset = "0x88547C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88547C", Offset = "0x88547C")]
	public Vector2 stampScaleFactor;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8854DC", Offset = "0x8854DC")]
	public bool preserveAlphaStamp;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885514", Offset = "0x885514")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x885514", Offset = "0x885514")]
	public float fadeFactor;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885574", Offset = "0x885574")]
	public float fadeTimeSeconds;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8855AC", Offset = "0x8855AC")]
	public float fadeIntervalSeconds;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8855E4", Offset = "0x8855E4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8855E4", Offset = "0x8855E4")]
	public string uniqueName;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885644", Offset = "0x885644")]
	public bool persistent;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88567C", Offset = "0x88567C")]
	public bool keepOld;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8856B4", Offset = "0x8856B4")]
	public bool prependAppDir;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8856EC", Offset = "0x8856EC")]
	public string savePath;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x885724", Offset = "0x885724")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885724", Offset = "0x885724")]
	public bool deferTextureAllocation;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885784", Offset = "0x885784")]
	public float maxDistance;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8857BC", Offset = "0x8857BC")]
	public List<int> materialIndexWhitelist;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Cuts cut;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool historyDecay;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float historyDecayTime;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int id;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Renderer paintableRenderer;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material[] materials;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Shader[] shaders;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private TextureProcessor[] tps;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool uvMode;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool wasUV;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	private bool painted;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
	private bool fadedNow;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int oldLayer;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int previouslyPainted;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private double lastFadeTime;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int layer;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Material texProcMat;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int lastTPId;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Dictionary<int, TextureProcessor> tpIDMap;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int lastId;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Dictionary<int, DokoDemoPainterPaintable> idMap;

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xD19A8C", Offset = "0xD19A8C", VA = "0xD19A8C")]
	private static bool ensureTextureProcessor()
	{
		return default(bool);
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xD19C60", Offset = "0xD19C60", VA = "0xD19C60")]
	private static int registerTP(TextureProcessor tp)
	{
		return default(int);
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xD19D94", Offset = "0xD19D94", VA = "0xD19D94")]
	private static void deregisterTP(int id)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xD19E34", Offset = "0xD19E34", VA = "0xD19E34")]
	private static int registerPaintable(DokoDemoPainterPaintable p)
	{
		return default(int);
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xD19F70", Offset = "0xD19F70", VA = "0xD19F70")]
	private static void deregisterPaintable(int id)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xD1A010", Offset = "0xD1A010", VA = "0xD1A010")]
	public static bool setGlobalUVMode(bool mode, Plane[] planes)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xD1A510", Offset = "0xD1A510", VA = "0xD1A510")]
	public static void globalPaintAt(int penId, RenderTexture rtPos, Color color, bool smoothTip, float smoothTipExp, float radius, float opacity, bool erase)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xD1A93C", Offset = "0xD1A93C", VA = "0xD1A93C")]
	public static void globalStampAt(RenderTexture rtPos, Texture2D stampTexture, Vector2 stampPixelSize, float stampAngle, float stampOpacity, bool enableTint, Color tintColor, Vector4 tintStrength)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xD1AD1C", Offset = "0xD1AD1C", VA = "0xD1AD1C")]
	private double getTimestamp()
	{
		return default(double);
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xD1ADE8", Offset = "0xD1ADE8", VA = "0xD1ADE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xD1A228", Offset = "0xD1A228", VA = "0xD1A228")]
	public bool setUVMode(bool mode, Plane[] planes)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xD1BB20", Offset = "0xD1BB20", VA = "0xD1BB20")]
	private float getFade()
	{
		return default(float);
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xD1A788", Offset = "0xD1A788", VA = "0xD1A788")]
	public void paintAt(int penId, RenderTexture rtPos, Color color, bool smoothTip, float smoothTipExp, float radius, float opacity, bool erase)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xD1ABB0", Offset = "0xD1ABB0", VA = "0xD1ABB0")]
	public void stampAt(RenderTexture rtPos, Texture2D stampTexture, Vector2 stampPixelSize, float stampAngle, float stampOpacity, bool enableTint, Color tintColor, Vector4 tintStrength)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xD1BBA0", Offset = "0xD1BBA0", VA = "0xD1BBA0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xD1BCC4", Offset = "0xD1BCC4", VA = "0xD1BCC4")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xD1C89C", Offset = "0xD1C89C", VA = "0xD1C89C")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xD1C8A0", Offset = "0xD1C8A0", VA = "0xD1C8A0")]
	public DokoDemoPainterPaintable()
	{
	}
}
[Token(Token = "0x200001E")]
public class DokoDemoPainterPen : MonoBehaviour
{
	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8857F4", Offset = "0x8857F4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8857F4", Offset = "0x8857F4")]
	public Color color;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885854", Offset = "0x885854")]
	public float radius;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88588C", Offset = "0x88588C")]
	public float opacity;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8858C4", Offset = "0x8858C4")]
	public bool smoothTip;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8858FC", Offset = "0x8858FC")]
	public float smoothTipExponent;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885934", Offset = "0x885934")]
	public bool penDown;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88596C", Offset = "0x88596C")]
	public bool eraser;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8859A4", Offset = "0x8859A4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8859A4", Offset = "0x8859A4")]
	public bool keepTarget;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885A04", Offset = "0x885A04")]
	public bool paintInvisible;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885A3C", Offset = "0x885A3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x885A3C", Offset = "0x885A3C")]
	public Camera uvcam;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Shader ddpdShader;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture lastPenTex;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int id;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int nextId;

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xD1C9B8", Offset = "0xD1C9B8", VA = "0xD1C9B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xD1CAEC", Offset = "0xD1CAEC", VA = "0xD1CAEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xD1CB88", Offset = "0xD1CB88", VA = "0xD1CB88")]
	public void penUpdate()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xD1CE54", Offset = "0xD1CE54", VA = "0xD1CE54")]
	public DokoDemoPainterPen()
	{
	}
}
[Token(Token = "0x200001F")]
public class DokoDemoPainterStamp : MonoBehaviour
{
	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x885A9C", Offset = "0x885A9C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885A9C", Offset = "0x885A9C")]
	public Texture2D stampTexture;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885AFC", Offset = "0x885AFC")]
	public Vector2 stampPixelSize;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885B34", Offset = "0x885B34")]
	public float stampAngle;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885B6C", Offset = "0x885B6C")]
	public float stampOpacity;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885BA4", Offset = "0x885BA4")]
	public bool enableTint;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885BDC", Offset = "0x885BDC")]
	public Color tintColor;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885C14", Offset = "0x885C14")]
	public Vector4 tintStrength;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885C4C", Offset = "0x885C4C")]
	public bool stampActive;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885C84", Offset = "0x885C84")]
	public bool deactiveStampAfterAttempt;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885CBC", Offset = "0x885CBC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x885CBC", Offset = "0x885CBC")]
	public bool paintInvisible;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885D1C", Offset = "0x885D1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x885D1C", Offset = "0x885D1C")]
	public Camera uvcam;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Shader ddpdShader;

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xD1CEA4", Offset = "0xD1CEA4", VA = "0xD1CEA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xD1CF94", Offset = "0xD1CF94", VA = "0xD1CF94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xD1CFA4", Offset = "0xD1CFA4", VA = "0xD1CFA4")]
	public void stampUpdate()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xD1D2EC", Offset = "0xD1D2EC", VA = "0xD1D2EC")]
	public DokoDemoPainterStamp()
	{
	}
}
[Token(Token = "0x2000020")]
public class fistBruisTest : MonoBehaviour
{
	[Token(Token = "0x6000107")]
	[Address(RVA = "0xB34724", Offset = "0xB34724", VA = "0xB34724")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xB34728", Offset = "0xB34728", VA = "0xB34728")]
	public fistBruisTest()
	{
	}
}
[Token(Token = "0x2000021")]
public class ClearData : MonoBehaviour
{
	[Token(Token = "0x6000109")]
	[Address(RVA = "0x135F7E0", Offset = "0x135F7E0", VA = "0x135F7E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x135F7E4", Offset = "0x135F7E4", VA = "0x135F7E4")]
	public ClearData()
	{
	}
}
[Token(Token = "0x2000022")]
public class CollisionTest : MonoBehaviour
{
	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro m_text;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float deltaTime;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public AIPlayerController.BodyPart part;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float lockedTimer;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HitReceiver_ hr;

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xD10F08", Offset = "0xD10F08", VA = "0xD10F08")]
	private void Start()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xD10F0C", Offset = "0xD10F0C", VA = "0xD10F0C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xD10F60", Offset = "0xD10F60", VA = "0xD10F60")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xD10FB4", Offset = "0xD10FB4", VA = "0xD10FB4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xD110F0", Offset = "0xD110F0", VA = "0xD110F0")]
	public CollisionTest()
	{
	}
}
[Token(Token = "0x2000023")]
public class CollisionTestMG : MonoBehaviour
{
	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CollisionTest ct;

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xD110F8", Offset = "0xD110F8", VA = "0xD110F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xD110FC", Offset = "0xD110FC", VA = "0xD110FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xD11168", Offset = "0xD11168", VA = "0xD11168")]
	public CollisionTestMG()
	{
	}
}
[Token(Token = "0x2000024")]
public class DashImplementation : MonoBehaviour
{
	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject camera;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject pauseMenuUIThing;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] listOfObjectsToHideOnPause;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DashMenu dashMenu;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BoxingMatchExitMenu exitMenu;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource audio;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isVisibe;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource[] audioSources;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool pressed;

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xD13B4C", Offset = "0xD13B4C", VA = "0xD13B4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xD13B50", Offset = "0xD13B50", VA = "0xD13B50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xD13B54", Offset = "0xD13B54", VA = "0xD13B54")]
	public AudioSource GetAudio()
	{
		return null;
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xD13B5C", Offset = "0xD13B5C", VA = "0xD13B5C")]
	private void ShowMenu()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xD13FE8", Offset = "0xD13FE8", VA = "0xD13FE8")]
	public void hideMenu()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xD14204", Offset = "0xD14204", VA = "0xD14204")]
	private void Update()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xD13DC8", Offset = "0xD13DC8", VA = "0xD13DC8")]
	private void PauseGame()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xD1402C", Offset = "0xD1402C", VA = "0xD1402C")]
	private void UnPauseGame()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xD142FC", Offset = "0xD142FC", VA = "0xD142FC")]
	public DashImplementation()
	{
	}
}
[Token(Token = "0x2000025")]
public class DashMenu : GameMenu
{
	[Token(Token = "0x2000026")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884664", Offset = "0x884664")]
	private sealed class <MovePlayerToGym>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DashMenu <>4__this;

		[Token(Token = "0x17000004")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000128")]
			[Address(RVA = "0xB393F0", Offset = "0xB393F0", VA = "0xB393F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000005")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600012A")]
			[Address(RVA = "0xB39438", Offset = "0xB39438", VA = "0xB39438", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000125")]
		[Address(RVA = "0xB39280", Offset = "0xB39280", VA = "0xB39280")]
		[DebuggerHidden]
		public <MovePlayerToGym>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000126")]
		[Address(RVA = "0xB392AC", Offset = "0xB392AC", VA = "0xB392AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000127")]
		[Address(RVA = "0xB392B0", Offset = "0xB392B0", VA = "0xB392B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000129")]
		[Address(RVA = "0xB393F8", Offset = "0xB393F8", VA = "0xB393F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DashImplementation dash_implementation;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject gameMenu;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Collider yesButton;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Collider noButton;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform leftHand;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform rightHand;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject leftHandModel;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject rightHandModel;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public FadeInOut fade_in_out;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool exit;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RecenterPlayArea recenter;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isClicked;

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xD14304", Offset = "0xD14304", VA = "0xD14304")]
	private void Start()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xD1430C", Offset = "0xD1430C", VA = "0xD1430C")]
	public bool isExit()
	{
		return default(bool);
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xD14314", Offset = "0xD14314", VA = "0xD14314")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xD1436C", Offset = "0xD1436C", VA = "0xD1436C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xD141AC", Offset = "0xD141AC", VA = "0xD141AC")]
	public void ShowGameMenu()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xD14370", Offset = "0xD14370", VA = "0xD14370")]
	public void ContainsHand()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xD14530", Offset = "0xD14530", VA = "0xD14530", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xD14668", Offset = "0xD14668", VA = "0xD14668")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x888060", Offset = "0x888060")]
	private IEnumerator MovePlayerToGym()
	{
		return null;
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xD146D4", Offset = "0xD146D4", VA = "0xD146D4")]
	public DashMenu()
	{
	}
}
[Token(Token = "0x2000027")]
public class GymReferences : MonoBehaviour
{
	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject LeftBand;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject RightBand;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject PlayerBody;

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x1349884", Offset = "0x1349884", VA = "0x1349884")]
	public GymReferences()
	{
	}
}
[Token(Token = "0x2000028")]
public class InitialLoadingScreen : MonoBehaviour
{
	[Token(Token = "0x2000029")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884674", Offset = "0x884674")]
	private sealed class <LoadYourAsyncScene>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400025D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400025E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400025F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AsyncOperation <asyncLoad>5__2;

		[Token(Token = "0x17000006")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000134")]
			[Address(RVA = "0xB3E7B8", Offset = "0xB3E7B8", VA = "0xB3E7B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000007")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000136")]
			[Address(RVA = "0xB3E800", Offset = "0xB3E800", VA = "0xB3E800", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000131")]
		[Address(RVA = "0xB3E64C", Offset = "0xB3E64C", VA = "0xB3E64C")]
		[DebuggerHidden]
		public <LoadYourAsyncScene>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000132")]
		[Address(RVA = "0xB3E678", Offset = "0xB3E678", VA = "0xB3E678", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000133")]
		[Address(RVA = "0xB3E67C", Offset = "0xB3E67C", VA = "0xB3E67C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000135")]
		[Address(RVA = "0xB3E7C0", Offset = "0xB3E7C0", VA = "0xB3E7C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float time;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool start;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool can_load;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	private bool entitlement;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string app_id;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UniversalRenderPipelineAsset asset;

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xF78E78", Offset = "0xF78E78", VA = "0xF78E78")]
	private void Awake()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xF79084", Offset = "0xF79084", VA = "0xF79084")]
	private void GetEntitleMentCAllback(Message msg)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xF79134", Offset = "0xF79134", VA = "0xF79134")]
	private void Start()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xF790D8", Offset = "0xF790D8", VA = "0xF790D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x888110", Offset = "0x888110")]
	private IEnumerator LoadYourAsyncScene()
	{
		return null;
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xF79138", Offset = "0xF79138", VA = "0xF79138")]
	public InitialLoadingScreen()
	{
	}
}
[Token(Token = "0x200002A")]
public class LanguageMiniMenu : MonoBehaviour
{
	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh Are_you_sure_you_want_to_exit;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material boxing_match;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material next_round;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material button_start;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material exit_button_menu;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material yes_button_mat;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material no_now_button_mat;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture button_next_round_tx;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture button_next_round_tx_Chn;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture boxing_match_tx;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture boxing_match_tx_Chn;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture yes_btn_tex_Chn;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture yes_btn_tex_eng;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture no_btn_tex_Chn;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Texture no_btn_tex_eng;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Texture exit_button_menu_tx_Chn;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Texture exit_button_menu_tx;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Texture button_start_tx_Chn;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Texture button_start_tx;

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xF7CC0C", Offset = "0xF7CC0C", VA = "0xF7CC0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xF7CDAC", Offset = "0xF7CDAC", VA = "0xF7CDAC")]
	public LanguageMiniMenu()
	{
	}
}
[Token(Token = "0x200002B")]
public class LoadingSceneText : MonoBehaviour
{
	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh textmesh;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool up;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Color color;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float transparency;

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x106F77C", Offset = "0x106F77C", VA = "0x106F77C")]
	private void Start()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x106F7C4", Offset = "0x106F7C4", VA = "0x106F7C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x106F858", Offset = "0x106F858", VA = "0x106F858")]
	public LoadingSceneText()
	{
	}
}
[Token(Token = "0x200002C")]
public class LoadingScreen : MonoBehaviour
{
	[Token(Token = "0x200002D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884684", Offset = "0x884684")]
	private sealed class <LoadYourAsyncScene>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400027A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400027B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AsyncOperation <asyncLoad>5__2;

		[Token(Token = "0x17000008")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000142")]
			[Address(RVA = "0xB3EF74", Offset = "0xB3EF74", VA = "0xB3EF74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000009")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000144")]
			[Address(RVA = "0xB3EFBC", Offset = "0xB3EFBC", VA = "0xB3EFBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600013F")]
		[Address(RVA = "0xB3EDDC", Offset = "0xB3EDDC", VA = "0xB3EDDC")]
		[DebuggerHidden]
		public <LoadYourAsyncScene>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000140")]
		[Address(RVA = "0xB3EE08", Offset = "0xB3EE08", VA = "0xB3EE08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000141")]
		[Address(RVA = "0xB3EE0C", Offset = "0xB3EE0C", VA = "0xB3EE0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000143")]
		[Address(RVA = "0xB3EF7C", Offset = "0xB3EF7C", VA = "0xB3EF7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float time;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool start;

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x106F860", Offset = "0x106F860", VA = "0x106F860")]
	private void Start()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x106F88C", Offset = "0x106F88C", VA = "0x106F88C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8881C0", Offset = "0x8881C0")]
	private IEnumerator LoadYourAsyncScene()
	{
		return null;
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x106F8E8", Offset = "0x106F8E8", VA = "0x106F8E8")]
	public LoadingScreen()
	{
	}
}
[Token(Token = "0x200002E")]
public class StartupSceneManager : MonoBehaviour
{
	[Token(Token = "0x6000145")]
	[Address(RVA = "0x11D16EC", Offset = "0x11D16EC", VA = "0x11D16EC")]
	public StartupSceneManager()
	{
	}
}
[Token(Token = "0x200002F")]
public class MainMenuExit : GameMenu
{
	[Token(Token = "0x2000030")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884694", Offset = "0x884694")]
	private sealed class <QuitGame>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenuExit <>4__this;

		[Token(Token = "0x1700000A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600014F")]
			[Address(RVA = "0xB3FB48", Offset = "0xB3FB48", VA = "0xB3FB48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000151")]
			[Address(RVA = "0xB3FB90", Offset = "0xB3FB90", VA = "0xB3FB90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600014C")]
		[Address(RVA = "0xB3FA3C", Offset = "0xB3FA3C", VA = "0xB3FA3C")]
		[DebuggerHidden]
		public <QuitGame>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600014D")]
		[Address(RVA = "0xB3FA68", Offset = "0xB3FA68", VA = "0xB3FA68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600014E")]
		[Address(RVA = "0xB3FA6C", Offset = "0xB3FA6C", VA = "0xB3FA6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000150")]
		[Address(RVA = "0xB3FB50", Offset = "0xB3FB50", VA = "0xB3FB50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RecenterPlayArea recenter;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MainMenuManager main_menu;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh Are_you_sure_you_want_to_exit;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FadeInOut fade_in_out;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool wait;

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x1071FB4", Offset = "0x1071FB4", VA = "0x1071FB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1071FBC", Offset = "0x1071FBC", VA = "0x1071FBC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x107206C", Offset = "0x107206C", VA = "0x107206C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x1072070", Offset = "0x1072070", VA = "0x1072070", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x107216C", Offset = "0x107216C", VA = "0x107216C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x888270", Offset = "0x888270")]
	private IEnumerator QuitGame()
	{
		return null;
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x10721D8", Offset = "0x10721D8", VA = "0x10721D8")]
	public MainMenuExit()
	{
	}
}
[Token(Token = "0x2000031")]
public class LanguageChange : MonoBehaviour
{
	[Token(Token = "0x2000032")]
	public enum Language
	{
		[Token(Token = "0x4000380")]
		ENG,
		[Token(Token = "0x4000381")]
		CHINESE
	}

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int lang;

	[Token(Token = "0x4000285")]
	public const string LANG = "LANG";

	[Token(Token = "0x4000286")]
	public const string SELECTEDLANG = "SELECTEDLANG";

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool chineseVersion;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material defaultLanguage;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material languageText;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material language_button;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture button_language;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture button_languageChn;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture language_text_tx;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture language_text_tx_chn;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture defaultLanguageText;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture defaultLanguageTextChn;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material boxing_match;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture boxing_match_tx;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture boxing_match_tx_Chn;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material bar_time;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material heavy_bag_boxer_how_to_play;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material heavy_bag_boxer_menu_1;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material heavy_bag_boxer_menu_endurance;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material heavy_bag_boxer_menu_free_mode;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material heavy_bag_boxer_menu_timed;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Material heavy_bag_boxer_menu;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Material heavyBagLimits;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Texture heavy_bag_how_to_play_tx;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Texture heavy_bag_limit_menu_tx;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Texture heavy_bag_menu_tx;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Texture heavy_bag_menu_endurance_tx;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Texture heavy_bag_menu_free_tx;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Texture heavy_bag_menu_timed_tx;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Texture heavy_bag_result_menu_tx;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Texture bar_time_tx;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Texture heavy_bag_how_to_play_tx_Chn;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Texture heavy_bag_limit_menu_tx_Chn;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Texture heavy_bag_menu_tx_Chn;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Texture heavy_bag_menu_endurance_tx_Chn;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Texture heavy_bag_menu_free_tx_Chn;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Texture heavy_bag_menu_timed_tx_Chn;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Texture heavy_bag_result_menu_tx_Chn;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Texture bar_time_tx_Chn;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Material speed_bag_menu_how_to_play;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Material speed_bag_menu_screen;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Material speed_bag_menu_time_selection;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Material speed_bag_menu_timer;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Material speed_bag_score_result;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Texture speed_bag_menu_how_to_play_tx;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Texture speed_bag_menu_screen_tx;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Texture speed_bag_menu_time_selection_tx;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Texture speed_bag_menu_timer_tx;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Texture speed_bag_score_result_tx;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Texture speed_bag_menu_how_to_play_tx_Chn;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Texture speed_bag_menu_screen_tx_Chn;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Texture speed_bag_menu_time_selection_tx_Chn;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Texture speed_bag_menu_timer_tx_Chn;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Texture speed_bag_score_result_tx_Chn;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Material dummy_how_to_play;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Material dummy_menu;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Material dummy_menu_time_selection;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Material dummy_result_menu;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Material dummy_timer_menu;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Texture dummy_how_to_play_tx;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Texture dummy_menu_tx;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Texture dummy_menu_time_tx;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Texture dummy_result_menu_tx;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Texture dummy_timer_menu_tx;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Texture dummy_how_to_play_tx_Chn;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Texture dummy_menu_tx_Chn;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public Texture dummy_menu_time_tx_Chn;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public Texture dummy_result_menu_tx_Chn;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public Texture dummy_timer_menu_tx_Chn;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public Material double_end_bag_menu;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public Material double_end_bag_result_menu;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public Texture double_end_bag_menu_tx;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public Texture double_end_bag_result_menu_updated_tx;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public Texture double_end_bag_menu_tx_Chn;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public Texture double_end_bag_result_menu_updated_tx_Chn;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public Material coach_how_to_play;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public Material coach_result;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public Material coach_timer;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public Material time_selection;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public Texture pad_training_how_to_play_menu_tx;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public Texture pad_training_menu_results_tx;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public Texture pad_training_time_selection_tx;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public Texture pad_training_timer_tx;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public Texture pad_training_how_to_play_menu_tx_Chn;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public Texture pad_training_menu_results_tx_Chn;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public Texture pad_training_time_selection_tx_Chn;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public Texture pad_training_timer_tx_Chn;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public Material boxing_machine_how_to_play_menu;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public Material boxing_machine_menu;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public Material boxing_machine_result_menu;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public Material boxing_machine_time_selection_menu;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public Material boxing_machine_timer_menu;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public Material BoxingMachineTargetSelection;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public Texture boxing_machine_how_to_play_menu_tx;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public Texture boxing_machine_menu_tx;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public Texture boxing_machine_result_menu_tx;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public Texture boxing_machine_target_selection_tx;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public Texture boxing_machine_time_selection_menu_tx;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public Texture boxing_machine_timer_menu_tx;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public Texture boxing_machine_how_to_play_menu_tx_Chn;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public Texture boxing_machine_menu_tx_Chn;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public Texture boxing_machine_result_menu_tx_Chn;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public Texture boxing_machine_target_selection_tx_Chn;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public Texture boxing_machine_time_selection_menu_tx_Chn;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public Texture boxing_machine_timer_menu_tx_Chn;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public Material button_back;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public Material button_endurance;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public Material button_free;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public Material next_round;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public Material button_ok;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public Material button_restart;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public Material button_settings;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public Material button_start;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public Material button_stop;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public Material button_timed;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public Material exit_button_menu;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public Material terget_btn;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public Material score_time;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public Texture button_back_tx;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public Texture button_endurance_tx;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public Texture button_free_tx;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public Texture button_next_round_tx;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public Texture button_ok_tx;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public Texture button_restart_tx;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	public Texture button_settings_tx;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public Texture button_start_tx;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	public Texture button_stop_tx;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public Texture button_timed_tx;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	public Texture exit_button_menu_tx;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public Texture targets_button_tx;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	public Texture score_time_tx;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public Texture button_back_tx_Chn;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	public Texture button_endurance_tx_Chn;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	public Texture button_free_tx_Chn;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	public Texture button_next_round_tx_Chn;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	public Texture button_ok_tx_Chn;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	public Texture button_restart_tx_Chn;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	public Texture button_settings_tx_Chn;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
	public Texture button_start_tx_Chn;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
	public Texture button_stop_tx_Chn;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
	public Texture button_timed_tx_Chn;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
	public Texture exit_button_menu_tx_Chn;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
	public Texture targets_button_tx_Chn;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
	public Texture score_time_tx_Chn;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
	public Material boxing_bar_menu_how_to_play;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	public Material boxing_bar_menu_result;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
	public Material boxing_bar_menu_score;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
	public Material boxing_bar_menu_screen;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
	public Material boxing_bar_menu_time;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
	public Texture boxing_bar_menu_how_to_play_tx;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
	public Texture boxing_bar_menu_result_tx;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
	public Texture boxing_bar_menu_score_tx;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
	public Texture boxing_bar_menu_screen_tx;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
	public Texture boxing_bar_menu_time_tx;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
	public Texture boxing_bar_menu_how_to_play_tx_Chn;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
	public Texture boxing_bar_menu_result_tx_Chn;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
	public Texture boxing_bar_menu_score_tx_Chn;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
	public Texture boxing_bar_menu_screen_tx_Chn;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
	public Texture boxing_bar_menu_time_tx_Chn;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
	public Material level_text_mat;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
	public Material normal_text_mat;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
	public Material custom_text_mat;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
	public Material AisettingBg1;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
	public Material AisettingBg2;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
	public Material play_area_aut_custom_mat;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
	public Material audience_on_off_mat;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x538")]
	public Material game_menu_mat;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
	public Material bg_sound_volume_mat;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
	public Material audeinece_mat;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
	public Material play_area_mat;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
	public Material your_height_mat;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
	public Material setting_button_mat;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x568")]
	public Material exit_button_mat;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
	public Material street_fight_button_mat;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x578")]
	public Material ring_fight_button_mat;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
	public Material boxing_bar_button_mat;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
	public Material boxign_machine_button_mat;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
	public Material boxing_dummy_button_mat;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x598")]
	public Material heavy_bag_button_mat;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
	public Material speed_bag_button_mat;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A8")]
	public Material double_end_bag_button_mat;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B0")]
	public Material pads_button_mat;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B8")]
	public Material stats_button_mat;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C0")]
	public Material play_now_button_mat;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C8")]
	public Material back_button_mat;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D0")]
	public Material custom_button_mat;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D8")]
	public Material next_now_button_mat;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E0")]
	public Material yes_button_mat;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E8")]
	public Material no_now_button_mat;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F0")]
	public Texture level_text_tex_eng;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F8")]
	public Texture normal_text_tex_eng;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x600")]
	public Texture custom_text_tex_eng;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x608")]
	public Texture the_fight_AI_setting_1_menu_eng;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x610")]
	public Texture the_fight_AI_setting_2_menu_eng;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x618")]
	public Texture play_area_aut_custom_tex_eng;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x620")]
	public Texture game_menu_bg_tex_eng;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x628")]
	public Texture audience_on_off_tex_eng;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x630")]
	public Texture bg_sound_volume_tex_eng;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x638")]
	public Texture audeinece_tex_eng;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x640")]
	public Texture play_area_tex_eng;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x648")]
	public Texture street_fight_btn_tex_eng;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x650")]
	public Texture boxing_bar_btn_tex_eng;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x658")]
	public Texture boxing_dummy_btn_tex_eng;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x660")]
	public Texture boxing_machine_btn_tex_eng;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x668")]
	public Texture double_end_bag_btn_tex_eng;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x670")]
	public Texture heavy_bag_btn_tex_eng;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x678")]
	public Texture speed_bag_btn_tex_eng;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x680")]
	public Texture pads_btn_tex_eng;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x688")]
	public Texture ring_fight_btn_tex_eng;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x690")]
	public Texture settings_btn_tex_eng;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x698")]
	public Texture exit_btn_tex_eng;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A0")]
	public Texture stats_btn_tex_eng;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A8")]
	public Texture fight_btn_tex_eng;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B0")]
	public Texture custom_btn_tex_eng;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B8")]
	public Texture back_btn_tex_eng;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C0")]
	public Texture next_btn_tex_eng;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C8")]
	public Texture yes_btn_tex_eng;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D0")]
	public Texture no_btn_tex_eng;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D8")]
	public Texture your_height_tex_eng;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E0")]
	public Texture level_text_tex_Chn;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E8")]
	public Texture normal_text_tex_Chn;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F0")]
	public Texture custom_text_tex_Chn;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F8")]
	public Texture the_fight_AI_setting_1_menu_Chn;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x700")]
	public Texture the_fight_AI_setting_2_menu_Chn;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x708")]
	public Texture play_area_aut_custom_tex_Chn;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x710")]
	public Texture game_menu_bg_tex_Chn;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x718")]
	public Texture audience_on_off_tex_Chn;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x720")]
	public Texture bg_sound_volume_tex_Chn;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x728")]
	public Texture audeinece_tex_Chn;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x730")]
	public Texture play_area_tex_Chn;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x738")]
	public Texture street_fight_btn_tex_Chn;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x740")]
	public Texture boxing_bar_btn_tex_Chn;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x748")]
	public Texture boxing_dummy_btn_tex_Chn;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x750")]
	public Texture boxing_machine_btn_tex_Chn;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x758")]
	public Texture double_end_bag_btn_tex_Chn;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x760")]
	public Texture heavy_bag_btn_tex_Chn;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x768")]
	public Texture speed_bag_btn_tex_Chn;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x770")]
	public Texture pads_btn_tex_Chn;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x778")]
	public Texture ring_fight_btn_tex_Chn;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x780")]
	public Texture settings_btn_tex_Chn;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x788")]
	public Texture exit_btn_tex_Chn;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x790")]
	public Texture stats_btn_tex_Chn;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x798")]
	public Texture fight_btn_tex_Chn;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A0")]
	public Texture custom_btn_tex_Chn;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A8")]
	public Texture back_btn_tex_Chn;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B0")]
	public Texture next_btn_tex_Chn;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B8")]
	public Texture yes_btn_tex_Chn;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C0")]
	public Texture no_btn_tex_Chn;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C8")]
	public Texture your_height_tex_Chn;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D0")]
	private bool selected;

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xF7BCC4", Offset = "0xF7BCC4", VA = "0xF7BCC4")]
	public void ChangeLanguage(Language lang)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xF7C9D4", Offset = "0xF7C9D4", VA = "0xF7C9D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xF7CA98", Offset = "0xF7CA98", VA = "0xF7CA98")]
	public void UpdateLanguage()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xF7CC00", Offset = "0xF7CC00", VA = "0xF7CC00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xF7CC04", Offset = "0xF7CC04", VA = "0xF7CC04")]
	public LanguageChange()
	{
	}
}
[Token(Token = "0x2000033")]
public class MenuHeightSetting : MonoBehaviour
{
	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh tex;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float enterPosY;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float dist;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform col;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isOn;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 pos;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int moveId;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float addValue;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform camera;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool settingNew;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 forwardPos;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float timerLower;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float timerHigher;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool firstTime;

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x1075568", Offset = "0x1075568", VA = "0x1075568")]
	private void Start()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x10756CC", Offset = "0x10756CC", VA = "0x10756CC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x1075750", Offset = "0x1075750", VA = "0x1075750")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x107575C", Offset = "0x107575C", VA = "0x107575C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x10757F0", Offset = "0x10757F0", VA = "0x10757F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x10757FC", Offset = "0x10757FC", VA = "0x10757FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x1075A64", Offset = "0x1075A64", VA = "0x1075A64")]
	public MenuHeightSetting()
	{
	}
}
[Token(Token = "0x2000034")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x10E1B84", Offset = "0x10E1B84", VA = "0x10E1B84")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x10E1CE8", Offset = "0x10E1CE8", VA = "0x10E1CE8")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x10E2084", Offset = "0x10E2084", VA = "0x10E2084")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x10E2228", Offset = "0x10E2228", VA = "0x10E2228", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x10E2254", Offset = "0x10E2254", VA = "0x10E2254")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000035")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x2057564", Offset = "0x2057564", VA = "0x2057564")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x20575EC", Offset = "0x20575EC", VA = "0x20575EC")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x2057760", Offset = "0x2057760", VA = "0x2057760")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000036")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x1700000C")]
	public bool IsVisible
	{
		[Token(Token = "0x6000166")]
		[Address(RVA = "0x1348EF8", Offset = "0x1348EF8", VA = "0x1348EF8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000167")]
		[Address(RVA = "0x1348F00", Offset = "0x1348F00", VA = "0x1348F00")]
		set
		{
		}
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x134903C", Offset = "0x134903C", VA = "0x134903C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x1349204", Offset = "0x1349204", VA = "0x1349204")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x134920C", Offset = "0x134920C", VA = "0x134920C")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000037")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000038")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6000171")]
		[Address(RVA = "0x1D4FD1C", Offset = "0x1D4FD1C", VA = "0x1D4FD1C")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000039")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x885D8C", Offset = "0x885D8C")]
		public float FakeLatencyMax;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x885DA4", Offset = "0x885DA4")]
		public float FakeLatencyMin;

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x885DBC", Offset = "0x885DBC")]
		public float LatencyWeight;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x885DD4", Offset = "0x885DD4")]
		public int MaxSamples;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6000172")]
		[Address(RVA = "0x1D4FD24", Offset = "0x1D4FD24", VA = "0x1D4FD24")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000173")]
		[Address(RVA = "0x1D4FE5C", Offset = "0x1D4FE5C", VA = "0x1D4FE5C")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x2061DA4", Offset = "0x2061DA4", VA = "0x2061DA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x2061EE8", Offset = "0x2061EE8", VA = "0x2061EE8")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x20622C0", Offset = "0x20622C0", VA = "0x20622C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x2062218", Offset = "0x2062218", VA = "0x2062218")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x20625F0", Offset = "0x20625F0", VA = "0x20625F0")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x20628D8", Offset = "0x20628D8", VA = "0x20628D8")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200003A")]
public class P2PManager
{
	[Token(Token = "0x200003B")]
	private enum MessageType : byte
	{
		[Token(Token = "0x40003A7")]
		Update = 1
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x10E2C68", Offset = "0x10E2C68", VA = "0x10E2C68")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x10E2D48", Offset = "0x10E2D48", VA = "0x10E2D48")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x10E2E2C", Offset = "0x10E2E2C", VA = "0x10E2E2C")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x10E2EAC", Offset = "0x10E2EAC", VA = "0x10E2EAC")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x10E301C", Offset = "0x10E301C", VA = "0x10E301C")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x10E325C", Offset = "0x10E325C", VA = "0x10E325C")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x10E364C", Offset = "0x10E364C", VA = "0x10E364C")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x10E3908", Offset = "0x10E3908", VA = "0x10E3908")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x10E3428", Offset = "0x10E3428", VA = "0x10E3428")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x10E383C", Offset = "0x10E383C", VA = "0x10E383C")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x10E350C", Offset = "0x10E350C", VA = "0x10E350C")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x10E3B40", Offset = "0x10E3B40", VA = "0x10E3B40")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x10E3470", Offset = "0x10E3470", VA = "0x10E3470")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x10E3880", Offset = "0x10E3880", VA = "0x10E3880")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x10E35B0", Offset = "0x10E35B0", VA = "0x10E35B0")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x10E3BC8", Offset = "0x10E3BC8", VA = "0x10E3BC8")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x200003C")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x10E71DC", Offset = "0x10E71DC", VA = "0x10E71DC", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x10E7218", Offset = "0x10E7218", VA = "0x10E7218", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x10E7250", Offset = "0x10E7250", VA = "0x10E7250", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x10E7278", Offset = "0x10E7278", VA = "0x10E7278")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x10E7414", Offset = "0x10E7414", VA = "0x10E7414")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x10E7494", Offset = "0x10E7494", VA = "0x10E7494")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x10E74E8", Offset = "0x10E74E8", VA = "0x10E74E8")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x200003D")]
public class RemotePlayer
{
	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x206297C", Offset = "0x206297C", VA = "0x206297C")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x200003E")]
public class RoomManager
{
	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x206483C", Offset = "0x206483C", VA = "0x206483C")]
	public RoomManager()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x2064940", Offset = "0x2064940", VA = "0x2064940")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x2064AC0", Offset = "0x2064AC0", VA = "0x2064AC0")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x2064BFC", Offset = "0x2064BFC", VA = "0x2064BFC")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x2064CD0", Offset = "0x2064CD0", VA = "0x2064CD0")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x2064E0C", Offset = "0x2064E0C", VA = "0x2064E0C")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x2064AF0", Offset = "0x2064AF0", VA = "0x2064AF0")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x2064E94", Offset = "0x2064E94", VA = "0x2064E94")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x20655EC", Offset = "0x20655EC", VA = "0x20655EC")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x20658EC", Offset = "0x20658EC", VA = "0x20658EC")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x2065174", Offset = "0x2065174", VA = "0x2065174")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x200003F")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000040")]
	public enum State
	{
		[Token(Token = "0x40003DF")]
		INITIALIZING,
		[Token(Token = "0x40003E0")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x40003E1")]
		CREATING_A_ROOM,
		[Token(Token = "0x40003E2")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x40003E3")]
		JOINING_A_ROOM,
		[Token(Token = "0x40003E4")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x40003E5")]
		LEAVING_A_ROOM,
		[Token(Token = "0x40003E6")]
		SHUTDOWN
	}

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x1700000D")]
	public static State CurrentState
	{
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x11C784C", Offset = "0x11C784C", VA = "0x11C784C")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x1700000E")]
	public static ulong MyID
	{
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x11C78BC", Offset = "0x11C78BC", VA = "0x11C78BC")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x1700000F")]
	public static string MyOculusID
	{
		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x11C799C", Offset = "0x11C799C", VA = "0x11C799C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x11C5A6C", Offset = "0x11C5A6C", VA = "0x11C5A6C", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x11C5DFC", Offset = "0x11C5DFC", VA = "0x11C5DFC", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x11C6508", Offset = "0x11C6508", VA = "0x11C6508")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x11C6828", Offset = "0x11C6828", VA = "0x11C6828", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x11C682C", Offset = "0x11C682C", VA = "0x11C682C")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x11C694C", Offset = "0x11C694C", VA = "0x11C694C")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x11C7054", Offset = "0x11C7054", VA = "0x11C7054")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x11C7448", Offset = "0x11C7448", VA = "0x11C7448")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x11C7658", Offset = "0x11C7658", VA = "0x11C7658")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x11C77E0", Offset = "0x11C77E0", VA = "0x11C77E0")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x11C6194", Offset = "0x11C6194", VA = "0x11C6194")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x11C66B0", Offset = "0x11C66B0", VA = "0x11C66B0")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x11C6248", Offset = "0x11C6248", VA = "0x11C6248")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x11C7AC4", Offset = "0x11C7AC4", VA = "0x11C7AC4")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x11C7C40", Offset = "0x11C7C40", VA = "0x11C7C40")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x11C7D24", Offset = "0x11C7D24", VA = "0x11C7D24")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x11C7E80", Offset = "0x11C7E80", VA = "0x11C7E80")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x11C7F64", Offset = "0x11C7F64", VA = "0x11C7F64")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x11C6768", Offset = "0x11C6768", VA = "0x11C6768")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x11C84AC", Offset = "0x11C84AC", VA = "0x11C84AC")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x11C8540", Offset = "0x11C8540", VA = "0x11C8540")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x11C8298", Offset = "0x11C8298", VA = "0x11C8298")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x11C8730", Offset = "0x11C8730", VA = "0x11C8730")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x11C59E8", Offset = "0x11C59E8", VA = "0x11C59E8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x888320", Offset = "0x888320")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x11C8874", Offset = "0x11C8874", VA = "0x11C8874")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x11C8950", Offset = "0x11C8950", VA = "0x11C8950")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000041")]
public class VoipManager
{
	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xB3316C", Offset = "0xB3316C", VA = "0xB3316C")]
	public VoipManager()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xB3324C", Offset = "0xB3324C", VA = "0xB3324C")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xB33330", Offset = "0xB33330", VA = "0xB33330")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xB333B0", Offset = "0xB333B0", VA = "0xB333B0")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xB33520", Offset = "0xB33520", VA = "0xB33520")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000042")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x1348BC4", Offset = "0x1348BC4", VA = "0x1348BC4")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x1348C3C", Offset = "0x1348C3C", VA = "0x1348C3C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x1348DB0", Offset = "0x1348DB0", VA = "0x1348DB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x1348E14", Offset = "0x1348E14", VA = "0x1348E14")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x1348C78", Offset = "0x1348C78", VA = "0x1348C78")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x1348ED8", Offset = "0x1348ED8", VA = "0x1348ED8")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x1348EF0", Offset = "0x1348EF0", VA = "0x1348EF0")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000043")]
public class AvatarLayer
{
	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x101EC90", Offset = "0x101EC90", VA = "0x101EC90")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000044")]
public class PacketRecordSettings
{
	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x10E3C50", Offset = "0x10E3C50", VA = "0x10E3C50")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000045")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000046")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x1D4E31C", Offset = "0x1D4E31C", VA = "0x1D4E31C")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000047")]
	public enum HandType
	{
		[Token(Token = "0x4000448")]
		Right,
		[Token(Token = "0x4000449")]
		Left,
		[Token(Token = "0x400044A")]
		Max
	}

	[Token(Token = "0x2000048")]
	public enum HandJoint
	{
		[Token(Token = "0x400044C")]
		HandBase,
		[Token(Token = "0x400044D")]
		IndexBase,
		[Token(Token = "0x400044E")]
		IndexTip,
		[Token(Token = "0x400044F")]
		ThumbBase,
		[Token(Token = "0x4000450")]
		ThumbTip,
		[Token(Token = "0x4000451")]
		Max
	}

	[Token(Token = "0x2000049")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8846A4", Offset = "0x8846A4")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000010")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001FB")]
			[Address(RVA = "0x1D4E2CC", Offset = "0x1D4E2CC", VA = "0x1D4E2CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000011")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001FD")]
			[Address(RVA = "0x1D4E314", Offset = "0x1D4E314", VA = "0x1D4E314", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001F8")]
		[Address(RVA = "0x1D4E0FC", Offset = "0x1D4E0FC", VA = "0x1D4E0FC")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x60001F9")]
		[Address(RVA = "0x1D4E128", Offset = "0x1D4E128", VA = "0x1D4E128", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001FA")]
		[Address(RVA = "0x1D4E12C", Offset = "0x1D4E12C", VA = "0x1D4E12C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x1D4E2D4", Offset = "0x1D4E2D4", VA = "0x1D4E2D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x885DEC", Offset = "0x885DEC")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x885E24", Offset = "0x885E24")]
	public bool EnableBody;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x885E5C", Offset = "0x885E5C")]
	public bool RecordPackets;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x885E94", Offset = "0x885E94")]
	public bool StartWithControllers;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x885ECC", Offset = "0x885ECC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885ECC", Offset = "0x885ECC")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885F3C", Offset = "0x885F3C")]
	private bool CombineMeshes;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885F74", Offset = "0x885F74")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x885FAC", Offset = "0x885FAC")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x885FE4", Offset = "0x885FE4")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88601C", Offset = "0x88601C")]
	public bool EnableLaughter;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x4000428")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x400042A")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x400042B")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x400042C")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x400042D")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x400042E")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x107E6CC", Offset = "0x107E6CC", VA = "0x107E6CC")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x107EAB8", Offset = "0x107EAB8", VA = "0x107EAB8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x107EB4C", Offset = "0x107EB4C", VA = "0x107EB4C")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x107EBB4", Offset = "0x107EBB4", VA = "0x107EBB4")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x107ECE4", Offset = "0x107ECE4", VA = "0x107ECE4")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x107EDC4", Offset = "0x107EDC4", VA = "0x107EDC4")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x107EEA0", Offset = "0x107EEA0", VA = "0x107EEA0")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x107F084", Offset = "0x107F084", VA = "0x107F084")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x107F160", Offset = "0x107F160", VA = "0x107F160")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x107F1D8", Offset = "0x107F1D8", VA = "0x107F1D8")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x107F2C0", Offset = "0x107F2C0", VA = "0x107F2C0")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x107F34C", Offset = "0x107F34C", VA = "0x107F34C")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x107F3D4", Offset = "0x107F3D4", VA = "0x107F3D4")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x107F3EC", Offset = "0x107F3EC", VA = "0x107F3EC")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x60001D1")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x107F89C", Offset = "0x107F89C", VA = "0x107F89C")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x107FC1C", Offset = "0x107FC1C", VA = "0x107FC1C")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x107FDC4", Offset = "0x107FDC4", VA = "0x107FDC4")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x1080010", Offset = "0x1080010", VA = "0x1080010")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x1080104", Offset = "0x1080104", VA = "0x1080104")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x108050C", Offset = "0x108050C", VA = "0x108050C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x1080838", Offset = "0x1080838", VA = "0x1080838")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x108125C", Offset = "0x108125C", VA = "0x108125C")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x10812B0", Offset = "0x10812B0", VA = "0x10812B0")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x10803C4", Offset = "0x10803C4", VA = "0x10803C4")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x1080468", Offset = "0x1080468", VA = "0x1080468")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x10812E0", Offset = "0x10812E0", VA = "0x10812E0")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x1080C10", Offset = "0x1080C10", VA = "0x1080C10")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x1081554", Offset = "0x1081554", VA = "0x1081554")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x1081344", Offset = "0x1081344", VA = "0x1081344")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x1081804", Offset = "0x1081804", VA = "0x1081804")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x1081C80", Offset = "0x1081C80", VA = "0x1081C80")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x1081F18", Offset = "0x1081F18", VA = "0x1081F18")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x108206C", Offset = "0x108206C", VA = "0x108206C")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x1082250", Offset = "0x1082250", VA = "0x1082250")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x1080DDC", Offset = "0x1080DDC", VA = "0x1080DDC")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x1082324", Offset = "0x1082324", VA = "0x1082324")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x1080C20", Offset = "0x1080C20", VA = "0x1080C20")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x1082414", Offset = "0x1082414", VA = "0x1082414")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x1082A6C", Offset = "0x1082A6C", VA = "0x1082A6C")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x1082F50", Offset = "0x1082F50", VA = "0x1082F50")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x1082F78", Offset = "0x1082F78", VA = "0x1082F78")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x1082FA0", Offset = "0x1082FA0", VA = "0x1082FA0")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x10810E8", Offset = "0x10810E8", VA = "0x10810E8")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x10824D8", Offset = "0x10824D8", VA = "0x10824D8")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x10833C0", Offset = "0x10833C0", VA = "0x10833C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x888380", Offset = "0x888380")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x108342C", Offset = "0x108342C", VA = "0x108342C")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x1083280", Offset = "0x1083280", VA = "0x1083280")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x10834F0", Offset = "0x10834F0", VA = "0x10834F0")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x10835D8", Offset = "0x10835D8", VA = "0x10835D8")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x1082FDC", Offset = "0x1082FDC", VA = "0x1082FDC")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x10836C0", Offset = "0x10836C0", VA = "0x10836C0")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x200004A")]
public class OvrAvatarAsset
{
	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x10D5270", Offset = "0x10D5270", VA = "0x10D5270")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x200004B")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x10D5334", Offset = "0x10D5334", VA = "0x10D5334")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x10D65B8", Offset = "0x10D65B8", VA = "0x10D65B8")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x10D618C", Offset = "0x10D618C", VA = "0x10D618C")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x10D5F1C", Offset = "0x10D5F1C", VA = "0x10D5F1C")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x10D5FF8", Offset = "0x10D5FF8", VA = "0x10D5FF8")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x10D6848", Offset = "0x10D6848", VA = "0x10D6848")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x200004C")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x400045A")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x10D6DD0", Offset = "0x10D6DD0", VA = "0x10D6DD0")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x200004D")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x10D703C", Offset = "0x10D703C", VA = "0x10D703C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x10D7488", Offset = "0x10D7488", VA = "0x10D7488")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200004E")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x10D75A0", Offset = "0x10D75A0", VA = "0x10D75A0")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x10D7710", Offset = "0x10D7710", VA = "0x10D7710")]
	private void Update()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x10D7834", Offset = "0x10D7834", VA = "0x10D7834")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x200004F")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x10D7894", Offset = "0x10D7894", VA = "0x10D7894")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x10D7160", Offset = "0x10D7160", VA = "0x10D7160")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x10D7EE4", Offset = "0x10D7EE4", VA = "0x10D7EE4")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x10D7F44", Offset = "0x10D7F44", VA = "0x10D7F44")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x10D86F8", Offset = "0x10D86F8", VA = "0x10D86F8")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x10D74E8", Offset = "0x10D74E8", VA = "0x10D74E8")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000050")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000051")]
	public enum PacketMode
	{
		[Token(Token = "0x400046E")]
		SDK,
		[Token(Token = "0x400046F")]
		Unity
	}

	[Token(Token = "0x2000052")]
	public struct ControllerPose
	{
		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6000218")]
		[Address(RVA = "0x1D4E394", Offset = "0x1D4E394", VA = "0x1D4E394")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000053")]
	public struct PoseFrame
	{
		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6000219")]
		[Address(RVA = "0x1D4E470", Offset = "0x1D4E470", VA = "0x1D4E470")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x10D9DA4", Offset = "0x10D9DA4", VA = "0x10D9DA4")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000213")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x10D9DB4", Offset = "0x10D9DB4", VA = "0x10D9DB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x10D9E3C", Offset = "0x10D9E3C", VA = "0x10D9E3C")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x10DA0B8", Offset = "0x10DA0B8", VA = "0x10DA0B8")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x10DA0C0", Offset = "0x10DA0C0", VA = "0x10DA0C0")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000054")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x10DA0D0", Offset = "0x10DA0D0", VA = "0x10DA0D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x10DA234", Offset = "0x10DA234", VA = "0x10DA234")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000055")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x10DA29C", Offset = "0x10DA29C", VA = "0x10DA29C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x10DA400", Offset = "0x10DA400", VA = "0x10DA400")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x10DA79C", Offset = "0x10DA79C", VA = "0x10DA79C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x10DA9C0", Offset = "0x10DA9C0", VA = "0x10DA9C0", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x10DA9EC", Offset = "0x10DA9EC", VA = "0x10DA9EC")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000056")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000057")]
	public enum TextureType
	{
		[Token(Token = "0x40004A5")]
		DiffuseTextures,
		[Token(Token = "0x40004A6")]
		NormalMaps,
		[Token(Token = "0x40004A7")]
		RoughnessMaps,
		[Token(Token = "0x40004A8")]
		Count
	}

	[Token(Token = "0x2000058")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x2000059")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x200005A")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x200005B")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6000230")]
		[Address(RVA = "0x1D4EE6C", Offset = "0x1D4EE6C", VA = "0x1D4EE6C")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x200005C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8846B4", Offset = "0x8846B4")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000012")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000234")]
			[Address(RVA = "0x1D4EE1C", Offset = "0x1D4EE1C", VA = "0x1D4EE1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000013")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000236")]
			[Address(RVA = "0x1D4EE64", Offset = "0x1D4EE64", VA = "0x1D4EE64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000231")]
		[Address(RVA = "0x1D4E774", Offset = "0x1D4E774", VA = "0x1D4E774")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000232")]
		[Address(RVA = "0x1D4E7A0", Offset = "0x1D4E7A0", VA = "0x1D4E7A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000233")]
		[Address(RVA = "0x1D4E7A4", Offset = "0x1D4E7A4", VA = "0x1D4E7A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000235")]
		[Address(RVA = "0x1D4EE24", Offset = "0x1D4EE24", VA = "0x1D4EE24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x40004A0")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x40004A1")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x40004A2")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x40004A3")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x10DAA38", Offset = "0x10DAA38", VA = "0x10DAA38")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x10DABC4", Offset = "0x10DABC4", VA = "0x10DABC4")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x10DABEC", Offset = "0x10DABEC", VA = "0x10DABEC")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x10DB348", Offset = "0x10DB348", VA = "0x10DB348")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x10DB630", Offset = "0x10DB630", VA = "0x10DB630")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x10DAC88", Offset = "0x10DAC88", VA = "0x10DAC88")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x10DB71C", Offset = "0x10DB71C", VA = "0x10DB71C")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x10DB0C0", Offset = "0x10DB0C0", VA = "0x10DB0C0")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x10DB9AC", Offset = "0x10DB9AC", VA = "0x10DB9AC")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x10DBC50", Offset = "0x10DBC50", VA = "0x10DBC50")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x10DBD78", Offset = "0x10DBD78", VA = "0x10DBD78")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x10DBDB0", Offset = "0x10DBDB0", VA = "0x10DBDB0")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x10DB2D0", Offset = "0x10DB2D0", VA = "0x10DB2D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x888430", Offset = "0x888430")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x10DCC28", Offset = "0x10DCC28", VA = "0x10DCC28")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x200005D")]
public class OvrAvatarPacket
{
	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000014")]
	public float Duration
	{
		[Token(Token = "0x6000237")]
		[Address(RVA = "0x10DD16C", Offset = "0x10DD16C", VA = "0x10DD16C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000015")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000238")]
		[Address(RVA = "0x10DD1E0", Offset = "0x10DD1E0", VA = "0x10DD1E0")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x10DD270", Offset = "0x10DD270", VA = "0x10DD270")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x10DD378", Offset = "0x10DD378", VA = "0x10DD378")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x10DD514", Offset = "0x10DD514", VA = "0x10DD514")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x10DD634", Offset = "0x10DD634", VA = "0x10DD634")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x10DD70C", Offset = "0x10DD70C", VA = "0x10DD70C")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x10DD93C", Offset = "0x10DD93C", VA = "0x10DD93C")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x10DDC18", Offset = "0x10DDC18", VA = "0x10DDC18")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x200005E")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000240")]
	[Address(RVA = "0x101F388", Offset = "0x101F388", VA = "0x101F388")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x101F49C", Offset = "0x101F49C", VA = "0x101F49C")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x101F648", Offset = "0x101F648", VA = "0x101F648")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x101F50C", Offset = "0x101F50C", VA = "0x101F50C")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x101F5A0", Offset = "0x101F5A0", VA = "0x101F5A0")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x200005F")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000245")]
	[Address(RVA = "0x101EF88", Offset = "0x101EF88", VA = "0x101EF88")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x101F32C", Offset = "0x101F32C", VA = "0x101F32C")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x101F128", Offset = "0x101F128", VA = "0x101F128")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x101F1A0", Offset = "0x101F1A0", VA = "0x101F1A0")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x101F23C", Offset = "0x101F23C", VA = "0x101F23C")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000060")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x40004CA")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x40004CB")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x10DDE40", Offset = "0x10DDE40", VA = "0x10DDE40")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x10DDEC8", Offset = "0x10DDEC8", VA = "0x10DDEC8", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x10DDEE4", Offset = "0x10DDEE4", VA = "0x10DDEE4")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x10DE088", Offset = "0x10DE088", VA = "0x10DE088")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x10DE238", Offset = "0x10DE238", VA = "0x10DE238")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000061")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x10DE2CC", Offset = "0x10DE2CC", VA = "0x10DE2CC")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x10DE3B0", Offset = "0x10DE3B0", VA = "0x10DE3B0")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x10DE5A4", Offset = "0x10DE5A4", VA = "0x10DE5A4")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x10DE964", Offset = "0x10DE964", VA = "0x10DE964")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x10DEA70", Offset = "0x10DEA70", VA = "0x10DEA70")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000062")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x40004D4")]
	Body = 1,
	[Token(Token = "0x40004D5")]
	Hands = 2,
	[Token(Token = "0x40004D6")]
	Base = 4,
	[Token(Token = "0x40004D7")]
	BodyTilt = 0x10,
	[Token(Token = "0x40004D8")]
	Expressive = 0x20,
	[Token(Token = "0x40004D9")]
	All = -1
}
[Token(Token = "0x2000063")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x40004DB")]
	AvatarSpecification,
	[Token(Token = "0x40004DC")]
	AssetLoaded,
	[Token(Token = "0x40004DD")]
	Count
}
[Token(Token = "0x2000064")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000065")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000066")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x40004E3")]
	Mesh,
	[Token(Token = "0x40004E4")]
	Texture,
	[Token(Token = "0x40004E5")]
	Pose,
	[Token(Token = "0x40004E6")]
	Material,
	[Token(Token = "0x40004E7")]
	CombinedMesh,
	[Token(Token = "0x40004E8")]
	PBSMaterial,
	[Token(Token = "0x40004E9")]
	FailedLoad,
	[Token(Token = "0x40004EA")]
	Count
}
[Token(Token = "0x2000067")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000068")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000069")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x200006A")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200006B")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200006C")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x400051F")]
	RGB24,
	[Token(Token = "0x4000520")]
	DXT1,
	[Token(Token = "0x4000521")]
	DXT5,
	[Token(Token = "0x4000522")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000523")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000524")]
	Count
}
[Token(Token = "0x200006D")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x200006E")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x400052C")]
	SkinnedMeshRender,
	[Token(Token = "0x400052D")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x400052E")]
	ProjectorRender,
	[Token(Token = "0x400052F")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000530")]
	Count
}
[Token(Token = "0x200006F")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000532")]
	Unknown,
	[Token(Token = "0x4000533")]
	Default,
	[Token(Token = "0x4000534")]
	Verbose,
	[Token(Token = "0x4000535")]
	Debug,
	[Token(Token = "0x4000536")]
	Info,
	[Token(Token = "0x4000537")]
	Warn,
	[Token(Token = "0x4000538")]
	Error,
	[Token(Token = "0x4000539")]
	Fatal,
	[Token(Token = "0x400053A")]
	Silent
}
[Token(Token = "0x2000070")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000071")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x400053F")]
	One = 1,
	[Token(Token = "0x4000540")]
	Two = 2,
	[Token(Token = "0x4000541")]
	Three = 4,
	[Token(Token = "0x4000542")]
	Joystick = 8
}
[Token(Token = "0x2000072")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000544")]
	One = 1,
	[Token(Token = "0x4000545")]
	Two = 2,
	[Token(Token = "0x4000546")]
	Joystick = 4,
	[Token(Token = "0x4000547")]
	ThumbRest = 8,
	[Token(Token = "0x4000548")]
	Index = 0x10,
	[Token(Token = "0x4000549")]
	Pointing = 0x40,
	[Token(Token = "0x400054A")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000073")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000074")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x2000075")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000076")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000077")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000078")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x2000079")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200007A")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200007B")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x400056A")]
	Add,
	[Token(Token = "0x400056B")]
	Multiply,
	[Token(Token = "0x400056C")]
	Count
}
[Token(Token = "0x200007C")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x400056E")]
	Color,
	[Token(Token = "0x400056F")]
	Texture,
	[Token(Token = "0x4000570")]
	TextureSingleChannel,
	[Token(Token = "0x4000571")]
	Parallax,
	[Token(Token = "0x4000572")]
	Count
}
[Token(Token = "0x200007D")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000574")]
	None,
	[Token(Token = "0x4000575")]
	Positional,
	[Token(Token = "0x4000576")]
	ViewReflection,
	[Token(Token = "0x4000577")]
	Fresnel,
	[Token(Token = "0x4000578")]
	Pulse,
	[Token(Token = "0x4000579")]
	Count
}
[Token(Token = "0x200007E")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x400057B")]
	Touch,
	[Token(Token = "0x400057C")]
	Malibu,
	[Token(Token = "0x400057D")]
	Go,
	[Token(Token = "0x400057E")]
	Quest,
	[Token(Token = "0x400057F")]
	Count
}
[Token(Token = "0x200007F")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000581")]
	Lowest = 1,
	[Token(Token = "0x4000582")]
	Medium = 3,
	[Token(Token = "0x4000583")]
	Highest = 5
}
[Token(Token = "0x2000080")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000585")]
	Unknown = -1,
	[Token(Token = "0x4000586")]
	One,
	[Token(Token = "0x4000587")]
	Two
}
[Token(Token = "0x2000081")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xB358E0", Offset = "0xB358E0", VA = "0xB358E0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xB35910", Offset = "0xB35910", VA = "0xB35910", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xB35B2C", Offset = "0xB35B2C", VA = "0xB35B2C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000082")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xB35C10", Offset = "0xB35C10", VA = "0xB35C10")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xB35C40", Offset = "0xB35C40", VA = "0xB35C40", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xB35FDC", Offset = "0xB35FDC", VA = "0xB35FDC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000083")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xB34E70", Offset = "0xB34E70", VA = "0xB34E70")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xB34EA0", Offset = "0xB34EA0", VA = "0xB34EA0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xB35130", Offset = "0xB35130", VA = "0xB35130", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000084")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xB36144", Offset = "0xB36144", VA = "0xB36144")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xB36174", Offset = "0xB36174", VA = "0xB36174", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xB36364", Offset = "0xB36364", VA = "0xB36364", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000085")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x10D5278", Offset = "0x10D5278", VA = "0x10D5278")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000086")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000087")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x40005BC")]
	FirstPerson = 1,
	[Token(Token = "0x40005BD")]
	ThirdPerson = 2,
	[Token(Token = "0x40005BE")]
	SelfOccluding = 4
}
[Token(Token = "0x2000088")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000089")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200008A")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x200008B")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200008C")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x40005D4")]
	Default,
	[Token(Token = "0x40005D5")]
	GripSphere,
	[Token(Token = "0x40005D6")]
	GripCube,
	[Token(Token = "0x40005D7")]
	Count
}
[Token(Token = "0x200008D")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x40005D9")]
	Body,
	[Token(Token = "0x40005DA")]
	Clothing,
	[Token(Token = "0x40005DB")]
	Eyewear,
	[Token(Token = "0x40005DC")]
	Hair,
	[Token(Token = "0x40005DD")]
	Beard,
	[Token(Token = "0x40005DE")]
	Count
}
[Token(Token = "0x200008E")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x200008F")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000090")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x2000091")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000092")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x40005E8")]
	AvatarHead,
	[Token(Token = "0x40005E9")]
	AvatarHand,
	[Token(Token = "0x40005EA")]
	Object,
	[Token(Token = "0x40005EB")]
	ObjectStatic,
	[Token(Token = "0x40005EC")]
	Count
}
[Token(Token = "0x2000093")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x2000094")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x2000095")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000096")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x2000097")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x40005F8")]
	Point,
	[Token(Token = "0x40005F9")]
	Direction,
	[Token(Token = "0x40005FA")]
	Spot,
	[Token(Token = "0x40005FB")]
	Count
}
[Token(Token = "0x2000098")]
public struct ovrAvatarLight
{
	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000099")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x200009A")]
public struct ovrAvatarLights
{
	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x200009B")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x200009C")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000611")]
	None = 0u,
	[Token(Token = "0x4000612")]
	GazeTarget = 1u,
	[Token(Token = "0x4000613")]
	Any = uint.MaxValue
}
[Token(Token = "0x200009D")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x200009E")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x200009F")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x20000A0")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x20000A1")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x20000A2")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x20000A3")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6000286")]
		[Address(RVA = "0x1D4EE74", Offset = "0x1D4EE74", VA = "0x1D4EE74")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000628")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000016")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000275")]
		[Address(RVA = "0x10D8788", Offset = "0x10D8788", VA = "0x10D8788")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x10DEA80", Offset = "0x10DEA80", VA = "0x10DEA80")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x10DED88", Offset = "0x10DED88", VA = "0x10DED88")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x10DEDF8", Offset = "0x10DEDF8", VA = "0x10DEDF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x10DF7C8", Offset = "0x10DF7C8", VA = "0x10DF7C8")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x10DF81C", Offset = "0x10DF81C", VA = "0x10DF81C")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x10DF870", Offset = "0x10DF870", VA = "0x10DF870")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x10DF8D4", Offset = "0x10DF8D4", VA = "0x10DF8D4")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x10DF938", Offset = "0x10DF938", VA = "0x10DF938")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x10DF5C8", Offset = "0x10DF5C8", VA = "0x10DF5C8")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x10DFA14", Offset = "0x10DFA14", VA = "0x10DFA14")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x10DFB68", Offset = "0x10DFB68", VA = "0x10DFB68")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x10D895C", Offset = "0x10D895C", VA = "0x10D895C")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x10DFC5C", Offset = "0x10DFC5C", VA = "0x10DFC5C")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x10DED3C", Offset = "0x10DED3C", VA = "0x10DED3C")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x10DB3A8", Offset = "0x10DB3A8", VA = "0x10DB3A8")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x10DFD3C", Offset = "0x10DFD3C", VA = "0x10DFD3C")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x20000A4")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000017")]
	public static string AppID
	{
		[Token(Token = "0x6000287")]
		[Address(RVA = "0x10DFCFC", Offset = "0x10DFCFC", VA = "0x10DFCFC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000288")]
		[Address(RVA = "0x10DFE94", Offset = "0x10DFE94", VA = "0x10DFE94")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000289")]
		[Address(RVA = "0x10DFD1C", Offset = "0x10DFD1C", VA = "0x10DFD1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600028A")]
		[Address(RVA = "0x10DFEC0", Offset = "0x10DFEC0", VA = "0x10DFEC0")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x600028B")]
		[Address(RVA = "0x10DFD54", Offset = "0x10DFD54", VA = "0x10DFD54")]
		get
		{
			return null;
		}
		[Token(Token = "0x600028C")]
		[Address(RVA = "0x10DFEEC", Offset = "0x10DFEEC", VA = "0x10DFEEC")]
		set
		{
		}
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x10DFF3C", Offset = "0x10DFF3C", VA = "0x10DFF3C")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x20000A5")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x10E1760", Offset = "0x10E1760", VA = "0x10E1760")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x10D789C", Offset = "0x10D789C", VA = "0x10D789C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x10E18B8", Offset = "0x10E18B8", VA = "0x10E18B8")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x10E1A20", Offset = "0x10E1A20", VA = "0x10E1A20")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x20000A6")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x10E1A30", Offset = "0x10E1A30", VA = "0x10E1A30")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x10D7AD8", Offset = "0x10D7AD8", VA = "0x10D7AD8")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x10E1B74", Offset = "0x10E1B74", VA = "0x10E1B74")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x20000A7")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x400063F")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000640")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000641")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x10DFF90", Offset = "0x10DFF90", VA = "0x10DFF90")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x10D7CA8", Offset = "0x10D7CA8", VA = "0x10D7CA8")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x10E0EE4", Offset = "0x10E0EE4", VA = "0x10E0EE4")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x10E0658", Offset = "0x10E0658", VA = "0x10E0658")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x10E037C", Offset = "0x10E037C", VA = "0x10E037C")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x10E04E0", Offset = "0x10E04E0", VA = "0x10E04E0")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x10E1750", Offset = "0x10E1750", VA = "0x10E1750")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x20000A8")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000A9")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x20000AA")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x60002A6")]
		[Address(RVA = "0x1D4F508", Offset = "0x1D4F508", VA = "0x1D4F508")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x20000AB")]
	public struct TextureSet
	{
		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x60002A7")]
		[Address(RVA = "0x1D4F518", Offset = "0x1D4F518", VA = "0x1D4F518")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x20000AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884734", Offset = "0x884734")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x1700001A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002AB")]
			[Address(RVA = "0x1D4F4B8", Offset = "0x1D4F4B8", VA = "0x1D4F4B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002AD")]
			[Address(RVA = "0x1D4F500", Offset = "0x1D4F500", VA = "0x1D4F500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002A8")]
		[Address(RVA = "0x1D4EEA0", Offset = "0x1D4EEA0", VA = "0x1D4EEA0")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60002A9")]
		[Address(RVA = "0x1D4EECC", Offset = "0x1D4EECC", VA = "0x1D4EECC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002AA")]
		[Address(RVA = "0x1D4EED0", Offset = "0x1D4EED0", VA = "0x1D4EED0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002AC")]
		[Address(RVA = "0x1D4F4C0", Offset = "0x1D4F4C0", VA = "0x1D4F4C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000645")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000646")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000649")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x400064A")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x400064B")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x400064C")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x400064D")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x400064E")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x400064F")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x10E22A0", Offset = "0x10E22A0", VA = "0x10E22A0")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x10E2688", Offset = "0x10E2688", VA = "0x10E2688")]
	public void Update()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x10E2888", Offset = "0x10E2888", VA = "0x10E2888")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x10DB800", Offset = "0x10DB800", VA = "0x10DB800")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x10E27FC", Offset = "0x10E27FC", VA = "0x10E27FC")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x10DB428", Offset = "0x10DB428", VA = "0x10DB428")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x10DB678", Offset = "0x10DB678", VA = "0x10DB678")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x10E28D4", Offset = "0x10E28D4", VA = "0x10E28D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x888580", Offset = "0x888580")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x10DF9C8", Offset = "0x10DF9C8", VA = "0x10DF9C8")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x10E2964", Offset = "0x10E2964", VA = "0x10E2964")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x20000AD")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x10E2A9C", Offset = "0x10E2A9C", VA = "0x10E2A9C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x10E2C00", Offset = "0x10E2C00", VA = "0x10E2C00")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x20000AE")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x20000AF")]
	public delegate void OnClick();

	[Token(Token = "0x20000B0")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x20000B1")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20000B2")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20000B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884744", Offset = "0x884744")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0xB39440", Offset = "0xB39440", VA = "0xB39440")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xB39448", Offset = "0xB39448", VA = "0xB39448")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20000B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884754", Offset = "0x884754")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x60002D1")]
		[Address(RVA = "0xB3966C", Offset = "0xB3966C", VA = "0xB3966C")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x60002D2")]
		[Address(RVA = "0xB39674", Offset = "0xB39674", VA = "0xB39674")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20000B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884764", Offset = "0x884764")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0xB398C0", Offset = "0xB398C0", VA = "0xB398C0")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x60002D4")]
		[Address(RVA = "0xB398C8", Offset = "0xB398C8", VA = "0xB398C8")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20000B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884774", Offset = "0x884774")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0xB39C60", Offset = "0xB39C60", VA = "0xB39C60")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0xB39C68", Offset = "0xB39C68", VA = "0xB39C68")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20000B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884784", Offset = "0x884784")]
	private sealed class <>c__DisplayClass44_0
	{
		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x60002D7")]
		[Address(RVA = "0xB39C88", Offset = "0xB39C88", VA = "0xB39C88")]
		public <>c__DisplayClass44_0()
		{
		}

		[Token(Token = "0x60002D8")]
		[Address(RVA = "0xB39C90", Offset = "0xB39C90", VA = "0xB39C90")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000661")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000662")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000663")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000672")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000673")]
	public const float marginH = 16f;

	[Token(Token = "0x4000674")]
	public const float marginV = 16f;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LaserPointer lp;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private LineRenderer lr;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool isHorizontal;

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xD146DC", Offset = "0xD146DC", VA = "0xD146DC")]
	public void Awake()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xD14B90", Offset = "0xD14B90", VA = "0xD14B90")]
	public void Show()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xD15178", Offset = "0xD15178", VA = "0xD15178")]
	public void Hide()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xD14F34", Offset = "0xD14F34", VA = "0xD14F34")]
	private void Relayout()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xD15334", Offset = "0xD15334", VA = "0xD15334")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xD1560C", Offset = "0xD1560C", VA = "0xD1560C")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xD159C4", Offset = "0xD159C4", VA = "0xD159C4")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xD15AC8", Offset = "0xD15AC8", VA = "0xD15AC8")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xD15CA0", Offset = "0xD15CA0", VA = "0xD15CA0")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xD15D44", Offset = "0xD15D44", VA = "0xD15D44")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xD15F14", Offset = "0xD15F14", VA = "0xD15F14")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xD160FC", Offset = "0xD160FC", VA = "0xD160FC")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xD163E4", Offset = "0xD163E4", VA = "0xD163E4")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xD164E0", Offset = "0xD164E0", VA = "0xD164E0")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xD1658C", Offset = "0xD1658C", VA = "0xD1658C")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x20000B8")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x134F768", Offset = "0x134F768", VA = "0x134F768")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x134F804", Offset = "0x134F804", VA = "0x134F804")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x134F8C4", Offset = "0x134F8C4", VA = "0x134F8C4")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x134F900", Offset = "0x134F900", VA = "0x134F900")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x20000B9")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20000BA")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000692")]
		On,
		[Token(Token = "0x4000693")]
		Off,
		[Token(Token = "0x4000694")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x1700001C")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60002DE")]
		[Address(RVA = "0xF83C0C", Offset = "0xF83C0C", VA = "0xF83C0C")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60002DD")]
		[Address(RVA = "0xF83BC8", Offset = "0xF83BC8", VA = "0xF83BC8")]
		set
		{
		}
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xF83C14", Offset = "0xF83C14", VA = "0xF83C14")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xF83C68", Offset = "0xF83C68", VA = "0xF83C68")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xF83DAC", Offset = "0xF83DAC", VA = "0xF83DAC", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xF83DC8", Offset = "0xF83DC8", VA = "0xF83DC8", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xF83E1C", Offset = "0xF83E1C", VA = "0xF83E1C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xF83FD8", Offset = "0xF83FD8", VA = "0xF83FD8")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xF840EC", Offset = "0xF840EC", VA = "0xF840EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xF8417C", Offset = "0xF8417C", VA = "0xF8417C")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xF84248", Offset = "0xF84248", VA = "0xF84248")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xF842FC", Offset = "0xF842FC", VA = "0xF842FC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xF843E8", Offset = "0xF843E8", VA = "0xF843E8")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20000BB")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000695")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000696")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000697")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886134", Offset = "0x886134")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88616C", Offset = "0x88616C")]
	public LayerMask CollideLayers;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8861A4", Offset = "0x8861A4")]
	public float HeightOffset;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8861DC", Offset = "0x8861DC")]
	public float MinimumHeight;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886214", Offset = "0x886214")]
	public float MaximumHeight;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x135E1FC", Offset = "0x135E1FC", VA = "0x135E1FC")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x135E204", Offset = "0x135E204", VA = "0x135E204")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x135E27C", Offset = "0x135E27C", VA = "0x135E27C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x135E310", Offset = "0x135E310", VA = "0x135E310")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x135E3A4", Offset = "0x135E3A4", VA = "0x135E3A4")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x135E6D0", Offset = "0x135E6D0", VA = "0x135E6D0")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x135E900", Offset = "0x135E900", VA = "0x135E900")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000BC")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x106F900", Offset = "0x106F900", VA = "0x106F900")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x106F9B4", Offset = "0x106F9B4", VA = "0x106F9B4")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x20000BD")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20000BE")]
	public enum States
	{
		[Token(Token = "0x40006C5")]
		Ready,
		[Token(Token = "0x40006C6")]
		Aim,
		[Token(Token = "0x40006C7")]
		CancelAim,
		[Token(Token = "0x40006C8")]
		PreTeleport,
		[Token(Token = "0x40006C9")]
		CancelTeleport,
		[Token(Token = "0x40006CA")]
		Teleporting,
		[Token(Token = "0x40006CB")]
		PostTeleport
	}

	[Token(Token = "0x20000BF")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40006CD")]
		None,
		[Token(Token = "0x40006CE")]
		Aim,
		[Token(Token = "0x40006CF")]
		PreTeleport,
		[Token(Token = "0x40006D0")]
		Teleport
	}

	[Token(Token = "0x20000C0")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40006D2")]
		Point,
		[Token(Token = "0x40006D3")]
		Sphere,
		[Token(Token = "0x40006D4")]
		Capsule
	}

	[Token(Token = "0x20000C1")]
	public class AimData
	{
		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88662C", Offset = "0x88662C")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000020")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000328")]
			[Address(RVA = "0xB3F9CC", Offset = "0xB3F9CC", VA = "0xB3F9CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888AA8", Offset = "0x888AA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000329")]
			[Address(RVA = "0xB3F9D4", Offset = "0xB3F9D4", VA = "0xB3F9D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888AB8", Offset = "0x888AB8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000327")]
		[Address(RVA = "0xB3F950", Offset = "0xB3F950", VA = "0xB3F950")]
		public AimData()
		{
		}

		[Token(Token = "0x600032A")]
		[Address(RVA = "0xB3F9DC", Offset = "0xB3F9DC", VA = "0xB3F9DC")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20000C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884794", Offset = "0x884794")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600032E")]
			[Address(RVA = "0xB3F7A8", Offset = "0xB3F7A8", VA = "0xB3F7A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000330")]
			[Address(RVA = "0xB3F7F0", Offset = "0xB3F7F0", VA = "0xB3F7F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600032B")]
		[Address(RVA = "0xB3F68C", Offset = "0xB3F68C", VA = "0xB3F68C")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600032C")]
		[Address(RVA = "0xB3F6B8", Offset = "0xB3F6B8", VA = "0xB3F6B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600032D")]
		[Address(RVA = "0xB3F6BC", Offset = "0xB3F6BC", VA = "0xB3F6BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600032F")]
		[Address(RVA = "0xB3F7B0", Offset = "0xB3F7B0", VA = "0xB3F7B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8847A4", Offset = "0x8847A4")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000023")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000334")]
			[Address(RVA = "0xB3F134", Offset = "0xB3F134", VA = "0xB3F134", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000336")]
			[Address(RVA = "0xB3F17C", Offset = "0xB3F17C", VA = "0xB3F17C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000331")]
		[Address(RVA = "0xB3EFC4", Offset = "0xB3EFC4", VA = "0xB3EFC4")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000332")]
		[Address(RVA = "0xB3EFF0", Offset = "0xB3EFF0", VA = "0xB3EFF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000333")]
		[Address(RVA = "0xB3EFF4", Offset = "0xB3EFF4", VA = "0xB3EFF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000335")]
		[Address(RVA = "0xB3F13C", Offset = "0xB3F13C", VA = "0xB3F13C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8847B4", Offset = "0x8847B4")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000025")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600033A")]
			[Address(RVA = "0xB3F254", Offset = "0xB3F254", VA = "0xB3F254", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600033C")]
			[Address(RVA = "0xB3F29C", Offset = "0xB3F29C", VA = "0xB3F29C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000337")]
		[Address(RVA = "0xB3F184", Offset = "0xB3F184", VA = "0xB3F184")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000338")]
		[Address(RVA = "0xB3F1B0", Offset = "0xB3F1B0", VA = "0xB3F1B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000339")]
		[Address(RVA = "0xB3F1B4", Offset = "0xB3F1B4", VA = "0xB3F1B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600033B")]
		[Address(RVA = "0xB3F25C", Offset = "0xB3F25C", VA = "0xB3F25C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8847C4", Offset = "0x8847C4")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000027")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000340")]
			[Address(RVA = "0xB3F63C", Offset = "0xB3F63C", VA = "0xB3F63C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000028")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000342")]
			[Address(RVA = "0xB3F684", Offset = "0xB3F684", VA = "0xB3F684", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600033D")]
		[Address(RVA = "0xB3F52C", Offset = "0xB3F52C", VA = "0xB3F52C")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x600033E")]
		[Address(RVA = "0xB3F558", Offset = "0xB3F558", VA = "0xB3F558", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600033F")]
		[Address(RVA = "0xB3F55C", Offset = "0xB3F55C", VA = "0xB3F55C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0xB3F644", Offset = "0xB3F644", VA = "0xB3F644", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8847D4", Offset = "0x8847D4")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000029")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000346")]
			[Address(RVA = "0xB3F374", Offset = "0xB3F374", VA = "0xB3F374", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000348")]
			[Address(RVA = "0xB3F3BC", Offset = "0xB3F3BC", VA = "0xB3F3BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0xB3F2A4", Offset = "0xB3F2A4", VA = "0xB3F2A4")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000344")]
		[Address(RVA = "0xB3F2D0", Offset = "0xB3F2D0", VA = "0xB3F2D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0xB3F2D4", Offset = "0xB3F2D4", VA = "0xB3F2D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000347")]
		[Address(RVA = "0xB3F37C", Offset = "0xB3F37C", VA = "0xB3F37C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8847E4", Offset = "0x8847E4")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700002B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600034C")]
			[Address(RVA = "0xB3F900", Offset = "0xB3F900", VA = "0xB3F900", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600034E")]
			[Address(RVA = "0xB3F948", Offset = "0xB3F948", VA = "0xB3F948", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000349")]
		[Address(RVA = "0xB3F7F8", Offset = "0xB3F7F8", VA = "0xB3F7F8")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x600034A")]
		[Address(RVA = "0xB3F824", Offset = "0xB3F824", VA = "0xB3F824", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600034B")]
		[Address(RVA = "0xB3F828", Offset = "0xB3F828", VA = "0xB3F828", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600034D")]
		[Address(RVA = "0xB3F908", Offset = "0xB3F908", VA = "0xB3F908", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8847F4", Offset = "0x8847F4")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000352")]
			[Address(RVA = "0xB3F4DC", Offset = "0xB3F4DC", VA = "0xB3F4DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000354")]
			[Address(RVA = "0xB3F524", Offset = "0xB3F524", VA = "0xB3F524", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600034F")]
		[Address(RVA = "0xB3F3C4", Offset = "0xB3F3C4", VA = "0xB3F3C4")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000350")]
		[Address(RVA = "0xB3F3F0", Offset = "0xB3F3F0", VA = "0xB3F3F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0xB3F3F4", Offset = "0xB3F3F4", VA = "0xB3F3F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000353")]
		[Address(RVA = "0xB3F4E4", Offset = "0xB3F4E4", VA = "0xB3F4E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88624C", Offset = "0x88624C")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886284", Offset = "0x886284")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8862BC", Offset = "0x8862BC")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8862F4", Offset = "0x8862F4")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88632C", Offset = "0x88632C")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886364", Offset = "0x886364")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88639C", Offset = "0x88639C")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8863D4", Offset = "0x8863D4")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88640C", Offset = "0x88640C")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88641C", Offset = "0x88641C")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886454", Offset = "0x886454")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88649C", Offset = "0x88649C")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8864AC", Offset = "0x8864AC")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8864E4", Offset = "0x8864E4")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88651C", Offset = "0x88651C")]
	public float AimCollisionRadius;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886554", Offset = "0x886554")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700001D")]
	public States CurrentState
	{
		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x10704A4", Offset = "0x10704A4", VA = "0x10704A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888630", Offset = "0x888630")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0x10704AC", Offset = "0x10704AC", VA = "0x10704AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888640", Offset = "0x888640")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x10706D0", Offset = "0x10706D0", VA = "0x10706D0")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700001F")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x10706F8", Offset = "0x10706F8", VA = "0x10706F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888670", Offset = "0x888670")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x1070700", Offset = "0x1070700", VA = "0x1070700")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888680", Offset = "0x888680")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x10704B4", Offset = "0x10704B4", VA = "0x10704B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888650", Offset = "0x888650")]
		add
		{
		}
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x1070554", Offset = "0x1070554", VA = "0x1070554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888660", Offset = "0x888660")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000306")]
		[Address(RVA = "0x1070CF8", Offset = "0x1070CF8", VA = "0x1070CF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8886C8", Offset = "0x8886C8")]
		add
		{
		}
		[Token(Token = "0x6000307")]
		[Address(RVA = "0x1070D98", Offset = "0x1070D98", VA = "0x1070D98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8886D8", Offset = "0x8886D8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000309")]
		[Address(RVA = "0x1070E38", Offset = "0x1070E38", VA = "0x1070E38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888748", Offset = "0x888748")]
		add
		{
		}
		[Token(Token = "0x600030A")]
		[Address(RVA = "0x1070ED8", Offset = "0x1070ED8", VA = "0x1070ED8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888758", Offset = "0x888758")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x600030B")]
		[Address(RVA = "0x1070F78", Offset = "0x1070F78", VA = "0x1070F78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888768", Offset = "0x888768")]
		add
		{
		}
		[Token(Token = "0x600030C")]
		[Address(RVA = "0x1071018", Offset = "0x1071018", VA = "0x1071018")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888778", Offset = "0x888778")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x600030E")]
		[Address(RVA = "0x1071128", Offset = "0x1071128", VA = "0x1071128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888788", Offset = "0x888788")]
		add
		{
		}
		[Token(Token = "0x600030F")]
		[Address(RVA = "0x10711C8", Offset = "0x10711C8", VA = "0x10711C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888798", Offset = "0x888798")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000311")]
		[Address(RVA = "0x10712D4", Offset = "0x10712D4", VA = "0x10712D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888808", Offset = "0x888808")]
		add
		{
		}
		[Token(Token = "0x6000312")]
		[Address(RVA = "0x1071374", Offset = "0x1071374", VA = "0x1071374")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888818", Offset = "0x888818")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000314")]
		[Address(RVA = "0x1071480", Offset = "0x1071480", VA = "0x1071480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888888", Offset = "0x888888")]
		add
		{
		}
		[Token(Token = "0x6000315")]
		[Address(RVA = "0x1071520", Offset = "0x1071520", VA = "0x1071520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888898", Offset = "0x888898")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000317")]
		[Address(RVA = "0x107162C", Offset = "0x107162C", VA = "0x107162C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888908", Offset = "0x888908")]
		add
		{
		}
		[Token(Token = "0x6000318")]
		[Address(RVA = "0x10716CC", Offset = "0x10716CC", VA = "0x10716CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888918", Offset = "0x888918")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x600031A")]
		[Address(RVA = "0x10717D8", Offset = "0x10717D8", VA = "0x10717D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888988", Offset = "0x888988")]
		add
		{
		}
		[Token(Token = "0x600031B")]
		[Address(RVA = "0x1071878", Offset = "0x1071878", VA = "0x1071878")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888998", Offset = "0x888998")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x600031D")]
		[Address(RVA = "0x1071984", Offset = "0x1071984", VA = "0x1071984")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888A08", Offset = "0x888A08")]
		add
		{
		}
		[Token(Token = "0x600031E")]
		[Address(RVA = "0x1071A24", Offset = "0x1071A24", VA = "0x1071A24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888A18", Offset = "0x888A18")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000320")]
		[Address(RVA = "0x1071B30", Offset = "0x1071B30", VA = "0x1071B30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888A88", Offset = "0x888A88")]
		add
		{
		}
		[Token(Token = "0x6000321")]
		[Address(RVA = "0x1071BD0", Offset = "0x1071BD0", VA = "0x1071BD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888A98", Offset = "0x888A98")]
		remove
		{
		}
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x1070150", Offset = "0x1070150", VA = "0x1070150")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x1070174", Offset = "0x1070174", VA = "0x1070174")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x10705F4", Offset = "0x10705F4", VA = "0x10705F4")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x1070708", Offset = "0x1070708", VA = "0x1070708")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x1070954", Offset = "0x1070954", VA = "0x1070954")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x888690", Offset = "0x888690")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x1070A08", Offset = "0x1070A08", VA = "0x1070A08")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x1070AD8", Offset = "0x1070AD8", VA = "0x1070AD8")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x1070AF4", Offset = "0x1070AF4", VA = "0x1070AF4")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x1070BB8", Offset = "0x1070BB8", VA = "0x1070BB8")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x1070BFC", Offset = "0x1070BFC", VA = "0x1070BFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x1070C54", Offset = "0x1070C54", VA = "0x1070C54", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x1070CF0", Offset = "0x1070CF0", VA = "0x1070CF0", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x1070C84", Offset = "0x1070C84", VA = "0x1070C84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8886E8", Offset = "0x8886E8")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x10710B8", Offset = "0x10710B8", VA = "0x10710B8")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x1071268", Offset = "0x1071268", VA = "0x1071268")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8887A8", Offset = "0x8887A8")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x1071414", Offset = "0x1071414", VA = "0x1071414")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x888828", Offset = "0x888828")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x10715C0", Offset = "0x10715C0", VA = "0x10715C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8888A8", Offset = "0x8888A8")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x107176C", Offset = "0x107176C", VA = "0x107176C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x888928", Offset = "0x888928")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x1071918", Offset = "0x1071918", VA = "0x1071918")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8889A8", Offset = "0x8889A8")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x1071AC4", Offset = "0x1071AC4", VA = "0x1071AC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x888A28", Offset = "0x888A28")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x1071C70", Offset = "0x1071C70", VA = "0x1071C70")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x1071DB0", Offset = "0x1071DB0", VA = "0x1071DB0")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x1071DE4", Offset = "0x1071DE4", VA = "0x1071DE4")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x1071EAC", Offset = "0x1071EAC", VA = "0x1071EAC")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x1071FA4", Offset = "0x1071FA4", VA = "0x1071FA4")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20000C9")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000355")]
		[Address(RVA = "0x11C5100", Offset = "0x11C5100", VA = "0x11C5100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888CF8", Offset = "0x888CF8")]
		add
		{
		}
		[Token(Token = "0x6000356")]
		[Address(RVA = "0x11C51A0", Offset = "0x11C51A0", VA = "0x11C51A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888D08", Offset = "0x888D08")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000357")]
		[Address(RVA = "0x11C5240", Offset = "0x11C5240", VA = "0x11C5240")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888D18", Offset = "0x888D18")]
		add
		{
		}
		[Token(Token = "0x6000358")]
		[Address(RVA = "0x11C52E0", Offset = "0x11C52E0", VA = "0x11C52E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888D28", Offset = "0x888D28")]
		remove
		{
		}
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x11C5380", Offset = "0x11C5380", VA = "0x11C5380")]
	private void Awake()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x11C543C", Offset = "0x11C543C", VA = "0x11C543C")]
	private void Start()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x11C5440", Offset = "0x11C5440", VA = "0x11C5440")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x11C54B4", Offset = "0x11C54B4", VA = "0x11C54B4")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x11C55D8", Offset = "0x11C55D8", VA = "0x11C55D8")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x11C57C0", Offset = "0x11C57C0", VA = "0x11C57C0")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x11C59C8", Offset = "0x11C59C8", VA = "0x11C59C8")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20000CA")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000360")]
	[Address(RVA = "0x11D2470", Offset = "0x11D2470", VA = "0x11D2470", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x11D2500", Offset = "0x11D2500", VA = "0x11D2500", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000362")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x11D25CC", Offset = "0x11D25CC", VA = "0x11D25CC")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20000CB")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88665C", Offset = "0x88665C")]
	public float Range;

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x11D25DC", Offset = "0x11D25DC", VA = "0x11D25DC", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x11D26D8", Offset = "0x11D26D8", VA = "0x11D26D8")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20000CC")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886694", Offset = "0x886694")]
	public float Range;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8866CC", Offset = "0x8866CC")]
	public float MinimumElevation;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886704", Offset = "0x886704")]
	public float Gravity;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88673C", Offset = "0x88673C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88673C", Offset = "0x88673C")]
	public float AimVelocity;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886798", Offset = "0x886798")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x886798", Offset = "0x886798")]
	public float AimStep;

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x11D26E8", Offset = "0x11D26E8", VA = "0x11D26E8", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x11D2878", Offset = "0x11D2878", VA = "0x11D2878")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20000CD")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8867F0", Offset = "0x8867F0")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x11D288C", Offset = "0x11D288C", VA = "0x11D288C")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x11D29A8", Offset = "0x11D29A8", VA = "0x11D29A8")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x11D29D8", Offset = "0x11D29D8", VA = "0x11D29D8")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x11D2A08", Offset = "0x11D2A08", VA = "0x11D2A08")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x11D2AB0", Offset = "0x11D2AB0", VA = "0x11D2AB0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x11D2B1C", Offset = "0x11D2B1C", VA = "0x11D2B1C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x11D2B84", Offset = "0x11D2B84", VA = "0x11D2B84")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20000CE")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886828", Offset = "0x886828")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886838", Offset = "0x886838")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886870", Offset = "0x886870")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8868A8", Offset = "0x8868A8")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700002F")]
	public bool IsValidDestination
	{
		[Token(Token = "0x600036F")]
		[Address(RVA = "0x11D2CA8", Offset = "0x11D2CA8", VA = "0x11D2CA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888D38", Offset = "0x888D38")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000370")]
		[Address(RVA = "0x11D2CB0", Offset = "0x11D2CB0", VA = "0x11D2CB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888D48", Offset = "0x888D48")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000375")]
		[Address(RVA = "0x11D2E64", Offset = "0x11D2E64", VA = "0x11D2E64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888D58", Offset = "0x888D58")]
		add
		{
		}
		[Token(Token = "0x6000376")]
		[Address(RVA = "0x11D2F04", Offset = "0x11D2F04", VA = "0x11D2F04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888D68", Offset = "0x888D68")]
		remove
		{
		}
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x11D2CBC", Offset = "0x11D2CBC", VA = "0x11D2CBC")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x11D2D4C", Offset = "0x11D2D4C", VA = "0x11D2D4C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x11D2E20", Offset = "0x11D2E20", VA = "0x11D2E20")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x11D2E60", Offset = "0x11D2E60", VA = "0x11D2E60")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x11D2FA4", Offset = "0x11D2FA4", VA = "0x11D2FA4")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x11D3008", Offset = "0x11D3008", VA = "0x11D3008")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x11D3028", Offset = "0x11D3028", VA = "0x11D3028", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20000CF")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20000D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884804", Offset = "0x884804")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000030")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000386")]
			[Address(RVA = "0x1D51894", Offset = "0x1D51894", VA = "0x1D51894", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000031")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000388")]
			[Address(RVA = "0x1D518DC", Offset = "0x1D518DC", VA = "0x1D518DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000383")]
		[Address(RVA = "0x1D517D8", Offset = "0x1D517D8", VA = "0x1D517D8")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000384")]
		[Address(RVA = "0x1D51804", Offset = "0x1D51804", VA = "0x1D51804", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000385")]
		[Address(RVA = "0x1D51808", Offset = "0x1D51808", VA = "0x1D51808", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000387")]
		[Address(RVA = "0x1D5189C", Offset = "0x1D5189C", VA = "0x1D5189C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884814", Offset = "0x884814")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000032")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600038C")]
			[Address(RVA = "0x1D51788", Offset = "0x1D51788", VA = "0x1D51788", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600038E")]
			[Address(RVA = "0x1D517D0", Offset = "0x1D517D0", VA = "0x1D517D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000389")]
		[Address(RVA = "0x1D516C8", Offset = "0x1D516C8", VA = "0x1D516C8")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0x1D516F4", Offset = "0x1D516F4", VA = "0x1D516F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0x1D516F8", Offset = "0x1D516F8", VA = "0x1D516F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600038D")]
		[Address(RVA = "0x1D51790", Offset = "0x1D51790", VA = "0x1D51790", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x11D3234", Offset = "0x11D3234", VA = "0x11D3234")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x11D32F4", Offset = "0x11D32F4", VA = "0x11D32F4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x11D334C", Offset = "0x11D334C", VA = "0x11D334C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x11D3404", Offset = "0x11D3404", VA = "0x11D3404")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x888D78", Offset = "0x888D78")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x11D3470", Offset = "0x11D3470", VA = "0x11D3470")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x888DD8", Offset = "0x888DD8")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600037F")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000380")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x11D34DC", Offset = "0x11D34DC", VA = "0x11D34DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888E38", Offset = "0x888E38")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x11D3508", Offset = "0x11D3508", VA = "0x11D3508")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888E48", Offset = "0x888E48")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20000D2")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8868F0", Offset = "0x8868F0")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886900", Offset = "0x886900")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886938", Offset = "0x886938")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886970", Offset = "0x886970")]
	public bool FastTeleport;

	[Token(Token = "0x17000034")]
	public Transform Pointer
	{
		[Token(Token = "0x600038F")]
		[Address(RVA = "0x11D3534", Offset = "0x11D3534", VA = "0x11D3534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888EF8", Offset = "0x888EF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000390")]
		[Address(RVA = "0x11D353C", Offset = "0x11D353C", VA = "0x11D353C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888F08", Offset = "0x888F08")]
		private set
		{
		}
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x11D3544", Offset = "0x11D3544", VA = "0x11D3544", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x11D369C", Offset = "0x11D369C", VA = "0x11D369C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x11D3754", Offset = "0x11D3754", VA = "0x11D3754")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20000D3")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20000D4")]
	public enum InputModes
	{
		[Token(Token = "0x4000725")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000726")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000727")]
		ThumbstickTeleport,
		[Token(Token = "0x4000728")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20000D5")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x400072A")]
		A,
		[Token(Token = "0x400072B")]
		B,
		[Token(Token = "0x400072C")]
		LeftTrigger,
		[Token(Token = "0x400072D")]
		LeftThumbstick,
		[Token(Token = "0x400072E")]
		RightTrigger,
		[Token(Token = "0x400072F")]
		RightThumbstick,
		[Token(Token = "0x4000730")]
		X,
		[Token(Token = "0x4000731")]
		Y
	}

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8869A8", Offset = "0x8869A8")]
	public InputModes InputMode;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8869E0", Offset = "0x8869E0")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886A18", Offset = "0x886A18")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886A50", Offset = "0x886A50")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x11D3758", Offset = "0x11D3758", VA = "0x11D3758")]
	private void Start()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x11D375C", Offset = "0x11D375C", VA = "0x11D375C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x11D3B44", Offset = "0x11D3B44", VA = "0x11D3B44", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x11D3C04", Offset = "0x11D3C04", VA = "0x11D3C04")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20000D6")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20000D7")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000736")]
		HeadRelative,
		[Token(Token = "0x4000737")]
		ForwardFacing
	}

	[Token(Token = "0x20000D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884824", Offset = "0x884824")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003A4")]
			[Address(RVA = "0x1D519B8", Offset = "0x1D519B8", VA = "0x1D519B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003A6")]
			[Address(RVA = "0x1D51A00", Offset = "0x1D51A00", VA = "0x1D51A00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x1D518E4", Offset = "0x1D518E4", VA = "0x1D518E4")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x1D51910", Offset = "0x1D51910", VA = "0x1D51910", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x1D51914", Offset = "0x1D51914", VA = "0x1D51914", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x1D519C0", Offset = "0x1D519C0", VA = "0x1D519C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x11D3CD0", Offset = "0x11D3CD0", VA = "0x11D3CD0")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x11D3DB0", Offset = "0x11D3DB0", VA = "0x11D3DB0")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x11D3DB8", Offset = "0x11D3DB8", VA = "0x11D3DB8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x11D3E04", Offset = "0x11D3E04", VA = "0x11D3E04", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x11D3E4C", Offset = "0x11D3E4C", VA = "0x11D3E4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x888F18", Offset = "0x888F18")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600039D")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x600039E")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x11D3EB8", Offset = "0x11D3EB8", VA = "0x11D3EB8")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x11D3F74", Offset = "0x11D3F74", VA = "0x11D3F74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888F78", Offset = "0x888F78")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000D9")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x11D3FA0", Offset = "0x11D3FA0", VA = "0x11D3FA0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x11D3FA4", Offset = "0x11D3FA4", VA = "0x11D3FA4", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x11D4020", Offset = "0x11D4020", VA = "0x11D4020")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000DA")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886A88", Offset = "0x886A88")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886AC0", Offset = "0x886AC0")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886AF8", Offset = "0x886AF8")]
	public float AimDistanceThreshold;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886B30", Offset = "0x886B30")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x11D4024", Offset = "0x11D4024", VA = "0x11D4024", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x11D4050", Offset = "0x11D4050", VA = "0x11D4050", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x11D4400", Offset = "0x11D4400", VA = "0x11D4400")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000DB")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886B68", Offset = "0x886B68")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886BA0", Offset = "0x886BA0")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886BD8", Offset = "0x886BD8")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x11D4404", Offset = "0x11D4404", VA = "0x11D4404", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x11D4448", Offset = "0x11D4448", VA = "0x11D4448", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x11D47F0", Offset = "0x11D47F0", VA = "0x11D47F0")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000DC")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x11D4800", Offset = "0x11D4800", VA = "0x11D4800")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x11D4804", Offset = "0x11D4804", VA = "0x11D4804")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x11D480C", Offset = "0x11D480C", VA = "0x11D480C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x11D48C8", Offset = "0x11D48C8", VA = "0x11D48C8")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x11D48F0", Offset = "0x11D48F0", VA = "0x11D48F0")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000DD")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886C10", Offset = "0x886C10")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000037")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60003B5")]
		[Address(RVA = "0x11D4908", Offset = "0x11D4908", VA = "0x11D4908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888FD8", Offset = "0x888FD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x11D4910", Offset = "0x11D4910", VA = "0x11D4910")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888FE8", Offset = "0x888FE8")]
		private set
		{
		}
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x11D24A0", Offset = "0x11D24A0", VA = "0x11D24A0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x11D25A0", Offset = "0x11D25A0", VA = "0x11D25A0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x11D4918", Offset = "0x11D4918", VA = "0x11D4918")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x888FF8", Offset = "0x888FF8")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x11D2B10", Offset = "0x11D2B10", VA = "0x11D2B10", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x11D2B7C", Offset = "0x11D2B7C", VA = "0x11D2B7C", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x11D25D4", Offset = "0x11D25D4", VA = "0x11D25D4")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000DE")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20000DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884834", Offset = "0x884834")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000038")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003C8")]
			[Address(RVA = "0x1D51CCC", Offset = "0x1D51CCC", VA = "0x1D51CCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000039")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003CA")]
			[Address(RVA = "0x1D51D14", Offset = "0x1D51D14", VA = "0x1D51D14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x1D51A08", Offset = "0x1D51A08", VA = "0x1D51A08")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x1D51A34", Offset = "0x1D51A34", VA = "0x1D51A34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x1D51A38", Offset = "0x1D51A38", VA = "0x1D51A38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x1D51CD4", Offset = "0x1D51CD4", VA = "0x1D51CD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886C20", Offset = "0x886C20")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000751")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x11D49F4", Offset = "0x11D49F4", VA = "0x11D49F4")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x11D4AE4", Offset = "0x11D4AE4", VA = "0x11D4AE4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x11D4B10", Offset = "0x11D4B10", VA = "0x11D4B10", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x11D4B38", Offset = "0x11D4B38", VA = "0x11D4B38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x889030", Offset = "0x889030")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x11D4BA4", Offset = "0x11D4BA4", VA = "0x11D4BA4", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60003C2")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x11D4BC0", Offset = "0x11D4BC0", VA = "0x11D4BC0", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x11D4CE0", Offset = "0x11D4CE0", VA = "0x11D4CE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x889090", Offset = "0x889090")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000E0")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x11D4D0C", Offset = "0x11D4D0C", VA = "0x11D4D0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x11D4D68", Offset = "0x11D4D68", VA = "0x11D4D68", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x11D4E60", Offset = "0x11D4E60", VA = "0x11D4E60", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x11D4F58", Offset = "0x11D4F58", VA = "0x11D4F58")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8890F0", Offset = "0x8890F0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x11D4F5C", Offset = "0x11D4F5C", VA = "0x11D4F5C")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000E1")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886C58", Offset = "0x886C58")]
	public float LOSOffset;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886C90", Offset = "0x886C90")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x11D4F68", Offset = "0x11D4F68", VA = "0x11D4F68", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x11D5174", Offset = "0x11D5174", VA = "0x11D5174")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000E2")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x11D5180", Offset = "0x11D5180", VA = "0x11D5180", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x11D5278", Offset = "0x11D5278", VA = "0x11D5278")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000E3")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x11D527C", Offset = "0x11D527C", VA = "0x11D527C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x11D5310", Offset = "0x11D5310", VA = "0x11D5310", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60003D6")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x11D53A0", Offset = "0x11D53A0", VA = "0x11D53A0")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000E4")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20000E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884844", Offset = "0x884844")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x1700003A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003DE")]
			[Address(RVA = "0x1D51E48", Offset = "0x1D51E48", VA = "0x1D51E48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003E0")]
			[Address(RVA = "0x1D51E90", Offset = "0x1D51E90", VA = "0x1D51E90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x1D51D1C", Offset = "0x1D51D1C", VA = "0x1D51D1C")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x1D51D48", Offset = "0x1D51D48", VA = "0x1D51D48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x1D51D4C", Offset = "0x1D51D4C", VA = "0x1D51D4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0x1D51E50", Offset = "0x1D51E50", VA = "0x1D51E50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x886CC8", Offset = "0x886CC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886CC8", Offset = "0x886CC8")]
	public float TransitionDuration;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x886D20", Offset = "0x886D20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886D20", Offset = "0x886D20")]
	public float TeleportDelay;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886D74", Offset = "0x886D74")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x11D53A8", Offset = "0x11D53A8", VA = "0x11D53A8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x11D53D4", Offset = "0x11D53D4", VA = "0x11D53D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x889128", Offset = "0x889128")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x11D5440", Offset = "0x11D5440", VA = "0x11D5440")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000E6")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xB2DCB4", Offset = "0xB2DCB4", VA = "0xB2DCB4", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xB2DCD0", Offset = "0xB2DCD0", VA = "0xB2DCD0")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000E7")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20000E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884854", Offset = "0x884854")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x1700003C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003E9")]
			[Address(RVA = "0x1D51FF8", Offset = "0x1D51FF8", VA = "0x1D51FF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003EB")]
			[Address(RVA = "0x1D52040", Offset = "0x1D52040", VA = "0x1D52040", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x1D51E98", Offset = "0x1D51E98", VA = "0x1D51E98")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x1D51EC4", Offset = "0x1D51EC4", VA = "0x1D51EC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x1D51EC8", Offset = "0x1D51EC8", VA = "0x1D51EC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x1D52000", Offset = "0x1D52000", VA = "0x1D52000", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886DAC", Offset = "0x886DAC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x886DAC", Offset = "0x886DAC")]
	public float TransitionDuration;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xB2DCD8", Offset = "0xB2DCD8", VA = "0xB2DCD8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xB2DD04", Offset = "0xB2DD04", VA = "0xB2DD04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8891D8", Offset = "0x8891D8")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xB2DD70", Offset = "0xB2DD70", VA = "0xB2DD70")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000E9")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20000EA")]
	public enum PlabackState
	{
		[Token(Token = "0x4000781")]
		Idle = 1,
		[Token(Token = "0x4000782")]
		Preparing,
		[Token(Token = "0x4000783")]
		Buffering,
		[Token(Token = "0x4000784")]
		Ready,
		[Token(Token = "0x4000785")]
		Ended
	}

	[Token(Token = "0x20000EB")]
	public enum StereoMode
	{
		[Token(Token = "0x4000787")]
		Unknown = -1,
		[Token(Token = "0x4000788")]
		Mono,
		[Token(Token = "0x4000789")]
		TopBottom,
		[Token(Token = "0x400078A")]
		LeftRight,
		[Token(Token = "0x400078B")]
		Mesh
	}

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700003E")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x1078EDC", Offset = "0x1078EDC", VA = "0x1078EDC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700003F")]
	private static IntPtr Activity
	{
		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x107920C", Offset = "0x107920C", VA = "0x107920C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000040")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x1076434", Offset = "0x1076434", VA = "0x1076434")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000041")]
	public static bool IsPlaying
	{
		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x1077BC4", Offset = "0x1077BC4", VA = "0x1077BC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000042")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x10794DC", Offset = "0x10794DC", VA = "0x10794DC")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000043")]
	public static long Duration
	{
		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x1077DE8", Offset = "0x1077DE8", VA = "0x1077DE8")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000044")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x1076A5C", Offset = "0x1076A5C", VA = "0x1076A5C")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000045")]
	public static int VideoWidth
	{
		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x1076834", Offset = "0x1076834", VA = "0x1076834")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000046")]
	public static int VideoHeight
	{
		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x1076948", Offset = "0x1076948", VA = "0x1076948")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000047")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x1077CD4", Offset = "0x1077CD4", VA = "0x1077CD4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x10772C4", Offset = "0x10772C4", VA = "0x10772C4")]
		set
		{
		}
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x10795F0", Offset = "0x10795F0", VA = "0x10795F0")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x10781B0", Offset = "0x10781B0", VA = "0x10781B0")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x1076F10", Offset = "0x1076F10", VA = "0x1076F10")]
	public static void Play()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x10770B0", Offset = "0x10770B0", VA = "0x10770B0")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x1077FB0", Offset = "0x1077FB0", VA = "0x1077FB0")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x1079810", Offset = "0x1079810", VA = "0x1079810")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x10779DC", Offset = "0x10779DC", VA = "0x10779DC")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000EC")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x1355380", Offset = "0x1355380", VA = "0x1355380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x889288", Offset = "0x889288")]
		add
		{
		}
		[Token(Token = "0x6000400")]
		[Address(RVA = "0x1355420", Offset = "0x1355420", VA = "0x1355420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x889298", Offset = "0x889298")]
		remove
		{
		}
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x13554C0", Offset = "0x13554C0", VA = "0x13554C0", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x13554D4", Offset = "0x13554D4", VA = "0x13554D4")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000ED")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20000EE")]
	public enum ButtonType
	{
		[Token(Token = "0x400078F")]
		Play,
		[Token(Token = "0x4000790")]
		Pause,
		[Token(Token = "0x4000791")]
		FastForward,
		[Token(Token = "0x4000792")]
		Rewind,
		[Token(Token = "0x4000793")]
		SkipForward,
		[Token(Token = "0x4000794")]
		SkipBack,
		[Token(Token = "0x4000795")]
		Stop
	}

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000048")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000403")]
		[Address(RVA = "0x1074040", Offset = "0x1074040", VA = "0x1074040")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000404")]
		[Address(RVA = "0x1074048", Offset = "0x1074048", VA = "0x1074048")]
		set
		{
		}
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x107406C", Offset = "0x107406C", VA = "0x107406C", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x1075504", Offset = "0x1075504", VA = "0x1075504")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000EF")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20000F0")]
	public enum VideoShape
	{
		[Token(Token = "0x40007AA")]
		_360,
		[Token(Token = "0x40007AB")]
		_180,
		[Token(Token = "0x40007AC")]
		Quad
	}

	[Token(Token = "0x20000F1")]
	public enum VideoStereo
	{
		[Token(Token = "0x40007AE")]
		Mono,
		[Token(Token = "0x40007AF")]
		TopBottom,
		[Token(Token = "0x40007B0")]
		LeftRight,
		[Token(Token = "0x40007B1")]
		BottomTop
	}

	[Token(Token = "0x20000F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884864", Offset = "0x884864")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x1700004C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600041D")]
			[Address(RVA = "0xB4051C", Offset = "0xB4051C", VA = "0xB4051C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600041F")]
			[Address(RVA = "0xB40564", Offset = "0xB40564", VA = "0xB40564", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0xB40334", Offset = "0xB40334", VA = "0xB40334")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0xB40360", Offset = "0xB40360", VA = "0xB40360", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0xB40364", Offset = "0xB40364", VA = "0xB40364", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0xB40524", Offset = "0xB40524", VA = "0xB40524", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884874", Offset = "0x884874")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000420")]
		[Address(RVA = "0xB4023C", Offset = "0xB4023C", VA = "0xB4023C")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0xB40244", Offset = "0xB40244", VA = "0xB40244")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886E34", Offset = "0x886E34")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886E44", Offset = "0x886E44")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886E54", Offset = "0x886E54")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000049")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000407")]
		[Address(RVA = "0x107618C", Offset = "0x107618C", VA = "0x107618C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8892A8", Offset = "0x8892A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000408")]
		[Address(RVA = "0x1076194", Offset = "0x1076194", VA = "0x1076194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8892B8", Offset = "0x8892B8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public long Duration
	{
		[Token(Token = "0x6000409")]
		[Address(RVA = "0x10761A0", Offset = "0x10761A0", VA = "0x10761A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8892C8", Offset = "0x8892C8")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600040A")]
		[Address(RVA = "0x10761A8", Offset = "0x10761A8", VA = "0x10761A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8892D8", Offset = "0x8892D8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public long PlaybackPosition
	{
		[Token(Token = "0x600040B")]
		[Address(RVA = "0x10761B0", Offset = "0x10761B0", VA = "0x10761B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8892E8", Offset = "0x8892E8")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600040C")]
		[Address(RVA = "0x10761B8", Offset = "0x10761B8", VA = "0x10761B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8892F8", Offset = "0x8892F8")]
		private set
		{
		}
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x10761C0", Offset = "0x10761C0", VA = "0x10761C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x10764A4", Offset = "0x10764A4", VA = "0x10764A4")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x1076508", Offset = "0x1076508", VA = "0x1076508")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x1076B70", Offset = "0x1076B70", VA = "0x1076B70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x889308", Offset = "0x889308")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x1076BDC", Offset = "0x1076BDC", VA = "0x1076BDC")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x1076E80", Offset = "0x1076E80", VA = "0x1076E80")]
	public void Play()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x1077024", Offset = "0x1077024", VA = "0x1077024")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x10771C4", Offset = "0x10771C4", VA = "0x10771C4")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x1077430", Offset = "0x1077430", VA = "0x1077430")]
	private void Update()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x1077EFC", Offset = "0x1077EFC", VA = "0x1077EFC")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x1078124", Offset = "0x1078124", VA = "0x1078124")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x10782C4", Offset = "0x10782C4", VA = "0x10782C4")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x10783B0", Offset = "0x10783B0", VA = "0x10783B0")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000F4")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20000F5")]
	private enum PlaybackState
	{
		[Token(Token = "0x40007CE")]
		Playing,
		[Token(Token = "0x40007CF")]
		Paused,
		[Token(Token = "0x40007D0")]
		Rewinding,
		[Token(Token = "0x40007D1")]
		FastForwarding
	}

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x10783C0", Offset = "0x10783C0", VA = "0x10783C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x1078714", Offset = "0x1078714", VA = "0x1078714")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x10788F0", Offset = "0x10788F0", VA = "0x10788F0")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x1078A24", Offset = "0x1078A24", VA = "0x1078A24")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x1078B2C", Offset = "0x1078B2C", VA = "0x1078B2C")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x10789F8", Offset = "0x10789F8", VA = "0x10789F8")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x1078B8C", Offset = "0x1078B8C", VA = "0x1078B8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x1078600", Offset = "0x1078600", VA = "0x1078600")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x1078ECC", Offset = "0x1078ECC", VA = "0x1078ECC")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000F6")]
public static class VectorUtil
{
	[Token(Token = "0x600042B")]
	[Address(RVA = "0xB32E8C", Offset = "0xB32E8C", VA = "0xB32E8C")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000F7")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x40007D2")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x40007D3")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x101DD20", Offset = "0x101DD20", VA = "0x101DD20")]
	private void Start()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x101E0E0", Offset = "0x101E0E0", VA = "0x101E0E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x101E36C", Offset = "0x101E36C", VA = "0x101E36C")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x101E4D4", Offset = "0x101E4D4", VA = "0x101E4D4")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x101E640", Offset = "0x101E640", VA = "0x101E640")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x101E7D0", Offset = "0x101E7D0", VA = "0x101E7D0")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x20000F8")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x40007DC")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xD11CE0", Offset = "0xD11CE0", VA = "0xD11CE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xD11D30", Offset = "0xD11D30", VA = "0xD11D30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xD11D34", Offset = "0xD11D34", VA = "0xD11D34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xD11D38", Offset = "0xD11D38", VA = "0xD11D38")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xD11F94", Offset = "0xD11F94", VA = "0xD11F94")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xD121C4", Offset = "0xD121C4", VA = "0xD121C4")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x20000F9")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xD16604", Offset = "0xD16604", VA = "0xD16604")]
	private void Start()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xD16B10", Offset = "0xD16B10", VA = "0xD16B10")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xD16BD0", Offset = "0xD16BD0", VA = "0xD16BD0")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xD16DFC", Offset = "0xD16DFC", VA = "0xD16DFC")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xD16EDC", Offset = "0xD16EDC", VA = "0xD16EDC")]
	private void Update()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xD16FC0", Offset = "0xD16FC0", VA = "0xD16FC0")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xD17034", Offset = "0xD17034", VA = "0xD17034")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xD1703C", Offset = "0xD1703C", VA = "0xD1703C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8893C8", Offset = "0x8893C8")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xD170A0", Offset = "0xD170A0", VA = "0xD170A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8893D8", Offset = "0x8893D8")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xD17104", Offset = "0xD17104", VA = "0xD17104")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8893E8", Offset = "0x8893E8")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xD17168", Offset = "0xD17168", VA = "0xD17168")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8893F8", Offset = "0x8893F8")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000FA")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x6000443")]
	[Address(RVA = "0x101329C", Offset = "0x101329C", VA = "0x101329C")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x20000FB")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x11C3FAC", Offset = "0x11C3FAC", VA = "0x11C3FAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x11C4050", Offset = "0x11C4050", VA = "0x11C4050")]
	private void Update()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x11C413C", Offset = "0x11C413C", VA = "0x11C413C")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x11C419C", Offset = "0x11C419C", VA = "0x11C419C")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x20000FC")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x6000448")]
	[Address(RVA = "0x11D13C0", Offset = "0x11D13C0", VA = "0x11D13C0")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x20000FD")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20000FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884894", Offset = "0x884894")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x1700004E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000450")]
			[Address(RVA = "0xB3DE28", Offset = "0xB3DE28", VA = "0xB3DE28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000452")]
			[Address(RVA = "0xB3DE70", Offset = "0xB3DE70", VA = "0xB3DE70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600044D")]
		[Address(RVA = "0xB3DCD8", Offset = "0xB3DCD8", VA = "0xB3DCD8")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600044E")]
		[Address(RVA = "0xB3DD04", Offset = "0xB3DD04", VA = "0xB3DD04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0xB3DD08", Offset = "0xB3DD08", VA = "0xB3DD08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000451")]
		[Address(RVA = "0xB3DE30", Offset = "0xB3DE30", VA = "0xB3DE30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x134F908", Offset = "0x134F908", VA = "0x134F908")]
	private void Awake()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x134FA0C", Offset = "0x134FA0C", VA = "0x134FA0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x134F9A0", Offset = "0x134F9A0", VA = "0x134F9A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x889408", Offset = "0x889408")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x134FBB8", Offset = "0x134FBB8", VA = "0x134FBB8")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000FF")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x886E84", Offset = "0x886E84")]
	public int SubdivisionsU;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x886EA0", Offset = "0x886EA0")]
	public int SubdivisionsV;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x135EDCC", Offset = "0x135EDCC", VA = "0x135EDCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x135F7D8", Offset = "0x135F7D8", VA = "0x135F7D8")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000100")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000050")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000455")]
		[Address(RVA = "0x106F9BC", Offset = "0x106F9BC", VA = "0x106F9BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x106FA10", Offset = "0x106FA10", VA = "0x106FA10")]
	public void Start()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x106FE2C", Offset = "0x106FE2C", VA = "0x106FE2C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x106FF18", Offset = "0x106FF18", VA = "0x106FF18")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8894B8", Offset = "0x8894B8")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000459")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600045A")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x600045B")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x600045C")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x600045D")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x600045E")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x600045F")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000460")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x106FF7C", Offset = "0x106FF7C", VA = "0x106FF7C")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x106FFB8", Offset = "0x106FFB8", VA = "0x106FFB8")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x1070028", Offset = "0x1070028", VA = "0x1070028")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x1070198", Offset = "0x1070198", VA = "0x1070198")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x1070274", Offset = "0x1070274", VA = "0x1070274")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x106FD24", Offset = "0x106FD24", VA = "0x106FD24")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x107033C", Offset = "0x107033C", VA = "0x107033C")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x10703A4", Offset = "0x10703A4", VA = "0x10703A4")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x107049C", Offset = "0x107049C", VA = "0x107049C")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000101")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8848B4", Offset = "0x8848B4")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000102")]
	public enum DrawMode
	{
		[Token(Token = "0x400080B")]
		Opaque,
		[Token(Token = "0x400080C")]
		OpaqueWithClip,
		[Token(Token = "0x400080D")]
		TransparentDefaultAlpha,
		[Token(Token = "0x400080E")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000051")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000470")]
		[Address(RVA = "0x107AEC0", Offset = "0x107AEC0", VA = "0x107AEC0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000471")]
		[Address(RVA = "0x107AF50", Offset = "0x107AF50", VA = "0x107AF50")]
		set
		{
		}
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x10799F8", Offset = "0x10799F8", VA = "0x10799F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x107A52C", Offset = "0x107A52C", VA = "0x107A52C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x107A5AC", Offset = "0x107A5AC", VA = "0x107A5AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x107A69C", Offset = "0x107A69C", VA = "0x107A69C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x107A78C", Offset = "0x107A78C", VA = "0x107A78C", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x107A998", Offset = "0x107A998", VA = "0x107A998")]
	private void Update()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x107B01C", Offset = "0x107B01C", VA = "0x107B01C")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x2000103")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x101E93C", Offset = "0x101E93C", VA = "0x101E93C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x101EAF0", Offset = "0x101EAF0", VA = "0x101EAF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x101EC78", Offset = "0x101EC78", VA = "0x101EC78")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x101EC80", Offset = "0x101EC80", VA = "0x101EC80")]
	public void Release()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x101EC68", Offset = "0x101EC68", VA = "0x101EC68")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x101EC88", Offset = "0x101EC88", VA = "0x101EC88")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x2000104")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x2000105")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884914", Offset = "0x884914")]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000052")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000484")]
			[Address(RVA = "0xB37C14", Offset = "0xB37C14", VA = "0xB37C14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000486")]
			[Address(RVA = "0xB37C5C", Offset = "0xB37C5C", VA = "0xB37C5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0xB37AF0", Offset = "0xB37AF0", VA = "0xB37AF0")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0xB37B1C", Offset = "0xB37B1C", VA = "0xB37B1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0xB37B20", Offset = "0xB37B20", VA = "0xB37B20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0xB37C1C", Offset = "0xB37C1C", VA = "0xB37C1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000106")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884924", Offset = "0x884924")]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000054")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600048A")]
			[Address(RVA = "0xB37E10", Offset = "0xB37E10", VA = "0xB37E10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600048C")]
			[Address(RVA = "0xB37E58", Offset = "0xB37E58", VA = "0xB37E58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0xB37C64", Offset = "0xB37C64", VA = "0xB37C64")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0xB37C90", Offset = "0xB37C90", VA = "0xB37C90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0xB37C94", Offset = "0xB37C94", VA = "0xB37C94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0xB37E18", Offset = "0xB37E18", VA = "0xB37E18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x13541F0", Offset = "0x13541F0", VA = "0x13541F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x1354484", Offset = "0x1354484", VA = "0x1354484")]
	private void Update()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x13544E0", Offset = "0x13544E0", VA = "0x13544E0")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x1354644", Offset = "0x1354644", VA = "0x1354644")]
	public void Release()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x1354708", Offset = "0x1354708", VA = "0x1354708")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8894F0", Offset = "0x8894F0")]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x135458C", Offset = "0x135458C", VA = "0x135458C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x889550", Offset = "0x889550")]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x13547A4", Offset = "0x13547A4", VA = "0x13547A4")]
	public BrushController()
	{
	}
}
[Token(Token = "0x2000107")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x600048D")]
	[Address(RVA = "0x1343F4C", Offset = "0x1343F4C", VA = "0x1343F4C")]
	private void Start()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x1343FAC", Offset = "0x1343FAC", VA = "0x1343FAC")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x2000108")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x1347224", Offset = "0x1347224", VA = "0x1347224")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x1347358", Offset = "0x1347358", VA = "0x1347358")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x13473EC", Offset = "0x13473EC", VA = "0x13473EC")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x1347454", Offset = "0x1347454", VA = "0x1347454")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x2000109")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x200010A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884934", Offset = "0x884934")]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x17000056")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600049F")]
			[Address(RVA = "0xB3D128", Offset = "0xB3D128", VA = "0xB3D128", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004A1")]
			[Address(RVA = "0xB3D170", Offset = "0xB3D170", VA = "0xB3D170", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0xB3CF28", Offset = "0xB3CF28", VA = "0xB3CF28")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0xB3CF54", Offset = "0xB3CF54", VA = "0xB3CF54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0xB3CF58", Offset = "0xB3CF58", VA = "0xB3CF58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0xB3D130", Offset = "0xB3D130", VA = "0xB3D130", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x134745C", Offset = "0x134745C", VA = "0x134745C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x13476E8", Offset = "0x13476E8", VA = "0x13476E8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x1347A38", Offset = "0x1347A38", VA = "0x1347A38")]
	private void FindHands()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x1347D64", Offset = "0x1347D64", VA = "0x1347D64")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x1348068", Offset = "0x1348068", VA = "0x1348068")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x134815C", Offset = "0x134815C", VA = "0x134815C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x134831C", Offset = "0x134831C", VA = "0x134831C")]
	public void Release()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x1348274", Offset = "0x1348274", VA = "0x1348274")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x889650", Offset = "0x889650")]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x1348404", Offset = "0x1348404", VA = "0x1348404")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x200010B")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x200010C")]
	public enum ManipulationType
	{
		[Token(Token = "0x4000843")]
		Default,
		[Token(Token = "0x4000844")]
		ForcedHand,
		[Token(Token = "0x4000845")]
		DollyHand,
		[Token(Token = "0x4000846")]
		DollyAttached,
		[Token(Token = "0x4000847")]
		HorizontalScaled,
		[Token(Token = "0x4000848")]
		VerticalScaled,
		[Token(Token = "0x4000849")]
		Menu
	}

	[Token(Token = "0x200010D")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x200010E")]
	public delegate void ReleasedObject();

	[Token(Token = "0x200010F")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x886F2C", Offset = "0x886F2C")]
	public string ObjectName;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x886F3C", Offset = "0x886F3C")]
	public string ObjectInstructions;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x1349424", Offset = "0x1349424", VA = "0x1349424")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x1349480", Offset = "0x1349480", VA = "0x1349480")]
	public void Release()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x1349494", Offset = "0x1349494", VA = "0x1349494")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x13494A8", Offset = "0x13494A8", VA = "0x13494A8")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x2000110")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886F5C", Offset = "0x886F5C")]
	public int radialDivisions;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886F94", Offset = "0x886F94")]
	public float borderSize;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886FCC", Offset = "0x886FCC")]
	public float fingerTaper;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887004", Offset = "0x887004")]
	public float fingerTipLength;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88703C", Offset = "0x88703C")]
	public float webOffset;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x134B374", Offset = "0x134B374", VA = "0x134B374")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x134B54C", Offset = "0x134B54C", VA = "0x134B54C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x134B758", Offset = "0x134B758", VA = "0x134B758")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x134BD94", Offset = "0x134BD94", VA = "0x134BD94")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x134C3C4", Offset = "0x134C3C4", VA = "0x134C3C4")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x134EA40", Offset = "0x134EA40", VA = "0x134EA40")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x134EAFC", Offset = "0x134EAFC", VA = "0x134EAFC")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x2000111")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x134EB20", Offset = "0x134EB20", VA = "0x134EB20")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x134EE58", Offset = "0x134EE58", VA = "0x134EE58")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x134EBC8", Offset = "0x134EBC8", VA = "0x134EBC8")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x134F248", Offset = "0x134F248", VA = "0x134F248")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x134F738", Offset = "0x134F738", VA = "0x134F738")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x2000112")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x2000113")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884944", Offset = "0x884944")]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x17000058")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004CD")]
			[Address(RVA = "0x1D4E0AC", Offset = "0x1D4E0AC", VA = "0x1D4E0AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004CF")]
			[Address(RVA = "0x1D4E0F4", Offset = "0x1D4E0F4", VA = "0x1D4E0F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x1D4DDE8", Offset = "0x1D4DDE8", VA = "0x1D4DDE8")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x1D4DE14", Offset = "0x1D4DE14", VA = "0x1D4DE14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x1D4DE18", Offset = "0x1D4DE18", VA = "0x1D4DE18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x1D4E0B4", Offset = "0x1D4E0B4", VA = "0x1D4E0B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x107C4F0", Offset = "0x107C4F0", VA = "0x107C4F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x107C71C", Offset = "0x107C71C", VA = "0x107C71C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x107D334", Offset = "0x107D334", VA = "0x107D334")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x107DF3C", Offset = "0x107DF3C", VA = "0x107DF3C")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x107C6B0", Offset = "0x107C6B0", VA = "0x107C6B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x889700", Offset = "0x889700")]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x107C980", Offset = "0x107C980", VA = "0x107C980")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x107D5F8", Offset = "0x107D5F8", VA = "0x107D5F8")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x107E1F4", Offset = "0x107E1F4", VA = "0x107E1F4")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x107E280", Offset = "0x107E280", VA = "0x107E280")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x107E2B0", Offset = "0x107E2B0", VA = "0x107E2B0")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x107E0BC", Offset = "0x107E0BC", VA = "0x107E0BC")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x107E3D4", Offset = "0x107E3D4", VA = "0x107E3D4")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x2000114")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x107E470", Offset = "0x107E470", VA = "0x107E470")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x107E5FC", Offset = "0x107E5FC", VA = "0x107E5FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x107E6C4", Offset = "0x107E6C4", VA = "0x107E6C4")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x2000115")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x2000116")]
	public enum BrushState
	{
		[Token(Token = "0x4000886")]
		Idle,
		[Token(Token = "0x4000887")]
		Inking
	}

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x10E3FF0", Offset = "0x10E3FF0", VA = "0x10E3FF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x10E3FF8", Offset = "0x10E3FF8", VA = "0x10E3FF8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x10E42E0", Offset = "0x10E42E0", VA = "0x10E42E0")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x10E44BC", Offset = "0x10E44BC", VA = "0x10E44BC")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x10E4664", Offset = "0x10E4664", VA = "0x10E4664")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x10E41EC", Offset = "0x10E41EC", VA = "0x10E41EC")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x10E4740", Offset = "0x10E4740", VA = "0x10E4740")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x2000117")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x10E47CC", Offset = "0x10E47CC", VA = "0x10E47CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x10E4958", Offset = "0x10E4958", VA = "0x10E4958")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x10E4ABC", Offset = "0x10E4ABC", VA = "0x10E4ABC")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x2000118")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x10E4AC4", Offset = "0x10E4AC4", VA = "0x10E4AC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x10E4CB8", Offset = "0x10E4CB8", VA = "0x10E4CB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x10E4E88", Offset = "0x10E4E88", VA = "0x10E4E88")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x2000119")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x200011A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884954", Offset = "0x884954")]
	private sealed class <FadeToCurrentStyle>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x1700005A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004F2")]
			[Address(RVA = "0x1D4F92C", Offset = "0x1D4F92C", VA = "0x1D4F92C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004F4")]
			[Address(RVA = "0x1D4F974", Offset = "0x1D4F974", VA = "0x1D4F974", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x1D4F754", Offset = "0x1D4F754", VA = "0x1D4F754")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x1D4F780", Offset = "0x1D4F780", VA = "0x1D4F780", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x1D4F784", Offset = "0x1D4F784", VA = "0x1D4F784", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0x1D4F934", Offset = "0x1D4F934", VA = "0x1D4F934", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200011B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884964", Offset = "0x884964")]
	private sealed class <FadeToDefaultPassthrough>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x1700005C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004F8")]
			[Address(RVA = "0x1D4FB94", Offset = "0x1D4FB94", VA = "0x1D4FB94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004FA")]
			[Address(RVA = "0x1D4FBDC", Offset = "0x1D4FBDC", VA = "0x1D4FBDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x1D4F97C", Offset = "0x1D4F97C", VA = "0x1D4F97C")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x1D4F9A8", Offset = "0x1D4F9A8", VA = "0x1D4F9A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x1D4F9AC", Offset = "0x1D4F9AC", VA = "0x1D4F9AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x1D4FB9C", Offset = "0x1D4FB9C", VA = "0x1D4FB9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float savedPosterize;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] compactObjects;

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x10E4E90", Offset = "0x10E4E90", VA = "0x10E4E90")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x10E5194", Offset = "0x10E5194", VA = "0x10E5194")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x10E53EC", Offset = "0x10E53EC", VA = "0x10E53EC")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x10E5554", Offset = "0x10E5554", VA = "0x10E5554")]
	public void Release()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x10E54D8", Offset = "0x10E54D8", VA = "0x10E54D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8897B0", Offset = "0x8897B0")]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x10E5634", Offset = "0x10E5634", VA = "0x10E5634")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x889810", Offset = "0x889810")]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x10E56B0", Offset = "0x10E56B0", VA = "0x10E56B0")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x10E56D0", Offset = "0x10E56D0", VA = "0x10E56D0")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x10E56F0", Offset = "0x10E56F0", VA = "0x10E56F0")]
	public void OnPosterizeChanged(float newValue)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x10E5710", Offset = "0x10E5710", VA = "0x10E5710")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x10E5118", Offset = "0x10E5118", VA = "0x10E5118")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x10E5774", Offset = "0x10E5774", VA = "0x10E5774")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x10E5780", Offset = "0x10E5780", VA = "0x10E5780")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x10E51AC", Offset = "0x10E51AC", VA = "0x10E51AC")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x10E578C", Offset = "0x10E578C", VA = "0x10E578C")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x200011C")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x10E57D0", Offset = "0x10E57D0", VA = "0x10E57D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x10E5890", Offset = "0x10E5890", VA = "0x10E5890")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x200011D")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x11C3CF8", Offset = "0x11C3CF8", VA = "0x11C3CF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x11C3F00", Offset = "0x11C3F00", VA = "0x11C3F00")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x11C3F58", Offset = "0x11C3F58", VA = "0x11C3F58")]
	public void Release()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x11C3FA4", Offset = "0x11C3FA4", VA = "0x11C3FA4")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x200011E")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x11C41A4", Offset = "0x11C41A4", VA = "0x11C41A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x11C421C", Offset = "0x11C421C", VA = "0x11C421C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x11C4540", Offset = "0x11C4540", VA = "0x11C4540")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x200011F")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x11C4C70", Offset = "0x11C4C70", VA = "0x11C4C70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x11C50F8", Offset = "0x11C50F8", VA = "0x11C50F8")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x2000120")]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong anchorHandle_;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Canvas canvas_;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform pivot_;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject anchorMenu_;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isSelected_;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isHovered_;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI anchorName_;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject saveIcon_;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Image labelImage_;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color labelBaseColor_;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Color labelHighlightColor_;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Color labelSelectedColor_;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AnchorUIManager uiManager_;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private MeshRenderer[] renderers_;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int menuIndex_;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private List<Button> buttonList_;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Button selectedButton_;

	[Token(Token = "0x1700005E")]
	public ulong anchorHandle
	{
		[Token(Token = "0x6000506")]
		[Address(RVA = "0x10132A4", Offset = "0x10132A4", VA = "0x10132A4")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x10132AC", Offset = "0x10132AC", VA = "0x10132AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x101337C", Offset = "0x101337C", VA = "0x101337C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x10135E4", Offset = "0x10135E4", VA = "0x10135E4")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x101364C", Offset = "0x101364C", VA = "0x101364C")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x10136B0", Offset = "0x10136B0", VA = "0x10136B0")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x1013714", Offset = "0x1013714", VA = "0x1013714")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x101381C", Offset = "0x101381C", VA = "0x101381C")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x101393C", Offset = "0x101393C", VA = "0x101393C")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x1013A50", Offset = "0x1013A50", VA = "0x1013A50")]
	public void SetAnchorHandle(ulong handle)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x1013AE4", Offset = "0x1013AE4", VA = "0x1013AE4")]
	public void ShowSaveIcon()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x10133C0", Offset = "0x10133C0", VA = "0x10133C0")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x10134D4", Offset = "0x10134D4", VA = "0x10134D4")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x1013B04", Offset = "0x1013B04", VA = "0x1013B04")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x1013C0C", Offset = "0x1013C0C", VA = "0x1013C0C")]
	public Anchor()
	{
	}
}
[Token(Token = "0x2000121")]
public class AnchorHelpers
{
	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera camera;

	[Token(Token = "0x1700005F")]
	private static Camera MainCamera
	{
		[Token(Token = "0x6000515")]
		[Address(RVA = "0x1013C14", Offset = "0x1013C14", VA = "0x1013C14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x1013CC0", Offset = "0x1013CC0", VA = "0x1013CC0")]
	public static OVRPlugin.Posef UnityWorldSpacePoseToTrackingSpacePose(Transform pose)
	{
		return default(OVRPlugin.Posef);
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x1013D3C", Offset = "0x1013D3C", VA = "0x1013D3C")]
	public static OVRPose TrackingSpacePoseToUnityWorldSpacePose(OVRPlugin.Posef pose)
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x1013DB0", Offset = "0x1013DB0", VA = "0x1013DB0")]
	public static OVRPose getTransformUnityWorldFromDevice()
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000519")]
	public static T ByteArrayToStruct<T>(byte[] bytes) where T : struct
	{
		return (T)null;
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x1013E08", Offset = "0x1013E08", VA = "0x1013E08")]
	public static string UuidToString(byte[] encodedMessage)
	{
		return null;
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x10140AC", Offset = "0x10140AC", VA = "0x10140AC")]
	public static byte[] StringToUuid(string str)
	{
		return null;
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x1014224", Offset = "0x1014224", VA = "0x1014224")]
	private static int GetHexVal(char hex)
	{
		return default(int);
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x10142E8", Offset = "0x10142E8", VA = "0x10142E8")]
	public AnchorHelpers()
	{
	}
}
[Token(Token = "0x2000122")]
public abstract class AnchorSession : MonoBehaviour
{
	[Token(Token = "0x2000123")]
	public enum StorageLocation
	{
		[Token(Token = "0x40008CF")]
		LOCAL
	}

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorSession Instance;

	[Token(Token = "0x40008C9")]
	public const ulong kInvalidHandle = ulong.MaxValue;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<ulong, Anchor> handleToAnchor;

	[Token(Token = "0x40008CB")]
	protected const int maxEvents = 5;

	[Token(Token = "0x40008CC")]
	protected const float eventPollingRate = 0.1f;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected GameObject anchorPrefab_;

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x10142F0", Offset = "0x10142F0", VA = "0x10142F0", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x101401C", Offset = "0x101401C", VA = "0x101401C")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x10143EC", Offset = "0x10143EC", VA = "0x10143EC")]
	protected static bool isFlagSet(uint bitset, uint flag)
	{
		return default(bool);
	}

	[Token(Token = "0x6000521")]
	public abstract ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor);

	[Token(Token = "0x6000522")]
	public abstract void DestroyAnchor(ulong anchorHandle);

	[Token(Token = "0x6000523")]
	public abstract void SaveAnchor(ulong anchorHandle, StorageLocation location);

	[Token(Token = "0x6000524")]
	public abstract void EraseAnchor(ulong anchorHandle);

	[Token(Token = "0x6000525")]
	public abstract void QueryAllLocalAnchors();

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x10143F8", Offset = "0x10143F8", VA = "0x10143F8")]
	protected AnchorSession()
	{
	}
}
[Token(Token = "0x2000124")]
public class AnchorSpawner : MonoBehaviour
{
	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorSpawner Instance;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject anchorPrefab_;

	[Token(Token = "0x17000060")]
	public GameObject AnchorPrefab
	{
		[Token(Token = "0x6000527")]
		[Address(RVA = "0x1014470", Offset = "0x1014470", VA = "0x1014470")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x1014478", Offset = "0x1014478", VA = "0x1014478")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x1014570", Offset = "0x1014570", VA = "0x1014570")]
	public void PlaceAnchorAtTransform(Transform transform)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x10147A4", Offset = "0x10147A4", VA = "0x10147A4")]
	public AnchorSpawner()
	{
	}
}
[Token(Token = "0x2000125")]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x2000126")]
	public enum AnchorMode
	{
		[Token(Token = "0x40008E5")]
		Create,
		[Token(Token = "0x40008E6")]
		Select
	}

	[Token(Token = "0x2000127")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject mainMenu_;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject createModeButton_;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject selectModeButton_;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform trackedDevice_;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform raycastOrigin_;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool drawRaycast_;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LineRenderer lineRenderer_;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor hoveredAnchor_;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Anchor selectedAnchor_;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnchorMode mode_;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<Button> buttonList_;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int menuIndex_;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Button selectedButton_;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject placementPreview_;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform anchorPlacementTransform_;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate primaryPressDelegate_;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isFocused_;

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x10147AC", Offset = "0x10147AC", VA = "0x10147AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x1014880", Offset = "0x1014880", VA = "0x1014880")]
	private void Start()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x10149CC", Offset = "0x10149CC", VA = "0x10149CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x1014E24", Offset = "0x1014E24", VA = "0x1014E24")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x1014E94", Offset = "0x1014E94", VA = "0x1014E94")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x101496C", Offset = "0x101496C", VA = "0x101496C")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x1014F14", Offset = "0x1014F14", VA = "0x1014F14")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x1014F94", Offset = "0x1014F94", VA = "0x1014F94")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x1014FB8", Offset = "0x1014FB8", VA = "0x1014FB8")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x1014EF0", Offset = "0x1014EF0", VA = "0x1014EF0")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x1014D14", Offset = "0x1014D14", VA = "0x1014D14")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x10150EC", Offset = "0x10150EC", VA = "0x10150EC")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x1015038", Offset = "0x1015038", VA = "0x1015038")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x1015058", Offset = "0x1015058", VA = "0x1015058")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x10151F4", Offset = "0x10151F4", VA = "0x10151F4")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x1015078", Offset = "0x1015078", VA = "0x1015078")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x10150B4", Offset = "0x10150B4", VA = "0x10150B4")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x1014AD8", Offset = "0x1014AD8", VA = "0x1014AD8")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x1015250", Offset = "0x1015250", VA = "0x1015250")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x101526C", Offset = "0x101526C", VA = "0x101526C")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x10152F4", Offset = "0x10152F4", VA = "0x10152F4")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x1015448", Offset = "0x1015448", VA = "0x1015448")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x2000128")]
public class SpatialAnchorSession : AnchorSession
{
	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<ulong, ulong> locateAnchorRequest;

	[Token(Token = "0x40008E8")]
	private const string numUuids = "numUuids";

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x11CB210", Offset = "0x11CB210", VA = "0x11CB210")]
	private void Start()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x11CB45C", Offset = "0x11CB45C", VA = "0x11CB45C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x11CB6A8", Offset = "0x11CB6A8", VA = "0x11CB6A8")]
	private void SpatialEntitySetComponentEnabled(ulong requestId, bool result, OVRPlugin.SpatialEntityComponentType componentType, ulong space)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x11CB8B8", Offset = "0x11CB8B8", VA = "0x11CB8B8")]
	private void SpatialAnchorSaved(ulong requestId, ulong space, bool result, OVRPlugin.SpatialEntityUuid uuid)
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x11CBD38", Offset = "0x11CBD38", VA = "0x11CBD38")]
	private void SpatialEntityStorageErase(ulong requestId, bool result, OVRPlugin.SpatialEntityUuid uuid, OVRPlugin.SpatialEntityStorageLocation location)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x11CBFF8", Offset = "0x11CBFF8", VA = "0x11CBFF8")]
	private void SpatialEntityQueryResults(ulong requestId, int numResults, OVRPlugin.SpatialEntityQueryResult[] results)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x11CC684", Offset = "0x11CC684", VA = "0x11CC684")]
	private void SpatialEntityQueryComplete(ulong requestId, bool result, int numFound)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x11CBC5C", Offset = "0x11CBC5C", VA = "0x11CBC5C")]
	private string GetUuidString(OVRPlugin.SpatialEntityUuid uuid)
	{
		return null;
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x11CC29C", Offset = "0x11CC29C", VA = "0x11CC29C")]
	private void tryEnableComponent(ulong anchorHandle, OVRPlugin.SpatialEntityComponentType type)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x11CB798", Offset = "0x11CB798", VA = "0x11CB798")]
	private void CreateAnchorGameobject(ulong anchorHandle)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x11CC884", Offset = "0x11CC884", VA = "0x11CC884")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x11CCB34", Offset = "0x11CCB34", VA = "0x11CCB34", Slot = "5")]
	public override ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x11CCCD4", Offset = "0x11CCCD4", VA = "0x11CCCD4", Slot = "6")]
	public override void DestroyAnchor(ulong anchorHandle)
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x11CCE90", Offset = "0x11CCE90", VA = "0x11CCE90", Slot = "8")]
	public override void EraseAnchor(ulong anchorHandle)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x11CD05C", Offset = "0x11CD05C", VA = "0x11CD05C")]
	public void QueryAnchorByUuid()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x11CD2E8", Offset = "0x11CD2E8", VA = "0x11CD2E8", Slot = "9")]
	public override void QueryAllLocalAnchors()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x11CD3D8", Offset = "0x11CD3D8", VA = "0x11CD3D8", Slot = "7")]
	public override void SaveAnchor(ulong anchorHandle, StorageLocation location)
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x11CD548", Offset = "0x11CD548", VA = "0x11CD548")]
	public SpatialAnchorSession()
	{
	}
}
[Token(Token = "0x2000129")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x200012A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884974", Offset = "0x884974")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x600055A")]
		[Address(RVA = "0x1D5169C", Offset = "0x1D5169C", VA = "0x1D5169C")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x1D516A4", Offset = "0x1D516A4", VA = "0x1D516A4")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x11D13C8", Offset = "0x11D13C8", VA = "0x11D13C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x11D15D4", Offset = "0x11D15D4", VA = "0x11D15D4")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x11D16E4", Offset = "0x11D16E4", VA = "0x11D16E4")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x200012B")]
public class HitEmitter_ : MonoBehaviour
{
	[Token(Token = "0x200012C")]
	public enum OWNER
	{
		[Token(Token = "0x40008F2")]
		PLAYER,
		[Token(Token = "0x40008F3")]
		AI
	}

	[Token(Token = "0x200012D")]
	public enum EMITER_TYPE
	{
		[Token(Token = "0x40008F5")]
		FIST,
		[Token(Token = "0x40008F6")]
		LEG,
		[Token(Token = "0x40008F7")]
		ELBOW,
		[Token(Token = "0x40008F8")]
		HEAD
	}

	[Token(Token = "0x200012E")]
	public enum EMITER_SIDE
	{
		[Token(Token = "0x40008FA")]
		LEFT,
		[Token(Token = "0x40008FB")]
		RIGHT
	}

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected float lastCollision;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public EMITER_TYPE type;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EMITER_SIDE side;

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xF76DD4", Offset = "0xF76DD4", VA = "0xF76DD4")]
	public HitEmitter_()
	{
	}
}
[Token(Token = "0x200012F")]
public class PlayerHitEmitter_ : HitEmitter_
{
	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rigidBody;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float speedBeforeCollision;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 velocity;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LinkedList<float> controllerMovementResultHistory;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collision col;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AIController aiController;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip[] audioclip;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AudioSource audioSource;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private AudioSource audioSourceBody;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float lastGloveCollision;

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x10E7D80", Offset = "0x10E7D80", VA = "0x10E7D80")]
	private void Awake()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x10E7E0C", Offset = "0x10E7E0C", VA = "0x10E7E0C")]
	private void Start()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x10E6A94", Offset = "0x10E6A94", VA = "0x10E6A94")]
	public void BlockOnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x10E6AB0", Offset = "0x10E6AB0", VA = "0x10E6AB0")]
	public void BlockOnCollisionStayExit(Collision collision)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x10E7EF4", Offset = "0x10E7EF4", VA = "0x10E7EF4")]
	private void CollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x10E8454", Offset = "0x10E8454", VA = "0x10E8454")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x10E8458", Offset = "0x10E8458", VA = "0x10E8458")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x10E845C", Offset = "0x10E845C", VA = "0x10E845C")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x10E82B4", Offset = "0x10E82B4", VA = "0x10E82B4")]
	private void UpdateLastCollisionTime(Collision collision)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x10E8384", Offset = "0x10E8384", VA = "0x10E8384")]
	private void Vibrate(float speed)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x10E8460", Offset = "0x10E8460", VA = "0x10E8460")]
	public float GetLastTimeGloveCollision()
	{
		return default(float);
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x10E8468", Offset = "0x10E8468", VA = "0x10E8468")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x10E8710", Offset = "0x10E8710", VA = "0x10E8710")]
	protected void UpdateVelocity()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x10E87DC", Offset = "0x10E87DC", VA = "0x10E87DC")]
	private void saveFloatToLinkedList(LinkedList<float> linkedList, float value, int maxListSize)
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x10E8894", Offset = "0x10E8894", VA = "0x10E8894")]
	public float GetSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x10E889C", Offset = "0x10E889C", VA = "0x10E889C")]
	private float smoothedControllerMovement(LinkedList<float> controllerMovementHistory)
	{
		return default(float);
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x10E89D0", Offset = "0x10E89D0", VA = "0x10E89D0")]
	public Vector3 getLastPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x10E89DC", Offset = "0x10E89DC", VA = "0x10E89DC")]
	public Vector3 GetRawVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x10E89E8", Offset = "0x10E89E8", VA = "0x10E89E8")]
	public Vector3 GetVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x10E8A44", Offset = "0x10E8A44", VA = "0x10E8A44")]
	public PlayerHitEmitter_()
	{
	}
}
[Token(Token = "0x2000130")]
public class PrintScreen : MonoBehaviour
{
	[Token(Token = "0x6000571")]
	[Address(RVA = "0x2057768", Offset = "0x2057768", VA = "0x2057768")]
	private void Update()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x20577CC", Offset = "0x20577CC", VA = "0x20577CC")]
	private void PrintS()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x2057834", Offset = "0x2057834", VA = "0x2057834")]
	public PrintScreen()
	{
	}
}
[Token(Token = "0x2000131")]
public class PromptScript : MonoBehaviour
{
	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh promptText;

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x205783C", Offset = "0x205783C", VA = "0x205783C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x20578EC", Offset = "0x20578EC", VA = "0x20578EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x205799C", Offset = "0x205799C", VA = "0x205799C")]
	public PromptScript()
	{
	}
}
[Token(Token = "0x2000132")]
public class RecenterPlayArea : MonoBehaviour
{
	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool play_area_auto;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public XROrigin rig;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform cameraOffset;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform CenterEyeAnchor;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool updateBoundey;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BoxingArea boxingArea;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh text;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float LastRecenterTime;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int times;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool paused;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float unpausedTime;

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x205CDFC", Offset = "0x205CDFC", VA = "0x205CDFC")]
	public void toBServiceBind(string s)
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x205CE00", Offset = "0x205CE00", VA = "0x205CE00")]
	private void BoolCallback(string value)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x205CE04", Offset = "0x205CE04", VA = "0x205CE04")]
	private void IntCallback(string value)
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x205CE08", Offset = "0x205CE08", VA = "0x205CE08")]
	private void LongCallback(string value)
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x205CE0C", Offset = "0x205CE0C", VA = "0x205CE0C")]
	private void StringCallback(string value)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x205CE10", Offset = "0x205CE10", VA = "0x205CE10")]
	private void Init()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x205CF00", Offset = "0x205CF00", VA = "0x205CF00")]
	public void Destroy()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x205CFF4", Offset = "0x205CFF4", VA = "0x205CFF4")]
	private void RecenterManual()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x205D540", Offset = "0x205D540", VA = "0x205D540")]
	private void TestFunction()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x205DFC8", Offset = "0x205DFC8", VA = "0x205DFC8")]
	public void BoundaryConfiguration()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x205EB98", Offset = "0x205EB98", VA = "0x205EB98")]
	public void getBoundaryInfo()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x205F4A0", Offset = "0x205F4A0", VA = "0x205F4A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x205E588", Offset = "0x205E588", VA = "0x205E588")]
	public void ConfiguredInitial()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x205D494", Offset = "0x205D494", VA = "0x205D494")]
	private void RecenterEvent(bool obj)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x205F550", Offset = "0x205F550", VA = "0x205F550")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x205D068", Offset = "0x205D068", VA = "0x205D068")]
	public void setPlayAreaAuto()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x205F588", Offset = "0x205F588", VA = "0x205F588")]
	private void TryToSetSquareBoundry()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x205E53C", Offset = "0x205E53C", VA = "0x205E53C")]
	private bool IsCircleBoundary()
	{
		return default(bool);
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x205FC78", Offset = "0x205FC78", VA = "0x205FC78")]
	public RecenterPlayArea()
	{
	}
}
[Token(Token = "0x2000133")]
public class AIPlayerController : MonoBehaviour
{
	[Token(Token = "0x2000134")]
	public enum PunchingHand
	{
		[Token(Token = "0x4000A2E")]
		Lead,
		[Token(Token = "0x4000A2F")]
		Rear,
		[Token(Token = "0x4000A30")]
		Any,
		[Token(Token = "0x4000A31")]
		Both,
		[Token(Token = "0x4000A32")]
		NONE
	}

	[Token(Token = "0x2000135")]
	public enum BodyPart
	{
		[Token(Token = "0x4000A34")]
		Head,
		[Token(Token = "0x4000A35")]
		Body,
		[Token(Token = "0x4000A36")]
		Left_Forearm,
		[Token(Token = "0x4000A37")]
		Right_Forearm,
		[Token(Token = "0x4000A38")]
		BodyNoAnimation,
		[Token(Token = "0x4000A39")]
		Nose,
		[Token(Token = "0x4000A3A")]
		Chin,
		[Token(Token = "0x4000A3B")]
		LeftCheek,
		[Token(Token = "0x4000A3C")]
		RightCheek,
		[Token(Token = "0x4000A3D")]
		LeftEyebrow,
		[Token(Token = "0x4000A3E")]
		RightEyebrow,
		[Token(Token = "0x4000A3F")]
		LeftUnderBrow,
		[Token(Token = "0x4000A40")]
		RightUnderBrow,
		[Token(Token = "0x4000A41")]
		LeftGlove,
		[Token(Token = "0x4000A42")]
		RightGlove
	}

	[Token(Token = "0x2000136")]
	public enum State
	{
		[Token(Token = "0x4000A44")]
		IDLE,
		[Token(Token = "0x4000A45")]
		CHASE,
		[Token(Token = "0x4000A46")]
		ATTACK,
		[Token(Token = "0x4000A47")]
		EVADE,
		[Token(Token = "0x4000A48")]
		REST,
		[Token(Token = "0x4000A49")]
		BREAK,
		[Token(Token = "0x4000A4A")]
		KNOCKDOWN,
		[Token(Token = "0x4000A4B")]
		KNOCKOUT,
		[Token(Token = "0x4000A4C")]
		SCOREANNOUNCEMENT,
		[Token(Token = "0x4000A4D")]
		RECOVERY
	}

	[Token(Token = "0x2000137")]
	private enum BlockType
	{
		[Token(Token = "0x4000A4F")]
		FRONT,
		[Token(Token = "0x4000A50")]
		SIDES,
		[Token(Token = "0x4000A51")]
		BODY_CENTER,
		[Token(Token = "0x4000A52")]
		BODY_LEFT,
		[Token(Token = "0x4000A53")]
		BODY_RIGHT
	}

	[Token(Token = "0x2000138")]
	public enum AiStrategyState
	{
		[Token(Token = "0x4000A55")]
		RISKY,
		[Token(Token = "0x4000A56")]
		NORMAL,
		[Token(Token = "0x4000A57")]
		SAFE
	}

	[Token(Token = "0x2000139")]
	private enum Action
	{
		[Token(Token = "0x4000A59")]
		PUNCH,
		[Token(Token = "0x4000A5A")]
		DODGE
	}

	[Token(Token = "0x200013A")]
	private enum KnockdownType
	{
		[Token(Token = "0x4000A5C")]
		Front,
		[Token(Token = "0x4000A5D")]
		Back
	}

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool dodging_ability;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8871C4", Offset = "0x8871C4")]
	public float direction_rotation_speed;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8871DC", Offset = "0x8871DC")]
	public float ai_speed_coefficient;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float punch_force_coefficient;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float range_coefficient;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance_coefficient;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float dodge_coefficient;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float punch_energy_cost;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float safe_strategy_chase_probability;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float normal_strategy_chase_probability;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float risky_strategy_chase_probability;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float dodge_probability;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float RISKY_HURT_LEVEL_BELOWE_ACCEPTABLE_FOR_CHASE_COEFFICIENT;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float NORMAL_HURT_LEVEL_BELOWE_ACCEPTABLE_FOR_CHASE_COEFFICIENT;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float SAFE_HURT_LEVEL_BELOWE_ACCEPTABLE_FOR_CHASE_COEFFICIENT;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float RISKY_HURT_LEVEL_BELOWE_ACCEPTABLE_FOR_ATTACK_COEFFICIENT;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float NORMAL_HURT_LEVEL_BELOWE_ACCEPTABLE_FOR_ATTACK_COEFFICIENT;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float SAFE_HURT_LEVEL_BELOWE_ACCEPTABLE_FOR_ATTACK_COEFFICIENT;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float RISKY_HURT_LEVEL_BELOWE_ACCEPTABLE_FOR_REST_COEFFICIENT;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float NORMAL_HURT_LEVEL_BELOWE_ACCEPTABLE_FOR_REST_COEFFICIENT;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float SAFE_HURT_LEVEL_BELOWE_ACCEPTABLE_FOR_REST_COEFFICIENT;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float RISKY_STRATEGY_MINIMAL_ENERGY_NEEDED_TO_CHASE_COEFFICIENT;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float NORMAL_STRATEGY_MINIMAL_ENERGY_NEEDED_TO_CHASE_COEFFICIENT;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float SAFE_STRATEGY_MINIMAL_ENERGY_NEEDED_TO_CHASE_COEFFICIENT;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float RISKY_STRATEGY_MINIMAL_ENERGY_NEEDED_TO_ATTACK_COEFFICIENT;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float NORMAL_STRATEGY_MINIMAL_ENERGY_NEEDED_TO_ATTACK_COEFFICIENT;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float SAFE_STRATEGY_MINIMAL_ENERGY_NEEDED_TO_ATTACK_COEFFICIENT;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float normal_strategy_min_punch_energy_coefficient;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float normal_strategy_min_dodge_energy_coefficient;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float safe_strategy_min_punch_energy_coefficient;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float safe_strategy_min_dodge_energy_coefficient;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float risky_strategy_min_punch_energy_coefficient;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float risky_strategy_min_dodge_energy_coefficient;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float distance_attack_probability;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float distance_back_attack_probability;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float distance_vs_distance_back_probability;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float punch_received_coefficient;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float JabWeight;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float CrossWeight;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float LeftUppercutWeight;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float RightUppercutWeight;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float LeftHookWeight;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float RightHookWeight;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float BodyPunchWeight;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float HeadPunchWeight;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float energy_regeneration_coefficient;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float hurt_regeneration_coefficient;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float knockdown_coefficient;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float punch_speed_min;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float punch_speed_max;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private PlayerManager player_manager;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform knockout_transform;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform cpu_player_head_transform;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform AiPlayer_scale;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float default_human_player_height;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float scale;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Cuts cuts;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private TargetMatchingManager target_maching;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private PlayerFist[] player_fist;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private BlockType current_block_type;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private HitSpot[] hit_spots;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private FullBodyBipedIK body_ik;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private PuppetMaster puppet_master;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private LookAtIK look_at_ik;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool no_response;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float STANDARD_ROTATION_SPEED;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float MAX_HURT_LEVEL;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float MAX_ENERGY_LEVEL;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float MINIMAL_ENERGY_NEEDED_TO_DDDGE;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float MINIMAL_ENERGY_NEEDED_TO_PUNCH;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float DODGE_ENERGY_COST;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float MIN_DISTANCE_TO_ATTACK;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float MAX_DISTANCE_TO_ATTACK;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float DISTANCE_TO_ATTACK;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float MIN_DISTANCE_TO_OPPONENT;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float MAX_DISTANCE_TO_OPPONENT;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float UPPERCUT_RANGE;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float CROSS_RANGE;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float HOOK_RANGE;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float MIN_PUNCHING_DISTANCE;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float MAX_PUNCHING_DISTANCE;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float REST_STATE_DISTANCE;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Transform referee_position;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Transform referee_head_position;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float rest_state_distance;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float min_punching_distance;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float max_punching_distance;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private float min_distance_to_opponent;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private float max_distance_to_attack;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private RingManager ring_manager;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Transform score_look;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public BoxingArea boxing_area;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Animator animator;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Transform opponent_transform;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Transform target_transform;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Transform custom_transform;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private float distance_to_opponent;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private Vector3 last_target_position;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Vector3 current_target_position;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private Vector3 opponent_position_delta;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Transform target_position;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private float current_look_at_weight;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private float look_at_target_timer;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private bool is_animation_weight;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private float target_look_at_target_weight;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private float current_look_at_target_weight;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	public float dist;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private Vector3 update_direction_delta;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	private Vector3 update_direction_delta_target;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private List<Punch> punch_list;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private Vector3 lead_fist_punch_target_position;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	private Vector3 rear_fist_punch_target_position;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private int human_player_knockdowns;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	private int ai_player_knockdowns;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private float ai_player_total_received_force;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	private float human_playert_total_received_force;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private bool is_punching;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	private PunchingHand punching_hand;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public State current_state;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private AiStrategyState current_ai_strategy_state;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private float hurt_level;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	private float total_hurt;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private float energy_level;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	private float max_energy_level;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public AIPlayerFist[] ai_player_fist;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private float lead_hand_IK_weight;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	private float rear_hand_IK_weight;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private bool lead_fist_stopped;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B1")]
	private bool rear_fist_stopped;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public Transform body_block_position;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public Transform head_block_position;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public Vector3 hipsOffset;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public AnimationCurve punch_received_curve;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public float unpin;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	public float force;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public Rigidbody bro;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public Rigidbody right_forearm_rb;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public Rigidbody head_rb;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private float hit_timer;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public ParticleSystem blood_particle;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public ParticleSystem sweat_particle;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public PunchAudio[] audio;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public AnimationCurve impact_audio_volume;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private Vector3 lead_ik_hit_pos;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
	private Vector3 rear_ik_hit_pos;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public bool is_blocking_lead;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x341")]
	public bool is_blocking_rear;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
	public float lead_stop_block;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public float rear_stop_block;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
	private Vector3 last_body_position;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	private Quaternion last_body_rotation;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private Vector3 position_delta;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
	private Quaternion rotation_delta;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
	private bool work_for_solver;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public float dodging_direction_max;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
	public float dodging_right_max;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public float dodging_down_max;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
	public float dodging_speed_min;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public float dodging_speed;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
	public float dodging_speed_max;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	private bool is_dodging;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
	public int dodging_direction;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public float dodging_weight;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
	public float dodging_down_weight;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	private float dodgeTimer;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
	private bool auto_back_dodge;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	private float dodging_speed_multiplier;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
	private bool hands_unpinned;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3BD")]
	private bool is_punching_lead;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3BE")]
	private bool is_punching_rear;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public Transform front_block_lead;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public Transform front_block_rear;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public Transform side_block_lead;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public Transform side_block_rear;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public Transform center_body_block_lead;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	public Transform center_body_block_rear;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public Transform left_body_block_lead;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	public Transform left_body_block_rear;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public Transform right_body_block_lead;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	public Transform right_body_block_rear;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	private Transform lead_fist_current_block_target;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	private Transform rear_fist_current_block_target;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public Transform center_fight;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	private Vector3 lead_fist_last_position;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x434")]
	private Vector3 rear_fist_last_position;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	private Quaternion lead_fist_last_rotation;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	private Quaternion rear_fist_last_rotation;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
	private Vector3 lead_current_block_position_target;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46C")]
	private Vector3 rear_current_block_position_target;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
	private bool rear_hand_back;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47C")]
	private float block_timer;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
	private float punch_break_timer;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
	public Transform head;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	public Vector3 lead;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49C")]
	public Vector3 rotlead;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
	private bool lead_blocked;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A9")]
	private bool rear_blocked;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4AC")]
	public Vector3 spine_angle_offset;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
	public Vector3 rotOffset;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C4")]
	public Vector3 gest_rotOffset_chest;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
	public Vector3 gest_rotOffset_spine;

	[Token(Token = "0x40009DD")]
	private const float MIN_PUNCH_VELOCITY = 3f;

	[Token(Token = "0x40009DE")]
	private const float OPPONENT_RANGE = 1.05f;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4DC")]
	private bool defend_blocking;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
	private float horizontal_axis_angle;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
	public Transform match_target_transform;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
	private bool knockout;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F4")]
	public float stunned_max_weight;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
	public float stunned_pain_sum_max_weight;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4FC")]
	public float max_alert_value;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
	public SkinnedMeshRenderer boxer_body;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
	private float blink_timer;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50C")]
	private float time_between_blink;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
	private float blink_speed;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x514")]
	private bool blink_close;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x515")]
	private bool closed_eyes;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x516")]
	private bool pain;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x517")]
	private bool angry;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
	private float pain_timer;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51C")]
	private float angry_timer;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
	private float current_stunned_weight;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x524")]
	private float current_angry_weight;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
	private float current_alert_weight;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52C")]
	private float current_blink_weight;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
	private float current_pain_weight;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x534")]
	private float target_pain_weight;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x538")]
	private float target_angry_weight;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53C")]
	private float target_alert_weight;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
	private float target_blink_weight;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x544")]
	public float max_angry_weight;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
	private bool blink_blendshape_active;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x549")]
	private bool pain_blendshape_active;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54A")]
	private bool alert_blendshape_active;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54B")]
	private bool angry_blendshape_active;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54C")]
	private bool stunned_blendshape_active;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54D")]
	private bool is_angry;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54E")]
	private bool is_pain;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54F")]
	private bool is_stunned;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
	private bool is_alert;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x554")]
	public int max_left_eyebrow_swollen;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
	private float current_left_eyebrow_swollen_weight;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55C")]
	public int max_right_eyebrow_swollen;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
	private float current_right_eyebrow_swollen_weight;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x564")]
	public int max_under_left_eye_swollen;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x568")]
	private float current_under_left_eye_swollen_weight;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56C")]
	public int max_under_right_eye_swollen;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
	private float current_under_right_eye_swollen_weight;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x574")]
	public int max_left_cheek_swollen;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x578")]
	private float current_left_cheek_swollen_weight;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x57C")]
	public int max_right_cheek_swollen;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
	private float current_right_cheek_swollen_weight;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x584")]
	public int max_upper_lip_swollen;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
	private float current_upper_lip_swollen_weight;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58C")]
	public int max_lower_lip_swollen;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
	private float current_lower_lip_swollen_weight;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x594")]
	public int alert_blendshape_index;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x598")]
	public int angry_blendshape_index;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59C")]
	public int blink_blendshape_index;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
	public int pain_blendshape_index;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A4")]
	public int stunned_blendshape_index;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A8")]
	public int tired_blendshape_index;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5AC")]
	public int left_eyebrow_swollen_blendshape_index;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B0")]
	public int right_eyebrow_swollen_blendshape_index;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B4")]
	public int under_left_eye_swollen_blendshape_index;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B8")]
	public int under_right_eye_swollen_blendshape_index;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5BC")]
	public int left_cheek_swollen_blendshape_index;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C0")]
	public int right_cheek_swollen_blendshape_index;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C4")]
	public int broken_nose_blendshape_index;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C8")]
	public int upper_lip_swollen_blendshape_index;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5CC")]
	public int lower_lip_swollen_blendshape_index;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D0")]
	private float knockdown_timer;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D4")]
	private float look_weight;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D8")]
	private bool is_knockdown;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D9")]
	private bool is_down;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5DC")]
	private KnockdownType knockdown_type;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E0")]
	private bool recovery_referee_direction;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E1")]
	private bool left_hand_punch;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E2")]
	private bool combination;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E4")]
	private float speed_x;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E8")]
	private float speed_z;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5EC")]
	private bool movement_blocked;

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x1CD6268", Offset = "0x1CD6268", VA = "0x1CD6268")]
	public Transform getCPUPlayerHeadTransform()
	{
		return null;
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x1CD6270", Offset = "0x1CD6270", VA = "0x1CD6270")]
	public Transform getKnockoutTransform()
	{
		return null;
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x1CD6278", Offset = "0x1CD6278", VA = "0x1CD6278")]
	public PunchingHand GetPunchingHand()
	{
		return default(PunchingHand);
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x1CD6290", Offset = "0x1CD6290", VA = "0x1CD6290")]
	public void StopPunching(PunchingHand hand)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x1CD62C4", Offset = "0x1CD62C4", VA = "0x1CD62C4")]
	public void OnKnockDownHumanPlayer()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x1CD63E0", Offset = "0x1CD63E0", VA = "0x1CD63E0")]
	public void OnReadyHumanPlayer()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x1CD63E8", Offset = "0x1CD63E8", VA = "0x1CD63E8")]
	public void OnReceivedHitByHumanPlayer(float force)
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x1CD63F8", Offset = "0x1CD63F8", VA = "0x1CD63F8")]
	public float GetTotalHurt()
	{
		return default(float);
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x1CD6400", Offset = "0x1CD6400", VA = "0x1CD6400")]
	private void HitTimer()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x1CD6440", Offset = "0x1CD6440", VA = "0x1CD6440")]
	public void setScale(float height)
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x1CD64A8", Offset = "0x1CD64A8", VA = "0x1CD64A8")]
	private void PunchVisualImpact(PlayerFist.PlayerFistSide fist, Collision collision, Vector3 position, float power, bool blood)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x1CD66A4", Offset = "0x1CD66A4", VA = "0x1CD66A4")]
	public void PunchReceived(PlayerFist.PlayerFistSide fist, Collision collision, BodyPart body_part, PunchReceiver punch_receiver, Vector3 collision_point, Vector3 collision_normal, Vector3 velocity, float angle, float speed, float damage = 0f, bool blood = false)
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x1CD79DC", Offset = "0x1CD79DC", VA = "0x1CD79DC")]
	private void PunchReceivedReset()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x1CD81BC", Offset = "0x1CD81BC", VA = "0x1CD81BC")]
	private void PunchAnimationReaction(BodyPart body_part, float vertical_angle, float horizontal_angle, float power)
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x1CD7F24", Offset = "0x1CD7F24", VA = "0x1CD7F24")]
	public bool isPunching(PunchingHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x1CD8478", Offset = "0x1CD8478", VA = "0x1CD8478")]
	public void HitReceivedByOpponent(PunchingHand hand, Vector3 hit_position, Vector3 ik_hit_pos)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x1CD8724", Offset = "0x1CD8724", VA = "0x1CD8724")]
	private void initPunchSettings()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x1CD8728", Offset = "0x1CD8728", VA = "0x1CD8728")]
	private void LoadData()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x1CD8B30", Offset = "0x1CD8B30", VA = "0x1CD8B30")]
	private void Awake()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x1CD8EE8", Offset = "0x1CD8EE8", VA = "0x1CD8EE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x1CD90F0", Offset = "0x1CD90F0", VA = "0x1CD90F0")]
	private Vector3 CalculatePunchPosition(Vector3 current_position, Vector3 target_position, float weight)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x1CD9118", Offset = "0x1CD9118", VA = "0x1CD9118")]
	private bool setDodge(float direction, float down, float time = 0f, bool auto = false, float speed_multiplier = 1f)
	{
		return default(bool);
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x1CD9168", Offset = "0x1CD9168", VA = "0x1CD9168")]
	private void changeDodgingTime(float time, bool end_dodge = false)
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x1CD9194", Offset = "0x1CD9194", VA = "0x1CD9194")]
	private void UpdateDodge()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x1CD93E0", Offset = "0x1CD93E0", VA = "0x1CD93E0")]
	private void UpdateDodgeTimer()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x1CD9420", Offset = "0x1CD9420", VA = "0x1CD9420")]
	private void UpdateDodgeIK()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x1CD9424", Offset = "0x1CD9424", VA = "0x1CD9424")]
	private void UpdateIK()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x1CDA9A0", Offset = "0x1CDA9A0", VA = "0x1CDA9A0")]
	public Transform GetCenterFight()
	{
		return null;
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x1CDA9A8", Offset = "0x1CDA9A8", VA = "0x1CDA9A8")]
	private void UpdateTimers()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x1CD83B8", Offset = "0x1CD83B8", VA = "0x1CD83B8")]
	private void setBlocking(BlockType type, float time, bool timer = true, bool left_hand = true, bool right_hand = true)
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x1CDAA30", Offset = "0x1CDAA30", VA = "0x1CDAA30")]
	private void stopBlocking(bool timer = true)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x1CD9070", Offset = "0x1CD9070", VA = "0x1CD9070")]
	private void setBlockType(BlockType type)
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x1CD9DCC", Offset = "0x1CD9DCC", VA = "0x1CD9DCC")]
	private void UpdateLeadHandBlockIK()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x1CDA220", Offset = "0x1CDA220", VA = "0x1CDA220")]
	private void UpdateRearHandBlockIK()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x1CD8E38", Offset = "0x1CD8E38", VA = "0x1CD8E38")]
	private void InitDistance()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x1CDAA50", Offset = "0x1CDAA50", VA = "0x1CDAA50")]
	private void OnAnimatorIK(int layerIndex)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x1CDAAD0", Offset = "0x1CDAAD0", VA = "0x1CDAAD0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x1CDAAD4", Offset = "0x1CDAAD4", VA = "0x1CDAAD4")]
	public bool IsInOpponentRange()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x1CDAAF4", Offset = "0x1CDAAF4", VA = "0x1CDAAF4")]
	private float CalculateDodgeStrength()
	{
		return default(float);
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x1CDAAFC", Offset = "0x1CDAAFC", VA = "0x1CDAAFC")]
	public void CheckThreats()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x1CDB2CC", Offset = "0x1CDB2CC", VA = "0x1CDB2CC")]
	public Cuts GetCuts()
	{
		return null;
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x1CDB2D4", Offset = "0x1CDB2D4", VA = "0x1CDB2D4")]
	public void setKnockout()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x1CDB2E0", Offset = "0x1CDB2E0", VA = "0x1CDB2E0")]
	public void setWinner()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x1CDB374", Offset = "0x1CDB374", VA = "0x1CDB374")]
	public void UpdateTest2()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x1CDB530", Offset = "0x1CDB530", VA = "0x1CDB530")]
	private void UpdateBlendShapes()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x1CDC1A4", Offset = "0x1CDC1A4", VA = "0x1CDC1A4")]
	public void setBrokenNose()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x1CDC1D0", Offset = "0x1CDC1D0", VA = "0x1CDC1D0")]
	public void leftEyebrowHitBlendShape(float power)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x1CDC214", Offset = "0x1CDC214", VA = "0x1CDC214")]
	public void rightEyebrowHitBlendShape(float power)
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x1CDC258", Offset = "0x1CDC258", VA = "0x1CDC258")]
	public void underLeftEyeHitBlendShape(float power)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x1CDC29C", Offset = "0x1CDC29C", VA = "0x1CDC29C")]
	public void underRightEyeHitBlendShape(float power)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x1CDC2E0", Offset = "0x1CDC2E0", VA = "0x1CDC2E0")]
	public void leftCheekHitBlendShape(float power)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x1CDC324", Offset = "0x1CDC324", VA = "0x1CDC324")]
	public void rightCheekHitBlendShape(float power)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x1CDC368", Offset = "0x1CDC368", VA = "0x1CDC368")]
	public void lowerHitBlendShape(float power)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x1CDC3AC", Offset = "0x1CDC3AC", VA = "0x1CDC3AC")]
	public void upperHitBlendShape(float power)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x1CDC3F0", Offset = "0x1CDC3F0", VA = "0x1CDC3F0")]
	private void CloseEyes()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x1CDB35C", Offset = "0x1CDB35C", VA = "0x1CDB35C")]
	private void OpenEyes()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x1CDBD84", Offset = "0x1CDBD84", VA = "0x1CDBD84")]
	private void UpdateBlinkBlendshape()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x1CDBE94", Offset = "0x1CDBE94", VA = "0x1CDBE94")]
	private void UpdatePainBlendshape()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x1CDC0F8", Offset = "0x1CDC0F8", VA = "0x1CDC0F8")]
	private void UpdateStunnedBlendshape()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x1CDC01C", Offset = "0x1CDC01C", VA = "0x1CDC01C")]
	private void UpdateAngryBlendshape()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x1CDBF70", Offset = "0x1CDBF70", VA = "0x1CDBF70")]
	private void UpdateAlertBlendshape()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x1CD7F38", Offset = "0x1CD7F38", VA = "0x1CD7F38")]
	private void StartPain(float pain_weight)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x1CDC414", Offset = "0x1CDC414", VA = "0x1CDC414")]
	private void StartAngry(float angry_weight)
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x1CDC408", Offset = "0x1CDC408", VA = "0x1CDC408")]
	private void StopAngry()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x1CD8E10", Offset = "0x1CD8E10", VA = "0x1CD8E10")]
	private void StartAlert()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x1CDC44C", Offset = "0x1CDC44C", VA = "0x1CDC44C")]
	private void StopAlert()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x1CDC454", Offset = "0x1CDC454", VA = "0x1CDC454")]
	private void Update()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x1CDC958", Offset = "0x1CDC958", VA = "0x1CDC958")]
	private void UpdateBlock()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x1CDCB48", Offset = "0x1CDCB48", VA = "0x1CDCB48")]
	public bool isHitReaction()
	{
		return default(bool);
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x1CDC738", Offset = "0x1CDC738", VA = "0x1CDC738")]
	private void UpdateAi()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x1CDCC10", Offset = "0x1CDCC10", VA = "0x1CDCC10")]
	private void setStrategyState(AiStrategyState strategy)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x1CDCBE8", Offset = "0x1CDCBE8", VA = "0x1CDCBE8")]
	private void UpdateStrategy()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x1CDCC18", Offset = "0x1CDCC18", VA = "0x1CDCC18")]
	private void UpdateSafeStateStrategy()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x1CDCCC4", Offset = "0x1CDCCC4", VA = "0x1CDCCC4")]
	private void UpdateNormalStateStrategy()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x1CDCDA4", Offset = "0x1CDCDA4", VA = "0x1CDCDA4")]
	private void UpdateRiskyStateStrategy()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x1CDCBAC", Offset = "0x1CDCBAC", VA = "0x1CDCBAC")]
	private void UpdateState()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x1CDB768", Offset = "0x1CDB768", VA = "0x1CDB768")]
	private float AttackDistance()
	{
		return default(float);
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x1CDD150", Offset = "0x1CDD150", VA = "0x1CDD150")]
	private bool InUppercutRange(PunchingHand hand, float distance)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x1CDD180", Offset = "0x1CDD180", VA = "0x1CDD180")]
	private bool InCrossRange(PunchingHand hand, float distance)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x1CDD1B0", Offset = "0x1CDD1B0", VA = "0x1CDD1B0")]
	private bool InHookRange(PunchingHand hand, float distance)
	{
		return default(bool);
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x1CDD1E0", Offset = "0x1CDD1E0", VA = "0x1CDD1E0")]
	private bool IsDistanceForAttack()
	{
		return default(bool);
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x1CDD218", Offset = "0x1CDD218", VA = "0x1CDD218")]
	private bool IsReadyToAttack()
	{
		return default(bool);
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x1CDD280", Offset = "0x1CDD280", VA = "0x1CDD280")]
	private bool IsHurtLevelBeloweAcceptable(State state)
	{
		return default(bool);
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x1CDD358", Offset = "0x1CDD358", VA = "0x1CDD358")]
	private bool IsEnoughEnergy(State state)
	{
		return default(bool);
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x1CDD360", Offset = "0x1CDD360", VA = "0x1CDD360")]
	public void onStartRound()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x1CDD36C", Offset = "0x1CDD36C", VA = "0x1CDD36C")]
	public void onStopRound()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x1CDD374", Offset = "0x1CDD374", VA = "0x1CDD374")]
	public void setPosition(Transform transform)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x1CD62D8", Offset = "0x1CD62D8", VA = "0x1CD62D8")]
	private void ChangeState(State state)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x1CDD40C", Offset = "0x1CDD40C", VA = "0x1CDD40C")]
	private bool IsEnoughEnergyFor(Action action)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x1CDD4B8", Offset = "0x1CDD4B8", VA = "0x1CDD4B8")]
	public void Recovered()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x1CDC678", Offset = "0x1CDC678", VA = "0x1CDC678")]
	private void GetUp()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x1CD7F84", Offset = "0x1CD7F84", VA = "0x1CD7F84")]
	private void Knockdown(BodyPart body_part, float normalized_power, float normalized_angle, float vertical_angle, float time = 5f)
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x1CDD4DC", Offset = "0x1CDD4DC", VA = "0x1CDD4DC")]
	private bool PunchConditionsAreMet(Punch.PunchMode mode)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x1CDD5BC", Offset = "0x1CDD5BC", VA = "0x1CDD5BC")]
	private bool IsReadyForPunch(Punch.PunchMode mode)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x1CDD5C4", Offset = "0x1CDD5C4", VA = "0x1CDD5C4")]
	private void PunchStart()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x1CDD0A0", Offset = "0x1CDD0A0", VA = "0x1CDD0A0")]
	private void UpdateScoreAnnouncementState()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x1CDD5C8", Offset = "0x1CDD5C8", VA = "0x1CDD5C8")]
	public void setVictory()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x1CDD620", Offset = "0x1CDD620", VA = "0x1CDD620")]
	public void setDefeat()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x1CDCE5C", Offset = "0x1CDCE5C", VA = "0x1CDCE5C")]
	private void UpdateIdleState()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x1CDD0A4", Offset = "0x1CDD0A4", VA = "0x1CDD0A4")]
	private void UpdateRecoveryState()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x1CDCE60", Offset = "0x1CDCE60", VA = "0x1CDCE60")]
	private void UpdateChaseState()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x1CDCF40", Offset = "0x1CDCF40", VA = "0x1CDCF40")]
	private void UpdateEvadeState()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x1CDCEC8", Offset = "0x1CDCEC8", VA = "0x1CDCEC8")]
	private void UpdateAttackState()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x1CDCFB4", Offset = "0x1CDCFB4", VA = "0x1CDCFB4")]
	private void UpdateRestState()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x1CDDF38", Offset = "0x1CDDF38", VA = "0x1CDDF38")]
	private bool TargetTooLow(float target_y)
	{
		return default(bool);
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x1CDDF80", Offset = "0x1CDDF80", VA = "0x1CDDF80")]
	public bool CanPunch(PunchingHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x1CDD83C", Offset = "0x1CDD83C", VA = "0x1CDD83C")]
	private bool TryToPunch(Punch.PunchMode mode)
	{
		return default(bool);
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x1CDDFAC", Offset = "0x1CDDFAC", VA = "0x1CDDFAC")]
	private void StartPunch(Punch punch)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x1CD8E1C", Offset = "0x1CD8E1C", VA = "0x1CD8E1C")]
	private void ChangeLookAtTarget(Transform target)
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x1CD8E28", Offset = "0x1CD8E28", VA = "0x1CD8E28")]
	private void ChangeLookAtTargetWeight(bool animation = true, float weight = 1f)
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x1CDA688", Offset = "0x1CDA688", VA = "0x1CDA688")]
	private void LookAtTarget()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x1CDB5A4", Offset = "0x1CDB5A4", VA = "0x1CDB5A4")]
	private void UpdateDirection()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x1CDD678", Offset = "0x1CDD678", VA = "0x1CDD678")]
	private void UpdateRefereeDirection()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x1CDEDFC", Offset = "0x1CDEDFC", VA = "0x1CDEDFC")]
	public void Combination()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x1CDB778", Offset = "0x1CDB778", VA = "0x1CDB778")]
	private void UpdateMovement(float target_distance_to_opponent)
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x1CDEE04", Offset = "0x1CDEE04", VA = "0x1CDEE04")]
	private void UpdateTest()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x1CDEE28", Offset = "0x1CDEE28", VA = "0x1CDEE28")]
	public AIPlayerController()
	{
	}
}
[Token(Token = "0x200013B")]
public class AIPlayerFist : MonoBehaviour
{
	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool is_colliding;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Collision c;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 last_target_position;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AIPlayerController controller;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AIPlayerController.PunchingHand hand;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform hit_position;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform Ik_hit_position;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AIPlayerFist fist;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PunchAudio punch_audio;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool is_active;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float activation_timer;

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x1012C74", Offset = "0x1012C74", VA = "0x1012C74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x1012CC8", Offset = "0x1012CC8", VA = "0x1012CC8")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x1012CD8", Offset = "0x1012CD8", VA = "0x1012CD8")]
	public void Deactivate(float time = 0.5f)
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x1012CE0", Offset = "0x1012CE0", VA = "0x1012CE0")]
	protected void FixedUpdate()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x1012D20", Offset = "0x1012D20", VA = "0x1012D20")]
	private void UpdateTimers()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x1012D60", Offset = "0x1012D60", VA = "0x1012D60")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x101326C", Offset = "0x101326C", VA = "0x101326C")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x1013270", Offset = "0x1013270", VA = "0x1013270")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x1012D70", Offset = "0x1012D70", VA = "0x1012D70")]
	private void DeactivateIfCollisionPunchReceiver(Collision collision)
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x1013294", Offset = "0x1013294", VA = "0x1013294")]
	public AIPlayerFist()
	{
	}
}
[Serializable]
[Token(Token = "0x200013C")]
[AttributeAttribute(Name = "PostProcessAttribute", RVA = "0x884984", Offset = "0x884984")]
public sealed class BlackBackgroundEffect : PostProcessEffectSettings
{
	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8871F4", Offset = "0x8871F4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8871F4", Offset = "0x8871F4")]
	public UnityEngine.Rendering.PostProcessing.FloatParameter value;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEngine.Rendering.PostProcessing.FloatParameter mask_value;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEngine.Rendering.PostProcessing.FloatParameter mask_spread;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEngine.Rendering.PostProcessing.TextureParameter mask_texture;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEngine.Rendering.PostProcessing.ColorParameter mask_color;

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x101F69C", Offset = "0x101F69C", VA = "0x101F69C")]
	public BlackBackgroundEffect()
	{
	}
}
[Token(Token = "0x200013D")]
public sealed class BlackBackgroundEffectRenderer : PostProcessEffectRenderer<BlackBackgroundEffect>
{
	[Token(Token = "0x600060A")]
	[Address(RVA = "0x101F7D0", Offset = "0x101F7D0", VA = "0x101F7D0", Slot = "8")]
	public override void Render(PostProcessRenderContext context)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x101FAF8", Offset = "0x101FAF8", VA = "0x101FAF8")]
	public BlackBackgroundEffectRenderer()
	{
	}
}
[Token(Token = "0x200013E")]
public class BoxingArea : MonoBehaviour
{
	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 size;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float width;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float length;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float half_width;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float half_length;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LineRenderer border;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] points;

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x10221E8", Offset = "0x10221E8", VA = "0x10221E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x10224A4", Offset = "0x10224A4", VA = "0x10224A4")]
	public void UpdateBoundry()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x1022764", Offset = "0x1022764", VA = "0x1022764")]
	public float getWidth()
	{
		return default(float);
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x102276C", Offset = "0x102276C", VA = "0x102276C")]
	public float getLength()
	{
		return default(float);
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x1022774", Offset = "0x1022774", VA = "0x1022774")]
	public float getHalfWidth()
	{
		return default(float);
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x102277C", Offset = "0x102277C", VA = "0x102277C")]
	public float getHalfLength()
	{
		return default(float);
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x1022784", Offset = "0x1022784", VA = "0x1022784")]
	public BoxingArea()
	{
	}
}
[Serializable]
[Token(Token = "0x200013F")]
[AttributeAttribute(Name = "PostProcessAttribute", RVA = "0x884A00", Offset = "0x884A00")]
public sealed class DoubleVision : PostProcessEffectSettings
{
	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEngine.Rendering.PostProcessing.FloatParameter lerp;

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xD1F32C", Offset = "0xD1F32C", VA = "0xD1F32C")]
	public DoubleVision()
	{
	}
}
[Token(Token = "0x2000140")]
public sealed class DoubleVisionRenderer : PostProcessEffectRenderer<DoubleVision>
{
	[Token(Token = "0x6000614")]
	[Address(RVA = "0xD1F684", Offset = "0xD1F684", VA = "0xD1F684", Slot = "8")]
	public override void Render(PostProcessRenderContext context)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xD1F81C", Offset = "0xD1F81C", VA = "0xD1F81C")]
	public DoubleVisionRenderer()
	{
	}
}
[Token(Token = "0x2000141")]
public class DoubleVisionEffect : MonoBehaviour
{
	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool double_vision_is_active;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material m_Material;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float level;

	[Token(Token = "0x17000061")]
	private Material material
	{
		[Token(Token = "0x6000617")]
		[Address(RVA = "0xD1F3D0", Offset = "0xD1F3D0", VA = "0xD1F3D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xD1F3A0", Offset = "0xD1F3A0", VA = "0xD1F3A0")]
	public void setDoubleVisionLevel(float level)
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xD1F4C0", Offset = "0xD1F4C0", VA = "0xD1F4C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xD1F4CC", Offset = "0xD1F4CC", VA = "0xD1F4CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xD1F578", Offset = "0xD1F578", VA = "0xD1F578")]
	private void OnRenderImage(RenderTexture src, RenderTexture dst)
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xD1F67C", Offset = "0xD1F67C", VA = "0xD1F67C")]
	public DoubleVisionEffect()
	{
	}
}
[Serializable]
[Token(Token = "0x2000142")]
[AttributeAttribute(Name = "PostProcessAttribute", RVA = "0x884A7C", Offset = "0x884A7C")]
public sealed class FadeCameraEffect : PostProcessEffectSettings
{
	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887248", Offset = "0x887248")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x887248", Offset = "0x887248")]
	public UnityEngine.Rendering.PostProcessing.FloatParameter blend;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEngine.Rendering.PostProcessing.FloatParameter fade_opacity;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEngine.Rendering.PostProcessing.ColorParameter fade_color;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEngine.Rendering.PostProcessing.FloatParameter start_fade_Time;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEngine.Rendering.PostProcessing.FloatParameter start_fade_Opacity;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEngine.Rendering.PostProcessing.FloatParameter end_fade_Opacity;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEngine.Rendering.PostProcessing.FloatParameter fade_duration;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEngine.Rendering.PostProcessing.BoolParameter isFading;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEngine.Rendering.PostProcessing.BoolParameter fade_material_is_active;

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x1344034", Offset = "0x1344034", VA = "0x1344034")]
	public void PunchEffectUpdate(bool is_active, float opacity)
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x1344064", Offset = "0x1344064", VA = "0x1344064")]
	public void SetColor(Color color)
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x1344084", Offset = "0x1344084", VA = "0x1344084")]
	public FadeCameraEffect()
	{
	}
}
[Token(Token = "0x2000143")]
public sealed class FadeCameraEffectRenderer : PostProcessEffectRenderer<FadeCameraEffect>
{
	[Token(Token = "0x600061F")]
	[Address(RVA = "0x134423C", Offset = "0x134423C", VA = "0x134423C", Slot = "8")]
	public override void Render(PostProcessRenderContext context)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x13444D4", Offset = "0x13444D4", VA = "0x13444D4")]
	public FadeCameraEffectRenderer()
	{
	}
}
[Token(Token = "0x2000144")]
public class GettingUp : StateMachineBehaviour
{
	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AIController ai_player_controller;

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x1349220", Offset = "0x1349220", VA = "0x1349220", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x1349288", Offset = "0x1349288", VA = "0x1349288", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x13492A4", Offset = "0x13492A4", VA = "0x13492A4")]
	public GettingUp()
	{
	}
}
[Serializable]
[Token(Token = "0x2000145")]
[AttributeAttribute(Name = "PostProcessAttribute", RVA = "0x884AF8", Offset = "0x884AF8")]
public sealed class Grayscale : PostProcessEffectSettings
{
	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88729C", Offset = "0x88729C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88729C", Offset = "0x88729C")]
	public UnityEngine.Rendering.PostProcessing.FloatParameter blend;

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x134962C", Offset = "0x134962C", VA = "0x134962C")]
	public Grayscale()
	{
	}
}
[Token(Token = "0x2000146")]
public sealed class GrayscaleRenderer : PostProcessEffectRenderer<Grayscale>
{
	[Token(Token = "0x6000625")]
	[Address(RVA = "0x13496A0", Offset = "0x13496A0", VA = "0x13496A0", Slot = "8")]
	public override void Render(PostProcessRenderContext context)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x1349838", Offset = "0x1349838", VA = "0x1349838")]
	public GrayscaleRenderer()
	{
	}
}
[Token(Token = "0x2000147")]
public class HitSpot : MonoBehaviour
{
	[Token(Token = "0x2000148")]
	public enum HitSpotType
	{
		[Token(Token = "0x4000A8F")]
		NOSE,
		[Token(Token = "0x4000A90")]
		CHIN,
		[Token(Token = "0x4000A91")]
		LEFT_SIDE,
		[Token(Token = "0x4000A92")]
		RIGHT_SIDE,
		[Token(Token = "0x4000A93")]
		LEFT_CHEEK,
		[Token(Token = "0x4000A94")]
		RIGHT_CHEEK,
		[Token(Token = "0x4000A95")]
		BODY,
		[Token(Token = "0x4000A96")]
		HEAD,
		[Token(Token = "0x4000A97")]
		NONE,
		[Token(Token = "0x4000A98")]
		BODY_LEFT,
		[Token(Token = "0x4000A99")]
		BODY_RIGHT,
		[Token(Token = "0x4000A9A")]
		BODY_CENTER
	}

	[Token(Token = "0x2000149")]
	public enum HitSpotLevel
	{
		[Token(Token = "0x4000A9C")]
		LOW,
		[Token(Token = "0x4000A9D")]
		HIGH
	}

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HitSpotLevel hitspot_level;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public HitSpotType hitspot_type;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float weight;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider[] block_collidrs;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int layer_mask;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HumanPlayer human_player;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float lastTimeBlocked;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] weights;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int playerId;

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xF772D4", Offset = "0xF772D4", VA = "0xF772D4")]
	public void IncreaseNextHSTCandidateWeight(HitSpotType type)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xF774D0", Offset = "0xF774D0", VA = "0xF774D0")]
	public void DecreaseNextHSTCandidateWeight(HitSpotType type)
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xF776CC", Offset = "0xF776CC", VA = "0xF776CC")]
	public float getNextHSTCandidateWeight(HitSpotType type)
	{
		return default(float);
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xF777D0", Offset = "0xF777D0", VA = "0xF777D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xF778E0", Offset = "0xF778E0", VA = "0xF778E0")]
	public void LoadData(int id)
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xF77AB8", Offset = "0xF77AB8", VA = "0xF77AB8")]
	public void SaveData(int id)
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xF77C88", Offset = "0xF77C88", VA = "0xF77C88")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xF77C90", Offset = "0xF77C90", VA = "0xF77C90")]
	public bool checkBlocking(float detection_radius, float detection_range)
	{
		return default(bool);
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xF77D74", Offset = "0xF77D74", VA = "0xF77D74")]
	public HitSpotType getHitSpotType()
	{
		return default(HitSpotType);
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xF77D7C", Offset = "0xF77D7C", VA = "0xF77D7C")]
	public void HitReceived(Collision collision, AIPlayerController.PunchingHand hand = AIPlayerController.PunchingHand.NONE)
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xF77F6C", Offset = "0xF77F6C", VA = "0xF77F6C")]
	public HitSpot()
	{
	}
}
[Token(Token = "0x200014A")]
public class HumanPlayer : MonoBehaviour
{
	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool training_mode;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float hit_received_coefficient;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerVisualEffectManager player_visual_effect_manager;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RingManager ring_manager;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float hurt_level;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float points;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float won_rounds;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float knockdown_timer;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float knockdowns_counter;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float knockdown_time;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float regeneration_speed;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool get_up;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool is_down;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float total_hurt;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool can_regenerate;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public FadeInOut fadeInOut;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float aiPunchPower;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Animator aiAnimator;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AIController AiController;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool knockout;

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xF787D0", Offset = "0xF787D0", VA = "0xF787D0")]
	public float GetHurtLevel()
	{
		return default(float);
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xF787D8", Offset = "0xF787D8", VA = "0xF787D8")]
	public void punchReceived(HitSpot type, float power)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xF787DC", Offset = "0xF787DC", VA = "0xF787DC")]
	private void PunchReceivedVisualEffect(float power)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xF787E0", Offset = "0xF787E0", VA = "0xF787E0")]
	public float getHurtLevel()
	{
		return default(float);
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xF787E8", Offset = "0xF787E8", VA = "0xF787E8")]
	public void updateRegeneration()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xF788E0", Offset = "0xF788E0", VA = "0xF788E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xF78A6C", Offset = "0xF78A6C", VA = "0xF78A6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xF78A70", Offset = "0xF78A70", VA = "0xF78A70")]
	public void setAiController(AIController controller)
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xF78AB0", Offset = "0xF78AB0", VA = "0xF78AB0")]
	public void setRegenerate()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xF78ABC", Offset = "0xF78ABC", VA = "0xF78ABC")]
	private void KnockDown()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xF78B8C", Offset = "0xF78B8C", VA = "0xF78B8C")]
	private void UpdateKnockDownTimer()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xF78BE0", Offset = "0xF78BE0", VA = "0xF78BE0")]
	private void Update()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xF78C94", Offset = "0xF78C94", VA = "0xF78C94")]
	private void VisualRegenerationUpdate()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xF78D34", Offset = "0xF78D34", VA = "0xF78D34")]
	public float GetTotalHurt()
	{
		return default(float);
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xF78D3C", Offset = "0xF78D3C", VA = "0xF78D3C")]
	private void PunchSimulation(float power)
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xF77DA0", Offset = "0xF77DA0", VA = "0xF77DA0")]
	public void hitReceived(Collision collision, HitSpot.HitSpotType type, AIPlayerController.PunchingHand hand = AIPlayerController.PunchingHand.NONE)
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xF78DF8", Offset = "0xF78DF8", VA = "0xF78DF8")]
	public void setKnockout()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xF78E04", Offset = "0xF78E04", VA = "0xF78E04")]
	public void Regenerate()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xF78E4C", Offset = "0xF78E4C", VA = "0xF78E4C")]
	public float GetHumanHurtLevel()
	{
		return default(float);
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xF78E54", Offset = "0xF78E54", VA = "0xF78E54")]
	public HumanPlayer()
	{
	}
}
[Token(Token = "0x200014B")]
public class PhysicsFollow : MonoBehaviour
{
	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speedLimit;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float sqrspeedLimit;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x10E6488", Offset = "0x10E6488", VA = "0x10E6488")]
	private void Start()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x10E6500", Offset = "0x10E6500", VA = "0x10E6500")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x10E6740", Offset = "0x10E6740", VA = "0x10E6740")]
	public PhysicsFollow()
	{
	}
}
[Token(Token = "0x200014C")]
public class PlayerVisualEffectManager : MonoBehaviour
{
	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HumanPlayer player;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float stunt_level;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float black_level;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hit_punch_effect;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float opacity;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float target_opacity;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float punch_effect_timer;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float speed;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float effect_pause_time;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool is_getting_up;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HitWhiteEffect white_effect;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OVRVignette vigette;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ColorAdjustments color_adjustments;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Volume effects;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private UnityEngine.Rendering.Universal.Vignette vignette;

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x20572E8", Offset = "0x20572E8", VA = "0x20572E8")]
	public void setBlackEffectMask(float mask_value)
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x2057320", Offset = "0x2057320", VA = "0x2057320")]
	public void setGrayscaleEffect(float value)
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x2057350", Offset = "0x2057350", VA = "0x2057350")]
	private void Start()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x20573E8", Offset = "0x20573E8", VA = "0x20573E8")]
	public void PlayPunchEffect()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x2057404", Offset = "0x2057404", VA = "0x2057404")]
	public void PlayNext()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x2057420", Offset = "0x2057420", VA = "0x2057420")]
	private void Update()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x205749C", Offset = "0x205749C", VA = "0x205749C")]
	public PlayerVisualEffectManager()
	{
	}
}
[Token(Token = "0x200014D")]
public class Punch
{
	[Token(Token = "0x200014E")]
	public enum PunchMode
	{
		[Token(Token = "0x4000ACD")]
		Normal,
		[Token(Token = "0x4000ACE")]
		Distance,
		[Token(Token = "0x4000ACF")]
		DistanceBack,
		[Token(Token = "0x4000AD0")]
		Combination
	}

	[Token(Token = "0x200014F")]
	public enum PunchType
	{
		[Token(Token = "0x4000AD2")]
		LeadJab,
		[Token(Token = "0x4000AD3")]
		Cross,
		[Token(Token = "0x4000AD4")]
		LeadHook,
		[Token(Token = "0x4000AD5")]
		RearHook,
		[Token(Token = "0x4000AD6")]
		LeadUppercut,
		[Token(Token = "0x4000AD7")]
		RearUppercut,
		[Token(Token = "0x4000AD8")]
		LeadJabLow,
		[Token(Token = "0x4000AD9")]
		RearCrossLow,
		[Token(Token = "0x4000ADA")]
		RearHookLow,
		[Token(Token = "0x4000ADB")]
		LeadHookLow,
		[Token(Token = "0x4000ADC")]
		None
	}

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private HitSpot hit_spot;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AIController player_controller;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PunchType _type;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private PunchMode _mode;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _weight;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _target;

	[Token(Token = "0x17000062")]
	public Vector3 target_position
	{
		[Token(Token = "0x6000650")]
		[Address(RVA = "0x20579A4", Offset = "0x20579A4", VA = "0x20579A4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000063")]
	public PunchType type
	{
		[Token(Token = "0x6000651")]
		[Address(RVA = "0x20579B0", Offset = "0x20579B0", VA = "0x20579B0")]
		get
		{
			return default(PunchType);
		}
	}

	[Token(Token = "0x17000064")]
	public HitSpot.HitSpotType HitSpotType
	{
		[Token(Token = "0x6000652")]
		[Address(RVA = "0x20579B8", Offset = "0x20579B8", VA = "0x20579B8")]
		get
		{
			return default(HitSpot.HitSpotType);
		}
	}

	[Token(Token = "0x17000065")]
	public PunchMode mode
	{
		[Token(Token = "0x6000653")]
		[Address(RVA = "0x20579D4", Offset = "0x20579D4", VA = "0x20579D4")]
		get
		{
			return default(PunchMode);
		}
	}

	[Token(Token = "0x17000066")]
	public float weight
	{
		[Token(Token = "0x6000654")]
		[Address(RVA = "0x20579DC", Offset = "0x20579DC", VA = "0x20579DC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000067")]
	public float distance
	{
		[Token(Token = "0x6000655")]
		[Address(RVA = "0x20579E4", Offset = "0x20579E4", VA = "0x20579E4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x2057AAC", Offset = "0x2057AAC", VA = "0x2057AAC")]
	public void AddWeight(float weight)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x2057ABC", Offset = "0x2057ABC", VA = "0x2057ABC")]
	public HitSpot GetHitSpot()
	{
		return null;
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x2057AC4", Offset = "0x2057AC4", VA = "0x2057AC4")]
	public Punch(PunchType type, PunchMode mode, HitSpot hit_spot, AIController player_controller)
	{
	}
}
[Token(Token = "0x2000150")]
public class PunchAnimatorController : StateMachineBehaviour
{
	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AIPlayerController.PunchingHand hand;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AIPlayerController ai_player_controller;

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x2057BE0", Offset = "0x2057BE0", VA = "0x2057BE0", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x2057C48", Offset = "0x2057C48", VA = "0x2057C48", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x2057C6C", Offset = "0x2057C6C", VA = "0x2057C6C")]
	public PunchAnimatorController()
	{
	}
}
[Token(Token = "0x2000151")]
public class PunchAudio : MonoBehaviour
{
	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource[] audio;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve impact_audio_volume;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float divider;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int size;

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x2057C74", Offset = "0x2057C74", VA = "0x2057C74")]
	private void Awake()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x2057CD8", Offset = "0x2057CD8", VA = "0x2057CD8")]
	public void PunchPlayAudio(Collision collision, float speed)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x2057E3C", Offset = "0x2057E3C", VA = "0x2057E3C")]
	public PunchAudio()
	{
	}
}
[Token(Token = "0x2000152")]
public class TargetMatchingManager : MonoBehaviour
{
	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool target_matched;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 matchPosition;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion matchRotation;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MatchTargetWeightMask weightMask;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float normalisedStartTime;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float normalisedEndTime;

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x11D16F4", Offset = "0x11D16F4", VA = "0x11D16F4")]
	public void MatchTarget(Vector3 matchPosition, Quaternion matchRotation, AvatarTarget target, MatchTargetWeightMask weightMask, float normalisedStartTime, float normalisedEndTime)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x11D1720", Offset = "0x11D1720", VA = "0x11D1720")]
	private void OnAnimatorIK(int layerIndex)
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x11D1848", Offset = "0x11D1848", VA = "0x11D1848")]
	public TargetMatchingManager()
	{
	}
}
[Token(Token = "0x2000153")]
public class Test : MonoBehaviour
{
	[Token(Token = "0x6000662")]
	[Address(RVA = "0xB2DDB8", Offset = "0xB2DDB8", VA = "0xB2DDB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xB2DE08", Offset = "0xB2DE08", VA = "0xB2DE08")]
	private void calc(float[] array)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xB2E090", Offset = "0xB2E090", VA = "0xB2E090")]
	private void Update()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xB2E094", Offset = "0xB2E094", VA = "0xB2E094")]
	public Test()
	{
	}
}
[Token(Token = "0x2000154")]
public class BoxingMachineController : MonoBehaviour
{
	[Token(Token = "0x2000155")]
	public enum BoxingMachinePadType
	{
		[Token(Token = "0x4000B0A")]
		Top_Left,
		[Token(Token = "0x4000B0B")]
		Top_Middle_Left,
		[Token(Token = "0x4000B0C")]
		Top_Middle_Right,
		[Token(Token = "0x4000B0D")]
		Top_Right,
		[Token(Token = "0x4000B0E")]
		Middle_Left,
		[Token(Token = "0x4000B0F")]
		Middle_Center,
		[Token(Token = "0x4000B10")]
		Middle_Right,
		[Token(Token = "0x4000B11")]
		Bottom_Left,
		[Token(Token = "0x4000B12")]
		Bottom_Center,
		[Token(Token = "0x4000B13")]
		Bottom_Right
	}

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool right_pad_up_bool;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool right_middle_pad_up_bool;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool left_middle_pad_up_bool;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private bool left_pad_up_bool;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool left_pad_down_bool;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool center_down_pad_bool;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	private bool right_pad_down_bool;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	private bool middle_right_pad_bool;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool middle_center_pad_bool;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool middle_left_pad_bool;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool[] target_list_bool;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int[] random_index_list;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int last_random;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BoxingMachinePad[] boxing_pad;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BoxingMachinePadType current_target;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PunchBagTarget.GloveSide[] hitting_hand;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int hitting_hand_index;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private PunchBagTarget.TargetType target_type;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject target;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform miss_target_position;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material target_material;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int target_counter;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture2D[] target_texture;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool miss_target;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BoxingMachineGameController boxing_machine_game_controller;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BoxingMachineHitAudio hit_audio;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool paused;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool hide;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float time_miss_target;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float miss_target_scale;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float miss_target_timer;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool game_on;

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x102278C", Offset = "0x102278C", VA = "0x102278C")]
	public void ReceiveHit(Collision collision, BoxingMachinePad pad, BoxingMachinePadType pad_type)
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x1022FFC", Offset = "0x1022FFC", VA = "0x1022FFC")]
	private void IncreaseScore()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x1023018", Offset = "0x1023018", VA = "0x1023018")]
	private void DecreaseScore()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x1022DFC", Offset = "0x1022DFC", VA = "0x1022DFC")]
	public void SetHittingHand(bool reset = false)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x1022E24", Offset = "0x1022E24", VA = "0x1022E24")]
	public void SetTargetTexture(PunchBagTarget.TargetType target, int index)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x1022C34", Offset = "0x1022C34", VA = "0x1022C34")]
	public void SetRandomTarget()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x1023034", Offset = "0x1023034", VA = "0x1023034")]
	private void Awake()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x1023088", Offset = "0x1023088", VA = "0x1023088")]
	private void LoadSettings()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x1023468", Offset = "0x1023468", VA = "0x1023468")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x10229D4", Offset = "0x10229D4", VA = "0x10229D4")]
	public void SetRandomTargetPosition()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x102346C", Offset = "0x102346C", VA = "0x102346C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x1023518", Offset = "0x1023518", VA = "0x1023518")]
	private void Update()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x1023560", Offset = "0x1023560", VA = "0x1023560")]
	public void StartGame()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x10234C4", Offset = "0x10234C4", VA = "0x10234C4")]
	public void StopGame()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x10235C4", Offset = "0x10235C4", VA = "0x10235C4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x102370C", Offset = "0x102370C", VA = "0x102370C")]
	public BoxingMachineController()
	{
	}
}
[Token(Token = "0x2000156")]
public class BoxingMachineFreeModeMenu : GameMenu
{
	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BoxingMachineGameController controller;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMenu mode_menu;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameMenu result_menu;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject mini_menu;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameButton back_button;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameButton start_button;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PauseButton stop_button;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMesh time_text;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMesh score_text;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int game_time;

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x13514AC", Offset = "0x13514AC", VA = "0x13514AC")]
	public void startGame(int time)
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x13515A4", Offset = "0x13515A4", VA = "0x13515A4")]
	public void restartGame()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x13515DC", Offset = "0x13515DC", VA = "0x13515DC")]
	public void stopGame()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x1351680", Offset = "0x1351680", VA = "0x1351680")]
	private void Awake()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x1351684", Offset = "0x1351684", VA = "0x1351684")]
	public void ShowTime(string time)
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x13516A0", Offset = "0x13516A0", VA = "0x13516A0")]
	public void ShowScore(int score)
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x13514E8", Offset = "0x13514E8", VA = "0x13514E8")]
	public void Clear()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x13516E4", Offset = "0x13516E4", VA = "0x13516E4", Slot = "5")]
	public override void PauseButtonPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x1351760", Offset = "0x1351760", VA = "0x1351760", Slot = "6")]
	public override void PauseButtonUnPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x13517C4", Offset = "0x13517C4", VA = "0x13517C4", Slot = "7")]
	public override void PressedFromScript(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x13518D0", Offset = "0x13518D0", VA = "0x13518D0", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x1351AE0", Offset = "0x1351AE0", VA = "0x1351AE0")]
	public void RestartGame()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x1351B70", Offset = "0x1351B70", VA = "0x1351B70")]
	public BoxingMachineFreeModeMenu()
	{
	}
}
[Token(Token = "0x2000157")]
public class BoxingMachineGameController : MonoBehaviour
{
	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int score;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float average_misses_per_minute;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float average_hits_per_minute;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float game_timer;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int missess;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int hits;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool start;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private HeavyBagTrainingController.TrainingMode training_mode;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timed_timer;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource boxing_bell;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BoxingMachineTimerMenu timer_menu;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BoxingMachineFreeModeMenu free_mode_menu;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BoxingMachineController controller;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BoxingMachineResultMenu result_menu;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isPaused;

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x1351B78", Offset = "0x1351B78", VA = "0x1351B78")]
	public HeavyBagTrainingController.TrainingMode GetTrainingMode()
	{
		return default(HeavyBagTrainingController.TrainingMode);
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x1351B80", Offset = "0x1351B80", VA = "0x1351B80")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x1351A94", Offset = "0x1351A94", VA = "0x1351A94")]
	public void StartGame(HeavyBagTrainingController.TrainingMode mode)
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x1351648", Offset = "0x1351648", VA = "0x1351648")]
	public void StopGame()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x1351B8C", Offset = "0x1351B8C", VA = "0x1351B8C")]
	private void showResults()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x1351554", Offset = "0x1351554", VA = "0x1351554")]
	public void StartGame(HeavyBagTrainingController.TrainingMode mode, float time)
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x1352774", Offset = "0x1352774", VA = "0x1352774")]
	public void IncreaseScore()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x1352790", Offset = "0x1352790", VA = "0x1352790")]
	public void DecreaseScore()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x1351C94", Offset = "0x1351C94", VA = "0x1351C94")]
	private void computeAverageMisesPerMinute()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x1351BD4", Offset = "0x1351BD4", VA = "0x1351BD4")]
	private void computeAverageHitsPerMinute()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x13527B0", Offset = "0x13527B0", VA = "0x13527B0")]
	private void UpdateTimedTimer()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x1352880", Offset = "0x1352880", VA = "0x1352880")]
	public void PauseGame(bool pasue)
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x135288C", Offset = "0x135288C", VA = "0x135288C")]
	public void UpdateTimer()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x13528C4", Offset = "0x13528C4", VA = "0x13528C4")]
	private string TimeToString(float time)
	{
		return null;
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x1352990", Offset = "0x1352990", VA = "0x1352990")]
	private void UpdateTimedMode()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x1352A44", Offset = "0x1352A44", VA = "0x1352A44")]
	public void UpdateFreeMode()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x1352A94", Offset = "0x1352A94", VA = "0x1352A94")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x1352B00", Offset = "0x1352B00", VA = "0x1352B00")]
	public BoxingMachineGameController()
	{
	}
}
[Token(Token = "0x2000158")]
public class BoxingMachineHitAudio : MonoBehaviour
{
	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource[] audio;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve impact_audio_volume;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem impact_particle;

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x1352B08", Offset = "0x1352B08", VA = "0x1352B08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x1352B5C", Offset = "0x1352B5C", VA = "0x1352B5C")]
	private void PunchVisualImpact(Collision collision, float power)
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x1352C94", Offset = "0x1352C94", VA = "0x1352C94")]
	public void PunchPlayAudio(Collision collision, float speed)
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x1352DC8", Offset = "0x1352DC8", VA = "0x1352DC8")]
	public BoxingMachineHitAudio()
	{
	}
}
[Token(Token = "0x2000159")]
public class BoxingMachineHowToPlayMenu : GameMenu
{
	[Token(Token = "0x200015A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884B74", Offset = "0x884B74")]
	private sealed class <FadeIn>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoxingMachineHowToPlayMenu <>4__this;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006A2")]
			[Address(RVA = "0xB378E0", Offset = "0xB378E0", VA = "0xB378E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006A4")]
			[Address(RVA = "0xB37928", Offset = "0xB37928", VA = "0xB37928", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0xB377D4", Offset = "0xB377D4", VA = "0xB377D4")]
		[DebuggerHidden]
		public <FadeIn>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0xB37800", Offset = "0xB37800", VA = "0xB37800", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0xB37804", Offset = "0xB37804", VA = "0xB37804", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0xB378E8", Offset = "0xB378E8", VA = "0xB378E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200015B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884B84", Offset = "0x884B84")]
	private sealed class <ExitMiniGame>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoxingMachineHowToPlayMenu <>4__this;

		[Token(Token = "0x1700006A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006A8")]
			[Address(RVA = "0xB37784", Offset = "0xB37784", VA = "0xB37784", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006AA")]
			[Address(RVA = "0xB377CC", Offset = "0xB377CC", VA = "0xB377CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0xB3760C", Offset = "0xB3760C", VA = "0xB3760C")]
		[DebuggerHidden]
		public <ExitMiniGame>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0xB37638", Offset = "0xB37638", VA = "0xB37638", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0xB3763C", Offset = "0xB3763C", VA = "0xB3763C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xB3778C", Offset = "0xB3778C", VA = "0xB3778C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu mode_selection;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float boxing_machine_height_prefs;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform boxing_machine_height;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameMenu main_menu;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform main_menu_player_center;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject boxing_machine;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject boxing_machine_static;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform player;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MainMenuManager main_menu_manager;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private FadeInOut fade_in_out;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool wait;

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x1352DD0", Offset = "0x1352DD0", VA = "0x1352DD0")]
	private void MovePlayer(Transform position)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x1352E20", Offset = "0x1352E20", VA = "0x1352E20")]
	private void Awake()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x1352F34", Offset = "0x1352F34", VA = "0x1352F34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x889910", Offset = "0x889910")]
	private IEnumerator FadeIn()
	{
		return null;
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x1352FA0", Offset = "0x1352FA0", VA = "0x1352FA0", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x13530A8", Offset = "0x13530A8", VA = "0x13530A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x889970", Offset = "0x889970")]
	private IEnumerator ExitMiniGame()
	{
		return null;
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x1353114", Offset = "0x1353114", VA = "0x1353114")]
	public BoxingMachineHowToPlayMenu()
	{
	}
}
[Token(Token = "0x200015C")]
public class BoxingMachinePad : MonoBehaviour
{
	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoxingMachineController controllelr;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target_center;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BoxingMachineController.BoxingMachinePadType type;

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x135311C", Offset = "0x135311C", VA = "0x135311C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x1353180", Offset = "0x1353180", VA = "0x1353180")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x13531A4", Offset = "0x13531A4", VA = "0x13531A4")]
	public void SetTarget(Transform target)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x1353204", Offset = "0x1353204", VA = "0x1353204")]
	public void SetMissTargetPosition(Transform target)
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x1353264", Offset = "0x1353264", VA = "0x1353264")]
	public BoxingMachinePad()
	{
	}
}
[Token(Token = "0x200015D")]
public class BoxingMachineResultMenu : GameMenu
{
	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh hits;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh misses;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh time;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh ahpm;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh ampm;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh score;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh best_hits;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMesh best_misses;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMesh best_time;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMesh best_ahpm;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMesh best_ampm;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMesh best_score;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BoxingMachineTimerMenu timer_menu;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BoxingMachineFreeModeMenu free_menu;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameMenu select_time_menu;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BoxingMachineGameController controller;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameMenu select_mode_menu;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh text;

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x1351D50", Offset = "0x1351D50", VA = "0x1351D50")]
	public void setResult(float time, int score, int hits, int misses, float ahpm, float ampm, HeavyBagTrainingController.TrainingMode mode)
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x135326C", Offset = "0x135326C", VA = "0x135326C")]
	private string TimeToString(float time)
	{
		return null;
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x1353338", Offset = "0x1353338", VA = "0x1353338", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x1353494", Offset = "0x1353494", VA = "0x1353494")]
	public BoxingMachineResultMenu()
	{
	}
}
[Token(Token = "0x200015E")]
public class BoxingMachineSelectModeMenu : GameMenu
{
	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu setting_menu;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMenu timed_mode;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameMenu free_mode;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameMenu how_to_play_menu;

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x135349C", Offset = "0x135349C", VA = "0x135349C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x13534A0", Offset = "0x13534A0", VA = "0x13534A0", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x135357C", Offset = "0x135357C", VA = "0x135357C")]
	public BoxingMachineSelectModeMenu()
	{
	}
}
[Token(Token = "0x200015F")]
public class BoxingMachineSettingMenu : GameMenu
{
	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu game_select_mode_menu;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMenu targets_menu;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform boxing_machine_height;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh height_cm;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh height_inch;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float boxing_machine_height_prefs;

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x1353584", Offset = "0x1353584", VA = "0x1353584")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x13535E4", Offset = "0x13535E4", VA = "0x13535E4")]
	private void updateTextHeight()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x135370C", Offset = "0x135370C", VA = "0x135370C", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x13538D4", Offset = "0x13538D4", VA = "0x13538D4")]
	public BoxingMachineSettingMenu()
	{
	}
}
[Token(Token = "0x2000160")]
public class BoxingMachineTimeSelectionMenu : GameMenu
{
	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform selection_mark;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BoxingMachineTimerMenu timer_menu;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameMenu select_mode;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 one_min;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 two_min;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 five_min;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 ten_min;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int min;

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x13538DC", Offset = "0x13538DC", VA = "0x13538DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x13538E8", Offset = "0x13538E8", VA = "0x13538E8", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x1353B38", Offset = "0x1353B38", VA = "0x1353B38")]
	public BoxingMachineTimeSelectionMenu()
	{
	}
}
[Token(Token = "0x2000161")]
public class BoxingMachineTimerMenu : GameMenu
{
	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BoxingMachineGameController controller;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMenu time_mode;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh time_text;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh score_text;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int game_time;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BoxingMachineResultMenu result_menu;

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x1353B40", Offset = "0x1353B40", VA = "0x1353B40")]
	private void Start()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x1353AFC", Offset = "0x1353AFC", VA = "0x1353AFC")]
	public void startGame(int time)
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x135281C", Offset = "0x135281C", VA = "0x135281C")]
	public void stopGame()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x1353C04", Offset = "0x1353C04", VA = "0x1353C04")]
	public void ShowScore(float score)
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x135345C", Offset = "0x135345C", VA = "0x135345C")]
	public void restartGame()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x13529E4", Offset = "0x13529E4", VA = "0x13529E4")]
	public void ShowTime(string time)
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x1352A00", Offset = "0x1352A00", VA = "0x1352A00")]
	public void ShowScore(int score)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x1353B98", Offset = "0x1353B98", VA = "0x1353B98")]
	public void Clear()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x1353C64", Offset = "0x1353C64", VA = "0x1353C64", Slot = "5")]
	public override void PauseButtonPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x1353CE0", Offset = "0x1353CE0", VA = "0x1353CE0", Slot = "6")]
	public override void PauseButtonUnPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x1353D44", Offset = "0x1353D44", VA = "0x1353D44", Slot = "7")]
	public override void PressedFromScript(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x1353DE8", Offset = "0x1353DE8", VA = "0x1353DE8", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x1353E94", Offset = "0x1353E94", VA = "0x1353E94")]
	public BoxingMachineTimerMenu()
	{
	}
}
[Token(Token = "0x2000162")]
public class CoachFocusPadsController : MonoBehaviour
{
	[Token(Token = "0x2000163")]
	public enum BlockType
	{
		[Token(Token = "0x4000BDE")]
		FrontBlock,
		[Token(Token = "0x4000BDF")]
		SideBlock,
		[Token(Token = "0x4000BE0")]
		BodyCenterBlock,
		[Token(Token = "0x4000BE1")]
		BodyLeftBlock,
		[Token(Token = "0x4000BE2")]
		BodyRightBlock,
		[Token(Token = "0x4000BE3")]
		Transition,
		[Token(Token = "0x4000BE4")]
		Hit
	}

	[Token(Token = "0x2000164")]
	public enum BlockHand
	{
		[Token(Token = "0x4000BE6")]
		Left,
		[Token(Token = "0x4000BE7")]
		Right,
		[Token(Token = "0x4000BE8")]
		Both
	}

	[Token(Token = "0x2000165")]
	private enum FocusPadPosition
	{
		[Token(Token = "0x4000BEA")]
		LeftSide,
		[Token(Token = "0x4000BEB")]
		RightSide,
		[Token(Token = "0x4000BEC")]
		Front,
		[Token(Token = "0x4000BED")]
		LeftFront,
		[Token(Token = "0x4000BEE")]
		RightFront,
		[Token(Token = "0x4000BEF")]
		LeftDown,
		[Token(Token = "0x4000BF0")]
		RightDown,
		[Token(Token = "0x4000BF1")]
		Neutral
	}

	[Token(Token = "0x2000166")]
	private enum FocusPad
	{
		[Token(Token = "0x4000BF3")]
		Left,
		[Token(Token = "0x4000BF4")]
		Right,
		[Token(Token = "0x4000BF5")]
		Both
	}

	[Token(Token = "0x2000167")]
	private class Hook
	{
		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Animator animator;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 axis;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 spinde_delta;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 max_angle;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 min_angle;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 delta_angle;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float min_y_pos;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float normal_y_pos;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float max_y_pos;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float min_max_distance;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float min_normal_distance;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float max_normal_distance;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float start_ik;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float end_ik;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform spine_bone;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float min_pos_reach;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float max_pos_reach;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float normal_pos_reach;

		[Token(Token = "0x1700006C")]
		private float percent
		{
			[Token(Token = "0x60006EB")]
			[Address(RVA = "0xB38A84", Offset = "0xB38A84", VA = "0xB38A84")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xB38978", Offset = "0xB38978", VA = "0xB38978")]
		public Hook(Animator animator, Vector3 axis, Vector3 max_angle, Vector3 min_angle, float min_y_pos, float max_y_pos, float normal_y_pos, float min_pos_reach, float max_pos_reach, float normal_pos_reach, float shorter_from_max, float start_ik, float end_ik)
		{
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xB38B3C", Offset = "0xB38B3C", VA = "0xB38B3C")]
		public void calculateReach(float target_y_position, Vector3 pos)
		{
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0xB38B40", Offset = "0xB38B40", VA = "0xB38B40")]
		public void calculateTarget(float target_y_position)
		{
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0xB38C18", Offset = "0xB38C18", VA = "0xB38C18")]
		public void UpdatePunchIk()
		{
		}
	}

	[Token(Token = "0x2000168")]
	private class Punch
	{
		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Animator animator;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float IKprecission;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float start_ik;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float end_ik;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 target;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string name;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AvatarIKGoal hand;

		[Token(Token = "0x1700006D")]
		private float percentComplete
		{
			[Token(Token = "0x60006F0")]
			[Address(RVA = "0xB38D60", Offset = "0xB38D60", VA = "0xB38D60")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0xB38CE0", Offset = "0xB38CE0", VA = "0xB38CE0")]
		public Punch(string animation_name, Animator animator, AvatarIKGoal hand, Vector3 target, float start_ik, float end_ik, float ik_precission = 1f)
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0xB38E10", Offset = "0xB38E10", VA = "0xB38E10")]
		public void UpdateIk(bool is_animation, Vector3 position)
		{
		}
	}

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PuppetMaster puppet;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform focus_pads_positions;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BlockType left_hand_block_type;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public BlockType right_hand_block_type;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BlockType left_hand_last_frame_block_type;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private BlockType right_hand_last_frame_block_type;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private BlockType left_hand_block_type_before_current;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private BlockType right_hand_block_type_before_current;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 front_block_left_shoulder_rotation_offset;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 front_block_right_shoulder_rotation_offset;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 side_block_left_shoulder_rotation_offset;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 side_block_right_shoulder_rotation_offset;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 body_block_left_shoulder_rotation_offset;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 body_block_right_shoulder_rotation_offset;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3 body_block_side_left_left_shoulder_rotation_offset;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Vector3 body_block_side_left_right_shoulder_rotation_offset;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector3 body_block_side_right_left_shoulder_rotation_offset;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Vector3 body_block_side_right_right_shoulder_rotation_offset;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform jab_target;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform cross_target;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform left_hand_side;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform right_hand_side;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform left_elbow_side;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform right_elbow_side;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform left_hand_front;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform right_hand_front;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform left_elbow_front;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Transform right_elbow_front;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Transform left_hand_down;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Transform right_hand_down;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Transform left_elbow_down;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Transform right_elbow_down;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Transform left_hand_body_block_side_left;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Transform right_hand_body_block_side_left;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Transform left_elbow_body_block_side_left;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Transform right_elbow_body_block_side_left;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Transform left_hand_neutral;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Transform right_hand_neutral;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Transform left_elbow_neutral;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Transform right_elbow_neutral;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Vector3 start_block_left_hand_position;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private Vector3 start_block_right_hand_position;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Vector3 start_block_right_shoulder_rotation;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private Vector3 start_block_left_shoulder_rotation;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Vector3 start_block_left_elbow_position;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private Vector3 start_block_right_elbow_position;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Vector3 target_block_left_hand_position;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private Vector3 target_block_right_hand_position;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private Vector3 target_block_left_shoudler_rotation;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private Vector3 target_block_right_shoudler_rotation;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private Vector3 target_block_left_elbow_position;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private Vector3 target_block_right_elbow_position;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Vector3 current_block_left_hand_position;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private Vector3 current_block_right_hand_position;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Vector3 current_block_left_shoudler_rotation;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private Vector3 current_block_right_shoudler_rotation;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Vector3 current_block_left_elbow_position;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	private Vector3 current_block_right_elbow_position;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Quaternion start_block_left_hand_rotation;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private Quaternion start_block_right_hand_rotation;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private Quaternion target_block_left_hand_rotation;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private Quaternion target_block_right_hand_rotation;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private Quaternion current_block_left_hand_rotation;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private Quaternion current_block_right_hand_rotation;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public bool is_blocking_left;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A9")]
	private bool is_blocking_right;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	public float time_left;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private float time_right;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	private float look_weight;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public Transform look_at_target;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private Vector3 punch_target;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private Muscle[] left_arm;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private Muscle[] right_arm;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8872F0", Offset = "0x8872F0")]
	public float value_left;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	public float value_right;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public float weight_left;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	public float weight_right;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public AnimationCurve curve;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public float speed;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	private bool transition_left;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FD")]
	private bool transition_right;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private BlockType next_block_left_hand;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	private BlockType next_block_right_hand;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private FocusPadPosition focus_pad_position;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	private FocusPad focus_pad;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private List<FocusPadPosition> random_focus_pad_position_list;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	private FocusPadPosition last_random_focus_pad_position_list;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	private List<FocusPad> random_focus_pad;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private int position_counter;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
	public bool random_punch;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32D")]
	private bool last_move_punch;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32E")]
	private bool left_focus_pad_position_transition;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32F")]
	private bool right_focus_pad_position_transition;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private Punch jab;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	private Punch cross;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private Hook left_hook;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	private Hook right_hook;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	private Vector3 left_hand_hit_position;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
	private Quaternion left_hand_hit_rotation;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
	private Vector3 right_hand_hit_position;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	private Quaternion right_hand_hit_rotation;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	private Vector3 right_elbow_hit_position;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
	private Vector3 left_elbow_hit_position;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	private float position_timer;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
	private float random_timer_dodge;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	private float random_timer_block;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
	public Vector3 delta;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public bool back_left;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B9")]
	public bool back_right;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public Transform hand;

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x1362DD0", Offset = "0x1362DD0", VA = "0x1362DD0")]
	private void InitIkPunches()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x1363074", Offset = "0x1363074", VA = "0x1363074")]
	private void PunchIkUpdate()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x1363204", Offset = "0x1363204", VA = "0x1363204")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x136349C", Offset = "0x136349C", VA = "0x136349C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x136359C", Offset = "0x136359C", VA = "0x136359C")]
	private void updatePositionTimer()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x13635DC", Offset = "0x13635DC", VA = "0x13635DC")]
	public void PunchReceived(CoachPunchReceiver.CoachPunchReceiverType receiver_type, CoachPunchReceiver punch_receiver, Collision collision, Vector3 velocity, float angle, float speed, float angle_velocity_to_normal, float angle_collision_to_normal)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x13636E0", Offset = "0x13636E0", VA = "0x13636E0")]
	private void UpdateLookAt()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x13637FC", Offset = "0x13637FC", VA = "0x13637FC")]
	public void setBlocking(BlockType type, BlockHand hand, bool hit = false)
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x1363A5C", Offset = "0x1363A5C", VA = "0x1363A5C")]
	public void stopBlocking(BlockHand hand = BlockHand.Both)
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x1363904", Offset = "0x1363904", VA = "0x1363904")]
	public void setBlockLeft(BlockType block_type)
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x13639B0", Offset = "0x13639B0", VA = "0x13639B0")]
	public void setBlockRight(BlockType block_type)
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x1363AB4", Offset = "0x1363AB4", VA = "0x1363AB4")]
	private void stopBlockingLeft()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x1363ACC", Offset = "0x1363ACC", VA = "0x1363ACC")]
	private void stopBlockingRight()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x1363AE4", Offset = "0x1363AE4", VA = "0x1363AE4")]
	private void nextBlockLeft(BlockType block_type, bool transition)
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x1363B14", Offset = "0x1363B14", VA = "0x1363B14")]
	private void nextBlockRight(BlockType block_type, bool transition)
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x1363B44", Offset = "0x1363B44", VA = "0x1363B44")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x136485C", Offset = "0x136485C", VA = "0x136485C")]
	private void punchIkRegulation(Vector3 delta_angle, Vector3 axis)
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x136450C", Offset = "0x136450C", VA = "0x136450C")]
	private void UpdateDirection()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x1363CBC", Offset = "0x1363CBC", VA = "0x1363CBC")]
	private void NextPosition()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x13646D0", Offset = "0x13646D0", VA = "0x13646D0")]
	private int ChooseRandomFocusPadPositions()
	{
		return default(int);
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x136490C", Offset = "0x136490C", VA = "0x136490C")]
	public void setLeftArmMappingWeight(float weight)
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x13649A0", Offset = "0x13649A0", VA = "0x13649A0")]
	public void setRightArmMappingWeight(float weight)
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x1364A34", Offset = "0x1364A34", VA = "0x1364A34")]
	private void updateTargetLeft()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x1364F48", Offset = "0x1364F48", VA = "0x1364F48")]
	private void updateTargetRight()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x1364F14", Offset = "0x1364F14", VA = "0x1364F14")]
	private void LeftTransition()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x1365430", Offset = "0x1365430", VA = "0x1365430")]
	private void RightTransition()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x1365464", Offset = "0x1365464", VA = "0x1365464")]
	private void OnAnimatorIK(int layerIndex)
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x1365B7C", Offset = "0x1365B7C", VA = "0x1365B7C")]
	public void PlayerHeadCollision(global::FocusPad.FocusPadType type, Vector3 position)
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x13656F0", Offset = "0x13656F0", VA = "0x13656F0")]
	private void LeftHandUpdateBlockTransition()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x1365930", Offset = "0x1365930", VA = "0x1365930")]
	private void RightHandUpdateBlockTransition()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x1365D90", Offset = "0x1365D90", VA = "0x1365D90")]
	public CoachFocusPadsController()
	{
	}
}
[Token(Token = "0x2000169")]
public class CoachPunchReceiver : MonoBehaviour
{
	[Token(Token = "0x200016A")]
	public enum CoachPunchReceiverType
	{
		[Token(Token = "0x4000C14")]
		FocusPadTop,
		[Token(Token = "0x4000C15")]
		FocusPadBottom
	}

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CoachPunchReceiverType coach_punch_receiver_type;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CoachFocusPadsController coach_controller;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform coach;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xD0F95C", Offset = "0xD0F95C", VA = "0xD0F95C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xD0FA10", Offset = "0xD0FA10", VA = "0xD0FA10")]
	public Rigidbody GetRigidbody()
	{
		return null;
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xD0FA18", Offset = "0xD0FA18", VA = "0xD0FA18")]
	public CoachPunchReceiverType getBodyPartType()
	{
		return default(CoachPunchReceiverType);
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xD0FA20", Offset = "0xD0FA20", VA = "0xD0FA20")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xD0FE70", Offset = "0xD0FE70", VA = "0xD0FE70")]
	public CoachPunchReceiver()
	{
	}
}
[Token(Token = "0x200016B")]
public class FocusPad : MonoBehaviour
{
	[Token(Token = "0x200016C")]
	public enum FocusPadType
	{
		[Token(Token = "0x4000C19")]
		Left,
		[Token(Token = "0x4000C1A")]
		Right
	}

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FocusPadType focus_pad_type;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CoachFocusPadsController coach_controller;

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x134893C", Offset = "0x134893C", VA = "0x134893C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x1348940", Offset = "0x1348940", VA = "0x1348940")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x1348A18", Offset = "0x1348A18", VA = "0x1348A18")]
	private void Update()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x1348A1C", Offset = "0x1348A1C", VA = "0x1348A1C")]
	public FocusPad()
	{
	}
}
[Token(Token = "0x200016D")]
public class FocusPadCenter : MonoBehaviour
{
	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x1348A24", Offset = "0x1348A24", VA = "0x1348A24")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x1348A98", Offset = "0x1348A98", VA = "0x1348A98")]
	public FocusPadCenter()
	{
	}
}
[Token(Token = "0x200016E")]
public class PlayerFistTrainingMode : PunchEmitter
{
	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform target;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool is_colliding;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collision c;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Rigidbody rb;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 last_target_position;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float speed;

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x10E7A00", Offset = "0x10E7A00", VA = "0x10E7A00")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x10E7A68", Offset = "0x10E7A68", VA = "0x10E7A68")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x10E7A78", Offset = "0x10E7A78", VA = "0x10E7A78")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x10E7B6C", Offset = "0x10E7B6C", VA = "0x10E7B6C")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x10E7A7C", Offset = "0x10E7A7C", VA = "0x10E7A7C")]
	private void DeactivateIfCollisionPunchReceiver(Collision collision)
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x10E7B90", Offset = "0x10E7B90", VA = "0x10E7B90")]
	private new void FixedUpdate()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x10E7D78", Offset = "0x10E7D78", VA = "0x10E7D78")]
	public PlayerFistTrainingMode()
	{
	}
}
[Token(Token = "0x200016F")]
public class CoachAI : MonoBehaviour
{
	[Token(Token = "0x2000170")]
	private enum BlockType
	{
		[Token(Token = "0x4000C8F")]
		FRONT,
		[Token(Token = "0x4000C90")]
		SIDES,
		[Token(Token = "0x4000C91")]
		CENTER,
		[Token(Token = "0x4000C92")]
		REST
	}

	[Token(Token = "0x2000171")]
	public enum BlockHand
	{
		[Token(Token = "0x4000C94")]
		LEFT,
		[Token(Token = "0x4000C95")]
		RIGHT,
		[Token(Token = "0x4000C96")]
		BOTH
	}

	[Token(Token = "0x2000172")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884B94", Offset = "0x884B94")]
	private sealed class <HitReceivedLeftDelay>d__116 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoachAI <>4__this;

		[Token(Token = "0x1700006E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000731")]
			[Address(RVA = "0xB384CC", Offset = "0xB384CC", VA = "0xB384CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000733")]
			[Address(RVA = "0xB38514", Offset = "0xB38514", VA = "0xB38514", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0xB38370", Offset = "0xB38370", VA = "0xB38370")]
		[DebuggerHidden]
		public <HitReceivedLeftDelay>d__116(int <>1__state)
		{
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0xB3839C", Offset = "0xB3839C", VA = "0xB3839C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0xB383A0", Offset = "0xB383A0", VA = "0xB383A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0xB384D4", Offset = "0xB384D4", VA = "0xB384D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000173")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884BA4", Offset = "0x884BA4")]
	private sealed class <HitReceivedRightDelay>d__117 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoachAI <>4__this;

		[Token(Token = "0x17000070")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000737")]
			[Address(RVA = "0xB38678", Offset = "0xB38678", VA = "0xB38678", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000739")]
			[Address(RVA = "0xB386C0", Offset = "0xB386C0", VA = "0xB386C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0xB3851C", Offset = "0xB3851C", VA = "0xB3851C")]
		[DebuggerHidden]
		public <HitReceivedRightDelay>d__117(int <>1__state)
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0xB38548", Offset = "0xB38548", VA = "0xB38548", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0xB3854C", Offset = "0xB3854C", VA = "0xB3854C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0xB38680", Offset = "0xB38680", VA = "0xB38680", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000174")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884BB4", Offset = "0x884BB4")]
	private sealed class <LeftDelayed>d__133 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoachAI <>4__this;

		[Token(Token = "0x17000072")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600073D")]
			[Address(RVA = "0xB387D0", Offset = "0xB387D0", VA = "0xB387D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600073F")]
			[Address(RVA = "0xB38818", Offset = "0xB38818", VA = "0xB38818", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0xB386C8", Offset = "0xB386C8", VA = "0xB386C8")]
		[DebuggerHidden]
		public <LeftDelayed>d__133(int <>1__state)
		{
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0xB386F4", Offset = "0xB386F4", VA = "0xB386F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0xB386F8", Offset = "0xB386F8", VA = "0xB386F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xB387D8", Offset = "0xB387D8", VA = "0xB387D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000175")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884BC4", Offset = "0x884BC4")]
	private sealed class <RightDelayed>d__134 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoachAI <>4__this;

		[Token(Token = "0x17000074")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000743")]
			[Address(RVA = "0xB38928", Offset = "0xB38928", VA = "0xB38928", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000745")]
			[Address(RVA = "0xB38970", Offset = "0xB38970", VA = "0xB38970", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xB38820", Offset = "0xB38820", VA = "0xB38820")]
		[DebuggerHidden]
		public <RightDelayed>d__134(int <>1__state)
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0xB3884C", Offset = "0xB3884C", VA = "0xB3884C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0xB38850", Offset = "0xB38850", VA = "0xB38850", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0xB38930", Offset = "0xB38930", VA = "0xB38930", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BlockType lead_current_block_type;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private BlockType rear_current_block_type;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform body_block_position;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform head_block_position;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform left_target_front;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform right_target_front;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform left_target_side;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform right_target_side;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform left_target_center;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform right_target_center;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform left_target_rest;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform right_target_rest;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PuppetMaster puppet_master;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public FullBodyBipedIK body_ik;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool work_for_solver;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool is_punching_lead;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool is_punching_rear;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	private bool lead_blocked;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool rear_blocked;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool lead_fist_stopped;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	private bool rear_fist_stopped;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float lead_stop_block;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float rear_stop_block;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float lead_hand_IK_weight;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rear_hand_IK_weight;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool is_blocking_lead;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool is_blocking_rear;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Texture2D[] target_texture;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material left_hand_target_material;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Material right_hand_target_material;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject left_hand_bottom_sign;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject right_hand_bottom_sign;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject left_hand_top_sign;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject right_hand_top_sign;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject left_hand_bottom_miss;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject right_hand_bottom_miss;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject left_hand_top_miss;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject right_hand_top_miss;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject timer_left_top;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject timer_left_bottom;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject timer_right_top;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject timer_right_bottom;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Animator animator;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3 lead_hand_last_position;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private Vector3 rear_hand_last_position;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Quaternion lead_hand_last_rotation;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Quaternion rear_hand_last_rotation;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform lead_hand_current_target;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform rear_hand_current_target;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Vector3 lead_fist_last_position;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private Vector3 rear_fist_last_position;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Quaternion lead_fist_last_rotation;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Quaternion rear_fist_last_rotation;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Muscle[] leftArmMuscles;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Muscle[] rightArmMuscles;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Vector3 lead_fist_punch_target_position;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private Vector3 rear_fist_punch_target_position;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Vector3 lead_ik_hit_pos;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private Vector3 rear_ik_hit_pos;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private float block_timer;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Transform target_lead;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Transform target_rear;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Material left_hand_timer_material;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Material right_hand_timer_material;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private float left_hand_timer;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private bool left_hand_timer_active;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private float right_hand_timer;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private bool right_hand_timer_active;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Vector3 update_direction_delta;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private Vector3 update_direction_delta_target;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public Transform opponent_transform;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public Transform player_transform;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private float STANDARD_ROTATION_SPEED;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	private float direction_rotation_speed;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public Coach_timer_menu timer_menu;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private float timer_left_right;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	private bool game_on;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private float game_timer;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	private int score;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private int hits;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	private int misses;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private int hit_received;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public Transform Coach_scale;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private float default_human_player_height;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	private float scale;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private Transform target_pos;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public Transform tg;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private bool left_punch_ignition;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x291")]
	private bool right_punch_ignition;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	private Vector3 opponent_position_delta;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private float distance_to_opponent;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private Vector3 player_position_delta;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private float distance_to_player;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	private bool left_hand_delayed;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B5")]
	private bool right_hand_delayed;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private float speed_x;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	private float speed_z;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private float target_angle;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	private float current_angle;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private bool first_left;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C9")]
	private bool first_right;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public Rigidbody left_hand_rigid;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public Rigidbody right_hand_rigid;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private bool left_received;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E1")]
	private bool right_received;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	private BlockHand left_hand_punching_hand;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private BlockHand right_hand_punching_hand;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public CoachHitAVEffect av_effect;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private float game_time;

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x135F7EC", Offset = "0x135F7EC", VA = "0x135F7EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x135F8E4", Offset = "0x135F8E4", VA = "0x135F8E4")]
	public void setScale(float height)
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x135F934", Offset = "0x135F934", VA = "0x135F934")]
	private void UpdateTimers()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x135FDB8", Offset = "0x135FDB8", VA = "0x135FDB8")]
	private void UpdateTimerRender()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x135FE6C", Offset = "0x135FE6C", VA = "0x135FE6C")]
	private void CheckTimers()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x135FF80", Offset = "0x135FF80", VA = "0x135FF80")]
	private void OnAnimatorIK(int layerIndex)
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x1360044", Offset = "0x1360044", VA = "0x1360044")]
	private void Start()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x13605D8", Offset = "0x13605D8", VA = "0x13605D8")]
	private void UpdateIK()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x1361648", Offset = "0x1361648", VA = "0x1361648")]
	public void HitReceivedByOpponent(AIPlayerController.PunchingHand hand, Vector3 hit_position, Vector3 ik_hit_pos, float speed)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x1360DB4", Offset = "0x1360DB4", VA = "0x1360DB4")]
	private void UpdateLeadHandBlockIK()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x13611F8", Offset = "0x13611F8", VA = "0x13611F8")]
	private void UpdateRearHandBlockIK()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x1360D8C", Offset = "0x1360D8C", VA = "0x1360D8C")]
	private Vector3 CalculatePunchPosition(Vector3 current_position, Vector3 target_position, float weight)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x1360560", Offset = "0x1360560", VA = "0x1360560")]
	private void setBlocking(BlockType type, BlockHand hand, float time, bool timer = true, bool left_hand = true, bool right_hand = true)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x1360404", Offset = "0x1360404", VA = "0x1360404")]
	private void setBlockType(BlockType type, BlockHand hand)
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x1360D78", Offset = "0x1360D78", VA = "0x1360D78")]
	private bool isPunching(AIPlayerController.PunchingHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x1361918", Offset = "0x1361918", VA = "0x1361918")]
	private void stopBlocking(bool timer = true, BlockHand hand = BlockHand.BOTH)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x1361970", Offset = "0x1361970", VA = "0x1361970")]
	public void StopPunching(AIPlayerController.PunchingHand hand)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x1361D90", Offset = "0x1361D90", VA = "0x1361D90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x13625A8", Offset = "0x13625A8", VA = "0x13625A8")]
	public void HitReceived(BlockHand hand, BlockHand punching_hand, bool time_out = false)
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x13628C4", Offset = "0x13628C4", VA = "0x13628C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x889A70", Offset = "0x889A70")]
	private IEnumerator HitReceivedLeftDelay(BlockHand hand)
	{
		return null;
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x136299C", Offset = "0x136299C", VA = "0x136299C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x889AD0", Offset = "0x889AD0")]
	private IEnumerator HitReceivedRightDelay(BlockHand hand)
	{
		return null;
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x1362510", Offset = "0x1362510", VA = "0x1362510")]
	private void RandomPunch(bool punch)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x1362150", Offset = "0x1362150", VA = "0x1362150")]
	private void UpdateDirection()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x1362314", Offset = "0x1362314", VA = "0x1362314")]
	private void UpdateMovement(float target_distance_to_opponent)
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x13619B0", Offset = "0x13619B0", VA = "0x13619B0")]
	private void setRandomTarget(BlockHand hand, bool punch = false)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x135FF20", Offset = "0x135FF20", VA = "0x135FF20")]
	public void PunchPadReceived(AIPlayerController.PunchingHand hand, AIPlayerController.PunchingHand punching_hand, bool time_out = false)
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x1362858", Offset = "0x1362858", VA = "0x1362858")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x889B30", Offset = "0x889B30")]
	private IEnumerator LeftDelayed()
	{
		return null;
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x1362930", Offset = "0x1362930", VA = "0x1362930")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x889B90", Offset = "0x889B90")]
	private IEnumerator RightDelayed()
	{
		return null;
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x1362A08", Offset = "0x1362A08", VA = "0x1362A08")]
	private void setRandomHand(BlockHand hand)
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x135FD6C", Offset = "0x135FD6C", VA = "0x135FD6C")]
	private void RandomLeftRight()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x1362BD0", Offset = "0x1362BD0", VA = "0x1362BD0")]
	public void PlayEffect(Collision collision)
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x135FB94", Offset = "0x135FB94", VA = "0x135FB94")]
	public void stopGame(bool before_time)
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x1362C3C", Offset = "0x1362C3C", VA = "0x1362C3C")]
	public void StartGame(float time)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x1361904", Offset = "0x1361904", VA = "0x1361904")]
	private void UpdateScore(int index)
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x1362D48", Offset = "0x1362D48", VA = "0x1362D48")]
	private void UpdateMenuScore()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x135FAB0", Offset = "0x135FAB0", VA = "0x135FAB0")]
	private void UpdateMenuTimer()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x1362D6C", Offset = "0x1362D6C", VA = "0x1362D6C")]
	public bool isPunching()
	{
		return default(bool);
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x1362D8C", Offset = "0x1362D8C", VA = "0x1362D8C")]
	public void setTarget(Transform target)
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x1362D94", Offset = "0x1362D94", VA = "0x1362D94")]
	public void setPlayerTransform(Transform player_transform)
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x1362D9C", Offset = "0x1362D9C", VA = "0x1362D9C")]
	public void setLeadTarget(Transform lead_target)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x1362DA4", Offset = "0x1362DA4", VA = "0x1362DA4")]
	public void setRearTarget(Transform rear_target)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x1362DAC", Offset = "0x1362DAC", VA = "0x1362DAC")]
	public CoachAI()
	{
	}
}
[Token(Token = "0x2000176")]
public class CoachHitAVEffect : MonoBehaviour
{
	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource[] audio;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve impact_audio_volume;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem impact_particle;

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xD0EB94", Offset = "0xD0EB94", VA = "0xD0EB94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xD0EBE8", Offset = "0xD0EBE8", VA = "0xD0EBE8")]
	private void PunchVisualImpact(Collision collision, float power)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xD0ED20", Offset = "0xD0ED20", VA = "0xD0ED20")]
	public void PunchPlayAudio(Collision collision, float speed)
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xD0EE54", Offset = "0xD0EE54", VA = "0xD0EE54")]
	public CoachHitAVEffect()
	{
	}
}
[Token(Token = "0x2000177")]
public class CoachPad : MonoBehaviour
{
	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool is_colliding;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Collision c;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 last_target_position;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CoachAI controller;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AIPlayerController.PunchingHand hand;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform hit_position;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform Ik_hit_position;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource[] audio;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AnimationCurve impact_audio_volume;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool is_active;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float activation_timer;

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xD0F140", Offset = "0xD0F140", VA = "0xD0F140")]
	public void PunchPlayAudio(Collision collision, float speed)
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xD0F200", Offset = "0xD0F200", VA = "0xD0F200")]
	private void Awake()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xD0F278", Offset = "0xD0F278", VA = "0xD0F278")]
	private void Start()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xD0F2CC", Offset = "0xD0F2CC", VA = "0xD0F2CC")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xD0F2DC", Offset = "0xD0F2DC", VA = "0xD0F2DC")]
	public void Deactivate(float time = 0.5f)
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xD0F2E4", Offset = "0xD0F2E4", VA = "0xD0F2E4")]
	protected void FixedUpdate()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xD0F324", Offset = "0xD0F324", VA = "0xD0F324")]
	private void UpdateTimers()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xD0F364", Offset = "0xD0F364", VA = "0xD0F364")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xD0F6FC", Offset = "0xD0F6FC", VA = "0xD0F6FC")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xD0F700", Offset = "0xD0F700", VA = "0xD0F700")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xD0F724", Offset = "0xD0F724", VA = "0xD0F724")]
	private void CalculateAngleOfCollision(Collision collision)
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xD0F374", Offset = "0xD0F374", VA = "0xD0F374")]
	private void DeactivateIfCollisionPunchReceiver(Collision collision)
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xD0F954", Offset = "0xD0F954", VA = "0xD0F954")]
	public CoachPad()
	{
	}
}
[Token(Token = "0x2000178")]
public class CoachMenuHowToPlay : GameMenu
{
	[Token(Token = "0x2000179")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884BD4", Offset = "0x884BD4")]
	private sealed class <FadeIn>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoachMenuHowToPlay <>4__this;

		[Token(Token = "0x17000076")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000760")]
			[Address(RVA = "0xB3919C", Offset = "0xB3919C", VA = "0xB3919C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000077")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000762")]
			[Address(RVA = "0xB391E4", Offset = "0xB391E4", VA = "0xB391E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0xB39090", Offset = "0xB39090", VA = "0xB39090")]
		[DebuggerHidden]
		public <FadeIn>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xB390BC", Offset = "0xB390BC", VA = "0xB390BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xB390C0", Offset = "0xB390C0", VA = "0xB390C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xB391A4", Offset = "0xB391A4", VA = "0xB391A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884BE4", Offset = "0x884BE4")]
	private sealed class <ExitMiniGame>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoachMenuHowToPlay <>4__this;

		[Token(Token = "0x17000078")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000766")]
			[Address(RVA = "0xB39040", Offset = "0xB39040", VA = "0xB39040", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000079")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000768")]
			[Address(RVA = "0xB39088", Offset = "0xB39088", VA = "0xB39088", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0xB38EC8", Offset = "0xB38EC8", VA = "0xB38EC8")]
		[DebuggerHidden]
		public <ExitMiniGame>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0xB38EF4", Offset = "0xB38EF4", VA = "0xB38EF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0xB38EF8", Offset = "0xB38EF8", VA = "0xB38EF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0xB39048", Offset = "0xB39048", VA = "0xB39048", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu ok_game_menu;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject coach;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameMenu main_menu;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform main_menu_player_center;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform player;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MainMenuManager main_menu_manager;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private FadeInOut fade_in_out;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool wait;

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xD0EE5C", Offset = "0xD0EE5C", VA = "0xD0EE5C")]
	private void MovePlayer(Transform position)
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xD0EEAC", Offset = "0xD0EEAC", VA = "0xD0EEAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xD0EF6C", Offset = "0xD0EF6C", VA = "0xD0EF6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x889D30", Offset = "0x889D30")]
	private IEnumerator FadeIn()
	{
		return null;
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xD0EFD8", Offset = "0xD0EFD8", VA = "0xD0EFD8", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xD0F0CC", Offset = "0xD0F0CC", VA = "0xD0F0CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x889D90", Offset = "0x889D90")]
	private IEnumerator ExitMiniGame()
	{
		return null;
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xD0F138", Offset = "0xD0F138", VA = "0xD0F138")]
	public CoachMenuHowToPlay()
	{
	}
}
[Token(Token = "0x200017B")]
public class Coach_Result_Menu : GameMenu
{
	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh best;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh hits;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh misses;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh time;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh ahpm;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh ampm;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh score;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMesh best_hits;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMesh best_misses;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMesh best_time;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMesh best_ahpm;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMesh best_ampm;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMesh best_score;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Coach_timer_menu timer_menu;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameMenu select_time_menu;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int time_int;

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xD10094", Offset = "0xD10094", VA = "0xD10094")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xD10144", Offset = "0xD10144", VA = "0xD10144")]
	public void setResult(int time, int score, int hits, int misses, int ahpm, int ampm)
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xD106A4", Offset = "0xD106A4", VA = "0xD106A4", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xD107B0", Offset = "0xD107B0", VA = "0xD107B0")]
	public Coach_Result_Menu()
	{
	}
}
[Token(Token = "0x200017C")]
public class Coach_timer_menu : GameMenu
{
	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CoachAI controller;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Coach_Result_Menu result_menu;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameMenu time_mode;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh time_text;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh score_text;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int game_time;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int ampm;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int ahpm;

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xD107B8", Offset = "0xD107B8", VA = "0xD107B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xD10810", Offset = "0xD10810", VA = "0xD10810")]
	public void startGame(int time)
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xD10778", Offset = "0xD10778", VA = "0xD10778")]
	public void restartGame()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xD108B8", Offset = "0xD108B8", VA = "0xD108B8")]
	public void ShowTime(string time)
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xD108D4", Offset = "0xD108D4", VA = "0xD108D4")]
	public void ShowScore(int score)
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xD1084C", Offset = "0xD1084C", VA = "0xD1084C")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xD10918", Offset = "0xD10918", VA = "0xD10918")]
	public void endGame(int hits, int misses, int score, float time)
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xD109F4", Offset = "0xD109F4", VA = "0xD109F4")]
	private void calculateResult(int misses, int hits, float average_timer)
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xD10A2C", Offset = "0xD10A2C", VA = "0xD10A2C", Slot = "5")]
	public override void PauseButtonPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xD10A7C", Offset = "0xD10A7C", VA = "0xD10A7C", Slot = "6")]
	public override void PauseButtonUnPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xD10AD8", Offset = "0xD10AD8", VA = "0xD10AD8", Slot = "7")]
	public override void PressedFromScript(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xD10B84", Offset = "0xD10B84", VA = "0xD10B84", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xD10C38", Offset = "0xD10C38", VA = "0xD10C38")]
	public Coach_timer_menu()
	{
	}
}
[Token(Token = "0x200017D")]
public class Coach_timeselectionmenu : GameMenu
{
	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform selection_mark;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Coach_timer_menu timer_menu;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameMenu select_mode;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 one_min;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 two_min;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 five_min;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 ten_min;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int min;

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xD10C40", Offset = "0xD10C40", VA = "0xD10C40")]
	private void Start()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xD10C44", Offset = "0xD10C44", VA = "0xD10C44", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xD10E58", Offset = "0xD10E58", VA = "0xD10E58")]
	public Coach_timeselectionmenu()
	{
	}
}
[Token(Token = "0x200017E")]
public class PunchCoachAnimator : StateMachineBehaviour
{
	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AIPlayerController.PunchingHand hand;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CoachAI ai_player_controller;

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x20599DC", Offset = "0x20599DC", VA = "0x20599DC", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x2059A44", Offset = "0x2059A44", VA = "0x2059A44", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x2059A68", Offset = "0x2059A68", VA = "0x2059A68")]
	public PunchCoachAnimator()
	{
	}
}
[Token(Token = "0x200017F")]
public class CoachReceiver : MonoBehaviour
{
	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CoachAI coach_controller;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xD0FE78", Offset = "0xD0FE78", VA = "0xD0FE78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xD0FF18", Offset = "0xD0FF18", VA = "0xD0FF18")]
	public Rigidbody GetRigidbody()
	{
		return null;
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xD0FF20", Offset = "0xD0FF20", VA = "0xD0FF20")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xD1008C", Offset = "0xD1008C", VA = "0xD1008C")]
	public CoachReceiver()
	{
	}
}
[Token(Token = "0x2000180")]
public class Cuts : MonoBehaviour
{
	[Token(Token = "0x2000181")]
	public enum CutTypes
	{
		[Token(Token = "0x4000CF5")]
		LeftEyebrow,
		[Token(Token = "0x4000CF6")]
		RightEyebrow,
		[Token(Token = "0x4000CF7")]
		UnderLeftEyebrow,
		[Token(Token = "0x4000CF8")]
		UnderRightEyebrow,
		[Token(Token = "0x4000CF9")]
		LeftCheek,
		[Token(Token = "0x4000CFA")]
		RightCheek,
		[Token(Token = "0x4000CFB")]
		UpperLip,
		[Token(Token = "0x4000CFC")]
		LowerLip,
		[Token(Token = "0x4000CFD")]
		NoseBlood
	}

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material mat;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material to_render;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material mattttttt;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture tx;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture tx_norm;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material[] cut_normals;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material[] cut_color;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material[] cut_specular;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RenderTexture rx;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RenderTexture rx_norm;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RenderTexture rx_norm2;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RenderTexture rt_color;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RenderTexture rt_norm;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private RenderTexture rt_spec;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material texProcMat;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Renderer paintableRenderer;

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xD12F98", Offset = "0xD12F98", VA = "0xD12F98")]
	public void setMaterial(Material mat)
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xD12FA0", Offset = "0xD12FA0", VA = "0xD12FA0")]
	public void DrawCut(CutTypes type)
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xD1337C", Offset = "0xD1337C", VA = "0xD1337C")]
	private int GetCutTypeIndex(CutTypes cut_type)
	{
		return default(int);
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xD1338C", Offset = "0xD1338C", VA = "0xD1338C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xD13658", Offset = "0xD13658", VA = "0xD13658")]
	private void Update()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xD1365C", Offset = "0xD1365C", VA = "0xD1365C")]
	public Cuts()
	{
	}
}
[Token(Token = "0x2000182")]
public class DoubleEndBagController : MonoBehaviour
{
	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource boxing_bell;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DoubleEndBagEnduranceMode endurance_mode;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DoubleEndBagTarget target;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform double_end_bag_height;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DoubleEndBagResult result;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FocusBall punch_bag;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int punch_counter;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int hit_counter;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float game_timer;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float score;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float average_misses_per_minute;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float average_hits_per_minute;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool start;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private HeavyBagTrainingController.TrainingMode training_mode;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int misses;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMesh mini_menu_score;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMesh mini_menu_time;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float endurance;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject mini_menu_endurance_mode_bar;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMesh mini_menu_endurance_mode_time;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public DoubleEndPunchBagEffect effect;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isPaused;

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xD1D36C", Offset = "0xD1D36C", VA = "0xD1D36C")]
	public void PauseGame(bool pause)
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xD1D378", Offset = "0xD1D378", VA = "0xD1D378")]
	private void Start()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xD1D3FC", Offset = "0xD1D3FC", VA = "0xD1D3FC")]
	private int GetNumberOfMisses()
	{
		return default(int);
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xD1D408", Offset = "0xD1D408", VA = "0xD1D408")]
	public void DecreasePoint()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xD1D43C", Offset = "0xD1D43C", VA = "0xD1D43C")]
	public void PunchReceived(Collision collision, float speed)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xD1D598", Offset = "0xD1D598", VA = "0xD1D598")]
	public void TargetHit()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xD1D6F4", Offset = "0xD1D6F4", VA = "0xD1D6F4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xD1D7CC", Offset = "0xD1D7CC", VA = "0xD1D7CC")]
	private void UpdateEnduranceMode()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xD1D880", Offset = "0xD1D880", VA = "0xD1D880")]
	private void UpdateMiniMenuEnduranceMode()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xD1D7F0", Offset = "0xD1D7F0", VA = "0xD1D7F0")]
	private void UpdateEndurance()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xD1D7C8", Offset = "0xD1D7C8", VA = "0xD1D7C8")]
	private void UpdateFreeMode()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xD1DAD8", Offset = "0xD1DAD8", VA = "0xD1DAD8")]
	private void UpdateFreeMiniMenu()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xD1DB38", Offset = "0xD1DB38", VA = "0xD1DB38")]
	public void StartGame(HeavyBagTrainingController.TrainingMode mode)
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xD1DBA4", Offset = "0xD1DBA4", VA = "0xD1DBA4")]
	public void StopGame()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xD1DEB4", Offset = "0xD1DEB4", VA = "0xD1DEB4")]
	public HeavyBagTrainingController.TrainingMode getGameMode()
	{
		return default(HeavyBagTrainingController.TrainingMode);
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xD1DBF4", Offset = "0xD1DBF4", VA = "0xD1DBF4")]
	private void showResults()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xD1DC3C", Offset = "0xD1DC3C", VA = "0xD1DC3C")]
	private void showLastResult()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xD1D790", Offset = "0xD1D790", VA = "0xD1D790")]
	public void UpdateTimer()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xD1DB94", Offset = "0xD1DB94", VA = "0xD1DB94")]
	public void Clear()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xD1DEDC", Offset = "0xD1DEDC", VA = "0xD1DEDC")]
	private void computeAverageMisesPerMinute()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xD1DEBC", Offset = "0xD1DEBC", VA = "0xD1DEBC")]
	private void computeAverageHitsPerMinute()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xD1E19C", Offset = "0xD1E19C", VA = "0xD1E19C")]
	public int GetScore()
	{
		return default(int);
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xD1D934", Offset = "0xD1D934", VA = "0xD1D934")]
	private string TimeToString(float time)
	{
		return null;
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xD1E1B8", Offset = "0xD1E1B8", VA = "0xD1E1B8")]
	public DoubleEndBagController()
	{
	}
}
[Token(Token = "0x2000183")]
public class DoubleEndBagEnduranceMode : GameMenu
{
	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu back_game_menu;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMenu result_menu;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameButton start_button;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PauseButton stop_button;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameButton back_button;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject mini_menu;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public DoubleEndBagController training_controller;

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xD1E1C8", Offset = "0xD1E1C8", VA = "0xD1E1C8", Slot = "5")]
	public override void PauseButtonPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xD1E244", Offset = "0xD1E244", VA = "0xD1E244", Slot = "6")]
	public override void PauseButtonUnPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xD1E2A8", Offset = "0xD1E2A8", VA = "0xD1E2A8", Slot = "7")]
	public override void PressedFromScript(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xD1E30C", Offset = "0xD1E30C", VA = "0xD1E30C", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xD1E450", Offset = "0xD1E450", VA = "0xD1E450")]
	public void RestartGame()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xD1DA00", Offset = "0xD1DA00", VA = "0xD1DA00")]
	public void stopGame()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xD1E4F0", Offset = "0xD1E4F0", VA = "0xD1E4F0")]
	public DoubleEndBagEnduranceMode()
	{
	}
}
[Token(Token = "0x2000184")]
public class DoubleEndBagFreeMode : GameMenu
{
	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DoubleEndBagController controller;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMenu mode_menu;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameMenu result_menu;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject mini_menu;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameButton back_button;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameButton start_button;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PauseButton stop_button;

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xD1E4F8", Offset = "0xD1E4F8", VA = "0xD1E4F8", Slot = "5")]
	public override void PauseButtonPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xD1E574", Offset = "0xD1E574", VA = "0xD1E574", Slot = "6")]
	public override void PauseButtonUnPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xD1E5D8", Offset = "0xD1E5D8", VA = "0xD1E5D8", Slot = "7")]
	public override void PressedFromScript(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xD1E6F0", Offset = "0xD1E6F0", VA = "0xD1E6F0", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xD1E8D4", Offset = "0xD1E8D4", VA = "0xD1E8D4")]
	public void RestartGame()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xD1E974", Offset = "0xD1E974", VA = "0xD1E974")]
	public DoubleEndBagFreeMode()
	{
	}
}
[Token(Token = "0x2000185")]
public class DoubleEndBagResult : GameMenu
{
	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DoubleEndBagFreeMode free_mode;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DoubleEndBagEnduranceMode endurance_mode;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DoubleEndBagController controller;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameMenu mode_menu;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh hits;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh misses;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh time;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMesh ahpm;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMesh ampm;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMesh last_hits;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMesh last_misses;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMesh last_time;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMesh last_ahpm;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMesh last_ampm;

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xD1E97C", Offset = "0xD1E97C", VA = "0xD1E97C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xD1E980", Offset = "0xD1E980", VA = "0xD1E980", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xD1EA9C", Offset = "0xD1EA9C", VA = "0xD1EA9C")]
	private string TimeToString(float time)
	{
		return null;
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xD1DF04", Offset = "0xD1DF04", VA = "0xD1DF04")]
	public void showResults(float time, int hits, int misses, float ahpm, float ampm)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xD1E050", Offset = "0xD1E050", VA = "0xD1E050")]
	public void showLastResults(float time, int hits, int misses, float ahpm, float ampm)
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xD1EB68", Offset = "0xD1EB68", VA = "0xD1EB68")]
	public DoubleEndBagResult()
	{
	}
}
[Token(Token = "0x2000186")]
public class DoubleEndBagSelectModeMenu : GameMenu
{
	[Token(Token = "0x2000187")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884BF4", Offset = "0x884BF4")]
	private sealed class <ExitMiniGame>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DoubleEndBagSelectModeMenu <>4__this;

		[Token(Token = "0x1700007A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007BF")]
			[Address(RVA = "0xB3C474", Offset = "0xB3C474", VA = "0xB3C474", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007C1")]
			[Address(RVA = "0xB3C4BC", Offset = "0xB3C4BC", VA = "0xB3C4BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xB3C2FC", Offset = "0xB3C2FC", VA = "0xB3C2FC")]
		[DebuggerHidden]
		public <ExitMiniGame>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xB3C328", Offset = "0xB3C328", VA = "0xB3C328", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xB3C32C", Offset = "0xB3C32C", VA = "0xB3C32C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xB3C47C", Offset = "0xB3C47C", VA = "0xB3C47C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu setting_menu;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMenu free_mode;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameMenu endurance_mode;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameMenu main_menu;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform main_menu_player_center;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject double_end_bag;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject double_end_bag_static;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform player;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MainMenuManager main_menu_manager;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private FadeInOut fade_in_out;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool wait;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject playerBody;

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xD1EB70", Offset = "0xD1EB70", VA = "0xD1EB70")]
	private void MovePlayer(Transform position)
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xD1EBC0", Offset = "0xD1EBC0", VA = "0xD1EBC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xD1ECB0", Offset = "0xD1ECB0", VA = "0xD1ECB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xD1ECD0", Offset = "0xD1ECD0", VA = "0xD1ECD0", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xD1EE10", Offset = "0xD1EE10", VA = "0xD1EE10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x889E90", Offset = "0x889E90")]
	private IEnumerator ExitMiniGame()
	{
		return null;
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xD1EE7C", Offset = "0xD1EE7C", VA = "0xD1EE7C")]
	public DoubleEndBagSelectModeMenu()
	{
	}
}
[Token(Token = "0x2000188")]
public class DoubleEndBagSettingsMenu : GameMenu
{
	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu game_select_mode_menu;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform double_end_bag_height;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh height_cm;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh height_inch;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float double_end_bag_height_prefs;

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xD1EE84", Offset = "0xD1EE84", VA = "0xD1EE84")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xD1EEE4", Offset = "0xD1EEE4", VA = "0xD1EEE4")]
	private void updateTextHeight()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xD1F00C", Offset = "0xD1F00C", VA = "0xD1F00C", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xD1F170", Offset = "0xD1F170", VA = "0xD1F170")]
	public DoubleEndBagSettingsMenu()
	{
	}
}
[Token(Token = "0x2000189")]
public class DoubleEndBagTarget : MonoBehaviour
{
	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DoubleEndBagController controller;

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xD1F178", Offset = "0xD1F178", VA = "0xD1F178")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xD1D660", Offset = "0xD1D660", VA = "0xD1D660")]
	public void setAngle(Vector3 angle)
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xD1D6AC", Offset = "0xD1D6AC", VA = "0xD1D6AC")]
	public void setDistance(float height, float distance)
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xD1F190", Offset = "0xD1F190", VA = "0xD1F190")]
	public DoubleEndBagTarget()
	{
	}
}
[Token(Token = "0x200018A")]
public class DoubleEndPunchBagEffect : MonoBehaviour
{
	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource[] audio;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem impact_particle;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve impact_audio_volume;

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xD1F198", Offset = "0xD1F198", VA = "0xD1F198")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xD1F1EC", Offset = "0xD1F1EC", VA = "0xD1F1EC")]
	private void PunchVisualImpact(Collision collision, float power)
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xD1D464", Offset = "0xD1D464", VA = "0xD1D464")]
	public void PunchPlayAudio(Collision collision, float speed)
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xD1F324", Offset = "0xD1F324", VA = "0xD1F324")]
	public DoubleEndPunchBagEffect()
	{
	}
}
[Token(Token = "0x200018B")]
public class FocusBall : MonoBehaviour
{
	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HumanPlayer human_player;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float radius;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform bottom_hook;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform top_hook;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 bottom_bag_hook;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 top_bag_hook;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LineRenderer top;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LineRenderer bottom;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float time_stamp;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float valid_timer;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public DoubleEndBagController controller;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float collisionTime;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SparebarSoundEffect sound_effect;

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x1348450", Offset = "0x1348450", VA = "0x1348450")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x13484CC", Offset = "0x13484CC", VA = "0x13484CC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x13486BC", Offset = "0x13486BC", VA = "0x13486BC")]
	public void PlaySound(Collision collision, float speed, bool random = true, int nr = 0)
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x13486A0", Offset = "0x13486A0", VA = "0x13486A0")]
	public void setPunchValid(bool valid)
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x1348764", Offset = "0x1348764", VA = "0x1348764")]
	public bool isPunchValid()
	{
		return default(bool);
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x1348774", Offset = "0x1348774", VA = "0x1348774")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x13487B4", Offset = "0x13487B4", VA = "0x13487B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x1348928", Offset = "0x1348928", VA = "0x1348928")]
	public FocusBall()
	{
	}
}
[Token(Token = "0x200018C")]
public class DummyController : MonoBehaviour
{
	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DummyGameController game_controller;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DummyHitAudio audio;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3[] target_position;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3[] target_rotation;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int index;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int last_index;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D[] target_texture;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform target;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform miss;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PunchBagTarget.GloveSide side;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PunchBagTarget.GloveSide[] side_to_hit;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PunchBagTarget.TargetType target_type;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material target_material;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int num_hit_to_complete_target;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int hit_to_complete_target_counter;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool hide;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool miss_target;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float time_miss_target;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float miss_target_scale;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float miss_target_timer;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool game_on;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float collisionTime;

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xD1F868", Offset = "0xD1F868", VA = "0xD1F868")]
	public void StartGame()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xD20014", Offset = "0xD20014", VA = "0xD20014")]
	public void StopGame()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xD2004C", Offset = "0xD2004C", VA = "0xD2004C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xD20198", Offset = "0xD20198", VA = "0xD20198")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xD1F8D0", Offset = "0xD1F8D0", VA = "0xD1F8D0")]
	private void setTargetType()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xD1FA54", Offset = "0xD1FA54", VA = "0xD1FA54")]
	private void setRandomTargetPosition()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xD1FE1C", Offset = "0xD1FE1C", VA = "0xD1FE1C")]
	private void setTexture(bool combo = false)
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xD201EC", Offset = "0xD201EC", VA = "0xD201EC")]
	public void TargetCollision(Collision collision)
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xD20378", Offset = "0xD20378", VA = "0xD20378")]
	private void missTarget()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xD20440", Offset = "0xD20440", VA = "0xD20440")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xD20468", Offset = "0xD20468", VA = "0xD20468")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xD20490", Offset = "0xD20490", VA = "0xD20490")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xD20640", Offset = "0xD20640", VA = "0xD20640")]
	public DummyController()
	{
	}
}
[Token(Token = "0x200018D")]
public class DummyEndurance : GameMenu
{
	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu back_game_menu;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMenu result_menu;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameButton start_button;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PauseButton stop_button;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameButton back_button;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject mini_menu;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public DummyGameController training_controller;

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x1340F1C", Offset = "0x1340F1C", VA = "0x1340F1C", Slot = "5")]
	public override void PauseButtonPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x1340F84", Offset = "0x1340F84", VA = "0x1340F84", Slot = "6")]
	public override void PauseButtonUnPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x1340FE4", Offset = "0x1340FE4", VA = "0x1340FE4", Slot = "7")]
	public override void PressedFromScript(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x134110C", Offset = "0x134110C", VA = "0x134110C", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x1341294", Offset = "0x1341294", VA = "0x1341294")]
	public void RestartGame()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x1341034", Offset = "0x1341034", VA = "0x1341034")]
	public void stopGame()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x134136C", Offset = "0x134136C", VA = "0x134136C")]
	public DummyEndurance()
	{
	}
}
[Token(Token = "0x200018E")]
public class DummyFreeModeMenu : GameMenu
{
	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DummyGameController controller;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMenu mode_menu;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameMenu result_menu;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject mini_menu;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameButton back_button;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameButton start_button;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PauseButton stop_button;

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x134137C", Offset = "0x134137C", VA = "0x134137C", Slot = "5")]
	public override void PauseButtonPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x13413E0", Offset = "0x13413E0", VA = "0x13413E0", Slot = "6")]
	public override void PauseButtonUnPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x134143C", Offset = "0x134143C", VA = "0x134143C", Slot = "7")]
	public override void PressedFromScript(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x134153C", Offset = "0x134153C", VA = "0x134153C", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x1341708", Offset = "0x1341708", VA = "0x1341708")]
	public void RestartGame()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x13417A8", Offset = "0x13417A8", VA = "0x13417A8")]
	public DummyFreeModeMenu()
	{
	}
}
[Token(Token = "0x200018F")]
public class DummyGameController : MonoBehaviour
{
	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int hits;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int missess;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int score;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DummyController controller;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource boxing_bell;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DummyResultMenu result_menu;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public DummyEndurance endurance_menu;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isPaused;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float game_timer;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float average_misses_per_minute;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float average_hits_per_minute;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool start;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private HeavyBagTrainingController.TrainingMode training_mode;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMesh mini_menu_score;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMesh mini_menu_time;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float endurance;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject mini_menu_endurance_mode_bar;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMesh mini_menu_endurance_mode_time;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float timed_timer;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public DummyTimerMenu timer_menu;

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x13417B0", Offset = "0x13417B0", VA = "0x13417B0")]
	public void PauseGame(bool pause)
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x13417BC", Offset = "0x13417BC", VA = "0x13417BC")]
	public HeavyBagTrainingController.TrainingMode GetTrainingMode()
	{
		return default(HeavyBagTrainingController.TrainingMode);
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x1341238", Offset = "0x1341238", VA = "0x1341238")]
	public void StartGame(HeavyBagTrainingController.TrainingMode mode)
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x13417E0", Offset = "0x13417E0", VA = "0x13417E0")]
	public void StartGame(HeavyBagTrainingController.TrainingMode mode, float time)
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x13417C4", Offset = "0x13417C4", VA = "0x13417C4")]
	public void Clear()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x1341334", Offset = "0x1341334", VA = "0x1341334")]
	public void StopGame()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x1341888", Offset = "0x1341888", VA = "0x1341888")]
	public void MissTarget()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x13418BC", Offset = "0x13418BC", VA = "0x13418BC")]
	public void HitTarget()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x13418EC", Offset = "0x13418EC", VA = "0x13418EC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x13419F4", Offset = "0x13419F4", VA = "0x13419F4")]
	private void UpdateTimedMode()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x1341A70", Offset = "0x1341A70", VA = "0x1341A70")]
	private void UpdateTimedTimer()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x13419B8", Offset = "0x13419B8", VA = "0x13419B8")]
	public void UpdateTimer()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x13419F0", Offset = "0x13419F0", VA = "0x13419F0")]
	private void UpdateFreeMode()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x1341C88", Offset = "0x1341C88", VA = "0x1341C88")]
	private void UpdateFreeMiniMenu()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x1341A4C", Offset = "0x1341A4C", VA = "0x1341A4C")]
	private void UpdateEnduranceMode()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x1341CE8", Offset = "0x1341CE8", VA = "0x1341CE8")]
	private void UpdateEndurance()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x1341D78", Offset = "0x1341D78", VA = "0x1341D78")]
	private void UpdateMiniMenuEnduranceMode()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x1341ADC", Offset = "0x1341ADC", VA = "0x1341ADC")]
	private string TimeToString(float time)
	{
		return null;
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x1341840", Offset = "0x1341840", VA = "0x1341840")]
	private void showResults()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x1341E50", Offset = "0x1341E50", VA = "0x1341E50")]
	private void computeAverageMisesPerMinute()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x1341E2C", Offset = "0x1341E2C", VA = "0x1341E2C")]
	private void computeAverageHitsPerMinute()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x1342048", Offset = "0x1342048", VA = "0x1342048")]
	public DummyGameController()
	{
	}
}
[Token(Token = "0x2000190")]
public class DummyHitAudio : MonoBehaviour
{
	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource[] audio;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve impact_audio_volume;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem impact_particle;

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x1342058", Offset = "0x1342058", VA = "0x1342058")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x13420AC", Offset = "0x13420AC", VA = "0x13420AC")]
	private void PunchVisualImpact(Collision collision, float power)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x13421E4", Offset = "0x13421E4", VA = "0x13421E4")]
	public void PunchPlayAudio(Collision collision, float speed)
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x134232C", Offset = "0x134232C", VA = "0x134232C")]
	public DummyHitAudio()
	{
	}
}
[Token(Token = "0x2000191")]
public class DummyHowToPlayMenu : GameMenu
{
	[Token(Token = "0x2000192")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884C04", Offset = "0x884C04")]
	private sealed class <ExitMiniGame>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DummyHowToPlayMenu <>4__this;

		[Token(Token = "0x1700007C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000812")]
			[Address(RVA = "0xB3C63C", Offset = "0xB3C63C", VA = "0xB3C63C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000814")]
			[Address(RVA = "0xB3C684", Offset = "0xB3C684", VA = "0xB3C684", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0xB3C4C4", Offset = "0xB3C4C4", VA = "0xB3C4C4")]
		[DebuggerHidden]
		public <ExitMiniGame>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0xB3C4F0", Offset = "0xB3C4F0", VA = "0xB3C4F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0xB3C4F4", Offset = "0xB3C4F4", VA = "0xB3C4F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0xB3C644", Offset = "0xB3C644", VA = "0xB3C644", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu mode_menu;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform dummy_height;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float dummy_height_prefs;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameMenu main_menu;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform main_menu_player_center;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject dummy;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject dummy_static;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform player;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MainMenuManager main_menu_manager;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private FadeInOut fade_in_out;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool wait;

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x1342334", Offset = "0x1342334", VA = "0x1342334")]
	private void MovePlayer(Transform position)
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x1342384", Offset = "0x1342384", VA = "0x1342384")]
	private void Awake()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x13424E8", Offset = "0x13424E8", VA = "0x13424E8", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x1342608", Offset = "0x1342608", VA = "0x1342608")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x889F40", Offset = "0x889F40")]
	private IEnumerator ExitMiniGame()
	{
		return null;
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x1342674", Offset = "0x1342674", VA = "0x1342674")]
	public DummyHowToPlayMenu()
	{
	}
}
[Token(Token = "0x2000193")]
public class DummyResultMenu : GameMenu
{
	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu mode_menu;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh score;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh hits;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh misses;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh time;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh ahpm;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh ampm;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMesh last_score;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMesh last_hits;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMesh last_misses;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMesh last_time;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMesh last_ahpm;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMesh last_ampm;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public DummyGameController controller;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public DummyEndurance endurance_menu;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public DummyFreeModeMenu free_menu;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public DummyTimerMenu timer_menu;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh last_record;

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x134267C", Offset = "0x134267C", VA = "0x134267C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x1342680", Offset = "0x1342680", VA = "0x1342680", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x1341E74", Offset = "0x1341E74", VA = "0x1341E74")]
	public void showResults(float time, int score, int hits, int misses, float ahpm, float ampm)
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x13428C0", Offset = "0x13428C0", VA = "0x13428C0")]
	public void showLastResults(float time, int score, int hits, int misses, float ahpm, float ampm)
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x13427F4", Offset = "0x13427F4", VA = "0x13427F4")]
	private string TimeToString(float time)
	{
		return null;
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x1343654", Offset = "0x1343654", VA = "0x1343654")]
	public DummyResultMenu()
	{
	}
}
[Token(Token = "0x2000194")]
public class DummySelectModeMenu : GameMenu
{
	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu setting_menu;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMenu free_mode;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameMenu endurance_mode;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameMenu how_to_play_menu;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameMenu timed_mode;

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x134365C", Offset = "0x134365C", VA = "0x134365C", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x134372C", Offset = "0x134372C", VA = "0x134372C")]
	public DummySelectModeMenu()
	{
	}
}
[Token(Token = "0x2000195")]
public class DummySettingMenu : GameMenu
{
	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu game_select_mode_menu;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform dummy_height;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh height_cm;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh height_inch;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float dummy_height_prefs;

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x1343734", Offset = "0x1343734", VA = "0x1343734")]
	private void Awake()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x13437BC", Offset = "0x13437BC", VA = "0x13437BC")]
	private void updateTextHeight()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x13438E4", Offset = "0x13438E4", VA = "0x13438E4", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x1343A44", Offset = "0x1343A44", VA = "0x1343A44")]
	public DummySettingMenu()
	{
	}
}
[Token(Token = "0x2000196")]
public class DummyTarget : MonoBehaviour
{
	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DummyController controller;

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x1343A4C", Offset = "0x1343A4C", VA = "0x1343A4C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x1343A50", Offset = "0x1343A50", VA = "0x1343A50")]
	public DummyTarget()
	{
	}
}
[Token(Token = "0x2000197")]
public class DummyTimeSelection : GameMenu
{
	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform selection_mark;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DummyTimerMenu timer_menu;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameMenu select_mode;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 one_min;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 two_min;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 five_min;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 ten_min;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int min;

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x1343A58", Offset = "0x1343A58", VA = "0x1343A58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x1343A64", Offset = "0x1343A64", VA = "0x1343A64", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x1343C98", Offset = "0x1343C98", VA = "0x1343C98")]
	public DummyTimeSelection()
	{
	}
}
[Token(Token = "0x2000198")]
public class DummyTimerMenu : GameMenu
{
	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform selection_mark;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DummyGameController controller;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DummyResultMenu result_menu;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameMenu time_mode;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh time_text;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh average_text;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int game_time;

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x1343CA0", Offset = "0x1343CA0", VA = "0x1343CA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x1343C5C", Offset = "0x1343C5C", VA = "0x1343C5C")]
	public void startGame(int time)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x13427BC", Offset = "0x13427BC", VA = "0x13427BC")]
	public void restartGame()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x1341BA8", Offset = "0x1341BA8", VA = "0x1341BA8")]
	public void ShowTime(string time)
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x1341BC4", Offset = "0x1341BC4", VA = "0x1341BC4")]
	public void ShowScore(float score)
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x1343CF8", Offset = "0x1343CF8", VA = "0x1343CF8")]
	public void Clear()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x1341C24", Offset = "0x1341C24", VA = "0x1341C24")]
	public void stopGame()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x1343D64", Offset = "0x1343D64", VA = "0x1343D64", Slot = "5")]
	public override void PauseButtonPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x1343DC8", Offset = "0x1343DC8", VA = "0x1343DC8", Slot = "6")]
	public override void PauseButtonUnPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x1343E24", Offset = "0x1343E24", VA = "0x1343E24", Slot = "7")]
	public override void PressedFromScript(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x1343EB0", Offset = "0x1343EB0", VA = "0x1343EB0", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x1343F44", Offset = "0x1343F44", VA = "0x1343F44")]
	public DummyTimerMenu()
	{
	}
}
[Token(Token = "0x2000199")]
public class FadeInOut : MonoBehaviour
{
	[Token(Token = "0x200019A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884C14", Offset = "0x884C14")]
	private sealed class <Fade>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FadeInOut <>4__this;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startAlpha;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endAlpha;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x1700007F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000843")]
			[Address(RVA = "0xB3C7C4", Offset = "0xB3C7C4", VA = "0xB3C7C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000080")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000845")]
			[Address(RVA = "0xB3C80C", Offset = "0xB3C80C", VA = "0xB3C80C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0xB3C68C", Offset = "0xB3C68C", VA = "0xB3C68C")]
		[DebuggerHidden]
		public <Fade>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0xB3C6B8", Offset = "0xB3C6B8", VA = "0xB3C6B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xB3C6BC", Offset = "0xB3C6BC", VA = "0xB3C6BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0xB3C7CC", Offset = "0xB3C7CC", VA = "0xB3C7CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887308", Offset = "0x887308")]
	public float fadeTime;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887340", Offset = "0x887340")]
	public Color fadeColor;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool fadeOnStart;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int renderQueue;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float uiFadeAlpha;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshRenderer fadeRenderer;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter fadeMesh;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material fadeMaterial;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isFading;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887378", Offset = "0x887378")]
	private float <currentAlpha>k__BackingField;

	[Token(Token = "0x1700007E")]
	public float currentAlpha
	{
		[Token(Token = "0x6000832")]
		[Address(RVA = "0x1344520", Offset = "0x1344520", VA = "0x1344520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x889FF0", Offset = "0x889FF0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000833")]
		[Address(RVA = "0x1344528", Offset = "0x1344528", VA = "0x1344528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88A000", Offset = "0x88A000")]
		private set
		{
		}
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x1344530", Offset = "0x1344530", VA = "0x1344530")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x13425C0", Offset = "0x13425C0", VA = "0x13425C0")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x13424B4", Offset = "0x13424B4", VA = "0x13424B4")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x134495C", Offset = "0x134495C", VA = "0x134495C")]
	private void OnLevelFinishedLoading(int level)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x1344990", Offset = "0x1344990", VA = "0x1344990")]
	private void Start()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x13449D0", Offset = "0x13449D0", VA = "0x13449D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x13449E4", Offset = "0x13449E4", VA = "0x13449E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x1344B44", Offset = "0x1344B44", VA = "0x1344B44")]
	public void SetUIFade(float level)
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x13448D4", Offset = "0x13448D4", VA = "0x13448D4")]
	public void SetFadeLevel(float level)
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x13448DC", Offset = "0x13448DC", VA = "0x13448DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88A010", Offset = "0x88A010")]
	private IEnumerator Fade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x1344B70", Offset = "0x1344B70", VA = "0x1344B70")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x1344C8C", Offset = "0x1344C8C", VA = "0x1344C8C")]
	public FadeInOut()
	{
	}
}
[Token(Token = "0x200019B")]
public class FighterController : MonoBehaviour
{
	[Token(Token = "0x200019C")]
	public enum BodyPart
	{
		[Token(Token = "0x4000DFB")]
		Head,
		[Token(Token = "0x4000DFC")]
		Body,
		[Token(Token = "0x4000DFD")]
		BodyNoAnimation
	}

	[Token(Token = "0x200019D")]
	private enum BlendShape
	{
		[Token(Token = "0x4000DFF")]
		Pain,
		[Token(Token = "0x4000E00")]
		Alert,
		[Token(Token = "0x4000E01")]
		Angry,
		[Token(Token = "0x4000E02")]
		Tired,
		[Token(Token = "0x4000E03")]
		Stunned,
		[Token(Token = "0x4000E04")]
		Blink,
		[Token(Token = "0x4000E05")]
		Broken_Nose,
		[Token(Token = "0x4000E06")]
		Left_Eyebrow_Swollen,
		[Token(Token = "0x4000E07")]
		Right_Eyebrow_Swollen,
		[Token(Token = "0x4000E08")]
		Under_Left_Eye_Swollen,
		[Token(Token = "0x4000E09")]
		Under_Right_Eye_Swollen,
		[Token(Token = "0x4000E0A")]
		Left_Cheek_Swollen,
		[Token(Token = "0x4000E0B")]
		Right_Cheek_Swollen,
		[Token(Token = "0x4000E0C")]
		Upper_Lip_Swollen,
		[Token(Token = "0x4000E0D")]
		Lower_Lip_Swollen
	}

	[Token(Token = "0x200019E")]
	private enum KnockdownType
	{
		[Token(Token = "0x4000E0F")]
		Front,
		[Token(Token = "0x4000E10")]
		Back
	}

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float health;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BehaviourPuppet bp;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PuppetMaster pm;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SkinnedMeshRenderer fighter_body_skinned_mesh_renderer;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform look_at_target;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem particle;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource punch_audio;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve impact_audio_volume;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 power_col;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Rigidbody rb;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 angul;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool unpin;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private BodyIK bik;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform opponent;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Cuts cuts;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool cuts_draw;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform nose_blood_position;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Animator animator;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float current_pain__level;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float target_pain__level;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float pain_pause_timer;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float pain_speed;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float current_alert__level;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float target_alert__level;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float alert_speed;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float last_alert_level;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float punch_received_timer;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float knockdown_timer;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float look_weight;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool is_knockdown;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	private bool is_down;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private KnockdownType knockdown_type;

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x1344D00", Offset = "0x1344D00", VA = "0x1344D00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x1344D8C", Offset = "0x1344D8C", VA = "0x1344D8C")]
	private void OnAnimatorIK(int layerIndex)
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x1344D90", Offset = "0x1344D90", VA = "0x1344D90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x1344E44", Offset = "0x1344E44", VA = "0x1344E44")]
	private void looKForOpponent()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x1344EC8", Offset = "0x1344EC8", VA = "0x1344EC8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x1344DD8", Offset = "0x1344DD8", VA = "0x1344DD8")]
	private void test()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x1344E24", Offset = "0x1344E24", VA = "0x1344E24")]
	private void UpdateAI()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x1345208", Offset = "0x1345208", VA = "0x1345208")]
	private void setPunchReceivedTimer(float time)
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x13450BC", Offset = "0x13450BC", VA = "0x13450BC")]
	private void UpdateTimers()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x1345210", Offset = "0x1345210", VA = "0x1345210")]
	private void UpdateLookAt()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x13452AC", Offset = "0x13452AC", VA = "0x13452AC")]
	private void setAlertExpression(float alert_level, bool custom_speed = false, float speed = 50f)
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x13452D8", Offset = "0x13452D8", VA = "0x13452D8")]
	public void PunchReceived(BodyPart body_part, PunchReceiver punch_receiver, Collision collision, Vector3 velocity, float angle, float speed)
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x134540C", Offset = "0x134540C", VA = "0x134540C")]
	private void PunchVisualImpact(Collision collision, float power)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x1345500", Offset = "0x1345500", VA = "0x1345500")]
	private void PunchPlayAudio(Collision collision, float power)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x13458BC", Offset = "0x13458BC", VA = "0x13458BC")]
	public void Knock()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x1345128", Offset = "0x1345128", VA = "0x1345128")]
	private void GetUp()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x13458C8", Offset = "0x13458C8", VA = "0x13458C8")]
	private void Knockdown(BodyPart body_part, float normalized_power, float normalized_angle, float vertical_angle, float time = 5f)
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x13455C4", Offset = "0x13455C4", VA = "0x13455C4")]
	private void PunchAnimationReaction(BodyPart body_part, float vertical_angle, float horizontal_angle, float power)
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x1345A84", Offset = "0x1345A84", VA = "0x1345A84")]
	private void setPainExpression(float pain_level)
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x1344ECC", Offset = "0x1344ECC", VA = "0x1344ECC")]
	private void UpdateBlendshapes()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x1345AC4", Offset = "0x1345AC4", VA = "0x1345AC4")]
	private void setFaceBlendShape(BlendShape blend_shape_name, float value)
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x1345AE0", Offset = "0x1345AE0", VA = "0x1345AE0")]
	private int getBlendShapeIndex(BlendShape blend_shape_name)
	{
		return default(int);
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x1345AE8", Offset = "0x1345AE8", VA = "0x1345AE8")]
	public FighterController()
	{
	}
}
[Token(Token = "0x200019F")]
public class HandAnimation : MonoBehaviour
{
	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public XRNode hand;

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x134B288", Offset = "0x134B288", VA = "0x134B288")]
	private void Start()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x134B28C", Offset = "0x134B28C", VA = "0x134B28C")]
	private void Update()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x134B36C", Offset = "0x134B36C", VA = "0x134B36C")]
	public HandAnimation()
	{
	}
}
[Token(Token = "0x20001A0")]
public class HeavyBagLimits : GameMenu
{
	[Token(Token = "0x20001A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884C24", Offset = "0x884C24")]
	private sealed class <setTextVisible>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeavyBagLimits <>4__this;

		[Token(Token = "0x17000081")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600086C")]
			[Address(RVA = "0xB3E3DC", Offset = "0xB3E3DC", VA = "0xB3E3DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000082")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600086E")]
			[Address(RVA = "0xB3E424", Offset = "0xB3E424", VA = "0xB3E424", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0xB3E2F0", Offset = "0xB3E2F0", VA = "0xB3E2F0")]
		[DebuggerHidden]
		public <setTextVisible>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0xB3E31C", Offset = "0xB3E31C", VA = "0xB3E31C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0xB3E320", Offset = "0xB3E320", VA = "0xB3E320", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0xB3E3E4", Offset = "0xB3E3E4", VA = "0xB3E3E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform topLimit;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform bottomLimit;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameMenu setting;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh text;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameButton custom0;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameButton custom3;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IEnumerator coroutine;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float topLimitFloat;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float bottomLimitFloat;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameButton.ButtonType buttonCustom0;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private GameButton.ButtonType buttonCustom3;

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xF74798", Offset = "0xF74798", VA = "0xF74798")]
	private void Start()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xF74984", Offset = "0xF74984", VA = "0xF74984")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xF747C4", Offset = "0xF747C4", VA = "0xF747C4")]
	private void LoadData()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xF74988", Offset = "0xF74988", VA = "0xF74988", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xF74CDC", Offset = "0xF74CDC", VA = "0xF74CDC")]
	private void SeveBtn()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xF74DE4", Offset = "0xF74DE4", VA = "0xF74DE4")]
	private void SetVisibleText(bool b)
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xF74918", Offset = "0xF74918", VA = "0xF74918")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88A0C0", Offset = "0x88A0C0")]
	private IEnumerator setTextVisible()
	{
		return null;
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xF74E68", Offset = "0xF74E68", VA = "0xF74E68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xF74E6C", Offset = "0xF74E6C", VA = "0xF74E6C")]
	public HeavyBagLimits()
	{
	}
}
[Token(Token = "0x20001A2")]
public class HeavyBagEnduranceModeMenu : GameMenu
{
	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu back_game_menu;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMenu result_menu;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameButton start_button;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PauseButton stop_button;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameButton back_button;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject mini_menu;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HeavyBagTrainingController training_controller;

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x1350C50", Offset = "0x1350C50", VA = "0x1350C50", Slot = "5")]
	public override void PauseButtonPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x1350CB4", Offset = "0x1350CB4", VA = "0x1350CB4", Slot = "6")]
	public override void PauseButtonUnPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x1350D10", Offset = "0x1350D10", VA = "0x1350D10", Slot = "7")]
	public override void PressedFromScript(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x1350E48", Offset = "0x1350E48", VA = "0x1350E48", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x1350F80", Offset = "0x1350F80", VA = "0x1350F80")]
	public void StartGame()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x1350D5C", Offset = "0x1350D5C", VA = "0x1350D5C")]
	public void stopGame()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x1351030", Offset = "0x1351030", VA = "0x1351030")]
	public HeavyBagEnduranceModeMenu()
	{
	}
}
[Token(Token = "0x20001A3")]
public class HeavyBagFreeModeMenu : GameMenu
{
	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu back_game_menu;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMenu result_menu;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameButton start_button;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PauseButton stop_button;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameButton back_button;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject mini_menu;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HeavyBagTrainingController training_controller;

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x1351038", Offset = "0x1351038", VA = "0x1351038", Slot = "5")]
	public override void PauseButtonPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x135109C", Offset = "0x135109C", VA = "0x135109C", Slot = "6")]
	public override void PauseButtonUnPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x13510F8", Offset = "0x13510F8", VA = "0x13510F8", Slot = "7")]
	public override void PressedFromScript(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x135120C", Offset = "0x135120C", VA = "0x135120C", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x13513F8", Offset = "0x13513F8", VA = "0x13513F8")]
	public void StartGame()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x13514A4", Offset = "0x13514A4", VA = "0x13514A4")]
	public HeavyBagFreeModeMenu()
	{
	}
}
[Token(Token = "0x20001A4")]
public class HeavyBagHowToPlayMenu : GameMenu
{
	[Token(Token = "0x20001A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884C34", Offset = "0x884C34")]
	private sealed class <ExitMiniGame>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeavyBagHowToPlayMenu <>4__this;

		[Token(Token = "0x17000083")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000884")]
			[Address(RVA = "0xB3E2A0", Offset = "0xB3E2A0", VA = "0xB3E2A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000886")]
			[Address(RVA = "0xB3E2E8", Offset = "0xB3E2E8", VA = "0xB3E2E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0xB3E128", Offset = "0xB3E128", VA = "0xB3E128")]
		[DebuggerHidden]
		public <ExitMiniGame>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0xB3E154", Offset = "0xB3E154", VA = "0xB3E154", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0xB3E158", Offset = "0xB3E158", VA = "0xB3E158", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0xB3E2A8", Offset = "0xB3E2A8", VA = "0xB3E2A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu ok_game_menu;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMenu main_menu;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform main_menu_player_center;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject heavy_bag;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject heavy_bag_static;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform player;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MainMenuManager main_menu_manager;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private FadeInOut fade_in_out;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool wait;

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xF74514", Offset = "0xF74514", VA = "0xF74514")]
	private void MovePlayer(Transform position)
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xF74564", Offset = "0xF74564", VA = "0xF74564")]
	private void Awake()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xF7462C", Offset = "0xF7462C", VA = "0xF7462C", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xF74724", Offset = "0xF74724", VA = "0xF74724")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88A170", Offset = "0x88A170")]
	private IEnumerator ExitMiniGame()
	{
		return null;
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xF74790", Offset = "0xF74790", VA = "0xF74790")]
	public HeavyBagHowToPlayMenu()
	{
	}
}
[Token(Token = "0x20001A6")]
public class HeavyBagModeGameMenu : GameMenu
{
	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu back_game_menu;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMenu free_mode_game_menu;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameMenu timed_mode_game_menu;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameMenu endurance_mode_game_menu;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameMenu settings;

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xF74E80", Offset = "0xF74E80", VA = "0xF74E80", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xF74F68", Offset = "0xF74F68", VA = "0xF74F68")]
	public HeavyBagModeGameMenu()
	{
	}
}
[Token(Token = "0x20001A7")]
public class HeavyBagResultGameMenu : GameMenu
{
	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu mode_menu;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HeavyBagFreeModeMenu free_mode_menu;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HeavyBagEnduranceModeMenu endurance_mode_menu;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HeavyBagTimedModeMenu timed_mode_menu;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh number_of_hits;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh number_of_misses;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh average_hits_per_minute;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMesh average_misses_per_minute;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMesh time;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMesh score;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMesh number_of_hits_record;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMesh number_of_misses_record;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMesh average_hits_per_minute_record;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMesh average_misses_per_minute_record;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMesh time_record;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMesh score_record;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMesh last_score;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh last_hits;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh last_misses;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextMesh last_time;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TextMesh last_ahpm;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TextMesh last_ampm;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public TextMesh last_record;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private HeavyBagTrainingController.TrainingMode mode;

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xF74F70", Offset = "0xF74F70", VA = "0xF74F70")]
	public void setStatistcs(HeavyBagTrainingController.TrainingMode training_mode, int hits, int misses, float ahpm, float ampm, float art, float aps, float t, float s)
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xF75E50", Offset = "0xF75E50", VA = "0xF75E50")]
	private string TimeToString(float time)
	{
		return null;
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xF75F1C", Offset = "0xF75F1C", VA = "0xF75F1C", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xF7611C", Offset = "0xF7611C", VA = "0xF7611C")]
	public HeavyBagResultGameMenu()
	{
	}
}
[Token(Token = "0x20001A8")]
public class HeavyBagTimedModeMenu : GameMenu
{
	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu back_game_menu;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMenu result_menu;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameButton start_button;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PauseButton stop_button;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameButton back_button;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject mini_menu;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HeavyBagTrainingController training_controller;

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xF76124", Offset = "0xF76124", VA = "0xF76124", Slot = "5")]
	public override void PauseButtonPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xF761A0", Offset = "0xF761A0", VA = "0xF761A0", Slot = "6")]
	public override void PauseButtonUnPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xF76204", Offset = "0xF76204", VA = "0xF76204", Slot = "7")]
	public override void PressedFromScript(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xF7634C", Offset = "0xF7634C", VA = "0xF7634C", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xF76070", Offset = "0xF76070", VA = "0xF76070")]
	public void StartGame()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xF76268", Offset = "0xF76268", VA = "0xF76268")]
	public void stopGame()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xF765CC", Offset = "0xF765CC", VA = "0xF765CC")]
	public HeavyBagTimedModeMenu()
	{
	}
}
[Token(Token = "0x20001A9")]
public class HeavyBagTrainingController : MonoBehaviour
{
	[Token(Token = "0x20001AA")]
	public enum TrainingMode
	{
		[Token(Token = "0x4000E7F")]
		FREE,
		[Token(Token = "0x4000E80")]
		TIMED,
		[Token(Token = "0x4000E81")]
		ENDURANCE
	}

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource boxing_bell;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TrainingMode training_mode;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HeavyBagResultGameMenu result_menu;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HeavyBagEnduranceModeMenu endurance_menu;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HeavyBagTimedModeMenu timed_menu;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh mini_menu_score;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh mini_menu_time;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh mini_menu_endurance_mode_time;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject mini_menu_endurance_mode_bar;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMesh mini_menu_timed_mode_time;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMesh mini_menu_timed_mode_score;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int number_of_hits;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int number_of_misses;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float average_hits_per_minute;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float average_misses_per_minute;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float average_reaction_time;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float average_punch_speed;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float time;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float score;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float hit_time;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float target_timer;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float total_target_timer;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float total_punch_speed;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float delta_time;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool start;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float endurance;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public PunchBagTarget punch_bag_target;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float timed_time;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float goal_score_increment;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float goal_score;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool isPaused;

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xF765D4", Offset = "0xF765D4", VA = "0xF765D4")]
	public void PauseGame(bool pause)
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xF765E0", Offset = "0xF765E0", VA = "0xF765E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xF765F8", Offset = "0xF765F8", VA = "0xF765F8")]
	private void UpdateMiniMenu()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xF76770", Offset = "0xF76770", VA = "0xF76770")]
	private void UpdateMiniMenuEnduranceMode()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xF76824", Offset = "0xF76824", VA = "0xF76824")]
	private void UpdateMiniMenuTimedMode()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xF768F4", Offset = "0xF768F4", VA = "0xF768F4")]
	private void UpdateEnduranceMode()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xF76A2C", Offset = "0xF76A2C", VA = "0xF76A2C")]
	private void UpdateTimedMode()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xF76A84", Offset = "0xF76A84", VA = "0xF76A84")]
	private void UpdateTimedTime()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xF76B1C", Offset = "0xF76B1C", VA = "0xF76B1C")]
	private void setTimedGoal()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xF76998", Offset = "0xF76998", VA = "0xF76998")]
	private void UpdateEndurance()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xF766A4", Offset = "0xF766A4", VA = "0xF766A4")]
	private string TimeToString(float time)
	{
		return null;
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xF76B3C", Offset = "0xF76B3C", VA = "0xF76B3C")]
	public void setTrainingMode(TrainingMode mode)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xF76B44", Offset = "0xF76B44", VA = "0xF76B44")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xF7694C", Offset = "0xF7694C", VA = "0xF7694C")]
	private void UpdateTimer()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xF7649C", Offset = "0xF7649C", VA = "0xF7649C")]
	public void StartGame()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xF76518", Offset = "0xF76518", VA = "0xF76518")]
	public void StopGame()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xF76C30", Offset = "0xF76C30", VA = "0xF76C30")]
	public void newTarget()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xF76C38", Offset = "0xF76C38", VA = "0xF76C38")]
	public void HitReceived(float hit_speed)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xF76D0C", Offset = "0xF76D0C", VA = "0xF76D0C")]
	public void MissReceived()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xF76CE0", Offset = "0xF76CE0", VA = "0xF76CE0")]
	private void TimedComputeScore()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xF76D58", Offset = "0xF76D58", VA = "0xF76D58")]
	private void computeAverageMisesPerMinute()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xF76D7C", Offset = "0xF76D7C", VA = "0xF76D7C")]
	private void computeAverageHitsPerMinute()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xF76DA0", Offset = "0xF76DA0", VA = "0xF76DA0")]
	private void computeAveragePunchSpeed()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xF76684", Offset = "0xF76684", VA = "0xF76684")]
	private float computeScore()
	{
		return default(float);
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xF76CB4", Offset = "0xF76CB4", VA = "0xF76CB4")]
	private void computeAverageReactionTime()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xF76540", Offset = "0xF76540", VA = "0xF76540")]
	public void computeStatistics()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xF76BF4", Offset = "0xF76BF4", VA = "0xF76BF4")]
	private void clear()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xF76DC4", Offset = "0xF76DC4", VA = "0xF76DC4")]
	public HeavyBagTrainingController()
	{
	}
}
[Token(Token = "0x20001AB")]
public class PunchBag : MonoBehaviour
{
	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb_bag;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PunchBagTarget punch_bag_target;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PunchBagHitAudio hit_audio;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PunchBagChain chain_audio;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem impact_particle;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve impact_power;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool coll;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float collision_timer;

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x2057E4C", Offset = "0x2057E4C", VA = "0x2057E4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x2057E50", Offset = "0x2057E50", VA = "0x2057E50")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x20580C4", Offset = "0x20580C4", VA = "0x20580C4")]
	private void PunchVisualImpact(Collision collision, float power)
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x20582BC", Offset = "0x20582BC", VA = "0x20582BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x2058304", Offset = "0x2058304", VA = "0x2058304")]
	public PunchBag()
	{
	}
}
[Token(Token = "0x20001AC")]
public class PunchBagChain : MonoBehaviour
{
	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource[] audio;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve impact_audio_volume;

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x205830C", Offset = "0x205830C", VA = "0x205830C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x20581FC", Offset = "0x20581FC", VA = "0x20581FC")]
	public void PunchPlayAudio(Collision collision, float speed)
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x2058360", Offset = "0x2058360", VA = "0x2058360")]
	public PunchBagChain()
	{
	}
}
[Token(Token = "0x20001AD")]
public class PunchBagHitAudio : MonoBehaviour
{
	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource[] audio;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve impact_audio_volume;

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x2058368", Offset = "0x2058368", VA = "0x2058368")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x2057F80", Offset = "0x2057F80", VA = "0x2057F80")]
	public void PunchPlayAudio(Collision collision, float speed)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x20583BC", Offset = "0x20583BC", VA = "0x20583BC")]
	public PunchBagHitAudio()
	{
	}
}
[Token(Token = "0x20001AE")]
public class PunchBagModeReceiver : MonoBehaviour
{
	[Token(Token = "0x20001AF")]
	public enum PunchBagReceiverType
	{
		[Token(Token = "0x4000E91")]
		PunchBag,
		[Token(Token = "0x4000E92")]
		Target
	}

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PunchBagReceiverType punch_bag_receiver_type;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PunchBagTarget punch_bag_target;

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x20583C4", Offset = "0x20583C4", VA = "0x20583C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x20583C8", Offset = "0x20583C8", VA = "0x20583C8")]
	public PunchBagReceiverType getBodyPartType()
	{
		return default(PunchBagReceiverType);
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x20583D0", Offset = "0x20583D0", VA = "0x20583D0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x2058B80", Offset = "0x2058B80", VA = "0x2058B80")]
	public PunchBagModeReceiver()
	{
	}
}
[Token(Token = "0x20001B0")]
public class PunchBagPlayerGlove : PunchEmitter
{
	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform target;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool is_colliding;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collision c;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Rigidbody rb;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 last_target_position;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public PunchBagTarget.GloveSide side;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float vel_before_col;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float lastCollision;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool deactivate_event;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float speed;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Collision col;

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x2058B88", Offset = "0x2058B88", VA = "0x2058B88")]
	public PunchBagTarget.GloveSide GetGloveSide()
	{
		return default(PunchBagTarget.GloveSide);
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x2058B90", Offset = "0x2058B90", VA = "0x2058B90")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x2058BF8", Offset = "0x2058BF8", VA = "0x2058BF8", Slot = "4")]
	public override void DeactivateEvent()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x2058C28", Offset = "0x2058C28", VA = "0x2058C28")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x2058D9C", Offset = "0x2058D9C", VA = "0x2058D9C")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x2058E88", Offset = "0x2058E88", VA = "0x2058E88")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x2058C2C", Offset = "0x2058C2C", VA = "0x2058C2C")]
	private void CollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x2058DA0", Offset = "0x2058DA0", VA = "0x2058DA0")]
	private void UpdateLastCollisionTime(Collision collision)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x2058E8C", Offset = "0x2058E8C", VA = "0x2058E8C")]
	private new void FixedUpdate()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x20590D0", Offset = "0x20590D0", VA = "0x20590D0")]
	public PunchBagPlayerGlove()
	{
	}
}
[Token(Token = "0x20001B1")]
public class PunchBagTarget : MonoBehaviour
{
	[Token(Token = "0x20001B2")]
	public enum GloveSide
	{
		[Token(Token = "0x4000EC5")]
		Left,
		[Token(Token = "0x4000EC6")]
		Right,
		[Token(Token = "0x4000EC7")]
		Both
	}

	[Token(Token = "0x20001B3")]
	private enum PunchBagSide
	{
		[Token(Token = "0x4000EC9")]
		Left,
		[Token(Token = "0x4000ECA")]
		Center,
		[Token(Token = "0x4000ECB")]
		Right
	}

	[Token(Token = "0x20001B4")]
	public enum TargetType
	{
		[Token(Token = "0x4000ECD")]
		left,
		[Token(Token = "0x4000ECE")]
		right,
		[Token(Token = "0x4000ECF")]
		one_hit,
		[Token(Token = "0x4000ED0")]
		multiple_hit,
		[Token(Token = "0x4000ED1")]
		left_left,
		[Token(Token = "0x4000ED2")]
		right_right,
		[Token(Token = "0x4000ED3")]
		left_right,
		[Token(Token = "0x4000ED4")]
		right_left
	}

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GloveSide punch_glove;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject heavy_bag;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject go_parent;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject go;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject miss_target_object;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject miss_target_child;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float min;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float max;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float scale;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool toggle;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool miss_target;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float time;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float time_miss_target;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float miss_target_scale;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float miss_target_timer;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool hide;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float miss_target_height;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture texture;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture heavy_bag_punch_1;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture heavy_bag_punch_left;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Texture heavy_bag_punch_right;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Texture heavy_bag_punch_left_right;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Texture heavy_bag_punch_right_left;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Texture heavy_bag_punch_left_left;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Texture heavy_bag_punch_right_right;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Texture heavy_bag_punch_left_right_2;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Texture heavy_bag_punch_right_left_2;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public HeavyBagTrainingController training_controller;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool start;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Texture current_texture;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Material mat;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Material miss_target_material;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private PunchBagSide punch_bag_side;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private int target_punch_counter;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int total_punch_counter;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int error_punch_counter;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private TargetType target_type;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform center;

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x205914C", Offset = "0x205914C", VA = "0x205914C")]
	public void setStart(bool on)
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x20591E4", Offset = "0x20591E4", VA = "0x20591E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x20591EC", Offset = "0x20591EC", VA = "0x20591EC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x2058924", Offset = "0x2058924", VA = "0x2058924")]
	public void punchBagCollisionReceived(Collision collision)
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x20584E4", Offset = "0x20584E4", VA = "0x20584E4")]
	public void targetPunchReceived(Collision collision, GloveSide side)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x2059928", Offset = "0x2059928", VA = "0x2059928")]
	private void changeTargetTexture()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x205953C", Offset = "0x205953C", VA = "0x205953C")]
	public void setTarget()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x20599C8", Offset = "0x20599C8", VA = "0x20599C8")]
	public PunchBagTarget()
	{
	}
}
[Token(Token = "0x20001B5")]
public class HitWhiteEffect : MonoBehaviour
{
	[Token(Token = "0x20001B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884C44", Offset = "0x884C44")]
	private sealed class <Fade>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HitWhiteEffect <>4__this;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startAlpha;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endAlpha;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x17000086")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008E3")]
			[Address(RVA = "0xB3E5FC", Offset = "0xB3E5FC", VA = "0xB3E5FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000087")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008E5")]
			[Address(RVA = "0xB3E644", Offset = "0xB3E644", VA = "0xB3E644", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xB3E42C", Offset = "0xB3E42C", VA = "0xB3E42C")]
		[DebuggerHidden]
		public <Fade>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xB3E458", Offset = "0xB3E458", VA = "0xB3E458", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xB3E45C", Offset = "0xB3E45C", VA = "0xB3E45C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xB3E604", Offset = "0xB3E604", VA = "0xB3E604", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887388", Offset = "0x887388")]
	public float fadeTime;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8873C0", Offset = "0x8873C0")]
	public Color fadeColor;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool fadeOnStart;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int renderQueue;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float uiFadeAlpha;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshRenderer fadeRenderer;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter fadeMesh;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material fadeMaterial;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isFading;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8873F8", Offset = "0x8873F8")]
	private float <currentAlpha>k__BackingField;

	[Token(Token = "0x17000085")]
	public float currentAlpha
	{
		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xF77F84", Offset = "0xF77F84", VA = "0xF77F84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88A220", Offset = "0x88A220")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008D2")]
		[Address(RVA = "0xF77F8C", Offset = "0xF77F8C", VA = "0xF77F8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88A230", Offset = "0x88A230")]
		private set
		{
		}
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xF77F94", Offset = "0xF77F94", VA = "0xF77F94")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xF78340", Offset = "0xF78340", VA = "0xF78340")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xF783F4", Offset = "0xF783F4", VA = "0xF783F4")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xF78428", Offset = "0xF78428", VA = "0xF78428")]
	private void OnLevelFinishedLoading(int level)
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xF7845C", Offset = "0xF7845C", VA = "0xF7845C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xF7849C", Offset = "0xF7849C", VA = "0xF7849C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xF784B0", Offset = "0xF784B0", VA = "0xF784B0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xF78610", Offset = "0xF78610", VA = "0xF78610")]
	public void SetUIFade(float level)
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xF78338", Offset = "0xF78338", VA = "0xF78338")]
	public void SetFadeLevel(float level)
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xF78374", Offset = "0xF78374", VA = "0xF78374")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88A240", Offset = "0x88A240")]
	private IEnumerator Fade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xF7863C", Offset = "0xF7863C", VA = "0xF7863C")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xF78758", Offset = "0xF78758", VA = "0xF78758")]
	private void Update()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xF7875C", Offset = "0xF7875C", VA = "0xF7875C")]
	public HitWhiteEffect()
	{
	}
}
[Token(Token = "0x20001B7")]
public class MainMenuSettings : GameMenu
{
	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool configured;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 play_area_size;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool play_area_auto;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool Mode3D;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float play_area_width;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float play_area_depth;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float height_in_cm;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh cm_tx;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh inch_tx;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh bg_sound_volume_text;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh play_area_width_text;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMesh play_area_depth_text;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource bg_sound;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform play_area_selection_mark;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform mode_selection_mark;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform face_forward_mark;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform mark3D;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform auto_mark;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform custom_mark;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject play_area_arrows;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameMenu main_menu;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameMenu language_menu;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform audience_selection_mark;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform on_mark;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform off_mark;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public RecenterPlayArea recenterPlayArea;

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x1072DB4", Offset = "0x1072DB4", VA = "0x1072DB4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x1073070", Offset = "0x1073070", VA = "0x1073070")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x1072DDC", Offset = "0x1072DDC", VA = "0x1072DDC")]
	private float getHeight()
	{
		return default(float);
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x10734E0", Offset = "0x10734E0", VA = "0x10734E0")]
	private void IncreasePlayAreaWidth()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x1073598", Offset = "0x1073598", VA = "0x1073598")]
	private void IncreasePlayAreaDepth()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x1073650", Offset = "0x1073650", VA = "0x1073650")]
	private void DecreasePlayAreaWidth()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x1073708", Offset = "0x1073708", VA = "0x1073708")]
	private void DecreasePlayAreaDepth()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x10737C0", Offset = "0x10737C0", VA = "0x10737C0")]
	private void heightUp()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x10737E4", Offset = "0x10737E4", VA = "0x10737E4")]
	private void heightDown()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x1072E4C", Offset = "0x1072E4C", VA = "0x1072E4C")]
	private void UpdateHeight()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x1073808", Offset = "0x1073808", VA = "0x1073808")]
	private void setPlayAreaAuto()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x10739B4", Offset = "0x10739B4", VA = "0x10739B4")]
	private void setPlayAreaCustom()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x10739BC", Offset = "0x10739BC", VA = "0x10739BC")]
	private void back()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x1073AD8", Offset = "0x1073AD8", VA = "0x1073AD8", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x1073F44", Offset = "0x1073F44", VA = "0x1073F44")]
	public void BgSoundUp()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x1073E54", Offset = "0x1073E54", VA = "0x1073E54")]
	public void BgSoundDown()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x1074038", Offset = "0x1074038", VA = "0x1074038")]
	public MainMenuSettings()
	{
	}
}
[Token(Token = "0x20001B8")]
public class AICustomSettingsMenu : GameMenu
{
	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int page_nr;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int selected_ai_id;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AI_STAMINA;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AI_STAMINA_RECOVERY_SPEED;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AI_HEALTH;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AI_HEALTH_RECOVERY_SPEED;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AI_SPEED;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AI_RESISTANCE_TO_BLOWS;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AI_PUNCHING_POWER;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AI_KNOCKOUT_RESISTANCE;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string NUMBER_OF_ROUNDS;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string ROUND_DURATION;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string NUMBER_OF_KNOCKDOWNS_TO_WIN;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string POINTS_ADVANTAGE_TO_WIN;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int ai_stamina;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int ai_stamina_recovery_speed;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int ai_health;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int ai_health_recovery_speed;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int ai_speed;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int ai_resistance_to_blows;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int ai_punching_power;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int ai_knockout_resistance;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int number_of_rounds;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int round_duration;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int number_of_knockdowns_to_win;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int points_advantage_to_win;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMesh ai_stamina_text;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMesh ai_stamina_recovery_speed_text;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMesh ai_health_text;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMesh ai_health_recovery_speed_text;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMesh ai_speed_text;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMesh ai_resistance_to_blows_text;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMesh ai_punching_power_text;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMesh ai_knockout_resistance_text;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMesh number_of_rounds_text;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMesh round_duration_text;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh number_of_knockdowns_to_win_text;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh points_advantage_to_win_text;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameMenu ai_level_setting_menu;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameMenu ai_custom_setting_0;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameMenu ai_custom_setting_1;

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x1CD4300", Offset = "0x1CD4300", VA = "0x1CD4300")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x1CD4304", Offset = "0x1CD4304", VA = "0x1CD4304")]
	private void LoadData()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x1CD48B4", Offset = "0x1CD48B4", VA = "0x1CD48B4")]
	private void changeSettings()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x1CD4BA0", Offset = "0x1CD4BA0", VA = "0x1CD4BA0")]
	private void increaseAiStamina()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x1CD4C28", Offset = "0x1CD4C28", VA = "0x1CD4C28")]
	private void decreaseAiStamina()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x1CD4CB0", Offset = "0x1CD4CB0", VA = "0x1CD4CB0")]
	private void increaseAiHealth()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x1CD4D38", Offset = "0x1CD4D38", VA = "0x1CD4D38")]
	private void decreaseAiHealth()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x1CD4DC0", Offset = "0x1CD4DC0", VA = "0x1CD4DC0")]
	private void increaseAiStaminaRecoverySpeed()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x1CD4E48", Offset = "0x1CD4E48", VA = "0x1CD4E48")]
	private void decreaseAiStaminaRecoverySpeed()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x1CD4ED0", Offset = "0x1CD4ED0", VA = "0x1CD4ED0")]
	private void increaseAiHealthRecoverySpeed()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x1CD4F58", Offset = "0x1CD4F58", VA = "0x1CD4F58")]
	private void decreaseAiHealtRecoverySpeed()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x1CD4FE0", Offset = "0x1CD4FE0", VA = "0x1CD4FE0")]
	private void increaseAiSpeed()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x1CD5068", Offset = "0x1CD5068", VA = "0x1CD5068")]
	private void decreaseAiSpeed()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x1CD50F0", Offset = "0x1CD50F0", VA = "0x1CD50F0")]
	private void increaseAiResistanceToBlows()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x1CD5178", Offset = "0x1CD5178", VA = "0x1CD5178")]
	private void decreaseAiResistanceToBlows()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x1CD5200", Offset = "0x1CD5200", VA = "0x1CD5200")]
	private void increaseAiPunchingPower()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x1CD5288", Offset = "0x1CD5288", VA = "0x1CD5288")]
	private void decreaseAiPunchingPower()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x1CD5310", Offset = "0x1CD5310", VA = "0x1CD5310")]
	private void increaseAiKnockoutResistance()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x1CD5398", Offset = "0x1CD5398", VA = "0x1CD5398")]
	private void decreaseAiKnockoutResistance()
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x1CD5420", Offset = "0x1CD5420", VA = "0x1CD5420")]
	private void increaseNumberOfRounds()
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x1CD5470", Offset = "0x1CD5470", VA = "0x1CD5470")]
	private void decreaseNumbersOfRounds()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x1CD54C0", Offset = "0x1CD54C0", VA = "0x1CD54C0")]
	private void increaseRoundDuration()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x1CD5548", Offset = "0x1CD5548", VA = "0x1CD5548")]
	private void decreaseRoundDuration()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x1CD55D0", Offset = "0x1CD55D0", VA = "0x1CD55D0")]
	private void increaseNumberOfKnockdownsToWin()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x1CD5620", Offset = "0x1CD5620", VA = "0x1CD5620")]
	private void decreaseAiNumberOfKnockdownsToWin()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x1CD5670", Offset = "0x1CD5670", VA = "0x1CD5670")]
	private void increasePointsAdvantageToWin()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x1CD56F8", Offset = "0x1CD56F8", VA = "0x1CD56F8")]
	private void decreasePointsAdvantageToWin()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x1CD5780", Offset = "0x1CD5780", VA = "0x1CD5780", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x1CD5A40", Offset = "0x1CD5A40", VA = "0x1CD5A40")]
	public AICustomSettingsMenu()
	{
	}
}
[Token(Token = "0x20001B9")]
public class AILevelSettingMenu : GameMenu
{
	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int selected_ai_id;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int level;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject custom_button;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform custom_dot;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform normal_dot;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform level_selection_mark;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameMenu ai_settings;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameMenu fighter_selection;

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x1CD5E30", Offset = "0x1CD5E30", VA = "0x1CD5E30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x1CD5F44", Offset = "0x1CD5F44", VA = "0x1CD5F44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x1CD5ECC", Offset = "0x1CD5ECC", VA = "0x1CD5ECC")]
	private void HideShowCustomButton()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x1CD6054", Offset = "0x1CD6054", VA = "0x1CD6054")]
	private void setNormalLevel()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x1CD60C4", Offset = "0x1CD60C4", VA = "0x1CD60C4")]
	private void setCustomLevel()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x1CD6138", Offset = "0x1CD6138", VA = "0x1CD6138", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x1CD6260", Offset = "0x1CD6260", VA = "0x1CD6260")]
	public AILevelSettingMenu()
	{
	}
}
[Token(Token = "0x20001BA")]
public class BoxingMatchMenu : GameMenu
{
	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RingManager ring_manager;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameButton start_button;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameButton next_round_button;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FadeInOut fade_in_out;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BoxingMatchExitMenu exit_menu;

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x1354034", Offset = "0x1354034", VA = "0x1354034")]
	private void Awake()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x13540B8", Offset = "0x13540B8", VA = "0x13540B8")]
	public void HideNextRoundButton()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x13540E8", Offset = "0x13540E8", VA = "0x13540E8", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x13541E8", Offset = "0x13541E8", VA = "0x13541E8")]
	public BoxingMatchMenu()
	{
	}
}
[Token(Token = "0x20001BB")]
public class FighterSelection : GameMenu
{
	[Token(Token = "0x20001BC")]
	public enum Mode
	{
		[Token(Token = "0x4000F4D")]
		RING,
		[Token(Token = "0x4000F4E")]
		UNDERGROUND
	}

	[Token(Token = "0x20001BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884C54", Offset = "0x884C54")]
	private sealed class <StartGame>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FighterSelection <>4__this;

		[Token(Token = "0x17000088")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000932")]
			[Address(RVA = "0xB3CA74", Offset = "0xB3CA74", VA = "0xB3CA74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000089")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000934")]
			[Address(RVA = "0xB3CABC", Offset = "0xB3CABC", VA = "0xB3CABC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0xB3C814", Offset = "0xB3C814", VA = "0xB3C814")]
		[DebuggerHidden]
		public <StartGame>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0xB3C840", Offset = "0xB3C840", VA = "0xB3C840", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0xB3C844", Offset = "0xB3C844", VA = "0xB3C844", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0xB3CA7C", Offset = "0xB3CA7C", VA = "0xB3CA7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string PLAYER_INDEX;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string HUMAN_PLAYER_HEIGHT;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D[] fighter_poster;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MainMenuManager main_menu_manager;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material material;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh cm_tx;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh inch_tx;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int index;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Mode fight_mode;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int ring_mode_min_index;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int ring_mode_max_index;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int underground_mode_min_index;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int underground_mode_max_index;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int min;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int max;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject arrow_left;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject arrow_right;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float height_in_cm;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private FadeInOut fade_in_out;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameMenu settings;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public MenuStatistics stats;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool start;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public RecenterPlayArea recenter;

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x1345AF0", Offset = "0x1345AF0", VA = "0x1345AF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x1345DA8", Offset = "0x1345DA8", VA = "0x1345DA8")]
	private float getHeight()
	{
		return default(float);
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x134603C", Offset = "0x134603C", VA = "0x134603C", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x1346440", Offset = "0x1346440", VA = "0x1346440")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88A2F0", Offset = "0x88A2F0")]
	private IEnumerator StartGame()
	{
		return null;
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x134641C", Offset = "0x134641C", VA = "0x134641C")]
	private void heightUp()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x13463F8", Offset = "0x13463F8", VA = "0x13463F8")]
	private void heightDown()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x1345E18", Offset = "0x1345E18", VA = "0x1345E18")]
	private void UpdateHeight()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x13464AC", Offset = "0x13464AC", VA = "0x13464AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x13464E0", Offset = "0x13464E0", VA = "0x13464E0")]
	public void setMode(Mode mode)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x1345BF4", Offset = "0x1345BF4", VA = "0x1345BF4")]
	private void setPoster()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x1346378", Offset = "0x1346378", VA = "0x1346378")]
	private void nextFighter()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x13462F8", Offset = "0x13462F8", VA = "0x13462F8")]
	private void previousFighter()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x1345D24", Offset = "0x1345D24", VA = "0x1345D24")]
	private void UpdatePoster()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x1346508", Offset = "0x1346508", VA = "0x1346508")]
	public FighterSelection()
	{
	}
}
[Token(Token = "0x20001BE")]
public class GameButton : MonoBehaviour
{
	[Token(Token = "0x20001BF")]
	public enum ButtonType
	{
		[Token(Token = "0x4000F59")]
		OK,
		[Token(Token = "0x4000F5A")]
		EXIT,
		[Token(Token = "0x4000F5B")]
		FREE,
		[Token(Token = "0x4000F5C")]
		TIMED,
		[Token(Token = "0x4000F5D")]
		ENDURANCE,
		[Token(Token = "0x4000F5E")]
		BACK,
		[Token(Token = "0x4000F5F")]
		START,
		[Token(Token = "0x4000F60")]
		STOP,
		[Token(Token = "0x4000F61")]
		HIDE,
		[Token(Token = "0x4000F62")]
		SHOW,
		[Token(Token = "0x4000F63")]
		RESTART,
		[Token(Token = "0x4000F64")]
		SETTING,
		[Token(Token = "0x4000F65")]
		DOWN,
		[Token(Token = "0x4000F66")]
		UP,
		[Token(Token = "0x4000F67")]
		ONE_MIN,
		[Token(Token = "0x4000F68")]
		TWO_MIN,
		[Token(Token = "0x4000F69")]
		FIVE_MIN,
		[Token(Token = "0x4000F6A")]
		TEN_MIN,
		[Token(Token = "0x4000F6B")]
		BOXING_DUMMY,
		[Token(Token = "0x4000F6C")]
		HEAVY_BAG,
		[Token(Token = "0x4000F6D")]
		BOXING_MACHINE,
		[Token(Token = "0x4000F6E")]
		BOXING_BAR,
		[Token(Token = "0x4000F6F")]
		DOUBLE_END_BAG,
		[Token(Token = "0x4000F70")]
		SPEED_BAG,
		[Token(Token = "0x4000F71")]
		RING_FIGHT,
		[Token(Token = "0x4000F72")]
		STREET_FIGHT,
		[Token(Token = "0x4000F73")]
		NEXT_ROUND,
		[Token(Token = "0x4000F74")]
		LEFT,
		[Token(Token = "0x4000F75")]
		RIGHT,
		[Token(Token = "0x4000F76")]
		STATS,
		[Token(Token = "0x4000F77")]
		PADS,
		[Token(Token = "0x4000F78")]
		LEFT_BG_VOLUME,
		[Token(Token = "0x4000F79")]
		RIGHT_BG_VOLUME,
		[Token(Token = "0x4000F7A")]
		PLAY_AREA_WIDTH_LEFT,
		[Token(Token = "0x4000F7B")]
		PLAY_AREA_WIDTH_RIGHT,
		[Token(Token = "0x4000F7C")]
		PLAY_AREA_DEPTH_LEFT,
		[Token(Token = "0x4000F7D")]
		PLAY_AREA_DEPTH_RIGHT,
		[Token(Token = "0x4000F7E")]
		PLAYER_HEIGHT_LEFT,
		[Token(Token = "0x4000F7F")]
		PLAYER_HEIGHT_RIGHT,
		[Token(Token = "0x4000F80")]
		MODE3D,
		[Token(Token = "0x4000F81")]
		MODEFACE_FORWARD,
		[Token(Token = "0x4000F82")]
		AUTO_AREA_SIZE,
		[Token(Token = "0x4000F83")]
		CUSTOM_AREA_SIZE,
		[Token(Token = "0x4000F84")]
		LEVEL_NORMAL,
		[Token(Token = "0x4000F85")]
		LEVEL_CUSTOM,
		[Token(Token = "0x4000F86")]
		CUSTOM,
		[Token(Token = "0x4000F87")]
		AI_STAMINA_INCREASE,
		[Token(Token = "0x4000F88")]
		AI_STAMINA_RECOVERY_SPEED_INCREASE,
		[Token(Token = "0x4000F89")]
		AI_HEALTH_INCREASE,
		[Token(Token = "0x4000F8A")]
		AI_HEALTH_RECOVERY_SPEED_INCREASE,
		[Token(Token = "0x4000F8B")]
		AI_SPEED_INCREASE,
		[Token(Token = "0x4000F8C")]
		AI_RESISTANCE_TO_BLOWS_INCREASE,
		[Token(Token = "0x4000F8D")]
		AI_PUNCHING_POWER_INCREASE,
		[Token(Token = "0x4000F8E")]
		AI_KNOCKOUT_RESISTANCE_INCREASE,
		[Token(Token = "0x4000F8F")]
		NUMBER_OF_ROUNDS_INCREASE,
		[Token(Token = "0x4000F90")]
		ROUND_DURATION_INCREASE,
		[Token(Token = "0x4000F91")]
		NUMBER_OF_KNOCKDOWNS_TO_WIN_INCREASE,
		[Token(Token = "0x4000F92")]
		POINTS_ADVANTAGE_TO_WIN_INCREASE,
		[Token(Token = "0x4000F93")]
		AI_STAMINA_DECREASE,
		[Token(Token = "0x4000F94")]
		AI_STAMINA_RECOVERY_SPEED_DECREASE,
		[Token(Token = "0x4000F95")]
		AI_HEALTH_DECREASE,
		[Token(Token = "0x4000F96")]
		AI_HEALTH_RECOVERY_SPEED_DECREASE,
		[Token(Token = "0x4000F97")]
		AI_SPEED_DECREASE,
		[Token(Token = "0x4000F98")]
		AI_RESISTANCE_TO_BLOWS_DECREASE,
		[Token(Token = "0x4000F99")]
		AI_PUNCHING_POWER_DECREASE,
		[Token(Token = "0x4000F9A")]
		AI_KNOCKOUT_RESISTANCE_DECREASE,
		[Token(Token = "0x4000F9B")]
		NUMBER_OF_ROUNDS_DECREASE,
		[Token(Token = "0x4000F9C")]
		ROUND_DURATION_DECREASE,
		[Token(Token = "0x4000F9D")]
		NUMBER_OF_KNOCKDOWNS_TO_WIN_DECREASE,
		[Token(Token = "0x4000F9E")]
		POINTS_ADVANTAGE_TO_WIN_DECREASE,
		[Token(Token = "0x4000F9F")]
		BACK_IN_BACK,
		[Token(Token = "0x4000FA0")]
		NEXT,
		[Token(Token = "0x4000FA1")]
		ON,
		[Token(Token = "0x4000FA2")]
		OFF,
		[Token(Token = "0x4000FA3")]
		CUSTOM_0,
		[Token(Token = "0x4000FA4")]
		CUSTOM_1,
		[Token(Token = "0x4000FA5")]
		CUSTOM_2,
		[Token(Token = "0x4000FA6")]
		CUSTOM_3,
		[Token(Token = "0x4000FA7")]
		CUSTOM_4,
		[Token(Token = "0x4000FA8")]
		CUSTOM_5,
		[Token(Token = "0x4000FA9")]
		CUSTOM_6,
		[Token(Token = "0x4000FAA")]
		CUSTOM_7,
		[Token(Token = "0x4000FAB")]
		CUSTOM_8,
		[Token(Token = "0x4000FAC")]
		CUSTOM_9,
		[Token(Token = "0x4000FAD")]
		ENGLISH,
		[Token(Token = "0x4000FAE")]
		CHINESE,
		[Token(Token = "0x4000FAF")]
		DEFAULT,
		[Token(Token = "0x4000FB0")]
		LANGUAGE
	}

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource button_audio;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ButtonType button;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMenu game_menu;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool is_pressed;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float time;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject go;

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x1348AA0", Offset = "0x1348AA0", VA = "0x1348AA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x1348AC8", Offset = "0x1348AC8", VA = "0x1348AC8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x1348ACC", Offset = "0x1348ACC", VA = "0x1348ACC")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x1348AF4", Offset = "0x1348AF4", VA = "0x1348AF4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x1348B9C", Offset = "0x1348B9C", VA = "0x1348B9C")]
	public GameButton()
	{
	}
}
[Token(Token = "0x20001C0")]
public class GameMenu : MonoBehaviour
{
	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool is_pressed;

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x1348BA4", Offset = "0x1348BA4", VA = "0x1348BA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x1348BB0", Offset = "0x1348BB0", VA = "0x1348BB0")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x1348BB8", Offset = "0x1348BB8", VA = "0x1348BB8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x1341234", Offset = "0x1341234", VA = "0x1341234", Slot = "4")]
	public virtual void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x1340F80", Offset = "0x1340F80", VA = "0x1340F80", Slot = "5")]
	public virtual void PauseButtonPressed(AudioSource button_audio, PauseButton pauseButton)
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x1340FE0", Offset = "0x1340FE0", VA = "0x1340FE0", Slot = "6")]
	public virtual void PauseButtonUnPressed(AudioSource button_audio, PauseButton pauseButton)
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x1341030", Offset = "0x1341030", VA = "0x1341030", Slot = "7")]
	public virtual void PressedFromScript(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x1341374", Offset = "0x1341374", VA = "0x1341374")]
	public GameMenu()
	{
	}
}
[Token(Token = "0x20001C1")]
public class MainMenuManager : GameMenu
{
	[Token(Token = "0x20001C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884C64", Offset = "0x884C64")]
	private sealed class <MovePlayer>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenuManager <>4__this;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform position;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject lights;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject instance;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject prefab;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject static_object;

		[Token(Token = "0x1700008A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000957")]
			[Address(RVA = "0xB3FF3C", Offset = "0xB3FF3C", VA = "0xB3FF3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000959")]
			[Address(RVA = "0xB3FF84", Offset = "0xB3FF84", VA = "0xB3FF84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0xB3FCE4", Offset = "0xB3FCE4", VA = "0xB3FCE4")]
		[DebuggerHidden]
		public <MovePlayer>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0xB3FD10", Offset = "0xB3FD10", VA = "0xB3FD10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0xB3FD14", Offset = "0xB3FD14", VA = "0xB3FD14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0xB3FF44", Offset = "0xB3FF44", VA = "0xB3FF44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884C74", Offset = "0x884C74")]
	private sealed class <MovePlayerToCouch>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenuManager <>4__this;

		[Token(Token = "0x1700008C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600095D")]
			[Address(RVA = "0xB401EC", Offset = "0xB401EC", VA = "0xB401EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600095F")]
			[Address(RVA = "0xB40234", Offset = "0xB40234", VA = "0xB40234", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0xB3FF8C", Offset = "0xB3FF8C", VA = "0xB3FF8C")]
		[DebuggerHidden]
		public <MovePlayerToCouch>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0xB3FFB8", Offset = "0xB3FFB8", VA = "0xB3FFB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0xB3FFBC", Offset = "0xB3FFBC", VA = "0xB3FFBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0xB401F4", Offset = "0xB401F4", VA = "0xB401F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884C84", Offset = "0x884C84")]
	private sealed class <FadeIn>d__73 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenuManager <>4__this;

		[Token(Token = "0x1700008E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000963")]
			[Address(RVA = "0xB3FC94", Offset = "0xB3FC94", VA = "0xB3FC94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000965")]
			[Address(RVA = "0xB3FCDC", Offset = "0xB3FCDC", VA = "0xB3FCDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0xB3FB98", Offset = "0xB3FB98", VA = "0xB3FB98")]
		[DebuggerHidden]
		public <FadeIn>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0xB3FBC4", Offset = "0xB3FBC4", VA = "0xB3FBC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0xB3FBC8", Offset = "0xB3FBC8", VA = "0xB3FBC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0xB3FC9C", Offset = "0xB3FC9C", VA = "0xB3FC9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FighterSelection fighter_selection;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform main_menu_manager_player_center;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource button_audio;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FadeInOut fade_in_out;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MainMenuExit main_menu_exit;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject double_end_bag_prefab;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject double_end_bag_instance;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject double_end_bag;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject double_end_bag_lights;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject double_end_bag_static;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform double_end_bag_player_center;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject boxing_machine_prefab;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject boxing_machine_instance;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject boxing_machine;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject boxing_machine_lights;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject boxing_machine_static;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform boxing_machine_player_center;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject dummy_machine_prefab;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject dummy_machine_instance;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject dummy_machine_machine;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject dummy_machine_lights;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject dummy_machine_static;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform dummy_machine_player_center;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject speed_bag_machine_prefab;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private GameObject speed_bag_machine_instance;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject speed_bag_machine_machine;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject speed_bag_machine_lights;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject speed_bag_machine_static;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform speed_bag_machine_player_center;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject spare_bar_prefab;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private GameObject spare_bar_instance;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject spare_bar_machine;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject spare_bar_lights;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject spare_bar_machine_static;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Transform spare_bar_machine_player_center;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject heavy_bag_prefab;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private GameObject heavy_bag_instance;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject heavy_bag_machine;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject heavy_bag_lights;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject heavy_bag_static;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Transform heavy_bag_player_center;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject coach_prefab;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GameObject coach_instance;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject coach_machine;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Transform coach_player_center;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Transform target;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Transform player_transform;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Transform lead_target;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Transform rear_target;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Transform coach_instance_position;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private bool play_area_auto;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public AudioSource bg_sound;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameMenu settings;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private bool configured;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private Vector3 play_area_size;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private bool waiting;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Transform player;

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x10721E0", Offset = "0x10721E0", VA = "0x10721E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x10723D0", Offset = "0x10723D0", VA = "0x10723D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88A3A0", Offset = "0x88A3A0")]
	private IEnumerator MovePlayer(Transform position, GameObject lights, GameObject instance, GameObject prefab, GameObject static_object)
	{
		return null;
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x1072344", Offset = "0x1072344", VA = "0x1072344")]
	private void MovePlayer(Transform position)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x1072470", Offset = "0x1072470", VA = "0x1072470", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x1072750", Offset = "0x1072750", VA = "0x1072750")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88A400", Offset = "0x88A400")]
	private IEnumerator MovePlayerToCouch()
	{
		return null;
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x10727BC", Offset = "0x10727BC", VA = "0x10727BC")]
	public Transform getTarget()
	{
		return null;
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x10727C4", Offset = "0x10727C4", VA = "0x10727C4")]
	public Transform getLeadTarget()
	{
		return null;
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x10727CC", Offset = "0x10727CC", VA = "0x10727CC")]
	public Transform getRearTarget()
	{
		return null;
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x10727D4", Offset = "0x10727D4", VA = "0x10727D4")]
	public Transform getPlayerTransform()
	{
		return null;
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x10727DC", Offset = "0x10727DC", VA = "0x10727DC")]
	public void BoxingBarExitEvent()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x1072918", Offset = "0x1072918", VA = "0x1072918")]
	public void DoubleEndBagExitEvent()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x10729E8", Offset = "0x10729E8", VA = "0x10729E8")]
	public void SpeedBagExitEvent()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x1072AB8", Offset = "0x1072AB8", VA = "0x1072AB8")]
	public void HeavyBagExitEvent()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x1072B88", Offset = "0x1072B88", VA = "0x1072B88")]
	public void DummyExitEvent()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x1072C58", Offset = "0x1072C58", VA = "0x1072C58")]
	public void BoxingMachineExitEvent()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x1072D28", Offset = "0x1072D28", VA = "0x1072D28")]
	public void CoachExitEvent()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x10728AC", Offset = "0x10728AC", VA = "0x10728AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88A460", Offset = "0x88A460")]
	private IEnumerator FadeIn()
	{
		return null;
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x1072DAC", Offset = "0x1072DAC", VA = "0x1072DAC")]
	public MainMenuManager()
	{
	}
}
[Token(Token = "0x20001C5")]
public class MenuStatistics : GameMenu
{
	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FighterSelection fighter_selection;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh total_time_tm;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh total_number_of_fights_tm;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh total_number_of_rounds_tm;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh number_of_your_wins_tm;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh number_of_your_wins_by_knockout_tm;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh number_of_your_losses_by_knockout_tm;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMesh total_fight_time_tx;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMesh total_number_of_fights_tx;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMesh total_number_of_rounds_tx;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMesh number_of_your_wins_tx;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMesh number_of_your_wins_by_knockout_tx;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMesh number_of_your_losses_by_knockout_tx;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int selected_ai_id;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int total_time;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int total_number_of_fights;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int total_number_of_rounds;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int number_of_your_wins;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int number_of_your_wins_by_knockout;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int number_of_cpu_wins_by_knockout;

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x1075A74", Offset = "0x1075A74", VA = "0x1075A74")]
	public void setSelectedAiId(int id)
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x1075EA4", Offset = "0x1075EA4", VA = "0x1075EA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x1075A7C", Offset = "0x1075A7C", VA = "0x1075A7C")]
	private void initData()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x10760E4", Offset = "0x10760E4", VA = "0x10760E4", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x1076184", Offset = "0x1076184", VA = "0x1076184")]
	public MenuStatistics()
	{
	}
}
[Token(Token = "0x20001C6")]
public class PauseButton : MonoBehaviour
{
	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource button_audio;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu game_menu;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform loadingBar;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float scale;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameButton.ButtonType button;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float time;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool isPressed;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 bar_scale;

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x10E5898", Offset = "0x10E5898", VA = "0x10E5898")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x10E58F8", Offset = "0x10E58F8", VA = "0x10E58F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x10E5958", Offset = "0x10E5958", VA = "0x10E5958")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x10E59C4", Offset = "0x10E59C4", VA = "0x10E59C4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x10E5A3C", Offset = "0x10E5A3C", VA = "0x10E5A3C")]
	public void setPressed(bool pressed)
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x10E5A94", Offset = "0x10E5A94", VA = "0x10E5A94")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x10E5B90", Offset = "0x10E5B90", VA = "0x10E5B90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x10E5C88", Offset = "0x10E5C88", VA = "0x10E5C88")]
	public PauseButton()
	{
	}
}
[Token(Token = "0x20001C7")]
public class PlayerFist : PunchEmitter
{
	[Token(Token = "0x20001C8")]
	public enum PlayerFistSide
	{
		[Token(Token = "0x400101F")]
		LEFT,
		[Token(Token = "0x4001020")]
		RIGHT
	}

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform target;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool is_colliding;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collision c;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Rigidbody rb;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 last_target_position;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public PlayerFistSide fist;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float vel_before_col;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float speed;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool deactivate_event;

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x10E7568", Offset = "0x10E7568", VA = "0x10E7568")]
	private void Start()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x10E75D0", Offset = "0x10E75D0", VA = "0x10E75D0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x10E775C", Offset = "0x10E775C", VA = "0x10E775C")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x10E7760", Offset = "0x10E7760", VA = "0x10E7760")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x10E7784", Offset = "0x10E7784", VA = "0x10E7784", Slot = "4")]
	public override void DeactivateEvent()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x10E75E0", Offset = "0x10E75E0", VA = "0x10E75E0")]
	private void DeactivateIfCollisionPunchReceiver(Collision collision)
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x10E77B4", Offset = "0x10E77B4", VA = "0x10E77B4")]
	private new void FixedUpdate()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x10E79F8", Offset = "0x10E79F8", VA = "0x10E79F8")]
	public PlayerFist()
	{
	}
}
[Token(Token = "0x20001C9")]
public class PlayerManager : MonoBehaviour
{
	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform dizzyCenter;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform dizzyTarget;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform dizzyPoint;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayerHitEmitter_[] player_fist;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HitSpot[] hit_spots;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform referee_position;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform referee_head_position;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BoxingArea boxing_area;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform opponent_transform;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform target_transform;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleSystem blood_particle;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ParticleSystem sweat_particle;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform cpu_player_transform;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private AIController player_controller;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform center_fight;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform knockout_transform;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform cpu_player_head_transform;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject cpu_player_0;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject cpu_player_1;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject cpu_player_2;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject cpu_player_3;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject cpu_player_4;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject cpu_player_5;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject cpu_player_6;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform start_red_corner;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform red_corner;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform red_corner_winner;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject player;

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x10E8ABC", Offset = "0x10E8ABC", VA = "0x10E8ABC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x10E8C64", Offset = "0x10E8C64", VA = "0x10E8C64")]
	public Vector3 GetHipsPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x10E8C80", Offset = "0x10E8C80", VA = "0x10E8C80")]
	public Vector3 GetBonePosition(HumanBodyBones bone)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x10E8C9C", Offset = "0x10E8C9C", VA = "0x10E8C9C")]
	public AIController.KnockdownType GetCPUKonckDownType()
	{
		return default(AIController.KnockdownType);
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x10E8CB8", Offset = "0x10E8CB8", VA = "0x10E8CB8")]
	public Transform getCPUPlayerHeadTransform()
	{
		return null;
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x10E8CC0", Offset = "0x10E8CC0", VA = "0x10E8CC0")]
	public Transform GetKnockoutTransform()
	{
		return null;
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x10E8CC8", Offset = "0x10E8CC8", VA = "0x10E8CC8")]
	public Transform GetCenterFight()
	{
		return null;
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x10E8CD0", Offset = "0x10E8CD0", VA = "0x10E8CD0")]
	public Transform GetCpuPlayerTransform()
	{
		return null;
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x10E8CD8", Offset = "0x10E8CD8", VA = "0x10E8CD8")]
	public AIController getAiPlayerController()
	{
		return null;
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x10E8CE0", Offset = "0x10E8CE0", VA = "0x10E8CE0")]
	public Transform GetRefereePosition()
	{
		return null;
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x10E8CE8", Offset = "0x10E8CE8", VA = "0x10E8CE8")]
	public Transform GetRefereeHeadPosition()
	{
		return null;
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x10E8CF0", Offset = "0x10E8CF0", VA = "0x10E8CF0")]
	public BoxingArea GetBoxingArea()
	{
		return null;
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x10E8CF8", Offset = "0x10E8CF8", VA = "0x10E8CF8")]
	public Transform GetOpponentTransform()
	{
		return null;
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x10E8D00", Offset = "0x10E8D00", VA = "0x10E8D00")]
	public Transform GetTargetTransform()
	{
		return null;
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x10E8D08", Offset = "0x10E8D08", VA = "0x10E8D08")]
	public ParticleSystem GetBloodParticles()
	{
		return null;
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x10E8D10", Offset = "0x10E8D10", VA = "0x10E8D10")]
	public ParticleSystem GetSweatParticles()
	{
		return null;
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x10E8D18", Offset = "0x10E8D18", VA = "0x10E8D18")]
	public HitSpot[] GetHitspots()
	{
		return null;
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x10E8D20", Offset = "0x10E8D20", VA = "0x10E8D20")]
	public PlayerHitEmitter_ GetLeftPlayerFist()
	{
		return null;
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x10E8D54", Offset = "0x10E8D54", VA = "0x10E8D54")]
	public PlayerHitEmitter_ GetRightPlayerFist()
	{
		return null;
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x10E8D8C", Offset = "0x10E8D8C", VA = "0x10E8D8C")]
	private void Update()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x10E8D90", Offset = "0x10E8D90", VA = "0x10E8D90")]
	public PlayerManager()
	{
	}
}
[Token(Token = "0x20001CA")]
public class PunchEmitter : MonoBehaviour
{
	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 last_position;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 velocity;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool is_active;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float activation_timer;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float no_damage_hit_timer;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LinkedList<float> controllerMovementResultHistory;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float v;

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x2058914", Offset = "0x2058914", VA = "0x2058914")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x20588CC", Offset = "0x20588CC", VA = "0x20588CC")]
	public void Deactivate(float time = 0.2f)
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x2059A70", Offset = "0x2059A70", VA = "0x2059A70", Slot = "4")]
	public virtual void DeactivateEvent()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x20584D4", Offset = "0x20584D4", VA = "0x20584D4")]
	public bool IsActiveNoDamageHit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x2059A74", Offset = "0x2059A74", VA = "0x2059A74")]
	public void DeactivateNoDamageHit(float time = 0.2f)
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x2059A7C", Offset = "0x2059A7C", VA = "0x2059A7C")]
	private void UpdateTimers()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x2059AD8", Offset = "0x2059AD8", VA = "0x2059AD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x20590AC", Offset = "0x20590AC", VA = "0x20590AC")]
	protected void FixedUpdate()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x2059B14", Offset = "0x2059B14", VA = "0x2059B14")]
	protected void UpdateVelocity()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x2059BE0", Offset = "0x2059BE0", VA = "0x2059BE0")]
	private void saveFloatToLinkedList(LinkedList<float> linkedList, float value, int maxListSize)
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x2057F78", Offset = "0x2057F78", VA = "0x2057F78")]
	public float GetSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x2059C98", Offset = "0x2059C98", VA = "0x2059C98")]
	private float smoothedControllerMovement(LinkedList<float> controllerMovementHistory)
	{
		return default(float);
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x2059DCC", Offset = "0x2059DCC", VA = "0x2059DCC")]
	public Vector3 getLastPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x2059DD8", Offset = "0x2059DD8", VA = "0x2059DD8")]
	public Vector3 GetRawVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x2059DE4", Offset = "0x2059DE4", VA = "0x2059DE4")]
	public Vector3 GetVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x20590D4", Offset = "0x20590D4", VA = "0x20590D4")]
	public PunchEmitter()
	{
	}
}
[Token(Token = "0x20001CB")]
public class PunchReceiver : MonoBehaviour
{
	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AIPlayerController.BodyPart body_part;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AIPlayerController fighter_controller;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform fighter;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Cuts cuts;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool nose_blood;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool upper_lip_blood;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool lower_lip_blood;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	private bool left_eyebrow_blood;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool right_eyebrow_blood;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool left_cheek_blood;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	private bool right_cheek_blood;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	private bool under_left_eyebrow_blood;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool under_right_eyebrow_blood;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool is_blood;

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x2059E40", Offset = "0x2059E40", VA = "0x2059E40")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x2059F04", Offset = "0x2059F04", VA = "0x2059F04")]
	public Rigidbody GetRigidbody()
	{
		return null;
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x2059F0C", Offset = "0x2059F0C", VA = "0x2059F0C")]
	public AIPlayerController.BodyPart getBodyPartType()
	{
		return default(AIPlayerController.BodyPart);
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x2059F14", Offset = "0x2059F14", VA = "0x2059F14")]
	public void UpdatePunchReceiver(PlayerFist.PlayerFistSide fist, Collision collision, PunchEmitter punch_emitter)
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x205AB38", Offset = "0x205AB38", VA = "0x205AB38")]
	public PunchReceiver()
	{
	}
}
[Token(Token = "0x20001CC")]
public class RingManager : MonoBehaviour
{
	[Token(Token = "0x20001CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884C94", Offset = "0x884C94")]
	private sealed class <showWinner>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RingManager <>4__this;

		[Token(Token = "0x17000090")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009E7")]
			[Address(RVA = "0x1D510B4", Offset = "0x1D510B4", VA = "0x1D510B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009E9")]
			[Address(RVA = "0x1D510FC", Offset = "0x1D510FC", VA = "0x1D510FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x1D50F5C", Offset = "0x1D50F5C", VA = "0x1D50F5C")]
		[DebuggerHidden]
		public <showWinner>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x1D50F88", Offset = "0x1D50F88", VA = "0x1D50F88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x1D50F8C", Offset = "0x1D50F8C", VA = "0x1D50F8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x1D510BC", Offset = "0x1D510BC", VA = "0x1D510BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884CA4", Offset = "0x884CA4")]
	private sealed class <showWinnerchangeFadeIn>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RingManager <>4__this;

		[Token(Token = "0x17000092")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009ED")]
			[Address(RVA = "0x1D51210", Offset = "0x1D51210", VA = "0x1D51210", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000093")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009EF")]
			[Address(RVA = "0x1D51258", Offset = "0x1D51258", VA = "0x1D51258", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x1D51104", Offset = "0x1D51104", VA = "0x1D51104")]
		[DebuggerHidden]
		public <showWinnerchangeFadeIn>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x1D51130", Offset = "0x1D51130", VA = "0x1D51130", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x1D51134", Offset = "0x1D51134", VA = "0x1D51134", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x1D51218", Offset = "0x1D51218", VA = "0x1D51218", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884CB4", Offset = "0x884CB4")]
	private sealed class <Announce>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RingManager <>4__this;

		[Token(Token = "0x17000094")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009F3")]
			[Address(RVA = "0x1D5019C", Offset = "0x1D5019C", VA = "0x1D5019C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000095")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009F5")]
			[Address(RVA = "0x1D501E4", Offset = "0x1D501E4", VA = "0x1D501E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x1D500AC", Offset = "0x1D500AC", VA = "0x1D500AC")]
		[DebuggerHidden]
		public <Announce>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x1D500D8", Offset = "0x1D500D8", VA = "0x1D500D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x1D500DC", Offset = "0x1D500DC", VA = "0x1D500DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x1D501A4", Offset = "0x1D501A4", VA = "0x1D501A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884CC4", Offset = "0x884CC4")]
	private sealed class <showMenu>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RingManager <>4__this;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool end_match;

		[Token(Token = "0x17000096")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009F9")]
			[Address(RVA = "0x1D50F0C", Offset = "0x1D50F0C", VA = "0x1D50F0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000097")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009FB")]
			[Address(RVA = "0x1D50F54", Offset = "0x1D50F54", VA = "0x1D50F54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x1D50E08", Offset = "0x1D50E08", VA = "0x1D50E08")]
		[DebuggerHidden]
		public <showMenu>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x1D50E34", Offset = "0x1D50E34", VA = "0x1D50E34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x1D50E38", Offset = "0x1D50E38", VA = "0x1D50E38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x1D50F14", Offset = "0x1D50F14", VA = "0x1D50F14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884CD4", Offset = "0x884CD4")]
	private sealed class <StartRoundDelay>d__69 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RingManager <>4__this;

		[Token(Token = "0x17000098")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009FF")]
			[Address(RVA = "0x1D50AF0", Offset = "0x1D50AF0", VA = "0x1D50AF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000099")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A01")]
			[Address(RVA = "0x1D50B38", Offset = "0x1D50B38", VA = "0x1D50B38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x1D509F4", Offset = "0x1D509F4", VA = "0x1D509F4")]
		[DebuggerHidden]
		public <StartRoundDelay>d__69(int <>1__state)
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x1D50A20", Offset = "0x1D50A20", VA = "0x1D50A20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x1D50A24", Offset = "0x1D50A24", VA = "0x1D50A24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x1D50AF8", Offset = "0x1D50AF8", VA = "0x1D50AF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884CE4", Offset = "0x884CE4")]
	private sealed class <PlayerToCorner>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RingManager <>4__this;

		[Token(Token = "0x1700009A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A05")]
			[Address(RVA = "0x1D504D8", Offset = "0x1D504D8", VA = "0x1D504D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A07")]
			[Address(RVA = "0x1D50520", Offset = "0x1D50520", VA = "0x1D50520", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x1D503B0", Offset = "0x1D503B0", VA = "0x1D503B0")]
		[DebuggerHidden]
		public <PlayerToCorner>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x1D503DC", Offset = "0x1D503DC", VA = "0x1D503DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x1D503E0", Offset = "0x1D503E0", VA = "0x1D503E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x1D504E0", Offset = "0x1D504E0", VA = "0x1D504E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884CF4", Offset = "0x884CF4")]
	private sealed class <AiPlayerToCorner>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RingManager <>4__this;

		[Token(Token = "0x1700009C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A0B")]
			[Address(RVA = "0x1D5005C", Offset = "0x1D5005C", VA = "0x1D5005C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A0D")]
			[Address(RVA = "0x1D500A4", Offset = "0x1D500A4", VA = "0x1D500A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x1D4FEEC", Offset = "0x1D4FEEC", VA = "0x1D4FEEC")]
		[DebuggerHidden]
		public <AiPlayerToCorner>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x1D4FF18", Offset = "0x1D4FF18", VA = "0x1D4FF18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x1D4FF1C", Offset = "0x1D4FF1C", VA = "0x1D4FF1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x1D50064", Offset = "0x1D50064", VA = "0x1D50064", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884D04", Offset = "0x884D04")]
	private sealed class <FadeEYEBLINK>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RingManager <>4__this;

		[Token(Token = "0x1700009E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A11")]
			[Address(RVA = "0x1D50360", Offset = "0x1D50360", VA = "0x1D50360", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A13")]
			[Address(RVA = "0x1D503A8", Offset = "0x1D503A8", VA = "0x1D503A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x1D501EC", Offset = "0x1D501EC", VA = "0x1D501EC")]
		[DebuggerHidden]
		public <FadeEYEBLINK>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x1D50218", Offset = "0x1D50218", VA = "0x1D50218", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x1D5021C", Offset = "0x1D5021C", VA = "0x1D5021C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x1D50368", Offset = "0x1D50368", VA = "0x1D50368", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884D14", Offset = "0x884D14")]
	private sealed class <StopBoxingMatchDelayed>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RingManager <>4__this;

		[Token(Token = "0x170000A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A17")]
			[Address(RVA = "0x1D50C64", Offset = "0x1D50C64", VA = "0x1D50C64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A19")]
			[Address(RVA = "0x1D50CAC", Offset = "0x1D50CAC", VA = "0x1D50CAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x1D50B40", Offset = "0x1D50B40", VA = "0x1D50B40")]
		[DebuggerHidden]
		public <StopBoxingMatchDelayed>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x1D50B6C", Offset = "0x1D50B6C", VA = "0x1D50B6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x1D50B70", Offset = "0x1D50B70", VA = "0x1D50B70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x1D50C6C", Offset = "0x1D50C6C", VA = "0x1D50C6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884D24", Offset = "0x884D24")]
	private sealed class <PlayersToCorners>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RingManager <>4__this;

		[Token(Token = "0x170000A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A1D")]
			[Address(RVA = "0x1D5083C", Offset = "0x1D5083C", VA = "0x1D5083C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A1F")]
			[Address(RVA = "0x1D50884", Offset = "0x1D50884", VA = "0x1D50884", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x1D50698", Offset = "0x1D50698", VA = "0x1D50698")]
		[DebuggerHidden]
		public <PlayersToCorners>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x1D506C4", Offset = "0x1D506C4", VA = "0x1D506C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x1D506C8", Offset = "0x1D506C8", VA = "0x1D506C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x1D50844", Offset = "0x1D50844", VA = "0x1D50844", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884D34", Offset = "0x884D34")]
	private sealed class <StopMatch>d__85 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RingManager <>4__this;

		[Token(Token = "0x170000A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A23")]
			[Address(RVA = "0x1D50DB8", Offset = "0x1D50DB8", VA = "0x1D50DB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A25")]
			[Address(RVA = "0x1D50E00", Offset = "0x1D50E00", VA = "0x1D50E00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x1D50CB4", Offset = "0x1D50CB4", VA = "0x1D50CB4")]
		[DebuggerHidden]
		public <StopMatch>d__85(int <>1__state)
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x1D50CE0", Offset = "0x1D50CE0", VA = "0x1D50CE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x1D50CE4", Offset = "0x1D50CE4", VA = "0x1D50CE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x1D50DC0", Offset = "0x1D50DC0", VA = "0x1D50DC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884D44", Offset = "0x884D44")]
	private sealed class <PlayersToCenter>d__86 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RingManager <>4__this;

		[Token(Token = "0x170000A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A29")]
			[Address(RVA = "0x1D50648", Offset = "0x1D50648", VA = "0x1D50648", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A2B")]
			[Address(RVA = "0x1D50690", Offset = "0x1D50690", VA = "0x1D50690", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x1D50528", Offset = "0x1D50528", VA = "0x1D50528")]
		[DebuggerHidden]
		public <PlayersToCenter>d__86(int <>1__state)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x1D50554", Offset = "0x1D50554", VA = "0x1D50554", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x1D50558", Offset = "0x1D50558", VA = "0x1D50558", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x1D50650", Offset = "0x1D50650", VA = "0x1D50650", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884D54", Offset = "0x884D54")]
	private sealed class <StartMatch>d__87 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RingManager <>4__this;

		[Token(Token = "0x170000A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A2F")]
			[Address(RVA = "0x1D509A4", Offset = "0x1D509A4", VA = "0x1D509A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A31")]
			[Address(RVA = "0x1D509EC", Offset = "0x1D509EC", VA = "0x1D509EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x1D5088C", Offset = "0x1D5088C", VA = "0x1D5088C")]
		[DebuggerHidden]
		public <StartMatch>d__87(int <>1__state)
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x1D508B8", Offset = "0x1D508B8", VA = "0x1D508B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x1D508BC", Offset = "0x1D508BC", VA = "0x1D508BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x1D509AC", Offset = "0x1D509AC", VA = "0x1D509AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HumanPlayer human_player;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlayerManager player_manager;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AIController ai_player;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RefereeAi referee_ai;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RingTimer ring_timer;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GymSpectatorsManager spectator_manager;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform humanPlayerPosition;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FadeInOut screen_fade;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform corner_blue;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform corner_red;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform start_red_conrer;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform start_blue_corner;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BoxingArea boxing_area;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform cpu_player;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform referee_start_position;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform blue_corner_winner;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform red_corner_winner;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform referee_winner;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private RefereeAi.WINNER winner;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool knockout;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int player_knockodown;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int cpu_knockdown;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int max_knockdowns;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int round_duration;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool statistic_set;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int round;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int max_rounds;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float points_advantage_to_win;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool counting;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool is_clapping;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	private bool round_end;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
	private bool boxing_match_end;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public BoxingMatchMenu boxing_match_menu;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TextMeshPro text1;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public TextMeshPro text2;

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x2062984", Offset = "0x2062984", VA = "0x2062984")]
	public void setRoundDuration(int time)
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x206298C", Offset = "0x206298C", VA = "0x206298C")]
	public bool CPUIsOnGround()
	{
		return default(bool);
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x20629A8", Offset = "0x20629A8", VA = "0x20629A8")]
	public float DistanceToCenter()
	{
		return default(float);
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x2062A28", Offset = "0x2062A28", VA = "0x2062A28")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x2062A2C", Offset = "0x2062A2C", VA = "0x2062A2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x2062D48", Offset = "0x2062D48", VA = "0x2062D48")]
	public void setCounting(bool counting = false)
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x2062D54", Offset = "0x2062D54", VA = "0x2062D54")]
	public bool isCounting()
	{
		return default(bool);
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x2062D5C", Offset = "0x2062D5C", VA = "0x2062D5C")]
	public void setWinnerPositions()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x2062E7C", Offset = "0x2062E7C", VA = "0x2062E7C")]
	public void ShowWinner()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x2062EE0", Offset = "0x2062EE0", VA = "0x2062EE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88A5B0", Offset = "0x88A5B0")]
	private IEnumerator showWinner()
	{
		return null;
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x2062F4C", Offset = "0x2062F4C", VA = "0x2062F4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88A610", Offset = "0x88A610")]
	private IEnumerator showWinnerchangeFadeIn()
	{
		return null;
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x2062FB8", Offset = "0x2062FB8", VA = "0x2062FB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88A670", Offset = "0x88A670")]
	private IEnumerator Announce()
	{
		return null;
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x2062C98", Offset = "0x2062C98", VA = "0x2062C98")]
	public void MoveCpuPlayerToCorner()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x2062CBC", Offset = "0x2062CBC", VA = "0x2062CBC")]
	public void MovePlayerToCorner()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x2063024", Offset = "0x2063024", VA = "0x2063024")]
	public void MovePlayerToLastPosition()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x2063028", Offset = "0x2063028", VA = "0x2063028")]
	public void MoveCpuPlayerToLastPosition()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x206302C", Offset = "0x206302C", VA = "0x206302C")]
	public void MovePlayerToStartPosition()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x206308C", Offset = "0x206308C", VA = "0x206308C")]
	public void MoveCpuPlayerToStartPosition()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x20618F8", Offset = "0x20618F8", VA = "0x20618F8")]
	public void onRefereeLeftHandPointing()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x2061948", Offset = "0x2061948", VA = "0x2061948")]
	public void onRefereeRightHandPointing()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x20630B0", Offset = "0x20630B0", VA = "0x20630B0")]
	public void OnHumanPlayerKnockDown()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x2063634", Offset = "0x2063634", VA = "0x2063634")]
	public void OnAiPlayerKnockDown()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x206372C", Offset = "0x206372C", VA = "0x206372C")]
	public void OnRoundEnd()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x2063738", Offset = "0x2063738", VA = "0x2063738")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88A6D0", Offset = "0x88A6D0")]
	private IEnumerator showMenu(bool end_match)
	{
		return null;
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x20637B8", Offset = "0x20637B8", VA = "0x20637B8")]
	public float getHumanPlayerHurtLevel()
	{
		return default(float);
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x20637D4", Offset = "0x20637D4", VA = "0x20637D4")]
	private void HideBoxingMatchMenu()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x2063804", Offset = "0x2063804", VA = "0x2063804")]
	public void OnBreakEnd()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x2063838", Offset = "0x2063838", VA = "0x2063838")]
	public AIController GetAiController()
	{
		return null;
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x2063840", Offset = "0x2063840", VA = "0x2063840")]
	public HumanPlayer GetHumanPlayer()
	{
		return null;
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x2061998", Offset = "0x2061998", VA = "0x2061998")]
	public void OnBoxingMatchEnd()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x2063848", Offset = "0x2063848", VA = "0x2063848")]
	public float getRemainingTime()
	{
		return default(float);
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x206388C", Offset = "0x206388C", VA = "0x206388C")]
	public void OnReadyHumanPlayer()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x20638A8", Offset = "0x20638A8", VA = "0x20638A8")]
	public void OnAIPlayerKnockDown()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x20638AC", Offset = "0x20638AC", VA = "0x20638AC")]
	public void OnAIPlayerReady()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x20638C8", Offset = "0x20638C8", VA = "0x20638C8")]
	public void HumanPlayerReceivedHit(float force)
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x2061AF4", Offset = "0x2061AF4", VA = "0x2061AF4")]
	public void OnRefereeStartRound()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x206393C", Offset = "0x206393C", VA = "0x206393C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88A730", Offset = "0x88A730")]
	private IEnumerator StartRoundDelay()
	{
		return null;
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x2061B50", Offset = "0x2061B50", VA = "0x2061B50")]
	public void OnRefereeStopCounting()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x20639A8", Offset = "0x20639A8", VA = "0x20639A8")]
	public void AIPlayerKnockDown()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x20639FC", Offset = "0x20639FC", VA = "0x20639FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88A790", Offset = "0x88A790")]
	private IEnumerator PlayerToCorner()
	{
		return null;
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x20619E8", Offset = "0x20619E8", VA = "0x20619E8")]
	public void OnStartRefereeCountingAi()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x20619F4", Offset = "0x20619F4", VA = "0x20619F4")]
	public void OnStartRefereeCounting()
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x2063A94", Offset = "0x2063A94", VA = "0x2063A94")]
	public RefereeAi.REFEREESTATE getRefereState()
	{
		return default(RefereeAi.REFEREESTATE);
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x2063AB0", Offset = "0x2063AB0", VA = "0x2063AB0")]
	public bool IsRefereeWatching()
	{
		return default(bool);
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x2063A68", Offset = "0x2063A68", VA = "0x2063A68")]
	public void PlayerKnockDown()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x2063AD4", Offset = "0x2063AD4", VA = "0x2063AD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88A7F0", Offset = "0x88A7F0")]
	private IEnumerator AiPlayerToCorner()
	{
		return null;
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x2063B40", Offset = "0x2063B40", VA = "0x2063B40")]
	public void EyeBlink()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x2063B94", Offset = "0x2063B94", VA = "0x2063B94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88A850", Offset = "0x88A850")]
	private IEnumerator FadeEYEBLINK()
	{
		return null;
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x20638E4", Offset = "0x20638E4", VA = "0x20638E4")]
	public void StartBoxingMatch()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x2063C6C", Offset = "0x2063C6C", VA = "0x2063C6C")]
	public void StopBoxingMatch()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x2063CB0", Offset = "0x2063CB0", VA = "0x2063CB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88A8B0", Offset = "0x88A8B0")]
	private IEnumerator StopBoxingMatchDelayed()
	{
		return null;
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x2063D1C", Offset = "0x2063D1C", VA = "0x2063D1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88A910", Offset = "0x88A910")]
	private IEnumerator PlayersToCorners()
	{
		return null;
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x2063D88", Offset = "0x2063D88", VA = "0x2063D88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88A970", Offset = "0x88A970")]
	private IEnumerator StopMatch()
	{
		return null;
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x2063C00", Offset = "0x2063C00", VA = "0x2063C00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88A9D0", Offset = "0x88A9D0")]
	private IEnumerator PlayersToCenter()
	{
		return null;
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x2063DF4", Offset = "0x2063DF4", VA = "0x2063DF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88AA30", Offset = "0x88AA30")]
	private IEnumerator StartMatch()
	{
		return null;
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x2063E60", Offset = "0x2063E60", VA = "0x2063E60")]
	public bool IsAIWinning()
	{
		return default(bool);
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x2063ED8", Offset = "0x2063ED8", VA = "0x2063ED8")]
	public RingTimer GetRingTimer()
	{
		return null;
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x20631D0", Offset = "0x20631D0", VA = "0x20631D0")]
	private void setStatistics()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x2063EF0", Offset = "0x2063EF0", VA = "0x2063EF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x20640FC", Offset = "0x20640FC", VA = "0x20640FC")]
	public void StartGame()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x2064118", Offset = "0x2064118", VA = "0x2064118")]
	public void NextRound()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x2064134", Offset = "0x2064134", VA = "0x2064134")]
	public void setRoundNr(int nr)
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x206413C", Offset = "0x206413C", VA = "0x206413C")]
	public RingManager()
	{
	}
}
[Token(Token = "0x20001DA")]
public class RingTimer : MonoBehaviour
{
	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audio;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro round_text;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro timer_text;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RingManager ring_manager;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timer;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int round_nr;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool timer_on;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int current_round;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int number_of_rounds;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool is_break;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int round_duration;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int round;

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x206415C", Offset = "0x206415C", VA = "0x206415C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x20642A0", Offset = "0x20642A0", VA = "0x20642A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x206440C", Offset = "0x206440C", VA = "0x206440C")]
	private void UpdateTimer()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x20647BC", Offset = "0x20647BC", VA = "0x20647BC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x20647C0", Offset = "0x20647C0", VA = "0x20647C0")]
	public void setTime(float time = 180f)
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x2064344", Offset = "0x2064344", VA = "0x2064344")]
	public void setRound(float round = 5f)
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x2063628", Offset = "0x2063628", VA = "0x2063628")]
	public void stopTimer()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x2063928", Offset = "0x2063928", VA = "0x2063928")]
	public void startTimer(bool is_break = false)
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x20647C8", Offset = "0x20647C8", VA = "0x20647C8")]
	public void pauseTimer()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x2064690", Offset = "0x2064690", VA = "0x2064690")]
	private void TimerBreakEnd()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x20647D0", Offset = "0x20647D0", VA = "0x20647D0")]
	public bool IsBreak()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x2064130", Offset = "0x2064130", VA = "0x2064130")]
	public void skipBreak()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x20640F0", Offset = "0x20640F0", VA = "0x20640F0")]
	public void nextRound()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x20646B8", Offset = "0x20646B8", VA = "0x20646B8")]
	private void TimerEndEvent()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x2063EE0", Offset = "0x2063EE0", VA = "0x2063EE0")]
	public int getCurrentRound()
	{
		return default(int);
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x2063874", Offset = "0x2063874", VA = "0x2063874")]
	public float getRemainingTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x2064818", Offset = "0x2064818", VA = "0x2064818")]
	public float getTimeToRoundEnd()
	{
		return default(float);
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x2064820", Offset = "0x2064820", VA = "0x2064820")]
	public RingTimer()
	{
	}
}
[Token(Token = "0x20001DB")]
public class SpareBar : MonoBehaviour
{
	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpareBarController controller;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform spare_bar;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D left_hand;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D right_hand;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D dodge;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material sign_positive_material;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material sign_negative_material;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 angle;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject sign_positive_speed;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject sign_negative_speed;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float angular_velocity;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SpareBarBag spare_bar_bag;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float angle_from_collision;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float last_angle;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float collisionTime;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool target_selected;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float speed_save_timer;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool game_on;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public SparebarSoundEffect sound_effect;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private HumanPlayer human_player;

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x11C8BAC", Offset = "0x11C8BAC", VA = "0x11C8BAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x11C8CC8", Offset = "0x11C8CC8", VA = "0x11C8CC8")]
	public void startGame()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x11C8C70", Offset = "0x11C8C70", VA = "0x11C8C70")]
	public void stopGame()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x11C8D38", Offset = "0x11C8D38", VA = "0x11C8D38")]
	public void PlaySound(Collision collision, float speed, bool random = true, int nr = 0)
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x11C8EF4", Offset = "0x11C8EF4", VA = "0x11C8EF4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x11C90D4", Offset = "0x11C90D4", VA = "0x11C90D4")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x11C9158", Offset = "0x11C9158", VA = "0x11C9158")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x11C90BC", Offset = "0x11C90BC", VA = "0x11C90BC")]
	private void DecreasePoint()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x11C9334", Offset = "0x11C9334", VA = "0x11C9334")]
	private void IncreasePoint()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x11C9380", Offset = "0x11C9380", VA = "0x11C9380")]
	private void calculateAngle()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x11C93F4", Offset = "0x11C93F4", VA = "0x11C93F4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x11C9608", Offset = "0x11C9608", VA = "0x11C9608")]
	public float GetAngularSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x11C9610", Offset = "0x11C9610", VA = "0x11C9610")]
	public SpareBar()
	{
	}
}
[Token(Token = "0x20001DC")]
public class SpareBarBag : MonoBehaviour
{
	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool bag_target_selected;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material bag_target_material;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D left_hand;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D right_hand;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject bag_target;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float last_spare_bar_speed;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SpareBar spare_bar;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PunchBagTarget.GloveSide glove_side;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool hide;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool miss_target;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float time_miss_target;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float miss_target_scale;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float miss_target_timer;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform miss;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SpareBarController controller;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool game_on;

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x11C8CEC", Offset = "0x11C8CEC", VA = "0x11C8CEC")]
	public void startGame()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x11C8CF8", Offset = "0x11C8CF8", VA = "0x11C8CF8")]
	public void stopGame()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x11C9200", Offset = "0x11C9200", VA = "0x11C9200")]
	public void selectBagTarget(float speed)
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x11C9618", Offset = "0x11C9618", VA = "0x11C9618")]
	private void IncreaseScore()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x11C9648", Offset = "0x11C9648", VA = "0x11C9648")]
	private void DecreaseScore()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x11C9660", Offset = "0x11C9660", VA = "0x11C9660")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x11C97C0", Offset = "0x11C97C0", VA = "0x11C97C0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x11C996C", Offset = "0x11C996C", VA = "0x11C996C")]
	public SpareBarBag()
	{
	}
}
[Token(Token = "0x20001DD")]
public class SpareBarController : MonoBehaviour
{
	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpareBarResultMenu result_menu;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HeavyBagTrainingController.TrainingMode training_mode;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpareBarTimerMenu timer_menu;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform spare_bar_platform;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float time;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool timer_working;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SpareBar spare_bar;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource bell;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isPaused;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int min;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float average_timer;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int hits;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int misses;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float ahpm;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float ampm;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool start;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int score;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int game_time;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMesh score_text;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMesh hits_text;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMesh misses_text;

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x11C9300", Offset = "0x11C9300", VA = "0x11C9300")]
	public void IncreaseMisses()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x11C9364", Offset = "0x11C9364", VA = "0x11C9364")]
	public void IncreaseHits()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x11C9994", Offset = "0x11C9994", VA = "0x11C9994")]
	public void startGame(HeavyBagTrainingController.TrainingMode mode, float time)
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x11C9998", Offset = "0x11C9998", VA = "0x11C9998")]
	public void PauseGame(bool pause)
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x11C99A4", Offset = "0x11C99A4", VA = "0x11C99A4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x11C99C8", Offset = "0x11C99C8", VA = "0x11C99C8")]
	private void UpdateTimedMode()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x11C9A50", Offset = "0x11C9A50", VA = "0x11C9A50")]
	private void UpdateTimer()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x11C9B70", Offset = "0x11C9B70", VA = "0x11C9B70")]
	private void CalculateAverage()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x11C9974", Offset = "0x11C9974", VA = "0x11C9974")]
	private void ShowScore()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x11C9C54", Offset = "0x11C9C54", VA = "0x11C9C54")]
	public void startGame(HeavyBagTrainingController.TrainingMode mode, int time)
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x11C9CD4", Offset = "0x11C9CD4", VA = "0x11C9CD4")]
	private void startTimer(int time)
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x11C9CE8", Offset = "0x11C9CE8", VA = "0x11C9CE8")]
	public void stopGame(bool interrupt = false)
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x11C9E3C", Offset = "0x11C9E3C", VA = "0x11C9E3C")]
	private void calculateResult()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x11C9CB0", Offset = "0x11C9CB0", VA = "0x11C9CB0")]
	public void clear()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x11C9BBC", Offset = "0x11C9BBC", VA = "0x11C9BBC")]
	private void stopTimer()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x11CA448", Offset = "0x11CA448", VA = "0x11CA448")]
	public SpareBarController()
	{
	}
}
[Token(Token = "0x20001DE")]
public class SpareBarMenuHowToPlay : GameMenu
{
	[Token(Token = "0x20001DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884D64", Offset = "0x884D64")]
	private sealed class <ExitMiniGame>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpareBarMenuHowToPlay <>4__this;

		[Token(Token = "0x170000AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A71")]
			[Address(RVA = "0x1D51484", Offset = "0x1D51484", VA = "0x1D51484", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A73")]
			[Address(RVA = "0x1D514CC", Offset = "0x1D514CC", VA = "0x1D514CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x1D5130C", Offset = "0x1D5130C", VA = "0x1D5130C")]
		[DebuggerHidden]
		public <ExitMiniGame>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x1D51338", Offset = "0x1D51338", VA = "0x1D51338", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x1D5133C", Offset = "0x1D5133C", VA = "0x1D5133C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x1D5148C", Offset = "0x1D5148C", VA = "0x1D5148C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu mode_selection;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float spare_bar_height_prefs;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform spare_bar_height;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameMenu main_menu;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform main_menu_player_center;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject spare_bar;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject spare_bar_lights;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject spare_bar_static;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform player;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject boxing_bar;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject boxing_bar_instance;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MainMenuManager main_menu_manager;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private FadeInOut fade_in_out;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool wait;

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x11CA450", Offset = "0x11CA450", VA = "0x11CA450")]
	private void MovePlayer(Transform position)
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x11CA4A0", Offset = "0x11CA4A0", VA = "0x11CA4A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x11CA5B4", Offset = "0x11CA5B4", VA = "0x11CA5B4", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x11CA6AC", Offset = "0x11CA6AC", VA = "0x11CA6AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88AEA0", Offset = "0x88AEA0")]
	private IEnumerator ExitMiniGame()
	{
		return null;
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x11CA718", Offset = "0x11CA718", VA = "0x11CA718")]
	public SpareBarMenuHowToPlay()
	{
	}
}
[Token(Token = "0x20001E0")]
public class SpareBarResultMenu : GameMenu
{
	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh hits;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh misses;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh time;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh ahpm;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh ampm;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh score;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh best_hits;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMesh best_misses;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMesh best_time;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMesh best_ahpm;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMesh best_ampm;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMesh best_score;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SpareBarTimerMenu timer_menu;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameMenu select_time_menu;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMesh best;

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x11C9E84", Offset = "0x11C9E84", VA = "0x11C9E84")]
	public void setResult(int time, int score, int hits, int misses, int ahpm, int ampm)
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x11CA720", Offset = "0x11CA720", VA = "0x11CA720")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x11CA7D0", Offset = "0x11CA7D0", VA = "0x11CA7D0", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x11CA8D8", Offset = "0x11CA8D8", VA = "0x11CA8D8")]
	public SpareBarResultMenu()
	{
	}
}
[Token(Token = "0x20001E1")]
public class SpareBarSelectModeMenu : GameMenu
{
	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu setting_menu;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMenu timed_mode;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameMenu how_to_play_menu;

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x11CA8E0", Offset = "0x11CA8E0", VA = "0x11CA8E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x11CA8E4", Offset = "0x11CA8E4", VA = "0x11CA8E4", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x11CA9AC", Offset = "0x11CA9AC", VA = "0x11CA9AC")]
	public SpareBarSelectModeMenu()
	{
	}
}
[Token(Token = "0x20001E2")]
public class SpareBarSettingMenu : GameMenu
{
	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu game_select_mode_menu;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform spare_bar_height;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh height_cm;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh height_inch;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float spare_bar_height_prefs;

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x11CA9B4", Offset = "0x11CA9B4", VA = "0x11CA9B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x11CAA10", Offset = "0x11CAA10", VA = "0x11CAA10")]
	private void updateTextHeight()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x11CAB38", Offset = "0x11CAB38", VA = "0x11CAB38", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x11CACA8", Offset = "0x11CACA8", VA = "0x11CACA8")]
	public SpareBarSettingMenu()
	{
	}
}
[Token(Token = "0x20001E3")]
public class SpareBarTimeSelectionMenu : GameMenu
{
	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform selection_mark;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpareBarTimerMenu timer_menu;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameMenu select_mode;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 one_min;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 two_min;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 five_min;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 ten_min;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int min;

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x11CACB0", Offset = "0x11CACB0", VA = "0x11CACB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x11CACBC", Offset = "0x11CACBC", VA = "0x11CACBC", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x11CAF0C", Offset = "0x11CAF0C", VA = "0x11CAF0C")]
	public SpareBarTimeSelectionMenu()
	{
	}
}
[Token(Token = "0x20001E4")]
public class SpareBarTimerMenu : GameMenu
{
	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpareBarController controller;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMenu time_mode;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh time_text;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh score_text;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int game_time;

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x11CAF14", Offset = "0x11CAF14", VA = "0x11CAF14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x11CAED0", Offset = "0x11CAED0", VA = "0x11CAED0")]
	public void startGame(int time)
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x11CA8A4", Offset = "0x11CA8A4", VA = "0x11CA8A4")]
	public void restartGame()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x11C9BF4", Offset = "0x11C9BF4", VA = "0x11C9BF4")]
	public void ShowTime(string time)
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x11C9C10", Offset = "0x11C9C10", VA = "0x11C9C10")]
	public void ShowScore(int score)
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x11CA3DC", Offset = "0x11CA3DC", VA = "0x11CA3DC")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x11CAF6C", Offset = "0x11CAF6C", VA = "0x11CAF6C", Slot = "5")]
	public override void PauseButtonPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x11CAFE8", Offset = "0x11CAFE8", VA = "0x11CAFE8", Slot = "6")]
	public override void PauseButtonUnPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x11CB04C", Offset = "0x11CB04C", VA = "0x11CB04C", Slot = "7")]
	public override void PressedFromScript(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x11CB0F4", Offset = "0x11CB0F4", VA = "0x11CB0F4", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x11CB1A4", Offset = "0x11CB1A4", VA = "0x11CB1A4")]
	public SpareBarTimerMenu()
	{
	}
}
[Token(Token = "0x20001E5")]
public class SparebarSoundEffect : MonoBehaviour
{
	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource[] audio;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve impact_audio_volume;

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x11CB1AC", Offset = "0x11CB1AC", VA = "0x11CB1AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x11CB200", Offset = "0x11CB200", VA = "0x11CB200")]
	private void PunchVisualImpact(Collision collision, float power)
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x11C8DD8", Offset = "0x11C8DD8", VA = "0x11C8DD8")]
	public void PunchPlayAudio(Vector3 pos, float speed, float pitch, bool ran = true, int audio_nr = 0)
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x11CB208", Offset = "0x11CB208", VA = "0x11CB208")]
	public SparebarSoundEffect()
	{
	}
}
[Token(Token = "0x20001E6")]
public class GymSpectatorsManager : MonoBehaviour
{
	[Token(Token = "0x20001E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884D74", Offset = "0x884D74")]
	private sealed class <StartCheering>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GymSpectatorsManager <>4__this;

		[Token(Token = "0x170000AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AA1")]
			[Address(RVA = "0xB3DBF4", Offset = "0xB3DBF4", VA = "0xB3DBF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AA3")]
			[Address(RVA = "0xB3DC3C", Offset = "0xB3DC3C", VA = "0xB3DC3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xB3DAD8", Offset = "0xB3DAD8", VA = "0xB3DAD8")]
		[DebuggerHidden]
		public <StartCheering>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xB3DB04", Offset = "0xB3DB04", VA = "0xB3DB04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xB3DB08", Offset = "0xB3DB08", VA = "0xB3DB08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xB3DBFC", Offset = "0xB3DBFC", VA = "0xB3DBFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator[] animator;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fight;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource action_autiosource;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource idle_autiosource;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource clapping_autiosource;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource background_music;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int number_of_spectators;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float random_action_timer;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool[] selected;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] time_stamp;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool[] clapping;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float[] action_time;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool clapping_spectators;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool score;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float clapping_timer;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool audience_on;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool disableIdleSound;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int spectator_clappingHash;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int fist_pumpHash;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int idleHash;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool is_playing_clapping;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float AIUpdateTimer;

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x134988C", Offset = "0x134988C", VA = "0x134988C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x1349ADC", Offset = "0x1349ADC", VA = "0x1349ADC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x1349B84", Offset = "0x1349B84", VA = "0x1349B84")]
	private void RandomSpectators()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x1349C40", Offset = "0x1349C40", VA = "0x1349C40")]
	private void RandomAction(int index)
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x1349D88", Offset = "0x1349D88", VA = "0x1349D88")]
	private void CheckClappig(int index)
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x1349EA4", Offset = "0x1349EA4", VA = "0x1349EA4")]
	public void stopFight()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x1349FA8", Offset = "0x1349FA8", VA = "0x1349FA8")]
	public void startFight()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x1349FB4", Offset = "0x1349FB4", VA = "0x1349FB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88AF50", Offset = "0x88AF50")]
	private IEnumerator StartCheering()
	{
		return null;
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x134A020", Offset = "0x134A020", VA = "0x134A020")]
	public void startClapping()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x134A14C", Offset = "0x134A14C", VA = "0x134A14C")]
	public void stopClapping()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x134A1C4", Offset = "0x134A1C4", VA = "0x134A1C4")]
	private void Playclapping()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x134A1EC", Offset = "0x134A1EC", VA = "0x134A1EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x134A4B4", Offset = "0x134A4B4", VA = "0x134A4B4")]
	public GymSpectatorsManager()
	{
	}
}
[Token(Token = "0x20001E8")]
public class SpectatorAction
{
	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float time_stamp;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int spectator_index;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpectatorsManager.SpectatorActionType type;

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x11CE15C", Offset = "0x11CE15C", VA = "0x11CE15C")]
	public SpectatorAction(float time_stamp, int spectator_index, SpectatorsManager.SpectatorActionType action_type)
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x11CE1A4", Offset = "0x11CE1A4", VA = "0x11CE1A4")]
	public float getTimeStamp()
	{
		return default(float);
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x11CE1AC", Offset = "0x11CE1AC", VA = "0x11CE1AC")]
	public int getSpectatorIndex()
	{
		return default(int);
	}
}
[Token(Token = "0x20001E9")]
public class SpectatorsManager : MonoBehaviour
{
	[Token(Token = "0x20001EA")]
	public enum SpectatorActionType
	{
		[Token(Token = "0x4001145")]
		Sitting,
		[Token(Token = "0x4001146")]
		Clapping,
		[Token(Token = "0x4001147")]
		Sitting_Fist_Pump,
		[Token(Token = "0x4001148")]
		Standing_Fist_Pump
	}

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public global::AnimationInstancing.AnimationInstancing[] ai;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool fight_on;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float clapping_time;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fist_pump_time;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float standing_fist_pump_time;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float sitting_fist_pump_timer;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float standing_fist_pump_timer;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<SpectatorAction> clapping_action_spectators;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<SpectatorAction> fist_pump_action_spectators;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<SpectatorAction> standing_fist_pump_action_spectators;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<int> selected_spectators;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float timer;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int number_of_spectators;

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x11CE1B4", Offset = "0x11CE1B4", VA = "0x11CE1B4")]
	private void UpdateSpectatorsList()
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x11CE59C", Offset = "0x11CE59C", VA = "0x11CE59C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x11CE5D8", Offset = "0x11CE5D8", VA = "0x11CE5D8")]
	private void setClappingActionSpectator()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x11CE7C4", Offset = "0x11CE7C4", VA = "0x11CE7C4")]
	private void setFistPumpRandomSpectator()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x11CE9B0", Offset = "0x11CE9B0", VA = "0x11CE9B0")]
	private void setStandingFistPumpRandomSpectator()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x11CEB9C", Offset = "0x11CEB9C", VA = "0x11CEB9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x11CEBCC", Offset = "0x11CEBCC", VA = "0x11CEBCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x11CECB4", Offset = "0x11CECB4", VA = "0x11CECB4")]
	public SpectatorsManager()
	{
	}
}
[Token(Token = "0x20001EB")]
public class Pendulum : MonoBehaviour
{
	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform speed_bag_mode;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Pivot;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Bob;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float mass;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float ropeLength;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 bobStartingPosition;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool bobStartingPositionSet;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 gravityDirection;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 tensionDirection;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 tangentDirection;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 pendulumSideDirection;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float tensionForce;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float gravityForce;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 currentVelocity;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 currentStatePosition;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 previousStatePosition;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float t;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float dt;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float currentTime;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float accumulator;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float inclinationAngle;

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x10E5D9C", Offset = "0x10E5D9C", VA = "0x10E5D9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x10E5E88", Offset = "0x10E5E88", VA = "0x10E5E88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x10E6320", Offset = "0x10E6320", VA = "0x10E6320")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x88B000", Offset = "0x88B000")]
	private void ResetPendulumPosition()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x10E63A4", Offset = "0x10E63A4", VA = "0x10E63A4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x88B038", Offset = "0x88B038")]
	private void ResetPendulumForces()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x10E5DEC", Offset = "0x10E5DEC", VA = "0x10E5DEC")]
	private void PendulumInit()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x10E6338", Offset = "0x10E6338", VA = "0x10E6338")]
	private void MoveBob(Vector3 resetBobPosition)
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x10E5FBC", Offset = "0x10E5FBC", VA = "0x10E5FBC")]
	private Vector3 PendulumUpdate(Vector3 currentStatePosition, float deltaTime)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x10E63F8", Offset = "0x10E63F8", VA = "0x10E63F8")]
	private Vector3 GetPointOnLine(Vector3 start, Vector3 end, float distanceFromStart)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x10E6454", Offset = "0x10E6454", VA = "0x10E6454")]
	public void setVelocity(Vector3 velocity)
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x10E6464", Offset = "0x10E6464", VA = "0x10E6464")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x10E6468", Offset = "0x10E6468", VA = "0x10E6468")]
	public Pendulum()
	{
	}
}
[Token(Token = "0x20001EC")]
public class SpeedBag : MonoBehaviour
{
	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody bag_rb;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpeedBagPunchEffect punch_effect;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int hit_counter;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ob;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform renderBag;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PunchBagPlayerGlove left;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PunchBagPlayerGlove right;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject sign_to_hit;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material sign_to_hit_material;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture2D[] texture_number;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material numbers;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int start_color_number;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform front_position;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform back_position;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SpeedBagGameController controller;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool game_start;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float angular_velocity;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float delt;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float speed;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float GRAVITY;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float pendulum_mass;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float pendulum_length;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float pendulum_angle;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float bag_velocity;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float angle;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float mass;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float damping;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float last_angle;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float timestamp;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool is_colliding;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float colliding_timer;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool back;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool front;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float angular_acceleration;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float arm_length;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 fist_speed_left;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 fist_speed_right;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int counter_front;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int counter_back;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private PunchBagTarget.GloveSide hand;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int points_counter;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public int number_of_color_hits;

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x11CECC4", Offset = "0x11CECC4", VA = "0x11CECC4")]
	public void startGame()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x11CEDB8", Offset = "0x11CEDB8", VA = "0x11CEDB8")]
	public void stopGame()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x11CEDE0", Offset = "0x11CEDE0", VA = "0x11CEDE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x11CEF58", Offset = "0x11CEF58", VA = "0x11CEF58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x11CEFFC", Offset = "0x11CEFFC", VA = "0x11CEFFC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x11CED04", Offset = "0x11CED04", VA = "0x11CED04")]
	private void StartGame()
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x11CF4B8", Offset = "0x11CF4B8", VA = "0x11CF4B8")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x11CF4BC", Offset = "0x11CF4BC", VA = "0x11CF4BC")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x11CF3D0", Offset = "0x11CF3D0", VA = "0x11CF3D0")]
	private void RandomHitHand()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x11CF4C0", Offset = "0x11CF4C0", VA = "0x11CF4C0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x11CF994", Offset = "0x11CF994", VA = "0x11CF994")]
	public SpeedBag()
	{
	}
}
[Token(Token = "0x20001ED")]
public class SpeedBagGameController : MonoBehaviour
{
	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HeavyBagTrainingController.TrainingMode training_mode;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpeedBagTimerMenu timer_menu;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpeedBagResultMenu result_menu;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform speed_bag_platform;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float time;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool timer_working;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SpeedBag speed_bag;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource bell;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int min;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float average_timer;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int hits;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int misses;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float ahpm;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float ampm;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool start;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int score;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int game_time;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool isPaused;

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x11CF9C0", Offset = "0x11CF9C0", VA = "0x11CF9C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x11CFA60", Offset = "0x11CFA60", VA = "0x11CFA60")]
	public void PauseGame(bool pause)
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x11CFA6C", Offset = "0x11CFA6C", VA = "0x11CFA6C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x11CFAD4", Offset = "0x11CFAD4", VA = "0x11CFAD4")]
	public void startGame(HeavyBagTrainingController.TrainingMode mode, int time)
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x11CFB4C", Offset = "0x11CFB4C", VA = "0x11CFB4C")]
	public void stopGame(bool interrupt = false)
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x11CFB38", Offset = "0x11CFB38", VA = "0x11CFB38")]
	private void startTimer(int time)
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x11CFA90", Offset = "0x11CFA90", VA = "0x11CFA90")]
	private void UpdateTimedMode()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x11D02A8", Offset = "0x11D02A8", VA = "0x11D02A8")]
	private void UpdateTimer()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x11D03C8", Offset = "0x11D03C8", VA = "0x11D03C8")]
	private void CalculateAverage()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x11D0430", Offset = "0x11D0430", VA = "0x11D0430")]
	private void stopTimer()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x11CFB18", Offset = "0x11CFB18", VA = "0x11CFB18")]
	public void clear()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x11CFC9C", Offset = "0x11CFC9C", VA = "0x11CFC9C")]
	private void calculateResult()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x11CF958", Offset = "0x11CF958", VA = "0x11CF958")]
	public void ReceiveHit()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x11CF974", Offset = "0x11CF974", VA = "0x11CF974")]
	public void ReceiveMiss()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x11D04E4", Offset = "0x11D04E4", VA = "0x11D04E4")]
	public SpeedBagGameController()
	{
	}
}
[Token(Token = "0x20001EE")]
public class SpeedBagHowToPlayMenu : GameMenu
{
	[Token(Token = "0x20001EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884D84", Offset = "0x884D84")]
	private sealed class <ExitMiniGame>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpeedBagHowToPlayMenu <>4__this;

		[Token(Token = "0x170000AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ADD")]
			[Address(RVA = "0x1D5164C", Offset = "0x1D5164C", VA = "0x1D5164C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ADF")]
			[Address(RVA = "0x1D51694", Offset = "0x1D51694", VA = "0x1D51694", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x1D514D4", Offset = "0x1D514D4", VA = "0x1D514D4")]
		[DebuggerHidden]
		public <ExitMiniGame>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x1D51500", Offset = "0x1D51500", VA = "0x1D51500", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x1D51504", Offset = "0x1D51504", VA = "0x1D51504", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x1D51654", Offset = "0x1D51654", VA = "0x1D51654", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu mode_selection;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMenu main_menu;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform main_menu_player_center;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject speed_bag;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject speed_bag_static;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform player;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MainMenuManager main_menu_manager;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private FadeInOut fade_in_out;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool wait;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject leftBand;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject rightBand;

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x11D04EC", Offset = "0x11D04EC", VA = "0x11D04EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x11D05B4", Offset = "0x11D05B4", VA = "0x11D05B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x11D0668", Offset = "0x11D0668", VA = "0x11D0668")]
	private void MovePlayer(Transform position)
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x11D06B8", Offset = "0x11D06B8", VA = "0x11D06B8", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x11D07C8", Offset = "0x11D07C8", VA = "0x11D07C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88B070", Offset = "0x88B070")]
	private IEnumerator ExitMiniGame()
	{
		return null;
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x11D0834", Offset = "0x11D0834", VA = "0x11D0834")]
	public SpeedBagHowToPlayMenu()
	{
	}
}
[Token(Token = "0x20001F0")]
public class SpeedBagPunchEffect : MonoBehaviour
{
	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource[] audio;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem impact_particle;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve impact_audio_volume;

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x11D083C", Offset = "0x11D083C", VA = "0x11D083C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x11D0890", Offset = "0x11D0890", VA = "0x11D0890")]
	private void PunchVisualImpact(Collision collision, float power)
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x11CF27C", Offset = "0x11CF27C", VA = "0x11CF27C")]
	public void PunchPlayAudio(Vector3 pos, float speed, float pitch, bool ran = true, int audio_nr = 0)
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x11D09C8", Offset = "0x11D09C8", VA = "0x11D09C8")]
	public SpeedBagPunchEffect()
	{
	}
}
[Token(Token = "0x20001F1")]
public class SpeedBagResultMenu : GameMenu
{
	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh hits;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh misses;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh time;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh ahpm;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh ampm;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh score;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh best_hits;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMesh best_misses;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMesh best_time;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMesh best_ahpm;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMesh best_ampm;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMesh best_score;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SpeedBagTimerMenu timer_menu;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameMenu select_time_menu;

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x11CFCE4", Offset = "0x11CFCE4", VA = "0x11CFCE4")]
	public void setResult(int time, int score, int hits, int misses, int ahpm, int ampm)
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x11D09D0", Offset = "0x11D09D0", VA = "0x11D09D0", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x11D0AD8", Offset = "0x11D0AD8", VA = "0x11D0AD8")]
	public SpeedBagResultMenu()
	{
	}
}
[Token(Token = "0x20001F2")]
public class SpeedBagSelectModeMenu : GameMenu
{
	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu setting_menu;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMenu free_mode;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameMenu endurance_mode;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameMenu how_to_play_menu;

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x11D0AE0", Offset = "0x11D0AE0", VA = "0x11D0AE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x11D0AEC", Offset = "0x11D0AEC", VA = "0x11D0AEC", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x11D0BC8", Offset = "0x11D0BC8", VA = "0x11D0BC8")]
	public SpeedBagSelectModeMenu()
	{
	}
}
[Token(Token = "0x20001F3")]
public class SpeedBagSettingsMenu : GameMenu
{
	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu game_select_mode_menu;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform speed_bag_height;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh height_cm;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh height_inch;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float double_end_bag_height_prefs;

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x11D0BD0", Offset = "0x11D0BD0", VA = "0x11D0BD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x11D0C2C", Offset = "0x11D0C2C", VA = "0x11D0C2C")]
	private void updateTextHeight()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x11D0D54", Offset = "0x11D0D54", VA = "0x11D0D54", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x11D0EBC", Offset = "0x11D0EBC", VA = "0x11D0EBC")]
	public SpeedBagSettingsMenu()
	{
	}
}
[Token(Token = "0x20001F4")]
public class SpeedBagTimeSelectionMenu : GameMenu
{
	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform selection_mark;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpeedBagTimerMenu timer_menu;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameMenu select_mode;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 one_min;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 two_min;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 five_min;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 ten_min;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int min;

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x11D0EC4", Offset = "0x11D0EC4", VA = "0x11D0EC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x11D0ED0", Offset = "0x11D0ED0", VA = "0x11D0ED0", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x11D1120", Offset = "0x11D1120", VA = "0x11D1120")]
	public SpeedBagTimeSelectionMenu()
	{
	}
}
[Token(Token = "0x20001F5")]
public class speedBagCollisionDetector : MonoBehaviour
{
	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody pend;

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xB36A54", Offset = "0xB36A54", VA = "0xB36A54")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xB36B18", Offset = "0xB36B18", VA = "0xB36B18")]
	public speedBagCollisionDetector()
	{
	}
}
[Token(Token = "0x20001F6")]
public class SpeedBagTimerMenu : GameMenu
{
	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform selection_mark;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpeedBagGameController controller;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameMenu time_mode;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh time_text;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh average_text;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int game_time;

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x11D1128", Offset = "0x11D1128", VA = "0x11D1128")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x11D10E4", Offset = "0x11D10E4", VA = "0x11D10E4")]
	public void startGame(int time)
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x11D0AA4", Offset = "0x11D0AA4", VA = "0x11D0AA4")]
	public void restartGame()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x11D0468", Offset = "0x11D0468", VA = "0x11D0468")]
	public void ShowTime(string time)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x11D0484", Offset = "0x11D0484", VA = "0x11D0484")]
	public void ShowAverage(float ahpm)
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x11D023C", Offset = "0x11D023C", VA = "0x11D023C")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x11D1180", Offset = "0x11D1180", VA = "0x11D1180", Slot = "5")]
	public override void PauseButtonPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x11D11FC", Offset = "0x11D11FC", VA = "0x11D11FC", Slot = "6")]
	public override void PauseButtonUnPressed(AudioSource button_audio, PauseButton button)
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x11D1260", Offset = "0x11D1260", VA = "0x11D1260", Slot = "7")]
	public override void PressedFromScript(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x11D1308", Offset = "0x11D1308", VA = "0x11D1308", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x11D13B8", Offset = "0x11D13B8", VA = "0x11D13B8")]
	public SpeedBagTimerMenu()
	{
	}
}
[Token(Token = "0x20001F7")]
public class TargetSelectionMenu : GameMenu
{
	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMenu setting_menu;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh text;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer right_pad_up;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer right_middle_pad_up;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer left_middle_pad_up;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MeshRenderer left_pad_up;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MeshRenderer left_pad_down;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MeshRenderer center_down_pad;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MeshRenderer right_pad_down;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MeshRenderer middle_right_pad;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MeshRenderer middle_center_pad;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MeshRenderer middle_left_pad;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool right_pad_up_bool;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool right_middle_pad_up_bool;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool left_middle_pad_up_bool;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	private bool left_pad_up_bool;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool left_pad_down_bool;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool center_down_pad_bool;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	private bool right_pad_down_bool;

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x87")]
	private bool middle_right_pad_bool;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool middle_center_pad_bool;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool middle_left_pad_bool;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MeshRenderer[] target_list;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool[] target_list_bool;

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x11D1850", Offset = "0x11D1850", VA = "0x11D1850")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x11D1AF0", Offset = "0x11D1AF0", VA = "0x11D1AF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x11D1E84", Offset = "0x11D1E84", VA = "0x11D1E84", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x11D2010", Offset = "0x11D2010", VA = "0x11D2010")]
	private void SavePrefs()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x11D1F70", Offset = "0x11D1F70", VA = "0x11D1F70")]
	private void SetSelected(int id)
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x11D23B4", Offset = "0x11D23B4", VA = "0x11D23B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x11D2464", Offset = "0x11D2464", VA = "0x11D2464")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x11D2468", Offset = "0x11D2468", VA = "0x11D2468")]
	public TargetSelectionMenu()
	{
	}
}
[Token(Token = "0x20001F8")]
public class followphysicsHand : MonoBehaviour
{
	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform physics_hand;

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xB34730", Offset = "0xB34730", VA = "0xB34730")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xB34734", Offset = "0xB34734", VA = "0xB34734")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xB348BC", Offset = "0xB348BC", VA = "0xB348BC")]
	public followphysicsHand()
	{
	}
}
[Token(Token = "0x20001F9")]
public class light_follow_test : MonoBehaviour
{
	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xB348C4", Offset = "0xB348C4", VA = "0xB348C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xB348C8", Offset = "0xB348C8", VA = "0xB348C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xB34958", Offset = "0xB34958", VA = "0xB34958")]
	public light_follow_test()
	{
	}
}
[Token(Token = "0x20001FA")]
public class RefereeAi : MonoBehaviour
{
	[Token(Token = "0x20001FB")]
	public enum REFEREESTATE
	{
		[Token(Token = "0x4001227")]
		IDLE,
		[Token(Token = "0x4001228")]
		WATCH,
		[Token(Token = "0x4001229")]
		START_ROUND,
		[Token(Token = "0x400122A")]
		KNOCK_DOWN,
		[Token(Token = "0x400122B")]
		RECOVERY,
		[Token(Token = "0x400122C")]
		ANNOUNCEMENT
	}

	[Token(Token = "0x20001FC")]
	public enum REFEREEANIMATIONS
	{
		[Token(Token = "0x400122E")]
		START,
		[Token(Token = "0x400122F")]
		COUNT,
		[Token(Token = "0x4001230")]
		ANNOUNCE
	}

	[Token(Token = "0x20001FD")]
	public enum WINNER
	{
		[Token(Token = "0x4001232")]
		LEFT,
		[Token(Token = "0x4001233")]
		RIGHT
	}

	[Token(Token = "0x20001FE")]
	public enum KNOCKDOWNTYPE
	{
		[Token(Token = "0x4001235")]
		PLAYER,
		[Token(Token = "0x4001236")]
		CPU
	}

	[Token(Token = "0x20001FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884D94", Offset = "0x884D94")]
	private sealed class <WaitEyeBlink>d__86 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RefereeAi <>4__this;

		[Token(Token = "0x170000B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B2C")]
			[Address(RVA = "0x1D4FCCC", Offset = "0x1D4FCCC", VA = "0x1D4FCCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B2E")]
			[Address(RVA = "0x1D4FD14", Offset = "0x1D4FD14", VA = "0x1D4FD14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x1D4FBE4", Offset = "0x1D4FBE4", VA = "0x1D4FBE4")]
		[DebuggerHidden]
		public <WaitEyeBlink>d__86(int <>1__state)
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x1D4FC10", Offset = "0x1D4FC10", VA = "0x1D4FC10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x1D4FC14", Offset = "0x1D4FC14", VA = "0x1D4FC14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x1D4FCD4", Offset = "0x1D4FCD4", VA = "0x1D4FCD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LookAtIK look_ik;

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerManager player_manager;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public REFEREESTATE state;

	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private WINNER winner;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private KNOCKDOWNTYPE knockdown_type;

	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool counting;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource[] audio;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject audio_object;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int xHash;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int yHash;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int countHash;

	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int CountHash;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int Stop_CountHash;

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int waitHash;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int winner_leftHash;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int winner_rightHash;

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 update_direction_delta;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 update_direction_delta_target;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 opponent_position_delta;

	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float distance_to_opponent;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float speed_x;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float speed_z;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform current_target;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform knock_out_target;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform cpu_knockout;

	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform player_knockout;

	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform after_knockout_target;

	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform center_target;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform ring_center;

	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform player_head;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform cpu_player_head;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform look_target;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x887408", Offset = "0x887408")]
	public float percent;

	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float STANDARD_ROTATION_SPEED;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float direction_rotation_speed;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float target_angle;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform[] corrners;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float distance_to_target;

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private bool idle_animation;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
	private bool change_state;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public RingManager ring_manager;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool start_animation;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float announce_timer;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool knock_out;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	private bool rotation;

	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x122")]
	private bool knock_down;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x123")]
	private bool announce;

	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private int left_right;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool knockout;

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public REFEREESTATE last_state;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool afterKnockdown;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float recovery_timer;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool recovered;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
	private bool announce_speech;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float startCountTimer;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float look_target_weight;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private int count_number;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool up;

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x205FC80", Offset = "0x205FC80", VA = "0x205FC80")]
	public REFEREESTATE GetRefereeState()
	{
		return default(REFEREESTATE);
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x205FC88", Offset = "0x205FC88", VA = "0x205FC88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x205FE78", Offset = "0x205FE78", VA = "0x205FE78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x205FFF0", Offset = "0x205FFF0", VA = "0x205FFF0")]
	public void setKnockout()
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x205FFFC", Offset = "0x205FFFC", VA = "0x205FFFC")]
	private void UpdateDirection()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x20601B8", Offset = "0x20601B8", VA = "0x20601B8")]
	private void UpdateMovement(float target_distance_to_opponent)
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x20609BC", Offset = "0x20609BC", VA = "0x20609BC")]
	public void startRound()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x20609C8", Offset = "0x20609C8", VA = "0x20609C8")]
	private void UpdateDistanceToOpponent()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x2060A68", Offset = "0x2060A68", VA = "0x2060A68")]
	private void UpdateState()
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x2060EF0", Offset = "0x2060EF0", VA = "0x2060EF0")]
	public void setKnockdownTarget(KNOCKDOWNTYPE type)
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x2060F20", Offset = "0x2060F20", VA = "0x2060F20")]
	public REFEREESTATE getRefereState()
	{
		return default(REFEREESTATE);
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x2060F28", Offset = "0x2060F28", VA = "0x2060F28")]
	public void setState(REFEREESTATE state)
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x2061184", Offset = "0x2061184", VA = "0x2061184")]
	public void OnEyeClosed()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x206135C", Offset = "0x206135C", VA = "0x206135C")]
	public void OnAiPlayerToCorner()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x2061894", Offset = "0x2061894", VA = "0x2061894")]
	public void OnPlayerToCorner()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x20611B8", Offset = "0x20611B8", VA = "0x20611B8")]
	private void setRecoveredPosition(float coef)
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x20618C8", Offset = "0x20618C8", VA = "0x20618C8")]
	public void setLooKWeight(float weight)
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x20618F0", Offset = "0x20618F0", VA = "0x20618F0")]
	public void setWinner(WINNER winner)
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x2060E88", Offset = "0x2060E88", VA = "0x2060E88")]
	private void UpdateRecoveryState()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x2060BE0", Offset = "0x2060BE0", VA = "0x2060BE0")]
	private void UpdateIdleState()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x2060C54", Offset = "0x2060C54", VA = "0x2060C54")]
	private void UpdateWatchState()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x2060D2C", Offset = "0x2060D2C", VA = "0x2060D2C")]
	private void UpdateAnnouncementState()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x2061390", Offset = "0x2061390", VA = "0x2061390")]
	private void setPosition(Vector3 position)
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x2060C7C", Offset = "0x2060C7C", VA = "0x2060C7C")]
	private void UpdateKnockDownState()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x2060BE4", Offset = "0x2060BE4", VA = "0x2060BE4")]
	private void UpdateStartRoundState()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x2061A40", Offset = "0x2061A40", VA = "0x2061A40")]
	public void AnimationEnd(REFEREEANIMATIONS animation)
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x2061108", Offset = "0x2061108", VA = "0x2061108")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88B120", Offset = "0x88B120")]
	private IEnumerator WaitEyeBlink(float time = 1f)
	{
		return null;
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x2061B64", Offset = "0x2061B64", VA = "0x2061B64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x2061CF4", Offset = "0x2061CF4", VA = "0x2061CF4")]
	public RefereeAi()
	{
	}
}
[Token(Token = "0x2000200")]
public class RefereeAnimationController : StateMachineBehaviour
{
	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RefereeAi.REFEREEANIMATIONS animation;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RefereeAi referee_ai;

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x2061D14", Offset = "0x2061D14", VA = "0x2061D14", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x2061D7C", Offset = "0x2061D7C", VA = "0x2061D7C", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x2061D9C", Offset = "0x2061D9C", VA = "0x2061D9C")]
	public RefereeAnimationController()
	{
	}
}
[Token(Token = "0x2000201")]
public class SelectLanguageMenu : GameMenu
{
	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource bg_sound;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMenu setting_menu;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LanguageChange language_change;

	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform selection_mark_language;

	[Token(Token = "0x4001241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform default_mark;

	[Token(Token = "0x4001242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform chinese_mark;

	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform english_mark;

	[Token(Token = "0x4001244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool chinese;

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x11C4548", Offset = "0x11C4548", VA = "0x11C4548")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x11C45F8", Offset = "0x11C45F8", VA = "0x11C45F8", Slot = "4")]
	public override void ButtonPressed(GameButton.ButtonType button, AudioSource button_audio)
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x11C47AC", Offset = "0x11C47AC", VA = "0x11C47AC")]
	private void back()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x11C47B4", Offset = "0x11C47B4", VA = "0x11C47B4")]
	public SelectLanguageMenu()
	{
	}
}
[Token(Token = "0x2000202")]
public class TestLoadingScreen : MonoBehaviour
{
	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string sceneToTransitionTo;

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xB2EC88", Offset = "0xB2EC88", VA = "0xB2EC88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xB2EC8C", Offset = "0xB2EC8C", VA = "0xB2EC8C")]
	public TestLoadingScreen()
	{
	}
}
[Token(Token = "0x2000203")]
public class BodyIK : MonoBehaviour
{
	[Token(Token = "0x2000204")]
	public enum BlockType
	{
		[Token(Token = "0x40012A9")]
		FrontBlock,
		[Token(Token = "0x40012AA")]
		SideBlock,
		[Token(Token = "0x40012AB")]
		BodyCenterBlock,
		[Token(Token = "0x40012AC")]
		BodyLeftBlock,
		[Token(Token = "0x40012AD")]
		BodyRightBlock,
		[Token(Token = "0x40012AE")]
		Transition
	}

	[Token(Token = "0x2000205")]
	public enum BlockHand
	{
		[Token(Token = "0x40012B0")]
		Left,
		[Token(Token = "0x40012B1")]
		Right,
		[Token(Token = "0x40012B2")]
		Both
	}

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform block;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BlockType left_hand_block_type;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public BlockType right_hand_block_type;

	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BlockType left_hand_last_frame_block_type;

	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private BlockType right_hand_last_frame_block_type;

	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BlockType left_hand_block_type_before_current;

	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private BlockType right_hand_block_type_before_current;

	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator animator;

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 hipsOffset;

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 rotOffset;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 front_block_left_shoulder_rotation_offset;

	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 front_block_right_shoulder_rotation_offset;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 side_block_left_shoulder_rotation_offset;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector3 side_block_right_shoulder_rotation_offset;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 body_block_left_shoulder_rotation_offset;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 body_block_right_shoulder_rotation_offset;

	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 body_block_side_left_left_shoulder_rotation_offset;

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Vector3 body_block_side_left_right_shoulder_rotation_offset;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3 body_block_side_right_left_shoulder_rotation_offset;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Vector3 body_block_side_right_right_shoulder_rotation_offset;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Vector3 body_block_spine_rotation;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform left_hand_front_block;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform right_hand_front_block;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform left_elbow_front_block;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform right_elbow_front_block;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform left_hand_side_block;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Transform right_hand_side_block;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Transform left_elbow_side_block;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Transform right_elbow_side_block;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Transform left_hand_body_block;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Transform right_hand_body_block;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Transform left_elbow_body_block;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Transform right_elbow_body_block;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Transform left_hand_body_block_side_left;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Transform right_hand_body_block_side_left;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Transform left_elbow_body_block_side_left;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Transform right_elbow_body_block_side_left;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Transform left_hand_body_block_side_right;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Transform right_hand_body_block_side_right;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Transform left_elbow_body_block_side_right;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Transform right_elbow_body_block_side_right;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Vector3 start_block_left_hand_position;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private Vector3 start_block_right_hand_position;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Vector3 start_block_right_shoulder_rotation;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private Vector3 start_block_left_shoulder_rotation;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Vector3 start_block_left_elbow_position;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private Vector3 start_block_right_elbow_position;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Vector3 target_block_left_hand_position;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private Vector3 target_block_right_hand_position;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private Vector3 target_block_left_shoudler_rotation;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private Vector3 target_block_right_shoudler_rotation;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private Vector3 target_block_left_elbow_position;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private Vector3 target_block_right_elbow_position;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private Vector3 current_block_left_hand_position;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private Vector3 current_block_right_hand_position;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private Vector3 current_block_left_shoudler_rotation;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private Vector3 current_block_right_shoudler_rotation;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private Vector3 current_block_left_elbow_position;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	private Vector3 current_block_right_elbow_position;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private Quaternion start_block_left_hand_rotation;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private Quaternion start_block_right_hand_rotation;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private Quaternion target_block_left_hand_rotation;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private Quaternion target_block_right_hand_rotation;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private Quaternion current_block_left_hand_rotation;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private Quaternion current_block_right_hand_rotation;

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private bool is_blocking_left;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B9")]
	private bool is_blocking_right;

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	private float time_left;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private float time_right;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	private float look_weight;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public Transform look_at_target;

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public GameObject obj;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public Transform start;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public Transform end;

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x887430", Offset = "0x887430")]
	public float value_left;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	public float value_right;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public float weight_left;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
	public float weight_right;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public AnimationCurve curve;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private bool transition_left;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x301")]
	private bool transition_right;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	private BlockType next_block_left_hand;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private BlockType next_block_right_hand;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	public float dodging_direction_max;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public float dodging_right_max;

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	public float dodging_down_max;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public float dodging_speed_min;

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
	public float dodging_speed;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public float dodging_speed_max;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
	private bool is_dodging;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public int dodging_direction;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
	public float dodging_weight;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public float dodging_down_weight;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
	private float dodgeTimer;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	private bool auto_back_dodge;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
	private float dodging_speed_multiplier;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private float random_timer_dodge;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
	private float random_timer_block;

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x101FB44", Offset = "0x101FB44", VA = "0x101FB44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x101FBA8", Offset = "0x101FBA8", VA = "0x101FBA8")]
	private void UpdateLookAt()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x101FCF8", Offset = "0x101FCF8", VA = "0x101FCF8")]
	public void setBlocking(BlockType type, BlockHand hand)
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x101FF44", Offset = "0x101FF44", VA = "0x101FF44")]
	public void stopBlocking(BlockHand hand = BlockHand.Both)
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x101FD9C", Offset = "0x101FD9C", VA = "0x101FD9C")]
	public void setBlockLeft(BlockType block_type)
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x101FE70", Offset = "0x101FE70", VA = "0x101FE70")]
	public void setBlockRight(BlockType block_type)
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x101FF84", Offset = "0x101FF84", VA = "0x101FF84")]
	private void stopBlockingLeft()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x101FF94", Offset = "0x101FF94", VA = "0x101FF94")]
	private void stopBlockingRight()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x101FFA4", Offset = "0x101FFA4", VA = "0x101FFA4")]
	private void nextBlockLeft(BlockType block_type, bool transition)
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x101FFD4", Offset = "0x101FFD4", VA = "0x101FFD4")]
	private void nextBlockRight(BlockType block_type, bool transition)
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x1020004", Offset = "0x1020004", VA = "0x1020004")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x1020124", Offset = "0x1020124", VA = "0x1020124")]
	private void updateTargetLeft()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x10206BC", Offset = "0x10206BC", VA = "0x10206BC")]
	private void updateTargetRight()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x1020688", Offset = "0x1020688", VA = "0x1020688")]
	private void LeftTransition()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x1020C20", Offset = "0x1020C20", VA = "0x1020C20")]
	private void RightTransition()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x1020C54", Offset = "0x1020C54", VA = "0x1020C54")]
	private void OnAnimatorIK(int layerIndex)
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x10210DC", Offset = "0x10210DC", VA = "0x10210DC")]
	private void LeftHandUpdateBlockTransition()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x102128C", Offset = "0x102128C", VA = "0x102128C")]
	private void RightHandUpdateBlockTransition()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x10200DC", Offset = "0x10200DC", VA = "0x10200DC")]
	private bool setDodge(float direction, float down, float time = 0f, bool auto = false, float speed_multiplier = 1f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x102144C", Offset = "0x102144C", VA = "0x102144C")]
	private void changeDodgingTime(float time, bool end_dodge = false)
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x1020E94", Offset = "0x1020E94", VA = "0x1020E94")]
	private void UpdateDodge()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x1021478", Offset = "0x1021478", VA = "0x1021478")]
	private void UpdateDodgeTimer()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x10214B8", Offset = "0x10214B8", VA = "0x10214B8")]
	public BodyIK()
	{
	}
}
[Token(Token = "0x2000206")]
public class DefendeBlock : MonoBehaviour
{
	[Token(Token = "0x2000207")]
	private enum BlockingType
	{
		[Token(Token = "0x40012D9")]
		NOBLOCK,
		[Token(Token = "0x40012DA")]
		FRONT,
		[Token(Token = "0x40012DB")]
		SIDE,
		[Token(Token = "0x40012DC")]
		BODY
	}

	[Token(Token = "0x2000208")]
	private enum BlockingHand
	{
		[Token(Token = "0x40012DE")]
		BOTH,
		[Token(Token = "0x40012DF")]
		LEFT,
		[Token(Token = "0x40012E0")]
		RIGHT
	}

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BlockingType blocking_type;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private BlockingHand blocking_hand;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BlockingHand stop_blocking_hand;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PuppetMaster puppet_master;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BlockingType next_block;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private BlockingHand next_block_hand;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float next_block_percentage;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float left_hand_weight;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float left_elbow_weight;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float right_hand_weight;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float right_elbow_weight;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool blocking_ready;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool is_blocking;

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool stop_blocking;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float blocking_percentage;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Animator animator;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float front_block_speed;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float side_block_speed;

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float body_block_speed;

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 rotation;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool shoulder_effector;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector3 left_fist_delta_angle;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 right_fist_delta_angle;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform front_block_left_hand_target;

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform front_block_left_elbow_target;

	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform front_block_right_hand_target;

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform front_block_right_elbow_target;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform side_block_left_hand_target;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform side_block_left_elbow_target;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform side_block_right_hand_target;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform side_block_right_elbow_target;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform body_block_left_hand_target;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform body_block_left_elbow_target;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform body_block_right_hand_target;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform body_block_right_elbow_target;

	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform left_hand_rotation;

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform right_hand_rotation;

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xD171CC", Offset = "0xD171CC", VA = "0xD171CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xD17220", Offset = "0xD17220", VA = "0xD17220")]
	private void startBlocking(BlockingType type, BlockingHand hand, float percentage)
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xD17234", Offset = "0xD17234", VA = "0xD17234")]
	private void changeBlockingType(BlockingType type, BlockingHand hand, float percentage)
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xD17284", Offset = "0xD17284", VA = "0xD17284")]
	private void stopBlocking(BlockingHand hand)
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xD17298", Offset = "0xD17298", VA = "0xD17298")]
	private void OnAnimatorIK(int layerIndex)
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xD17468", Offset = "0xD17468", VA = "0xD17468")]
	private void Block(BlockingHand hand, float blocking_speed)
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xD177F4", Offset = "0xD177F4", VA = "0xD177F4")]
	private void stopBlock(BlockingHand hand, float blocking_speed)
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xD179A8", Offset = "0xD179A8", VA = "0xD179A8")]
	private void BlockingIk(Transform left_hand_target, Transform right_hand_target, Transform left_elbow_target, Transform right_elbow_target, bool change_fist_angle)
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xD17C38", Offset = "0xD17C38", VA = "0xD17C38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xD17C3C", Offset = "0xD17C3C", VA = "0xD17C3C")]
	public DefendeBlock()
	{
	}
}
[Token(Token = "0x2000209")]
public class Dodge : MonoBehaviour
{
	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xD19A7C", Offset = "0xD19A7C", VA = "0xD19A7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xD19A80", Offset = "0xD19A80", VA = "0xD19A80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xD19A84", Offset = "0xD19A84", VA = "0xD19A84")]
	public Dodge()
	{
	}
}
[Token(Token = "0x200020A")]
public class NewBehaviourScript : MonoBehaviour
{
	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 collision_position;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PuppetMaster pm;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BehaviourPuppet bp;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator anim;

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x10799EC", Offset = "0x10799EC", VA = "0x10799EC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x10799F0", Offset = "0x10799F0", VA = "0x10799F0")]
	public NewBehaviourScript()
	{
	}
}
[Token(Token = "0x200020B")]
public class test0802 : MonoBehaviour
{
	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform look_ob;

	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animator;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool start;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float look_weight;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float hit_reaction_timer;

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xB36B20", Offset = "0xB36B20", VA = "0xB36B20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xB36B2C", Offset = "0xB36B2C", VA = "0xB36B2C")]
	public void stopact()
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xB36B34", Offset = "0xB36B34", VA = "0xB36B34")]
	private void OnAnimatorIK(int layerIndex)
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xB36BCC", Offset = "0xB36BCC", VA = "0xB36BCC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xB36C1C", Offset = "0xB36C1C", VA = "0xB36C1C")]
	public void setTrue()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xB36C34", Offset = "0xB36C34", VA = "0xB36C34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xB36C38", Offset = "0xB36C38", VA = "0xB36C38")]
	public test0802()
	{
	}
}
[Token(Token = "0x200020C")]
public class Testing : MonoBehaviour
{
	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro m_text;

	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float deltaTime;

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AIController cont;

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xB2EC94", Offset = "0xB2EC94", VA = "0xB2EC94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xB2EC98", Offset = "0xB2EC98", VA = "0xB2EC98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xB2ED44", Offset = "0xB2ED44", VA = "0xB2ED44")]
	public Testing()
	{
	}
}
[Token(Token = "0x200020D")]
public class VibrationManager : MonoBehaviour
{
	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VibrationManager singleton;

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xB32F20", Offset = "0xB32F20", VA = "0xB32F20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xB33028", Offset = "0xB33028", VA = "0xB33028")]
	public void TriggerVibration(AudioClip vibration_audio, OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xB3312C", Offset = "0xB3312C", VA = "0xB3312C")]
	public void TriggerVibration(int iteration, int frequency, int strength, PXR_Input.Controller controller)
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xB33164", Offset = "0xB33164", VA = "0xB33164")]
	public VibrationManager()
	{
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x200020E")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x170000B2")]
		public bool Highlight
		{
			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0xD11474", Offset = "0xD11474", VA = "0xD11474")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0xD1147C", Offset = "0xD1147C", VA = "0xD1147C")]
			set
			{
			}
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xD11488", Offset = "0xD11488", VA = "0xD11488")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xD11650", Offset = "0xD11650", VA = "0xD11650", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xD11678", Offset = "0xD11678", VA = "0xD11678", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xD116A0", Offset = "0xD116A0", VA = "0xD116A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xD11550", Offset = "0xD11550", VA = "0xD11550")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xD11938", Offset = "0xD11938", VA = "0xD11938")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x170000B3")]
		public bool InRange
		{
			[Token(Token = "0x6000B75")]
			[Address(RVA = "0xD17C54", Offset = "0xD17C54", VA = "0xD17C54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B76")]
			[Address(RVA = "0xD17C5C", Offset = "0xD17C5C", VA = "0xD17C5C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B4")]
		public bool Targeted
		{
			[Token(Token = "0x6000B77")]
			[Address(RVA = "0xD17DD8", Offset = "0xD17DD8", VA = "0xD17DD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B78")]
			[Address(RVA = "0xD17DE0", Offset = "0xD17DE0", VA = "0xD17DE0")]
			set
			{
			}
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xD17DEC", Offset = "0xD17DEC", VA = "0xD17DEC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xD17C68", Offset = "0xD17C68", VA = "0xD17C68")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xD17F1C", Offset = "0xD17F1C", VA = "0xD17F1C")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000210")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x884DA4", Offset = "0x884DA4")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x170000B5")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000B7C")]
			[Address(RVA = "0xD17F24", Offset = "0xD17F24", VA = "0xD17F24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B7D")]
			[Address(RVA = "0xD17F2C", Offset = "0xD17F2C", VA = "0xD17F2C")]
			set
			{
			}
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xD17F48", Offset = "0xD17F48", VA = "0xD17F48", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0xD18178", Offset = "0xD18178", VA = "0xD18178", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xD18A38", Offset = "0xD18A38", VA = "0xD18A38", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xD18EB0", Offset = "0xD18EB0", VA = "0xD18EB0", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xD19170", Offset = "0xD19170", VA = "0xD19170")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xD183CC", Offset = "0xD183CC", VA = "0xD183CC")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xD19260", Offset = "0xD19260", VA = "0xD19260")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xD1965C", Offset = "0xD1965C", VA = "0xD1965C", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xD19674", Offset = "0xD19674", VA = "0xD19674", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xD1967C", Offset = "0xD1967C", VA = "0xD1967C")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x13492AC", Offset = "0x13492AC", VA = "0x13492AC")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x1349364", Offset = "0x1349364", VA = "0x1349364")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x134941C", Offset = "0x134941C", VA = "0x134941C")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000213")]
		public enum CrosshairState
		{
			[Token(Token = "0x4001310")]
			Disabled,
			[Token(Token = "0x4001311")]
			Enabled,
			[Token(Token = "0x4001312")]
			Targeted
		}

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x13494DC", Offset = "0x13494DC", VA = "0x13494DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x1349540", Offset = "0x1349540", VA = "0x1349540")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x13495DC", Offset = "0x13495DC", VA = "0x13495DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x1349624", Offset = "0x1349624", VA = "0x1349624")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x10E5C90", Offset = "0x10E5C90", VA = "0x10E5C90")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x10E5D7C", Offset = "0x10E5D7C", VA = "0x10E5D7C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x10E5D88", Offset = "0x10E5D88", VA = "0x10E5D88")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x10E5D94", Offset = "0x10E5D94", VA = "0x10E5D94")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000215")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x10214E0", Offset = "0x10214E0", VA = "0x10214E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x1021534", Offset = "0x1021534", VA = "0x1021534")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x10218A0", Offset = "0x10218A0", VA = "0x10218A0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x10219A4", Offset = "0x10219A4", VA = "0x10219A4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x1021538", Offset = "0x1021538", VA = "0x1021538")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x1021AA8", Offset = "0x1021AA8", VA = "0x1021AA8")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000216")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000217")]
		public enum ContactTest
		{
			[Token(Token = "0x4001325")]
			PerpenTest,
			[Token(Token = "0x4001326")]
			BackwardsPress
		}

		[Token(Token = "0x4001316")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4001317")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887578", Offset = "0x887578")]
		private InteractableState <CurrentButtonState>k__BackingField;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x170000B6")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6000B99")]
			[Address(RVA = "0x13547AC", Offset = "0x13547AC", VA = "0x13547AC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000B7")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0x13547B4", Offset = "0x13547B4", VA = "0x13547B4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000B8")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0x13547C0", Offset = "0x13547C0", VA = "0x13547C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B1D0", Offset = "0x88B1D0")]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0x13547C8", Offset = "0x13547C8", VA = "0x13547C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B1E0", Offset = "0x88B1E0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x13547D0", Offset = "0x13547D0", VA = "0x13547D0", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x13548BC", Offset = "0x13548BC", VA = "0x13548BC")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x1354A28", Offset = "0x1354A28", VA = "0x1354A28", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x1354FE0", Offset = "0x1354FE0", VA = "0x1354FE0")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x135508C", Offset = "0x135508C", VA = "0x135508C")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x1354EF8", Offset = "0x1354EF8", VA = "0x1354EF8")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x1355198", Offset = "0x1355198", VA = "0x1355198")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x135521C", Offset = "0x135521C", VA = "0x135521C")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x13552A8", Offset = "0x13552A8", VA = "0x13552A8")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887598", Offset = "0x887598")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8875A8", Offset = "0x8875A8")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x170000B9")]
		public Collider Collider
		{
			[Token(Token = "0x6000BA6")]
			[Address(RVA = "0x13554DC", Offset = "0x13554DC", VA = "0x13554DC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B1F0", Offset = "0x88B1F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BA7")]
			[Address(RVA = "0x13554E4", Offset = "0x13554E4", VA = "0x13554E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B200", Offset = "0x88B200")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6000BA8")]
			[Address(RVA = "0x13554EC", Offset = "0x13554EC", VA = "0x13554EC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B210", Offset = "0x88B210")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BA9")]
			[Address(RVA = "0x13554F4", Offset = "0x13554F4", VA = "0x13554F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B220", Offset = "0x88B220")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000BAA")]
			[Address(RVA = "0x13554FC", Offset = "0x13554FC", VA = "0x13554FC", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x135554C", Offset = "0x135554C", VA = "0x135554C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x13555D0", Offset = "0x13555D0", VA = "0x13555D0")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public interface ColliderZone
	{
		[Token(Token = "0x170000BC")]
		Collider Collider
		{
			[Token(Token = "0x6000BAD")]
			get;
		}

		[Token(Token = "0x170000BD")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6000BAE")]
			get;
		}

		[Token(Token = "0x170000BE")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000BAF")]
			get;
		}
	}
	[Token(Token = "0x200021A")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xD10E68", Offset = "0xD10E68", VA = "0xD10E68")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x200021B")]
	public enum InteractionType
	{
		[Token(Token = "0x400132F")]
		Enter,
		[Token(Token = "0x4001330")]
		Stay,
		[Token(Token = "0x4001331")]
		Exit
	}
	[Token(Token = "0x200021C")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x200021D")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4001343")]
			Mesh,
			[Token(Token = "0x4001344")]
			Skeleton,
			[Token(Token = "0x4001345")]
			Both
		}

		[Token(Token = "0x200021E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884E04", Offset = "0x884E04")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001346")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001347")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001348")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170000CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BD2")]
				[Address(RVA = "0xB3E0D8", Offset = "0xB3E0D8", VA = "0xB3E0D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BD4")]
				[Address(RVA = "0xB3E120", Offset = "0xB3E120", VA = "0xB3E120", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BCF")]
			[Address(RVA = "0xB3DE78", Offset = "0xB3DE78", VA = "0xB3DE78")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6000BD0")]
			[Address(RVA = "0xB3DEA4", Offset = "0xB3DEA4", VA = "0xB3DEA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BD1")]
			[Address(RVA = "0xB3DEA8", Offset = "0xB3DEA8", VA = "0xB3DEA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0xB3E0E0", Offset = "0xB3E0E0", VA = "0xB3E0E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001332")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8875D8", Offset = "0x8875D8")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x170000BF")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0x1346B90", Offset = "0x1346B90", VA = "0x1346B90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BB2")]
			[Address(RVA = "0x134FBC0", Offset = "0x134FBC0", VA = "0x134FBC0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C0")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0x134FC28", Offset = "0x134FC28", VA = "0x134FC28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BB4")]
			[Address(RVA = "0x134FC60", Offset = "0x134FC60", VA = "0x134FC60")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C1")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0x134FCC8", Offset = "0x134FCC8", VA = "0x134FCC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BB6")]
			[Address(RVA = "0x134FD00", Offset = "0x134FD00", VA = "0x134FD00")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C2")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0x134FD68", Offset = "0x134FD68", VA = "0x134FD68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0x134FDA0", Offset = "0x134FDA0", VA = "0x134FDA0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C3")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0x134FE08", Offset = "0x134FE08", VA = "0x134FE08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0x134FE40", Offset = "0x134FE40", VA = "0x134FE40")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C4")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0x1346B5C", Offset = "0x1346B5C", VA = "0x1346B5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BBC")]
			[Address(RVA = "0x134FEA8", Offset = "0x134FEA8", VA = "0x134FEA8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C5")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6000BBD")]
			[Address(RVA = "0x134FF0C", Offset = "0x134FF0C", VA = "0x134FF0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BBE")]
			[Address(RVA = "0x134FF40", Offset = "0x134FF40", VA = "0x134FF40")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C6")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0x134FFA4", Offset = "0x134FFA4", VA = "0x134FFA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0x134FFD8", Offset = "0x134FFD8", VA = "0x134FFD8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C7")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0x135003C", Offset = "0x135003C", VA = "0x135003C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0x1350070", Offset = "0x1350070", VA = "0x1350070")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C8")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0x13500D4", Offset = "0x13500D4", VA = "0x13500D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BC4")]
			[Address(RVA = "0x1350108", Offset = "0x1350108", VA = "0x1350108")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0x135016C", Offset = "0x135016C", VA = "0x135016C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B230", Offset = "0x88B230")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0x13501B8", Offset = "0x13501B8", VA = "0x13501B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B240", Offset = "0x88B240")]
			private set
			{
			}
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x1350208", Offset = "0x1350208", VA = "0x1350208")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x13505B0", Offset = "0x13505B0", VA = "0x13505B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x1350544", Offset = "0x1350544", VA = "0x1350544")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88B250", Offset = "0x88B250")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x1350638", Offset = "0x1350638", VA = "0x1350638")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x135071C", Offset = "0x135071C", VA = "0x135071C")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x13508FC", Offset = "0x13508FC", VA = "0x13508FC")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x13469D0", Offset = "0x13469D0", VA = "0x13469D0")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x1350B38", Offset = "0x1350B38", VA = "0x1350B38")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x200021F")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000220")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0xB3E808", Offset = "0xB3E808", VA = "0xB3E808")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170000CC")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6000BD5")]
			[Address(RVA = "0xF794A8", Offset = "0xF794A8", VA = "0xF794A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CD")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6000BD6")]
			[Address(RVA = "0xF794B0", Offset = "0xF794B0", VA = "0xF794B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6000BD7")]
			[Address(RVA = "0xF794B8", Offset = "0xF794B8", VA = "0xF794B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CF")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6000BD8")]
			[Address(RVA = "0xF794C0", Offset = "0xF794C0", VA = "0xF794C0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000010")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6000BD9")]
			[Address(RVA = "0xF794C8", Offset = "0xF794C8", VA = "0xF794C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B300", Offset = "0x88B300")]
			add
			{
			}
			[Token(Token = "0x6000BDA")]
			[Address(RVA = "0xF79568", Offset = "0xF79568", VA = "0xF79568")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B310", Offset = "0x88B310")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6000BDC")]
			[Address(RVA = "0xF79678", Offset = "0xF79678", VA = "0xF79678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B320", Offset = "0x88B320")]
			add
			{
			}
			[Token(Token = "0x6000BDD")]
			[Address(RVA = "0xF79718", Offset = "0xF79718", VA = "0xF79718")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B330", Offset = "0x88B330")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0xF79828", Offset = "0xF79828", VA = "0xF79828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B340", Offset = "0x88B340")]
			add
			{
			}
			[Token(Token = "0x6000BE0")]
			[Address(RVA = "0xF798C8", Offset = "0xF798C8", VA = "0xF798C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B350", Offset = "0x88B350")]
			remove
			{
			}
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xF79608", Offset = "0xF79608", VA = "0xF79608", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xF797B8", Offset = "0xF797B8", VA = "0xF797B8", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xF79968", Offset = "0xF79968", VA = "0xF79968", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000BE2")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xF799D8", Offset = "0xF799D8", VA = "0xF799D8", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xF79B04", Offset = "0xF79B04", VA = "0xF79B04", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xF79C30", Offset = "0xF79C30", VA = "0xF79C30")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000221")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4001351")]
		None,
		[Token(Token = "0x4001352")]
		Proximity,
		[Token(Token = "0x4001353")]
		Contact,
		[Token(Token = "0x4001354")]
		Action
	}
	[Token(Token = "0x2000222")]
	public enum InteractableState
	{
		[Token(Token = "0x4001356")]
		Default,
		[Token(Token = "0x4001357")]
		ProximityState,
		[Token(Token = "0x4001358")]
		ContactState,
		[Token(Token = "0x4001359")]
		ActionState
	}
	[Token(Token = "0x2000223")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xF79D70", Offset = "0xF79D70", VA = "0xF79D70")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000224")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170000D0")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6000BE8")]
			[Address(RVA = "0xF79C7C", Offset = "0xF79C7C", VA = "0xF79C7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xF79A38", Offset = "0xF79A38", VA = "0xF79A38")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xF79B64", Offset = "0xF79B64", VA = "0xF79B64")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xF79CE0", Offset = "0xF79CE0", VA = "0xF79CE0")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000226")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884E14", Offset = "0x884E14")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4001365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4001366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4001367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4001368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4001369")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x400136A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170000D1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BF5")]
				[Address(RVA = "0xB3ECF0", Offset = "0xB3ECF0", VA = "0xB3ECF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BF7")]
				[Address(RVA = "0xB3ED38", Offset = "0xB3ED38", VA = "0xB3ED38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0xB3E854", Offset = "0xB3E854", VA = "0xB3E854")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0xB3E880", Offset = "0xB3E880", VA = "0xB3E880", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0xB3E8F0", Offset = "0xB3E8F0", VA = "0xB3E8F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BF4")]
			[Address(RVA = "0xB3E89C", Offset = "0xB3E89C", VA = "0xB3E89C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000BF6")]
			[Address(RVA = "0xB3ECF8", Offset = "0xB3ECF8", VA = "0xB3ECF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xF7AA5C", Offset = "0xF7AA5C", VA = "0xF7AA5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xF7AAD8", Offset = "0xF7AAD8", VA = "0xF7AAD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88B360", Offset = "0x88B360")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xF7AB60", Offset = "0xF7AB60", VA = "0xF7AB60")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xF7AC48", Offset = "0xF7AC48", VA = "0xF7AC48")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170000D3")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6000BF8")]
			[Address(RVA = "0xF7AC50", Offset = "0xF7AC50", VA = "0xF7AC50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xF7ADCC", Offset = "0xF7ADCC", VA = "0xF7ADCC")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xF7AE74", Offset = "0xF7AE74", VA = "0xF7AE74")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xF7AF1C", Offset = "0xF7AF1C", VA = "0xF7AF1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xF7B1E4", Offset = "0xF7B1E4", VA = "0xF7B1E4")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xF7B22C", Offset = "0xF7B22C", VA = "0xF7B22C")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xF7B4C0", Offset = "0xF7B4C0", VA = "0xF7B4C0")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xF7B60C", Offset = "0xF7B60C", VA = "0xF7B60C")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x2000229")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884E24", Offset = "0x884E24")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400137D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400137E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400137F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170000D8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C11")]
				[Address(RVA = "0xB3CED8", Offset = "0xB3CED8", VA = "0xB3CED8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C13")]
				[Address(RVA = "0xB3CF20", Offset = "0xB3CF20", VA = "0xB3CF20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C0E")]
			[Address(RVA = "0xB3CAC4", Offset = "0xB3CAC4", VA = "0xB3CAC4")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0xB3CAF0", Offset = "0xB3CAF0", VA = "0xB3CAF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C10")]
			[Address(RVA = "0xB3CAF4", Offset = "0xB3CAF4", VA = "0xB3CAF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C12")]
			[Address(RVA = "0xB3CEE0", Offset = "0xB3CEE0", VA = "0xB3CEE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001372")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170000D4")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000C00")]
			[Address(RVA = "0x13465AC", Offset = "0x13465AC", VA = "0x13465AC", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170000D5")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000C01")]
			[Address(RVA = "0x13465B4", Offset = "0x13465B4", VA = "0x13465B4", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170000D6")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000C02")]
			[Address(RVA = "0x13465BC", Offset = "0x13465BC", VA = "0x13465BC", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D7")]
		public override bool EnableState
		{
			[Token(Token = "0x6000C03")]
			[Address(RVA = "0x13465C4", Offset = "0x13465C4", VA = "0x13465C4", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C04")]
			[Address(RVA = "0x13465F0", Offset = "0x13465F0", VA = "0x13465F0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x134662C", Offset = "0x134662C", VA = "0x134662C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x13466CC", Offset = "0x13466CC", VA = "0x13466CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88B410", Offset = "0x88B410")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x1346738", Offset = "0x1346738", VA = "0x1346738")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x1346BC8", Offset = "0x1346BC8", VA = "0x1346BC8")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x1346D54", Offset = "0x1346D54", VA = "0x1346D54")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x1346E48", Offset = "0x1346E48", VA = "0x1346E48", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x1347140", Offset = "0x1347140", VA = "0x1347140", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x1347144", Offset = "0x1347144", VA = "0x1347144", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x1347148", Offset = "0x1347148", VA = "0x1347148")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887668", Offset = "0x887668")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887678", Offset = "0x887678")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887688", Offset = "0x887688")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x170000DA")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000C14")]
			[Address(RVA = "0x1347160", Offset = "0x1347160", VA = "0x1347160", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B4C0", Offset = "0x88B4C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C15")]
			[Address(RVA = "0x1347168", Offset = "0x1347168", VA = "0x1347168")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B4D0", Offset = "0x88B4D0")]
			set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public bool EnableState
		{
			[Token(Token = "0x6000C16")]
			[Address(RVA = "0x1347170", Offset = "0x1347170", VA = "0x1347170", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C17")]
			[Address(RVA = "0x134718C", Offset = "0x134718C", VA = "0x134718C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000C18")]
			[Address(RVA = "0x13471AC", Offset = "0x13471AC", VA = "0x13471AC", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B4E0", Offset = "0x88B4E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C19")]
			[Address(RVA = "0x13471B4", Offset = "0x13471B4", VA = "0x13471B4", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B4F0", Offset = "0x88B4F0")]
			set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public float SphereRadius
		{
			[Token(Token = "0x6000C1A")]
			[Address(RVA = "0x13471C0", Offset = "0x13471C0", VA = "0x13471C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B500", Offset = "0x88B500")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0x13471C8", Offset = "0x13471C8", VA = "0x13471C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B510", Offset = "0x88B510")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x13471D0", Offset = "0x13471D0", VA = "0x13471D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x1347218", Offset = "0x1347218", VA = "0x1347218", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x134721C", Offset = "0x134721C", VA = "0x134721C")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x200022B")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4001385")]
		None = 0,
		[Token(Token = "0x4001386")]
		Ray = 1,
		[Token(Token = "0x4001387")]
		Poke = 4,
		[Token(Token = "0x4001388")]
		All = -1
	}
	[Token(Token = "0x200022C")]
	public enum ToolInputState
	{
		[Token(Token = "0x400138A")]
		Inactive,
		[Token(Token = "0x400138B")]
		PrimaryInputDown,
		[Token(Token = "0x400138C")]
		PrimaryInputDownStay,
		[Token(Token = "0x400138D")]
		PrimaryInputUp
	}
	[Token(Token = "0x200022D")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xF79C38", Offset = "0xF79C38", VA = "0xF79C38")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x200022E")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887698", Offset = "0x887698")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8876A8", Offset = "0x8876A8")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8876B8", Offset = "0x8876B8")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170000DE")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6000C20")]
			[Address(RVA = "0xF79E10", Offset = "0xF79E10", VA = "0xF79E10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DF")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6000C21")]
			[Address(RVA = "0xF79E18", Offset = "0xF79E18", VA = "0xF79E18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B520", Offset = "0x88B520")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C22")]
			[Address(RVA = "0xF79E20", Offset = "0xF79E20", VA = "0xF79E20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B530", Offset = "0x88B530")]
			set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000C23")]
			get;
		}

		[Token(Token = "0x170000E1")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6000C24")]
			get;
		}

		[Token(Token = "0x170000E2")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6000C25")]
			get;
		}

		[Token(Token = "0x170000E3")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000C26")]
			[Address(RVA = "0xF79E2C", Offset = "0xF79E2C", VA = "0xF79E2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B540", Offset = "0x88B540")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000C27")]
			[Address(RVA = "0xF79E38", Offset = "0xF79E38", VA = "0xF79E38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B550", Offset = "0x88B550")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6000C28")]
			[Address(RVA = "0xF79E44", Offset = "0xF79E44", VA = "0xF79E44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B560", Offset = "0x88B560")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000C29")]
			[Address(RVA = "0xF79E50", Offset = "0xF79E50", VA = "0xF79E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B570", Offset = "0x88B570")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6000C2E")]
			get;
			[Token(Token = "0x6000C2F")]
			set;
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xF79E5C", Offset = "0xF79E5C", VA = "0xF79E5C")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000C2B")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6000C2C")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6000C2D")]
		public abstract void DeFocus();

		[Token(Token = "0x6000C30")]
		public abstract void Initialize();

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xF79E64", Offset = "0xF79E64", VA = "0xF79E64")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xF79EB0", Offset = "0xF79EB0", VA = "0xF79EB0")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xF79F04", Offset = "0xF79F04", VA = "0xF79F04", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xF7A198", Offset = "0xF7A198", VA = "0xF7A198", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xF7A914", Offset = "0xF7A914", VA = "0xF7A914")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public interface InteractableToolView
	{
		[Token(Token = "0x170000E6")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6000C36")]
			get;
		}

		[Token(Token = "0x170000E7")]
		bool EnableState
		{
			[Token(Token = "0x6000C38")]
			get;
			[Token(Token = "0x6000C39")]
			set;
		}

		[Token(Token = "0x170000E8")]
		bool ToolActivateState
		{
			[Token(Token = "0x6000C3A")]
			get;
			[Token(Token = "0x6000C3B")]
			set;
		}

		[Token(Token = "0x6000C37")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000230")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000231")]
		private enum PinchState
		{
			[Token(Token = "0x400139E")]
			None,
			[Token(Token = "0x400139F")]
			PinchDown,
			[Token(Token = "0x40013A0")]
			PinchStay,
			[Token(Token = "0x40013A1")]
			PinchUp
		}

		[Token(Token = "0x400139A")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x170000E9")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6000C3C")]
			[Address(RVA = "0x10E6750", Offset = "0x10E6750", VA = "0x10E6750")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EA")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6000C3D")]
			[Address(RVA = "0x10E67D8", Offset = "0x10E67D8", VA = "0x10E67D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EB")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0x10E6860", Offset = "0x10E6860", VA = "0x10E6860")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x10E68E8", Offset = "0x10E68E8", VA = "0x10E68E8")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x10E6914", Offset = "0x10E6914", VA = "0x10E6914")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x40013A2")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40013A3")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40013A4")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40013A5")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40013A6")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8876D8", Offset = "0x8876D8")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x170000EC")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000C41")]
			[Address(RVA = "0x205B41C", Offset = "0x205B41C", VA = "0x205B41C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170000ED")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000C42")]
			[Address(RVA = "0x205B424", Offset = "0x205B424", VA = "0x205B424", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170000EE")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000C43")]
			[Address(RVA = "0x205B498", Offset = "0x205B498", VA = "0x205B498", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EF")]
		public override bool EnableState
		{
			[Token(Token = "0x6000C44")]
			[Address(RVA = "0x205B4A0", Offset = "0x205B4A0", VA = "0x205B4A0", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C45")]
			[Address(RVA = "0x205B4E4", Offset = "0x205B4E4", VA = "0x205B4E4", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x205B558", Offset = "0x205B558", VA = "0x205B558", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x205B5B8", Offset = "0x205B5B8", VA = "0x205B5B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x205B65C", Offset = "0x205B65C", VA = "0x205B65C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x205B920", Offset = "0x205B920", VA = "0x205B920")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x205B9A8", Offset = "0x205B9A8", VA = "0x205B9A8", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x205BD50", Offset = "0x205BD50", VA = "0x205BD50")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x205BE60", Offset = "0x205BE60", VA = "0x205BE60")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x205BF84", Offset = "0x205BF84", VA = "0x205BF84")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x205C288", Offset = "0x205C288", VA = "0x205C288")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x205C61C", Offset = "0x205C61C", VA = "0x205C61C", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x205C6EC", Offset = "0x205C6EC", VA = "0x205C6EC", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x205C720", Offset = "0x205C720", VA = "0x205C720")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40013B2")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40013B3")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88774C", Offset = "0x88774C")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170000F0")]
		public bool EnableState
		{
			[Token(Token = "0x6000C52")]
			[Address(RVA = "0x205B4C8", Offset = "0x205B4C8", VA = "0x205B4C8", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C53")]
			[Address(RVA = "0x205B500", Offset = "0x205B500", VA = "0x205B500", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000C54")]
			[Address(RVA = "0x205C7E8", Offset = "0x205C7E8", VA = "0x205C7E8", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C55")]
			[Address(RVA = "0x205B8E4", Offset = "0x205B8E4", VA = "0x205B8E4", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000C57")]
			[Address(RVA = "0x205CA2C", Offset = "0x205CA2C", VA = "0x205CA2C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B580", Offset = "0x88B580")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C58")]
			[Address(RVA = "0x205CA34", Offset = "0x205CA34", VA = "0x205CA34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B590", Offset = "0x88B590")]
			set
			{
			}
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x205C7F0", Offset = "0x205C7F0", VA = "0x205C7F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x205C650", Offset = "0x205C650", VA = "0x205C650", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x205CA3C", Offset = "0x205CA3C", VA = "0x205CA3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x205CCB0", Offset = "0x205CCB0", VA = "0x205CCB0")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x205CDA0", Offset = "0x205CDA0", VA = "0x205CDA0")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x170000F3")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000C5D")]
			[Address(RVA = "0xD1969C", Offset = "0xD1969C", VA = "0xD1969C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C5E")]
			[Address(RVA = "0xD196A4", Offset = "0xD196A4", VA = "0xD196A4")]
			set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6000C5F")]
			[Address(RVA = "0xD1972C", Offset = "0xD1972C", VA = "0xD1972C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C60")]
			[Address(RVA = "0xD19734", Offset = "0xD19734", VA = "0xD19734")]
			set
			{
			}
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xD197A0", Offset = "0xD197A0", VA = "0xD197A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xD19A54", Offset = "0xD19A54", VA = "0xD19A54")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xD19A64", Offset = "0xD19A64", VA = "0xD19A64")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xD19A74", Offset = "0xD19A74", VA = "0xD19A74")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000235")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xD11A54", Offset = "0xD11A54", VA = "0xD11A54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xD11A58", Offset = "0xD11A58", VA = "0xD11A58")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xD11A90", Offset = "0xD11A90", VA = "0xD11A90")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xD11AC8", Offset = "0xD11AC8", VA = "0xD11AC8")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xD11B00", Offset = "0xD11B00", VA = "0xD11B00")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xD11B38", Offset = "0xD11B38", VA = "0xD11B38")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xD11B70", Offset = "0xD11B70", VA = "0xD11B70")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xD11BA8", Offset = "0xD11BA8", VA = "0xD11BA8")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xD11C1C", Offset = "0xD11C1C", VA = "0xD11C1C")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xD11C8C", Offset = "0xD11C8C", VA = "0xD11C8C")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xD11C94", Offset = "0xD11C94", VA = "0xD11C94")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xD11C98", Offset = "0xD11C98", VA = "0xD11C98")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xD11C50", Offset = "0xD11C50", VA = "0xD11C50")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xD11CD8", Offset = "0xD11CD8", VA = "0xD11CD8")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x2000238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884E44", Offset = "0x884E44")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x40013D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x40013D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x40013D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x170000F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C7B")]
				[Address(RVA = "0x1D4F704", Offset = "0x1D4F704", VA = "0x1D4F704", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C7D")]
				[Address(RVA = "0x1D4F74C", Offset = "0x1D4F74C", VA = "0x1D4F74C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C78")]
			[Address(RVA = "0x1D4F528", Offset = "0x1D4F528", VA = "0x1D4F528")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000C79")]
			[Address(RVA = "0x1D4F554", Offset = "0x1D4F554", VA = "0x1D4F554", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C7A")]
			[Address(RVA = "0x1D4F558", Offset = "0x1D4F558", VA = "0x1D4F558", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C7C")]
			[Address(RVA = "0x1D4F70C", Offset = "0x1D4F70C", VA = "0x1D4F70C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013C3")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x40013C4")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x10E3C64", Offset = "0x10E3C64", VA = "0x10E3C64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x10E3D04", Offset = "0x10E3D04", VA = "0x10E3D04")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x10E3F38", Offset = "0x10E3F38", VA = "0x10E3F38")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x10E3ECC", Offset = "0x10E3ECC", VA = "0x10E3ECC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88B5A0", Offset = "0x88B5A0")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x10E3F84", Offset = "0x10E3F84", VA = "0x10E3F84")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x200023A")]
		public enum SelectionState
		{
			[Token(Token = "0x40013DA")]
			Off,
			[Token(Token = "0x40013DB")]
			Selected,
			[Token(Token = "0x40013DC")]
			Highlighted
		}

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x170000F7")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6000C7E")]
			[Address(RVA = "0x11C47BC", Offset = "0x11C47BC", VA = "0x11C47BC")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6000C7F")]
			[Address(RVA = "0x11C47C4", Offset = "0x11C47C4", VA = "0x11C47C4")]
			set
			{
			}
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x11C4948", Offset = "0x11C4948", VA = "0x11C4948")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x11C4B10", Offset = "0x11C4B10", VA = "0x11C4B10")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x11C484C", Offset = "0x11C484C", VA = "0x11C484C")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x11C4BFC", Offset = "0x11C4BFC", VA = "0x11C4BFC")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x200023C")]
		public enum SegmentType
		{
			[Token(Token = "0x40013EB")]
			Straight,
			[Token(Token = "0x40013EC")]
			LeftTurn,
			[Token(Token = "0x40013ED")]
			RightTurn,
			[Token(Token = "0x40013EE")]
			Switch
		}

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x40013E3")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x40013E4")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88782C", Offset = "0x88782C")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x170000F8")]
		public float StartDistance
		{
			[Token(Token = "0x6000C85")]
			[Address(RVA = "0xB2FC20", Offset = "0xB2FC20", VA = "0xB2FC20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B650", Offset = "0x88B650")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C86")]
			[Address(RVA = "0xB2FC28", Offset = "0xB2FC28", VA = "0xB2FC28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B660", Offset = "0x88B660")]
			set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		public float GridSize
		{
			[Token(Token = "0x6000C87")]
			[Address(RVA = "0xB2FC30", Offset = "0xB2FC30", VA = "0xB2FC30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C88")]
			[Address(RVA = "0xB2FC38", Offset = "0xB2FC38", VA = "0xB2FC38")]
			private set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public int SubDivCount
		{
			[Token(Token = "0x6000C89")]
			[Address(RVA = "0xB2FC40", Offset = "0xB2FC40", VA = "0xB2FC40")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C8A")]
			[Address(RVA = "0xB2FC48", Offset = "0xB2FC48", VA = "0xB2FC48")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public SegmentType Type
		{
			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0xB2FC50", Offset = "0xB2FC50", VA = "0xB2FC50")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170000FC")]
		public Pose EndPose
		{
			[Token(Token = "0x6000C8C")]
			[Address(RVA = "0xB2FC58", Offset = "0xB2FC58", VA = "0xB2FC58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		public float Radius
		{
			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0xB2FFB4", Offset = "0xB2FFB4", VA = "0xB2FFB4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000FE")]
		public float SegmentLength
		{
			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0xB2FCC0", Offset = "0xB2FCC0", VA = "0xB2FCC0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xB2FFC4", Offset = "0xB2FFC4", VA = "0xB2FFC4")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xB2FFDC", Offset = "0xB2FFDC", VA = "0xB2FFDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xB2FD00", Offset = "0xB2FD00", VA = "0xB2FD00")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xB2FFE0", Offset = "0xB2FFE0", VA = "0xB2FFE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xB2FFE4", Offset = "0xB2FFE4", VA = "0xB2FFE4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xB3004C", Offset = "0xB3004C", VA = "0xB3004C")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xB30914", Offset = "0xB30914", VA = "0xB30914")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xB30BA0", Offset = "0xB30BA0", VA = "0xB30BA0")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x200023E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884E54", Offset = "0x884E54")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4001403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170000FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CA5")]
				[Address(RVA = "0x1D524CC", Offset = "0x1D524CC", VA = "0x1D524CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000100")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CA7")]
				[Address(RVA = "0x1D52514", Offset = "0x1D52514", VA = "0x1D52514", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CA2")]
			[Address(RVA = "0x1D52338", Offset = "0x1D52338", VA = "0x1D52338")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0x1D52364", Offset = "0x1D52364", VA = "0x1D52364", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0x1D52368", Offset = "0x1D52368", VA = "0x1D52368", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CA6")]
			[Address(RVA = "0x1D524D4", Offset = "0x1D524D4", VA = "0x1D524D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013EF")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x40013F0")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xB30C4C", Offset = "0xB30C4C", VA = "0xB30C4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xB30CF4", Offset = "0xB30CF4", VA = "0xB30CF4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xB30DA4", Offset = "0xB30DA4", VA = "0xB30DA4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xB30F1C", Offset = "0xB30F1C", VA = "0xB30F1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xB310E4", Offset = "0xB310E4", VA = "0xB310E4")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xB311CC", Offset = "0xB311CC", VA = "0xB311CC")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xB313D0", Offset = "0xB313D0", VA = "0xB313D0")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xB312E0", Offset = "0xB312E0", VA = "0xB312E0")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xB312F4", Offset = "0xB312F4", VA = "0xB312F4")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xB31428", Offset = "0xB31428", VA = "0xB31428")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88B670", Offset = "0x88B670")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xB31494", Offset = "0xB31494", VA = "0xB31494")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000101")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6000CA8")]
			[Address(RVA = "0xB31544", Offset = "0xB31544", VA = "0xB31544")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xB31554", Offset = "0xB31554", VA = "0xB31554", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xB3155C", Offset = "0xB3155C", VA = "0xB3155C", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xB318A0", Offset = "0xB318A0", VA = "0xB318A0")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4001408")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4001409")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88792C", Offset = "0x88792C")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000102")]
		public float Distance
		{
			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0xB31998", Offset = "0xB31998", VA = "0xB31998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B720", Offset = "0x88B720")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CAD")]
			[Address(RVA = "0xB319A0", Offset = "0xB319A0", VA = "0xB319A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B730", Offset = "0x88B730")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public float Scale
		{
			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0xB319A8", Offset = "0xB319A8", VA = "0xB319A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CAF")]
			[Address(RVA = "0xB319B0", Offset = "0xB319B0", VA = "0xB319B0")]
			set
			{
			}
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xB31558", Offset = "0xB31558", VA = "0xB31558", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xB319B8", Offset = "0xB319B8", VA = "0xB319B8")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xB315A4", Offset = "0xB315A4", VA = "0xB315A4")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xB317C8", Offset = "0xB317C8", VA = "0xB317C8")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6000CB4")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xB3190C", Offset = "0xB3190C", VA = "0xB3190C")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000242")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884E64", Offset = "0x884E64")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400141C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400141D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400141E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x400141F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4001420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4001421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4001422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4001423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4001424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4001425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4001426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4001427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000104")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CC3")]
				[Address(RVA = "0x1D52774", Offset = "0x1D52774", VA = "0x1D52774", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000105")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CC5")]
				[Address(RVA = "0x1D527BC", Offset = "0x1D527BC", VA = "0x1D527BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CC0")]
			[Address(RVA = "0x1D5251C", Offset = "0x1D5251C", VA = "0x1D5251C")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000CC1")]
			[Address(RVA = "0x1D52548", Offset = "0x1D52548", VA = "0x1D52548", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CC2")]
			[Address(RVA = "0x1D5254C", Offset = "0x1D5254C", VA = "0x1D5254C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CC4")]
			[Address(RVA = "0x1D5277C", Offset = "0x1D5277C", VA = "0x1D5277C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xB31B58", Offset = "0xB31B58", VA = "0xB31B58")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xB31BA4", Offset = "0xB31BA4", VA = "0xB31BA4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xB31CAC", Offset = "0xB31CAC", VA = "0xB31CAC")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xB31E0C", Offset = "0xB31E0C", VA = "0xB31E0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xB31D08", Offset = "0xB31D08", VA = "0xB31D08")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xB31EE8", Offset = "0xB31EE8", VA = "0xB31EE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88B740", Offset = "0x88B740")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xB31F64", Offset = "0xB31F64", VA = "0xB31F64")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xB32010", Offset = "0xB32010", VA = "0xB32010")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xB32070", Offset = "0xB32070", VA = "0xB32070")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000244")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4001446")]
			Start,
			[Token(Token = "0x4001447")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4001448")]
			Stop
		}

		[Token(Token = "0x2000245")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884E74", Offset = "0x884E74")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400144A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400144B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x400144C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x400144D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x400144E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x400144F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4001451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000106")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CD8")]
				[Address(RVA = "0x1D52A1C", Offset = "0x1D52A1C", VA = "0x1D52A1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000107")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CDA")]
				[Address(RVA = "0x1D52A64", Offset = "0x1D52A64", VA = "0x1D52A64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CD5")]
			[Address(RVA = "0x1D527C4", Offset = "0x1D527C4", VA = "0x1D527C4")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6000CD6")]
			[Address(RVA = "0x1D527F0", Offset = "0x1D527F0", VA = "0x1D527F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CD7")]
			[Address(RVA = "0x1D527F4", Offset = "0x1D527F4", VA = "0x1D527F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0x1D52A24", Offset = "0x1D52A24", VA = "0x1D52A24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001428")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4001429")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x400142A")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x400142B")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88798C", Offset = "0x88798C")]
		protected float _initialSpeed;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xB320CC", Offset = "0xB320CC", VA = "0xB320CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xB32220", Offset = "0xB32220", VA = "0xB32220")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xB3222C", Offset = "0xB3222C", VA = "0xB3222C", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xB3237C", Offset = "0xB3237C", VA = "0xB3237C")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xB321A0", Offset = "0xB321A0", VA = "0xB321A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88B7F0", Offset = "0x88B7F0")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xB323C8", Offset = "0xB323C8", VA = "0xB323C8")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xB32318", Offset = "0xB32318", VA = "0xB32318")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xB325E4", Offset = "0xB325E4", VA = "0xB325E4")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xB32720", Offset = "0xB32720", VA = "0xB32720")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xB32650", Offset = "0xB32650", VA = "0xB32650")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xB3278C", Offset = "0xB3278C", VA = "0xB3278C")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xB327AC", Offset = "0xB327AC", VA = "0xB327AC")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xB32838", Offset = "0xB32838", VA = "0xB32838")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xB328F0", Offset = "0xB328F0", VA = "0xB328F0")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xB32900", Offset = "0xB32900", VA = "0xB32900")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000108")]
		public float TrackLength
		{
			[Token(Token = "0x6000CDB")]
			[Address(RVA = "0xB32968", Offset = "0xB32968", VA = "0xB32968")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CDC")]
			[Address(RVA = "0xB32970", Offset = "0xB32970", VA = "0xB32970")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xB32978", Offset = "0xB32978", VA = "0xB32978")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xB31A38", Offset = "0xB31A38", VA = "0xB31A38")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xB3297C", Offset = "0xB3297C", VA = "0xB3297C")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xB32B7C", Offset = "0xB32B7C", VA = "0xB32B7C")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xB32C78", Offset = "0xB32C78", VA = "0xB32C78")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class Pose
	{
		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x20574B0", Offset = "0x20574B0", VA = "0x20574B0")]
		public Pose()
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x20574F4", Offset = "0x20574F4", VA = "0x20574F4")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x2000249")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884E84", Offset = "0x884E84")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001467")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x400146A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x400146B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x1700010A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CF0")]
				[Address(RVA = "0x1D52C14", Offset = "0x1D52C14", VA = "0x1D52C14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CF2")]
				[Address(RVA = "0x1D52C5C", Offset = "0x1D52C5C", VA = "0x1D52C5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CED")]
			[Address(RVA = "0x1D52A6C", Offset = "0x1D52A6C", VA = "0x1D52A6C")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000CEE")]
			[Address(RVA = "0x1D52A98", Offset = "0x1D52A98", VA = "0x1D52A98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0x1D52A9C", Offset = "0x1D52A9C", VA = "0x1D52A9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CF1")]
			[Address(RVA = "0x1D52C1C", Offset = "0x1D52C1C", VA = "0x1D52C1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200024A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884E94", Offset = "0x884E94")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400146C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400146D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400146E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x400146F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4001470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4001471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x1700010C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CF6")]
				[Address(RVA = "0x1D52D60", Offset = "0x1D52D60", VA = "0x1D52D60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CF8")]
				[Address(RVA = "0x1D52DA8", Offset = "0x1D52DA8", VA = "0x1D52DA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0x1D52C64", Offset = "0x1D52C64", VA = "0x1D52C64")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0x1D52C90", Offset = "0x1D52C90", VA = "0x1D52C90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CF5")]
			[Address(RVA = "0x1D52C94", Offset = "0x1D52C94", VA = "0x1D52C94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CF7")]
			[Address(RVA = "0x1D52D68", Offset = "0x1D52D68", VA = "0x1D52D68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400145B")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887B74", Offset = "0x887B74")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000109")]
		public bool IsMoving
		{
			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0xB33760", Offset = "0xB33760", VA = "0xB33760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B8A0", Offset = "0x88B8A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CE5")]
			[Address(RVA = "0xB33768", Offset = "0xB33768", VA = "0xB33768")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B8B0", Offset = "0x88B8B0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xB33774", Offset = "0xB33774", VA = "0xB33774")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xB337B0", Offset = "0xB337B0", VA = "0xB337B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xB33894", Offset = "0xB33894", VA = "0xB33894")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xB338FC", Offset = "0xB338FC", VA = "0xB338FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88B8C0", Offset = "0x88B8C0")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xB33978", Offset = "0xB33978", VA = "0xB33978")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88B920", Offset = "0x88B920")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xB33A08", Offset = "0xB33A08", VA = "0xB33A08")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xB33A74", Offset = "0xB33A74", VA = "0xB33A74")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x200024B")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xB33A7C", Offset = "0xB33A7C", VA = "0xB33A7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xB33AE0", Offset = "0xB33AE0", VA = "0xB33AE0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xB33BC4", Offset = "0xB33BC4", VA = "0xB33BC4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xB33CFC", Offset = "0xB33CFC", VA = "0xB33CFC")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xB33D78", Offset = "0xB33D78", VA = "0xB33D78")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xB33E54", Offset = "0xB33E54", VA = "0xB33E54")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4001478")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4001479")]
		EUDT_OverlayQuad,
		[Token(Token = "0x400147A")]
		EUDT_None,
		[Token(Token = "0x400147B")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x200024D")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x200024E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884EA4", Offset = "0x884EA4")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001495")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x1700010E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D12")]
				[Address(RVA = "0xB40780", Offset = "0xB40780", VA = "0xB40780", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D14")]
				[Address(RVA = "0xB407C8", Offset = "0xB407C8", VA = "0xB407C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0xB4056C", Offset = "0xB4056C", VA = "0xB4056C")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6000D10")]
			[Address(RVA = "0xB40598", Offset = "0xB40598", VA = "0xB40598", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D11")]
			[Address(RVA = "0xB4059C", Offset = "0xB4059C", VA = "0xB4059C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D13")]
			[Address(RVA = "0xB40788", Offset = "0xB40788", VA = "0xB40788", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x400147D")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x400147E")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x400147F")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887BB4", Offset = "0x887BB4")]
		public GameObject mainCamera;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887BEC", Offset = "0x887BEC")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x107B0DC", Offset = "0x107B0DC", VA = "0x107B0DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x107B914", Offset = "0x107B914", VA = "0x107B914")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x107BA5C", Offset = "0x107BA5C", VA = "0x107BA5C")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x107BB8C", Offset = "0x107BB8C", VA = "0x107BB8C")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x107BCBC", Offset = "0x107BCBC", VA = "0x107BCBC")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x107BA30", Offset = "0x107BA30", VA = "0x107BA30")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x107BD9C", Offset = "0x107BD9C", VA = "0x107BD9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88BA20", Offset = "0x88BA20")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x107BE08", Offset = "0x107BE08", VA = "0x107BE08")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x107B52C", Offset = "0x107B52C", VA = "0x107B52C")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x107BF5C", Offset = "0x107BF5C", VA = "0x107BF5C")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x107BE3C", Offset = "0x107BE3C", VA = "0x107BE3C")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x107C274", Offset = "0x107C274", VA = "0x107C274")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x107C364", Offset = "0x107C364", VA = "0x107C364")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x107C3E8", Offset = "0x107C3E8", VA = "0x107C3E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BA80", Offset = "0x88BA80")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x107C440", Offset = "0x107C440", VA = "0x107C440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BA90", Offset = "0x88BA90")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x107C498", Offset = "0x107C498", VA = "0x107C498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BAA0", Offset = "0x88BAA0")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x200024F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x884EB4", Offset = "0x884EB4")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884F14", Offset = "0x884F14")]
		private sealed class <>c
		{
			[Token(Token = "0x40014B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6000D22")]
			[Address(RVA = "0xB3DCA4", Offset = "0xB3DCA4", VA = "0xB3DCA4")]
			public <>c()
			{
			}

			[Token(Token = "0x6000D23")]
			[Address(RVA = "0xB3DCAC", Offset = "0xB3DCAC", VA = "0xB3DCAC")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001497")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4001498")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001499")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x400149A")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x400149B")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x400149C")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x400149D")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x400149E")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x400149F")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40014A0")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40014A1")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x134A4BC", Offset = "0x134A4BC", VA = "0x134A4BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x134A510", Offset = "0x134A510", VA = "0x134A510")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x134A984", Offset = "0x134A984", VA = "0x134A984")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x134AA70", Offset = "0x134AA70", VA = "0x134AA70")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x134ABD4", Offset = "0x134ABD4", VA = "0x134ABD4")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x134AEDC", Offset = "0x134AEDC", VA = "0x134AEDC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x134AFD4", Offset = "0x134AFD4", VA = "0x134AFD4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x134B134", Offset = "0x134B134", VA = "0x134B134")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x134AC6C", Offset = "0x134AC6C", VA = "0x134AC6C")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x134ACC0", Offset = "0x134ACC0", VA = "0x134ACC0")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x134A828", Offset = "0x134A828", VA = "0x134A828")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x134B270", Offset = "0x134B270", VA = "0x134B270")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public enum HandPoseId
	{
		[Token(Token = "0x40014B6")]
		Default,
		[Token(Token = "0x40014B7")]
		Generic,
		[Token(Token = "0x40014B8")]
		PingPongBall,
		[Token(Token = "0x40014B9")]
		Controller
	}
	[Token(Token = "0x2000252")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000110")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000D24")]
			[Address(RVA = "0x134F748", Offset = "0x134F748", VA = "0x134F748")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000111")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000D25")]
			[Address(RVA = "0x134F750", Offset = "0x134F750", VA = "0x134F750")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000112")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000D26")]
			[Address(RVA = "0x134F758", Offset = "0x134F758", VA = "0x134F758")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x134F760", Offset = "0x134F760", VA = "0x134F760")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0xB2F890", Offset = "0xB2F890", VA = "0xB2F890")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xB2FB78", Offset = "0xB2FB78", VA = "0xB2FB78")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0xB2FBD4", Offset = "0xB2FBD4", VA = "0xB2FBD4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xB2FC18", Offset = "0xB2FC18", VA = "0xB2FC18")]
		public TouchController()
		{
		}
	}
	[Token(Token = "0x2000254")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x884F24", Offset = "0x884F24")]
	public class CustomHand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000255")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884F84", Offset = "0x884F84")]
		private sealed class <>c
		{
			[Token(Token = "0x40014DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6000D39")]
			[Address(RVA = "0xB3924C", Offset = "0xB3924C", VA = "0xB3924C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0xB39254", Offset = "0xB39254", VA = "0xB39254")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40014C0")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40014C1")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40014C2")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40014C3")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40014C4")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40014C5")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40014C6")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40014C7")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40014C8")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40014C9")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40014CA")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0xD121CC", Offset = "0xD121CC", VA = "0xD121CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xD12220", Offset = "0xD12220", VA = "0xD12220")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0xD12694", Offset = "0xD12694", VA = "0xD12694")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xD12780", Offset = "0xD12780", VA = "0xD12780")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xD128E4", Offset = "0xD128E4", VA = "0xD128E4")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xD12BEC", Offset = "0xD12BEC", VA = "0xD12BEC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xD12CE4", Offset = "0xD12CE4", VA = "0xD12CE4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xD12E44", Offset = "0xD12E44", VA = "0xD12E44")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xD1297C", Offset = "0xD1297C", VA = "0xD1297C")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xD129D0", Offset = "0xD129D0", VA = "0xD129D0")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xD12538", Offset = "0xD12538", VA = "0xD12538")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xD12F80", Offset = "0xD12F80", VA = "0xD12F80")]
		public CustomHand()
		{
		}
	}
	[Token(Token = "0x2000256")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x884F94", Offset = "0x884F94")]
	public class CHand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000257")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884FF4", Offset = "0x884FF4")]
		private sealed class <>c
		{
			[Token(Token = "0x40014FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6000D48")]
			[Address(RVA = "0xB3833C", Offset = "0xB3833C", VA = "0xB3833C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000D49")]
			[Address(RVA = "0xB38344", Offset = "0xB38344", VA = "0xB38344")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40014DE")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40014DF")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40014E0")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40014E1")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40014E2")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40014E3")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40014E4")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40014E5")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40014E6")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40014E7")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40014E8")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x135D448", Offset = "0x135D448", VA = "0x135D448")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x135D49C", Offset = "0x135D49C", VA = "0x135D49C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x135D910", Offset = "0x135D910", VA = "0x135D910")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x135D9FC", Offset = "0x135D9FC", VA = "0x135D9FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x135DB60", Offset = "0x135DB60", VA = "0x135DB60")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x135DE50", Offset = "0x135DE50", VA = "0x135DE50")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x135DF48", Offset = "0x135DF48", VA = "0x135DF48")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x135E0A8", Offset = "0x135E0A8", VA = "0x135E0A8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x135DBF8", Offset = "0x135DBF8", VA = "0x135DBF8")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x135DC4C", Offset = "0x135DC4C", VA = "0x135DC4C")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x135D7B4", Offset = "0x135D7B4", VA = "0x135D7B4")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x135E1E4", Offset = "0x135E1E4", VA = "0x135E1E4")]
		public CHand()
		{
		}
	}
}
namespace Oculus.Voice.Demo.UIShapesDemo
{
	[Token(Token = "0x2000258")]
	public class InteractionHandler : MonoBehaviour
	{
		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887D04", Offset = "0x887D04")]
		[Multiline]
		[SerializeField]
		private string freshStateText;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887D60", Offset = "0x887D60")]
		[SerializeField]
		private Text textArea;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool showJson;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887DBC", Offset = "0x887DBC")]
		[SerializeField]
		private AppVoiceExperience appVoiceExperience;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string pendingText;

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xF7B6D4", Offset = "0xF7B6D4", VA = "0xF7B6D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xF7B7A0", Offset = "0xF7B7A0", VA = "0xF7B7A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xF7B86C", Offset = "0xF7B86C", VA = "0xF7B86C")]
		private void OnRequestStarted(WitRequest r)
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xF7B914", Offset = "0xF7B914", VA = "0xF7B914")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xF7B958", Offset = "0xF7B958", VA = "0xF7B958")]
		public void OnResponse(WitResponseNode response)
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xF7BA48", Offset = "0xF7BA48", VA = "0xF7BA48")]
		public void OnError(string error, string message)
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xF7BC08", Offset = "0xF7BC08", VA = "0xF7BC08")]
		public void ToggleActivation()
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xF7BC68", Offset = "0xF7BC68", VA = "0xF7BC68")]
		public InteractionHandler()
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xF7BCBC", Offset = "0xF7BCBC", VA = "0xF7BCBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BB00", Offset = "0x88BB00")]
		private void <OnRequestStarted>b__7_0(string response)
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class ColorChanger : MonoBehaviour
	{
		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xD11170", Offset = "0xD11170", VA = "0xD11170")]
		private void SetColor(Transform trans, Color color)
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xD1120C", Offset = "0xD1120C", VA = "0xD1120C")]
		public void UpdateColor(WitResponseNode commandResult)
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xD11430", Offset = "0xD11430", VA = "0xD11430")]
		public void UpdateColor(string[] results)
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0xD112A0", Offset = "0xD112A0", VA = "0xD112A0")]
		public void UpdateColor(string colorName, string shape)
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xD1146C", Offset = "0xD1146C", VA = "0xD1146C")]
		public ColorChanger()
		{
		}
	}
	[Token(Token = "0x200025A")]
	[ExecuteAlways]
	public class Instructions : MonoBehaviour
	{
		[Token(Token = "0x200025B")]
		internal enum Step
		{
			[Token(Token = "0x4001505")]
			SetupWit,
			[Token(Token = "0x4001506")]
			MissingServerToken,
			[Token(Token = "0x4001507")]
			MissingClientToken,
			[Token(Token = "0x4001508")]
			AddConfig,
			[Token(Token = "0x4001509")]
			AddVoiceExperiences,
			[Token(Token = "0x400150A")]
			SetConfig,
			[Token(Token = "0x400150B")]
			Ready
		}

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] steps;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text instructionText;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Step currentStep;

		[Token(Token = "0x17000113")]
		internal Step CurrentStep
		{
			[Token(Token = "0x6000D58")]
			[Address(RVA = "0xF791A0", Offset = "0xF791A0", VA = "0xF791A0")]
			get
			{
				return default(Step);
			}
		}

		[Token(Token = "0x17000114")]
		internal string CurrentStepText
		{
			[Token(Token = "0x6000D59")]
			[Address(RVA = "0xF791A8", Offset = "0xF791A8", VA = "0xF791A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0xF7923C", Offset = "0xF7923C", VA = "0xF7923C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0xF79244", Offset = "0xF79244", VA = "0xF79244")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xF79248", Offset = "0xF79248", VA = "0xF79248")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xF79240", Offset = "0xF79240", VA = "0xF79240")]
		private void UpdateStep()
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xF7924C", Offset = "0xF7924C", VA = "0xF7924C")]
		public Instructions()
		{
		}
	}
}
namespace Oculus.Voice.Demo.BuiltInDemo
{
	[Token(Token = "0x200025C")]
	public class TimerController : MonoBehaviour
	{
		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _time;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool _timerExist;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool _timerRunning;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887E18", Offset = "0x887E18")]
		public Text logText;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887E50", Offset = "0x887E50")]
		public AudioClip buzzSound;

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xB2EF04", Offset = "0xB2EF04", VA = "0xB2EF04")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0xB2EFD4", Offset = "0xB2EFD4", VA = "0xB2EFD4")]
		private void Log(string msg)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xB2EF68", Offset = "0xB2EF68", VA = "0xB2EF68")]
		private void OnElapsedTime()
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xB2F064", Offset = "0xB2F064", VA = "0xB2F064")]
		public void DeleteTimer()
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xB2F0D8", Offset = "0xB2F0D8", VA = "0xB2F0D8")]
		public void CreateTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xB2F464", Offset = "0xB2F464", VA = "0xB2F464")]
		public void GetTimerIntent()
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xB2F514", Offset = "0xB2F514", VA = "0xB2F514")]
		public void PauseTimer()
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xB2F564", Offset = "0xB2F564", VA = "0xB2F564")]
		public void ResumeTimer()
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xB2F5B8", Offset = "0xB2F5B8", VA = "0xB2F5B8")]
		public void SubtractTimeTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xB2F6D0", Offset = "0xB2F6D0", VA = "0xB2F6D0")]
		public void AddTimeToTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xB2F7DC", Offset = "0xB2F7DC", VA = "0xB2F7DC")]
		public float GetRemainingTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xB2F48C", Offset = "0xB2F48C", VA = "0xB2F48C")]
		public string GetFormattedTimeFromSeconds()
		{
			return null;
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xB2F2F0", Offset = "0xB2F2F0", VA = "0xB2F2F0")]
		private bool ParseTime(string[] entityValues, out float time)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xB2F7E4", Offset = "0xB2F7E4", VA = "0xB2F7E4")]
		public TimerController()
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class TimerDisplay : MonoBehaviour
	{
		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimerController timer;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _uiText;

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xB2F7EC", Offset = "0xB2F7EC", VA = "0xB2F7EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xB2F840", Offset = "0xB2F840", VA = "0xB2F840")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xB2F888", Offset = "0xB2F888", VA = "0xB2F888")]
		public TimerDisplay()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class WitActivation : MonoBehaviour
	{
		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppVoiceExperience voiceExperience;

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xB33E64", Offset = "0xB33E64", VA = "0xB33E64")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xB33EF8", Offset = "0xB33EF8", VA = "0xB33EF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xB33F4C", Offset = "0xB33F4C", VA = "0xB33F4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xB33FD0", Offset = "0xB33FD0", VA = "0xB33FD0")]
		public void ActivateWit()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xB33FF4", Offset = "0xB33FF4", VA = "0xB33FF4")]
		public WitActivation()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x200025F")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4001514")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4001515")]
		public const string Tab = "    ";

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x101EC98", Offset = "0x101EC98", VA = "0x101EC98")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x88BB10", Offset = "0x88BB10")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x88BB10", Offset = "0x88BB10")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x101ED28", Offset = "0x101ED28", VA = "0x101ED28")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x88BB70", Offset = "0x88BB70")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x88BB70", Offset = "0x88BB70")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x101EDC8", Offset = "0x101EDC8", VA = "0x101EDC8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x88BBD0", Offset = "0x88BBD0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x88BBD0", Offset = "0x88BBD0")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x101EE58", Offset = "0x101EE58", VA = "0x101EE58")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x88BC30", Offset = "0x88BC30")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x88BC30", Offset = "0x88BC30")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x101EEE8", Offset = "0x101EEE8", VA = "0x101EEE8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x88BC90", Offset = "0x88BC90")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x88BC90", Offset = "0x88BC90")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class CAPI
	{
		[Token(Token = "0x2000261")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000262")]
		public enum Result
		{
			[Token(Token = "0x4001521")]
			Success = 0,
			[Token(Token = "0x4001522")]
			Failure = -1000,
			[Token(Token = "0x4001523")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001524")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001525")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001526")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4001527")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4001528")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4001529")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000263")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x400152A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0xB38180", Offset = "0xB38180", VA = "0xB38180")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4001516")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x400151E")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x135563C", Offset = "0x135563C", VA = "0x135563C")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x13556CC", Offset = "0x13556CC", VA = "0x13556CC")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x13558E4", Offset = "0x13558E4", VA = "0x13558E4")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x13559CC", Offset = "0x13559CC", VA = "0x13559CC")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x1355A3C", Offset = "0x1355A3C", VA = "0x1355A3C")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x1355AB0", Offset = "0x1355AB0", VA = "0x1355AB0")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x1355B30", Offset = "0x1355B30", VA = "0x1355B30")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x1355C74", Offset = "0x1355C74", VA = "0x1355C74")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x1355CF4", Offset = "0x1355CF4", VA = "0x1355CF4")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x1355E38", Offset = "0x1355E38", VA = "0x1355E38")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x1355EB8", Offset = "0x1355EB8", VA = "0x1355EB8")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x1355F38", Offset = "0x1355F38", VA = "0x1355F38")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x1355FB8", Offset = "0x1355FB8", VA = "0x1355FB8")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x1356038", Offset = "0x1356038", VA = "0x1356038")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x13560C8", Offset = "0x13560C8", VA = "0x13560C8")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x1356158", Offset = "0x1356158", VA = "0x1356158")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x13561E8", Offset = "0x13561E8", VA = "0x13561E8")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x1356268", Offset = "0x1356268", VA = "0x1356268")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x13562E8", Offset = "0x13562E8", VA = "0x13562E8")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x1356378", Offset = "0x1356378", VA = "0x1356378")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x1356408", Offset = "0x1356408", VA = "0x1356408")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x1356498", Offset = "0x1356498", VA = "0x1356498")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x1356518", Offset = "0x1356518", VA = "0x1356518")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x13565B8", Offset = "0x13565B8", VA = "0x13565B8")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x1356634", Offset = "0x1356634", VA = "0x1356634")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x13566D4", Offset = "0x13566D4", VA = "0x13566D4")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x1356794", Offset = "0x1356794", VA = "0x1356794")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x1356864", Offset = "0x1356864", VA = "0x1356864")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x13568F4", Offset = "0x13568F4", VA = "0x13568F4")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x1356984", Offset = "0x1356984", VA = "0x1356984")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x1356A14", Offset = "0x1356A14", VA = "0x1356A14")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x1356AA4", Offset = "0x1356AA4", VA = "0x1356AA4")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x1356B34", Offset = "0x1356B34", VA = "0x1356B34")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x1356BB4", Offset = "0x1356BB4", VA = "0x1356BB4")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x1356CD0", Offset = "0x1356CD0", VA = "0x1356CD0")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x1356C40", Offset = "0x1356C40", VA = "0x1356C40")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x1356EE4", Offset = "0x1356EE4", VA = "0x1356EE4")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x1357054", Offset = "0x1357054", VA = "0x1357054")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000DA1")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x13570D4", Offset = "0x13570D4", VA = "0x13570D4")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x135737C", Offset = "0x135737C", VA = "0x135737C")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x13573FC", Offset = "0x13573FC", VA = "0x13573FC")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x135756C", Offset = "0x135756C", VA = "0x135756C")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x13575EC", Offset = "0x13575EC", VA = "0x13575EC")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x135775C", Offset = "0x135775C", VA = "0x135775C")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x13577DC", Offset = "0x13577DC", VA = "0x13577DC")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x135794C", Offset = "0x135794C", VA = "0x135794C")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x13579CC", Offset = "0x13579CC", VA = "0x13579CC")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x1357B3C", Offset = "0x1357B3C", VA = "0x1357B3C")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x1357BBC", Offset = "0x1357BBC", VA = "0x1357BBC")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x1357C3C", Offset = "0x1357C3C", VA = "0x1357C3C")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x1357CD4", Offset = "0x1357CD4", VA = "0x1357CD4")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x1357D54", Offset = "0x1357D54", VA = "0x1357D54")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x1357F2C", Offset = "0x1357F2C", VA = "0x1357F2C")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x1358084", Offset = "0x1358084", VA = "0x1358084")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x1357EAC", Offset = "0x1357EAC", VA = "0x1357EAC")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x1358104", Offset = "0x1358104", VA = "0x1358104")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x1358184", Offset = "0x1358184", VA = "0x1358184")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x1358214", Offset = "0x1358214", VA = "0x1358214")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x1358294", Offset = "0x1358294", VA = "0x1358294")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x1358324", Offset = "0x1358324", VA = "0x1358324")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x13583A4", Offset = "0x13583A4", VA = "0x13583A4")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x1358424", Offset = "0x1358424", VA = "0x1358424")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x13586B0", Offset = "0x13586B0", VA = "0x13586B0")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x1358740", Offset = "0x1358740", VA = "0x1358740")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x1358970", Offset = "0x1358970", VA = "0x1358970")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x1358A08", Offset = "0x1358A08", VA = "0x1358A08")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x1358B58", Offset = "0x1358B58", VA = "0x1358B58")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x1358BD8", Offset = "0x1358BD8", VA = "0x1358BD8")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x1358C58", Offset = "0x1358C58", VA = "0x1358C58")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x1358DAC", Offset = "0x1358DAC", VA = "0x1358DAC")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x1358E2C", Offset = "0x1358E2C", VA = "0x1358E2C")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x1358F80", Offset = "0x1358F80", VA = "0x1358F80")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x1359000", Offset = "0x1359000", VA = "0x1359000")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x1359090", Offset = "0x1359090", VA = "0x1359090")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x1359120", Offset = "0x1359120", VA = "0x1359120")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x13591B0", Offset = "0x13591B0", VA = "0x13591B0")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x1359230", Offset = "0x1359230", VA = "0x1359230")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x13592B8", Offset = "0x13592B8", VA = "0x13592B8")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x1359340", Offset = "0x1359340", VA = "0x1359340")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x13593C0", Offset = "0x13593C0", VA = "0x13593C0")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x1359440", Offset = "0x1359440", VA = "0x1359440")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x13594F4", Offset = "0x13594F4", VA = "0x13594F4")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x1359584", Offset = "0x1359584", VA = "0x1359584")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x1359614", Offset = "0x1359614", VA = "0x1359614")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x1359694", Offset = "0x1359694", VA = "0x1359694")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x1359714", Offset = "0x1359714", VA = "0x1359714")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x1359794", Offset = "0x1359794", VA = "0x1359794")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x135982C", Offset = "0x135982C", VA = "0x135982C")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x13598BC", Offset = "0x13598BC", VA = "0x13598BC")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x135994C", Offset = "0x135994C", VA = "0x135994C")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x13599DC", Offset = "0x13599DC", VA = "0x13599DC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x1359A74", Offset = "0x1359A74", VA = "0x1359A74")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x1359B0C", Offset = "0x1359B0C", VA = "0x1359B0C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x1359B8C", Offset = "0x1359B8C", VA = "0x1359B8C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x1359C0C", Offset = "0x1359C0C", VA = "0x1359C0C")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x1359D60", Offset = "0x1359D60", VA = "0x1359D60")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x1359DE0", Offset = "0x1359DE0", VA = "0x1359DE0")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x1359F34", Offset = "0x1359F34", VA = "0x1359F34")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x1359FB4", Offset = "0x1359FB4", VA = "0x1359FB4")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x135A0F0", Offset = "0x135A0F0", VA = "0x135A0F0")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x135A170", Offset = "0x135A170", VA = "0x135A170")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x135A344", Offset = "0x135A344", VA = "0x135A344")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x135A624", Offset = "0x135A624", VA = "0x135A624")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x135A2C4", Offset = "0x135A2C4", VA = "0x135A2C4")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x135A6B4", Offset = "0x135A6B4", VA = "0x135A6B4")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x135A734", Offset = "0x135A734", VA = "0x135A734")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x135A7C4", Offset = "0x135A7C4", VA = "0x135A7C4")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x135A854", Offset = "0x135A854", VA = "0x135A854")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x135A8E4", Offset = "0x135A8E4", VA = "0x135A8E4")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x135A984", Offset = "0x135A984", VA = "0x135A984")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x135AA24", Offset = "0x135AA24", VA = "0x135AA24")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x135AAC4", Offset = "0x135AAC4", VA = "0x135AAC4")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x135AB44", Offset = "0x135AB44", VA = "0x135AB44")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x135ABC4", Offset = "0x135ABC4", VA = "0x135ABC4")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x135AC44", Offset = "0x135AC44", VA = "0x135AC44")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x135ACC4", Offset = "0x135ACC4", VA = "0x135ACC4")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x135AD44", Offset = "0x135AD44", VA = "0x135AD44")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x135AE6C", Offset = "0x135AE6C", VA = "0x135AE6C")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x135AF04", Offset = "0x135AF04", VA = "0x135AF04")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x135AF84", Offset = "0x135AF84", VA = "0x135AF84")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x135AFE4", Offset = "0x135AFE4", VA = "0x135AFE4")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x135B12C", Offset = "0x135B12C", VA = "0x135B12C")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x135B1BC", Offset = "0x135B1BC", VA = "0x135B1BC")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x135B314", Offset = "0x135B314", VA = "0x135B314")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x135B3A4", Offset = "0x135B3A4", VA = "0x135B3A4")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x135B444", Offset = "0x135B444", VA = "0x135B444")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x135B814", Offset = "0x135B814", VA = "0x135B814")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x135B894", Offset = "0x135B894", VA = "0x135B894")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x135B92C", Offset = "0x135B92C", VA = "0x135B92C")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x135C18C", Offset = "0x135C18C", VA = "0x135C18C")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x135C20C", Offset = "0x135C20C", VA = "0x135C20C")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x13555D8", Offset = "0x13555D8", VA = "0x13555D8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x88BCF0", Offset = "0x88BCF0")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x135C2A4", Offset = "0x135C2A4", VA = "0x135C2A4")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x135C328", Offset = "0x135C328", VA = "0x135C328")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x135C3A8", Offset = "0x135C3A8", VA = "0x135C3A8")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x135C428", Offset = "0x135C428", VA = "0x135C428")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x135C4A8", Offset = "0x135C4A8", VA = "0x135C4A8")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x135CE6C", Offset = "0x135CE6C", VA = "0x135CE6C")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x135CEEC", Offset = "0x135CEEC", VA = "0x135CEEC")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x135D30C", Offset = "0x135D30C", VA = "0x135D30C")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x135D274", Offset = "0x135D274", VA = "0x135D274")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x135D380", Offset = "0x135D380", VA = "0x135D380")]
		public CAPI()
		{
		}
	}
}
namespace Evryway
{
	[Token(Token = "0x2000264")]
	public class Bound2D
	{
		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887E98", Offset = "0x887E98")]
		private Vector2 <centre>k__BackingField;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887EA8", Offset = "0x887EA8")]
		private Vector2 <axis_a>k__BackingField;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887EB8", Offset = "0x887EB8")]
		private Vector2 <axis_b>k__BackingField;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887EC8", Offset = "0x887EC8")]
		private float <length_a>k__BackingField;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887ED8", Offset = "0x887ED8")]
		private float <length_b>k__BackingField;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887EE8", Offset = "0x887EE8")]
		private Vector2 <size>k__BackingField;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887EF8", Offset = "0x887EF8")]
		private Vector2[] <corners>k__BackingField;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887F08", Offset = "0x887F08")]
		private float <area>k__BackingField;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887F18", Offset = "0x887F18")]
		private float <angle>k__BackingField;

		[Token(Token = "0x17000115")]
		public Vector2 centre
		{
			[Token(Token = "0x6000E11")]
			[Address(RVA = "0x1021B60", Offset = "0x1021B60", VA = "0x1021B60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BD50", Offset = "0x88BD50")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000E12")]
			[Address(RVA = "0x1021B68", Offset = "0x1021B68", VA = "0x1021B68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BD60", Offset = "0x88BD60")]
			private set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public Vector2 axis_a
		{
			[Token(Token = "0x6000E13")]
			[Address(RVA = "0x1021B70", Offset = "0x1021B70", VA = "0x1021B70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BD70", Offset = "0x88BD70")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000E14")]
			[Address(RVA = "0x1021B78", Offset = "0x1021B78", VA = "0x1021B78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BD80", Offset = "0x88BD80")]
			private set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public Vector2 axis_b
		{
			[Token(Token = "0x6000E15")]
			[Address(RVA = "0x1021B80", Offset = "0x1021B80", VA = "0x1021B80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BD90", Offset = "0x88BD90")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000E16")]
			[Address(RVA = "0x1021B88", Offset = "0x1021B88", VA = "0x1021B88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BDA0", Offset = "0x88BDA0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public float length_a
		{
			[Token(Token = "0x6000E17")]
			[Address(RVA = "0x1021B90", Offset = "0x1021B90", VA = "0x1021B90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BDB0", Offset = "0x88BDB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E18")]
			[Address(RVA = "0x1021B98", Offset = "0x1021B98", VA = "0x1021B98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BDC0", Offset = "0x88BDC0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000119")]
		public float length_b
		{
			[Token(Token = "0x6000E19")]
			[Address(RVA = "0x1021BA0", Offset = "0x1021BA0", VA = "0x1021BA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BDD0", Offset = "0x88BDD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0x1021BA8", Offset = "0x1021BA8", VA = "0x1021BA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BDE0", Offset = "0x88BDE0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public Vector2 size
		{
			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0x1021BB0", Offset = "0x1021BB0", VA = "0x1021BB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BDF0", Offset = "0x88BDF0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0x1021BB8", Offset = "0x1021BB8", VA = "0x1021BB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BE00", Offset = "0x88BE00")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public Vector2 extents
		{
			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0x1021BC0", Offset = "0x1021BC0", VA = "0x1021BC0")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700011C")]
		public Vector2[] corners
		{
			[Token(Token = "0x6000E1E")]
			[Address(RVA = "0x1021BD4", Offset = "0x1021BD4", VA = "0x1021BD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BE10", Offset = "0x88BE10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0x1021BDC", Offset = "0x1021BDC", VA = "0x1021BDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BE20", Offset = "0x88BE20")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public float area
		{
			[Token(Token = "0x6000E20")]
			[Address(RVA = "0x1021BE4", Offset = "0x1021BE4", VA = "0x1021BE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BE30", Offset = "0x88BE30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E21")]
			[Address(RVA = "0x1021BEC", Offset = "0x1021BEC", VA = "0x1021BEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BE40", Offset = "0x88BE40")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public bool major_axis_is_a
		{
			[Token(Token = "0x6000E22")]
			[Address(RVA = "0x1021BF4", Offset = "0x1021BF4", VA = "0x1021BF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011F")]
		public float angle
		{
			[Token(Token = "0x6000E23")]
			[Address(RVA = "0x1021C04", Offset = "0x1021C04", VA = "0x1021C04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BE50", Offset = "0x88BE50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E24")]
			[Address(RVA = "0x1021C0C", Offset = "0x1021C0C", VA = "0x1021C0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BE60", Offset = "0x88BE60")]
			private set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public Vector2 bl
		{
			[Token(Token = "0x6000E25")]
			[Address(RVA = "0x1021C14", Offset = "0x1021C14", VA = "0x1021C14")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000121")]
		public Vector2 br
		{
			[Token(Token = "0x6000E26")]
			[Address(RVA = "0x1021C48", Offset = "0x1021C48", VA = "0x1021C48")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000122")]
		public Vector2 tr
		{
			[Token(Token = "0x6000E27")]
			[Address(RVA = "0x1021C80", Offset = "0x1021C80", VA = "0x1021C80")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000123")]
		public Vector2 tl
		{
			[Token(Token = "0x6000E28")]
			[Address(RVA = "0x1021CB8", Offset = "0x1021CB8", VA = "0x1021CB8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000124")]
		public string info
		{
			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0x1021F30", Offset = "0x1021F30", VA = "0x1021F30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x1021CF0", Offset = "0x1021CF0", VA = "0x1021CF0")]
		public Bound2D(Vector2 centre, Vector2 axis, Vector2 size)
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x1021EB4", Offset = "0x1021EB4", VA = "0x1021EB4")]
		public void AlignMajor()
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x1021D64", Offset = "0x1021D64", VA = "0x1021D64")]
		private void Cache()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public static class Vector2Extensions
	{
		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xB32C94", Offset = "0xB32C94", VA = "0xB32C94")]
		public static Vector2 Rotate(this Vector2 v, float angle_in_degrees)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xB32CF4", Offset = "0xB32CF4", VA = "0xB32CF4")]
		public static void Rotate(this Vector2[] array, float angle_in_degrees)
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0xB32DA0", Offset = "0xB32DA0", VA = "0xB32DA0")]
		public static string F(this Vector2 source, int p)
		{
			return null;
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xB32E38", Offset = "0xB32E38", VA = "0xB32E38")]
		public static string F3(this Vector2 source)
		{
			return null;
		}
	}
	[Token(Token = "0x2000266")]
	public static class LargestInteriorRectangle
	{
		[Token(Token = "0x2000267")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885024", Offset = "0x885024")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001537")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2 p0;

			[Token(Token = "0x6000E42")]
			[Address(RVA = "0xB3ED40", Offset = "0xB3ED40", VA = "0xB3ED40")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6000E43")]
			[Address(RVA = "0xB3ED48", Offset = "0xB3ED48", VA = "0xB3ED48")]
			internal int <CalculateConcavePolygon>b__0(Vector2 p1, Vector2 p2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<int> clir_hvec;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<int> clir_vvec;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<int2> clir_spans;

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0xF7CDB4", Offset = "0xF7CDB4", VA = "0xF7CDB4")]
		public static Vector2[] Vector3XZToVector2(IEnumerable<Vector3> vec3s_xz)
		{
			return null;
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xF7D0D8", Offset = "0xF7D0D8", VA = "0xF7D0D8")]
		public static Vector3[] Vector2ToVector3XZ(IEnumerable<Vector2> vec2s, float y = 0f)
		{
			return null;
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xF7D410", Offset = "0xF7D410", VA = "0xF7D410")]
		public static float2x2 CovarianceMatrix(Vector2[] vec2s)
		{
			return default(float2x2);
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xF7D4C4", Offset = "0xF7D4C4", VA = "0xF7D4C4")]
		public static bool SolveQuadratic(float a, float b, float c, out float x1, out float x2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0xF7D560", Offset = "0xF7D560", VA = "0xF7D560")]
		public static bool CalculateEigenValues(float2x2 mat, out float v1, out float v2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xF7D658", Offset = "0xF7D658", VA = "0xF7D658")]
		public static Vector2 CalculateEigenVector(float2x2 A, float eigenvalue)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xF7D738", Offset = "0xF7D738", VA = "0xF7D738")]
		public static bool CalculatePrimaryAxis(Vector2[] vs, out Vector2 axis, out float eigenvalue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xF7D858", Offset = "0xF7D858", VA = "0xF7D858")]
		public static float CalculateConvexPolygonArea(Vector2[] vs)
		{
			return default(float);
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xF7D8F4", Offset = "0xF7D8F4", VA = "0xF7D8F4")]
		public static Vector2[] CalculateConcavePolygon(Vector2[] vs)
		{
			return null;
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xF7DB44", Offset = "0xF7DB44", VA = "0xF7DB44")]
		public static bool CalculateConvexHull(Vector2[] vs, out Vector2[] hull_vs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xF7DF24", Offset = "0xF7DF24", VA = "0xF7DF24")]
		public static bool CalculateSmallestEnclosingRectangle(Vector2[] vs, out Bound2D bound)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xF7E8C8", Offset = "0xF7E8C8", VA = "0xF7E8C8")]
		public static bool ConvertFromSERToCAABB(Vector2[] vs, Bound2D ser, out Vector2[] vs_orient, out Bound2D caabb)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xF7EA84", Offset = "0xF7EA84", VA = "0xF7EA84")]
		public static bool CalculateInteriorCells(Vector2[] vs, out float[] xs, out float[] ys, out int[,] cells)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xF7F608", Offset = "0xF7F608", VA = "0xF7F608")]
		public static bool CalculateLargestInteriorRectangleUsingSpans(float[] xs, float[] ys, int[,] cells, out Bound2D best)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xF800DC", Offset = "0xF800DC", VA = "0xF800DC")]
		public static bool CalculateLargestInteriorRectangle(float[] xs, float[] ys, int[,] cells, out Bound2D best)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0xF809F8", Offset = "0xF809F8", VA = "0xF809F8")]
		public static bool CalculateLargestInteriorRectangleWithAngleSweep(Vector2[] vs_src, float angle_step, out Bound2D best, out float best_angle)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000268")]
	public static class LargestInteriorRectangleTests
	{
		[Token(Token = "0x6000E44")]
		[Address(RVA = "0xF828A4", Offset = "0xF828A4", VA = "0xF828A4")]
		public static void TestLargestInteriorRectangle()
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0xF82C4C", Offset = "0xF82C4C", VA = "0xF82C4C")]
		public static void TestCovarianceMatrix()
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0xF82F60", Offset = "0xF82F60", VA = "0xF82F60")]
		public static void TestCalculateEigenValues()
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0xF82F74", Offset = "0xF82F74", VA = "0xF82F74")]
		public static void TestCalculateEigenValues(float2x2 A)
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0xF830FC", Offset = "0xF830FC", VA = "0xF830FC")]
		public static void TestCalculateEigenVectors()
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0xF83110", Offset = "0xF83110", VA = "0xF83110")]
		public static void TestCalculateEigenVectors(float2x2 A)
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0xF83344", Offset = "0xF83344", VA = "0xF83344")]
		public static void TestPrimaryAxis()
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0xF83400", Offset = "0xF83400", VA = "0xF83400")]
		public static Vector2 TestPrimaryAxis(Vector2[] vs)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0xF83480", Offset = "0xF83480", VA = "0xF83480")]
		public static bool TestConvexHull()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xF83AF8", Offset = "0xF83AF8", VA = "0xF83AF8")]
		public static bool TestSmallestEnclosingRectangle(Vector2[] vs, out Bound2D bound)
		{
			return default(bool);
		}
	}
}
namespace AnimationInstancing
{
	[Token(Token = "0x2000269")]
	public class TestInstancing : MonoBehaviour
	{
		[Token(Token = "0x200026A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885034", Offset = "0x885034")]
		private sealed class <RandomPlayAnimation>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001541")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001542")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001543")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TestInstancing <>4__this;

			[Token(Token = "0x4001544")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnimationInstancing script;

			[Token(Token = "0x4001545")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnimationInstancing attachment;

			[Token(Token = "0x17000125")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E5C")]
				[Address(RVA = "0x1D521F8", Offset = "0x1D521F8", VA = "0x1D521F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000126")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E5E")]
				[Address(RVA = "0x1D52240", Offset = "0x1D52240", VA = "0x1D52240", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E59")]
			[Address(RVA = "0x1D52048", Offset = "0x1D52048", VA = "0x1D52048")]
			[DebuggerHidden]
			public <RandomPlayAnimation>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000E5A")]
			[Address(RVA = "0x1D52074", Offset = "0x1D52074", VA = "0x1D52074", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E5B")]
			[Address(RVA = "0x1D52078", Offset = "0x1D52078", VA = "0x1D52078", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0x1D52200", Offset = "0x1D52200", VA = "0x1D52200", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200026B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885044", Offset = "0x885044")]
		private sealed class <TestDetach>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001546")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001547")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001548")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TestInstancing <>4__this;

			[Token(Token = "0x4001549")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnimationInstancing script;

			[Token(Token = "0x400154A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnimationInstancing attachment;

			[Token(Token = "0x17000127")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E62")]
				[Address(RVA = "0x1D522E8", Offset = "0x1D522E8", VA = "0x1D522E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000128")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E64")]
				[Address(RVA = "0x1D52330", Offset = "0x1D52330", VA = "0x1D52330", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0x1D52248", Offset = "0x1D52248", VA = "0x1D52248")]
			[DebuggerHidden]
			public <TestDetach>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000E60")]
			[Address(RVA = "0x1D52274", Offset = "0x1D52274", VA = "0x1D52274", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E61")]
			[Address(RVA = "0x1D52278", Offset = "0x1D52278", VA = "0x1D52278", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E63")]
			[Address(RVA = "0x1D522F0", Offset = "0x1D522F0", VA = "0x1D522F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int InstancingCount;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int OriginalCount;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject m_commonObj;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] m_instancingList;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject m_testAttachment;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ArrayList m_objs;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_useInstancing;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int test;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WaitForSeconds wait2Play;

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xB2E09C", Offset = "0xB2E09C", VA = "0xB2E09C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xB2E0A0", Offset = "0xB2E0A0", VA = "0xB2E0A0")]
		private void LoadAB()
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xB2E128", Offset = "0xB2E128", VA = "0xB2E128")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xB2E44C", Offset = "0xB2E44C", VA = "0xB2E44C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xB2E450", Offset = "0xB2E450", VA = "0xB2E450")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xB2E754", Offset = "0xB2E754", VA = "0xB2E754")]
		private void Clear()
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xB2EA0C", Offset = "0xB2EA0C", VA = "0xB2EA0C")]
		private void CreateObjNoInstancing()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xB2E188", Offset = "0xB2E188", VA = "0xB2E188")]
		private void CreateObjInstancing()
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xB2EB74", Offset = "0xB2EB74", VA = "0xB2EB74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88BEB0", Offset = "0x88BEB0")]
		private IEnumerator RandomPlayAnimation(AnimationInstancing script, [Optional] AnimationInstancing attachment)
		{
			return null;
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xB2EBF4", Offset = "0xB2EBF4", VA = "0xB2EBF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88BF10", Offset = "0x88BF10")]
		private IEnumerator TestDetach(AnimationInstancing script, AnimationInstancing attachment)
		{
			return null;
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0xB2EC74", Offset = "0xB2EC74", VA = "0xB2EC74")]
		public TestInstancing()
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class AnimationEvent
	{
		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string function;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int intParameter;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float floatParameter;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string stringParameter;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string objectParameter;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float time;

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x1015458", Offset = "0x1015458", VA = "0x1015458")]
		public AnimationEvent()
		{
		}
	}
	[Token(Token = "0x200026D")]
	public class AnimationInfo
	{
		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string animationName;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int animationNameHash;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int totalFrame;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int fps;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int animationIndex;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int textureIndex;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool rootMotion;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WrapMode wrapMode;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3[] velocity;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3[] angularVelocity;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<AnimationEvent> eventList;

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x1015460", Offset = "0x1015460", VA = "0x1015460")]
		public AnimationInfo()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public class ExtraBoneInfo
	{
		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] extraBone;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matrix4x4[] extraBindPose;

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x134402C", Offset = "0x134402C", VA = "0x134402C")]
		public ExtraBoneInfo()
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class ComparerHash : IComparer<AnimationInfo>
	{
		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xD11A20", Offset = "0xD11A20", VA = "0xD11A20", Slot = "4")]
		public int Compare(AnimationInfo x, AnimationInfo y)
		{
			return default(int);
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xD11A4C", Offset = "0xD11A4C", VA = "0xD11A4C")]
		public ComparerHash()
		{
		}
	}
	[Token(Token = "0x2000270")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x885054", Offset = "0x885054")]
	public class AnimationInstancing : MonoBehaviour
	{
		[Token(Token = "0x2000271")]
		public enum SpectatorAnimationType
		{
			[Token(Token = "0x4001588")]
			SITTING,
			[Token(Token = "0x4001589")]
			CLAPPING,
			[Token(Token = "0x400158A")]
			SITTING_FIST_PUMP,
			[Token(Token = "0x400158B")]
			STANDING_FIST_PUMP
		}

		[Token(Token = "0x2000272")]
		public class LodInfo
		{
			[Token(Token = "0x400158C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int lodLevel;

			[Token(Token = "0x400158D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SkinnedMeshRenderer[] skinnedMeshRenderer;

			[Token(Token = "0x400158E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshRenderer[] meshRenderer;

			[Token(Token = "0x400158F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MeshFilter[] meshFilter;

			[Token(Token = "0x4001590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnimationInstancingMgr.VertexCache[] vertexCacheList;

			[Token(Token = "0x4001591")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AnimationInstancingMgr.MaterialBlock[] materialBlockList;

			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0xB36FE0", Offset = "0xB36FE0", VA = "0xB36FE0")]
			public LodInfo()
			{
			}
		}

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int sitting_nr;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int clapping_nr;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int sitting_fist_pump_nr;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int standing_fist_pump_nr;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator animator;

		[NonSerialized]
		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform worldTransform;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject prototype;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BoundingSphere boundingSpere;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887F28", Offset = "0x887F28")]
		private bool <visible>k__BackingField;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887F38", Offset = "0x887F38")]
		private AnimationInstancing <parentInstance>k__BackingField;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float playSpeed;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public ShadowCastingMode shadowCastingMode;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool receiveShadow;

		[NonSerialized]
		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int layer;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float speedParameter;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float cacheParameter;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private WrapMode wrapMode;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool applyRootMotion;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x887F48", Offset = "0x887F48")]
		public int bonePerVertex;

		[NonSerialized]
		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float curFrame;

		[NonSerialized]
		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float preAniFrame;

		[NonSerialized]
		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int aniIndex;

		[NonSerialized]
		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int preAniIndex;

		[NonSerialized]
		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int aniTextureIndex;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int preAniTextureIndex;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float transitionDuration;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool isInTransition;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float transitionTimer;

		[NonSerialized]
		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float transitionProgress;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int eventIndex;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<AnimationInfo> aniInfo;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ComparerHash comparer;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private AnimationInfo searchInfo;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private AnimationEvent aniEvent;

		[NonSerialized]
		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public LodInfo[] lodInfo;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float lodCalculateFrequency;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float lodFrequencyCount;

		[NonSerialized]
		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int lodLevel;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform[] allTransforms;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool isMeshRender;

		[NonSerialized]
		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<AnimationInstancing> listAttachment;

		[Token(Token = "0x17000129")]
		public bool visible
		{
			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0x1015468", Offset = "0x1015468", VA = "0x1015468")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C010", Offset = "0x88C010")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0x1015470", Offset = "0x1015470", VA = "0x1015470")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C020", Offset = "0x88C020")]
			set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public AnimationInstancing parentInstance
		{
			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0x101547C", Offset = "0x101547C", VA = "0x101547C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C030", Offset = "0x88C030")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0x1015484", Offset = "0x1015484", VA = "0x1015484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C040", Offset = "0x88C040")]
			set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public WrapMode Mode
		{
			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0x101548C", Offset = "0x101548C", VA = "0x101548C")]
			get
			{
				return default(WrapMode);
			}
			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0x1015494", Offset = "0x1015494", VA = "0x1015494")]
			set
			{
			}
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x101549C", Offset = "0x101549C", VA = "0x101549C")]
		public bool IsLoop()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x10154AC", Offset = "0x10154AC", VA = "0x10154AC")]
		public bool IsPause()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x10154BC", Offset = "0x10154BC", VA = "0x10154BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x10161EC", Offset = "0x10161EC", VA = "0x10161EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x1016450", Offset = "0x1016450", VA = "0x1016450")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x1016510", Offset = "0x1016510", VA = "0x1016510")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x10165C8", Offset = "0x10165C8", VA = "0x10165C8")]
		public bool InitializeAnimation()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x10171DC", Offset = "0x10171DC", VA = "0x10171DC")]
		public void Prepare(List<AnimationInfo> infoList, ExtraBoneInfo extraBoneInfo)
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x1015D44", Offset = "0x1015D44", VA = "0x1015D44")]
		private void CalcBoundingSphere()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x10177E0", Offset = "0x10177E0", VA = "0x10177E0")]
		public void PlayAnimation(string name)
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x10178B8", Offset = "0x10178B8", VA = "0x10178B8")]
		public void PlayAnimation(SpectatorAnimationType animation_type)
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x1017900", Offset = "0x1017900", VA = "0x1017900")]
		public void CrossFade(SpectatorAnimationType animation_type, float duration)
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x1017624", Offset = "0x1017624", VA = "0x1017624")]
		public void PlayAnimation(int animationIndex)
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x1017B2C", Offset = "0x1017B2C", VA = "0x1017B2C")]
		public void CrossFade(string animationName, float duration)
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x101799C", Offset = "0x101799C", VA = "0x101799C")]
		public void CrossFade(int animationIndex, float duration)
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x1017BB0", Offset = "0x1017BB0", VA = "0x1017BB0")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x1017BBC", Offset = "0x1017BBC", VA = "0x1017BBC")]
		public void Resume()
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x1017BC8", Offset = "0x1017BC8", VA = "0x1017BC8")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x1017BE0", Offset = "0x1017BE0", VA = "0x1017BE0")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x1017C00", Offset = "0x1017C00", VA = "0x1017C00")]
		public bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x1017C10", Offset = "0x1017C10", VA = "0x1017C10")]
		public AnimationInfo GetCurrentAnimationInfo()
		{
			return null;
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x1017C98", Offset = "0x1017C98", VA = "0x1017C98")]
		public AnimationInfo GetPreAnimationInfo()
		{
			return null;
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x1017D20", Offset = "0x1017D20", VA = "0x1017D20")]
		public void UpdateAnimation()
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x10181B0", Offset = "0x10181B0", VA = "0x10181B0")]
		public void UpdateLod(Vector3 cameraPosition)
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x101803C", Offset = "0x101803C", VA = "0x101803C")]
		private void UpdateAnimationEvent()
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x101782C", Offset = "0x101782C", VA = "0x101782C")]
		private int FindAnimationInfo(int hash)
		{
			return default(int);
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x10182B4", Offset = "0x10182B4", VA = "0x10182B4")]
		public void Attach(string boneName, AnimationInstancing attachment)
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x10163D4", Offset = "0x10163D4", VA = "0x10163D4")]
		public void Deattach(AnimationInstancing attachment)
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x1018DE8", Offset = "0x1018DE8", VA = "0x1018DE8")]
		public int GetAnimationCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x10179F0", Offset = "0x10179F0", VA = "0x10179F0")]
		private void RefreshAttachmentAnimation(int index)
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x1018E38", Offset = "0x1018E38", VA = "0x1018E38")]
		public AnimationInstancing()
		{
		}
	}
	[Token(Token = "0x2000273")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x88508C", Offset = "0x88508C")]
	public class AnimationInstancingMgr : Singleton<AnimationInstancingMgr>
	{
		[Token(Token = "0x2000274")]
		public class InstanceData
		{
			[Token(Token = "0x400159D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Matrix4x4[]>[] worldMatrix;

			[Token(Token = "0x400159E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<float[]>[] frameIndex;

			[Token(Token = "0x400159F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<float[]>[] preFrameIndex;

			[Token(Token = "0x40015A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<float[]>[] transitionProgress;

			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0xB37030", Offset = "0xB37030", VA = "0xB37030")]
			public InstanceData()
			{
			}
		}

		[Token(Token = "0x2000275")]
		public class InstancingPackage
		{
			[Token(Token = "0x40015A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material[] material;

			[Token(Token = "0x40015A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int animationTextureIndex;

			[Token(Token = "0x40015A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int subMeshCount;

			[Token(Token = "0x40015A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int instancingCount;

			[Token(Token = "0x40015A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int size;

			[Token(Token = "0x40015A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MaterialPropertyBlock propertyBlock;

			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0xB37038", Offset = "0xB37038", VA = "0xB37038")]
			public InstancingPackage()
			{
			}
		}

		[Token(Token = "0x2000276")]
		public class MaterialBlock
		{
			[Token(Token = "0x40015A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InstanceData instanceData;

			[Token(Token = "0x40015A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] runtimePackageIndex;

			[Token(Token = "0x40015A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<InstancingPackage>[] packageList;

			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0xB37048", Offset = "0xB37048", VA = "0xB37048")]
			public MaterialBlock()
			{
			}
		}

		[Token(Token = "0x2000277")]
		public class VertexCache
		{
			[Token(Token = "0x40015AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int nameCode;

			[Token(Token = "0x40015AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Mesh mesh;

			[Token(Token = "0x40015AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<int, MaterialBlock> instanceBlockList;

			[Token(Token = "0x40015AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector4[] weight;

			[Token(Token = "0x40015AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector4[] boneIndex;

			[Token(Token = "0x40015AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Material[] materials;

			[Token(Token = "0x40015B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Matrix4x4[] bindPose;

			[Token(Token = "0x40015B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform[] bonePose;

			[Token(Token = "0x40015B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int boneTextureIndex;

			[Token(Token = "0x40015B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public ShadowCastingMode shadowcastingMode;

			[Token(Token = "0x40015B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool receiveShadow;

			[Token(Token = "0x40015B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public int layer;

			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0xB37050", Offset = "0xB37050", VA = "0xB37050")]
			public VertexCache()
			{
			}
		}

		[Token(Token = "0x2000278")]
		public class AnimationTexture
		{
			[Token(Token = "0x40015B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887F70", Offset = "0x887F70")]
			private string <name>k__BackingField;

			[Token(Token = "0x40015B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887F80", Offset = "0x887F80")]
			private Texture2D[] <boneTexture>k__BackingField;

			[Token(Token = "0x40015B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887F90", Offset = "0x887F90")]
			private int <blockWidth>k__BackingField;

			[Token(Token = "0x40015B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887FA0", Offset = "0x887FA0")]
			private int <blockHeight>k__BackingField;

			[Token(Token = "0x1700012E")]
			public string name
			{
				[Token(Token = "0x6000EBC")]
				[Address(RVA = "0xB36FE8", Offset = "0xB36FE8", VA = "0xB36FE8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C050", Offset = "0x88C050")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000EBD")]
				[Address(RVA = "0xB36FF0", Offset = "0xB36FF0", VA = "0xB36FF0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C060", Offset = "0x88C060")]
				set
				{
				}
			}

			[Token(Token = "0x1700012F")]
			public Texture2D[] boneTexture
			{
				[Token(Token = "0x6000EBE")]
				[Address(RVA = "0xB36FF8", Offset = "0xB36FF8", VA = "0xB36FF8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C070", Offset = "0x88C070")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000EBF")]
				[Address(RVA = "0xB37000", Offset = "0xB37000", VA = "0xB37000")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C080", Offset = "0x88C080")]
				set
				{
				}
			}

			[Token(Token = "0x17000130")]
			public int blockWidth
			{
				[Token(Token = "0x6000EC0")]
				[Address(RVA = "0xB37008", Offset = "0xB37008", VA = "0xB37008")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C090", Offset = "0x88C090")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000EC1")]
				[Address(RVA = "0xB37010", Offset = "0xB37010", VA = "0xB37010")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C0A0", Offset = "0x88C0A0")]
				set
				{
				}
			}

			[Token(Token = "0x17000131")]
			public int blockHeight
			{
				[Token(Token = "0x6000EC2")]
				[Address(RVA = "0xB37018", Offset = "0xB37018", VA = "0xB37018")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C0B0", Offset = "0x88C0B0")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000EC3")]
				[Address(RVA = "0xB37020", Offset = "0xB37020", VA = "0xB37020")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C0C0", Offset = "0x88C0C0")]
				set
				{
				}
			}

			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0xB37028", Offset = "0xB37028", VA = "0xB37028")]
			public AnimationTexture()
			{
			}
		}

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<AnimationInstancing> aniInstancingList;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform cameraTransform;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, VertexCache> vertexCachePool;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, InstanceData> instanceDataPool;

		[Token(Token = "0x4001596")]
		private const int InstancingSizePerPackage = 200;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int instancingPackageSize;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<AnimationTexture> animationTextureList;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool useInstancing;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoundingSphere[] boundingSphere;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int usedBoundingSphereCount;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CullingGroup cullingGroup;

		[Token(Token = "0x1700012C")]
		public int InstancingPackageSize
		{
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0x1018E88", Offset = "0x1018E88", VA = "0x1018E88")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E91")]
			[Address(RVA = "0x1018E90", Offset = "0x1018E90", VA = "0x1018E90")]
			set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public bool UseInstancing
		{
			[Token(Token = "0x6000E92")]
			[Address(RVA = "0x1018E98", Offset = "0x1018E98", VA = "0x1018E98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0x1018EA0", Offset = "0x1018EA0", VA = "0x1018EA0")]
			set
			{
			}
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x1018EAC", Offset = "0x1018EAC", VA = "0x1018EAC")]
		public static AnimationInstancingMgr GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x1018F1C", Offset = "0x1018F1C", VA = "0x1018F1C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x101917C", Offset = "0x101917C", VA = "0x101917C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x1019074", Offset = "0x1019074", VA = "0x1019074")]
		private void InitializeCullingGroup()
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x1019180", Offset = "0x1019180", VA = "0x1019180")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x1019A68", Offset = "0x1019A68", VA = "0x1019A68")]
		private void Render()
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x101A710", Offset = "0x101A710", VA = "0x101A710")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x101A7C4", Offset = "0x101A7C4", VA = "0x101A7C4")]
		public GameObject CreateInstance(GameObject prefab)
		{
			return null;
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x1015F80", Offset = "0x1015F80", VA = "0x1015F80")]
		public void AddInstance(GameObject obj)
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x1016304", Offset = "0x1016304", VA = "0x1016304")]
		public void RemoveInstance(AnimationInstancing instance)
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x101A900", Offset = "0x101A900", VA = "0x101A900")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x101A994", Offset = "0x101A994", VA = "0x101A994")]
		private void RefreshMaterial()
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x10191A4", Offset = "0x10191A4", VA = "0x10191A4")]
		private void ApplyBoneMatrix()
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x101AFE8", Offset = "0x101AFE8", VA = "0x101AFE8")]
		private void ApplyRootMotion(AnimationInstancing instance)
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x101B6D8", Offset = "0x101B6D8", VA = "0x101B6D8")]
		private int FindTexture_internal(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x101B790", Offset = "0x101B790", VA = "0x101B790")]
		public AnimationTexture FindTexture(string name)
		{
			return null;
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x101B820", Offset = "0x101B820", VA = "0x101B820")]
		public AnimationTexture FindTexture(int index)
		{
			return null;
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x1018828", Offset = "0x1018828", VA = "0x1018828")]
		public VertexCache FindVertexCache(int renderName)
		{
			return null;
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x101B8B0", Offset = "0x101B8B0", VA = "0x101B8B0")]
		private void ReadTexture(BinaryReader reader, string prefabName)
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x101BB40", Offset = "0x101BB40", VA = "0x101BB40")]
		public bool ImportAnimationTexture(string prefabName, BinaryReader reader)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x101A938", Offset = "0x101A938", VA = "0x101A938")]
		private void ReleaseBuffer()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x101B2A4", Offset = "0x101B2A4", VA = "0x101B2A4")]
		public InstancingPackage CreatePackage(InstanceData data, Mesh mesh, Material[] originalMaterial, int animationIndex)
		{
			return null;
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x101BB88", Offset = "0x101BB88", VA = "0x101BB88")]
		private int GetIdentify(Material[] mat)
		{
			return default(int);
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x101BC1C", Offset = "0x101BC1C", VA = "0x101BC1C")]
		private InstanceData CreateInstanceData(int packageCount)
		{
			return null;
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x1016820", Offset = "0x1016820", VA = "0x1016820")]
		public void AddMeshVertex(string prefabName, AnimationInstancing.LodInfo[] lodInfo, Transform[] bones, List<Matrix4x4> bindPose, int bonePerVertex, [Optional] string alias)
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x101CCC4", Offset = "0x101CCC4", VA = "0x101CCC4")]
		private int GetPackageCount(VertexCache vertexCache)
		{
			return default(int);
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x101BEA8", Offset = "0x101BEA8", VA = "0x101BEA8")]
		private MaterialBlock CreateBlock(VertexCache cache, Material[] materials)
		{
			return null;
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x101C0CC", Offset = "0x101C0CC", VA = "0x101C0CC")]
		private VertexCache CreateVertexCache(string prefabName, int renderName, int alias, Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x101C2D4", Offset = "0x101C2D4", VA = "0x101C2D4")]
		private void SetupVertexCache(VertexCache vertexCache, MaterialBlock block, SkinnedMeshRenderer render, Transform[] boneTransform, int bonePerVertex)
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x101CACC", Offset = "0x101CACC", VA = "0x101CACC")]
		private void SetupVertexCache(VertexCache vertexCache, MaterialBlock block, MeshRenderer render, Mesh mesh, Transform[] boneTransform, int bonePerVertex)
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x1018BC4", Offset = "0x1018BC4", VA = "0x1018BC4")]
		public void SetupAdditionalData(VertexCache vertexCache)
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x101AD40", Offset = "0x101AD40", VA = "0x101AD40")]
		public void PreparePackageMaterial(InstancingPackage package, VertexCache vertexCache, int aniTextureIndex)
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x1015EEC", Offset = "0x1015EEC", VA = "0x1015EEC")]
		public void AddBoundingSphere(AnimationInstancing instance)
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x101CD5C", Offset = "0x101CD5C", VA = "0x101CD5C")]
		private void CullingStateChanged(CullingGroupEvent evt)
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x101889C", Offset = "0x101889C", VA = "0x101889C")]
		public void BindAttachment(VertexCache parentCache, VertexCache attachmentCache, Mesh sharedMesh, int boneIndex)
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x101CE94", Offset = "0x101CE94", VA = "0x101CE94")]
		public AnimationInstancingMgr()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class AnimationManager : Singleton<AnimationManager>
	{
		[Token(Token = "0x200027A")]
		private struct CreateAnimationRequest
		{
			[Token(Token = "0x40015BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject prefab;

			[Token(Token = "0x40015BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AnimationInstancing instance;
		}

		[Token(Token = "0x200027B")]
		public class InstanceAnimationInfo
		{
			[Token(Token = "0x40015C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<AnimationInfo> listAniInfo;

			[Token(Token = "0x40015C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ExtraBoneInfo extraBoneInfo;

			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0xB375B4", Offset = "0xB375B4", VA = "0xB375B4")]
			public InstanceAnimationInfo()
			{
			}
		}

		[Token(Token = "0x200027C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8850C4", Offset = "0x8850C4")]
		private sealed class <LoadAnimationAssetBundle>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimationManager <>4__this;

			[Token(Token = "0x40015C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string path;

			[Token(Token = "0x40015C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AssetBundleCreateRequest <request>5__2;

			[Token(Token = "0x17000132")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000ED4")]
				[Address(RVA = "0xB37250", Offset = "0xB37250", VA = "0xB37250", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000133")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000ED6")]
				[Address(RVA = "0xB37298", Offset = "0xB37298", VA = "0xB37298", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0xB37060", Offset = "0xB37060", VA = "0xB37060")]
			[DebuggerHidden]
			public <LoadAnimationAssetBundle>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0xB3708C", Offset = "0xB3708C", VA = "0xB3708C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0xB37090", Offset = "0xB37090", VA = "0xB37090", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0xB37258", Offset = "0xB37258", VA = "0xB37258", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200027D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8850D4", Offset = "0x8850D4")]
		private sealed class <LoadAnimationInfoFromAssetBundle>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimationManager <>4__this;

			[Token(Token = "0x40015CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CreateAnimationRequest request;

			[Token(Token = "0x40015CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AssetBundleRequest <abRequest>5__2;

			[Token(Token = "0x17000134")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EDA")]
				[Address(RVA = "0xB375BC", Offset = "0xB375BC", VA = "0xB375BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000135")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EDC")]
				[Address(RVA = "0xB37604", Offset = "0xB37604", VA = "0xB37604", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0xB372A0", Offset = "0xB372A0", VA = "0xB372A0")]
			[DebuggerHidden]
			public <LoadAnimationInfoFromAssetBundle>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0xB372CC", Offset = "0xB372CC", VA = "0xB372CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0xB372D0", Offset = "0xB372D0", VA = "0xB372D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0xB375C4", Offset = "0xB375C4", VA = "0xB375C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<CreateAnimationRequest> m_requestList;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<GameObject, InstanceAnimationInfo> m_animationInfo;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AssetBundle m_mainBundle;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_useBundle;

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x101CF5C", Offset = "0x101CF5C", VA = "0x101CF5C")]
		public static AnimationManager GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x101CFCC", Offset = "0x101CFCC", VA = "0x101CFCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x101D07C", Offset = "0x101D07C", VA = "0x101D07C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x1017028", Offset = "0x1017028", VA = "0x1017028")]
		public InstanceAnimationInfo FindAnimationInfo(GameObject prefab, AnimationInstancing instance)
		{
			return null;
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x101D490", Offset = "0x101D490", VA = "0x101D490")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88C0D0", Offset = "0x88C0D0")]
		public IEnumerator LoadAnimationAssetBundle(string path)
		{
			return null;
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x101D508", Offset = "0x101D508", VA = "0x101D508")]
		public void UnloadAnimationAssetBundle()
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x101D1A0", Offset = "0x101D1A0", VA = "0x101D1A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88C130", Offset = "0x88C130")]
		private IEnumerator LoadAnimationInfoFromAssetBundle(CreateAnimationRequest request)
		{
			return null;
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x101D220", Offset = "0x101D220", VA = "0x101D220")]
		private InstanceAnimationInfo CreateAnimationInfoFromFile(GameObject prefab)
		{
			return null;
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x101D59C", Offset = "0x101D59C", VA = "0x101D59C")]
		private List<AnimationInfo> ReadAnimationInfo(BinaryReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x101DAB0", Offset = "0x101DAB0", VA = "0x101DAB0")]
		private ExtraBoneInfo ReadExtraBoneInfo(BinaryReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x101DCA8", Offset = "0x101DCA8", VA = "0x101DCA8")]
		public AnimationManager()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class RuntimeHelper
	{
		[Token(Token = "0x200027F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8850E4", Offset = "0x8850E4")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40015CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform[] bones;

			[Token(Token = "0x40015CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int j;

			[Token(Token = "0x40015CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Predicate<Transform> <>9__0;

			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0x1D51260", Offset = "0x1D51260", VA = "0x1D51260")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0x1D51268", Offset = "0x1D51268", VA = "0x1D51268")]
			internal bool <MergeBone>b__0(Transform q)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x11C3978", Offset = "0x11C3978", VA = "0x11C3978")]
		public static Transform[] MergeBone(SkinnedMeshRenderer[] meshRender, List<Matrix4x4> bindPose)
		{
			return null;
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x11C3CD8", Offset = "0x11C3CD8", VA = "0x11C3CD8")]
		public static Quaternion QuaternionFromMatrix(Matrix4x4 mat)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x11C3CF0", Offset = "0x11C3CF0", VA = "0x11C3CF0")]
		public RuntimeHelper()
		{
		}
	}
}
