using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using AK.Wwise;
using Ara;
using Cinemachine;
using CurvedUI;
using Deform;
using Ikimasho.Game.Gesture;
using Ikimasho.Game.Shop;
using Il2CppDummyDll;
using LitJson;
using MEC;
using Malimbe.PropertySerializationAttribute;
using Malimbe.XmlDocumentationAttribute;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using Pvr_UnitySDKAPI;
using Pvr_UnitySDKAPI.Achievement;
using Samples.Boids;
using ScriptableObjectArchitecture;
using TMPro;
using Unity.Collections;
using Unity.Entities;
using Unity.Jobs;
using Unity.Mathematics;
using Unity.Rendering;
using Unity.Transforms;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.AddressableAssets.ResourceLocators;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.Rendering.PostProcessing;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.ResourceManagement.ResourceLocations;
using UnityEngine.Scripting;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.VFX;
using UnityEngine.Video;
using UnityToolbag;
using VRTK.Prefabs.CameraRig.UnityXRCameraRig.Input;
using Zinnia.Action;
using Zinnia.Pointer;
using Zinnia.Tracking.Velocity;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[ExecuteInEditMode]
public class MirrorReflection : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_DisablePixelLights;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_TextureSize;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_ClipPlaneOffset;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask m_ReflectLayers;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Hashtable m_ReflectionCameras;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture m_ReflectionTexture;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_OldReflectionTextureSize;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool s_InsideRendering;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xFAD634", Offset = "0xFAD634", VA = "0xFAD634")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xFAE910", Offset = "0xFAE910", VA = "0xFAE910")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xFAE1AC", Offset = "0xFAE1AC", VA = "0xFAE1AC")]
	private void UpdateCameraModes(Camera src, Camera dest)
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xFADBD8", Offset = "0xFADBD8", VA = "0xFADBD8")]
	private void CreateMirrorObjects(Camera currentCamera, out Camera reflectionCamera)
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xFAEC40", Offset = "0xFAEC40", VA = "0xFAEC40")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xFAE72C", Offset = "0xFAE72C", VA = "0xFAE72C")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xFAE488", Offset = "0xFAE488", VA = "0xFAE488")]
	private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xFAEC60", Offset = "0xFAEC60", VA = "0xFAEC60")]
	public MirrorReflection()
	{
	}
}
[Token(Token = "0x2000003")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCFA7C", Offset = "0xBCFA7C")]
public class BakeTrail : MonoBehaviour
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AraTrail trail;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xECE89C", Offset = "0xECE89C", VA = "0xECE89C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xECE8FC", Offset = "0xECE8FC", VA = "0xECE8FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xECE938", Offset = "0xECE938", VA = "0xECE938")]
	private void Bake()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xECEAEC", Offset = "0xECEAEC", VA = "0xECEAEC")]
	public BakeTrail()
	{
	}
}
[Token(Token = "0x2000004")]
public class WobblePath : MonoBehaviour
{
	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float amplitude;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xF7B368", Offset = "0xF7B368", VA = "0xF7B368")]
	private void Update()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xF7B4B4", Offset = "0xF7B4B4", VA = "0xF7B4B4")]
	public WobblePath()
	{
	}
}
[Token(Token = "0x2000005")]
public class DestroyObject : MonoBehaviour
{
	[Token(Token = "0x6000010")]
	[Address(RVA = "0xF0A414", Offset = "0xF0A414", VA = "0xF0A414")]
	public void DestroyOnEvent()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xF0A490", Offset = "0xF0A490", VA = "0xF0A490")]
	public DestroyObject()
	{
	}
}
[Token(Token = "0x2000006")]
public class SpringFollow : MonoBehaviour
{
	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBD8A1C", Offset = "0xBD8A1C")]
	public float smoothing;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 offset;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool LockedOn;

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xF60BF4", Offset = "0xF60BF4", VA = "0xF60BF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xF60CE0", Offset = "0xF60CE0", VA = "0xF60CE0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xF60E18", Offset = "0xF60E18", VA = "0xF60E18")]
	public SpringFollow()
	{
	}
}
[Token(Token = "0x2000007")]
public class TimelineSkyboxInjector : MonoBehaviour
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material m_skybox;

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xF6A154", Offset = "0xF6A154", VA = "0xF6A154")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xF6A1E4", Offset = "0xF6A1E4", VA = "0xF6A1E4")]
	public TimelineSkyboxInjector()
	{
	}
}
[Token(Token = "0x2000008")]
public class CUI_CameraRotationOnButtonHeld : MonoBehaviour
{
	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float Sensitivity;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 oldMousePos;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool move;

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xED64E8", Offset = "0xED64E8", VA = "0xED64E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xED6514", Offset = "0xED6514", VA = "0xED6514")]
	public CUI_CameraRotationOnButtonHeld()
	{
	}
}
[Token(Token = "0x2000009")]
public class CUI_MoveAlong : MonoBehaviour
{
	[Token(Token = "0x6000019")]
	[Address(RVA = "0xED652C", Offset = "0xED652C", VA = "0xED652C")]
	private void Start()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xED6530", Offset = "0xED6530", VA = "0xED6530")]
	private void Update()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xED6784", Offset = "0xED6784", VA = "0xED6784")]
	public CUI_MoveAlong()
	{
	}
}
[Token(Token = "0x200000A")]
public class CUI_MoveHeartbeat : MonoBehaviour
{
	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool wrapAroundParent;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform rectie;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform parentRectie;

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xED678C", Offset = "0xED678C", VA = "0xED678C")]
	private void Start()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xED6850", Offset = "0xED6850", VA = "0xED6850")]
	private void Update()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xED699C", Offset = "0xED699C", VA = "0xED699C")]
	public CUI_MoveHeartbeat()
	{
	}
}
[Token(Token = "0x200000B")]
public class CUI_ShowParentCoordinates : MonoBehaviour
{
	[Token(Token = "0x600001F")]
	[Address(RVA = "0xED69AC", Offset = "0xED69AC", VA = "0xED69AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xED6A78", Offset = "0xED6A78", VA = "0xED6A78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xED6A7C", Offset = "0xED6A7C", VA = "0xED6A7C")]
	public CUI_ShowParentCoordinates()
	{
	}
}
[Token(Token = "0x200000C")]
public class CUI_rotation_anim : MonoBehaviour
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Rotation;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xED6A84", Offset = "0xED6A84", VA = "0xED6A84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xED6A88", Offset = "0xED6A88", VA = "0xED6A88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xED6C70", Offset = "0xED6C70", VA = "0xED6C70")]
	public CUI_rotation_anim()
	{
	}
}
[Token(Token = "0x200000D")]
public class CUI_touchpad : MonoBehaviour
{
	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform container;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform dot;

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xED6C78", Offset = "0xED6C78", VA = "0xED6C78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xED6CF0", Offset = "0xED6CF0", VA = "0xED6CF0")]
	private void MoveDotOnTouchpadAxisChanged(object o, ViveInputArgs args)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xED6DCC", Offset = "0xED6DCC", VA = "0xED6DCC")]
	public CUI_touchpad()
	{
	}
}
[Token(Token = "0x200000E")]
public class SpawnGrid : CacheBehaviour
{
	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public bool m_automaticSnap;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBD8A64", Offset = "0xBD8A64")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8A64", Offset = "0xBD8A64")]
	public Color m_colorOfDebugSphere;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float m_sizeOfDebugSphere;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBD8AB4", Offset = "0xBD8AB4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8AB4", Offset = "0xBD8AB4")]
	public bool m_is180;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool m_useLeftSide;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	public bool m_useRightSide;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int m_spawnCountLine;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int m_yLevelsCount;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int m_faceWidth;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int m_faceHeight;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public int m_distanceFromPoint;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBD8B04", Offset = "0xBD8B04")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8B04", Offset = "0xBD8B04")]
	public bool m_handleTiming;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8B54", Offset = "0xBD8B54")]
	public float m_ratioFirstSnap;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public FloatVariable m_timeBetweenOpening;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public FloatVariable m_timeOpening;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBD8B8C", Offset = "0xBD8B8C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8B8C", Offset = "0xBD8B8C")]
	public float m_offsetCollider;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBD8BDC", Offset = "0xBD8BDC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8BDC", Offset = "0xBD8BDC")]
	public Vector3IntGameEvent m_eventGivePosition;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public UnityEvent OnAskForEnemies;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[HideInInspector]
	public int m_lastActorSnapped;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Vector3 _position;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private List<Vector3> _spawnPositions;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Dictionary<int, int> _indexUsed;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float _beginTime;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float _counter;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float _currentTime;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private bool _started;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
	private bool _waiting;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int _checkSpawnCountLine;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private int _checkFaceW;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private int _checkFaceH;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private int _checkDistance;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool _acceptSnap;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private BoxCollider _collider;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private List<List<Vector3>> m_spawnPointMatrix;

	[Token(Token = "0x17000001")]
	[HideInInspector]
	public bool AcceptSnap
	{
		[Token(Token = "0x6000028")]
		[Address(RVA = "0xF58448", Offset = "0xF58448", VA = "0xF58448")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xF58450", Offset = "0xF58450", VA = "0xF58450")]
	public Vector3 GetRandomPosition(int instanceId = -1)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xF58780", Offset = "0xF58780", VA = "0xF58780")]
	private Vector3 GetRandomPositionPrivate(int instanceId)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xF58AD4", Offset = "0xF58AD4", VA = "0xF58AD4")]
	public void ClearGrid()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xF58B2C", Offset = "0xF58B2C", VA = "0xF58B2C")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xF58BD4", Offset = "0xF58BD4", VA = "0xF58BD4")]
	public void StopTimer()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xF58C60", Offset = "0xF58C60", VA = "0xF58C60")]
	public void ChangeHandleTiming(bool value)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xF58D14", Offset = "0xF58D14", VA = "0xF58D14")]
	public void OpenGrid()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xF5907C", Offset = "0xF5907C", VA = "0xF5907C")]
	public void CloseGrid()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xF5912C", Offset = "0xF5912C", VA = "0xF5912C")]
	public Vector3 OnChangeSnapPosition(int instanceId)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xF59284", Offset = "0xF59284", VA = "0xF59284")]
	public void OnRequestSnapPosition(int instanceId)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xF595F0", Offset = "0xF595F0", VA = "0xF595F0")]
	public void RemoveIndex(int instanceId)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xF5969C", Offset = "0xF5969C", VA = "0xF5969C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xF599AC", Offset = "0xF599AC", VA = "0xF599AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xF5A014", Offset = "0xF5A014", VA = "0xF5A014")]
	private void Update()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xF5A0C4", Offset = "0xF5A0C4", VA = "0xF5A0C4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xF59AD0", Offset = "0xF59AD0", VA = "0xF59AD0")]
	private void CalculateSpawnPositions(bool checkDifferences = true)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xF5A190", Offset = "0xF5A190", VA = "0xF5A190")]
	public Vector3 OnAssignPositions(int x, int y, int instanceID)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xF5A244", Offset = "0xF5A244", VA = "0xF5A244")]
	public SpawnGrid()
	{
	}
}
[Token(Token = "0x200000F")]
public class Totem_Base_Behaviour : AmmoBehaviour
{
	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[HideInInspector]
	public AmmoTotemData m_data;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8C4C", Offset = "0xBD8C4C")]
	public bool m_hasCharges;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8C84", Offset = "0xBD8C84")]
	public int m_chargesCount;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8CBC", Offset = "0xBD8CBC")]
	public bool m_hasTimeOfDeath;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8CF4", Offset = "0xBD8CF4")]
	public float m_timeBeforeDeath;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected bool _hasCharges;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	protected int _chargesCount;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected bool _hasTimeOfDeath;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	protected float _timeBeforeDeath;

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xF6A1EC", Offset = "0xF6A1EC", VA = "0xF6A1EC")]
	public void LoseCharge()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xF6A290", Offset = "0xF6A290", VA = "0xF6A290")]
	protected new void Start()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xF6A2B4", Offset = "0xF6A2B4", VA = "0xF6A2B4")]
	protected void Update()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xF6A374", Offset = "0xF6A374", VA = "0xF6A374")]
	public Totem_Base_Behaviour()
	{
	}
}
[Token(Token = "0x2000010")]
public class Totem_Offensive_Behaviour : Totem_Base_Behaviour
{
	[Token(Token = "0x2000570")]
	public enum EType
	{
		[Token(Token = "0x4001C69")]
		PROJECTILE_ALONG_RAY,
		[Token(Token = "0x4001C6A")]
		HOMING_TORPEDO
	}

	[Token(Token = "0x2000571")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7F00", Offset = "0xBD7F00")]
	private sealed class <HomingTorpedoLaunch>d__7 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Totem_Offensive_Behaviour <>4__this;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x17000304")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002246")]
			[Address(RVA = "0xF6B3B8", Offset = "0xF6B3B8", VA = "0xF6B3B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000305")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002248")]
			[Address(RVA = "0xF6B420", Offset = "0xF6B420", VA = "0xF6B420", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0xF6AC10", Offset = "0xF6AC10", VA = "0xF6AC10")]
		[DebuggerHidden]
		public <HomingTorpedoLaunch>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0xF6AE54", Offset = "0xF6AE54", VA = "0xF6AE54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0xF6AE58", Offset = "0xF6AE58", VA = "0xF6AE58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0xF6B3C0", Offset = "0xF6B3C0", VA = "0xF6B3C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000572")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7F10", Offset = "0xBD7F10")]
	private sealed class <RayProjectileLaunch>d__8 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Totem_Offensive_Behaviour <>4__this;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x17000306")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600224C")]
			[Address(RVA = "0xF6B968", Offset = "0xF6B968", VA = "0xF6B968", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000307")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600224E")]
			[Address(RVA = "0xF6B9D0", Offset = "0xF6B9D0", VA = "0xF6B9D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0xF6AC3C", Offset = "0xF6AC3C", VA = "0xF6AC3C")]
		[DebuggerHidden]
		public <RayProjectileLaunch>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0xF6B484", Offset = "0xF6B484", VA = "0xF6B484", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0xF6B488", Offset = "0xF6B488", VA = "0xF6B488", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0xF6B970", Offset = "0xF6B970", VA = "0xF6B970", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8D2C", Offset = "0xBD8D2C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBD8D2C", Offset = "0xBD8D2C")]
	public EType m_type;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject m_projectile;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8D7C", Offset = "0xBD8D7C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBD8D7C", Offset = "0xBD8D7C")]
	public float m_projectileSpeed;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8DCC", Offset = "0xBD8DCC")]
	public float m_frequency;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private List<Transform> _transforms;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private List<float> _timers;

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xF6A37C", Offset = "0xF6A37C", VA = "0xF6A37C")]
	private bool IsPrefabValid(GameObject value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xF6A6CC", Offset = "0xF6A6CC", VA = "0xF6A6CC")]
	private new void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xF6AB78", Offset = "0xF6AB78", VA = "0xF6AB78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE7DDC", Offset = "0xBE7DDC")]
	private IEnumerator<float> HomingTorpedoLaunch(Transform target)
	{
		return null;
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xF6AAE0", Offset = "0xF6AAE0", VA = "0xF6AAE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE7E40", Offset = "0xBE7E40")]
	private IEnumerator<float> RayProjectileLaunch(Transform target)
	{
		return null;
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xF6AC68", Offset = "0xF6AC68", VA = "0xF6AC68")]
	protected void AddModifiers(GameObject proj, AmmoBehaviour projBehaviour, Ammo ammo)
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xF6AE4C", Offset = "0xF6AE4C", VA = "0xF6AE4C")]
	public Totem_Offensive_Behaviour()
	{
	}
}
[Token(Token = "0x2000011")]
public class Totem_RegenFloatVariable_Behaviour : Totem_Base_Behaviour
{
	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public UnityEvent OnRegen;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float m_regenFrequency;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float m_regenAmount;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public FloatVariable m_varToRegen;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float _cumulativeTime;

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xF6BA34", Offset = "0xF6BA34", VA = "0xF6BA34")]
	protected new void Start()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xF6BA58", Offset = "0xF6BA58", VA = "0xF6BA58")]
	protected new void Update()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xF6BCC0", Offset = "0xF6BCC0", VA = "0xF6BCC0")]
	public Totem_RegenFloatVariable_Behaviour()
	{
	}
}
[Token(Token = "0x2000012")]
public class UISlider : MonoBehaviour
{
	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject grabSpot;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform minSpot;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform maxSpot;

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xF71934", Offset = "0xF71934", VA = "0xF71934")]
	private void Start()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xF71938", Offset = "0xF71938", VA = "0xF71938")]
	private void Update()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xF7193C", Offset = "0xF7193C", VA = "0xF7193C")]
	public UISlider()
	{
	}
}
[Token(Token = "0x2000013")]
public class DisableChildAfterDelay : MonoBehaviour
{
	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_time;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _increment;

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xF14210", Offset = "0xF14210", VA = "0xF14210")]
	private void Update()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xF14350", Offset = "0xF14350", VA = "0xF14350")]
	public DisableChildAfterDelay()
	{
	}
}
[Token(Token = "0x2000014")]
public class HUDLerper : MonoBehaviour
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_hud;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_headSet;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_headSetLerper;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask m_layerMask;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public LayerMask m_layerMaskDeadZoneInternal;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_lerpSpeed;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _lerping;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _hudTransform;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _headsetTransform;

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xF22090", Offset = "0xF22090", VA = "0xF22090")]
	public void Start()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xF220F0", Offset = "0xF220F0", VA = "0xF220F0")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xF22388", Offset = "0xF22388", VA = "0xF22388")]
	public HUDLerper()
	{
	}
}
[Token(Token = "0x2000015")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBCFAE0", Offset = "0xBCFAE0")]
public class FastList<T>
{
	[Token(Token = "0x2000573")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x2000574")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7F20", Offset = "0xBD7F20")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000308")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6002256")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000309")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002258")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002253")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002254")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002255")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002257")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000002")]
	public int Count
	{
		[Token(Token = "0x6000052")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000053")]
		set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public T Item
	{
		[Token(Token = "0x6000054")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000055")]
		set
		{
		}
	}

	[Token(Token = "0x6000050")]
	public FastList()
	{
	}

	[Token(Token = "0x6000051")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000056")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000057")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000058")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000059")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x600005A")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600005B")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x600005C")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600005D")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x600005E")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600005F")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000060")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000061")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000062")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000063")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000064")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE7EA4", Offset = "0xBE7EA4")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000065")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000066")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000067")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000068")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000069")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000016")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xF30B30", Offset = "0xF30B30", VA = "0xF30B30")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000017")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xF30AFC", Offset = "0xF30AFC", VA = "0xF30AFC")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000018")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x136BDB0", Offset = "0x136BDB0", VA = "0x136BDB0")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x136BF1C", Offset = "0x136BF1C", VA = "0x136BF1C")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x136C2C0", Offset = "0x136C2C0", VA = "0x136C2C0")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x136C468", Offset = "0x136C468", VA = "0x136C468", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x136C494", Offset = "0x136C494", VA = "0x136C494")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000019")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xEE7C14", Offset = "0xEE7C14", VA = "0xEE7C14")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xEE7CA0", Offset = "0xEE7CA0", VA = "0xEE7CA0")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xEE7E0C", Offset = "0xEE7E0C", VA = "0xEE7E0C")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x200001A")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000004")]
	public bool IsVisible
	{
		[Token(Token = "0x6000074")]
		[Address(RVA = "0xF1F9B8", Offset = "0xF1F9B8", VA = "0xF1F9B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000075")]
		[Address(RVA = "0xF1F9C0", Offset = "0xF1F9C0", VA = "0xF1F9C0")]
		set
		{
		}
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xF1FAE8", Offset = "0xF1FAE8", VA = "0xF1FAE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xF1FD04", Offset = "0xF1FD04", VA = "0xF1FD04")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xF1FD0C", Offset = "0xF1FD0C", VA = "0xF1FD0C")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x200001B")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000575")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6002259")]
		[Address(RVA = "0xE3DE80", Offset = "0xE3DE80", VA = "0xE3DE80")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000576")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE7240", Offset = "0xBE7240")]
		public float FakeLatencyMax;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE7258", Offset = "0xBE7258")]
		public float FakeLatencyMin;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE7270", Offset = "0xBE7270")]
		public float LatencyWeight;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE7288", Offset = "0xBE7288")]
		public int MaxSamples;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x600225A")]
		[Address(RVA = "0xE3DE88", Offset = "0xE3DE88", VA = "0xE3DE88")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0xE3E038", Offset = "0xE3E038", VA = "0xE3E038")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xE3D4E0", Offset = "0xE3D4E0", VA = "0xE3D4E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xE3D618", Offset = "0xE3D618", VA = "0xE3D618")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xE3D998", Offset = "0xE3D998", VA = "0xE3D998")]
	private void Update()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xE3D8F0", Offset = "0xE3D8F0", VA = "0xE3D8F0")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xE3DBF4", Offset = "0xE3DBF4", VA = "0xE3DBF4")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xE3DF94", Offset = "0xE3DF94", VA = "0xE3DF94")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200001C")]
public class P2PManager
{
	[Token(Token = "0x2000577")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4001C81")]
		Update = 1
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x136D5EC", Offset = "0x136D5EC", VA = "0x136D5EC")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x136D6AC", Offset = "0x136D6AC", VA = "0x136D6AC")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x136D790", Offset = "0x136D790", VA = "0x136D790")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x136D814", Offset = "0x136D814", VA = "0x136D814")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x136D970", Offset = "0x136D970", VA = "0x136D970")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x136DC58", Offset = "0x136DC58", VA = "0x136DC58")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x136E04C", Offset = "0x136E04C", VA = "0x136E04C")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x136E2F0", Offset = "0x136E2F0", VA = "0x136E2F0")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x136DE1C", Offset = "0x136DE1C", VA = "0x136DE1C")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x136E220", Offset = "0x136E220", VA = "0x136E220")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x136DF04", Offset = "0x136DF04", VA = "0x136DF04")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x136E508", Offset = "0x136E508", VA = "0x136E508")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x136DE64", Offset = "0x136DE64", VA = "0x136DE64")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x136E264", Offset = "0x136E264", VA = "0x136E264")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x136DFAC", Offset = "0x136DFAC", VA = "0x136DFAC")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x136E594", Offset = "0x136E594", VA = "0x136E594")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x200001D")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xEE7384", Offset = "0xEE7384", VA = "0xEE7384", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xEE73C8", Offset = "0xEE73C8", VA = "0xEE73C8", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xEE7400", Offset = "0xEE7400", VA = "0xEE7400", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xEE7428", Offset = "0xEE7428", VA = "0xEE7428")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xEE75C8", Offset = "0xEE75C8", VA = "0xEE75C8")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xEE7648", Offset = "0xEE7648", VA = "0xEE7648")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xEE769C", Offset = "0xEE769C", VA = "0xEE769C")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x200001E")]
public class RemotePlayer
{
	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xE3E0CC", Offset = "0xE3E0CC", VA = "0xE3E0CC")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x200001F")]
public class RoomManager
{
	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xE3F574", Offset = "0xE3F574", VA = "0xE3F574")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xE3F640", Offset = "0xE3F640", VA = "0xE3F640")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xE3F7A0", Offset = "0xE3F7A0", VA = "0xE3F7A0")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xE3F8B0", Offset = "0xE3F8B0", VA = "0xE3F8B0")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xE3F964", Offset = "0xE3F964", VA = "0xE3F964")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xE3FA98", Offset = "0xE3FA98", VA = "0xE3FA98")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xE3F7D0", Offset = "0xE3F7D0", VA = "0xE3F7D0")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xE3FB24", Offset = "0xE3FB24", VA = "0xE3FB24")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xE40224", Offset = "0xE40224", VA = "0xE40224")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xE40548", Offset = "0xE40548", VA = "0xE40548")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xE3FE18", Offset = "0xE3FE18", VA = "0xE3FE18")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x2000020")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000578")]
	public enum State
	{
		[Token(Token = "0x4001C83")]
		INITIALIZING,
		[Token(Token = "0x4001C84")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4001C85")]
		CREATING_A_ROOM,
		[Token(Token = "0x4001C86")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4001C87")]
		JOINING_A_ROOM,
		[Token(Token = "0x4001C88")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4001C89")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4001C8A")]
		SHUTDOWN
	}

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000005")]
	public static State CurrentState
	{
		[Token(Token = "0x60000AE")]
		[Address(RVA = "0xF5705C", Offset = "0xF5705C", VA = "0xF5705C")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000006")]
	public static ulong MyID
	{
		[Token(Token = "0x60000AF")]
		[Address(RVA = "0xF570D0", Offset = "0xF570D0", VA = "0xF570D0")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000007")]
	public static string MyOculusID
	{
		[Token(Token = "0x60000B0")]
		[Address(RVA = "0xF571A8", Offset = "0xF571A8", VA = "0xF571A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xF551A4", Offset = "0xF551A4", VA = "0xF551A4", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xF5554C", Offset = "0xF5554C", VA = "0xF5554C", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xF55CC4", Offset = "0xF55CC4", VA = "0xF55CC4")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xF55F8C", Offset = "0xF55F8C", VA = "0xF55F8C", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xF55F90", Offset = "0xF55F90", VA = "0xF55F90")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xF56084", Offset = "0xF56084", VA = "0xF56084")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xF567CC", Offset = "0xF567CC", VA = "0xF567CC")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xF56CD0", Offset = "0xF56CD0", VA = "0xF56CD0")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xF56E9C", Offset = "0xF56E9C", VA = "0xF56E9C")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xF56FEC", Offset = "0xF56FEC", VA = "0xF56FEC")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xF558B0", Offset = "0xF558B0", VA = "0xF558B0")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xF55E20", Offset = "0xF55E20", VA = "0xF55E20")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xF55964", Offset = "0xF55964", VA = "0xF55964")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xF572BC", Offset = "0xF572BC", VA = "0xF572BC")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xF5743C", Offset = "0xF5743C", VA = "0xF5743C")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xF57524", Offset = "0xF57524", VA = "0xF57524")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xF57648", Offset = "0xF57648", VA = "0xF57648")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xF57718", Offset = "0xF57718", VA = "0xF57718")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xF55ED0", Offset = "0xF55ED0", VA = "0xF55ED0")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xF57B44", Offset = "0xF57B44", VA = "0xF57B44")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xF57BD0", Offset = "0xF57BD0", VA = "0xF57BD0")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xF57968", Offset = "0xF57968", VA = "0xF57968")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xF57DC0", Offset = "0xF57DC0", VA = "0xF57DC0")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xF5511C", Offset = "0xF5511C", VA = "0xF5511C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBE7F08", Offset = "0xBE7F08")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xF57EFC", Offset = "0xF57EFC", VA = "0xF57EFC")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xF57FC4", Offset = "0xF57FC4", VA = "0xF57FC4")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000021")]
public class VoipManager
{
	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xF794F8", Offset = "0xF794F8", VA = "0xF794F8")]
	public VoipManager()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xF795B8", Offset = "0xF795B8", VA = "0xF795B8")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xF7969C", Offset = "0xF7969C", VA = "0xF7969C")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xF79720", Offset = "0xF79720", VA = "0xF79720")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xF7987C", Offset = "0xF7987C", VA = "0xF7987C")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000022")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xF1F634", Offset = "0xF1F634", VA = "0xF1F634")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xF1F6B4", Offset = "0xF1F6B4", VA = "0xF1F6B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xF1F830", Offset = "0xF1F830", VA = "0xF1F830")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xF1F894", Offset = "0xF1F894", VA = "0xF1F894")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xF1F6F0", Offset = "0xF1F6F0", VA = "0xF1F6F0")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xF1F950", Offset = "0xF1F950", VA = "0xF1F950")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xF1F9B0", Offset = "0xF1F9B0", VA = "0xF1F9B0")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000023")]
public class AvatarLayer
{
	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xECE894", Offset = "0xECE894", VA = "0xECE894")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000024")]
public class PacketRecordSettings
{
	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x1360090", Offset = "0x1360090", VA = "0x1360090")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000025")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000579")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x600225C")]
		[Address(RVA = "0x135DD70", Offset = "0x135DD70", VA = "0x135DD70")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x200057A")]
	public enum HandType
	{
		[Token(Token = "0x4001C8D")]
		Right,
		[Token(Token = "0x4001C8E")]
		Left,
		[Token(Token = "0x4001C8F")]
		Max
	}

	[Token(Token = "0x200057B")]
	public enum HandJoint
	{
		[Token(Token = "0x4001C91")]
		HandBase,
		[Token(Token = "0x4001C92")]
		IndexBase,
		[Token(Token = "0x4001C93")]
		IndexTip,
		[Token(Token = "0x4001C94")]
		ThumbBase,
		[Token(Token = "0x4001C95")]
		ThumbTip,
		[Token(Token = "0x4001C96")]
		Max
	}

	[Token(Token = "0x200057C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7F30", Offset = "0xBD7F30")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x1700030A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002260")]
			[Address(RVA = "0x1360240", Offset = "0x1360240", VA = "0x1360240", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002262")]
			[Address(RVA = "0x13602A8", Offset = "0x13602A8", VA = "0x13602A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0x135FC0C", Offset = "0x135FC0C", VA = "0x135FC0C")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0x13600A4", Offset = "0x13600A4", VA = "0x13600A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0x13600A8", Offset = "0x13600A8", VA = "0x13600A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0x1360248", Offset = "0x1360248", VA = "0x1360248", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8E14", Offset = "0xBD8E14")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8E4C", Offset = "0xBD8E4C")]
	public bool EnableBody;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8E84", Offset = "0xBD8E84")]
	public bool RecordPackets;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8EBC", Offset = "0xBD8EBC")]
	public bool StartWithControllers;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8EF4", Offset = "0xBD8EF4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8EF4", Offset = "0xBD8EF4")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8F64", Offset = "0xBD8F64")]
	private bool CombineMeshes;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8F9C", Offset = "0xBD8F9C")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8FD4", Offset = "0xBD8FD4")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD900C", Offset = "0xBD900C")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9044", Offset = "0xBD9044")]
	public bool EnableLaughter;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x40000E9")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40000EB")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40000EC")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40000ED")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40000EE")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40000EF")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x13595F0", Offset = "0x13595F0", VA = "0x13595F0")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x1359A08", Offset = "0x1359A08", VA = "0x1359A08")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x1359A94", Offset = "0x1359A94", VA = "0x1359A94")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x1359B00", Offset = "0x1359B00", VA = "0x1359B00")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x1359C28", Offset = "0x1359C28", VA = "0x1359C28")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x1359E80", Offset = "0x1359E80", VA = "0x1359E80")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x135A0A4", Offset = "0x135A0A4", VA = "0x135A0A4")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x135A694", Offset = "0x135A694", VA = "0x135A694")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x135A75C", Offset = "0x135A75C", VA = "0x135A75C")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x135A7E0", Offset = "0x135A7E0", VA = "0x135A7E0")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x135A8C8", Offset = "0x135A8C8", VA = "0x135A8C8")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x135A954", Offset = "0x135A954", VA = "0x135A954")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x135AA70", Offset = "0x135AA70", VA = "0x135AA70")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x135AAD0", Offset = "0x135AAD0", VA = "0x135AAD0")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x60000DC")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x135AF54", Offset = "0x135AF54", VA = "0x135AF54")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x135B2B4", Offset = "0x135B2B4", VA = "0x135B2B4")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x135B45C", Offset = "0x135B45C", VA = "0x135B45C")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x135B724", Offset = "0x135B724", VA = "0x135B724")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x135B810", Offset = "0x135B810", VA = "0x135B810")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x135C230", Offset = "0x135C230", VA = "0x135C230")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x135C6BC", Offset = "0x135C6BC", VA = "0x135C6BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x135D144", Offset = "0x135D144", VA = "0x135D144")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x135D198", Offset = "0x135D198", VA = "0x135D198")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x135BA74", Offset = "0x135BA74", VA = "0x135BA74")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x135BB10", Offset = "0x135BB10", VA = "0x135BB10")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x135D1C8", Offset = "0x135D1C8", VA = "0x135D1C8")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x135CA24", Offset = "0x135CA24", VA = "0x135CA24")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x135D40C", Offset = "0x135D40C", VA = "0x135D40C")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x135D230", Offset = "0x135D230", VA = "0x135D230")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x135DEDC", Offset = "0x135DEDC", VA = "0x135DEDC")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x135E2E0", Offset = "0x135E2E0", VA = "0x135E2E0")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x135E668", Offset = "0x135E668", VA = "0x135E668")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x135E7A8", Offset = "0x135E7A8", VA = "0x135E7A8")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x135E960", Offset = "0x135E960", VA = "0x135E960")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x135CC40", Offset = "0x135CC40", VA = "0x135CC40")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x135EA38", Offset = "0x135EA38", VA = "0x135EA38")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x135CA34", Offset = "0x135CA34", VA = "0x135CA34")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x135EB2C", Offset = "0x135EB2C", VA = "0x135EB2C")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x135F134", Offset = "0x135F134", VA = "0x135F134")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x135F5F4", Offset = "0x135F5F4", VA = "0x135F5F4")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x135F66C", Offset = "0x135F66C", VA = "0x135F66C")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x135F6E8", Offset = "0x135F6E8", VA = "0x135F6E8")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x135CFD8", Offset = "0x135CFD8", VA = "0x135CFD8")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x135EBF4", Offset = "0x135EBF4", VA = "0x135EBF4")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x135FB90", Offset = "0x135FB90", VA = "0x135FB90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE7F6C", Offset = "0xBE7F6C")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x135FC38", Offset = "0x135FC38", VA = "0x135FC38")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x135FA34", Offset = "0x135FA34", VA = "0x135FA34")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x135FD00", Offset = "0x135FD00", VA = "0x135FD00")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x135FDEC", Offset = "0x135FDEC", VA = "0x135FDEC")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x135F7B8", Offset = "0x135F7B8", VA = "0x135F7B8")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x135FED8", Offset = "0x135FED8", VA = "0x135FED8")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000026")]
public class OvrAvatarAsset
{
	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x13602B0", Offset = "0x13602B0", VA = "0x13602B0")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000027")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x136036C", Offset = "0x136036C", VA = "0x136036C")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x1361674", Offset = "0x1361674", VA = "0x1361674")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x1361218", Offset = "0x1361218", VA = "0x1361218")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x1360FB0", Offset = "0x1360FB0", VA = "0x1360FB0")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x136108C", Offset = "0x136108C", VA = "0x136108C")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x13618D8", Offset = "0x13618D8", VA = "0x13618D8")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000028")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x400010C")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x1361E98", Offset = "0x1361E98", VA = "0x1361E98")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000029")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x1362110", Offset = "0x1362110", VA = "0x1362110")]
	private void Update()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x1362514", Offset = "0x1362514", VA = "0x1362514")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200002A")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x135E50C", Offset = "0x135E50C", VA = "0x135E50C")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x1362628", Offset = "0x1362628", VA = "0x1362628")]
	private void Update()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x1362750", Offset = "0x1362750", VA = "0x1362750")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x200002B")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x13627B4", Offset = "0x13627B4", VA = "0x13627B4")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x1362238", Offset = "0x1362238", VA = "0x1362238")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x1362D98", Offset = "0x1362D98", VA = "0x1362D98")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x1362DF8", Offset = "0x1362DF8", VA = "0x1362DF8")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x13635DC", Offset = "0x13635DC", VA = "0x13635DC")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x1362578", Offset = "0x1362578", VA = "0x1362578")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x200002C")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x200057D")]
	public enum PacketMode
	{
		[Token(Token = "0x4001C9B")]
		SDK,
		[Token(Token = "0x4001C9C")]
		Unity
	}

	[Token(Token = "0x200057E")]
	public struct ControllerPose
	{
		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6002263")]
		[Address(RVA = "0x1364C50", Offset = "0x1364C50", VA = "0x1364C50")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x200057F")]
	public struct PoseFrame
	{
		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6002264")]
		[Address(RVA = "0x135D9B8", Offset = "0x135D9B8", VA = "0x135D9B8")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x1364B9C", Offset = "0x1364B9C", VA = "0x1364B9C")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000117")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x1364BAC", Offset = "0x1364BAC", VA = "0x1364BAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x135BBAC", Offset = "0x135BBAC", VA = "0x135BBAC")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x1364C38", Offset = "0x1364C38", VA = "0x1364C38")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x1364C40", Offset = "0x1364C40", VA = "0x1364C40")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x200002D")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x1364DAC", Offset = "0x1364DAC", VA = "0x1364DAC")]
	private void Update()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x1364F14", Offset = "0x1364F14", VA = "0x1364F14")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x200002E")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x1364F80", Offset = "0x1364F80", VA = "0x1364F80")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x13650EC", Offset = "0x13650EC", VA = "0x13650EC")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x1365490", Offset = "0x1365490", VA = "0x1365490")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x13656AC", Offset = "0x13656AC", VA = "0x13656AC", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x13656D8", Offset = "0x13656D8", VA = "0x13656D8")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x200002F")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000580")]
	public enum TextureType
	{
		[Token(Token = "0x4001CAD")]
		DiffuseTextures,
		[Token(Token = "0x4001CAE")]
		NormalMaps,
		[Token(Token = "0x4001CAF")]
		RoughnessMaps,
		[Token(Token = "0x4001CB0")]
		Count
	}

	[Token(Token = "0x2000581")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x2000582")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x2000583")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x2000584")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6002265")]
		[Address(RVA = "0x1367B50", Offset = "0x1367B50", VA = "0x1367B50")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x2000585")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7F40", Offset = "0xBD7F40")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public System.Action callBack;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x1700030C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002269")]
			[Address(RVA = "0x136854C", Offset = "0x136854C", VA = "0x136854C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600226B")]
			[Address(RVA = "0x13685B4", Offset = "0x13685B4", VA = "0x13685B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0x1367964", Offset = "0x1367964", VA = "0x1367964")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0x1367E8C", Offset = "0x1367E8C", VA = "0x1367E8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0x1367E90", Offset = "0x1367E90", VA = "0x1367E90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0x1368554", Offset = "0x1368554", VA = "0x1368554", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000140")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000141")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000142")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000143")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x1365788", Offset = "0x1365788", VA = "0x1365788")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x136593C", Offset = "0x136593C", VA = "0x136593C")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x136597C", Offset = "0x136597C", VA = "0x136597C")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x13660CC", Offset = "0x13660CC", VA = "0x13660CC")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x1366368", Offset = "0x1366368", VA = "0x1366368")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x1365A10", Offset = "0x1365A10", VA = "0x1365A10")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x1366458", Offset = "0x1366458", VA = "0x1366458")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x1365E2C", Offset = "0x1365E2C", VA = "0x1365E2C")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x13666EC", Offset = "0x13666EC", VA = "0x13666EC")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x1366964", Offset = "0x1366964", VA = "0x1366964")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x1366A60", Offset = "0x1366A60", VA = "0x1366A60")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x1366A98", Offset = "0x1366A98", VA = "0x1366A98")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x1366034", Offset = "0x1366034", VA = "0x1366034")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE7FD0", Offset = "0xBE7FD0")]
	private IEnumerator RunLoadingAnimation(System.Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x1367990", Offset = "0x1367990", VA = "0x1367990")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000030")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000008")]
	public float Duration
	{
		[Token(Token = "0x6000132")]
		[Address(RVA = "0x135D7F8", Offset = "0x135D7F8", VA = "0x135D7F8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000009")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000133")]
		[Address(RVA = "0x135D934", Offset = "0x135D934", VA = "0x135D934")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x135DDF4", Offset = "0x135DDF4", VA = "0x135DDF4")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x135D688", Offset = "0x135D688", VA = "0x135D688")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x13685BC", Offset = "0x13685BC", VA = "0x13685BC")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x135D864", Offset = "0x135D864", VA = "0x135D864")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x13686E4", Offset = "0x13686E4", VA = "0x13686E4")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x13688EC", Offset = "0x13688EC", VA = "0x13688EC")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x1368B44", Offset = "0x1368B44", VA = "0x1368B44")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000031")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x600013B")]
	[Address(RVA = "0xECF260", Offset = "0xECF260", VA = "0xECF260")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xECF374", Offset = "0xECF374", VA = "0xECF374")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xECF520", Offset = "0xECF520", VA = "0xECF520")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xECF3E4", Offset = "0xECF3E4", VA = "0xECF3E4")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xECF478", Offset = "0xECF478", VA = "0xECF478")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000032")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000140")]
	[Address(RVA = "0xECEE60", Offset = "0xECEE60", VA = "0xECEE60")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xECF204", Offset = "0xECF204", VA = "0xECF204")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xECF000", Offset = "0xECF000", VA = "0xECF000")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xECF078", Offset = "0xECF078", VA = "0xECF078")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xECF114", Offset = "0xECF114", VA = "0xECF114")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000033")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x400014B")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x400014C")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1368D34", Offset = "0x1368D34", VA = "0x1368D34")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x1368DC0", Offset = "0x1368DC0", VA = "0x1368DC0", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1368DDC", Offset = "0x1368DDC", VA = "0x1368DDC")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1368F88", Offset = "0x1368F88", VA = "0x1368F88")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x136916C", Offset = "0x136916C", VA = "0x136916C")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000034")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x13691FC", Offset = "0x13691FC", VA = "0x13691FC")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x13692E0", Offset = "0x13692E0", VA = "0x13692E0")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x13694D4", Offset = "0x13694D4", VA = "0x13694D4")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x1369860", Offset = "0x1369860", VA = "0x1369860")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x1369958", Offset = "0x1369958", VA = "0x1369958")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000035")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000155")]
	Body = 1,
	[Token(Token = "0x4000156")]
	Hands = 2,
	[Token(Token = "0x4000157")]
	Base = 4,
	[Token(Token = "0x4000158")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000159")]
	Expressive = 0x20,
	[Token(Token = "0x400015A")]
	All = -1
}
[Token(Token = "0x2000036")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x400015C")]
	AvatarSpecification,
	[Token(Token = "0x400015D")]
	AssetLoaded,
	[Token(Token = "0x400015E")]
	Count
}
[Token(Token = "0x2000037")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000038")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000039")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000164")]
	Mesh,
	[Token(Token = "0x4000165")]
	Texture,
	[Token(Token = "0x4000166")]
	Pose,
	[Token(Token = "0x4000167")]
	Material,
	[Token(Token = "0x4000168")]
	CombinedMesh,
	[Token(Token = "0x4000169")]
	PBSMaterial,
	[Token(Token = "0x400016A")]
	FailedLoad,
	[Token(Token = "0x400016B")]
	Count
}
[Token(Token = "0x200003A")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x200003B")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x200003C")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x200003D")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200003E")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200003F")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x40001A0")]
	RGB24,
	[Token(Token = "0x40001A1")]
	DXT1,
	[Token(Token = "0x40001A2")]
	DXT5,
	[Token(Token = "0x40001A3")]
	ASTC_RGB_6x6,
	[Token(Token = "0x40001A4")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x40001A5")]
	Count
}
[Token(Token = "0x2000040")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000041")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x40001AD")]
	SkinnedMeshRender,
	[Token(Token = "0x40001AE")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40001AF")]
	ProjectorRender,
	[Token(Token = "0x40001B0")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40001B1")]
	Count
}
[Token(Token = "0x2000042")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40001B3")]
	Unknown,
	[Token(Token = "0x40001B4")]
	Default,
	[Token(Token = "0x40001B5")]
	Verbose,
	[Token(Token = "0x40001B6")]
	Debug,
	[Token(Token = "0x40001B7")]
	Info,
	[Token(Token = "0x40001B8")]
	Warn,
	[Token(Token = "0x40001B9")]
	Error,
	[Token(Token = "0x40001BA")]
	Fatal,
	[Token(Token = "0x40001BB")]
	Silent
}
[Token(Token = "0x2000043")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000044")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x40001C0")]
	One = 1,
	[Token(Token = "0x40001C1")]
	Two = 2,
	[Token(Token = "0x40001C2")]
	Three = 4,
	[Token(Token = "0x40001C3")]
	Joystick = 8
}
[Token(Token = "0x2000045")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40001C5")]
	One = 1,
	[Token(Token = "0x40001C6")]
	Two = 2,
	[Token(Token = "0x40001C7")]
	Joystick = 4,
	[Token(Token = "0x40001C8")]
	ThumbRest = 8,
	[Token(Token = "0x40001C9")]
	Index = 0x10,
	[Token(Token = "0x40001CA")]
	Pointing = 0x40,
	[Token(Token = "0x40001CB")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000046")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000047")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x2000048")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000049")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200004A")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200004B")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x200004C")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200004D")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200004E")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40001EB")]
	Add,
	[Token(Token = "0x40001EC")]
	Multiply,
	[Token(Token = "0x40001ED")]
	Count
}
[Token(Token = "0x200004F")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40001EF")]
	Color,
	[Token(Token = "0x40001F0")]
	Texture,
	[Token(Token = "0x40001F1")]
	TextureSingleChannel,
	[Token(Token = "0x40001F2")]
	Parallax,
	[Token(Token = "0x40001F3")]
	Count
}
[Token(Token = "0x2000050")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40001F5")]
	None,
	[Token(Token = "0x40001F6")]
	Positional,
	[Token(Token = "0x40001F7")]
	ViewReflection,
	[Token(Token = "0x40001F8")]
	Fresnel,
	[Token(Token = "0x40001F9")]
	Pulse,
	[Token(Token = "0x40001FA")]
	Count
}
[Token(Token = "0x2000051")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40001FC")]
	Touch,
	[Token(Token = "0x40001FD")]
	Malibu,
	[Token(Token = "0x40001FE")]
	Go,
	[Token(Token = "0x40001FF")]
	Quest,
	[Token(Token = "0x4000200")]
	Count
}
[Token(Token = "0x2000052")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000202")]
	Lowest = 1,
	[Token(Token = "0x4000203")]
	Medium = 3,
	[Token(Token = "0x4000204")]
	Highest = 5
}
[Token(Token = "0x2000053")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000206")]
	Unknown = -1,
	[Token(Token = "0x4000207")]
	One,
	[Token(Token = "0x4000208")]
	Two
}
[Token(Token = "0x2000054")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x2443A24", Offset = "0x2443A24", VA = "0x2443A24")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xD418AC", Offset = "0xD418AC", VA = "0xD418AC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xD418B4", Offset = "0xD418B4", VA = "0xD418B4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000055")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x2443D58", Offset = "0x2443D58", VA = "0x2443D58")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xD41AF0", Offset = "0xD41AF0", VA = "0xD41AF0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xD41AF8", Offset = "0xD41AF8", VA = "0xD41AF8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000056")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x24430CC", Offset = "0x24430CC", VA = "0x24430CC")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xD4160C", Offset = "0xD4160C", VA = "0xD4160C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xD41614", Offset = "0xD41614", VA = "0xD41614", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000057")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x2444284", Offset = "0x2444284", VA = "0x2444284")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xD433AC", Offset = "0xD433AC", VA = "0xD433AC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xD433B4", Offset = "0xD433B4", VA = "0xD433B4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000058")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x13602B8", Offset = "0x13602B8", VA = "0x13602B8")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000059")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x200005A")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x400023D")]
	FirstPerson = 1,
	[Token(Token = "0x400023E")]
	ThirdPerson = 2,
	[Token(Token = "0x400023F")]
	SelfOccluding = 4
}
[Token(Token = "0x200005B")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200005C")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200005D")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x200005E")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200005F")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000255")]
	Default,
	[Token(Token = "0x4000256")]
	GripSphere,
	[Token(Token = "0x4000257")]
	GripCube,
	[Token(Token = "0x4000258")]
	Count
}
[Token(Token = "0x2000060")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x400025A")]
	Body,
	[Token(Token = "0x400025B")]
	Clothing,
	[Token(Token = "0x400025C")]
	Eyewear,
	[Token(Token = "0x400025D")]
	Hair,
	[Token(Token = "0x400025E")]
	Beard,
	[Token(Token = "0x400025F")]
	Count
}
[Token(Token = "0x2000061")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x2000062")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000063")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x2000064")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000065")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000269")]
	AvatarHead,
	[Token(Token = "0x400026A")]
	AvatarHand,
	[Token(Token = "0x400026B")]
	Object,
	[Token(Token = "0x400026C")]
	ObjectStatic,
	[Token(Token = "0x400026D")]
	Count
}
[Token(Token = "0x2000066")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x2000067")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x2000068")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000069")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x200006A")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000279")]
	Point,
	[Token(Token = "0x400027A")]
	Direction,
	[Token(Token = "0x400027B")]
	Spot,
	[Token(Token = "0x400027C")]
	Count
}
[Token(Token = "0x200006B")]
public struct ovrAvatarLight
{
	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x200006C")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x200006D")]
public struct ovrAvatarLights
{
	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x200006E")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x200006F")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000292")]
	None = 0u,
	[Token(Token = "0x4000293")]
	GazeTarget = 1u,
	[Token(Token = "0x4000294")]
	Any = uint.MaxValue
}
[Token(Token = "0x2000070")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000071")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000072")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000073")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000074")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000075")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x2000586")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x600226C")]
		[Address(RVA = "0xCFB7AC", Offset = "0xCFB7AC", VA = "0xCFB7AC")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x40002A9")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x1700000A")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000170")]
		[Address(RVA = "0x135BE00", Offset = "0x135BE00", VA = "0x135BE00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x1369968", Offset = "0x1369968", VA = "0x1369968")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x1369BFC", Offset = "0x1369BFC", VA = "0x1369BFC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x1369C70", Offset = "0x1369C70", VA = "0x1369C70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x136A4B4", Offset = "0x136A4B4", VA = "0x136A4B4")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x136A50C", Offset = "0x136A50C", VA = "0x136A50C")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x135C654", Offset = "0x135C654", VA = "0x135C654")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x135CBD8", Offset = "0x135CBD8", VA = "0x135CBD8")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x135C5C0", Offset = "0x135C5C0", VA = "0x135C5C0")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x136A2EC", Offset = "0x136A2EC", VA = "0x136A2EC")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x135C034", Offset = "0x135C034", VA = "0x135C034")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x135C150", Offset = "0x135C150", VA = "0x135C150")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x135BFB4", Offset = "0x135BFB4", VA = "0x135BFB4")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x136A5B0", Offset = "0x136A5B0", VA = "0x136A5B0")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x1369BB0", Offset = "0x1369BB0", VA = "0x1369BB0")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x136612C", Offset = "0x136612C", VA = "0x136612C")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x136A688", Offset = "0x136A688", VA = "0x136A688")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000076")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700000B")]
	public static string AppID
	{
		[Token(Token = "0x6000181")]
		[Address(RVA = "0x136A648", Offset = "0x136A648", VA = "0x136A648")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000182")]
		[Address(RVA = "0x136A7CC", Offset = "0x136A7CC", VA = "0x136A7CC")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000183")]
		[Address(RVA = "0x136A668", Offset = "0x136A668", VA = "0x136A668")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000184")]
		[Address(RVA = "0x136A7FC", Offset = "0x136A7FC", VA = "0x136A7FC")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000185")]
		[Address(RVA = "0x136A6A0", Offset = "0x136A6A0", VA = "0x136A6A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000186")]
		[Address(RVA = "0x136A82C", Offset = "0x136A82C", VA = "0x136A82C")]
		set
		{
		}
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x136A884", Offset = "0x136A884", VA = "0x136A884")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000077")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x1359D08", Offset = "0x1359D08", VA = "0x1359D08")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x13627BC", Offset = "0x13627BC", VA = "0x13627BC")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x136BC30", Offset = "0x136BC30", VA = "0x136BC30")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x136BD90", Offset = "0x136BD90", VA = "0x136BD90")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000078")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x1359F5C", Offset = "0x1359F5C", VA = "0x1359F5C")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x13629E4", Offset = "0x13629E4", VA = "0x13629E4")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x136BDA0", Offset = "0x136BDA0", VA = "0x136BDA0")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000079")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x40002B8")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x40002B9")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x40002BA")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x135A288", Offset = "0x135A288", VA = "0x135A288")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x1362B7C", Offset = "0x1362B7C", VA = "0x1362B7C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x136B3EC", Offset = "0x136B3EC", VA = "0x136B3EC")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x136AB24", Offset = "0x136AB24", VA = "0x136AB24")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x136A8F4", Offset = "0x136A8F4", VA = "0x136A8F4")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x136AA08", Offset = "0x136AA08", VA = "0x136AA08")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x136BC20", Offset = "0x136BC20", VA = "0x136BC20")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x200007A")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000587")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x2000588")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x600226D")]
		[Address(RVA = "0xCFB868", Offset = "0xCFB868", VA = "0xCFB868")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000589")]
	public struct TextureSet
	{
		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x600226E")]
		[Address(RVA = "0xCFB93C", Offset = "0xCFB93C", VA = "0xCFB93C")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x200058A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7F50", Offset = "0xBD7F50")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x1700030E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002272")]
			[Address(RVA = "0x136D3A8", Offset = "0x136D3A8", VA = "0x136D3A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002274")]
			[Address(RVA = "0x136D410", Offset = "0x136D410", VA = "0x136D410", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0x136CCEC", Offset = "0x136CCEC", VA = "0x136CCEC")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0x136CE94", Offset = "0x136CE94", VA = "0x136CE94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0x136CE98", Offset = "0x136CE98", VA = "0x136CE98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0x136D3B0", Offset = "0x136D3B0", VA = "0x136D3B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x40002BE")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x40002BF")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x40002C2")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x40002C3")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x40002C4")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x40002C5")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x40002C6")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x40002C7")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x40002C8")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x136C554", Offset = "0x136C554", VA = "0x136C554")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x136C9A8", Offset = "0x136C9A8", VA = "0x136C9A8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x13684FC", Offset = "0x13684FC", VA = "0x13684FC")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x136653C", Offset = "0x136653C", VA = "0x136653C")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x136CB20", Offset = "0x136CB20", VA = "0x136CB20")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x13661B0", Offset = "0x13661B0", VA = "0x13661B0")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x13663B0", Offset = "0x13663B0", VA = "0x13663B0")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x136CC3C", Offset = "0x136CC3C", VA = "0x136CC3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE80D4", Offset = "0xBE80D4")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x136A564", Offset = "0x136A564", VA = "0x136A564")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x136CD18", Offset = "0x136CD18", VA = "0x136CD18")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x200007B")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x136D418", Offset = "0x136D418", VA = "0x136D418")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x136D580", Offset = "0x136D580", VA = "0x136D580")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x200007C")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x60001A2")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xF1A268", Offset = "0xF1A268", VA = "0xF1A268")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x200007D")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD909C", Offset = "0xBD909C")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD90D4", Offset = "0xBD90D4")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD910C", Offset = "0xBD910C")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xFA1828", Offset = "0xFA1828", VA = "0xFA1828")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xFA182C", Offset = "0xFA182C", VA = "0xFA182C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xFA18AC", Offset = "0xFA18AC", VA = "0xFA18AC")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xFA1A98", Offset = "0xFA1A98", VA = "0xFA1A98")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x200007E")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool XRButtonBeingPressed;

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xFA1AC8", Offset = "0xFA1AC8", VA = "0xFA1AC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xFA1BCC", Offset = "0xFA1BCC", VA = "0xFA1BCC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xFA1EE0", Offset = "0xFA1EE0", VA = "0xFA1EE0")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xFA216C", Offset = "0xFA216C", VA = "0xFA216C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xFA21BC", Offset = "0xFA21BC", VA = "0xFA21BC")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x200007F")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x1700000E")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x14721CC", Offset = "0x14721CC", VA = "0x14721CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x147248C", Offset = "0x147248C", VA = "0x147248C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x14725D0", Offset = "0x14725D0", VA = "0x14725D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x1472504", Offset = "0x1472504", VA = "0x1472504")]
	public void Init()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x1470374", Offset = "0x1470374", VA = "0x1470374")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x1472758", Offset = "0x1472758", VA = "0x1472758")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x147030C", Offset = "0x147030C", VA = "0x147030C")]
	public static void Clear()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x14703F4", Offset = "0x14703F4", VA = "0x14703F4")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x1472668", Offset = "0x1472668", VA = "0x1472668")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x14727F8", Offset = "0x14727F8", VA = "0x14727F8")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x1472834", Offset = "0x1472834", VA = "0x1472834")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x1472A28", Offset = "0x1472A28", VA = "0x1472A28")]
	private void Prune()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x1472844", Offset = "0x1472844", VA = "0x1472844")]
	private void Display()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x1472AD8", Offset = "0x1472AD8", VA = "0x1472AD8")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x2000080")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x14735E0", Offset = "0x14735E0", VA = "0x14735E0")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x2000081")]
public static class OVRTouchpad
{
	[Token(Token = "0x200058B")]
	public enum TouchEvent
	{
		[Token(Token = "0x4001CE3")]
		SingleTap,
		[Token(Token = "0x4001CE4")]
		DoubleTap,
		[Token(Token = "0x4001CE5")]
		Left,
		[Token(Token = "0x4001CE6")]
		Right,
		[Token(Token = "0x4001CE7")]
		Up,
		[Token(Token = "0x4001CE8")]
		Down
	}

	[Token(Token = "0x200058C")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x146EF64", Offset = "0x146EF64", VA = "0x146EF64")]
	public static void Create()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x14787B4", Offset = "0x14787B4", VA = "0x14787B4")]
	public static void Update()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x1478AD4", Offset = "0x1478AD4", VA = "0x1478AD4")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x1478924", Offset = "0x1478924", VA = "0x1478924")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x146FE54", Offset = "0x146FE54", VA = "0x146FE54")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x2000082")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x1478B94", Offset = "0x1478B94", VA = "0x1478B94")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x1478C10", Offset = "0x1478C10", VA = "0x1478C10")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x1478CA8", Offset = "0x1478CA8", VA = "0x1478CA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x1478D04", Offset = "0x1478D04", VA = "0x1478D04")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x1478D68", Offset = "0x1478D68", VA = "0x1478D68")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x1478D6C", Offset = "0x1478D6C", VA = "0x1478D6C")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x2000083")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x200058D")]
	public enum Result
	{
		[Token(Token = "0x4001CEA")]
		Success = 0,
		[Token(Token = "0x4001CEB")]
		Unknown = -2200,
		[Token(Token = "0x4001CEC")]
		CannotCreateContext = -2201,
		[Token(Token = "0x4001CED")]
		InvalidParam = -2202,
		[Token(Token = "0x4001CEE")]
		BadSampleRate = -2203,
		[Token(Token = "0x4001CEF")]
		MissingDLL = -2204,
		[Token(Token = "0x4001CF0")]
		BadVersion = -2205,
		[Token(Token = "0x4001CF1")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x200058E")]
	public enum AudioDataType
	{
		[Token(Token = "0x4001CF3")]
		S16_Mono,
		[Token(Token = "0x4001CF4")]
		S16_Stereo,
		[Token(Token = "0x4001CF5")]
		F32_Mono,
		[Token(Token = "0x4001CF6")]
		F32_Stereo
	}

	[Token(Token = "0x200058F")]
	public enum Viseme
	{
		[Token(Token = "0x4001CF8")]
		sil,
		[Token(Token = "0x4001CF9")]
		PP,
		[Token(Token = "0x4001CFA")]
		FF,
		[Token(Token = "0x4001CFB")]
		TH,
		[Token(Token = "0x4001CFC")]
		DD,
		[Token(Token = "0x4001CFD")]
		kk,
		[Token(Token = "0x4001CFE")]
		CH,
		[Token(Token = "0x4001CFF")]
		SS,
		[Token(Token = "0x4001D00")]
		nn,
		[Token(Token = "0x4001D01")]
		RR,
		[Token(Token = "0x4001D02")]
		aa,
		[Token(Token = "0x4001D03")]
		E,
		[Token(Token = "0x4001D04")]
		ih,
		[Token(Token = "0x4001D05")]
		oh,
		[Token(Token = "0x4001D06")]
		ou
	}

	[Token(Token = "0x2000590")]
	public enum Signals
	{
		[Token(Token = "0x4001D08")]
		VisemeOn,
		[Token(Token = "0x4001D09")]
		VisemeOff,
		[Token(Token = "0x4001D0A")]
		VisemeAmount,
		[Token(Token = "0x4001D0B")]
		VisemeSmoothing,
		[Token(Token = "0x4001D0C")]
		LaughterAmount
	}

	[Token(Token = "0x2000591")]
	public enum ContextProviders
	{
		[Token(Token = "0x4001D0E")]
		Original,
		[Token(Token = "0x4001D0F")]
		Enhanced,
		[Token(Token = "0x4001D10")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x2000592")]
	public class Frame
	{
		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x6002279")]
		[Address(RVA = "0x146FBB0", Offset = "0x146FBB0", VA = "0x146FBB0")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x600227A")]
		[Address(RVA = "0x146FC08", Offset = "0x146FC08", VA = "0x146FC08")]
		public void Reset()
		{
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0x146FC98", Offset = "0x146FC98", VA = "0x146FC98")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x40002E3")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x146E528", Offset = "0x146E528", VA = "0x146E528")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x146E5B8", Offset = "0x146E5B8", VA = "0x146E5B8")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x146E628", Offset = "0x146E628", VA = "0x146E628")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x146E6BC", Offset = "0x146E6BC", VA = "0x146E6BC")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x146E764", Offset = "0x146E764", VA = "0x146E764")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x146E830", Offset = "0x146E830", VA = "0x146E830")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x146E8B0", Offset = "0x146E8B0", VA = "0x146E8B0")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x146E930", Offset = "0x146E930", VA = "0x146E930")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x146E9D8", Offset = "0x146E9D8", VA = "0x146E9D8")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x146EAE0", Offset = "0x146EAE0", VA = "0x146EAE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x146EF68", Offset = "0x146EF68", VA = "0x146EF68")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x146EE2C", Offset = "0x146EE2C", VA = "0x146EE2C")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x146F048", Offset = "0x146F048", VA = "0x146F048")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x146F15C", Offset = "0x146F15C", VA = "0x146F15C")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x146F1CC", Offset = "0x146F1CC", VA = "0x146F1CC")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x146F234", Offset = "0x146F234", VA = "0x146F234")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x146F358", Offset = "0x146F358", VA = "0x146F358")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x146F490", Offset = "0x146F490", VA = "0x146F490")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x146F570", Offset = "0x146F570", VA = "0x146F570")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x146F650", Offset = "0x146F650", VA = "0x146F650")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x146F754", Offset = "0x146F754", VA = "0x146F754")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x146F8F8", Offset = "0x146F8F8", VA = "0x146F8F8")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x146FA94", Offset = "0x146FA94", VA = "0x146FA94")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x2000084")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCFB88", Offset = "0xBCFB88")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9144", Offset = "0xBD9144")]
	public bool enableKeyboardInput;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD917C", Offset = "0xBD917C")]
	public bool enableTouchInput;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD91B4", Offset = "0xBD91B4")]
	public bool audioLoopback;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD91EC", Offset = "0xBD91EC")]
	public KeyCode loopbackKey;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9224", Offset = "0xBD9224")]
	public bool showVisemes;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD925C", Offset = "0xBD925C")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9294", Offset = "0xBD9294")]
	public bool skipAudioSource;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD92CC", Offset = "0xBD92CC")]
	public float gain;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x146FD2C", Offset = "0x146FD2C", VA = "0x146FD2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x146FF28", Offset = "0x146FF28", VA = "0x146FF28")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x1470474", Offset = "0x1470474", VA = "0x1470474")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x1470720", Offset = "0x1470720", VA = "0x1470720")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x1470784", Offset = "0x1470784", VA = "0x1470784")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x14707F0", Offset = "0x14707F0", VA = "0x14707F0")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x1470994", Offset = "0x1470994", VA = "0x1470994")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x1470B38", Offset = "0x1470B38", VA = "0x1470B38")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x1470C6C", Offset = "0x1470C6C", VA = "0x1470C6C")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x14704B8", Offset = "0x14704B8", VA = "0x14704B8")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x1470238", Offset = "0x1470238", VA = "0x1470238")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x1470C7C", Offset = "0x1470C7C", VA = "0x1470C7C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x1470DA8", Offset = "0x1470DA8", VA = "0x1470DA8")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x2000085")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCFBEC", Offset = "0xBCFBEC")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9304", Offset = "0xBD9304")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD933C", Offset = "0xBD933C")]
	public bool enableAcceleration;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x1700000F")]
	public int Smoothing
	{
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x1470F34", Offset = "0x1470F34", VA = "0x1470F34")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x1470E48", Offset = "0x1470E48", VA = "0x1470E48")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public uint Context
	{
		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x1470F3C", Offset = "0x1470F3C", VA = "0x1470F3C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000011")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x60001F1")]
		[Address(RVA = "0x1470F44", Offset = "0x1470F44", VA = "0x1470F44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x1470F4C", Offset = "0x1470F4C", VA = "0x1470F4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x14710F4", Offset = "0x14710F4", VA = "0x14710F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x1471218", Offset = "0x1471218", VA = "0x1471218")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x1471220", Offset = "0x1471220", VA = "0x1471220")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x1471314", Offset = "0x1471314", VA = "0x1471314")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x14713DC", Offset = "0x14713DC", VA = "0x14713DC")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x1470DCC", Offset = "0x1470DCC", VA = "0x1470DCC")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x2000086")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCFC50", Offset = "0xBCFC50")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9374", Offset = "0xBD9374")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x1471454", Offset = "0x1471454", VA = "0x1471454")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x14715C4", Offset = "0x14715C4", VA = "0x14715C4")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x2000087")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD93AC", Offset = "0xBD93AC")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD93E4", Offset = "0xBD93E4")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD941C", Offset = "0xBD941C")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9454", Offset = "0xBD9454")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD948C", Offset = "0xBD948C")]
	public KeyCode laughterKey;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD94C4", Offset = "0xBD94C4")]
	public int laughterBlendTarget;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBD94FC", Offset = "0xBD94FC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD94FC", Offset = "0xBD94FC")]
	public float laughterThreshold;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBD9550", Offset = "0xBD9550")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9550", Offset = "0xBD9550")]
	public float laughterMultiplier;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBD95A4", Offset = "0xBD95A4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD95A4", Offset = "0xBD95A4")]
	public int smoothAmount;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x14715C8", Offset = "0x14715C8", VA = "0x14715C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x147171C", Offset = "0x147171C", VA = "0x147171C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x14719CC", Offset = "0x14719CC", VA = "0x14719CC")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x1471828", Offset = "0x1471828", VA = "0x1471828")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x14718DC", Offset = "0x14718DC", VA = "0x14718DC")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x1471A9C", Offset = "0x1471A9C", VA = "0x1471A9C")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x1471B60", Offset = "0x1471B60", VA = "0x1471B60")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x1471BC8", Offset = "0x1471BC8", VA = "0x1471BC8")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x2000088")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD95FC", Offset = "0xBD95FC")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0xBD95FC", Offset = "0xBD95FC")]
	public Texture[] Textures;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBD982C", Offset = "0xBD982C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD982C", Offset = "0xBD982C")]
	public int smoothAmount;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x1471CD8", Offset = "0x1471CD8", VA = "0x1471CD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x1471E3C", Offset = "0x1471E3C", VA = "0x1471E3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x1471FE4", Offset = "0x1471FE4", VA = "0x1471FE4")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x1472108", Offset = "0x1472108", VA = "0x1472108")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x2000089")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCFCB4", Offset = "0xBCFCB4")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x2000593")]
	public enum micActivation
	{
		[Token(Token = "0x4001D16")]
		HoldToSpeak,
		[Token(Token = "0x4001D17")]
		PushToSpeak,
		[Token(Token = "0x4001D18")]
		ConstantSpeak
	}

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9884", Offset = "0xBD9884")]
	public AudioSource audioSource;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD98BC", Offset = "0xBD98BC")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD98F4", Offset = "0xBD98F4")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBD992C", Offset = "0xBD992C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD992C", Offset = "0xBD992C")]
	private float micInputVolume;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9994", Offset = "0xBD9994")]
	private int micFrequency;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD99E0", Offset = "0xBD99E0")]
	public micActivation micControl;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9A18", Offset = "0xBD9A18")]
	public KeyCode micActivationKey;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9A50", Offset = "0xBD9A50")]
	public string selectedDevice;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x17000012")]
	public float MicFrequency
	{
		[Token(Token = "0x6000207")]
		[Address(RVA = "0x1472B58", Offset = "0x1472B58", VA = "0x1472B58")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000208")]
		[Address(RVA = "0x1472B64", Offset = "0x1472B64", VA = "0x1472B64")]
		set
		{
		}
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x1472BF0", Offset = "0x1472BF0", VA = "0x1472BF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x1472CB8", Offset = "0x1472CB8", VA = "0x1472CB8")]
	private void Start()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x1472D04", Offset = "0x1472D04", VA = "0x1472D04")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x1472E54", Offset = "0x1472E54", VA = "0x1472E54")]
	private void Update()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x147328C", Offset = "0x147328C", VA = "0x147328C")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x14732A0", Offset = "0x14732A0", VA = "0x14732A0")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x14732B8", Offset = "0x14732B8", VA = "0x14732B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x14732BC", Offset = "0x14732BC", VA = "0x14732BC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x1473334", Offset = "0x1473334", VA = "0x1473334")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x1472D98", Offset = "0x1472D98", VA = "0x1472D98")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x14730F8", Offset = "0x14730F8", VA = "0x14730F8")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x1472FB0", Offset = "0x1472FB0", VA = "0x1472FB0")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x147352C", Offset = "0x147352C", VA = "0x147352C")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x1473534", Offset = "0x1473534", VA = "0x1473534")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x200008A")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x1471520", Offset = "0x1471520", VA = "0x1471520")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x1473564", Offset = "0x1473564", VA = "0x1473564")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x200008B")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000594")]
	public delegate void OnClick();

	[Token(Token = "0x2000595")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000596")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000597")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000598")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7F60", Offset = "0xBD7F60")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x600228C")]
		[Address(RVA = "0xF06C7C", Offset = "0xF06C7C", VA = "0xF06C7C")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0xF07690", Offset = "0xF07690", VA = "0xF07690")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000599")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7F70", Offset = "0xBD7F70")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x600228E")]
		[Address(RVA = "0xF06EFC", Offset = "0xF06EFC", VA = "0xF06EFC")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0xF078B4", Offset = "0xF078B4", VA = "0xF078B4")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x200059A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7F80", Offset = "0xBD7F80")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6002290")]
		[Address(RVA = "0xF07134", Offset = "0xF07134", VA = "0xF07134")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0xF07B38", Offset = "0xF07B38", VA = "0xF07B38")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200059B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7F90", Offset = "0xBD7F90")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6002292")]
		[Address(RVA = "0xF072E8", Offset = "0xF072E8", VA = "0xF072E8")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0xF07F10", Offset = "0xF07F10", VA = "0xF07F10")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200059C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7FA0", Offset = "0xBD7FA0")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6002294")]
		[Address(RVA = "0xF0755C", Offset = "0xF0755C", VA = "0xF0755C")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0xF07F30", Offset = "0xF07F30", VA = "0xF07F30")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000317")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000318")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000319")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000326")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000327")]
	private const float marginH = 16f;

	[Token(Token = "0x4000328")]
	private const float marginV = 16f;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xF05B48", Offset = "0xF05B48", VA = "0xF05B48")]
	public void Awake()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xF05FC8", Offset = "0xF05FC8", VA = "0xF05FC8")]
	public void Show()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xF065A8", Offset = "0xF065A8", VA = "0xF065A8")]
	public void Hide()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xF06354", Offset = "0xF06354", VA = "0xF06354")]
	private void Relayout()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xF06750", Offset = "0xF06750", VA = "0xF06750")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xF06A48", Offset = "0xF06A48", VA = "0xF06A48")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xF06C84", Offset = "0xF06C84", VA = "0xF06C84")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xF06D68", Offset = "0xF06D68", VA = "0xF06D68")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xF06F04", Offset = "0xF06F04", VA = "0xF06F04")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xF06FA0", Offset = "0xF06FA0", VA = "0xF06FA0")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xF0713C", Offset = "0xF0713C", VA = "0xF0713C")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xF072F0", Offset = "0xF072F0", VA = "0xF072F0")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xF07564", Offset = "0xF07564", VA = "0xF07564")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xF07614", Offset = "0xF07614", VA = "0xF07614")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200008C")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xF231FC", Offset = "0xF231FC", VA = "0xF231FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xF23298", Offset = "0xF23298", VA = "0xF23298")]
	private void Update()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xF23360", Offset = "0xF23360", VA = "0xF23360")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xF2339C", Offset = "0xF2339C", VA = "0xF2339C")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200008D")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x200059D")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4001D22")]
		On,
		[Token(Token = "0x4001D23")]
		Off,
		[Token(Token = "0x4001D24")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000013")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x600022C")]
		[Address(RVA = "0xF9BE98", Offset = "0xF9BE98", VA = "0xF9BE98")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x600022B")]
		[Address(RVA = "0xF9BE54", Offset = "0xF9BE54", VA = "0xF9BE54")]
		set
		{
		}
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xF9BEA0", Offset = "0xF9BEA0", VA = "0xF9BEA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xF9BF00", Offset = "0xF9BF00", VA = "0xF9BF00")]
	private void Start()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xF9C018", Offset = "0xF9C018", VA = "0xF9C018", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xF9C034", Offset = "0xF9C034", VA = "0xF9C034", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xF9C088", Offset = "0xF9C088", VA = "0xF9C088")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xF9C2E4", Offset = "0xF9C2E4", VA = "0xF9C2E4")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xF9C3F8", Offset = "0xF9C3F8", VA = "0xF9C3F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xF9C48C", Offset = "0xF9C48C", VA = "0xF9C48C")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xF9C55C", Offset = "0xF9C55C", VA = "0xF9C55C")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xF9C614", Offset = "0xF9C614", VA = "0xF9C614")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xF9C6E0", Offset = "0xF9C6E0", VA = "0xF9C6E0")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200008E")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xED5C44", Offset = "0xED5C44", VA = "0xED5C44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xED5E50", Offset = "0xED5E50", VA = "0xED5E50")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xED62F0", Offset = "0xED62F0", VA = "0xED62F0")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x200008F")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xF21024", Offset = "0xF21024", VA = "0xF21024")]
	private void Start()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xF21158", Offset = "0xF21158", VA = "0xF21158")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xF213A8", Offset = "0xF213A8", VA = "0xF213A8")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x2000090")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x17000014")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x6000240")]
		[Address(RVA = "0xF21454", Offset = "0xF21454", VA = "0xF21454")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000001")]
	public event System.Action TrackingChanged
	{
		[Token(Token = "0x600023E")]
		[Address(RVA = "0xF210B4", Offset = "0xF210B4", VA = "0xF210B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8138", Offset = "0xBE8138")]
		add
		{
		}
		[Token(Token = "0x600023F")]
		[Address(RVA = "0xF213B0", Offset = "0xF213B0", VA = "0xF213B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8148", Offset = "0xBE8148")]
		remove
		{
		}
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xF21460", Offset = "0xF21460", VA = "0xF21460")]
	private void Start()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xF215B8", Offset = "0xF215B8", VA = "0xF215B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xF2172C", Offset = "0xF2172C", VA = "0xF2172C")]
	private void Recentered()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xF21734", Offset = "0xF21734", VA = "0xF21734")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x2000091")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9B38", Offset = "0xBD9B38")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9B70", Offset = "0xBD9B70")]
	public bool EnableCollision;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9BA8", Offset = "0xBD9BA8")]
	public float MaxFade;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9BE0", Offset = "0xBD9BE0")]
	public float FadeMinDistance;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9C18", Offset = "0xBD9C18")]
	public float FadeMaxDistance;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly System.Action _cameraUpdateAction;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly System.Action _preCharacterMovementAction;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xED8878", Offset = "0xED8878", VA = "0xED8878")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xED8908", Offset = "0xED8908", VA = "0xED8908")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xED898C", Offset = "0xED898C", VA = "0xED898C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xED8990", Offset = "0xED8990", VA = "0xED8990")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xED89B4", Offset = "0xED89B4", VA = "0xED89B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xED89D8", Offset = "0xED89D8", VA = "0xED89D8")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x2000092")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xFA4610", Offset = "0xFA4610", VA = "0xFA4610")]
	private void Start()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xFA46D4", Offset = "0xFA46D4", VA = "0xFA46D4")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000093")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x200059E")]
	public enum States
	{
		[Token(Token = "0x4001D26")]
		Ready,
		[Token(Token = "0x4001D27")]
		Aim,
		[Token(Token = "0x4001D28")]
		CancelAim,
		[Token(Token = "0x4001D29")]
		PreTeleport,
		[Token(Token = "0x4001D2A")]
		CancelTeleport,
		[Token(Token = "0x4001D2B")]
		Teleporting,
		[Token(Token = "0x4001D2C")]
		PostTeleport
	}

	[Token(Token = "0x200059F")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4001D2E")]
		None,
		[Token(Token = "0x4001D2F")]
		Aim,
		[Token(Token = "0x4001D30")]
		PreTeleport,
		[Token(Token = "0x4001D31")]
		Teleport
	}

	[Token(Token = "0x20005A0")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4001D33")]
		Point,
		[Token(Token = "0x4001D34")]
		Sphere,
		[Token(Token = "0x4001D35")]
		Capsule
	}

	[Token(Token = "0x20005A1")]
	public class AimData
	{
		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE72A0", Offset = "0xBE72A0")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000310")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6002297")]
			[Address(RVA = "0xFA79BC", Offset = "0xFA79BC", VA = "0xFA79BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEBC94", Offset = "0xBEBC94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002298")]
			[Address(RVA = "0xFA79C4", Offset = "0xFA79C4", VA = "0xFA79C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEBCA4", Offset = "0xBEBCA4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0xFA7940", Offset = "0xFA7940", VA = "0xFA7940")]
		public AimData()
		{
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0xFA79CC", Offset = "0xFA79CC", VA = "0xFA79CC")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20005A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7FB0", Offset = "0xBD7FB0")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000311")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600229D")]
			[Address(RVA = "0xFA7780", Offset = "0xFA7780", VA = "0xFA7780", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000312")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600229F")]
			[Address(RVA = "0xFA77E8", Offset = "0xFA77E8", VA = "0xFA77E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600229A")]
		[Address(RVA = "0xFA5BC8", Offset = "0xFA5BC8", VA = "0xFA5BC8")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0xFA7678", Offset = "0xFA7678", VA = "0xFA7678", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600229C")]
		[Address(RVA = "0xFA767C", Offset = "0xFA767C", VA = "0xFA767C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0xFA7788", Offset = "0xFA7788", VA = "0xFA7788", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7FC0", Offset = "0xBD7FC0")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000313")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022A3")]
			[Address(RVA = "0xFA7104", Offset = "0xFA7104", VA = "0xFA7104", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000314")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022A5")]
			[Address(RVA = "0xFA716C", Offset = "0xFA716C", VA = "0xFA716C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0xFA60BC", Offset = "0xFA60BC", VA = "0xFA60BC")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0xFA6FB4", Offset = "0xFA6FB4", VA = "0xFA6FB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0xFA6FB8", Offset = "0xFA6FB8", VA = "0xFA6FB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0xFA710C", Offset = "0xFA710C", VA = "0xFA710C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7FD0", Offset = "0xBD7FD0")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000315")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022A9")]
			[Address(RVA = "0xFA7224", Offset = "0xFA7224", VA = "0xFA7224", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000316")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022AB")]
			[Address(RVA = "0xFA728C", Offset = "0xFA728C", VA = "0xFA728C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0xFA62AC", Offset = "0xFA62AC", VA = "0xFA62AC")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0xFA7174", Offset = "0xFA7174", VA = "0xFA7174", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0xFA7178", Offset = "0xFA7178", VA = "0xFA7178", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0xFA722C", Offset = "0xFA722C", VA = "0xFA722C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7FE0", Offset = "0xBD7FE0")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000317")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022AF")]
			[Address(RVA = "0xFA7608", Offset = "0xFA7608", VA = "0xFA7608", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000318")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022B1")]
			[Address(RVA = "0xFA7670", Offset = "0xFA7670", VA = "0xFA7670", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0xFA649C", Offset = "0xFA649C", VA = "0xFA649C")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0xFA7524", Offset = "0xFA7524", VA = "0xFA7524", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0xFA7528", Offset = "0xFA7528", VA = "0xFA7528", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0xFA7610", Offset = "0xFA7610", VA = "0xFA7610", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7FF0", Offset = "0xBD7FF0")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000319")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022B5")]
			[Address(RVA = "0xFA7344", Offset = "0xFA7344", VA = "0xFA7344", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022B7")]
			[Address(RVA = "0xFA73AC", Offset = "0xFA73AC", VA = "0xFA73AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0xFA668C", Offset = "0xFA668C", VA = "0xFA668C")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0xFA7294", Offset = "0xFA7294", VA = "0xFA7294", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0xFA7298", Offset = "0xFA7298", VA = "0xFA7298", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0xFA734C", Offset = "0xFA734C", VA = "0xFA734C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8000", Offset = "0xBD8000")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700031B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022BB")]
			[Address(RVA = "0xFA78D0", Offset = "0xFA78D0", VA = "0xFA78D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022BD")]
			[Address(RVA = "0xFA7938", Offset = "0xFA7938", VA = "0xFA7938", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0xFA687C", Offset = "0xFA687C", VA = "0xFA687C")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0xFA77F0", Offset = "0xFA77F0", VA = "0xFA77F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0xFA77F4", Offset = "0xFA77F4", VA = "0xFA77F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0xFA78D8", Offset = "0xFA78D8", VA = "0xFA78D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8010", Offset = "0xBD8010")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700031D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022C1")]
			[Address(RVA = "0xFA74B4", Offset = "0xFA74B4", VA = "0xFA74B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022C3")]
			[Address(RVA = "0xFA751C", Offset = "0xFA751C", VA = "0xFA751C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0xFA6A6C", Offset = "0xFA6A6C", VA = "0xFA6A6C")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0xFA73B4", Offset = "0xFA73B4", VA = "0xFA73B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0xFA73B8", Offset = "0xFA73B8", VA = "0xFA73B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0xFA74BC", Offset = "0xFA74BC", VA = "0xFA74BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9C50", Offset = "0xBD9C50")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9C88", Offset = "0xBD9C88")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9CC0", Offset = "0xBD9CC0")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9CF8", Offset = "0xBD9CF8")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9D30", Offset = "0xBD9D30")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9D68", Offset = "0xBD9D68")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9DA0", Offset = "0xBD9DA0")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9DD8", Offset = "0xBD9DD8")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD9E10", Offset = "0xBD9E10")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9E20", Offset = "0xBD9E20")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9E58", Offset = "0xBD9E58")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD9EA0", Offset = "0xBD9EA0")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9EB0", Offset = "0xBD9EB0")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9EE8", Offset = "0xBD9EE8")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9F20", Offset = "0xBD9F20")]
	public float AimCollisionRadius;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9F58", Offset = "0xBD9F58")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000015")]
	public States CurrentState
	{
		[Token(Token = "0x600024F")]
		[Address(RVA = "0xFA50C4", Offset = "0xFA50C4", VA = "0xFA50C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8158", Offset = "0xBE8158")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000250")]
		[Address(RVA = "0xFA50CC", Offset = "0xFA50CC", VA = "0xFA50CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8168", Offset = "0xBE8168")]
		private set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000254")]
		[Address(RVA = "0xFA52FC", Offset = "0xFA52FC", VA = "0xFA52FC")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000017")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000255")]
		[Address(RVA = "0xFA5324", Offset = "0xFA5324", VA = "0xFA5324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8198", Offset = "0xBE8198")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000256")]
		[Address(RVA = "0xFA532C", Offset = "0xFA532C", VA = "0xFA532C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE81A8", Offset = "0xBE81A8")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000251")]
		[Address(RVA = "0xFA50D4", Offset = "0xFA50D4", VA = "0xFA50D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8178", Offset = "0xBE8178")]
		add
		{
		}
		[Token(Token = "0x6000252")]
		[Address(RVA = "0xFA5178", Offset = "0xFA5178", VA = "0xFA5178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8188", Offset = "0xBE8188")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event System.Action EnterStateReady
	{
		[Token(Token = "0x6000260")]
		[Address(RVA = "0xFA5A80", Offset = "0xFA5A80", VA = "0xFA5A80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE81F0", Offset = "0xBE81F0")]
		add
		{
		}
		[Token(Token = "0x6000261")]
		[Address(RVA = "0xFA5B24", Offset = "0xFA5B24", VA = "0xFA5B24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8200", Offset = "0xBE8200")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event System.Action EnterStateAim
	{
		[Token(Token = "0x6000263")]
		[Address(RVA = "0xFA5BF4", Offset = "0xFA5BF4", VA = "0xFA5BF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8274", Offset = "0xBE8274")]
		add
		{
		}
		[Token(Token = "0x6000264")]
		[Address(RVA = "0xFA5C98", Offset = "0xFA5C98", VA = "0xFA5C98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8284", Offset = "0xBE8284")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000265")]
		[Address(RVA = "0xFA5D3C", Offset = "0xFA5D3C", VA = "0xFA5D3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8294", Offset = "0xBE8294")]
		add
		{
		}
		[Token(Token = "0x6000266")]
		[Address(RVA = "0xFA5DE0", Offset = "0xFA5DE0", VA = "0xFA5DE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE82A4", Offset = "0xBE82A4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event System.Action ExitStateAim
	{
		[Token(Token = "0x6000268")]
		[Address(RVA = "0xFA5EF8", Offset = "0xFA5EF8", VA = "0xFA5EF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE82B4", Offset = "0xBE82B4")]
		add
		{
		}
		[Token(Token = "0x6000269")]
		[Address(RVA = "0xFA5F9C", Offset = "0xFA5F9C", VA = "0xFA5F9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE82C4", Offset = "0xBE82C4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event System.Action EnterStateCancelAim
	{
		[Token(Token = "0x600026B")]
		[Address(RVA = "0xFA60E8", Offset = "0xFA60E8", VA = "0xFA60E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8338", Offset = "0xBE8338")]
		add
		{
		}
		[Token(Token = "0x600026C")]
		[Address(RVA = "0xFA618C", Offset = "0xFA618C", VA = "0xFA618C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8348", Offset = "0xBE8348")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event System.Action EnterStatePreTeleport
	{
		[Token(Token = "0x600026E")]
		[Address(RVA = "0xFA62D8", Offset = "0xFA62D8", VA = "0xFA62D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE83BC", Offset = "0xBE83BC")]
		add
		{
		}
		[Token(Token = "0x600026F")]
		[Address(RVA = "0xFA637C", Offset = "0xFA637C", VA = "0xFA637C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE83CC", Offset = "0xBE83CC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event System.Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000271")]
		[Address(RVA = "0xFA64C8", Offset = "0xFA64C8", VA = "0xFA64C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8440", Offset = "0xBE8440")]
		add
		{
		}
		[Token(Token = "0x6000272")]
		[Address(RVA = "0xFA656C", Offset = "0xFA656C", VA = "0xFA656C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8450", Offset = "0xBE8450")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event System.Action EnterStateTeleporting
	{
		[Token(Token = "0x6000274")]
		[Address(RVA = "0xFA66B8", Offset = "0xFA66B8", VA = "0xFA66B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE84C4", Offset = "0xBE84C4")]
		add
		{
		}
		[Token(Token = "0x6000275")]
		[Address(RVA = "0xFA675C", Offset = "0xFA675C", VA = "0xFA675C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE84D4", Offset = "0xBE84D4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event System.Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000277")]
		[Address(RVA = "0xFA68A8", Offset = "0xFA68A8", VA = "0xFA68A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8548", Offset = "0xBE8548")]
		add
		{
		}
		[Token(Token = "0x6000278")]
		[Address(RVA = "0xFA694C", Offset = "0xFA694C", VA = "0xFA694C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8558", Offset = "0xBE8558")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event System.Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x600027A")]
		[Address(RVA = "0xFA6A98", Offset = "0xFA6A98", VA = "0xFA6A98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE85CC", Offset = "0xBE85CC")]
		add
		{
		}
		[Token(Token = "0x600027B")]
		[Address(RVA = "0xFA6B3C", Offset = "0xFA6B3C", VA = "0xFA6B3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE85DC", Offset = "0xBE85DC")]
		remove
		{
		}
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xFA4D94", Offset = "0xFA4D94", VA = "0xFA4D94")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xFA4DB8", Offset = "0xFA4DB8", VA = "0xFA4DB8")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xFA521C", Offset = "0xFA521C", VA = "0xFA521C")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xFA5334", Offset = "0xFA5334", VA = "0xFA5334")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xFA568C", Offset = "0xFA568C", VA = "0xFA568C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBE81B8", Offset = "0xBE81B8")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xFA5744", Offset = "0xFA5744", VA = "0xFA5744")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xFA583C", Offset = "0xFA583C", VA = "0xFA583C")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xFA5858", Offset = "0xFA5858", VA = "0xFA5858")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xFA5920", Offset = "0xFA5920", VA = "0xFA5920")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xFA5964", Offset = "0xFA5964", VA = "0xFA5964")]
	private void Awake()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xFA59CC", Offset = "0xFA59CC", VA = "0xFA59CC", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xFA5A78", Offset = "0xFA5A78", VA = "0xFA5A78", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xFA59FC", Offset = "0xFA59FC", VA = "0xFA59FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE8210", Offset = "0xBE8210")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xFA5E84", Offset = "0xFA5E84", VA = "0xFA5E84")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xFA6040", Offset = "0xFA6040", VA = "0xFA6040")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE82D4", Offset = "0xBE82D4")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xFA6230", Offset = "0xFA6230", VA = "0xFA6230")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE8358", Offset = "0xBE8358")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xFA6420", Offset = "0xFA6420", VA = "0xFA6420")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE83DC", Offset = "0xBE83DC")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xFA6610", Offset = "0xFA6610", VA = "0xFA6610")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE8460", Offset = "0xBE8460")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xFA6800", Offset = "0xFA6800", VA = "0xFA6800")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE84E4", Offset = "0xBE84E4")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xFA69F0", Offset = "0xFA69F0", VA = "0xFA69F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE8568", Offset = "0xBE8568")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xFA6BE0", Offset = "0xFA6BE0", VA = "0xFA6BE0")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xFA6D24", Offset = "0xFA6D24", VA = "0xFA6D24")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xFA6D58", Offset = "0xFA6D58", VA = "0xFA6D58")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xFA6E78", Offset = "0xFA6E78", VA = "0xFA6E78")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xFA6FA4", Offset = "0xFA6FA4", VA = "0xFA6FA4")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000094")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000D")]
	public event System.Action CameraUpdated
	{
		[Token(Token = "0x6000281")]
		[Address(RVA = "0xF52724", Offset = "0xF52724", VA = "0xF52724")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE85EC", Offset = "0xBE85EC")]
		add
		{
		}
		[Token(Token = "0x6000282")]
		[Address(RVA = "0xF527C8", Offset = "0xF527C8", VA = "0xF527C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE85FC", Offset = "0xBE85FC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event System.Action PreCharacterMove
	{
		[Token(Token = "0x6000283")]
		[Address(RVA = "0xF5286C", Offset = "0xF5286C", VA = "0xF5286C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE860C", Offset = "0xBE860C")]
		add
		{
		}
		[Token(Token = "0x6000284")]
		[Address(RVA = "0xF52910", Offset = "0xF52910", VA = "0xF52910")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE861C", Offset = "0xBE861C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xF529B4", Offset = "0xF529B4", VA = "0xF529B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xF52A8C", Offset = "0xF52A8C", VA = "0xF52A8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xF52A90", Offset = "0xF52A90", VA = "0xF52A90")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xF52B04", Offset = "0xF52B04", VA = "0xF52B04")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xF52C74", Offset = "0xF52C74", VA = "0xF52C74")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xF52F58", Offset = "0xF52F58", VA = "0xF52F58")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xF53148", Offset = "0xF53148", VA = "0xF53148")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000095")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x600028C")]
	[Address(RVA = "0xF62A34", Offset = "0xF62A34", VA = "0xF62A34", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xF62A6C", Offset = "0xF62A6C", VA = "0xF62A6C", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600028E")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xF62B0C", Offset = "0xF62B0C", VA = "0xF62B0C")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000096")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA050", Offset = "0xBDA050")]
	public float Range;

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xF62B14", Offset = "0xF62B14", VA = "0xF62B14", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xF62C70", Offset = "0xF62C70", VA = "0xF62C70")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000097")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA088", Offset = "0xBDA088")]
	public float Range;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA0C0", Offset = "0xBDA0C0")]
	public float MinimumElevation;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA0F8", Offset = "0xBDA0F8")]
	public float Gravity;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA130", Offset = "0xBDA130")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDA130", Offset = "0xBDA130")]
	public float AimVelocity;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA18C", Offset = "0xBDA18C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDA18C", Offset = "0xBDA18C")]
	public float AimStep;

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xF62C80", Offset = "0xF62C80", VA = "0xF62C80", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xF62ECC", Offset = "0xF62ECC", VA = "0xF62ECC")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000098")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA1E4", Offset = "0xBDA1E4")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly System.Action _enterAimStateAction;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly System.Action _exitAimStateAction;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xF62EE0", Offset = "0xF62EE0", VA = "0xF62EE0")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xF62FE4", Offset = "0xF62FE4", VA = "0xF62FE4")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xF63014", Offset = "0xF63014", VA = "0xF63014")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xF63044", Offset = "0xF63044", VA = "0xF63044")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xF630EC", Offset = "0xF630EC", VA = "0xF630EC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xF6314C", Offset = "0xF6314C", VA = "0xF6314C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xF631B0", Offset = "0xF631B0", VA = "0xF631B0")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000099")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA21C", Offset = "0xBDA21C")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA22C", Offset = "0xBDA22C")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA264", Offset = "0xBDA264")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA29C", Offset = "0xBDA29C")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000018")]
	public bool IsValidDestination
	{
		[Token(Token = "0x600029B")]
		[Address(RVA = "0xF632CC", Offset = "0xF632CC", VA = "0xF632CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE862C", Offset = "0xBE862C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600029C")]
		[Address(RVA = "0xF632D4", Offset = "0xF632D4", VA = "0xF632D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE863C", Offset = "0xBE863C")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0xF6348C", Offset = "0xF6348C", VA = "0xF6348C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE864C", Offset = "0xBE864C")]
		add
		{
		}
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xF63530", Offset = "0xF63530", VA = "0xF63530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE865C", Offset = "0xBE865C")]
		remove
		{
		}
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xF632E0", Offset = "0xF632E0", VA = "0xF632E0")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xF63370", Offset = "0xF63370", VA = "0xF63370")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xF63448", Offset = "0xF63448", VA = "0xF63448")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xF63488", Offset = "0xF63488", VA = "0xF63488")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xF635D4", Offset = "0xF635D4", VA = "0xF635D4")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xF6363C", Offset = "0xF6363C", VA = "0xF6363C")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xF6365C", Offset = "0xF6365C", VA = "0xF6365C", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x200009A")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20005A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8020", Offset = "0xBD8020")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700031F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022C7")]
			[Address(RVA = "0xF63D7C", Offset = "0xF63D7C", VA = "0xF63D7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000320")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022C9")]
			[Address(RVA = "0xF63DE4", Offset = "0xF63DE4", VA = "0xF63DE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0xF63AA4", Offset = "0xF63AA4", VA = "0xF63AA4")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0xF63CE0", Offset = "0xF63CE0", VA = "0xF63CE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0xF63CE4", Offset = "0xF63CE4", VA = "0xF63CE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0xF63D84", Offset = "0xF63D84", VA = "0xF63D84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8030", Offset = "0xBD8030")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000321")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022CD")]
			[Address(RVA = "0xF63C70", Offset = "0xF63C70", VA = "0xF63C70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000322")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022CF")]
			[Address(RVA = "0xF63CD8", Offset = "0xF63CD8", VA = "0xF63CD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0xF63B4C", Offset = "0xF63B4C", VA = "0xF63B4C")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0xF63BD0", Offset = "0xF63BD0", VA = "0xF63BD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0xF63BD4", Offset = "0xF63BD4", VA = "0xF63BD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0xF63C78", Offset = "0xF63C78", VA = "0xF63C78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly System.Action _startReadyAction;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly System.Action _startAimAction;

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xF6383C", Offset = "0xF6383C", VA = "0xF6383C")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xF638FC", Offset = "0xF638FC", VA = "0xF638FC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xF63960", Offset = "0xF63960", VA = "0xF63960", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xF63A28", Offset = "0xF63A28", VA = "0xF63A28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE866C", Offset = "0xBE866C")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xF63AD0", Offset = "0xF63AD0", VA = "0xF63AD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE86D0", Offset = "0xBE86D0")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002AB")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60002AC")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xF63B78", Offset = "0xF63B78", VA = "0xF63B78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8734", Offset = "0xBE8734")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xF63BA4", Offset = "0xF63BA4", VA = "0xF63BA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8744", Offset = "0xBE8744")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x200009B")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA2E4", Offset = "0xBDA2E4")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA2F4", Offset = "0xBDA2F4")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA32C", Offset = "0xBDA32C")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA364", Offset = "0xBDA364")]
	public bool FastTeleport;

	[Token(Token = "0x17000019")]
	public Transform Pointer
	{
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0xF63DEC", Offset = "0xF63DEC", VA = "0xF63DEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8754", Offset = "0xBE8754")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0xF63DF4", Offset = "0xF63DF4", VA = "0xF63DF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8764", Offset = "0xBE8764")]
		private set
		{
		}
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xF63DFC", Offset = "0xF63DFC", VA = "0xF63DFC", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xF63F58", Offset = "0xF63F58", VA = "0xF63F58", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xF64010", Offset = "0xF64010", VA = "0xF64010")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x200009C")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20005AB")]
	public enum InputModes
	{
		[Token(Token = "0x4001D57")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4001D58")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4001D59")]
		ThumbstickTeleport,
		[Token(Token = "0x4001D5A")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20005AC")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4001D5C")]
		A,
		[Token(Token = "0x4001D5D")]
		B,
		[Token(Token = "0x4001D5E")]
		LeftTrigger,
		[Token(Token = "0x4001D5F")]
		LeftThumbstick,
		[Token(Token = "0x4001D60")]
		RightTrigger,
		[Token(Token = "0x4001D61")]
		RightThumbstick,
		[Token(Token = "0x4001D62")]
		X,
		[Token(Token = "0x4001D63")]
		Y
	}

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA39C", Offset = "0xBDA39C")]
	public InputModes InputMode;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA3D4", Offset = "0xBDA3D4")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA40C", Offset = "0xBDA40C")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA444", Offset = "0xBDA444")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xF64014", Offset = "0xF64014", VA = "0xF64014")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xF64018", Offset = "0xF64018", VA = "0xF64018", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xF64460", Offset = "0xF64460", VA = "0xF64460", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xF64520", Offset = "0xF64520", VA = "0xF64520")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200009D")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20005AD")]
	public enum OrientationModes
	{
		[Token(Token = "0x4001D65")]
		HeadRelative,
		[Token(Token = "0x4001D66")]
		ForwardFacing
	}

	[Token(Token = "0x20005AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8040", Offset = "0xBD8040")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000323")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022D3")]
			[Address(RVA = "0xF649F8", Offset = "0xF649F8", VA = "0xF649F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000324")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022D5")]
			[Address(RVA = "0xF64A60", Offset = "0xF64A60", VA = "0xF64A60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0xF647C8", Offset = "0xF647C8", VA = "0xF647C8")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0xF64944", Offset = "0xF64944", VA = "0xF64944", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0xF64948", Offset = "0xF64948", VA = "0xF64948", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0xF64A00", Offset = "0xF64A00", VA = "0xF64A00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly System.Action _updateOrientationAction;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xF645E4", Offset = "0xF645E4", VA = "0xF645E4")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xF646AC", Offset = "0xF646AC", VA = "0xF646AC")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xF646B4", Offset = "0xF646B4", VA = "0xF646B4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xF64700", Offset = "0xF64700", VA = "0xF64700", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xF6474C", Offset = "0xF6474C", VA = "0xF6474C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE8774", Offset = "0xBE8774")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002BD")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60002BE")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xF647F4", Offset = "0xF647F4", VA = "0xF647F4")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xF64918", Offset = "0xF64918", VA = "0xF64918")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE87D8", Offset = "0xBE87D8")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200009E")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xF65A68", Offset = "0xF65A68", VA = "0xF65A68", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xF65A6C", Offset = "0xF65A6C", VA = "0xF65A6C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xF65AE8", Offset = "0xF65AE8", VA = "0xF65AE8")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200009F")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA47C", Offset = "0xBDA47C")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA4B4", Offset = "0xBDA4B4")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA4EC", Offset = "0xBDA4EC")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA524", Offset = "0xBDA524")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xF65AF0", Offset = "0xF65AF0", VA = "0xF65AF0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xF65B60", Offset = "0xF65B60", VA = "0xF65B60", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xF65FE0", Offset = "0xF65FE0", VA = "0xF65FE0")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000A0")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA55C", Offset = "0xBDA55C")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA594", Offset = "0xBDA594")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA5CC", Offset = "0xBDA5CC")]
	public float RotateStickThreshold;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xF65FE8", Offset = "0xF65FE8", VA = "0xF65FE8", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xF6602C", Offset = "0xF6602C", VA = "0xF6602C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xF664A0", Offset = "0xF664A0", VA = "0xF664A0")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000A1")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xF664B4", Offset = "0xF664B4", VA = "0xF664B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xF664B8", Offset = "0xF664B8", VA = "0xF664B8")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xF664C0", Offset = "0xF664C0", VA = "0xF664C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xF665A8", Offset = "0xF665A8", VA = "0xF665A8")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xF665D0", Offset = "0xF665D0", VA = "0xF665D0")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000A2")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA604", Offset = "0xBDA604")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700001A")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0xF665E8", Offset = "0xF665E8", VA = "0xF665E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE87E8", Offset = "0xBE87E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xF665F0", Offset = "0xF665F0", VA = "0xF665F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE87F8", Offset = "0xBE87F8")]
		private set
		{
		}
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xF665F8", Offset = "0xF665F8", VA = "0xF665F8", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xF66668", Offset = "0xF66668", VA = "0xF66668", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xF6669C", Offset = "0xF6669C", VA = "0xF6669C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBE8808", Offset = "0xBE8808")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xF66764", Offset = "0xF66764", VA = "0xF66764", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xF66770", Offset = "0xF66770", VA = "0xF66770", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xF66778", Offset = "0xF66778", VA = "0xF66778")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000A3")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20005AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8050", Offset = "0xBD8050")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000325")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022D9")]
			[Address(RVA = "0xF66D44", Offset = "0xF66D44", VA = "0xF66D44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000326")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022DB")]
			[Address(RVA = "0xF66DAC", Offset = "0xF66DAC", VA = "0xF66DAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0xF66934", Offset = "0xF66934", VA = "0xF66934")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0xF66ACC", Offset = "0xF66ACC", VA = "0xF66ACC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0xF66AD0", Offset = "0xF66AD0", VA = "0xF66AD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0xF66D4C", Offset = "0xF66D4C", VA = "0xF66D4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA614", Offset = "0xBDA614")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly System.Action _startAimAction;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x40003C1")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xF66780", Offset = "0xF66780", VA = "0xF66780")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xF66864", Offset = "0xF66864", VA = "0xF66864", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xF66890", Offset = "0xF66890", VA = "0xF66890", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xF668B8", Offset = "0xF668B8", VA = "0xF668B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE8840", Offset = "0xBE8840")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xF66960", Offset = "0xF66960", VA = "0xF66960", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60002DC")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xF6697C", Offset = "0xF6697C", VA = "0xF6697C", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xF66AA0", Offset = "0xF66AA0", VA = "0xF66AA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE88A4", Offset = "0xBE88A4")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000A4")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xF66DB4", Offset = "0xF66DB4", VA = "0xF66DB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xF66E1C", Offset = "0xF66E1C", VA = "0xF66E1C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xF66FA0", Offset = "0xF66FA0", VA = "0xF66FA0", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xF67090", Offset = "0xF67090", VA = "0xF67090")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBE88B4", Offset = "0xBE88B4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xF67094", Offset = "0xF67094", VA = "0xF67094")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000A5")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA64C", Offset = "0xBDA64C")]
	public float LOSOffset;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA684", Offset = "0xBDA684")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xF670A0", Offset = "0xF670A0", VA = "0xF670A0", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xF672D0", Offset = "0xF672D0", VA = "0xF672D0")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000A6")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xF672DC", Offset = "0xF672DC", VA = "0xF672DC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xF67460", Offset = "0xF67460", VA = "0xF67460")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000A7")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xF67464", Offset = "0xF67464", VA = "0xF67464", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xF674FC", Offset = "0xF674FC", VA = "0xF674FC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002EA")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xF67590", Offset = "0xF67590", VA = "0xF67590")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000A8")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20005B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8060", Offset = "0xBD8060")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000327")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022DF")]
			[Address(RVA = "0xF6791C", Offset = "0xF6791C", VA = "0xF6791C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000328")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022E1")]
			[Address(RVA = "0xF67984", Offset = "0xF67984", VA = "0xF67984", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0xF67640", Offset = "0xF67640", VA = "0xF67640")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0xF67810", Offset = "0xF67810", VA = "0xF67810", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0xF67814", Offset = "0xF67814", VA = "0xF67814", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0xF67924", Offset = "0xF67924", VA = "0xF67924", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA6BC", Offset = "0xBDA6BC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDA6BC", Offset = "0xBDA6BC")]
	public float TransitionDuration;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA714", Offset = "0xBDA714")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDA714", Offset = "0xBDA714")]
	public float TeleportDelay;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA768", Offset = "0xBDA768")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xF67598", Offset = "0xF67598", VA = "0xF67598", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xF675C4", Offset = "0xF675C4", VA = "0xF675C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE88EC", Offset = "0xBE88EC")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xF6766C", Offset = "0xF6766C", VA = "0xF6766C")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000A9")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xF6798C", Offset = "0xF6798C", VA = "0xF6798C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xF679A8", Offset = "0xF679A8", VA = "0xF679A8")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000AA")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20005B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8070", Offset = "0xBD8070")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000329")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022E5")]
			[Address(RVA = "0xF67C18", Offset = "0xF67C18", VA = "0xF67C18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022E7")]
			[Address(RVA = "0xF67C80", Offset = "0xF67C80", VA = "0xF67C80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0xF67A58", Offset = "0xF67A58", VA = "0xF67A58")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0xF67AD8", Offset = "0xF67AD8", VA = "0xF67AD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0xF67ADC", Offset = "0xF67ADC", VA = "0xF67ADC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0xF67C20", Offset = "0xF67C20", VA = "0xF67C20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA7A0", Offset = "0xBDA7A0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDA7A0", Offset = "0xBDA7A0")]
	public float TransitionDuration;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xF679B0", Offset = "0xF679B0", VA = "0xF679B0", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xF679DC", Offset = "0xF679DC", VA = "0xF679DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE8950", Offset = "0xBE8950")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xF67A84", Offset = "0xF67A84", VA = "0xF67A84")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000AB")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20005B2")]
	public enum PlabackState
	{
		[Token(Token = "0x4001D79")]
		Idle = 1,
		[Token(Token = "0x4001D7A")]
		Preparing,
		[Token(Token = "0x4001D7B")]
		Buffering,
		[Token(Token = "0x4001D7C")]
		Ready,
		[Token(Token = "0x4001D7D")]
		Ended
	}

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700001B")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x154C8C0", Offset = "0x154C8C0", VA = "0x154C8C0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700001C")]
	private static IntPtr Activity
	{
		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x154CB7C", Offset = "0x154CB7C", VA = "0x154CB7C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700001D")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0x1549680", Offset = "0x1549680", VA = "0x1549680")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001E")]
	public static bool IsPlaying
	{
		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x154A954", Offset = "0x154A954", VA = "0x154A954")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001F")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x154CDC0", Offset = "0x154CDC0", VA = "0x154CDC0")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000020")]
	public static long Duration
	{
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x154AB38", Offset = "0x154AB38", VA = "0x154AB38")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000021")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x154AA44", Offset = "0x154AA44", VA = "0x154AA44")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x154A0FC", Offset = "0x154A0FC", VA = "0x154A0FC")]
		set
		{
		}
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x154B1A0", Offset = "0x154B1A0", VA = "0x154B1A0")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x154AEE4", Offset = "0x154AEE4", VA = "0x154AEE4")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x1549D8C", Offset = "0x1549D8C", VA = "0x1549D8C")]
	public static void Play()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x1549F10", Offset = "0x1549F10", VA = "0x1549F10")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x154AD04", Offset = "0x154AD04", VA = "0x154AD04")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x154B3A0", Offset = "0x154B3A0", VA = "0x154B3A0")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x154A790", Offset = "0x154A790", VA = "0x154A790")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000AC")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000010")]
	public event System.Action onButtonDown
	{
		[Token(Token = "0x6000304")]
		[Address(RVA = "0xED6300", Offset = "0xED6300", VA = "0xED6300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE89B4", Offset = "0xBE89B4")]
		add
		{
		}
		[Token(Token = "0x6000305")]
		[Address(RVA = "0xED63A4", Offset = "0xED63A4", VA = "0xED63A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE89C4", Offset = "0xBE89C4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xED6448", Offset = "0xED6448", VA = "0xED6448", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xED645C", Offset = "0xED645C", VA = "0xED645C")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000AD")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20005B3")]
	public enum ButtonType
	{
		[Token(Token = "0x4001D7F")]
		Play,
		[Token(Token = "0x4001D80")]
		Pause,
		[Token(Token = "0x4001D81")]
		FastForward,
		[Token(Token = "0x4001D82")]
		Rewind,
		[Token(Token = "0x4001D83")]
		SkipForward,
		[Token(Token = "0x4001D84")]
		SkipBack,
		[Token(Token = "0x4001D85")]
		Stop
	}

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000022")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000308")]
		[Address(RVA = "0xFABCB8", Offset = "0xFABCB8", VA = "0xFABCB8")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000309")]
		[Address(RVA = "0xFABCC0", Offset = "0xFABCC0", VA = "0xFABCC0")]
		set
		{
		}
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xFABCE4", Offset = "0xFABCE4", VA = "0xFABCE4", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xFAD1B0", Offset = "0xFAD1B0", VA = "0xFAD1B0")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000AE")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20005B4")]
	public enum VideoShape
	{
		[Token(Token = "0x4001D87")]
		_360,
		[Token(Token = "0x4001D88")]
		_180,
		[Token(Token = "0x4001D89")]
		Quad
	}

	[Token(Token = "0x20005B5")]
	public enum VideoStereo
	{
		[Token(Token = "0x4001D8B")]
		Mono,
		[Token(Token = "0x4001D8C")]
		TopBottom,
		[Token(Token = "0x4001D8D")]
		LeftRight,
		[Token(Token = "0x4001D8E")]
		BottomTop
	}

	[Token(Token = "0x20005B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8080", Offset = "0xBD8080")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x1700032B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022EB")]
			[Address(RVA = "0x154B67C", Offset = "0x154B67C", VA = "0x154B67C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022ED")]
			[Address(RVA = "0x154B6E4", Offset = "0x154B6E4", VA = "0x154B6E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0x1549A44", Offset = "0x1549A44", VA = "0x1549A44")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0x154B4EC", Offset = "0x154B4EC", VA = "0x154B4EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0x154B4F0", Offset = "0x154B4F0", VA = "0x154B4F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0x154B684", Offset = "0x154B684", VA = "0x154B684", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8090", Offset = "0xBD8090")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0x1549CF0", Offset = "0x1549CF0", VA = "0x1549CF0")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0x154B0CC", Offset = "0x154B0CC", VA = "0x154B0CC")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA828", Offset = "0xBDA828")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA838", Offset = "0xBDA838")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA848", Offset = "0xBDA848")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000023")]
	public bool IsPlaying
	{
		[Token(Token = "0x600030C")]
		[Address(RVA = "0x1549400", Offset = "0x1549400", VA = "0x1549400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE89D4", Offset = "0xBE89D4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600030D")]
		[Address(RVA = "0x1549408", Offset = "0x1549408", VA = "0x1549408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE89E4", Offset = "0xBE89E4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public long Duration
	{
		[Token(Token = "0x600030E")]
		[Address(RVA = "0x1549414", Offset = "0x1549414", VA = "0x1549414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE89F4", Offset = "0xBE89F4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600030F")]
		[Address(RVA = "0x154941C", Offset = "0x154941C", VA = "0x154941C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8A04", Offset = "0xBE8A04")]
		private set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000310")]
		[Address(RVA = "0x1549424", Offset = "0x1549424", VA = "0x1549424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8A14", Offset = "0xBE8A14")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000311")]
		[Address(RVA = "0x154942C", Offset = "0x154942C", VA = "0x154942C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8A24", Offset = "0xBE8A24")]
		private set
		{
		}
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x1549434", Offset = "0x1549434", VA = "0x1549434")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x15496E8", Offset = "0x15496E8", VA = "0x15496E8")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x1549750", Offset = "0x1549750", VA = "0x1549750")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x15499C8", Offset = "0x15499C8", VA = "0x15499C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE8A34", Offset = "0xBE8A34")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x1549A70", Offset = "0x1549A70", VA = "0x1549A70")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x1549CF8", Offset = "0x1549CF8", VA = "0x1549CF8")]
	public void Play()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x1549E80", Offset = "0x1549E80", VA = "0x1549E80")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x154A004", Offset = "0x154A004", VA = "0x154A004")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x154A244", Offset = "0x154A244", VA = "0x154A244")]
	private void Update()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x154AC2C", Offset = "0x154AC2C", VA = "0x154AC2C")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x154AE54", Offset = "0x154AE54", VA = "0x154AE54")]
	public void Stop()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x154AFD8", Offset = "0x154AFD8", VA = "0x154AFD8")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x154B0BC", Offset = "0x154B0BC", VA = "0x154B0BC")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000AF")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20005B8")]
	private enum PlaybackState
	{
		[Token(Token = "0x4001D96")]
		Playing,
		[Token(Token = "0x4001D97")]
		Paused,
		[Token(Token = "0x4001D98")]
		Rewinding,
		[Token(Token = "0x4001D99")]
		FastForwarding
	}

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x154B6EC", Offset = "0x154B6EC", VA = "0x154B6EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x154B9A0", Offset = "0x154B9A0", VA = "0x154B9A0")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x154BACC", Offset = "0x154BACC", VA = "0x154BACC")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x154BBD8", Offset = "0x154BBD8", VA = "0x154BBD8")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x154BCB8", Offset = "0x154BCB8", VA = "0x154BCB8")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x154BBAC", Offset = "0x154BBAC", VA = "0x154BBAC")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x154BD80", Offset = "0x154BD80", VA = "0x154BD80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x154B894", Offset = "0x154B894", VA = "0x154B894")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x154C138", Offset = "0x154C138", VA = "0x154C138")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000B0")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCFD18", Offset = "0xBCFD18")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x20005B9")]
	private enum CubeFace
	{
		[Token(Token = "0x4001D9B")]
		Right,
		[Token(Token = "0x4001D9C")]
		Left,
		[Token(Token = "0x4001D9D")]
		Top,
		[Token(Token = "0x4001D9E")]
		Bottom,
		[Token(Token = "0x4001D9F")]
		Front,
		[Token(Token = "0x4001DA0")]
		Back,
		[Token(Token = "0x4001DA1")]
		COUNT
	}

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x1474F5C", Offset = "0x1474F5C", VA = "0x1474F5C")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x14750F8", Offset = "0x14750F8", VA = "0x14750F8")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x14752B4", Offset = "0x14752B4", VA = "0x14752B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x147578C", Offset = "0x147578C", VA = "0x147578C")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x1475A80", Offset = "0x1475A80", VA = "0x1475A80")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x1476CDC", Offset = "0x1476CDC", VA = "0x1476CDC")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x1476D3C", Offset = "0x1476D3C", VA = "0x1476D3C")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x1475E00", Offset = "0x1475E00", VA = "0x1475E00")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x1476E24", Offset = "0x1476E24", VA = "0x1476E24")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x1477010", Offset = "0x1477010", VA = "0x1477010")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x14762B8", Offset = "0x14762B8", VA = "0x14762B8")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x14765E0", Offset = "0x14765E0", VA = "0x14765E0")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x1476938", Offset = "0x1476938", VA = "0x1476938")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x14771C4", Offset = "0x14771C4", VA = "0x14771C4")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x20000B1")]
public static class VectorUtil
{
	[Token(Token = "0x6000337")]
	[Address(RVA = "0xF793CC", Offset = "0xF793CC", VA = "0xF793CC")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000B2")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xF08310", Offset = "0xF08310", VA = "0xF08310")]
	private void Start()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xF08768", Offset = "0xF08768", VA = "0xF08768")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xF08820", Offset = "0xF08820", VA = "0xF08820")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xF08A74", Offset = "0xF08A74", VA = "0xF08A74")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xF08B5C", Offset = "0xF08B5C", VA = "0xF08B5C")]
	private void Update()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xF08C38", Offset = "0xF08C38", VA = "0xF08C38")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xF08CA4", Offset = "0xF08CA4", VA = "0xF08CA4")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xF08CAC", Offset = "0xF08CAC", VA = "0xF08CAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8AA8", Offset = "0xBE8AA8")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xF08D08", Offset = "0xF08D08", VA = "0xF08D08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8AB8", Offset = "0xBE8AB8")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xF08D64", Offset = "0xF08D64", VA = "0xF08D64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8AC8", Offset = "0xBE8AC8")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xF08DC0", Offset = "0xF08DC0", VA = "0xF08DC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8AD8", Offset = "0xBE8AD8")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000B3")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20005BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD80A0", Offset = "0xBD80A0")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x1700032D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022F3")]
			[Address(RVA = "0xF23834", Offset = "0xF23834", VA = "0xF23834", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022F5")]
			[Address(RVA = "0xF2389C", Offset = "0xF2389C", VA = "0xF2389C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0xF236B8", Offset = "0xF236B8", VA = "0xF236B8")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0xF236EC", Offset = "0xF236EC", VA = "0xF236EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0xF236F0", Offset = "0xF236F0", VA = "0xF236F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0xF2383C", Offset = "0xF2383C", VA = "0xF2383C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xF233A4", Offset = "0xF233A4", VA = "0xF233A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xF234BC", Offset = "0xF234BC", VA = "0xF234BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xF23440", Offset = "0xF23440", VA = "0xF23440")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE8AE8", Offset = "0xBE8AE8")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xF236E4", Offset = "0xF236E4", VA = "0xF236E4")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000B4")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDA868", Offset = "0xBDA868")]
	public int SubdivisionsU;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDA884", Offset = "0xBDA884")]
	public int SubdivisionsV;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xED8C84", Offset = "0xED8C84", VA = "0xED8C84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xED9778", Offset = "0xED9778", VA = "0xED9778")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000B5")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000026")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000349")]
		[Address(RVA = "0xFA46DC", Offset = "0xFA46DC", VA = "0xFA46DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xFA4734", Offset = "0xFA4734", VA = "0xFA4734")]
	public void Start()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xFA4A84", Offset = "0xFA4A84", VA = "0xFA4A84")]
	public void Update()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xFA4B68", Offset = "0xFA4B68", VA = "0xFA4B68")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBE8B4C", Offset = "0xBE8B4C")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x600034D")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600034E")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x600034F")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000350")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000351")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000352")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000353")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000354")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xFA4BD0", Offset = "0xFA4BD0", VA = "0xFA4BD0")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xFA4C0C", Offset = "0xFA4C0C", VA = "0xFA4C0C")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xFA4C80", Offset = "0xFA4C80", VA = "0xFA4C80")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xFA4DDC", Offset = "0xFA4DDC", VA = "0xFA4DDC")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xFA4EB0", Offset = "0xFA4EB0", VA = "0xFA4EB0")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xFA4990", Offset = "0xFA4990", VA = "0xFA4990")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xFA4F70", Offset = "0xFA4F70", VA = "0xFA4F70")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xFA4FD8", Offset = "0xFA4FD8", VA = "0xFA4FD8")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xFA50BC", Offset = "0xFA50BC", VA = "0xFA50BC")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000B6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCFDAC", Offset = "0xBCFDAC")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20005BB")]
	public enum DrawMode
	{
		[Token(Token = "0x4001DA6")]
		Opaque,
		[Token(Token = "0x4001DA7")]
		OpaqueWithClip,
		[Token(Token = "0x4001DA8")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4001DA9")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000027")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000364")]
		[Address(RVA = "0x1474D38", Offset = "0x1474D38", VA = "0x1474D38")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000365")]
		[Address(RVA = "0x1474DCC", Offset = "0x1474DCC", VA = "0x1474DCC")]
		set
		{
		}
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x1473614", Offset = "0x1473614", VA = "0x1473614")]
	private void Start()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x1474338", Offset = "0x1474338", VA = "0x1474338")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x14743BC", Offset = "0x14743BC", VA = "0x14743BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x14744B0", Offset = "0x14744B0", VA = "0x14744B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x14745A4", Offset = "0x14745A4", VA = "0x14745A4", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x14747A8", Offset = "0x14747A8", VA = "0x14747A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x1474E9C", Offset = "0x1474E9C", VA = "0x1474E9C")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000B7")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x20005BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD80B0", Offset = "0xBD80B0")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0xF60FD8", Offset = "0xF60FD8", VA = "0xF60FD8")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0xF610C8", Offset = "0xF610C8", VA = "0xF610C8")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xF60E28", Offset = "0xF60E28", VA = "0xF60E28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xF60FE0", Offset = "0xF60FE0", VA = "0xF60FE0")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xF610C0", Offset = "0xF610C0", VA = "0xF610C0")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000B8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBCFE10", Offset = "0xBCFE10")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20005BD")]
	public enum RotationAxes
	{
		[Token(Token = "0x4001DAD")]
		MouseXAndY,
		[Token(Token = "0x4001DAE")]
		MouseX,
		[Token(Token = "0x4001DAF")]
		MouseY
	}

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x1547A7C", Offset = "0x1547A7C", VA = "0x1547A7C")]
	private void Update()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x1547CDC", Offset = "0x1547CDC", VA = "0x1547CDC")]
	private void Start()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x1547D9C", Offset = "0x1547D9C", VA = "0x1547D9C")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000B9")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x20005BE")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4001DB1")]
		Uninitialized = -1,
		[Token(Token = "0x4001DB2")]
		NotEnabled,
		[Token(Token = "0x4001DB3")]
		Success,
		[Token(Token = "0x4001DB4")]
		StreamError,
		[Token(Token = "0x4001DB5")]
		ProcessError,
		[Token(Token = "0x4001DB6")]
		MaxStatValue
	}

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000028")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x600036E")]
		[Address(RVA = "0x154CF20", Offset = "0x154CF20", VA = "0x154CF20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600036F")]
		[Address(RVA = "0x154CF28", Offset = "0x154CF28", VA = "0x154CF28")]
		set
		{
		}
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x154CF34", Offset = "0x154CF34", VA = "0x154CF34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x154D178", Offset = "0x154D178", VA = "0x154D178")]
	private void Update()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x154D3C8", Offset = "0x154D3C8", VA = "0x154D3C8")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000BA")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x20005BF")]
	private enum Parameters
	{
		[Token(Token = "0x4001DB8")]
		P_GAIN,
		[Token(Token = "0x4001DB9")]
		P_USEINVSQR,
		[Token(Token = "0x4001DBA")]
		P_NEAR,
		[Token(Token = "0x4001DBB")]
		P_FAR,
		[Token(Token = "0x4001DBC")]
		P_RADIUS,
		[Token(Token = "0x4001DBD")]
		P_DISABLE_RFL,
		[Token(Token = "0x4001DBE")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4001DBF")]
		P_AMBISTAT,
		[Token(Token = "0x4001DC0")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4001DC1")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4001DC2")]
		P_SENDLEVEL,
		[Token(Token = "0x4001DC3")]
		P_NUM
	}

	[Token(Token = "0x4000452")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000029")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x6000376")]
		[Address(RVA = "0x154D624", Offset = "0x154D624", VA = "0x154D624")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000377")]
		[Address(RVA = "0x154D62C", Offset = "0x154D62C", VA = "0x154D62C")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public float Gain
	{
		[Token(Token = "0x6000378")]
		[Address(RVA = "0x154D638", Offset = "0x154D638", VA = "0x154D638")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000379")]
		[Address(RVA = "0x154D640", Offset = "0x154D640", VA = "0x154D640")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public bool UseInvSqr
	{
		[Token(Token = "0x600037A")]
		[Address(RVA = "0x154D6C4", Offset = "0x154D6C4", VA = "0x154D6C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600037B")]
		[Address(RVA = "0x154D6CC", Offset = "0x154D6CC", VA = "0x154D6CC")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public float Near
	{
		[Token(Token = "0x600037C")]
		[Address(RVA = "0x154D6D8", Offset = "0x154D6D8", VA = "0x154D6D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600037D")]
		[Address(RVA = "0x154D6E0", Offset = "0x154D6E0", VA = "0x154D6E0")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public float Far
	{
		[Token(Token = "0x600037E")]
		[Address(RVA = "0x154D768", Offset = "0x154D768", VA = "0x154D768")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600037F")]
		[Address(RVA = "0x154D770", Offset = "0x154D770", VA = "0x154D770")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000380")]
		[Address(RVA = "0x154D7F8", Offset = "0x154D7F8", VA = "0x154D7F8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000381")]
		[Address(RVA = "0x154D800", Offset = "0x154D800", VA = "0x154D800")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public float ReverbSend
	{
		[Token(Token = "0x6000382")]
		[Address(RVA = "0x154D888", Offset = "0x154D888", VA = "0x154D888")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000383")]
		[Address(RVA = "0x154D890", Offset = "0x154D890", VA = "0x154D890")]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000384")]
		[Address(RVA = "0x154D918", Offset = "0x154D918", VA = "0x154D918")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000385")]
		[Address(RVA = "0x154D920", Offset = "0x154D920", VA = "0x154D920")]
		set
		{
		}
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x154D44C", Offset = "0x154D44C", VA = "0x154D44C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xBE8B84", Offset = "0xBE8B84")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000375")]
	[Address(RVA = "0x154D544", Offset = "0x154D544", VA = "0x154D544")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x154D92C", Offset = "0x154D92C", VA = "0x154D92C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x154DAA0", Offset = "0x154DAA0", VA = "0x154DAA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x154DAA4", Offset = "0x154DAA4", VA = "0x154DAA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x154D998", Offset = "0x154D998", VA = "0x154D998")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x154DB6C", Offset = "0x154DB6C", VA = "0x154DB6C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x154DFD4", Offset = "0x154DFD4", VA = "0x154DFD4")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600038C")]
	[Address(RVA = "0x154D4C4", Offset = "0x154D4C4", VA = "0x154D4C4")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x154E0B8", Offset = "0x154E0B8", VA = "0x154E0B8")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000BB")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x400045D")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x400045F")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x154E0D8", Offset = "0x154E0D8", VA = "0x154E0D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x154E0E4", Offset = "0x154E0E4", VA = "0x154E0E4")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000391")]
	[Address(RVA = "0x154E19C", Offset = "0x154E19C", VA = "0x154E19C")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000392")]
	[Address(RVA = "0x154E11C", Offset = "0x154E11C", VA = "0x154E11C")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x154E21C", Offset = "0x154E21C", VA = "0x154E21C")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000BC")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x20005C0")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20005C1")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000466")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000031")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000394")]
		[Address(RVA = "0x1550CBC", Offset = "0x1550CBC", VA = "0x1550CBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000032")]
	public string filePath
	{
		[Token(Token = "0x6000395")]
		[Address(RVA = "0x1550D48", Offset = "0x1550D48", VA = "0x1550D48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x1550DC0", Offset = "0x1550DC0", VA = "0x1550DC0")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x1550F08", Offset = "0x1550F08", VA = "0x1550F08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x1550F0C", Offset = "0x1550F0C", VA = "0x1550F0C")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x155146C", Offset = "0x155146C", VA = "0x155146C")]
	private void Update()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x1551804", Offset = "0x1551804", VA = "0x1551804")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x1551960", Offset = "0x1551960", VA = "0x1551960")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x15520B4", Offset = "0x15520B4", VA = "0x15520B4")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x15520F0", Offset = "0x15520F0", VA = "0x15520F0")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x1553960", Offset = "0x1553960", VA = "0x1553960")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x1553838", Offset = "0x1553838", VA = "0x1553838")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x15512A4", Offset = "0x15512A4", VA = "0x15512A4")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x15510D8", Offset = "0x15510D8", VA = "0x15510D8")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x1553F74", Offset = "0x1553F74", VA = "0x1553F74")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x15543B0", Offset = "0x15543B0", VA = "0x15543B0")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000BD")]
internal class ONSPPropagation
{
	[Token(Token = "0x20005C2")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4001DCA")]
		Int8,
		[Token(Token = "0x4001DCB")]
		UInt8,
		[Token(Token = "0x4001DCC")]
		Int16,
		[Token(Token = "0x4001DCD")]
		UInt16,
		[Token(Token = "0x4001DCE")]
		Int32,
		[Token(Token = "0x4001DCF")]
		UInt32,
		[Token(Token = "0x4001DD0")]
		Int64,
		[Token(Token = "0x4001DD1")]
		UInt64,
		[Token(Token = "0x4001DD2")]
		Float16,
		[Token(Token = "0x4001DD3")]
		Float32,
		[Token(Token = "0x4001DD4")]
		Float64
	}

	[Token(Token = "0x20005C3")]
	public class ClientType
	{
		[Token(Token = "0x4001DD5")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4001DD6")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4001DD7")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4001DD8")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4001DD9")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4001DDA")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4001DDB")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4001DDC")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4001DDD")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4001DDE")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4001DDF")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4001DE0")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4001DE1")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4001DE2")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4001DE3")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x154E6DC", Offset = "0x154E6DC", VA = "0x154E6DC")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x20005C4")]
	public interface PropagationInterface
	{
		[Token(Token = "0x60022F9")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x60022FA")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x60022FB")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x60022FC")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60022FD")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x60022FE")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60022FF")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002300")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002301")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002302")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002303")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6002304")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6002305")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002306")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002307")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20005C5")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4001DE4")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700032F")]
		private IntPtr context
		{
			[Token(Token = "0x6002308")]
			[Address(RVA = "0x154F354", Offset = "0x154F354", VA = "0x154F354")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6002309")]
		[Address(RVA = "0x154F3B8", Offset = "0x154F3B8", VA = "0x154F3B8")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600230A")]
		[Address(RVA = "0x154F448", Offset = "0x154F448", VA = "0x154F448")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600230B")]
		[Address(RVA = "0x154F4D8", Offset = "0x154F4D8", VA = "0x154F4D8", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600230C")]
		[Address(RVA = "0x154F4FC", Offset = "0x154F4FC", VA = "0x154F4FC")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600230D")]
		[Address(RVA = "0x154F58C", Offset = "0x154F58C", VA = "0x154F58C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600230E")]
		[Address(RVA = "0x154F5B0", Offset = "0x154F5B0", VA = "0x154F5B0")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x600230F")]
		[Address(RVA = "0x154F63C", Offset = "0x154F63C", VA = "0x154F63C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002310")]
		[Address(RVA = "0x154F660", Offset = "0x154F660", VA = "0x154F660")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002311")]
		[Address(RVA = "0x154F6E0", Offset = "0x154F6E0", VA = "0x154F6E0", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002312")]
		[Address(RVA = "0x154F6E8", Offset = "0x154F6E8", VA = "0x154F6E8")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6002313")]
		[Address(RVA = "0x154F808", Offset = "0x154F808", VA = "0x154F808", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002314")]
		[Address(RVA = "0x154F900", Offset = "0x154F900", VA = "0x154F900")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6002315")]
		[Address(RVA = "0x154F998", Offset = "0x154F998", VA = "0x154F998", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002316")]
		[Address(RVA = "0x154F9A4", Offset = "0x154F9A4", VA = "0x154F9A4")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002317")]
		[Address(RVA = "0x154FAD8", Offset = "0x154FAD8", VA = "0x154FAD8", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002318")]
		[Address(RVA = "0x154FAE4", Offset = "0x154FAE4", VA = "0x154FAE4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002319")]
		[Address(RVA = "0x154FB90", Offset = "0x154FB90", VA = "0x154FB90", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600231A")]
		[Address(RVA = "0x154FB9C", Offset = "0x154FB9C", VA = "0x154FB9C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600231B")]
		[Address(RVA = "0x154FC48", Offset = "0x154FC48", VA = "0x154FC48", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600231C")]
		[Address(RVA = "0x154FC54", Offset = "0x154FC54", VA = "0x154FC54")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x154FD00", Offset = "0x154FD00", VA = "0x154FD00", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600231E")]
		[Address(RVA = "0x154FD0C", Offset = "0x154FD0C", VA = "0x154FD0C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x600231F")]
		[Address(RVA = "0x154FD98", Offset = "0x154FD98", VA = "0x154FD98", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002320")]
		[Address(RVA = "0x154FDBC", Offset = "0x154FDBC", VA = "0x154FDBC")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002321")]
		[Address(RVA = "0x154FE3C", Offset = "0x154FE3C", VA = "0x154FE3C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002322")]
		[Address(RVA = "0x154FE44", Offset = "0x154FE44", VA = "0x154FE44")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002323")]
		[Address(RVA = "0x154FEEC", Offset = "0x154FEEC", VA = "0x154FEEC", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002324")]
		[Address(RVA = "0x154FEF8", Offset = "0x154FEF8", VA = "0x154FEF8")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6002325")]
		[Address(RVA = "0x154FFA0", Offset = "0x154FFA0", VA = "0x154FFA0", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002326")]
		[Address(RVA = "0x154FFB0", Offset = "0x154FFB0", VA = "0x154FFB0")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6002327")]
		[Address(RVA = "0x1550040", Offset = "0x1550040", VA = "0x1550040", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0x154E688", Offset = "0x154E688", VA = "0x154E688")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20005C6")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001DE6")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000330")]
		private IntPtr context
		{
			[Token(Token = "0x6002329")]
			[Address(RVA = "0x155004C", Offset = "0x155004C", VA = "0x155004C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600232A")]
		[Address(RVA = "0x154E4D0", Offset = "0x154E4D0", VA = "0x154E4D0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600232B")]
		[Address(RVA = "0x15500B0", Offset = "0x15500B0", VA = "0x15500B0")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x1550140", Offset = "0x1550140", VA = "0x1550140", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600232D")]
		[Address(RVA = "0x1550164", Offset = "0x1550164", VA = "0x1550164")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600232E")]
		[Address(RVA = "0x15501F4", Offset = "0x15501F4", VA = "0x15501F4", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600232F")]
		[Address(RVA = "0x1550218", Offset = "0x1550218", VA = "0x1550218")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002330")]
		[Address(RVA = "0x15502A8", Offset = "0x15502A8", VA = "0x15502A8", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002331")]
		[Address(RVA = "0x15502CC", Offset = "0x15502CC", VA = "0x15502CC")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002332")]
		[Address(RVA = "0x155034C", Offset = "0x155034C", VA = "0x155034C", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002333")]
		[Address(RVA = "0x1550354", Offset = "0x1550354", VA = "0x1550354")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6002334")]
		[Address(RVA = "0x1550474", Offset = "0x1550474", VA = "0x1550474", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002335")]
		[Address(RVA = "0x155056C", Offset = "0x155056C", VA = "0x155056C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6002336")]
		[Address(RVA = "0x1550604", Offset = "0x1550604", VA = "0x1550604", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002337")]
		[Address(RVA = "0x1550610", Offset = "0x1550610", VA = "0x1550610")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002338")]
		[Address(RVA = "0x1550744", Offset = "0x1550744", VA = "0x1550744", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002339")]
		[Address(RVA = "0x1550750", Offset = "0x1550750", VA = "0x1550750")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600233A")]
		[Address(RVA = "0x15507FC", Offset = "0x15507FC", VA = "0x15507FC", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600233B")]
		[Address(RVA = "0x1550808", Offset = "0x1550808", VA = "0x1550808")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600233C")]
		[Address(RVA = "0x15508B4", Offset = "0x15508B4", VA = "0x15508B4", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600233D")]
		[Address(RVA = "0x15508C0", Offset = "0x15508C0", VA = "0x15508C0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600233E")]
		[Address(RVA = "0x155096C", Offset = "0x155096C", VA = "0x155096C", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600233F")]
		[Address(RVA = "0x1550978", Offset = "0x1550978", VA = "0x1550978")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002340")]
		[Address(RVA = "0x1550A08", Offset = "0x1550A08", VA = "0x1550A08", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002341")]
		[Address(RVA = "0x1550A2C", Offset = "0x1550A2C", VA = "0x1550A2C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002342")]
		[Address(RVA = "0x1550AAC", Offset = "0x1550AAC", VA = "0x1550AAC", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002343")]
		[Address(RVA = "0x1550AB4", Offset = "0x1550AB4", VA = "0x1550AB4")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002344")]
		[Address(RVA = "0x1550B5C", Offset = "0x1550B5C", VA = "0x1550B5C", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002345")]
		[Address(RVA = "0x1550B68", Offset = "0x1550B68", VA = "0x1550B68")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6002346")]
		[Address(RVA = "0x1550C10", Offset = "0x1550C10", VA = "0x1550C10", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002347")]
		[Address(RVA = "0x1550C20", Offset = "0x1550C20", VA = "0x1550C20")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6002348")]
		[Address(RVA = "0x1550CB0", Offset = "0x1550CB0", VA = "0x1550CB0", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0x154E560", Offset = "0x154E560", VA = "0x154E560")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20005C7")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001DE8")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000331")]
		private IntPtr context
		{
			[Token(Token = "0x600234A")]
			[Address(RVA = "0x154E6E4", Offset = "0x154E6E4", VA = "0x154E6E4")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600234B")]
		[Address(RVA = "0x154E5AC", Offset = "0x154E5AC", VA = "0x154E5AC")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600234C")]
		[Address(RVA = "0x154E748", Offset = "0x154E748", VA = "0x154E748")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600234D")]
		[Address(RVA = "0x154E7D8", Offset = "0x154E7D8", VA = "0x154E7D8", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600234E")]
		[Address(RVA = "0x154E7FC", Offset = "0x154E7FC", VA = "0x154E7FC")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600234F")]
		[Address(RVA = "0x154E88C", Offset = "0x154E88C", VA = "0x154E88C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002350")]
		[Address(RVA = "0x154E8B0", Offset = "0x154E8B0", VA = "0x154E8B0")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002351")]
		[Address(RVA = "0x154E940", Offset = "0x154E940", VA = "0x154E940", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002352")]
		[Address(RVA = "0x154E964", Offset = "0x154E964", VA = "0x154E964")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002353")]
		[Address(RVA = "0x154E9E4", Offset = "0x154E9E4", VA = "0x154E9E4", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002354")]
		[Address(RVA = "0x154E9EC", Offset = "0x154E9EC", VA = "0x154E9EC")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6002355")]
		[Address(RVA = "0x154EB0C", Offset = "0x154EB0C", VA = "0x154EB0C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002356")]
		[Address(RVA = "0x154EC04", Offset = "0x154EC04", VA = "0x154EC04")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6002357")]
		[Address(RVA = "0x154EC9C", Offset = "0x154EC9C", VA = "0x154EC9C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002358")]
		[Address(RVA = "0x154ECA8", Offset = "0x154ECA8", VA = "0x154ECA8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002359")]
		[Address(RVA = "0x154EDDC", Offset = "0x154EDDC", VA = "0x154EDDC", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600235A")]
		[Address(RVA = "0x154EDE8", Offset = "0x154EDE8", VA = "0x154EDE8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600235B")]
		[Address(RVA = "0x154EE94", Offset = "0x154EE94", VA = "0x154EE94", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600235C")]
		[Address(RVA = "0x154EEA0", Offset = "0x154EEA0", VA = "0x154EEA0")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600235D")]
		[Address(RVA = "0x154EF4C", Offset = "0x154EF4C", VA = "0x154EF4C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600235E")]
		[Address(RVA = "0x154EF58", Offset = "0x154EF58", VA = "0x154EF58")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600235F")]
		[Address(RVA = "0x154F004", Offset = "0x154F004", VA = "0x154F004", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002360")]
		[Address(RVA = "0x154F010", Offset = "0x154F010", VA = "0x154F010")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002361")]
		[Address(RVA = "0x154F0A0", Offset = "0x154F0A0", VA = "0x154F0A0", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002362")]
		[Address(RVA = "0x154F0C4", Offset = "0x154F0C4", VA = "0x154F0C4")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002363")]
		[Address(RVA = "0x154F144", Offset = "0x154F144", VA = "0x154F144", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002364")]
		[Address(RVA = "0x154F14C", Offset = "0x154F14C", VA = "0x154F14C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002365")]
		[Address(RVA = "0x154F1F4", Offset = "0x154F1F4", VA = "0x154F1F4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002366")]
		[Address(RVA = "0x154F200", Offset = "0x154F200", VA = "0x154F200")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6002367")]
		[Address(RVA = "0x154F2A8", Offset = "0x154F2A8", VA = "0x154F2A8", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002368")]
		[Address(RVA = "0x154F2B8", Offset = "0x154F2B8", VA = "0x154F2B8")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6002369")]
		[Address(RVA = "0x154F348", Offset = "0x154F348", VA = "0x154F348", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0x154E63C", Offset = "0x154E63C", VA = "0x154E63C")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000033")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x154E22C", Offset = "0x154E22C", VA = "0x154E22C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x154E2A8", Offset = "0x154E2A8", VA = "0x154E2A8")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x154E6D4", Offset = "0x154E6D4", VA = "0x154E6D4")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000BE")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x20005C8")]
	public enum Preset
	{
		[Token(Token = "0x4001DEB")]
		Custom,
		[Token(Token = "0x4001DEC")]
		AcousticTile,
		[Token(Token = "0x4001DED")]
		Brick,
		[Token(Token = "0x4001DEE")]
		BrickPainted,
		[Token(Token = "0x4001DEF")]
		Carpet,
		[Token(Token = "0x4001DF0")]
		CarpetHeavy,
		[Token(Token = "0x4001DF1")]
		CarpetHeavyPadded,
		[Token(Token = "0x4001DF2")]
		CeramicTile,
		[Token(Token = "0x4001DF3")]
		Concrete,
		[Token(Token = "0x4001DF4")]
		ConcreteRough,
		[Token(Token = "0x4001DF5")]
		ConcreteBlock,
		[Token(Token = "0x4001DF6")]
		ConcreteBlockPainted,
		[Token(Token = "0x4001DF7")]
		Curtain,
		[Token(Token = "0x4001DF8")]
		Foliage,
		[Token(Token = "0x4001DF9")]
		Glass,
		[Token(Token = "0x4001DFA")]
		GlassHeavy,
		[Token(Token = "0x4001DFB")]
		Grass,
		[Token(Token = "0x4001DFC")]
		Gravel,
		[Token(Token = "0x4001DFD")]
		GypsumBoard,
		[Token(Token = "0x4001DFE")]
		PlasterOnBrick,
		[Token(Token = "0x4001DFF")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4001E00")]
		Soil,
		[Token(Token = "0x4001E01")]
		SoundProof,
		[Token(Token = "0x4001E02")]
		Snow,
		[Token(Token = "0x4001E03")]
		Steel,
		[Token(Token = "0x4001E04")]
		Water,
		[Token(Token = "0x4001E05")]
		WoodThin,
		[Token(Token = "0x4001E06")]
		WoodThick,
		[Token(Token = "0x4001E07")]
		WoodFloor,
		[Token(Token = "0x4001E08")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x20005C9")]
	public sealed class Point
	{
		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x600236B")]
		[Address(RVA = "0x155C664", Offset = "0x155C664", VA = "0x155C664")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0x155C7DC", Offset = "0x155C7DC", VA = "0x155C7DC")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0x155C84C", Offset = "0x155C84C", VA = "0x155C84C")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x20005CA")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBD80C0", Offset = "0xBD80C0")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x2000713")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8A0C", Offset = "0xBD8A0C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002235")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002236")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4002237")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x600277E")]
			[Address(RVA = "0x1464728", Offset = "0x1464728", VA = "0x1464728")]
			public <>c()
			{
			}

			[Token(Token = "0x600277F")]
			[Address(RVA = "0x1464730", Offset = "0x1464730", VA = "0x1464730")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6002780")]
			[Address(RVA = "0x1464748", Offset = "0x1464748", VA = "0x1464748")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000332")]
		public float Item
		{
			[Token(Token = "0x600236E")]
			[Address(RVA = "0x155C884", Offset = "0x155C884", VA = "0x155C884")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0x155C758", Offset = "0x155C758", VA = "0x155C758")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA9A0", Offset = "0xBDA9A0")]
	public Spectrum absorption;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDA9D8", Offset = "0xBDA9D8")]
	public Spectrum transmission;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDAA10", Offset = "0xBDAA10")]
	public Spectrum scattering;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000034")]
	public Preset preset
	{
		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x1554494", Offset = "0x1554494", VA = "0x1554494")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x155449C", Offset = "0x155449C", VA = "0x155449C")]
		set
		{
		}
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x15544C4", Offset = "0x15544C4", VA = "0x15544C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x1553E08", Offset = "0x1553E08", VA = "0x1553E08")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x1554AA8", Offset = "0x1554AA8", VA = "0x1554AA8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x1554AAC", Offset = "0x1554AAC", VA = "0x1554AAC")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x15544C8", Offset = "0x15544C8", VA = "0x15544C8")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x15536A4", Offset = "0x15536A4", VA = "0x15536A4")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x1554B90", Offset = "0x1554B90", VA = "0x1554B90")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x1555010", Offset = "0x1555010", VA = "0x1555010")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x1555490", Offset = "0x1555490", VA = "0x1555490")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x1555910", Offset = "0x1555910", VA = "0x1555910")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x1555D90", Offset = "0x1555D90", VA = "0x1555D90")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x1556210", Offset = "0x1556210", VA = "0x1556210")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x1556690", Offset = "0x1556690", VA = "0x1556690")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x1556B10", Offset = "0x1556B10", VA = "0x1556B10")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x1556F90", Offset = "0x1556F90", VA = "0x1556F90")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x1557410", Offset = "0x1557410", VA = "0x1557410")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x1557890", Offset = "0x1557890", VA = "0x1557890")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x1557D10", Offset = "0x1557D10", VA = "0x1557D10")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x1558190", Offset = "0x1558190", VA = "0x1558190")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x1558610", Offset = "0x1558610", VA = "0x1558610")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x1558A88", Offset = "0x1558A88", VA = "0x1558A88")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x1558F08", Offset = "0x1558F08", VA = "0x1558F08")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x1559264", Offset = "0x1559264", VA = "0x1559264")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x15595C0", Offset = "0x15595C0", VA = "0x15595C0")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x1559A40", Offset = "0x1559A40", VA = "0x1559A40")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x1559EC0", Offset = "0x1559EC0", VA = "0x1559EC0")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x155A340", Offset = "0x155A340", VA = "0x155A340")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x155A69C", Offset = "0x155A69C", VA = "0x155A69C")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x155A818", Offset = "0x155A818", VA = "0x155A818")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x155AB74", Offset = "0x155AB74", VA = "0x155AB74")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x155AFEC", Offset = "0x155AFEC", VA = "0x155AFEC")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x155B46C", Offset = "0x155B46C", VA = "0x155B46C")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x155B8E4", Offset = "0x155B8E4", VA = "0x155B8E4")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x155BD64", Offset = "0x155BD64", VA = "0x155BD64")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x155C1E4", Offset = "0x155C1E4", VA = "0x155C1E4")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x155C69C", Offset = "0x155C69C", VA = "0x155C69C")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000BF")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x1464760", Offset = "0x1464760", VA = "0x1464760")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x1464834", Offset = "0x1464834", VA = "0x1464834")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000C0")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000035")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x1464E08", Offset = "0x1464E08", VA = "0x1464E08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x1464F34", Offset = "0x1464F34", VA = "0x1464F34")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000C1")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000471")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x1464F44", Offset = "0x1464F44", VA = "0x1464F44")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x1464FDC", Offset = "0x1464FDC", VA = "0x1464FDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x14650E8", Offset = "0x14650E8", VA = "0x14650E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x14650EC", Offset = "0x14650EC", VA = "0x14650EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x14650F0", Offset = "0x14650F0", VA = "0x14650F0")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000C2")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x20005CB")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x4000480")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000486")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x10D3368", Offset = "0x10D3368", VA = "0x10D3368")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x10D3198", Offset = "0x10D3198", VA = "0x10D3198")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBE8B98", Offset = "0xBE8B98")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x10D33A0", Offset = "0x10D33A0", VA = "0x10D33A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x10D34E4", Offset = "0x10D34E4", VA = "0x10D34E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x10D35D8", Offset = "0x10D35D8", VA = "0x10D35D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x10D3F9C", Offset = "0x10D3F9C", VA = "0x10D3F9C")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x10D3450", Offset = "0x10D3450", VA = "0x10D3450")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x10D3548", Offset = "0x10D3548", VA = "0x10D3548")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x10D3D04", Offset = "0x10D3D04", VA = "0x10D3D04")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x10D3D84", Offset = "0x10D3D84", VA = "0x10D3D84")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x10D3E0C", Offset = "0x10D3E0C", VA = "0x10D3E0C")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x10D3E94", Offset = "0x10D3E94", VA = "0x10D3E94")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x10D3F14", Offset = "0x10D3F14", VA = "0x10D3F14")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x10D4E10", Offset = "0x10D4E10", VA = "0x10D4E10")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x10D4EB8", Offset = "0x10D4EB8", VA = "0x10D4EB8")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x10D4F60", Offset = "0x10D4F60", VA = "0x10D4F60")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000C3")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000C4")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x1464844", Offset = "0x1464844", VA = "0x1464844")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x1464848", Offset = "0x1464848", VA = "0x1464848")]
	private void Update()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x146484C", Offset = "0x146484C", VA = "0x146484C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x14649B4", Offset = "0x14649B4", VA = "0x14649B4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x1464898", Offset = "0x1464898", VA = "0x1464898")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x1464928", Offset = "0x1464928", VA = "0x1464928")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x1464A00", Offset = "0x1464A00", VA = "0x1464A00")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x1464A98", Offset = "0x1464A98", VA = "0x1464A98")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x1464C08", Offset = "0x1464C08", VA = "0x1464C08")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x1464D78", Offset = "0x1464D78", VA = "0x1464D78")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000C5")]
public class OnApplicationQuit : MonoBehaviour
{
	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x10D5DC4", Offset = "0x10D5DC4", VA = "0x10D5DC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x10D5DC8", Offset = "0x10D5DC8", VA = "0x10D5DC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x10D5DCC", Offset = "0x10D5DCC", VA = "0x10D5DCC")]
	public OnApplicationQuit()
	{
	}
}
[Token(Token = "0x20000C6")]
public class HandGestureInteractor : CacheBehaviour
{
	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObjectGameEvent OnBeginCurve;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObjectGameEvent OnHandRaise;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UnityEvent OnAbortCurve;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObjectGameEvent m_OnGestureFinished;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public UnityEvent _OnHandFree;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public BoolVariable _rightHandInGesture;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public BoolVariable _leftHandInGesture;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public BoolVariable m_useTrigger;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string m_axisName;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public SphereCollider m_sphereCollider;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float m_incrementSphereCollider;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public UnityEvent m_OnNewSegmentTouched;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public List<int> _curveSegmentsGuids;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool _gestureFinished;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	private bool _following;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float _trailTime;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private GameObject _curve;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private CinemachinePathVariable _path;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private CinemachineDollyCartVariable _cart;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private TrailRendererVariable _playerTrail;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float _sphereColliderRadius;

	[Token(Token = "0x17000036")]
	public CinemachinePathVariable Path
	{
		[Token(Token = "0x60003F6")]
		[Address(RVA = "0xF22778", Offset = "0xF22778", VA = "0xF22778")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003F7")]
		[Address(RVA = "0xF22780", Offset = "0xF22780", VA = "0xF22780")]
		set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public CinemachineDollyCartVariable Cart
	{
		[Token(Token = "0x60003F8")]
		[Address(RVA = "0xF22790", Offset = "0xF22790", VA = "0xF22790")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003F9")]
		[Address(RVA = "0xF22798", Offset = "0xF22798", VA = "0xF22798")]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public TrailRendererVariable PlayerTrail
	{
		[Token(Token = "0x60003FA")]
		[Address(RVA = "0xF227A8", Offset = "0xF227A8", VA = "0xF227A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003FB")]
		[Address(RVA = "0xF227B0", Offset = "0xF227B0", VA = "0xF227B0")]
		set
		{
		}
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xF227C0", Offset = "0xF227C0", VA = "0xF227C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xF227F4", Offset = "0xF227F4", VA = "0xF227F4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xF22B70", Offset = "0xF22B70", VA = "0xF22B70")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xF22E34", Offset = "0xF22E34", VA = "0xF22E34")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xF22A00", Offset = "0xF22A00", VA = "0xF22A00")]
	private void SetHand(bool value)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xF22DC0", Offset = "0xF22DC0", VA = "0xF22DC0")]
	private void ResetCurve()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xF22AA0", Offset = "0xF22AA0", VA = "0xF22AA0")]
	private void AddCurveSegment(CurveSegment cs)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xF23030", Offset = "0xF23030", VA = "0xF23030")]
	public HandGestureInteractor()
	{
	}
}
[Token(Token = "0x20000C7")]
public class HapticsManager : CacheBehaviour
{
	[Token(Token = "0x20005CC")]
	private enum HapticsType
	{
		[Token(Token = "0x4001E0E")]
		INVALID,
		[Token(Token = "0x4001E0F")]
		SIMPLE,
		[Token(Token = "0x4001E10")]
		CURVE,
		[Token(Token = "0x4001E11")]
		SPECTRUM,
		[Token(Token = "0x4001E12")]
		LIVE,
		[Token(Token = "0x4001E13")]
		ENUM_COUNT
	}

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private HapticsType _hapticsType;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool _leftHapticsFinished;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	private bool _rightHapticsFinished;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float _leftHapticsDuration;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float _rightHpaticsDuration;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float _leftPlayHead;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float _rightPlayHead;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private CurveHapticsData _rightCurveHapticsData;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private CurveHapticsData _leftCurveHapticsData;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private SpectrumHapticsData _rightSpectrumHapticsData;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private SpectrumHapticsData _leftSpectrumHapticsData;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private FloatVariableHapticsData _rightFloatVariableHapticsData;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private FloatVariableHapticsData _leftFloatVariableHapticsData;

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xF238B8", Offset = "0xF238B8", VA = "0xF238B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xF238C4", Offset = "0xF238C4", VA = "0xF238C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xF23C3C", Offset = "0xF23C3C", VA = "0xF23C3C")]
	public void VibrateLeftController(SimpleHapticsData hapticData)
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xF23C74", Offset = "0xF23C74", VA = "0xF23C74")]
	public void VibrateRightController(SimpleHapticsData hapticData)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xF23CAC", Offset = "0xF23CAC", VA = "0xF23CAC")]
	public void VibrateLeftController(CurveHapticsData hapticsData)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xF23CC4", Offset = "0xF23CC4", VA = "0xF23CC4")]
	public void VibrateRightController(CurveHapticsData hapticsData)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xF23CDC", Offset = "0xF23CDC", VA = "0xF23CDC")]
	public void VibrateLeftController(SpectrumHapticsData hapticsData)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xF23CF4", Offset = "0xF23CF4", VA = "0xF23CF4")]
	public void VibrateRightController(SpectrumHapticsData hapticsData)
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xF23D0C", Offset = "0xF23D0C", VA = "0xF23D0C")]
	public void EnableLiveVibrationLeftController(FloatVariableHapticsData hapticsData)
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xF23D40", Offset = "0xF23D40", VA = "0xF23D40")]
	public void EnableLiveVibrationRightController(FloatVariableHapticsData hapticsData)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xF23D74", Offset = "0xF23D74", VA = "0xF23D74")]
	public void DisableVibrationLeftController()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xF23D80", Offset = "0xF23D80", VA = "0xF23D80")]
	public void DisableVibrationRightController()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xF23918", Offset = "0xF23918", VA = "0xF23918")]
	private void TryToFinishLeftHaptics()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xF23A80", Offset = "0xF23A80", VA = "0xF23A80")]
	public void TryToFinishRightHaptics()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xF23A04", Offset = "0xF23A04", VA = "0xF23A04")]
	private void ContinueLeftHaptics()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xF23BC0", Offset = "0xF23BC0", VA = "0xF23BC0")]
	private void ContinueRightHaptics()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xF23D8C", Offset = "0xF23D8C", VA = "0xF23D8C")]
	public HapticsManager()
	{
	}
}
[Token(Token = "0x20000C8")]
public static class FloatExtentions
{
	[Token(Token = "0x6000415")]
	[Address(RVA = "0xF1D524", Offset = "0xF1D524", VA = "0xF1D524")]
	public static int ConvertToMilliseconds(this float numberInSeconds)
	{
		return default(int);
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xF1D538", Offset = "0xF1D538", VA = "0xF1D538")]
	public static float Normalize01(this float val, float min = 0f, float max = 1f)
	{
		return default(float);
	}
}
[Token(Token = "0x20000C9")]
public class InputHelper : MonoBehaviour
{
	[Token(Token = "0x20005CD")]
	public struct PicoAxis
	{
		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int m_handIndex;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Pvr_KeyCode m_keycode;
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xF22D8C", Offset = "0xF22D8C", VA = "0xF22D8C")]
	public static bool GetAxisInputUp(string axisName, float deadzone = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xF2F540", Offset = "0xF2F540", VA = "0xF2F540")]
	public static bool GetAxisInputDown(string axisName, float deadzone = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xF2F3F0", Offset = "0xF2F3F0", VA = "0xF2F3F0")]
	public static PicoAxis AxisToPico(string axisName)
	{
		return default(PicoAxis);
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xF2F574", Offset = "0xF2F574", VA = "0xF2F574")]
	public InputHelper()
	{
	}
}
[Token(Token = "0x20000CA")]
public class Pvr_InputWrapper : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005CE")]
	public struct Binding
	{
		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int m_hand;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Pvr_KeyCode m_key;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UnityEvent OnKeyDown;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEvent OnKey;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnKeyUp;
	}

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Binding[] Bindings;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform picoControllerR;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform picoControllerL;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] leftTrackingAliases;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] rightTrackingAliases;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 positionOffset;

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x164018C", Offset = "0x164018C", VA = "0x164018C")]
	private void Start()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x1640198", Offset = "0x1640198", VA = "0x1640198")]
	private void Update()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x164043C", Offset = "0x164043C", VA = "0x164043C")]
	private void HandleInputs()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x164034C", Offset = "0x164034C", VA = "0x164034C")]
	private void HandlePicoPosition(Transform[] aliases, int handIndex, Transform picoController)
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x16401F4", Offset = "0x16401F4", VA = "0x16401F4")]
	private void HandlePositionnalTracking(Transform[] aliases, int handIndex)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x1640530", Offset = "0x1640530", VA = "0x1640530")]
	public Pvr_InputWrapper()
	{
	}
}
[Token(Token = "0x20000CB")]
public class Pvr_PointerEvent : MonoBehaviour
{
	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EventDataEvent Event;

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x1641858", Offset = "0x1641858", VA = "0x1641858")]
	private void Update()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x16418B8", Offset = "0x16418B8", VA = "0x16418B8")]
	public Pvr_PointerEvent()
	{
	}
}
[Token(Token = "0x20000CC")]
public class Pvr_PointerWrapper : MonoBehaviour
{
	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BooleanAction booleanAction;

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x16418C0", Offset = "0x16418C0", VA = "0x16418C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x1641928", Offset = "0x1641928", VA = "0x1641928")]
	public Pvr_PointerWrapper()
	{
	}
}
[Token(Token = "0x20000CD")]
public class TriggerGameObjectInject : MonoBehaviour
{
	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObjectVariable m_variableToInject;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> m_acceptedTags;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_useInteraction;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_longPressTime;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnTriggerReleased;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnLongPress;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent OnLongPressFinished;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _longPressTime;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _interactedLeft;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool _interactedRight;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool _finished;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	private bool _firstGrab;

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xF6D5C0", Offset = "0xF6D5C0", VA = "0xF6D5C0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xF6D628", Offset = "0xF6D628", VA = "0xF6D628")]
	public void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xF6D898", Offset = "0xF6D898", VA = "0xF6D898")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xF6D95C", Offset = "0xF6D95C", VA = "0xF6D95C")]
	public TriggerGameObjectInject()
	{
	}
}
[Token(Token = "0x20000CE")]
public class UIManager : CacheBehaviour
{
	[Token(Token = "0x20005CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD80F8", Offset = "0xBD80F8")]
	private sealed class <WaitForScale>d__52 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIManager <>4__this;

		[Token(Token = "0x17000333")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002377")]
			[Address(RVA = "0xF71068", Offset = "0xF71068", VA = "0xF71068", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000334")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002379")]
			[Address(RVA = "0xF710D0", Offset = "0xF710D0", VA = "0xF710D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0xF701CC", Offset = "0xF701CC", VA = "0xF701CC")]
		[DebuggerHidden]
		public <WaitForScale>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0xF70E84", Offset = "0xF70E84", VA = "0xF70E84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0xF70E88", Offset = "0xF70E88", VA = "0xF70E88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0xF71070", Offset = "0xF71070", VA = "0xF71070", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8108", Offset = "0xBD8108")]
	private sealed class <WaitForAnimation>d__53 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string stateName;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIManager <>4__this;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject selectedUI;

		[Token(Token = "0x17000335")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600237D")]
			[Address(RVA = "0xF70DB8", Offset = "0xF70DB8", VA = "0xF70DB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000336")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600237F")]
			[Address(RVA = "0xF70E20", Offset = "0xF70E20", VA = "0xF70E20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0xF701F8", Offset = "0xF701F8", VA = "0xF701F8")]
		[DebuggerHidden]
		public <WaitForAnimation>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0xF70828", Offset = "0xF70828", VA = "0xF70828", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0xF7082C", Offset = "0xF7082C", VA = "0xF7082C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0xF70DC0", Offset = "0xF70DC0", VA = "0xF70DC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8118", Offset = "0xBD8118")]
	private sealed class <WaitForSelection>d__54 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIManager <>4__this;

		[Token(Token = "0x17000337")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002383")]
			[Address(RVA = "0xF71210", Offset = "0xF71210", VA = "0xF71210", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000338")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002385")]
			[Address(RVA = "0xF71278", Offset = "0xF71278", VA = "0xF71278", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0xF702A0", Offset = "0xF702A0", VA = "0xF702A0")]
		[DebuggerHidden]
		public <WaitForSelection>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0xF71134", Offset = "0xF71134", VA = "0xF71134", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0xF71138", Offset = "0xF71138", VA = "0xF71138", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0xF71218", Offset = "0xF71218", VA = "0xF71218", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public PostProcessVolume m_headsetVolume;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntVariable m_hpPlayer;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public FloatVariable m_deathTime;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject m_splashScreen;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public UI_MainScreen m_mainMenu;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject m_environment;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject m_magicCircle;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject m_reverseSphere;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject m_newPerkVerticalLayout;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject m_newPerkText;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public FloatVariable m_reverseSpherePower;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public FloatVariable m_magicWallPower;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public UnityEvent m_OnCompleteDissolving;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public StringUnityEvent OnSelectedUIPointer;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public List<string> m_acceptedTagsForSelectionUIPointer;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public string m_buttonStateName;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public string m_idleStateName;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public StringVariable m_dominantHand;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject m_shopCard;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float m_UIScaleTimer;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDAA68", Offset = "0xBDAA68")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDAA68", Offset = "0xBDAA68")]
	public IntUnityEvent OnHoverInstanceId;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public IntUnityEvent OnExitInstanceId;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public UnityEvent OnOculusMenu;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDAAB8", Offset = "0xBDAAB8")]
	public GameObjectVariable m_headset;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject m_damageDisplay;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Color m_critColor;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDAAF0", Offset = "0xBDAAF0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDAAF0", Offset = "0xBDAAF0")]
	public GameObject m_prefabCinematicIntro;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDAB40", Offset = "0xBDAB40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDAB40", Offset = "0xBDAB40")]
	public GameObject m_prefabCinematicEnding;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDAB90", Offset = "0xBDAB90")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDAB90", Offset = "0xBDAB90")]
	public GameObject m_prefabCredits;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool _gameLose;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Transform _headsetTransform;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Animator _currentAnimator;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private string _currentTrigger;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private CoroutineHandle _coroutineHandle;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private bool _canSelect;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float _UIScaleTimer;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private GameObject _currentUI;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private Vector3 _currentUIOldScale;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private AudioUIHolder _currentAudioHolder;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private float _previousTime;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private float _currentTime;

	[Token(Token = "0x40004EC")]
	private const float TIME_BETWEEN_CHECKS = 0.5f;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private bool _isOpenVRDevice;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x201")]
	private bool _isCurrentlySelecting;

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xF6E5BC", Offset = "0xF6E5BC", VA = "0xF6E5BC")]
	private void Start()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xF6E6AC", Offset = "0xF6E6AC", VA = "0xF6E6AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xF6E61C", Offset = "0xF6E61C", VA = "0xF6E61C")]
	public void DominantHandHasChanged()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xF6E7A8", Offset = "0xF6E7A8", VA = "0xF6E7A8")]
	public void PlayerLoseLifeFeedback()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xF6E940", Offset = "0xF6E940", VA = "0xF6E940")]
	public void PlayerLoseLifeFeedbackUpdate(float value)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xF6E9D4", Offset = "0xF6E9D4", VA = "0xF6E9D4")]
	public void OnIntroMenu()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xF6EA54", Offset = "0xF6EA54", VA = "0xF6EA54")]
	public void OnLaunchCinematicIntro()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xF6EB08", Offset = "0xF6EB08", VA = "0xF6EB08")]
	public void OnLaunchCinematicEnding()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xF6EB7C", Offset = "0xF6EB7C", VA = "0xF6EB7C")]
	public void OnCredits()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xF6EBF0", Offset = "0xF6EBF0", VA = "0xF6EBF0")]
	public void OnMainMenuStarted()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xF6ECE4", Offset = "0xF6ECE4", VA = "0xF6ECE4")]
	public void OnCalibrationStarted()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xF6ED30", Offset = "0xF6ED30", VA = "0xF6ED30")]
	public void WallAppearing()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xF6ED4C", Offset = "0xF6ED4C", VA = "0xF6ED4C")]
	public void WallAppearingTween(float value)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xF6ED70", Offset = "0xF6ED70", VA = "0xF6ED70")]
	public void OnPlayerDeath()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xF6ED7C", Offset = "0xF6ED7C", VA = "0xF6ED7C")]
	public void OnWallAppearingTweenComplete()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xF6EDC0", Offset = "0xF6EDC0", VA = "0xF6EDC0")]
	public void Dissolve(float from, float to)
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xF6EF8C", Offset = "0xF6EF8C", VA = "0xF6EF8C")]
	public void DissolveTween(float value)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xF6EFB0", Offset = "0xF6EFB0", VA = "0xF6EFB0")]
	public void OnCompleteDissolveTween()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xF6F004", Offset = "0xF6F004", VA = "0xF6F004")]
	public void OnHit(object[] parameters)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xF6F280", Offset = "0xF6F280", VA = "0xF6F280")]
	public void OnHoverPointer(ObjectPointer.EventData eventData)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xF6F950", Offset = "0xF6F950", VA = "0xF6F950")]
	public void OnExitPointer(ObjectPointer.EventData eventData)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xF6FD30", Offset = "0xF6FD30", VA = "0xF6FD30")]
	public void OnSelectedUI(ObjectPointer.EventData eventData)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xF6F780", Offset = "0xF6F780", VA = "0xF6F780")]
	public Transform FindButton(ObjectPointer.EventData eventData)
	{
		return null;
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xF70150", Offset = "0xF70150", VA = "0xF70150")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE8C1C", Offset = "0xBE8C1C")]
	private IEnumerator<float> WaitForScale()
	{
		return null;
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xF70088", Offset = "0xF70088", VA = "0xF70088")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE8C80", Offset = "0xBE8C80")]
	public IEnumerator<float> WaitForAnimation(Animator animator, string stateName, GameObject selectedUI)
	{
		return null;
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xF70224", Offset = "0xF70224", VA = "0xF70224")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE8CE4", Offset = "0xBE8CE4")]
	public IEnumerator<float> WaitForSelection()
	{
		return null;
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xF702CC", Offset = "0xF702CC", VA = "0xF702CC")]
	public void OnNewPerkListShop(PerkListWrapper perkList)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xF70498", Offset = "0xF70498", VA = "0xF70498")]
	public void OnExitShop()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xF7072C", Offset = "0xF7072C", VA = "0xF7072C")]
	public UIManager()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xF707AC", Offset = "0xF707AC", VA = "0xF707AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8D48", Offset = "0xBE8D48")]
	private bool <FindButton>b__51_0(Transform x)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000CF")]
public class PvrFeovation : MonoBehaviour
{
	[Token(Token = "0x20005D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8128", Offset = "0xBD8128")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000339")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002389")]
			[Address(RVA = "0xEF029C", Offset = "0xEF029C", VA = "0xEF029C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600238B")]
			[Address(RVA = "0xEF0304", Offset = "0xEF0304", VA = "0xEF0304", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0xEF01AC", Offset = "0xEF01AC", VA = "0xEF01AC")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6002387")]
		[Address(RVA = "0xEF01E0", Offset = "0xEF01E0", VA = "0xEF01E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002388")]
		[Address(RVA = "0xEF01E4", Offset = "0xEF01E4", VA = "0xEF01E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0xEF02A4", Offset = "0xEF02A4", VA = "0xEF02A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xEF014C", Offset = "0xEF014C", VA = "0xEF014C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE8D58", Offset = "0xBE8D58")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xEF01D8", Offset = "0xEF01D8", VA = "0xEF01D8")]
	public PvrFeovation()
	{
	}
}
[Token(Token = "0x20000D0")]
public class AchievementSample : MonoBehaviour
{
	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text dataOutput;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField getDefinitionsByNameInputField;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputField getProgressByNameInputField;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputField unLockInputField;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InputField addCountInputField;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InputField addFieldsInputField;

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x140C104", Offset = "0x140C104", VA = "0x140C104")]
	private void Start()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x140C164", Offset = "0x140C164", VA = "0x140C164")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x140C1C4", Offset = "0x140C1C4", VA = "0x140C1C4")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x140C39C", Offset = "0x140C39C", VA = "0x140C39C")]
	private void Update()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x140C3A8", Offset = "0x140C3A8", VA = "0x140C3A8")]
	public void AsyncInitialize()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x140C428", Offset = "0x140C428", VA = "0x140C428")]
	public void GetDefinitionsByName()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x140C608", Offset = "0x140C608", VA = "0x140C608")]
	public void GetProgressByName()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x140C7E8", Offset = "0x140C7E8", VA = "0x140C7E8")]
	public void GetAllDefinitions()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x140C910", Offset = "0x140C910", VA = "0x140C910")]
	public void GetAllProgress()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x140CA38", Offset = "0x140CA38", VA = "0x140CA38")]
	public void UnLock()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x140CBD0", Offset = "0x140CBD0", VA = "0x140CBD0")]
	public void AddCount()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x140CECC", Offset = "0x140CECC", VA = "0x140CECC")]
	public void AddFields()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x140C2F4", Offset = "0x140C2F4", VA = "0x140C2F4")]
	private void achievementInit()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x140C868", Offset = "0x140C868", VA = "0x140C868")]
	private void getAchievementAllDefinition()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x140C990", Offset = "0x140C990", VA = "0x140C990")]
	private void getAchievementAllProgress()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x140D00C", Offset = "0x140D00C", VA = "0x140D00C")]
	private void addFieldsAchievement(string achievementName, string fields)
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x140CDE8", Offset = "0x140CDE8", VA = "0x140CDE8")]
	private void addCountAchievement(string achievementName, string count)
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x140CB20", Offset = "0x140CB20", VA = "0x140CB20")]
	private void unlockAchievement(string achievementName)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x140C738", Offset = "0x140C738", VA = "0x140C738")]
	private void getAchievementProgress(string[] achievementNames)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x140C558", Offset = "0x140C558", VA = "0x140C558")]
	private void getAchievementDefinition(string[] achievementNames)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x140C23C", Offset = "0x140C23C", VA = "0x140C23C")]
	private void printOutputLine(string newLine)
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x140D0C4", Offset = "0x140D0C4", VA = "0x140D0C4")]
	private void achievementAllDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x140D908", Offset = "0x140D908", VA = "0x140D908")]
	private void achievementAllProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x140DF60", Offset = "0x140DF60", VA = "0x140DF60")]
	private void achievementFieldsCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x140E20C", Offset = "0x140E20C", VA = "0x140E20C")]
	private void achievementCountCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x140E4B8", Offset = "0x140E4B8", VA = "0x140E4B8")]
	private void achievementUnlockCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x140E764", Offset = "0x140E764", VA = "0x140E764")]
	private void achievementProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x140ECAC", Offset = "0x140ECAC", VA = "0x140ECAC")]
	private void achievementDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x140F26C", Offset = "0x140F26C", VA = "0x140F26C")]
	private void initAchievementCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x140F518", Offset = "0x140F518", VA = "0x140F518")]
	private void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x140F5D0", Offset = "0x140F5D0", VA = "0x140F5D0")]
	public AchievementSample()
	{
	}
}
[Token(Token = "0x20000D1")]
public class Pvr_Controller : MonoBehaviour
{
	[Token(Token = "0x20005D3")]
	public enum UserHandNess
	{
		[Token(Token = "0x4001E2A")]
		Right,
		[Token(Token = "0x4001E2B")]
		Left
	}

	[Token(Token = "0x20005D4")]
	public enum GazeType
	{
		[Token(Token = "0x4001E2D")]
		Never,
		[Token(Token = "0x4001E2E")]
		DuringMotion,
		[Token(Token = "0x4001E2F")]
		Always
	}

	[Token(Token = "0x20005D5")]
	public enum ControllerAxis
	{
		[Token(Token = "0x4001E31")]
		Controller,
		[Token(Token = "0x4001E32")]
		Wrist,
		[Token(Token = "0x4001E33")]
		Elbow,
		[Token(Token = "0x4001E34")]
		Shoulder
	}

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controller0;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller1;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UserHandNess handness;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ControllerAxis Axis;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GazeType Gazetype;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDABE0", Offset = "0xBDABE0")]
	public float ElbowHeight;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDABFC", Offset = "0xBDABFC")]
	public float ElbowDepth;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDAC18", Offset = "0xBDAC18")]
	public float PointerTiltAngle;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float mouseX;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float mouseY;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mouseZ;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] inputDirection;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDAC30", Offset = "0xBDAC30")]
	private static Vector3 <pointerPosition>k__BackingField;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDAC40", Offset = "0xBDAC40")]
	private static Quaternion <pointerRotation>k__BackingField;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDAC50", Offset = "0xBDAC50")]
	private static Vector3 <elbowPosition>k__BackingField;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDAC60", Offset = "0xBDAC60")]
	private static Quaternion <elbowRotation>k__BackingField;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDAC70", Offset = "0xBDAC70")]
	private static Vector3 <wristPosition>k__BackingField;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDAC80", Offset = "0xBDAC80")]
	private static Quaternion <wristRotation>k__BackingField;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDAC90", Offset = "0xBDAC90")]
	private static Vector3 <shoulderPosition>k__BackingField;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDACA0", Offset = "0xBDACA0")]
	private static Quaternion <shoulderRotation>k__BackingField;

	[Token(Token = "0x17000039")]
	public static Vector3 pointerPosition
	{
		[Token(Token = "0x600047B")]
		[Address(RVA = "0xEF209C", Offset = "0xEF209C", VA = "0xEF209C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8DBC", Offset = "0xBE8DBC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600047C")]
		[Address(RVA = "0xEF20F0", Offset = "0xEF20F0", VA = "0xEF20F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8DCC", Offset = "0xBE8DCC")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public static Quaternion pointerRotation
	{
		[Token(Token = "0x600047D")]
		[Address(RVA = "0xEF2160", Offset = "0xEF2160", VA = "0xEF2160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8DDC", Offset = "0xBE8DDC")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600047E")]
		[Address(RVA = "0xEF21B4", Offset = "0xEF21B4", VA = "0xEF21B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8DEC", Offset = "0xBE8DEC")]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public static Vector3 elbowPosition
	{
		[Token(Token = "0x600047F")]
		[Address(RVA = "0xEF2228", Offset = "0xEF2228", VA = "0xEF2228")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8DFC", Offset = "0xBE8DFC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000480")]
		[Address(RVA = "0xEF227C", Offset = "0xEF227C", VA = "0xEF227C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8E0C", Offset = "0xBE8E0C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public static Quaternion elbowRotation
	{
		[Token(Token = "0x6000481")]
		[Address(RVA = "0xEF22EC", Offset = "0xEF22EC", VA = "0xEF22EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8E1C", Offset = "0xBE8E1C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000482")]
		[Address(RVA = "0xEF2340", Offset = "0xEF2340", VA = "0xEF2340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8E2C", Offset = "0xBE8E2C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public static Vector3 wristPosition
	{
		[Token(Token = "0x6000483")]
		[Address(RVA = "0xEF23B4", Offset = "0xEF23B4", VA = "0xEF23B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8E3C", Offset = "0xBE8E3C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000484")]
		[Address(RVA = "0xEF2408", Offset = "0xEF2408", VA = "0xEF2408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8E4C", Offset = "0xBE8E4C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public static Quaternion wristRotation
	{
		[Token(Token = "0x6000485")]
		[Address(RVA = "0xEF2478", Offset = "0xEF2478", VA = "0xEF2478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8E5C", Offset = "0xBE8E5C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000486")]
		[Address(RVA = "0xEF24CC", Offset = "0xEF24CC", VA = "0xEF24CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8E6C", Offset = "0xBE8E6C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public static Vector3 shoulderPosition
	{
		[Token(Token = "0x6000487")]
		[Address(RVA = "0xEF2540", Offset = "0xEF2540", VA = "0xEF2540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8E7C", Offset = "0xBE8E7C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000488")]
		[Address(RVA = "0xEF2594", Offset = "0xEF2594", VA = "0xEF2594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8E8C", Offset = "0xBE8E8C")]
		set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public static Quaternion shoulderRotation
	{
		[Token(Token = "0x6000489")]
		[Address(RVA = "0xEF2604", Offset = "0xEF2604", VA = "0xEF2604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8E9C", Offset = "0xBE8E9C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600048A")]
		[Address(RVA = "0xEF2658", Offset = "0xEF2658", VA = "0xEF2658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8EAC", Offset = "0xBE8EAC")]
		set
		{
		}
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xEF0384", Offset = "0xEF0384", VA = "0xEF0384")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xEF04C0", Offset = "0xEF04C0", VA = "0xEF04C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xEF0530", Offset = "0xEF0530", VA = "0xEF0530")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xEF066C", Offset = "0xEF066C", VA = "0xEF066C")]
	private void MainControllerChanged(string index)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xEF0714", Offset = "0xEF0714", VA = "0xEF0714")]
	private void HandnessChanged(string index)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xEF0718", Offset = "0xEF0718", VA = "0xEF0718")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xEF0670", Offset = "0xEF0670", VA = "0xEF0670")]
	private void RefreshHandness()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xEF0778", Offset = "0xEF0778", VA = "0xEF0778")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xEF08FC", Offset = "0xEF08FC", VA = "0xEF08FC")]
	private void ShowController()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xEF0A5C", Offset = "0xEF0A5C", VA = "0xEF0A5C")]
	private void CheckControllerState(string data)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xEF0B30", Offset = "0xEF0B30", VA = "0xEF0B30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xEF071C", Offset = "0xEF071C", VA = "0xEF071C")]
	public static void ChangeHandNess()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xEF0D34", Offset = "0xEF0D34", VA = "0xEF0D34")]
	private void DoUpdateControler0()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xEF0DB0", Offset = "0xEF0DB0", VA = "0xEF0DB0")]
	private void DoUpdateControler1()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xEF0E34", Offset = "0xEF0E34", VA = "0xEF0E34")]
	private void UpdateControlloerRay(bool update0 = true, bool update1 = true)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xEF1EB8", Offset = "0xEF1EB8", VA = "0xEF1EB8")]
	private Quaternion UpdateSimulatedFrameParams()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xEF0F88", Offset = "0xEF0F88", VA = "0xEF0F88")]
	private void SetArmParaToSo(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xEF0F98", Offset = "0xEF0F98", VA = "0xEF0F98")]
	private void CalcArmModelfromSo(int hand)
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xEF1474", Offset = "0xEF1474", VA = "0xEF1474")]
	public void UpdateControllerDataSO(int hand)
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xEF26CC", Offset = "0xEF26CC", VA = "0xEF26CC")]
	public Pvr_Controller()
	{
	}
}
[Token(Token = "0x20000D2")]
public class Pvr_ControllerDemo : MonoBehaviour
{
	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HeadSetController;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller0;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject controller1;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject cube;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ray ray;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject currentController;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform lastHit;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform currentHit;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material normat;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Material gazemat;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Material clickmat;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool noClick;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject referenceObj;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float rayDefaultLength;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isHasController;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool headcontrolmode;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RaycastHit hit;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject rayLine;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject dot;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform dragObj;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float disX;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float disY;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float disZ;

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xEF2740", Offset = "0xEF2740", VA = "0xEF2740")]
	private void Start()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xEF28D4", Offset = "0xEF28D4", VA = "0xEF28D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xEF29EC", Offset = "0xEF29EC", VA = "0xEF29EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xEF4394", Offset = "0xEF4394", VA = "0xEF4394")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xEF4444", Offset = "0xEF4444", VA = "0xEF4444")]
	private void ControllerStateListener(string data)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xEF44F4", Offset = "0xEF44F4", VA = "0xEF44F4")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xEF458C", Offset = "0xEF458C", VA = "0xEF458C")]
	public void SwitchControlMode()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xEF4590", Offset = "0xEF4590", VA = "0xEF4590")]
	public Pvr_ControllerDemo()
	{
	}
}
[Token(Token = "0x20000D3")]
public class Pvr_ControllerEventsExamples : MonoBehaviour
{
	[Token(Token = "0x6000494")]
	[Address(RVA = "0xEF45A0", Offset = "0xEF45A0", VA = "0xEF45A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xEF47D8", Offset = "0xEF47D8", VA = "0xEF47D8")]
	private void UIPointerElementEnter(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xEF4878", Offset = "0xEF4878", VA = "0xEF4878")]
	private void UIPointerElementExit(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xEF4918", Offset = "0xEF4918", VA = "0xEF4918")]
	private void UIPointerElementClick(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xEF49B8", Offset = "0xEF49B8", VA = "0xEF49B8")]
	private void UIPointerElementDragStart(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xEF4A58", Offset = "0xEF4A58", VA = "0xEF4A58")]
	private void UIPointerElementDragEnd(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xEF4AF8", Offset = "0xEF4AF8", VA = "0xEF4AF8")]
	public Pvr_ControllerEventsExamples()
	{
	}
}
[Token(Token = "0x20000D4")]
public class Pvr_ControllerInit : MonoBehaviour
{
	[Token(Token = "0x20005D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8138", Offset = "0xBD8138")]
	private sealed class <RefreshController>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int id;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_ControllerInit <>4__this;

		[Token(Token = "0x1700033B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600238F")]
			[Address(RVA = "0xEF66C0", Offset = "0xEF66C0", VA = "0xEF66C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002391")]
			[Address(RVA = "0xEF6728", Offset = "0xEF6728", VA = "0xEF6728", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0xEF5958", Offset = "0xEF5958", VA = "0xEF5958")]
		[DebuggerHidden]
		public <RefreshController>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x600238D")]
		[Address(RVA = "0xEF62A8", Offset = "0xEF62A8", VA = "0xEF62A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0xEF62AC", Offset = "0xEF62AC", VA = "0xEF62AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0xEF66C8", Offset = "0xEF66C8", VA = "0xEF66C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerVariety Variety;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isCustomModel;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject goblin;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject g2;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject neo2L;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject neo2R;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject neo3L;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject neo3R;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material standardMat;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material unlitMat;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int controllerType;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public bool loadModelSuccess;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int systemOrUnity;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private JsonData curControllerData;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string modelName;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string texFormat;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string prePath;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string modelFilePath;

	[Token(Token = "0x4000532")]
	private const string goblinTexbasePath = "Controller/controller1/controller1";

	[Token(Token = "0x4000533")]
	private const string g2TexbasePath = "Controller/controller3/controller3";

	[Token(Token = "0x4000534")]
	private const string neo2TexbasePath = "Controller/controller4/controller4";

	[Token(Token = "0x4000535")]
	private const string neo3TexbasePath = "Controller/controller5/controller5";

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xEF4B00", Offset = "0xEF4B00", VA = "0xEF4B00")]
	private void Awake()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xEF4C78", Offset = "0xEF4C78", VA = "0xEF4C78")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xEF4D7C", Offset = "0xEF4D7C", VA = "0xEF4D7C")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xEF501C", Offset = "0xEF501C", VA = "0xEF501C")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xEF5214", Offset = "0xEF5214", VA = "0xEF5214")]
	private void LoadResFromJson()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xEF5440", Offset = "0xEF5440", VA = "0xEF5440")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xEF57F4", Offset = "0xEF57F4", VA = "0xEF57F4")]
	private void CheckControllerStateOfAbility(string data)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xEF4D88", Offset = "0xEF4D88", VA = "0xEF4D88")]
	private void DestroyLocalController()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xEF552C", Offset = "0xEF552C", VA = "0xEF552C")]
	private void DestroySysController()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xEF53B4", Offset = "0xEF53B4", VA = "0xEF53B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE8EBC", Offset = "0xBE8EBC")]
	private IEnumerator RefreshController(int id)
	{
		return null;
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xEF5984", Offset = "0xEF5984", VA = "0xEF5984")]
	private void LoadControllerFromPrefab()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xEF59AC", Offset = "0xEF59AC", VA = "0xEF59AC")]
	private void LoadControllerFromSystem(int id)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xEF5C4C", Offset = "0xEF5C4C", VA = "0xEF5C4C")]
	private void LoadTexture(Pvr_ControllerVisual visual, string controllerName, bool fromRes)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xEF5FF0", Offset = "0xEF5FF0", VA = "0xEF5FF0")]
	private Texture2D LoadOneTexture(string filepath, bool fromRes)
	{
		return null;
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xEF60FC", Offset = "0xEF60FC", VA = "0xEF60FC")]
	private byte[] ReadPNG(string path)
	{
		return null;
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xEF6208", Offset = "0xEF6208", VA = "0xEF6208")]
	public Pvr_ControllerInit()
	{
	}
}
[Token(Token = "0x20000D5")]
public class Pvr_ControllerLink
{
	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaClass javaHummingbirdClass;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AndroidJavaClass javaPico2ReceiverClass;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AndroidJavaClass javaserviceClass;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AndroidJavaClass javavractivityclass;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AndroidJavaClass javaCVClass;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AndroidJavaObject activity;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string gameobjname;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool picoDevice;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string hummingBirdMac;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hummingBirdRSSI;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool goblinserviceStarted;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool neoserviceStarted;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool controller0Connected;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool controller1Connected;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int mainHandID;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Pvr_Controller.UserHandNess handness;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int controllerType;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ControllerHand Controller0;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ControllerHand Controller1;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int platFormType;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int trackingmode;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int systemProp;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int enablehand6dofbyhead;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool switchHomeKey;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float[] hbPoseData;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float[] sensorData;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int[] keyData;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int[] neo3TouchValue;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float[] fixedState;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float[] neoposeData;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int[] goblinKeyArray;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int[] neoKeyArray;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int[] neotriggerV;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float[] velocity;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float[] angularVelocity;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float[] acceData;

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xEF6730", Offset = "0xEF6730", VA = "0xEF6730")]
	public Pvr_ControllerLink(string name)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xEF6B84", Offset = "0xEF6B84", VA = "0xEF6B84")]
	private void StartHummingBirdService()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xEF7624", Offset = "0xEF7624", VA = "0xEF7624")]
	public bool IsServiceExisted()
	{
		return default(bool);
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xEF73A4", Offset = "0xEF73A4", VA = "0xEF73A4")]
	public void SetGameObjectToJar(string name)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xEF74C0", Offset = "0xEF74C0", VA = "0xEF74C0")]
	public void BindService()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xEF77C4", Offset = "0xEF77C4", VA = "0xEF77C4")]
	public void UnBindService()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xEF7928", Offset = "0xEF7928", VA = "0xEF7928")]
	public void StopLark2Receiver()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xEF7A9C", Offset = "0xEF7A9C", VA = "0xEF7A9C")]
	public void StartLark2Receiver()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xEF7BD8", Offset = "0xEF7BD8", VA = "0xEF7BD8")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xEF7D4C", Offset = "0xEF7D4C", VA = "0xEF7D4C")]
	public void StartLark2Service()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xEF7EF8", Offset = "0xEF7EF8", VA = "0xEF7EF8")]
	public int getHandness()
	{
		return default(int);
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xEF8114", Offset = "0xEF8114", VA = "0xEF8114")]
	public void setHandness(int hand)
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xEF8278", Offset = "0xEF8278", VA = "0xEF8278")]
	public void StartScan()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xEF839C", Offset = "0xEF839C", VA = "0xEF839C")]
	public void StopScan()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xEF7230", Offset = "0xEF7230", VA = "0xEF7230")]
	public int GetSysproc()
	{
		return default(int);
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xEF84C4", Offset = "0xEF84C4", VA = "0xEF84C4")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xEF86D4", Offset = "0xEF86D4", VA = "0xEF86D4")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xEF881C", Offset = "0xEF881C", VA = "0xEF881C")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xEF893C", Offset = "0xEF893C", VA = "0xEF893C")]
	public bool StartUpgrade()
	{
		return default(bool);
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xEF8A78", Offset = "0xEF8A78", VA = "0xEF8A78")]
	public void setBinPath(string path, bool isasset)
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xEF8C08", Offset = "0xEF8C08", VA = "0xEF8C08")]
	public string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xEF8D6C", Offset = "0xEF8D6C", VA = "0xEF8D6C")]
	public long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xEF8ED4", Offset = "0xEF8ED4", VA = "0xEF8ED4")]
	public string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xEF9038", Offset = "0xEF9038", VA = "0xEF9038")]
	public long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xEF91A0", Offset = "0xEF91A0", VA = "0xEF91A0")]
	public int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xEF9524", Offset = "0xEF9524", VA = "0xEF9524")]
	public void RebackToLauncher()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xEF970C", Offset = "0xEF970C", VA = "0xEF970C")]
	public void TurnUpVolume()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xEF98A0", Offset = "0xEF98A0", VA = "0xEF98A0")]
	public void TurnDownVolume()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xEF9A34", Offset = "0xEF9A34", VA = "0xEF9A34")]
	public float[] GetHBControllerPoseData()
	{
		return null;
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xEF9E6C", Offset = "0xEF9E6C", VA = "0xEF9E6C")]
	public float[] GetControllerSensorData()
	{
		return null;
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xEFA040", Offset = "0xEFA040", VA = "0xEFA040")]
	public int[] GetControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xEFA144", Offset = "0xEFA144", VA = "0xEFA144")]
	public int[] GetNeo3TouchData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xEFA9C8", Offset = "0xEFA9C8", VA = "0xEFA9C8")]
	public int GetNeo3GripValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xEFAB64", Offset = "0xEFAB64", VA = "0xEFAB64")]
	public float[] GetControllerFixedSensorState(int hand)
	{
		return null;
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xEFB1F8", Offset = "0xEFB1F8", VA = "0xEFB1F8")]
	public float[] GetCvControllerPoseData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xEFB8A8", Offset = "0xEFB8A8", VA = "0xEFB8A8")]
	public int[] GetHBControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xEFCE90", Offset = "0xEFCE90", VA = "0xEFCE90")]
	public int GetHBKeyValue()
	{
		return default(int);
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xEFD030", Offset = "0xEFD030", VA = "0xEFD030")]
	public int[] GetCvControllerKeyData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xEFEF04", Offset = "0xEFEF04", VA = "0xEFEF04")]
	public int GetCVTriggerValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xEFF0C8", Offset = "0xEFF0C8", VA = "0xEFF0C8")]
	public void AutoConnectHbController(int scanTimeMs)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xEFF258", Offset = "0xEFF258", VA = "0xEFF258")]
	public void StartControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xEFF434", Offset = "0xEFF434", VA = "0xEFF434")]
	public void StopControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xEFF610", Offset = "0xEFF610", VA = "0xEFF610")]
	public void SetUnityVersionToJar(string version)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xEFF73C", Offset = "0xEFF73C", VA = "0xEFF73C")]
	public Vector3 GetVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xEFFB10", Offset = "0xEFFB10", VA = "0xEFFB10")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xEFFF7C", Offset = "0xEFFF7C", VA = "0xEFFF7C")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xF00368", Offset = "0xF00368", VA = "0xF00368")]
	public string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xF004CC", Offset = "0xF004CC", VA = "0xF004CC")]
	public void VibrateNeo2Controller(float strength, int time, int hand)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xF00800", Offset = "0xF00800", VA = "0xF00800")]
	public int GetMainControllerIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xF00978", Offset = "0xF00978", VA = "0xF00978")]
	public void SetMainController(int index)
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xF00AD8", Offset = "0xF00AD8", VA = "0xF00AD8")]
	public void ResetHeadSensorForController()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xF00C00", Offset = "0xF00C00", VA = "0xF00C00")]
	public void GetDeviceVersion(int deviceType)
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xF00D68", Offset = "0xF00D68", VA = "0xF00D68")]
	public void GetControllerSnCode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xF00ED0", Offset = "0xF00ED0", VA = "0xF00ED0")]
	public void SetControllerUnbind(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xF01038", Offset = "0xF01038", VA = "0xF01038")]
	public void SetStationRestart()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xF01160", Offset = "0xF01160", VA = "0xF01160")]
	public void StartStationOtaUpdate()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xF01288", Offset = "0xF01288", VA = "0xF01288")]
	public void StartControllerOtaUpdate(int mode, int controllerSerialNum)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xF0145C", Offset = "0xF0145C", VA = "0xF0145C")]
	public void EnterPairMode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xF015C4", Offset = "0xF015C4", VA = "0xF015C4")]
	public void SetControllerShutdown(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xF0172C", Offset = "0xF0172C", VA = "0xF0172C")]
	public int GetStationPairState()
	{
		return default(int);
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xF018A8", Offset = "0xF018A8", VA = "0xF018A8")]
	public int GetStationOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xF01A24", Offset = "0xF01A24", VA = "0xF01A24")]
	public int GetControllerOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xF01BA0", Offset = "0xF01BA0", VA = "0xF01BA0")]
	public void GetControllerVersionAndSN(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xF01D08", Offset = "0xF01D08", VA = "0xF01D08")]
	public void GetControllerUniqueID()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xF01E30", Offset = "0xF01E30", VA = "0xF01E30")]
	public void InterruptStationPairMode()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xF01F58", Offset = "0xF01F58", VA = "0xF01F58")]
	public int GetControllerAbility(int controllerSerialNum)
	{
		return default(int);
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xF020DC", Offset = "0xF020DC", VA = "0xF020DC")]
	public void SwitchHomeKey(bool state)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xF02190", Offset = "0xF02190", VA = "0xF02190")]
	public void SetBootReconnect()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xF022B0", Offset = "0xF022B0", VA = "0xF022B0")]
	public int GetTemperature()
	{
		return default(int);
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xF02424", Offset = "0xF02424", VA = "0xF02424")]
	public int GetDeviceType()
	{
		return default(int);
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xF02598", Offset = "0xF02598", VA = "0xF02598")]
	public int GetControllerType()
	{
		return default(int);
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xF026A0", Offset = "0xF026A0", VA = "0xF026A0")]
	public string GetHummingBird2SN()
	{
		return null;
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xF027FC", Offset = "0xF027FC", VA = "0xF027FC")]
	public string GetControllerVersion()
	{
		return null;
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xF02958", Offset = "0xF02958", VA = "0xF02958")]
	public bool IsEnbleTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xF02AB8", Offset = "0xF02AB8", VA = "0xF02AB8")]
	public void StartCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xF02C20", Offset = "0xF02C20", VA = "0xF02C20")]
	public void StopCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xF02D88", Offset = "0xF02D88", VA = "0xF02D88")]
	public int GetControllerBindingState(int id)
	{
		return default(int);
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xF02EFC", Offset = "0xF02EFC", VA = "0xF02EFC")]
	public void setIsEnbleHomeKey(bool state)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xF03054", Offset = "0xF03054", VA = "0xF03054")]
	public int getControllerSensorStatus(int id)
	{
		return default(int);
	}
}
[Token(Token = "0x20000D6")]
public class Pvr_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x20005D7")]
	public delegate void PvrServiceStartSuccess();

	[Token(Token = "0x20005D8")]
	public delegate void PvrControllerStateChanged(string data);

	[Token(Token = "0x20005D9")]
	public delegate void ChangeMainControllerCallBack(string index);

	[Token(Token = "0x20005DA")]
	public delegate void ChangeHandNessCallBack(string index);

	[Token(Token = "0x20005DB")]
	public delegate void SetHbServiceBindState();

	[Token(Token = "0x20005DC")]
	public delegate void ControllerThreadStartedCallback();

	[Token(Token = "0x20005DD")]
	public delegate void SetControllerServiceBindState();

	[Token(Token = "0x20005DE")]
	public delegate void ControllerStatusChange(string isconnect);

	[Token(Token = "0x20005DF")]
	public delegate void SetControllerAbility(string data);

	[Token(Token = "0x20005E0")]
	public delegate void SetControllerStateChanged(string data);

	[Token(Token = "0x20005E1")]
	public delegate void SetHbControllerMac(string mac);

	[Token(Token = "0x20005E2")]
	public delegate void ControllerDeviceVersionCallback(string data);

	[Token(Token = "0x20005E3")]
	public delegate void ControllerSnCodeCallback(string data);

	[Token(Token = "0x20005E4")]
	public delegate void ControllerUnbindCallback(string status);

	[Token(Token = "0x20005E5")]
	public delegate void ControllerStationStatusCallback(string status);

	[Token(Token = "0x20005E6")]
	public delegate void ControllerStationBusyCallback(string status);

	[Token(Token = "0x20005E7")]
	public delegate void ControllerOtaStartCodeCallback(string data);

	[Token(Token = "0x20005E8")]
	public delegate void ControllerDeviceVersionAndSNCallback(string data);

	[Token(Token = "0x20005E9")]
	public delegate void ControllerUniqueIDCallback(string data);

	[Token(Token = "0x20005EA")]
	public delegate void ControllerCombinedKeyUnbindCallback(string data);

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ControllerManager instance;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Pvr_ControllerLink controllerlink;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float cTime;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool stopConnect;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text toast;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool controllerServicestate;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float disConnectTime;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool LengthAdaptiveRay;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] sensorData;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] keyData;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] g2SensorData;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] g2KeyData;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int keyOffset;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int rotControllerMode;

	[Token(Token = "0x17000041")]
	public static Pvr_ControllerManager Instance
	{
		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x162F64C", Offset = "0x162F64C", VA = "0x162F64C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000011")]
	public static event PvrServiceStartSuccess PvrServiceStartSuccessEvent
	{
		[Token(Token = "0x60004FB")]
		[Address(RVA = "0x162F88C", Offset = "0x162F88C", VA = "0x162F88C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8F20", Offset = "0xBE8F20")]
		add
		{
		}
		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x162F97C", Offset = "0x162F97C", VA = "0x162F97C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8F30", Offset = "0xBE8F30")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public static event PvrControllerStateChanged PvrControllerStateChangedEvent
	{
		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x162FA6C", Offset = "0x162FA6C", VA = "0x162FA6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8F40", Offset = "0xBE8F40")]
		add
		{
		}
		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x162FB5C", Offset = "0x162FB5C", VA = "0x162FB5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8F50", Offset = "0xBE8F50")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event ChangeMainControllerCallBack ChangeMainControllerCallBackEvent
	{
		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x162FC4C", Offset = "0x162FC4C", VA = "0x162FC4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8F60", Offset = "0xBE8F60")]
		add
		{
		}
		[Token(Token = "0x6000500")]
		[Address(RVA = "0x162FD3C", Offset = "0x162FD3C", VA = "0x162FD3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8F70", Offset = "0xBE8F70")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event ChangeHandNessCallBack ChangeHandNessCallBackEvent
	{
		[Token(Token = "0x6000501")]
		[Address(RVA = "0x162FE2C", Offset = "0x162FE2C", VA = "0x162FE2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8F80", Offset = "0xBE8F80")]
		add
		{
		}
		[Token(Token = "0x6000502")]
		[Address(RVA = "0x162FF1C", Offset = "0x162FF1C", VA = "0x162FF1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8F90", Offset = "0xBE8F90")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event SetHbServiceBindState SetHbServiceBindStateEvent
	{
		[Token(Token = "0x6000503")]
		[Address(RVA = "0x163000C", Offset = "0x163000C", VA = "0x163000C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8FA0", Offset = "0xBE8FA0")]
		add
		{
		}
		[Token(Token = "0x6000504")]
		[Address(RVA = "0x16300FC", Offset = "0x16300FC", VA = "0x16300FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8FB0", Offset = "0xBE8FB0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public static event ControllerThreadStartedCallback ControllerThreadStartedCallbackEvent
	{
		[Token(Token = "0x6000505")]
		[Address(RVA = "0x16301EC", Offset = "0x16301EC", VA = "0x16301EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8FC0", Offset = "0xBE8FC0")]
		add
		{
		}
		[Token(Token = "0x6000506")]
		[Address(RVA = "0x16302DC", Offset = "0x16302DC", VA = "0x16302DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8FD0", Offset = "0xBE8FD0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public static event SetControllerServiceBindState SetControllerServiceBindStateEvent
	{
		[Token(Token = "0x6000507")]
		[Address(RVA = "0x16303CC", Offset = "0x16303CC", VA = "0x16303CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8FE0", Offset = "0xBE8FE0")]
		add
		{
		}
		[Token(Token = "0x6000508")]
		[Address(RVA = "0x16304BC", Offset = "0x16304BC", VA = "0x16304BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE8FF0", Offset = "0xBE8FF0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public static event ControllerStatusChange ControllerStatusChangeEvent
	{
		[Token(Token = "0x6000509")]
		[Address(RVA = "0x16305AC", Offset = "0x16305AC", VA = "0x16305AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9000", Offset = "0xBE9000")]
		add
		{
		}
		[Token(Token = "0x600050A")]
		[Address(RVA = "0x163069C", Offset = "0x163069C", VA = "0x163069C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9010", Offset = "0xBE9010")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public static event SetControllerAbility SetControllerAbilityEvent
	{
		[Token(Token = "0x600050B")]
		[Address(RVA = "0x163078C", Offset = "0x163078C", VA = "0x163078C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9020", Offset = "0xBE9020")]
		add
		{
		}
		[Token(Token = "0x600050C")]
		[Address(RVA = "0x163087C", Offset = "0x163087C", VA = "0x163087C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9030", Offset = "0xBE9030")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public static event SetControllerStateChanged SetControllerStateChangedEvent
	{
		[Token(Token = "0x600050D")]
		[Address(RVA = "0x163096C", Offset = "0x163096C", VA = "0x163096C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9040", Offset = "0xBE9040")]
		add
		{
		}
		[Token(Token = "0x600050E")]
		[Address(RVA = "0x1630A5C", Offset = "0x1630A5C", VA = "0x1630A5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9050", Offset = "0xBE9050")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public static event SetHbControllerMac SetHbControllerMacEvent
	{
		[Token(Token = "0x600050F")]
		[Address(RVA = "0x1630B4C", Offset = "0x1630B4C", VA = "0x1630B4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9060", Offset = "0xBE9060")]
		add
		{
		}
		[Token(Token = "0x6000510")]
		[Address(RVA = "0x1630C3C", Offset = "0x1630C3C", VA = "0x1630C3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9070", Offset = "0xBE9070")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public static event ControllerDeviceVersionCallback ControllerDeviceVersionCallbackEvent
	{
		[Token(Token = "0x6000511")]
		[Address(RVA = "0x1630D2C", Offset = "0x1630D2C", VA = "0x1630D2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9080", Offset = "0xBE9080")]
		add
		{
		}
		[Token(Token = "0x6000512")]
		[Address(RVA = "0x1630E1C", Offset = "0x1630E1C", VA = "0x1630E1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9090", Offset = "0xBE9090")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public static event ControllerSnCodeCallback ControllerSnCodeCallbackEvent
	{
		[Token(Token = "0x6000513")]
		[Address(RVA = "0x1630F0C", Offset = "0x1630F0C", VA = "0x1630F0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE90A0", Offset = "0xBE90A0")]
		add
		{
		}
		[Token(Token = "0x6000514")]
		[Address(RVA = "0x1630FFC", Offset = "0x1630FFC", VA = "0x1630FFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE90B0", Offset = "0xBE90B0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public static event ControllerUnbindCallback ControllerUnbindCallbackEvent
	{
		[Token(Token = "0x6000515")]
		[Address(RVA = "0x16310EC", Offset = "0x16310EC", VA = "0x16310EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE90C0", Offset = "0xBE90C0")]
		add
		{
		}
		[Token(Token = "0x6000516")]
		[Address(RVA = "0x16311DC", Offset = "0x16311DC", VA = "0x16311DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE90D0", Offset = "0xBE90D0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public static event ControllerStationStatusCallback ControllerStationStatusCallbackEvent
	{
		[Token(Token = "0x6000517")]
		[Address(RVA = "0x16312CC", Offset = "0x16312CC", VA = "0x16312CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE90E0", Offset = "0xBE90E0")]
		add
		{
		}
		[Token(Token = "0x6000518")]
		[Address(RVA = "0x16313BC", Offset = "0x16313BC", VA = "0x16313BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE90F0", Offset = "0xBE90F0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	public static event ControllerStationBusyCallback ControllerStationBusyCallbackEvent
	{
		[Token(Token = "0x6000519")]
		[Address(RVA = "0x16314AC", Offset = "0x16314AC", VA = "0x16314AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9100", Offset = "0xBE9100")]
		add
		{
		}
		[Token(Token = "0x600051A")]
		[Address(RVA = "0x163159C", Offset = "0x163159C", VA = "0x163159C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9110", Offset = "0xBE9110")]
		remove
		{
		}
	}

	[Token(Token = "0x14000021")]
	public static event ControllerOtaStartCodeCallback ControllerOtaStartCodeCallbackEvent
	{
		[Token(Token = "0x600051B")]
		[Address(RVA = "0x163168C", Offset = "0x163168C", VA = "0x163168C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9120", Offset = "0xBE9120")]
		add
		{
		}
		[Token(Token = "0x600051C")]
		[Address(RVA = "0x163177C", Offset = "0x163177C", VA = "0x163177C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9130", Offset = "0xBE9130")]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public static event ControllerDeviceVersionAndSNCallback ControllerDeviceVersionAndSNCallbackEvent
	{
		[Token(Token = "0x600051D")]
		[Address(RVA = "0x163186C", Offset = "0x163186C", VA = "0x163186C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9140", Offset = "0xBE9140")]
		add
		{
		}
		[Token(Token = "0x600051E")]
		[Address(RVA = "0x163195C", Offset = "0x163195C", VA = "0x163195C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9150", Offset = "0xBE9150")]
		remove
		{
		}
	}

	[Token(Token = "0x14000023")]
	public static event ControllerUniqueIDCallback ControllerUniqueIDCallbackEvent
	{
		[Token(Token = "0x600051F")]
		[Address(RVA = "0x1631A4C", Offset = "0x1631A4C", VA = "0x1631A4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9160", Offset = "0xBE9160")]
		add
		{
		}
		[Token(Token = "0x6000520")]
		[Address(RVA = "0x1631B3C", Offset = "0x1631B3C", VA = "0x1631B3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9170", Offset = "0xBE9170")]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public static event ControllerCombinedKeyUnbindCallback ControllerCombinedKeyUnbindCallbackEvent
	{
		[Token(Token = "0x6000521")]
		[Address(RVA = "0x1631C2C", Offset = "0x1631C2C", VA = "0x1631C2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9180", Offset = "0xBE9180")]
		add
		{
		}
		[Token(Token = "0x6000522")]
		[Address(RVA = "0x1631D1C", Offset = "0x1631D1C", VA = "0x1631D1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9190", Offset = "0xBE9190")]
		remove
		{
		}
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x1631E0C", Offset = "0x1631E0C", VA = "0x1631E0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x1632110", Offset = "0x1632110", VA = "0x1632110")]
	private void Start()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x16321B8", Offset = "0x16321B8", VA = "0x16321B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x1633CB8", Offset = "0x1633CB8", VA = "0x1633CB8")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x1634350", Offset = "0x1634350", VA = "0x1634350")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x1634430", Offset = "0x1634430", VA = "0x1634430")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x1634578", Offset = "0x1634578", VA = "0x1634578")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x1634620", Offset = "0x1634620", VA = "0x1634620")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x1634704", Offset = "0x1634704", VA = "0x1634704")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x1632068", Offset = "0x1632068", VA = "0x1632068")]
	public void BindService()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x16347E8", Offset = "0x16347E8", VA = "0x16347E8")]
	public void StartScan()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x1634890", Offset = "0x1634890", VA = "0x1634890")]
	public void StopScan()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x1634938", Offset = "0x1634938", VA = "0x1634938")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x16340C8", Offset = "0x16340C8", VA = "0x16340C8")]
	public static int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x16349E8", Offset = "0x16349E8", VA = "0x16349E8")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x1634A90", Offset = "0x1634A90", VA = "0x1634A90")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x1634B38", Offset = "0x1634B38", VA = "0x1634B38")]
	public void SetBinPath(string path, bool isAsset)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x1634BFC", Offset = "0x1634BFC", VA = "0x1634BFC")]
	public void StartUpgrade()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x1634CA4", Offset = "0x1634CA4", VA = "0x1634CA4")]
	public static string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x1634D18", Offset = "0x1634D18", VA = "0x1634D18")]
	public static long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x1634D8C", Offset = "0x1634D8C", VA = "0x1634D8C")]
	public static string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x1634E00", Offset = "0x1634E00", VA = "0x1634E00")]
	public static long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x1634E74", Offset = "0x1634E74", VA = "0x1634E74")]
	public static void AutoConnectHbController(int scans)
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x1634F24", Offset = "0x1634F24", VA = "0x1634F24")]
	public static string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x1634FDC", Offset = "0x1634FDC", VA = "0x1634FDC")]
	public void setHbControllerMac(string mac)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x1635558", Offset = "0x1635558", VA = "0x1635558")]
	public int GetControllerRSSI()
	{
		return default(int);
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x16355CC", Offset = "0x16355CC", VA = "0x16355CC")]
	public void setHbServiceBindState(string state)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x1635A64", Offset = "0x1635A64", VA = "0x1635A64")]
	public void setControllerServiceBindState(string state)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x1635EFC", Offset = "0x1635EFC", VA = "0x1635EFC")]
	public void setHbControllerConnectState(string isconnect)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x1636910", Offset = "0x1636910", VA = "0x1636910")]
	public void setControllerStateChanged(string state)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x163727C", Offset = "0x163727C", VA = "0x163727C")]
	public void setControllerAbility(string data)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x163772C", Offset = "0x163772C", VA = "0x163772C")]
	public void controllerThreadStartedCallback()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x1637D78", Offset = "0x1637D78", VA = "0x1637D78")]
	public void controllerDeviceVersionCallback(string data)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x1638228", Offset = "0x1638228", VA = "0x1638228")]
	public void controllerSnCodeCallback(string data)
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x16386D8", Offset = "0x16386D8", VA = "0x16386D8")]
	public void controllerUnbindCallback(string status)
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x1638B88", Offset = "0x1638B88", VA = "0x1638B88")]
	public void controllerStationStatusCallback(string status)
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x1639038", Offset = "0x1639038", VA = "0x1639038")]
	public void controllerStationBusyCallback(string status)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x16394E8", Offset = "0x16394E8", VA = "0x16394E8")]
	public void controllerOTAStartCodeCallback(string data)
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x1639998", Offset = "0x1639998", VA = "0x1639998")]
	public void controllerDeviceVersionAndSNCallback(string data)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x1639E48", Offset = "0x1639E48", VA = "0x1639E48")]
	public void controllerUniqueIDCallback(string data)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x163A2F8", Offset = "0x163A2F8", VA = "0x163A2F8")]
	public void controllerCombinedKeyUnbindCallback(string controllerSerialNum)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x163A75C", Offset = "0x163A75C", VA = "0x163A75C")]
	public void setupdateFailed()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x163A760", Offset = "0x163A760", VA = "0x163A760")]
	public void setupdateSuccess()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x163A764", Offset = "0x163A764", VA = "0x163A764")]
	public void setupdateProgress(string progress)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x163A768", Offset = "0x163A768", VA = "0x163A768")]
	public void setHbAutoConnectState(string state)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x163AA84", Offset = "0x163AA84", VA = "0x163AA84")]
	public void callbackControllerServiceState(string state)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x163ABE0", Offset = "0x163ABE0", VA = "0x163ABE0")]
	public void changeMainControllerCallback(string index)
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x163B0E4", Offset = "0x163B0E4", VA = "0x163B0E4")]
	public void changeHandnessCallback(string index)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x163A8BC", Offset = "0x163A8BC", VA = "0x163A8BC")]
	private void ShowToast(int type)
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x163B5E8", Offset = "0x163B5E8", VA = "0x163B5E8")]
	private void HideToast()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x163B690", Offset = "0x163B690", VA = "0x163B690")]
	private void CheckControllerService()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x1637864", Offset = "0x1637864", VA = "0x1637864")]
	private void GetCVControllerState()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x1633598", Offset = "0x1633598", VA = "0x1633598")]
	private void SetSystemKey()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x16331BC", Offset = "0x16331BC", VA = "0x16331BC")]
	private void TransformData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x163B6A4", Offset = "0x163B6A4", VA = "0x163B6A4")]
	private void TransSingleKey(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x163B7F4", Offset = "0x163B7F4", VA = "0x163B7F4")]
	private void TransformTouchData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x163B898", Offset = "0x163B898", VA = "0x163B898")]
	private void TransSingleTouchValue(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x163B998", Offset = "0x163B998", VA = "0x163B998")]
	public Pvr_ControllerManager()
	{
	}
}
[Token(Token = "0x20000D7")]
public class Pvr_ControllerModuleInit : MonoBehaviour
{
	[Token(Token = "0x20005EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8148", Offset = "0xBD8148")]
	private sealed class <ShowOrHideRay>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_ControllerModuleInit <>4__this;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int id;

		[Token(Token = "0x1700033D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023E5")]
			[Address(RVA = "0x163C918", Offset = "0x163C918", VA = "0x163C918", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023E7")]
			[Address(RVA = "0x163C980", Offset = "0x163C980", VA = "0x163C980", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0x163C4DC", Offset = "0x163C4DC", VA = "0x163C4DC")]
		[DebuggerHidden]
		public <ShowOrHideRay>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0x163C820", Offset = "0x163C820", VA = "0x163C820", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0x163C824", Offset = "0x163C824", VA = "0x163C824", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x163C920", Offset = "0x163C920", VA = "0x163C920", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerVariety Variety;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool IsCustomModel;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject dot;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject rayLine;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject controller;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool moduleState;

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x163BFEC", Offset = "0x163BFEC", VA = "0x163BFEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x163C1B8", Offset = "0x163C1B8", VA = "0x163C1B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x163C2D4", Offset = "0x163C2D4", VA = "0x163C2D4")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x163C348", Offset = "0x163C348", VA = "0x163C348")]
	private void ControllerStateChanged(string data)
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x163C44C", Offset = "0x163C44C", VA = "0x163C44C")]
	private void MainControllerIDChanged(string data)
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x163C2D8", Offset = "0x163C2D8", VA = "0x163C2D8")]
	private void RefreshRay()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x163C450", Offset = "0x163C450", VA = "0x163C450")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE91A0", Offset = "0xBE91A0")]
	private IEnumerator ShowOrHideRay(int id)
	{
		return null;
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x163C508", Offset = "0x163C508", VA = "0x163C508")]
	public void ForceHideOrShow(bool state)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x163C604", Offset = "0x163C604", VA = "0x163C604")]
	public void UpdateRay()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x163C810", Offset = "0x163C810", VA = "0x163C810")]
	public Pvr_ControllerModuleInit()
	{
	}
}
[Token(Token = "0x20000D8")]
public class Pvr_ControllerPower : MonoBehaviour
{
	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite power1;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite power2;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite power3;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite power4;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite power5;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image powerImage;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int powerValue;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float power;

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x163C988", Offset = "0x163C988", VA = "0x163C988")]
	private void Start()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x163CA5C", Offset = "0x163CA5C", VA = "0x163CA5C")]
	private void Update()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x163CA7C", Offset = "0x163CA7C", VA = "0x163CA7C")]
	private void RefreshPower(int hand)
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x163CB9C", Offset = "0x163CB9C", VA = "0x163CB9C")]
	public Pvr_ControllerPower()
	{
	}
}
[Token(Token = "0x20000D9")]
public class Pvr_ControllerVisual : MonoBehaviour
{
	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerDevice currentDevice;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D m_idle;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D m_app;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_home;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D m_touchpad;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D m_volUp;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D m_volDn;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D m_trigger;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D m_a;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture2D m_b;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture2D m_x;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D m_y;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture2D m_grip;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Renderer controllerRenderMat;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x163CBA4", Offset = "0x163CBA4", VA = "0x163CBA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x163CC04", Offset = "0x163CC04", VA = "0x163CC04")]
	private void Start()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x163CC74", Offset = "0x163CC74", VA = "0x163CC74")]
	private void Update()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x163CC88", Offset = "0x163CC88", VA = "0x163CC88")]
	private void ChangeKeyEffects(int hand)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x163CC8C", Offset = "0x163CC8C", VA = "0x163CC8C")]
	public Pvr_ControllerVisual()
	{
	}
}
[Token(Token = "0x20000DA")]
public class Pvr_ToolTips : MonoBehaviour
{
	[Token(Token = "0x20005EC")]
	public enum TipBtn
	{
		[Token(Token = "0x4001E3E")]
		app,
		[Token(Token = "0x4001E3F")]
		touchpad,
		[Token(Token = "0x4001E40")]
		home,
		[Token(Token = "0x4001E41")]
		volup,
		[Token(Token = "0x4001E42")]
		voldown,
		[Token(Token = "0x4001E43")]
		trigger,
		[Token(Token = "0x4001E44")]
		grip
	}

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerDevice currentDevice;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float tipsAlpha;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Pvr_ToolTips tooltips;

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x1641E68", Offset = "0x1641E68", VA = "0x1641E68")]
	public void ChangeTipsText(TipBtn tip, string key)
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x1641FE0", Offset = "0x1641FE0", VA = "0x1641FE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x1642060", Offset = "0x1642060", VA = "0x1642060")]
	private void Update()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x1642264", Offset = "0x1642264", VA = "0x1642264")]
	private void LoadTextFromJson()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x16426B0", Offset = "0x16426B0", VA = "0x16426B0")]
	public static void RefreshTips()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x1642754", Offset = "0x1642754", VA = "0x1642754")]
	public Pvr_ToolTips()
	{
	}
}
[Token(Token = "0x20000DB")]
public class Pvr_TouchPadScroll : MonoBehaviour
{
	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScrollRect scrollRect;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isHoving;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int mainHand;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SwipeDirection direction;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 currPos;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 tarPos;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lerpSpeed;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform tranViewport;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float ignoreDis;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 lastTouchDownPos;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 lastTouchUpPos;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isTouching;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isClosed;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 vecOrigin;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 vecOriginNeo2;

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x164275C", Offset = "0x164275C", VA = "0x164275C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x1642800", Offset = "0x1642800", VA = "0x1642800")]
	private void Update()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x1642CA8", Offset = "0x1642CA8", VA = "0x1642CA8")]
	private bool IsControllerConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x1642948", Offset = "0x1642948", VA = "0x1642948")]
	private void UpdateTargetPos()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x1642E64", Offset = "0x1642E64", VA = "0x1642E64")]
	private void ComputeTouchPos()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x16431B4", Offset = "0x16431B4", VA = "0x16431B4")]
	private void ComputeRockerPos()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x1643538", Offset = "0x1643538", VA = "0x1643538")]
	private bool VerifyNeo2TouchValid(Vector2 nowTouchPos)
	{
		return default(bool);
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x1642A9C", Offset = "0x1642A9C", VA = "0x1642A9C")]
	private void UpdatePos()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x1642D88", Offset = "0x1642D88", VA = "0x1642D88")]
	private void ResetParameter()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x164282C", Offset = "0x164282C", VA = "0x164282C")]
	private void Process()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x1643574", Offset = "0x1643574", VA = "0x1643574")]
	private bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x1643764", Offset = "0x1643764", VA = "0x1643764")]
	private bool FindTree(Transform tran)
	{
		return default(bool);
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x1643850", Offset = "0x1643850", VA = "0x1643850")]
	public Pvr_TouchPadScroll()
	{
	}
}
[Token(Token = "0x20000DC")]
public class Pvr_TouchVisual : MonoBehaviour
{
	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer touchRenderer;

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x164390C", Offset = "0x164390C", VA = "0x164390C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x16439BC", Offset = "0x16439BC", VA = "0x16439BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x16439DC", Offset = "0x16439DC", VA = "0x16439DC")]
	private void ChangeEffects(int hand)
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x1643AEC", Offset = "0x1643AEC", VA = "0x1643AEC")]
	public Pvr_TouchVisual()
	{
	}
}
[Token(Token = "0x20000DD")]
public class DemoController : MonoBehaviour
{
	[Token(Token = "0x20005ED")]
	public delegate void showLoadingEventHandler();

	[Token(Token = "0x20005EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8158", Offset = "0xBD8158")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoController <>4__this;

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0xF09804", Offset = "0xF09804", VA = "0xF09804")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0xF0A084", Offset = "0xF0A084", VA = "0xF0A084")]
		internal void <InitDelegate>b__0()
		{
		}
	}

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Callback callback;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject msg;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKManager picoVrManager;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string currentOrderID;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject loading;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject BG;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject InputPanel;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static showLoadingEventHandler showLoading;

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xF08FE4", Offset = "0xF08FE4", VA = "0xF08FE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xF091D0", Offset = "0xF091D0", VA = "0xF091D0")]
	private void Start()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xF096A0", Offset = "0xF096A0", VA = "0xF096A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xF092B4", Offset = "0xF092B4", VA = "0xF092B4")]
	private void InitDelegate()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xF0980C", Offset = "0xF0980C", VA = "0xF0980C")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xF09B68", Offset = "0xF09B68", VA = "0xF09B68")]
	public string getRamdomTestOrderID()
	{
		return null;
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xF09B24", Offset = "0xF09B24", VA = "0xF09B24")]
	private void StartLoading()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xF09BBC", Offset = "0xF09BBC", VA = "0xF09BBC")]
	public void StopLoading()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xF09CCC", Offset = "0xF09CCC", VA = "0xF09CCC")]
	public void DoPayByCode()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xF09FA0", Offset = "0xF09FA0", VA = "0xF09FA0")]
	private bool VerifyLocalToken()
	{
		return default(bool);
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xF0A07C", Offset = "0xF0A07C", VA = "0xF0A07C")]
	public DemoController()
	{
	}
}
[Token(Token = "0x20000DE")]
public class LoadingRatation : MonoBehaviour
{
	[Token(Token = "0x6000593")]
	[Address(RVA = "0xFA2248", Offset = "0xFA2248", VA = "0xFA2248")]
	private void Start()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xFA224C", Offset = "0xFA224C", VA = "0xFA224C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xFA22C0", Offset = "0xFA22C0", VA = "0xFA22C0")]
	public LoadingRatation()
	{
	}
}
[Token(Token = "0x20000DF")]
public class InputManager : MonoBehaviour
{
	[Token(Token = "0x20005EF")]
	public delegate void doEnterEventHandler();

	[Token(Token = "0x20005F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8168", Offset = "0xBD8168")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputManager <>4__this;

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0xF2FE84", Offset = "0xF2FE84", VA = "0xF2FE84")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0xF30A90", Offset = "0xF30A90", VA = "0xF30A90")]
		internal void <InitKeyBoard>b__0()
		{
		}
	}

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static doEnterEventHandler doEnter;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StringBuilder sb;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ArrayList btnsName;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject enter;

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xF2F57C", Offset = "0xF2F57C", VA = "0xF2F57C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xF2FE7C", Offset = "0xF2FE7C", VA = "0xF2FE7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xF2FE80", Offset = "0xF2FE80", VA = "0xF2FE80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xF2F580", Offset = "0xF2F580", VA = "0xF2F580")]
	private void InitKeyBoard()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xF2FE8C", Offset = "0xF2FE8C", VA = "0xF2FE8C")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xF30904", Offset = "0xF30904", VA = "0xF30904")]
	private void EnterChar(string s)
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xF300C0", Offset = "0xF300C0", VA = "0xF300C0")]
	private void DoCapslock(bool IsUpper)
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xF30688", Offset = "0xF30688", VA = "0xF30688")]
	private void ClearBuffer()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xF309F0", Offset = "0xF309F0", VA = "0xF309F0")]
	public InputManager()
	{
	}
}
[Token(Token = "0x20000E0")]
public class Callback : MonoBehaviour
{
	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IS_SUCCESS;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string MSG;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string CODE;

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xED7F28", Offset = "0xED7F28", VA = "0xED7F28")]
	public void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xED82F0", Offset = "0xED82F0", VA = "0xED82F0")]
	public void QueryOrPayCallback(string queryOrPayInfo)
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xED8528", Offset = "0xED8528", VA = "0xED8528")]
	public void UserInfoCallback(string userInfo)
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xED8150", Offset = "0xED8150", VA = "0xED8150")]
	public void SetMassage(string massage)
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xED8600", Offset = "0xED8600", VA = "0xED8600")]
	public GameObject GetCurrentGameObject()
	{
		return null;
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xED864C", Offset = "0xED864C", VA = "0xED864C")]
	public void ActivityForResultCallback(string activity)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xED8780", Offset = "0xED8780", VA = "0xED8780")]
	public Callback()
	{
	}
}
[Token(Token = "0x20000E1")]
public class CommonDic
{
	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CommonDic dic;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, string> mydic;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _app_ID;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _app_Key;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _user_token;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _access_token;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _open_id;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _refresh_token;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _expires_in;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _user_info;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _subject;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _body;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _order_id;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string _total;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _goods_tag;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _notify_url;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string _trade_type;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string _pay_code;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string _order_info;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string _code;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string _msg;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string _merchant_ID;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string _payKey;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string _isSuucess;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string _loginMsg;

	[Token(Token = "0x17000042")]
	public string subject
	{
		[Token(Token = "0x60005AB")]
		[Address(RVA = "0xEDAC68", Offset = "0xEDAC68", VA = "0xEDAC68")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xEDAC70", Offset = "0xEDAC70", VA = "0xEDAC70")]
		set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public string body
	{
		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xEDAC78", Offset = "0xEDAC78", VA = "0xEDAC78")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xEDAC80", Offset = "0xEDAC80", VA = "0xEDAC80")]
		set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public string order_id
	{
		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xEDAC88", Offset = "0xEDAC88", VA = "0xEDAC88")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005B0")]
		[Address(RVA = "0xEDAC90", Offset = "0xEDAC90", VA = "0xEDAC90")]
		set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public string total
	{
		[Token(Token = "0x60005B1")]
		[Address(RVA = "0xEDAC98", Offset = "0xEDAC98", VA = "0xEDAC98")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005B2")]
		[Address(RVA = "0xEDACA0", Offset = "0xEDACA0", VA = "0xEDACA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public string goods_tag
	{
		[Token(Token = "0x60005B3")]
		[Address(RVA = "0xEDACA8", Offset = "0xEDACA8", VA = "0xEDACA8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xEDACB0", Offset = "0xEDACB0", VA = "0xEDACB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public string notify_url
	{
		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xEDACB8", Offset = "0xEDACB8", VA = "0xEDACB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005B6")]
		[Address(RVA = "0xEDACC0", Offset = "0xEDACC0", VA = "0xEDACC0")]
		set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public string pay_code
	{
		[Token(Token = "0x60005B7")]
		[Address(RVA = "0xEDACC8", Offset = "0xEDACC8", VA = "0xEDACC8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005B8")]
		[Address(RVA = "0xEDACD0", Offset = "0xEDACD0", VA = "0xEDACD0")]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public string trade_type
	{
		[Token(Token = "0x60005B9")]
		[Address(RVA = "0xEDACD8", Offset = "0xEDACD8", VA = "0xEDACD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005BA")]
		[Address(RVA = "0xEDACE0", Offset = "0xEDACE0", VA = "0xEDACE0")]
		set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public string user_token
	{
		[Token(Token = "0x60005BB")]
		[Address(RVA = "0xEDACE8", Offset = "0xEDACE8", VA = "0xEDACE8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005BC")]
		[Address(RVA = "0xEDACF0", Offset = "0xEDACF0", VA = "0xEDACF0")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public string access_token
	{
		[Token(Token = "0x60005BD")]
		[Address(RVA = "0xEDACF8", Offset = "0xEDACF8", VA = "0xEDACF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005BE")]
		[Address(RVA = "0xEDAD00", Offset = "0xEDAD00", VA = "0xEDAD00")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public string open_id
	{
		[Token(Token = "0x60005BF")]
		[Address(RVA = "0xEDAD08", Offset = "0xEDAD08", VA = "0xEDAD08")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005C0")]
		[Address(RVA = "0xEDAD10", Offset = "0xEDAD10", VA = "0xEDAD10")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public string refresh_token
	{
		[Token(Token = "0x60005C1")]
		[Address(RVA = "0xEDAD18", Offset = "0xEDAD18", VA = "0xEDAD18")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005C2")]
		[Address(RVA = "0xEDAD20", Offset = "0xEDAD20", VA = "0xEDAD20")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public string expires_in
	{
		[Token(Token = "0x60005C3")]
		[Address(RVA = "0xEDAD28", Offset = "0xEDAD28", VA = "0xEDAD28")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005C4")]
		[Address(RVA = "0xEDAD30", Offset = "0xEDAD30", VA = "0xEDAD30")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public string isSuccess
	{
		[Token(Token = "0x60005C5")]
		[Address(RVA = "0xEDAD38", Offset = "0xEDAD38", VA = "0xEDAD38")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005C6")]
		[Address(RVA = "0xEDAD40", Offset = "0xEDAD40", VA = "0xEDAD40")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public string loginMsg
	{
		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xEDAD48", Offset = "0xEDAD48", VA = "0xEDAD48")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xEDAD50", Offset = "0xEDAD50", VA = "0xEDAD50")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public string user_info
	{
		[Token(Token = "0x60005C9")]
		[Address(RVA = "0xEDAD58", Offset = "0xEDAD58", VA = "0xEDAD58")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005CA")]
		[Address(RVA = "0xEDAD60", Offset = "0xEDAD60", VA = "0xEDAD60")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public string order_info
	{
		[Token(Token = "0x60005CB")]
		[Address(RVA = "0xEDAD68", Offset = "0xEDAD68", VA = "0xEDAD68")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xEDAD70", Offset = "0xEDAD70", VA = "0xEDAD70")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public string code
	{
		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xEDAD78", Offset = "0xEDAD78", VA = "0xEDAD78")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xEDAD80", Offset = "0xEDAD80", VA = "0xEDAD80")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public string msg
	{
		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xEDAD88", Offset = "0xEDAD88", VA = "0xEDAD88")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005D0")]
		[Address(RVA = "0xEDAD90", Offset = "0xEDAD90", VA = "0xEDAD90")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public string app_ID
	{
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xEDAD98", Offset = "0xEDAD98", VA = "0xEDAD98")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xEDADA0", Offset = "0xEDADA0", VA = "0xEDADA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public string app_Key
	{
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0xEDADA8", Offset = "0xEDADA8", VA = "0xEDADA8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0xEDADB0", Offset = "0xEDADB0", VA = "0xEDADB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public string merchant_ID
	{
		[Token(Token = "0x60005D5")]
		[Address(RVA = "0xEDADB8", Offset = "0xEDADB8", VA = "0xEDADB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xEDADC0", Offset = "0xEDADC0", VA = "0xEDADC0")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public string paykey
	{
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0xEDADC8", Offset = "0xEDADC8", VA = "0xEDADC8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005D8")]
		[Address(RVA = "0xEDADD0", Offset = "0xEDADD0", VA = "0xEDADD0")]
		set
		{
		}
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xED8218", Offset = "0xED8218", VA = "0xED8218")]
	public static CommonDic getInstance()
	{
		return null;
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xEDA9E4", Offset = "0xEDA9E4", VA = "0xEDA9E4")]
	public Dictionary<string, string> getDic()
	{
		return null;
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xEDAA34", Offset = "0xEDAA34", VA = "0xEDAA34")]
	public void setParameters(string name, string value)
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xEDABF8", Offset = "0xEDABF8", VA = "0xEDABF8")]
	public string PayOrderString()
	{
		return null;
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xEDA560", Offset = "0xEDA560", VA = "0xEDA560")]
	public static void InitDicData(Dictionary<string, string> mydic)
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xEDA4D8", Offset = "0xEDA4D8", VA = "0xEDA4D8")]
	public CommonDic()
	{
	}
}
[Token(Token = "0x20000E2")]
public class LoginSDK
{
	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xFA7A30", Offset = "0xFA7A30", VA = "0xFA7A30")]
	public static void Login()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xFA7A90", Offset = "0xFA7A90", VA = "0xFA7A90")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xFA7AF0", Offset = "0xFA7AF0", VA = "0xFA7AF0")]
	public LoginSDK()
	{
	}
}
[Token(Token = "0x20000E3")]
public class PicoPaymentSDK
{
	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject _jo;

	[Token(Token = "0x17000059")]
	public static AndroidJavaObject jo
	{
		[Token(Token = "0x60005DE")]
		[Address(RVA = "0xEE25D8", Offset = "0xEE25D8", VA = "0xEE25D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005DF")]
		[Address(RVA = "0xEE2640", Offset = "0xEE2640", VA = "0xEE2640")]
		set
		{
		}
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xEE26B0", Offset = "0xEE26B0", VA = "0xEE26B0")]
	public static void Login()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xEE2928", Offset = "0xEE2928", VA = "0xEE2928")]
	public static void Pay(string payOrderJson)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xEE2B68", Offset = "0xEE2B68", VA = "0xEE2B68")]
	public static void QueryOrder(string orderId)
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xEE2DA8", Offset = "0xEE2DA8", VA = "0xEE2DA8")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xEE3020", Offset = "0xEE3020", VA = "0xEE3020")]
	public PicoPaymentSDK()
	{
	}
}
[Token(Token = "0x20000E4")]
public class Pvr_ToBService : MonoBehaviour
{
	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text deviceInfoText;

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x1641930", Offset = "0x1641930", VA = "0x1641930")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x1641968", Offset = "0x1641968", VA = "0x1641968")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x1641978", Offset = "0x1641978", VA = "0x1641978")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x1641934", Offset = "0x1641934", VA = "0x1641934")]
	private void InitToBService()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x1641970", Offset = "0x1641970", VA = "0x1641970")]
	private void BindToBService()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x1641980", Offset = "0x1641980", VA = "0x1641980")]
	private void UnBindToBService()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x1641988", Offset = "0x1641988", VA = "0x1641988")]
	private void BoolCallback(string value)
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x1641A3C", Offset = "0x1641A3C", VA = "0x1641A3C")]
	private void IntCallback(string value)
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x1641AD4", Offset = "0x1641AD4", VA = "0x1641AD4")]
	private void LongCallback(string value)
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x1641B6C", Offset = "0x1641B6C", VA = "0x1641B6C")]
	public void StateGetDeviceInfo()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x1641BF4", Offset = "0x1641BF4", VA = "0x1641BF4")]
	public void ControlSetDeviceAction()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x1641C74", Offset = "0x1641C74", VA = "0x1641C74")]
	private void ControlSetDeviceActionCallBack(int value)
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x1641D24", Offset = "0x1641D24", VA = "0x1641D24")]
	public void AppManager()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x1641DB0", Offset = "0x1641DB0", VA = "0x1641DB0")]
	private void AppManagerCallBack(int value)
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x1641E60", Offset = "0x1641E60", VA = "0x1641E60")]
	public Pvr_ToBService()
	{
	}
}
[Token(Token = "0x20000E5")]
public class PLOG : MonoBehaviour
{
	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int logLevel;

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x136E620", Offset = "0x136E620", VA = "0x136E620")]
	public static void getConfigTraceLevel()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x136E68C", Offset = "0x136E68C", VA = "0x136E68C")]
	public static void D(string msg)
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x136E734", Offset = "0x136E734", VA = "0x136E734")]
	public static void I(string msg)
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x136E7DC", Offset = "0x136E7DC", VA = "0x136E7DC")]
	public static void W(string msg)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x136E884", Offset = "0x136E884", VA = "0x136E884")]
	public static void E(string msg)
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x136E8EC", Offset = "0x136E8EC", VA = "0x136E8EC")]
	public PLOG()
	{
	}
}
[Token(Token = "0x20000E6")]
public class CPicoSDKSettingAsset : ScriptableObject
{
	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IgnoreSDKSetting;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool DontshowBuildWaring;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool AppIDChecked;

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xED64E0", Offset = "0xED64E0", VA = "0xED64E0")]
	public CPicoSDKSettingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E7")]
public class Pvr_UnitySDKProjectSetting : ScriptableObject
{
	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTextureAntiAliasing rtAntiAlising;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RenderTextureDepth rtBitDepth;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTextureFormat rtFormat;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool usedefaultRenderTexture;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 customRTSize;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool usedefaultfps;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int customfps;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool usesinglepass;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool usecontentprotect;

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x157B438", Offset = "0x157B438", VA = "0x157B438")]
	public static Pvr_UnitySDKProjectSetting GetProjectConfig()
	{
		return null;
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x1582954", Offset = "0x1582954", VA = "0x1582954")]
	public Pvr_UnitySDKProjectSetting()
	{
	}
}
[Token(Token = "0x20000E8")]
public sealed class Pvr_UnitySDKPlatformSetting : ScriptableObject
{
	[Token(Token = "0x20005F1")]
	public enum simulationType
	{
		[Token(Token = "0x4001E4A")]
		Null,
		[Token(Token = "0x4001E4B")]
		Invalid,
		[Token(Token = "0x4001E4C")]
		Valid
	}

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool entitlementchecksimulation;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool startTimeEntitlementCheck;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public string appID;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> deviceSN;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKPlatformSetting instance;

	[Token(Token = "0x1700005A")]
	public static bool Entitlementchecksimulation
	{
		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x1581C90", Offset = "0x1581C90", VA = "0x1581C90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000600")]
		[Address(RVA = "0x1581CB0", Offset = "0x1581CB0", VA = "0x1581CB0")]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public static bool StartTimeEntitlementCheck
	{
		[Token(Token = "0x6000601")]
		[Address(RVA = "0x15818DC", Offset = "0x15818DC", VA = "0x15818DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000602")]
		[Address(RVA = "0x1581CFC", Offset = "0x1581CFC", VA = "0x1581CFC")]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public static Pvr_UnitySDKPlatformSetting Instance
	{
		[Token(Token = "0x6000603")]
		[Address(RVA = "0x15818FC", Offset = "0x15818FC", VA = "0x15818FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000604")]
		[Address(RVA = "0x1581D48", Offset = "0x1581D48", VA = "0x1581D48")]
		set
		{
		}
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x1581DA0", Offset = "0x1581DA0", VA = "0x1581DA0")]
	public Pvr_UnitySDKPlatformSetting()
	{
	}
}
[Token(Token = "0x20000E9")]
public class Pvr_UnitySDKManager : MonoBehaviour
{
	[Token(Token = "0x20005F2")]
	public delegate void EntitlementCheckResult(int ReturnValue);

	[Token(Token = "0x20005F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8178", Offset = "0xBD8178")]
	private sealed class <ToastManager>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int type;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool state;

		[Token(Token = "0x1700033F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023FB")]
			[Address(RVA = "0x1581B74", Offset = "0x1581B74", VA = "0x1581B74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000340")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023FD")]
			[Address(RVA = "0x1581BDC", Offset = "0x1581BDC", VA = "0x1581BDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0x157C8B4", Offset = "0x157C8B4", VA = "0x157C8B4")]
		[DebuggerHidden]
		public <ToastManager>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0x1581A30", Offset = "0x1581A30", VA = "0x1581A30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0x1581A34", Offset = "0x1581A34", VA = "0x1581A34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0x1581B7C", Offset = "0x1581B7C", VA = "0x1581B7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8188", Offset = "0xBD8188")]
	private sealed class <>c__DisplayClass102_0
	{
		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform trans;

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0x157DC9C", Offset = "0x157DC9C", VA = "0x157DC9C")]
		public <>c__DisplayClass102_0()
		{
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0x1580A4C", Offset = "0x1580A4C", VA = "0x1580A4C")]
		internal void <SetProperty>b__0()
		{
		}
	}

	[Token(Token = "0x20005F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8198", Offset = "0xBD8198")]
	private sealed class <G3TipsManager>d__106 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject tip;

		[Token(Token = "0x17000341")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002403")]
			[Address(RVA = "0x1580B64", Offset = "0x1580B64", VA = "0x1580B64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000342")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002405")]
			[Address(RVA = "0x1580BCC", Offset = "0x1580BCC", VA = "0x1580BCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002400")]
		[Address(RVA = "0x157DFD4", Offset = "0x157DFD4", VA = "0x157DFD4")]
		[DebuggerHidden]
		public <G3TipsManager>d__106(int <>1__state)
		{
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0x1580A9C", Offset = "0x1580A9C", VA = "0x1580A9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0x1580AA0", Offset = "0x1580AA0", VA = "0x1580AA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0x1580B6C", Offset = "0x1580B6C", VA = "0x1580B6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD81A8", Offset = "0xBD81A8")]
	private sealed class <Start>d__118 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x17000343")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002409")]
			[Address(RVA = "0x15819C0", Offset = "0x15819C0", VA = "0x15819C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000344")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600240B")]
			[Address(RVA = "0x1581A28", Offset = "0x1581A28", VA = "0x1581A28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0x157FCD8", Offset = "0x157FCD8", VA = "0x157FCD8")]
		[DebuggerHidden]
		public <Start>d__118(int <>1__state)
		{
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0x158168C", Offset = "0x158168C", VA = "0x158168C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0x1581690", Offset = "0x1581690", VA = "0x1581690", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0x15819C8", Offset = "0x15819C8", VA = "0x15819C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD81B8", Offset = "0xBD81B8")]
	private sealed class <InitRenderThreadRoutine>d__119 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x17000345")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600240F")]
			[Address(RVA = "0x1580ED8", Offset = "0x1580ED8", VA = "0x1580ED8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000346")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002411")]
			[Address(RVA = "0x1580F40", Offset = "0x1580F40", VA = "0x1580F40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0x157FD64", Offset = "0x157FD64", VA = "0x157FD64")]
		[DebuggerHidden]
		public <InitRenderThreadRoutine>d__119(int <>1__state)
		{
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0x1580BD4", Offset = "0x1580BD4", VA = "0x1580BD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0x1580BD8", Offset = "0x1580BD8", VA = "0x1580BD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002410")]
		[Address(RVA = "0x1580EE0", Offset = "0x1580EE0", VA = "0x1580EE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD81C8", Offset = "0xBD81C8")]
	private sealed class <OnResume>d__132 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <ability6dof>5__2;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <waitNum>5__3;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <resetNum>5__4;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__5;

		[Token(Token = "0x17000347")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002415")]
			[Address(RVA = "0x158161C", Offset = "0x158161C", VA = "0x158161C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000348")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002417")]
			[Address(RVA = "0x1581684", Offset = "0x1581684", VA = "0x1581684", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0x1580930", Offset = "0x1580930", VA = "0x1580930")]
		[DebuggerHidden]
		public <OnResume>d__132(int <>1__state)
		{
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0x1580F48", Offset = "0x1580F48", VA = "0x1580F48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0x1580F4C", Offset = "0x1580F4C", VA = "0x1580F4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0x1581624", Offset = "0x1581624", VA = "0x1581624", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlatForm platform;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Pvr_UnitySDKManager sdk;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float EyesAspect;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int posStatus;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool ismirroring;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Vector3 resetBasePos;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int trackingmode;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int systemprop;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool systemFPS;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float[] headData;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool rotfoldout;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool hmdOnlyrot;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	private bool controllerOnlyrot;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private TrackingOrigin trackingOrigin;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool ResetTrackerOnLoad;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public Vector3 leftEyeOffset;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Vector3 rightEyeOffset;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public Rect leftEyeRect;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Rect rightEyeRect;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public Matrix4x4 leftEyeView;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public Matrix4x4 rightEyeView;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public Pvr_UnitySDKEditor pvr_UnitySDKEditor;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private bool vrModeEnabled;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public Material Eyematerial;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public Material Middlematerial;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDB110", Offset = "0xBDB110")]
	private bool <picovrTriggered>k__BackingField;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	[HideInInspector]
	public bool newPicovrTriggered;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
	[SerializeField]
	private bool showFPS;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[HideInInspector]
	public Vector3 neckOffset;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private bool pVRNeck;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	[HideInInspector]
	public bool UseCustomNeckPara;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	[HideInInspector]
	public bool onResume;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
	[HideInInspector]
	public bool isEnterVRMode;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool isHasController;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Pvr_UnitySDKConfigProfile pvr_UnitySDKConfig;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private GameObject calltoast;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObject msgtoast;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private GameObject lowhmdBatterytoast;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GameObject lowphoneBatterytoast;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GameObject LowPhoneHealthtoast;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private GameObject LowcontrollerBatterytoast;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool lowControllerpowerstate;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float controllerpowershowtime;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool UseToast;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private GameObject G3LiteTips;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private bool monoscopic;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool mIsAndroid7;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Func<bool> eventEnterVRMode;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
	[HideInInspector]
	public bool ShowVideoSeethrough;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public int SystemDebugFFRLevel;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public int SystemFFRLevel;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public int AppCheckResult;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public System.Action longPressHomeKeyAction;

	[Token(Token = "0x1700005D")]
	public static Pvr_UnitySDKManager SDK
	{
		[Token(Token = "0x6000606")]
		[Address(RVA = "0x1572FB8", Offset = "0x1572FB8", VA = "0x1572FB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005E")]
	public bool Rotfoldout
	{
		[Token(Token = "0x6000607")]
		[Address(RVA = "0x157B340", Offset = "0x157B340", VA = "0x157B340")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000608")]
		[Address(RVA = "0x157B348", Offset = "0x157B348", VA = "0x157B348")]
		set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public bool HmdOnlyrot
	{
		[Token(Token = "0x6000609")]
		[Address(RVA = "0x157B368", Offset = "0x157B368", VA = "0x157B368")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600060A")]
		[Address(RVA = "0x157B370", Offset = "0x157B370", VA = "0x157B370")]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public bool ControllerOnlyrot
	{
		[Token(Token = "0x600060B")]
		[Address(RVA = "0x157B390", Offset = "0x157B390", VA = "0x157B390")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600060C")]
		[Address(RVA = "0x157B398", Offset = "0x157B398", VA = "0x157B398")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public TrackingOrigin TrackingOrigin
	{
		[Token(Token = "0x600060D")]
		[Address(RVA = "0x157B3B8", Offset = "0x157B3B8", VA = "0x157B3B8")]
		get
		{
			return default(TrackingOrigin);
		}
		[Token(Token = "0x600060E")]
		[Address(RVA = "0x157B3C0", Offset = "0x157B3C0", VA = "0x157B3C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000062")]
	[HideInInspector]
	public bool VRModeEnabled
	{
		[Token(Token = "0x6000612")]
		[Address(RVA = "0x157B4C8", Offset = "0x157B4C8", VA = "0x157B4C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000613")]
		[Address(RVA = "0x15741B8", Offset = "0x15741B8", VA = "0x15741B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000063")]
	[HideInInspector]
	public bool picovrTriggered
	{
		[Token(Token = "0x6000614")]
		[Address(RVA = "0x157B4D0", Offset = "0x157B4D0", VA = "0x157B4D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9204", Offset = "0xBE9204")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000615")]
		[Address(RVA = "0x157B4D8", Offset = "0x157B4D8", VA = "0x157B4D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9214", Offset = "0xBE9214")]
		set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public bool ShowFPS
	{
		[Token(Token = "0x6000616")]
		[Address(RVA = "0x157B4E4", Offset = "0x157B4E4", VA = "0x157B4E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000617")]
		[Address(RVA = "0x157B4EC", Offset = "0x157B4EC", VA = "0x157B4EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public bool PVRNeck
	{
		[Token(Token = "0x6000618")]
		[Address(RVA = "0x157B50C", Offset = "0x157B50C", VA = "0x157B50C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000619")]
		[Address(RVA = "0x157B514", Offset = "0x157B514", VA = "0x157B514")]
		set
		{
		}
	}

	[Token(Token = "0x17000066")]
	[HideInInspector]
	public bool Monoscopic
	{
		[Token(Token = "0x600061A")]
		[Address(RVA = "0x157B534", Offset = "0x157B534", VA = "0x157B534")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600061B")]
		[Address(RVA = "0x157B53C", Offset = "0x157B53C", VA = "0x157B53C")]
		set
		{
		}
	}

	[Token(Token = "0x14000025")]
	public static event EntitlementCheckResult EntitlementCheckResultEvent
	{
		[Token(Token = "0x600061C")]
		[Address(RVA = "0x157B568", Offset = "0x157B568", VA = "0x157B568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9224", Offset = "0xBE9224")]
		add
		{
		}
		[Token(Token = "0x600061D")]
		[Address(RVA = "0x157B658", Offset = "0x157B658", VA = "0x157B658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9234", Offset = "0xBE9234")]
		remove
		{
		}
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x157B3E0", Offset = "0x157B3E0", VA = "0x157B3E0")]
	public void ChangeDefaultCustomRtSize(int w, int h)
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x15755C8", Offset = "0x15755C8", VA = "0x15755C8")]
	public Vector3 EyeOffset(Eye eye)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x157B48C", Offset = "0x157B48C", VA = "0x157B48C")]
	public Rect EyeRect(Eye eye)
	{
		return default(Rect);
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x157B748", Offset = "0x157B748", VA = "0x157B748")]
	private bool SDKManagerInit()
	{
		return default(bool);
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x157B8A0", Offset = "0x157B8A0", VA = "0x157B8A0")]
	private bool SDKManagerInitCoreAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x157B9D8", Offset = "0x157B9D8", VA = "0x157B9D8")]
	public void smsReceivedCallback(string msg)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x157C148", Offset = "0x157C148", VA = "0x157C148")]
	public void phoneStateCallback(string state)
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x157C4C8", Offset = "0x157C4C8", VA = "0x157C4C8")]
	public void phoneBatteryStateCallback(string state)
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x157C778", Offset = "0x157C778", VA = "0x157C778")]
	public void hmdLowBatteryCallback(string level)
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x157BD58", Offset = "0x157BD58", VA = "0x157BD58")]
	private string TransformNumber(string number)
	{
		return null;
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x157C8B0", Offset = "0x157C8B0", VA = "0x157C8B0")]
	public void onHmdOrientationReseted()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x157C0A0", Offset = "0x157C0A0", VA = "0x157C0A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE9244", Offset = "0xBE9244")]
	private IEnumerator ToastManager(int type, bool state, float time)
	{
		return null;
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x157C8E0", Offset = "0x157C8E0", VA = "0x157C8E0")]
	private void CheckControllerStateForG2(string state)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x157CA8C", Offset = "0x157CA8C", VA = "0x157CA8C")]
	public void notificationCallback(string data)
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x157DA3C", Offset = "0x157DA3C", VA = "0x157DA3C")]
	private Sprite LoadSprite(Vector2 size, string filepath)
	{
		return null;
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x157DB58", Offset = "0x157DB58", VA = "0x157DB58")]
	private byte[] ReadTex(string path)
	{
		return null;
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x157CE24", Offset = "0x157CE24", VA = "0x157CE24")]
	private void SetProperty(int type, JsonData data, string value)
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x157D33C", Offset = "0x157D33C", VA = "0x157D33C")]
	private void SetBaseProperty(Transform trans, JsonData data, string value)
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x157D718", Offset = "0x157D718", VA = "0x157D718")]
	private void SetImageProperty(Transform image, JsonData data, string value)
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x157DCA4", Offset = "0x157DCA4", VA = "0x157DCA4")]
	private void SetTextProperty(Transform text, JsonData data, string value)
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x157D9B0", Offset = "0x157D9B0", VA = "0x157D9B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE92A8", Offset = "0xBE92A8")]
	private IEnumerator G3TipsManager(GameObject tip, float time)
	{
		return null;
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x157DF58", Offset = "0x157DF58", VA = "0x157DF58")]
	private float JsonToFloat(JsonData data)
	{
		return default(float);
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x157E000", Offset = "0x157E000", VA = "0x157E000")]
	private bool SDKManagerInitFPS()
	{
		return default(bool);
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x157B824", Offset = "0x157B824", VA = "0x157B824")]
	private bool SDKManagerInitConfigProfile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x157E1BC", Offset = "0x157E1BC", VA = "0x157E1BC")]
	private bool SDKManagerInitEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x157E288", Offset = "0x157E288", VA = "0x157E288")]
	private bool SDKManagerInitPara()
	{
		return default(bool);
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x157E290", Offset = "0x157E290", VA = "0x157E290")]
	public void SDKManagerLongHomeKey()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x157E38C", Offset = "0x157E38C", VA = "0x157E38C")]
	private void setLongHomeKey()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x157E760", Offset = "0x157E760", VA = "0x157E760")]
	public void verifyAPPCallback(string code)
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x157EB04", Offset = "0x157EB04", VA = "0x157EB04")]
	public void IpdRefreshCallBack(string ipd)
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x157EC34", Offset = "0x157EC34", VA = "0x157EC34")]
	private void Awake()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x157FC5C", Offset = "0x157FC5C", VA = "0x157FC5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE930C", Offset = "0xBE930C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x157FD04", Offset = "0x157FD04", VA = "0x157FD04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE9370", Offset = "0xBE9370")]
	private IEnumerator InitRenderThreadRoutine()
	{
		return null;
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x157FD90", Offset = "0x157FD90", VA = "0x157FD90")]
	private void Update()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x158005C", Offset = "0x158005C", VA = "0x158005C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x15801C4", Offset = "0x15801C4", VA = "0x15801C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x158031C", Offset = "0x158031C", VA = "0x158031C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x1580324", Offset = "0x1580324", VA = "0x1580324")]
	private void OnPause()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x1580580", Offset = "0x1580580", VA = "0x1580580")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x1580838", Offset = "0x1580838", VA = "0x1580838")]
	public void EnterVRMode()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x15803CC", Offset = "0x15803CC", VA = "0x15803CC")]
	public void LeaveVRMode()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x1580928", Offset = "0x1580928", VA = "0x1580928")]
	public void SixDofForceQuit()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x157F644", Offset = "0x157F644", VA = "0x157F644")]
	private void InitUI()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x157F894", Offset = "0x157F894", VA = "0x157F894")]
	private void RefreshTextByLanguage()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x157F238", Offset = "0x157F238", VA = "0x157F238")]
	private void LoadIsMirroringValue()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x15807BC", Offset = "0x15807BC", VA = "0x15807BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE93D4", Offset = "0xBE93D4")]
	private IEnumerator OnResume()
	{
		return null;
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x158095C", Offset = "0x158095C", VA = "0x158095C")]
	public Pvr_UnitySDKManager()
	{
	}
}
[Token(Token = "0x20000EA")]
public class QuitGame : MonoBehaviour
{
	[Token(Token = "0x600064B")]
	[Address(RVA = "0xE3B500", Offset = "0xE3B500", VA = "0xE3B500")]
	private void Start()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xE3B504", Offset = "0xE3B504", VA = "0xE3B504")]
	private void Update()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xE3B530", Offset = "0xE3B530", VA = "0xE3B530")]
	public QuitGame()
	{
	}
}
[Token(Token = "0x20000EB")]
public class Pvr_UnityEyeMask : MonoBehaviour
{
	[Token(Token = "0x20005F9")]
	private class EyeMaskData
	{
		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Eye eyeSide;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommandBuffer cmdBuf;

		[Token(Token = "0x6002418")]
		[Address(RVA = "0x19F2FA8", Offset = "0x19F2FA8", VA = "0x19F2FA8")]
		public EyeMaskData()
		{
		}
	}

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Shader eyeMaskShader;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material eyeMaskMaterial;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh eyeMaskMeshLeft;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh eyeMaskMeshRight;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh eyeMaskMeshBoth;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float zDir;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color eyeMaskColor;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<EyeMaskData> cameraDataList;

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x19F15B0", Offset = "0x19F15B0", VA = "0x19F15B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x19F1668", Offset = "0x19F1668", VA = "0x19F1668")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x19F2290", Offset = "0x19F2290", VA = "0x19F2290")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x19F1C68", Offset = "0x19F1C68", VA = "0x19F1C68")]
	private void CreateCommandBuffer()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x19F2DDC", Offset = "0x19F2DDC", VA = "0x19F2DDC")]
	private void OnCustomPreRender(Camera cam)
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x19F2654", Offset = "0x19F2654", VA = "0x19F2654")]
	private Mesh GetStencilMesh(Eye eyeSide)
	{
		return null;
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x19F29A8", Offset = "0x19F29A8", VA = "0x19F29A8")]
	private Mesh GetStencilMeshBoth(Mesh leftMesh, Mesh rightMesh)
	{
		return null;
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x19F2544", Offset = "0x19F2544", VA = "0x19F2544")]
	private bool VerifyCommadBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x19F18F0", Offset = "0x19F18F0", VA = "0x19F18F0")]
	private void PrepareCameras()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x19F2F78", Offset = "0x19F2F78", VA = "0x19F2F78")]
	private void AddCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x19F2470", Offset = "0x19F2470", VA = "0x19F2470")]
	private void RemoveCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x19F249C", Offset = "0x19F249C", VA = "0x19F249C")]
	private void CleanEyeMask()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x19F2FB0", Offset = "0x19F2FB0", VA = "0x19F2FB0")]
	public Pvr_UnityEyeMask()
	{
	}
}
[Token(Token = "0x20000EC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCFE58", Offset = "0xBCFE58")]
public class Pvr_UnitySDKEye : MonoBehaviour
{
	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEye> Instances;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Eye eyeSide;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDB1C0", Offset = "0xBDB1C0")]
	private Camera <eyecamera>k__BackingField;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int eyeCameraOriginCullingMask;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private CameraClearFlags eyeCameraOriginClearFlag;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color eyeCameraOriginBackgroundColor;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lastBoundaryState;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Matrix4x4 realProj;

	[Token(Token = "0x4000634")]
	private const int bufferSize = 3;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int IDIndex;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RenderEventType eventType;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int previousId;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool setLevel;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material mat_Vignette;

	[Token(Token = "0x17000067")]
	public Camera eyecamera
	{
		[Token(Token = "0x600065B")]
		[Address(RVA = "0x1574274", Offset = "0x1574274", VA = "0x1574274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9438", Offset = "0xBE9438")]
		get
		{
			return null;
		}
		[Token(Token = "0x600065C")]
		[Address(RVA = "0x157427C", Offset = "0x157427C", VA = "0x157427C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9448", Offset = "0xBE9448")]
		private set
		{
		}
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x1574284", Offset = "0x1574284", VA = "0x1574284")]
	private void Awake()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x1574338", Offset = "0x1574338", VA = "0x1574338")]
	private void Start()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x157489C", Offset = "0x157489C", VA = "0x157489C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x1574AD0", Offset = "0x1574AD0", VA = "0x1574AD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x1574BF8", Offset = "0x1574BF8", VA = "0x1574BF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x1574D20", Offset = "0x1574D20", VA = "0x1574D20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x1574DA4", Offset = "0x1574DA4", VA = "0x1574DA4")]
	public void MyPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x1574F8C", Offset = "0x1574F8C", VA = "0x1574F8C")]
	public void MyPreRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x157504C", Offset = "0x157504C", VA = "0x157504C")]
	public void MyPostRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x1574E64", Offset = "0x1574E64", VA = "0x1574E64")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x157510C", Offset = "0x157510C", VA = "0x157510C")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x1575458", Offset = "0x1575458", VA = "0x1575458")]
	public void EyeRender()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x1574410", Offset = "0x1574410", VA = "0x1574410")]
	private void Setup(Eye eyeSide)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x157462C", Offset = "0x157462C", VA = "0x157462C")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x1575600", Offset = "0x1575600", VA = "0x1575600")]
	public void RefreshCameraPosition(float ipd)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x15757A4", Offset = "0x15757A4", VA = "0x15757A4")]
	private void DrawVignetteLine()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x15758E0", Offset = "0x15758E0", VA = "0x15758E0")]
	private void vignette()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x15752AC", Offset = "0x15752AC", VA = "0x15752AC")]
	private void SetFFRParameter()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x1575C58", Offset = "0x1575C58", VA = "0x1575C58")]
	public Pvr_UnitySDKEye()
	{
	}
}
[Token(Token = "0x20000ED")]
public class Pvr_UnitySDKEyeManager : MonoBehaviour
{
	[Token(Token = "0x20005FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD81D8", Offset = "0xBD81D8")]
	private sealed class <EndOfFrame>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x17000349")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600241C")]
			[Address(RVA = "0x1579A64", Offset = "0x1579A64", VA = "0x1579A64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600241E")]
			[Address(RVA = "0x1579ACC", Offset = "0x1579ACC", VA = "0x1579ACC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0x1577B70", Offset = "0x1577B70", VA = "0x1577B70")]
		[DebuggerHidden]
		public <EndOfFrame>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0x1578950", Offset = "0x1578950", VA = "0x1578950", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0x1578954", Offset = "0x1578954", VA = "0x1578954", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0x1579A6C", Offset = "0x1579A6C", VA = "0x1579A6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD81E8", Offset = "0xBD81E8")]
	private sealed class <ScreenFade>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startAlpha;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endAlpha;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x1700034B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002422")]
			[Address(RVA = "0x1579C14", Offset = "0x1579C14", VA = "0x1579C14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002424")]
			[Address(RVA = "0x1579C7C", Offset = "0x1579C7C", VA = "0x1579C7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0x157889C", Offset = "0x157889C", VA = "0x157889C")]
		[DebuggerHidden]
		public <ScreenFade>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0x1579AD4", Offset = "0x1579AD4", VA = "0x1579AD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0x1579AD8", Offset = "0x1579AD8", VA = "0x1579AD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0x1579C1C", Offset = "0x1579C1C", VA = "0x1579C1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKEyeManager instance;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Pvr_UnitySDKEye[] eyes;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Camera LeftEyeCamera;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Camera RightEyeCamera;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Camera MonoEyeCamera;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Camera BothEyeCamera;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int MonoEyeTextureID;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int WaitSplashScreenFrames;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int frameNum;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[HideInInspector]
	private bool foveatedRendering;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[HideInInspector]
	private EFoveationLevel foveationLevel;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int eyeTextureId;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderEventType eventType;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Pvr_UnitySDKEyeOverlay compositeLayer;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int overlayLayerDepth;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int underlayLayerDepth;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isHeadLocked;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int layerFlags;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public bool EyeTracking;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Vector3 eyePoint;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EyeTrackingData eyePoseData;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public static bool supportEyeTracking;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDB2B0", Offset = "0xBDB2B0")]
	public bool screenFade;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDB2E8", Offset = "0xBDB2E8")]
	public float fadeTime;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDB320", Offset = "0xBDB320")]
	public Color fadeColor;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public int renderQueue;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private MeshRenderer fadeMeshRenderer;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private MeshFilter fadeMeshFilter;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Material fadeMaterial;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float elapsedTime;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private bool isFading;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float currentAlpha;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float nowFadeAlpha;

	[Token(Token = "0x17000068")]
	public static Pvr_UnitySDKEyeManager Instance
	{
		[Token(Token = "0x6000671")]
		[Address(RVA = "0x1575B60", Offset = "0x1575B60", VA = "0x1575B60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000069")]
	public Pvr_UnitySDKEye[] Eyes
	{
		[Token(Token = "0x6000672")]
		[Address(RVA = "0x1575D78", Offset = "0x1575D78", VA = "0x1575D78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006A")]
	[HideInInspector]
	public bool FoveatedRendering
	{
		[Token(Token = "0x6000673")]
		[Address(RVA = "0x1575E18", Offset = "0x1575E18", VA = "0x1575E18")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000674")]
		[Address(RVA = "0x1575E20", Offset = "0x1575E20", VA = "0x1575E20")]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	[HideInInspector]
	public EFoveationLevel FoveationLevel
	{
		[Token(Token = "0x6000675")]
		[Address(RVA = "0x1575E8C", Offset = "0x1575E8C", VA = "0x1575E8C")]
		get
		{
			return default(EFoveationLevel);
		}
		[Token(Token = "0x6000676")]
		[Address(RVA = "0x1575E94", Offset = "0x1575E94", VA = "0x1575E94")]
		set
		{
		}
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x1575EA8", Offset = "0x1575EA8", VA = "0x1575EA8")]
	private void SetCameraEnableEditor()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x15760B8", Offset = "0x15760B8", VA = "0x15760B8")]
	private void SetCamerasEnableByStereoRendering()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x1576178", Offset = "0x1576178", VA = "0x1576178")]
	private void SetupMonoCamera()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x157628C", Offset = "0x157628C", VA = "0x157628C")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x1576360", Offset = "0x1576360", VA = "0x1576360")]
	private void MonoEyeRender()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x15764D0", Offset = "0x15764D0", VA = "0x15764D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x1576CEC", Offset = "0x1576CEC", VA = "0x1576CEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x1577518", Offset = "0x1577518", VA = "0x1577518")]
	private void Start()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x157753C", Offset = "0x157753C", VA = "0x157753C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x1577790", Offset = "0x1577790", VA = "0x1577790")]
	private void OnPause()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x1577884", Offset = "0x1577884", VA = "0x1577884")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x157788C", Offset = "0x157788C", VA = "0x157788C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x15779F4", Offset = "0x15779F4", VA = "0x15779F4")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x1577AF4", Offset = "0x1577AF4", VA = "0x1577AF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE9458", Offset = "0xBE9458")]
	private IEnumerator EndOfFrame()
	{
		return null;
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x1577B9C", Offset = "0x1577B9C", VA = "0x1577B9C")]
	private void CreateExternalSurface(Pvr_UnitySDKEyeOverlay overlayInstance, int layerDepth)
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x1577FAC", Offset = "0x1577FAC", VA = "0x1577FAC")]
	public bool SetEyeTrackingMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x15782C0", Offset = "0x15782C0", VA = "0x15782C0")]
	public Vector3 GetEyeTrackingPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x15784F0", Offset = "0x15784F0", VA = "0x15784F0")]
	private EyeDeviceInfo GetDeviceInfo()
	{
		return default(EyeDeviceInfo);
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x157685C", Offset = "0x157685C", VA = "0x157685C")]
	private void CreateFadeMesh()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x1577890", Offset = "0x1577890", VA = "0x1577890")]
	private void DestoryFadeMesh()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x1576CE4", Offset = "0x1576CE4", VA = "0x1576CE4")]
	public void SetCurrentAlpha(float alpha)
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x1577488", Offset = "0x1577488", VA = "0x1577488")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE94BC", Offset = "0xBE94BC")]
	private IEnumerator ScreenFade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x1578744", Offset = "0x1578744", VA = "0x1578744")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x1577338", Offset = "0x1577338", VA = "0x1577338")]
	public bool GfxDeviceAdvanceFrameGLES()
	{
		return default(bool);
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x15788C8", Offset = "0x15788C8", VA = "0x15788C8")]
	public Pvr_UnitySDKEyeManager()
	{
	}
}
[Token(Token = "0x20000EE")]
public class Pvr_UnitySDKEyeOverlay : MonoBehaviour, IComparable<Pvr_UnitySDKEyeOverlay>
{
	[Token(Token = "0x20005FC")]
	public delegate void ExternalAndroidSurfaceObjectCreated();

	[Token(Token = "0x20005FD")]
	public enum OverlayShape
	{
		[Token(Token = "0x4001E73")]
		Quad,
		[Token(Token = "0x4001E74")]
		Cylinder,
		[Token(Token = "0x4001E75")]
		Equirect
	}

	[Token(Token = "0x20005FE")]
	public enum OverlayType
	{
		[Token(Token = "0x4001E77")]
		Overlay,
		[Token(Token = "0x4001E78")]
		Underlay
	}

	[Token(Token = "0x20005FF")]
	public enum OverlayTexFilterMode
	{
		[Token(Token = "0x4001E7A")]
		NotCare,
		[Token(Token = "0x4001E7B")]
		Nearest,
		[Token(Token = "0x4001E7C")]
		Linear,
		[Token(Token = "0x4001E7D")]
		Nearest_Mipmap_Nearest,
		[Token(Token = "0x4001E7E")]
		Linear_Mipmap_Nearest,
		[Token(Token = "0x4001E7F")]
		Nearest_Mipmap_Linear,
		[Token(Token = "0x4001E80")]
		Linear_Mipmap_Linear
	}

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEyeOverlay> Instances;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int layerIndex;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OverlayType overlayType;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OverlayShape overlayShape;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform layerTransform;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture[] layerTextures;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] layerTextureIds;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Matrix4x4[] MVMatrixs;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3[] ModelScales;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Quaternion[] ModelRotations;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3[] ModelTranslations;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Quaternion[] CameraRotations;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3[] CameraTranslations;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Camera[] layerEyeCamera;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool overrideColorScaleAndOffset;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector4 colorScale;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector4 colorOffset;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector4 overlayLayerColorScaleDefault;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector4 overlayLayerColorOffsetDefault;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool isExternalAndroidSurface;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntPtr externalAndroidSurfaceObject;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ExternalAndroidSurfaceObjectCreated externalAndroidSurfaceObjectCreated;

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x1579C84", Offset = "0x1579C84", VA = "0x1579C84", Slot = "4")]
	public int CompareTo(Pvr_UnitySDKEyeOverlay other)
	{
		return default(int);
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x1579CA4", Offset = "0x1579CA4", VA = "0x1579CA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x157A1C4", Offset = "0x157A1C4", VA = "0x157A1C4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x157A670", Offset = "0x157A670", VA = "0x157A670")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x15770D8", Offset = "0x15770D8", VA = "0x15770D8")]
	public void RefreshCamera()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x157A010", Offset = "0x157A010", VA = "0x157A010")]
	private void InitializeBuffer()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x157A1C8", Offset = "0x157A1C8", VA = "0x157A1C8")]
	private void UpdateCoords()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x157A900", Offset = "0x157A900", VA = "0x157A900")]
	public void SetTexture(Texture texture)
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x157A9B0", Offset = "0x157A9B0", VA = "0x157A9B0")]
	public void SetLayerColorScaleAndOffset(Vector4 scale, Vector4 offset)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x15799E4", Offset = "0x15799E4", VA = "0x15799E4")]
	public Vector4 GetLayerColorScale()
	{
		return default(Vector4);
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x1579A24", Offset = "0x1579A24", VA = "0x1579A24")]
	public Vector4 GetLayerColorOffset()
	{
		return default(Vector4);
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x157A9C4", Offset = "0x157A9C4", VA = "0x157A9C4")]
	public Pvr_UnitySDKEyeOverlay()
	{
	}
}
[Token(Token = "0x20000EF")]
public class Pvr_UnitySDKRender
{
	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKRender instance;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaObject activity;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AndroidJavaClass javaVrActivityClass;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static AndroidJavaClass javaSysActivityClass;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static AndroidJavaClass javaserviceClass;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static AndroidJavaClass javaVrActivityLongReceiver;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static AndroidJavaClass javaVrActivityClientClass;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool canConnecttoActivity;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isInitrenderThread;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string model;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 prefinger1;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 prefinger2;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int eyeTextureCount;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderTexture[] eyeTextures;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] eyeTextureIds;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int currEyeTextureIdx;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int nextEyeTextureIdx;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int lastEyeTextureIdx;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool isSwitchSDK;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int RenderviewNumber;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool isFirstStartup;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool isShellMode;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private StereoRenderingPathPico stereoRenderPath;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDB358", Offset = "0xBDB358")]
	private SDKStereoRendering <StereoRendering>k__BackingField;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float rtScaleFactor;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float eyeVFov;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float eyeHFov;

	[Token(Token = "0x1700006C")]
	public static Pvr_UnitySDKRender Instance
	{
		[Token(Token = "0x600069E")]
		[Address(RVA = "0x15736F8", Offset = "0x15736F8", VA = "0x15736F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600069F")]
		[Address(RVA = "0x1582A6C", Offset = "0x1582A6C", VA = "0x1582A6C")]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public StereoRenderingPathPico StereoRenderPath
	{
		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x1583444", Offset = "0x1583444", VA = "0x1583444")]
		get
		{
			return default(StereoRenderingPathPico);
		}
	}

	[Token(Token = "0x1700006E")]
	public SDKStereoRendering StereoRendering
	{
		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x158344C", Offset = "0x158344C", VA = "0x158344C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9520", Offset = "0xBE9520")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x1583454", Offset = "0x1583454", VA = "0x1583454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9530", Offset = "0xBE9530")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public float RtScaleFactor
	{
		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x158345C", Offset = "0x158345C", VA = "0x158345C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x1583464", Offset = "0x1583464", VA = "0x1583464")]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public float EyeVFoV
	{
		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x15835C4", Offset = "0x15835C4", VA = "0x15835C4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x1574028", Offset = "0x1574028", VA = "0x1574028")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public float EyeHFoV
	{
		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x15835CC", Offset = "0x15835CC", VA = "0x15835CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x15835D4", Offset = "0x15835D4", VA = "0x15835D4")]
		set
		{
		}
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x158295C", Offset = "0x158295C", VA = "0x158295C")]
	public Pvr_UnitySDKRender()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x1582ADC", Offset = "0x1582ADC", VA = "0x1582ADC")]
	public void ConnectToAndriod()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x15833C4", Offset = "0x15833C4", VA = "0x15833C4")]
	public void Init()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x1583A60", Offset = "0x1583A60", VA = "0x1583A60")]
	private bool InitRenderAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x1583B74", Offset = "0x1583B74", VA = "0x1583B74")]
	private bool UpdateRenderParaFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x1583C1C", Offset = "0x1583C1C", VA = "0x1583C1C")]
	private bool CreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x15845A4", Offset = "0x15845A4", VA = "0x15845A4")]
	private void InitSinglePass()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x1583F78", Offset = "0x1583F78", VA = "0x1583F78")]
	public float GetEyeVFOV()
	{
		return default(float);
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x15840D8", Offset = "0x15840D8", VA = "0x15840D8")]
	public float GetEyeHFOV()
	{
		return default(float);
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x15847C8", Offset = "0x15847C8", VA = "0x15847C8")]
	private void ConfigureEyeBuffer(int eyeTextureIndex, Vector2 resolution)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x158347C", Offset = "0x158347C", VA = "0x158347C")]
	public bool ReCreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x15818C4", Offset = "0x15818C4", VA = "0x15818C4")]
	public void ReInit()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x1580D88", Offset = "0x1580D88", VA = "0x1580D88")]
	public void IssueRenderThread()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x1584D28", Offset = "0x1584D28", VA = "0x1584D28")]
	private void AutoAdpatForPico1s()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x1584238", Offset = "0x1584238", VA = "0x1584238")]
	public Vector2 GetEyeBufferResolution()
	{
		return default(Vector2);
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x1584F50", Offset = "0x1584F50", VA = "0x1584F50")]
	public bool GetUsePredictedMatrix()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x15835E8", Offset = "0x15835E8", VA = "0x15835E8")]
	public bool GetIsShellMode()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000F0")]
public class Pvr_UnitySDKSinglePass : SDKStereoRendering
{
	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera bothCamera;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Matrix4x4[] unity_StereoMatrixP;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Matrix4x4[] unity_StereoMatrixInvP;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Matrix4x4[] unity_StereoWorldToCamera;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Matrix4x4[] unity_StereoCameraToWorld;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Matrix4x4[] unity_StereoMatrixVP;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] eyesOffset;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Matrix4x4[] eyesOffsetMatrix;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CommandBuffer commandBufferBeforeForwardOpaque;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CommandBuffer commandBufferBeforeSkybox;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CommandBuffer commandBufferAfterSkybox;

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x1587D90", Offset = "0x1587D90", VA = "0x1587D90", Slot = "4")]
	public override void InitEye(Camera eye)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x158865C", Offset = "0x158865C", VA = "0x158865C", Slot = "5")]
	public override void OnSDKRenderInited()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x1588784", Offset = "0x1588784", VA = "0x1588784", Slot = "6")]
	public override void OnSDKPreRender()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x1588FA8", Offset = "0x1588FA8", VA = "0x1588FA8", Slot = "7")]
	public override void OnSDKPostRender()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x1588660", Offset = "0x1588660", VA = "0x1588660")]
	public void OnSDKRenderInited_SinglePass()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x1589060", Offset = "0x1589060", VA = "0x1589060")]
	private void SetAntiAliasing()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x1588100", Offset = "0x1588100", VA = "0x1588100")]
	public void SetEyesPosition()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x1588514", Offset = "0x1588514", VA = "0x1588514")]
	public void SetEyeProjection()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x1589168", Offset = "0x1589168", VA = "0x1589168")]
	private static Matrix4x4 GetProjection(float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x1589380", Offset = "0x1589380", VA = "0x1589380")]
	public static Matrix4x4 MakeProjection(float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x158923C", Offset = "0x158923C", VA = "0x158923C")]
	public void SetStereoProjectionMatrix(Matrix4x4 left, Matrix4x4 right)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x1588FB0", Offset = "0x1588FB0", VA = "0x1588FB0")]
	private void SwitchKeywordAndDeviceView(bool enable)
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x157A6F4", Offset = "0x157A6F4", VA = "0x157A6F4")]
	public static Matrix4x4[] GetStereoWorldToCameraMat()
	{
		return null;
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x1588788", Offset = "0x1588788", VA = "0x1588788")]
	public void SinglePassPreRender()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x15895FC", Offset = "0x15895FC", VA = "0x15895FC")]
	private void SetCommandBuffers()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x158955C", Offset = "0x158955C", VA = "0x158955C")]
	private void SetRenderTextureWithDepth()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x1584C44", Offset = "0x1584C44", VA = "0x1584C44")]
	public Pvr_UnitySDKSinglePass()
	{
	}
}
[Token(Token = "0x20000F1")]
public abstract class SDKStereoRendering
{
	[Token(Token = "0x60006CD")]
	public abstract void InitEye(Camera eye);

	[Token(Token = "0x60006CE")]
	public abstract void OnSDKRenderInited();

	[Token(Token = "0x60006CF")]
	public abstract void OnSDKPreRender();

	[Token(Token = "0x60006D0")]
	public abstract void OnSDKPostRender();

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xE407B4", Offset = "0xE407B4", VA = "0xE407B4")]
	protected SDKStereoRendering()
	{
	}
}
[Token(Token = "0x20000F2")]
public class Pvr_UnitySDKHeadTrack : MonoBehaviour
{
	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDB368", Offset = "0xBDB368")]
	public bool trackRotation;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDB3A0", Offset = "0xBDB3A0")]
	public bool trackPosition;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 offset;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool updated;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool dataClock;

	[Token(Token = "0x17000072")]
	public Ray Gaze
	{
		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x157AE18", Offset = "0x157AE18", VA = "0x157AE18")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x157B2CC", Offset = "0x157B2CC", VA = "0x157B2CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x157AEB4", Offset = "0x157AEB4", VA = "0x157AEB4")]
	private void UpdateHead()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x157B2D4", Offset = "0x157B2D4", VA = "0x157B2D4")]
	public Pvr_UnitySDKHeadTrack()
	{
	}
}
[Token(Token = "0x20000F3")]
public class Pvr_UnitySDKPose
{
	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Matrix4x4 flipZ;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDB3D8", Offset = "0xBDB3D8")]
	private Vector3 <Position>k__BackingField;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDB3E8", Offset = "0xBDB3E8")]
	private Quaternion <Orientation>k__BackingField;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDB3F8", Offset = "0xBDB3F8")]
	private Matrix4x4 <Matrix>k__BackingField;

	[Token(Token = "0x17000073")]
	public Matrix4x4 RightHandedMatrix
	{
		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x15822D4", Offset = "0x15822D4", VA = "0x15822D4")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x17000074")]
	public Vector3 Position
	{
		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x1582418", Offset = "0x1582418", VA = "0x1582418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9540", Offset = "0xBE9540")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x1582424", Offset = "0x1582424", VA = "0x1582424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9550", Offset = "0xBE9550")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public Quaternion Orientation
	{
		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x1582430", Offset = "0x1582430", VA = "0x1582430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9560", Offset = "0xBE9560")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x158243C", Offset = "0x158243C", VA = "0x158243C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9570", Offset = "0xBE9570")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public Matrix4x4 Matrix
	{
		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x1582448", Offset = "0x1582448", VA = "0x1582448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9580", Offset = "0xBE9580")]
		get
		{
			return default(Matrix4x4);
		}
		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x1582464", Offset = "0x1582464", VA = "0x1582464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9590", Offset = "0xBE9590")]
		protected set
		{
		}
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x157416C", Offset = "0x157416C", VA = "0x157416C")]
	public Pvr_UnitySDKPose(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x15825EC", Offset = "0x15825EC", VA = "0x15825EC")]
	public Pvr_UnitySDKPose(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x158266C", Offset = "0x158266C", VA = "0x158266C")]
	public void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x1582480", Offset = "0x1582480", VA = "0x1582480")]
	protected void Set(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x158279C", Offset = "0x158279C", VA = "0x158279C")]
	private Quaternion NormalizeQuaternion(ref Quaternion q)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x20000F4")]
public class Pvr_UnitySDKSensor
{
	[Token(Token = "0x2000600")]
	public delegate void Enter3DofModel();

	[Token(Token = "0x2000601")]
	public delegate void Exit3DofModel();

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKSensor instance;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool SensorStart;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool SensorInit;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Quaternion UnityQuaternion;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 UnityPosition;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Sensorindex sensorIndex;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool dofClock;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static System.Action EyeFovChanged;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Pvr_UnitySDKPose HeadPose;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float vfov;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float hfov;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float w;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float x;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float y;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float z;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float px;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float py;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float pz;

	[Token(Token = "0x17000077")]
	public static Pvr_UnitySDKSensor Instance
	{
		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x15737C0", Offset = "0x15737C0", VA = "0x15737C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x1585018", Offset = "0x1585018", VA = "0x1585018")]
		set
		{
		}
	}

	[Token(Token = "0x14000026")]
	public static event Enter3DofModel Enter3DofModelEvent
	{
		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x15851C4", Offset = "0x15851C4", VA = "0x15851C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE95A0", Offset = "0xBE95A0")]
		add
		{
		}
		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x15852B4", Offset = "0x15852B4", VA = "0x15852B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE95B0", Offset = "0xBE95B0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000027")]
	public static event Exit3DofModel Exit3DofModelEvent
	{
		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x15853A4", Offset = "0x15853A4", VA = "0x15853A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE95C0", Offset = "0xBE95C0")]
		add
		{
		}
		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x1585494", Offset = "0x1585494", VA = "0x1585494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE95D0", Offset = "0xBE95D0")]
		remove
		{
		}
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x1584F5C", Offset = "0x1584F5C", VA = "0x1584F5C")]
	public Pvr_UnitySDKSensor()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x1585088", Offset = "0x1585088", VA = "0x1585088")]
	public void Init()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x1580010", Offset = "0x1580010", VA = "0x1580010")]
	public void SensorUpdate()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x15857C4", Offset = "0x15857C4", VA = "0x15857C4")]
	public bool InitUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x1585584", Offset = "0x1585584", VA = "0x1585584")]
	public bool InitUnitySDK6DofSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x15814E0", Offset = "0x15814E0", VA = "0x15814E0")]
	public bool StartUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x1580444", Offset = "0x1580444", VA = "0x1580444")]
	public bool StopUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x157E5E4", Offset = "0x157E5E4", VA = "0x157E5E4")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x15797FC", Offset = "0x15797FC", VA = "0x15797FC")]
	public bool OptionalResetUnitySDKSensor(int resetRot, int resetPos)
	{
		return default(bool);
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x1585900", Offset = "0x1585900", VA = "0x1585900")]
	public bool GetUnitySDKSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x1586F5C", Offset = "0x1586F5C", VA = "0x1586F5C")]
	public bool GetUnitySDKPSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x1586DD8", Offset = "0x1586DD8", VA = "0x1586DD8")]
	private void RefreshHeadData(float x, float y, float z, float w, float px, float py, float pz)
	{
	}
}
[Token(Token = "0x20000F5")]
public class CLoadingAsset : ScriptableObject
{
	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SplashScreenType;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture2D> splashImage;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D Inside_background;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseSplashText;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string DefaultText;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ChineseText;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string EnglishText;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string JapaneseText;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string KoreanText;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string FontSize;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color FontColor;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string TextHeight;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool UseCarousel;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int SplashTextAlignment;

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xED6464", Offset = "0xED6464", VA = "0xED6464")]
	public CLoadingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20000F6")]
public class Pvr_UnitySDKConfigProfile
{
	[Token(Token = "0x2000602")]
	public struct Lenses
	{
		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float separation;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float offset;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float distance;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int alignment;

		[Token(Token = "0x4001E85")]
		public const int AlignTop = -1;

		[Token(Token = "0x4001E86")]
		public const int AlignCenter = 0;

		[Token(Token = "0x4001E87")]
		public const int AlignBottom = 1;
	}

	[Token(Token = "0x2000603")]
	public struct MaxFOV
	{
		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float upper;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float lower;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float inner;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float outer;
	}

	[Token(Token = "0x2000604")]
	public struct Distortion
	{
		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float k1;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float k2;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float k3;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float k4;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float k5;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float k6;

		[Token(Token = "0x6002431")]
		[Address(RVA = "0xD03B34", Offset = "0xD03B34", VA = "0xD03B34")]
		public float distort(float r)
		{
			return default(float);
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0xD03B3C", Offset = "0xD03B3C", VA = "0xD03B3C")]
		public float distort(float r, float dist)
		{
			return default(float);
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0xD03B44", Offset = "0xD03B44", VA = "0xD03B44")]
		public float diatortInv(float radious)
		{
			return default(float);
		}
	}

	[Token(Token = "0x2000605")]
	public struct Device
	{
		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Lenses devLenses;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaxFOV devMaxFov;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Distortion devDistortion;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Distortion devDistortionInv;
	}

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Device SimulateDevice;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Device device;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly Pvr_UnitySDKConfigProfile Default;

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x157238C", Offset = "0x157238C", VA = "0x157238C")]
	public Pvr_UnitySDKConfigProfile Clone()
	{
		return null;
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x1572424", Offset = "0x1572424", VA = "0x1572424")]
	public static Pvr_UnitySDKConfigProfile GetPicoProfile()
	{
		return null;
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x15724CC", Offset = "0x15724CC", VA = "0x15724CC")]
	public float[] GetLeftEyeVisibleTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x1572818", Offset = "0x1572818", VA = "0x1572818")]
	public float[] GetLeftEyeNoLensTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x1572A44", Offset = "0x1572A44", VA = "0x1572A44")]
	public Rect GetLeftEyeVisibleScreenRect(float[] undistortedFrustum, float width, float height)
	{
		return default(Rect);
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x157241C", Offset = "0x157241C", VA = "0x157241C")]
	public Pvr_UnitySDKConfigProfile()
	{
	}
}
[Token(Token = "0x20000F7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCFEBC", Offset = "0xBCFEBC")]
public class Pvr_UnitySDKFPS : MonoBehaviour
{
	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text fpsText;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float updateInterval;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accum;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeLeft;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string strFps;

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x157AC6C", Offset = "0x157AC6C", VA = "0x157AC6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x157ACF4", Offset = "0x157ACF4", VA = "0x157ACF4")]
	private void ShowFps()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x157AE08", Offset = "0x157AE08", VA = "0x157AE08")]
	public Pvr_UnitySDKFPS()
	{
	}
}
[Token(Token = "0x20000F8")]
public class Pvr_GazeFuse : MonoBehaviour
{
	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gazeGameObject;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image image;

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x163CC9C", Offset = "0x163CC9C", VA = "0x163CC9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x163CCFC", Offset = "0x163CCFC", VA = "0x163CCFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x163CE30", Offset = "0x163CE30", VA = "0x163CE30")]
	private void FuseAmountChanged(float fuseAmount)
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x163CED8", Offset = "0x163CED8", VA = "0x163CED8")]
	public Pvr_GazeFuse()
	{
	}
}
[Token(Token = "0x20000F9")]
public class Pvr_GazeInputModule : PointerInputModule
{
	[Token(Token = "0x2000606")]
	public enum Mode
	{
		[Token(Token = "0x4001E97")]
		Click,
		[Token(Token = "0x4001E98")]
		Gaze
	}

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mode mode;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDB428", Offset = "0xBDB428")]
	public string ClickInputName;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDB460", Offset = "0xBDB460")]
	public float GazeTimeInSeconds;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDB498", Offset = "0xBDB498")]
	private static float <gazeFraction>k__BackingField;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDB4A8", Offset = "0xBDB4A8")]
	private static GameObject <gazeGameObject>k__BackingField;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RaycastResult CurrentRaycast;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private PointerEventData pointerEventData;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject currentLookAtHandler;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float currentLookAtHandlerClickTime;

	[Token(Token = "0x17000078")]
	public static float gazeFraction
	{
		[Token(Token = "0x6000705")]
		[Address(RVA = "0x163CEE0", Offset = "0x163CEE0", VA = "0x163CEE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE95E0", Offset = "0xBE95E0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000706")]
		[Address(RVA = "0x163CF30", Offset = "0x163CF30", VA = "0x163CF30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE95F0", Offset = "0xBE95F0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public static GameObject gazeGameObject
	{
		[Token(Token = "0x6000707")]
		[Address(RVA = "0x163CF8C", Offset = "0x163CF8C", VA = "0x163CF8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9600", Offset = "0xBE9600")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000708")]
		[Address(RVA = "0x163CFDC", Offset = "0x163CFDC", VA = "0x163CFDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9610", Offset = "0xBE9610")]
		private set
		{
		}
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x163D034", Offset = "0x163D034", VA = "0x163D034", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x163D058", Offset = "0x163D058", VA = "0x163D058")]
	private void HandleLook()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x163D258", Offset = "0x163D258", VA = "0x163D258")]
	private void HandleSelection()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x163D74C", Offset = "0x163D74C", VA = "0x163D74C")]
	public Pvr_GazeInputModule()
	{
	}
}
[Token(Token = "0x20000FA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCFF20", Offset = "0xBCFF20")]
public class Pvr_GazeInputModuleCrosshair : MonoBehaviour
{
	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DisplayCrosshair;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDB4B8", Offset = "0xBDB4B8")]
	public Transform Crosshair;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Pvr_GazeInputModule gazeInputModule;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 CrosshairOriginalScale;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float CrosshairOriginalDistance;

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x163D7B4", Offset = "0x163D7B4", VA = "0x163D7B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x163D814", Offset = "0x163D814", VA = "0x163D814")]
	private void Start()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x163D87C", Offset = "0x163D87C", VA = "0x163D87C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x163D98C", Offset = "0x163D98C", VA = "0x163D98C")]
	private void SetCrossHairAtDistance(float dist)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x163DA84", Offset = "0x163DA84", VA = "0x163DA84")]
	public Pvr_GazeInputModuleCrosshair()
	{
	}
}
[Token(Token = "0x20000FB")]
public enum RenderEventType
{
	[Token(Token = "0x40006DD")]
	InitRenderThread = 1024,
	[Token(Token = "0x40006DE")]
	Pause,
	[Token(Token = "0x40006DF")]
	Resume,
	[Token(Token = "0x40006E0")]
	LeftEyeEndFrame,
	[Token(Token = "0x40006E1")]
	RightEyeEndFrame,
	[Token(Token = "0x40006E2")]
	TimeWarp,
	[Token(Token = "0x40006E3")]
	ResetVrModeParms,
	[Token(Token = "0x40006E4")]
	ShutdownRenderThread,
	[Token(Token = "0x40006E5")]
	BeginEye,
	[Token(Token = "0x40006E6")]
	EndEye,
	[Token(Token = "0x40006E7")]
	BoundaryRenderLeft,
	[Token(Token = "0x40006E8")]
	BoundaryRenderRight,
	[Token(Token = "0x40006E9")]
	BothEyeEndFrame,
	[Token(Token = "0x40006EA")]
	CameraFrameLeft,
	[Token(Token = "0x40006EB")]
	CameraFrameRight,
	[Token(Token = "0x40006EC")]
	StartCameraFrame,
	[Token(Token = "0x40006ED")]
	StopCameraFrame
}
[Token(Token = "0x20000FC")]
public static class Pvr_UnitySDKPluginEvent
{
	[Token(Token = "0x2000607")]
	private delegate void RenderEventDelegate(int eventId);

	[Token(Token = "0x40006EE")]
	private const uint IS_DATA_FLAG = 2147483648u;

	[Token(Token = "0x40006EF")]
	private const uint DATA_POS_MASK = 1073741824u;

	[Token(Token = "0x40006F0")]
	private const int DATA_POS_SHIFT = 30;

	[Token(Token = "0x40006F1")]
	private const uint EVENT_TYPE_MASK = 1056899072u;

	[Token(Token = "0x40006F2")]
	private const int EVENT_TYPE_SHIFT = 17;

	[Token(Token = "0x40006F3")]
	private const uint PAYLOAD_MASK = 65535u;

	[Token(Token = "0x40006F4")]
	private const int PAYLOAD_SHIFT = 16;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RenderEventDelegate SetSinglePassBeforeForwardOpaqueHandle;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IntPtr SetSinglePassBeforeForwardOpaquePtr;

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x157542C", Offset = "0x157542C", VA = "0x157542C")]
	public static void Issue(RenderEventType eventType)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x1581E24", Offset = "0x1581E24", VA = "0x1581E24")]
	private static int EncodeType(int eventType)
	{
		return default(int);
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x1581E2C", Offset = "0x1581E2C", VA = "0x1581E2C")]
	private static int EncodeData(int eventId, int eventData, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x1581E4C", Offset = "0x1581E4C", VA = "0x1581E4C")]
	private static int DecodeData(int eventData)
	{
		return default(int);
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x1581E1C", Offset = "0x1581E1C", VA = "0x1581E1C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBE9620", Offset = "0xBE9620")]
	private static void SetSinglePassBeforeForwardOpaque(int eventId)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x1581E60", Offset = "0x1581E60", VA = "0x1581E60")]
	public static void SetSinglePassBeforeForwardOpaque(CommandBuffer cmd)
	{
	}
}
[Token(Token = "0x20000FD")]
public class Pvr_UnitySDKSightInputModule : BaseInputModule
{
	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDB4F0", Offset = "0xBDB4F0")]
	public GameObject cursor;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int trigger;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public float clickTime;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Vector2 hotspot;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PointerEventData pointerData;

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x1587134", Offset = "0x1587134", VA = "0x1587134", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x15871C4", Offset = "0x15871C4", VA = "0x15871C4", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x15874C4", Offset = "0x15874C4", VA = "0x15874C4", Slot = "20")]
	public override bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x158754C", Offset = "0x158754C", VA = "0x158754C", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x1587588", Offset = "0x1587588", VA = "0x1587588")]
	private void CastRayFromGaze()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x15876EC", Offset = "0x15876EC", VA = "0x15876EC")]
	private void UpdateCurrentObject()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x158788C", Offset = "0x158788C", VA = "0x158788C")]
	private void PlaceCursor()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x15872D0", Offset = "0x15872D0", VA = "0x15872D0")]
	private void HandlePendingClick()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x1587AB4", Offset = "0x1587AB4", VA = "0x1587AB4")]
	private void HandleTrigger()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x1587D3C", Offset = "0x1587D3C", VA = "0x1587D3C")]
	public Pvr_UnitySDKSightInputModule()
	{
	}
}
[Token(Token = "0x20000FE")]
public class Pvr_ObjImporter
{
	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ObjImporter _instance;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<int> triangles;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Vector3> vertices;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector2> uv;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> normals;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PvrVector3Int> faceData;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> intArray;

	[Token(Token = "0x4000703")]
	private const int MIN_POW_10 = -16;

	[Token(Token = "0x4000704")]
	private const int MAX_POW_10 = 16;

	[Token(Token = "0x4000705")]
	private const int NUM_POWS_10 = 33;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float[] pow10;

	[Token(Token = "0x1700007A")]
	public static Pvr_ObjImporter Instance
	{
		[Token(Token = "0x6000724")]
		[Address(RVA = "0x1640538", Offset = "0x1640538", VA = "0x1640538")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x16405EC", Offset = "0x16405EC", VA = "0x16405EC")]
	public Mesh ImportFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x1640A88", Offset = "0x1640A88", VA = "0x1640A88")]
	private void LoadMeshData(string fileName)
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x164115C", Offset = "0x164115C", VA = "0x164115C")]
	private float GetFloat(StringBuilder sb, ref int start, ref StringBuilder sbFloat)
	{
		return default(float);
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x16412D4", Offset = "0x16412D4", VA = "0x16412D4")]
	private int GetInt(StringBuilder sb, ref int start, ref StringBuilder sbInt)
	{
		return default(int);
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x16416DC", Offset = "0x16416DC", VA = "0x16416DC")]
	private static float[] GenerateLookupTable()
	{
		return null;
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x1641414", Offset = "0x1641414", VA = "0x1641414")]
	private float ParseFloat(StringBuilder value)
	{
		return default(float);
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x1641650", Offset = "0x1641650", VA = "0x1641650")]
	private int IntParseFast(StringBuilder value)
	{
		return default(int);
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x16405E4", Offset = "0x16405E4", VA = "0x16405E4")]
	public Pvr_ObjImporter()
	{
	}
}
[Token(Token = "0x20000FF")]
public sealed class PvrVector3Int
{
	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDB548", Offset = "0xBDB548")]
	private int <x>k__BackingField;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDB558", Offset = "0xBDB558")]
	private int <y>k__BackingField;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDB568", Offset = "0xBDB568")]
	private int <z>k__BackingField;

	[Token(Token = "0x1700007B")]
	public int x
	{
		[Token(Token = "0x600072E")]
		[Address(RVA = "0xEF030C", Offset = "0xEF030C", VA = "0xEF030C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9684", Offset = "0xBE9684")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600072F")]
		[Address(RVA = "0xEF0314", Offset = "0xEF0314", VA = "0xEF0314")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9694", Offset = "0xBE9694")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public int y
	{
		[Token(Token = "0x6000730")]
		[Address(RVA = "0xEF031C", Offset = "0xEF031C", VA = "0xEF031C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE96A4", Offset = "0xBE96A4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000731")]
		[Address(RVA = "0xEF0324", Offset = "0xEF0324", VA = "0xEF0324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE96B4", Offset = "0xBE96B4")]
		set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public int z
	{
		[Token(Token = "0x6000732")]
		[Address(RVA = "0xEF032C", Offset = "0xEF032C", VA = "0xEF032C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE96C4", Offset = "0xBE96C4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000733")]
		[Address(RVA = "0xEF0334", Offset = "0xEF0334", VA = "0xEF0334")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE96D4", Offset = "0xBE96D4")]
		set
		{
		}
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xEF033C", Offset = "0xEF033C", VA = "0xEF033C")]
	public PvrVector3Int()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xEF0344", Offset = "0xEF0344", VA = "0xEF0344")]
	public PvrVector3Int(int x, int y, int z)
	{
	}
}
[Token(Token = "0x2000100")]
public class Pvr_EnumFlags : PropertyAttribute
{
	[Token(Token = "0x6000736")]
	[Address(RVA = "0x163CC94", Offset = "0x163CC94", VA = "0x163CC94")]
	public Pvr_EnumFlags()
	{
	}
}
[Token(Token = "0x2000101")]
public enum ConfirmBtn
{
	[Token(Token = "0x400070B")]
	App = 1,
	[Token(Token = "0x400070C")]
	TouchPad = 2,
	[Token(Token = "0x400070D")]
	Trigger = 4
}
[Token(Token = "0x2000102")]
public class Pvr_InputModule : PointerInputModule
{
	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UIPointer> pointers;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Pvr_EnumFlags]
	public ConfirmBtn confirmBtn;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<RaycastResult> rayCasts;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RaycastResult rayCastResult;

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x163DAE0", Offset = "0x163DAE0", VA = "0x163DAE0", Slot = "30")]
	public virtual void Initialise()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x163DB5C", Offset = "0x163DB5C", VA = "0x163DB5C")]
	public static void AddPoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x163DC2C", Offset = "0x163DC2C", VA = "0x163DC2C")]
	public static void RemovePoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x163DCFC", Offset = "0x163DCFC", VA = "0x163DCFC", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x163E070", Offset = "0x163E070", VA = "0x163E070", Slot = "31")]
	protected virtual List<RaycastResult> CheckRaycasts(Pvr_UIPointer pointer)
	{
		return null;
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x163E130", Offset = "0x163E130", VA = "0x163E130", Slot = "32")]
	protected virtual bool CheckTransformTree(Transform target, Transform source)
	{
		return default(bool);
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x163E220", Offset = "0x163E220", VA = "0x163E220", Slot = "33")]
	protected virtual bool NoValidCollision(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x163E2E0", Offset = "0x163E2E0", VA = "0x163E2E0", Slot = "34")]
	protected virtual bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x163E4E8", Offset = "0x163E4E8", VA = "0x163E4E8", Slot = "35")]
	protected virtual bool ValidElement(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x163E598", Offset = "0x163E598", VA = "0x163E598", Slot = "36")]
	protected virtual void CheckPointerHoverClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x163E634", Offset = "0x163E634", VA = "0x163E634", Slot = "37")]
	protected virtual void Hover(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x163F25C", Offset = "0x163F25C", VA = "0x163F25C", Slot = "38")]
	protected virtual void Click(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x163F2A4", Offset = "0x163F2A4", VA = "0x163F2A4", Slot = "39")]
	protected virtual void ClickOnUp(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x163F344", Offset = "0x163F344", VA = "0x163F344", Slot = "40")]
	protected virtual void ClickOnDown(Pvr_UIPointer pointer, List<RaycastResult> results, bool forceClick = false)
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x163F400", Offset = "0x163F400", VA = "0x163F400", Slot = "41")]
	protected virtual bool IsEligibleClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x163F6DC", Offset = "0x163F6DC", VA = "0x163F6DC", Slot = "42")]
	protected virtual bool AttemptClick(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x163F9A8", Offset = "0x163F9A8", VA = "0x163F9A8", Slot = "43")]
	protected virtual void Drag(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x1640090", Offset = "0x1640090", VA = "0x1640090")]
	public Pvr_InputModule()
	{
	}
}
[Token(Token = "0x2000103")]
public class Pvr_UICanvas : MonoBehaviour
{
	[Token(Token = "0x2000608")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD81F8", Offset = "0xBD81F8")]
	private sealed class <CreateDraggablePanel>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 canvasSize;

		[Token(Token = "0x1700034D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600243B")]
			[Address(RVA = "0x1644614", Offset = "0x1644614", VA = "0x1644614", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600243D")]
			[Address(RVA = "0x164467C", Offset = "0x164467C", VA = "0x164467C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002438")]
		[Address(RVA = "0x1643F64", Offset = "0x1643F64", VA = "0x1643F64")]
		[DebuggerHidden]
		public <CreateDraggablePanel>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0x1644278", Offset = "0x1644278", VA = "0x1644278", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0x164427C", Offset = "0x164427C", VA = "0x164427C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x164461C", Offset = "0x164461C", VA = "0x164461C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clickOnPointerCollision;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float autoActivateWithinDistance;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected BoxCollider canvasBoxCollider;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Rigidbody canvasRigidBody;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Coroutine draggablePanelCreation;

	[Token(Token = "0x4000717")]
	protected const string CANVAS_DRAGGABLE_PANEL = "UICANVAS_DRAGGABLE_PANEL";

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x1643AF4", Offset = "0x1643AF4", VA = "0x1643AF4", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x1643B00", Offset = "0x1643B00", VA = "0x1643B00", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x1643B0C", Offset = "0x1643B0C", VA = "0x1643B0C", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x1643B18", Offset = "0x1643B18", VA = "0x1643B18", Slot = "7")]
	protected virtual void SetupCanvas()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x1643ED4", Offset = "0x1643ED4", VA = "0x1643ED4", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE96E4", Offset = "0xBE96E4")]
	protected virtual IEnumerator CreateDraggablePanel(Canvas canvas, Vector2 canvasSize)
	{
		return null;
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x1643F90", Offset = "0x1643F90", VA = "0x1643F90", Slot = "9")]
	protected virtual void RemoveCanvas()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x1644270", Offset = "0x1644270", VA = "0x1644270")]
	public Pvr_UICanvas()
	{
	}
}
[Token(Token = "0x2000104")]
public struct UIDraggableItemEventArgs
{
	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject target;
}
[Token(Token = "0x2000105")]
public delegate void UIDraggableItemEventHandler(object sender, UIDraggableItemEventArgs e);
[Token(Token = "0x2000106")]
public class Pvr_UIDraggableItem : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
{
	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool restrictToDropZone;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool restrictToOriginalCanvas;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveOffset;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject validDropZone;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected RectTransform dragTransform;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector3 startPosition;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Quaternion startRotation;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject startDropZone;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform startParent;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Canvas startCanvas;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected CanvasGroup canvasGroup;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Pvr_InputModule currentInputmodule;

	[Token(Token = "0x14000028")]
	public event UIDraggableItemEventHandler DraggableItemDropped
	{
		[Token(Token = "0x6000755")]
		[Address(RVA = "0x1644684", Offset = "0x1644684", VA = "0x1644684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9748", Offset = "0xBE9748")]
		add
		{
		}
		[Token(Token = "0x6000756")]
		[Address(RVA = "0x1644728", Offset = "0x1644728", VA = "0x1644728")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9758", Offset = "0xBE9758")]
		remove
		{
		}
	}

	[Token(Token = "0x14000029")]
	public event UIDraggableItemEventHandler DraggableItemReset
	{
		[Token(Token = "0x6000757")]
		[Address(RVA = "0x16447CC", Offset = "0x16447CC", VA = "0x16447CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9768", Offset = "0xBE9768")]
		add
		{
		}
		[Token(Token = "0x6000758")]
		[Address(RVA = "0x1644870", Offset = "0x1644870", VA = "0x1644870")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9778", Offset = "0xBE9778")]
		remove
		{
		}
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x1644914", Offset = "0x1644914", VA = "0x1644914", Slot = "7")]
	public virtual void OnDraggableItemDropped(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x1644934", Offset = "0x1644934", VA = "0x1644934", Slot = "8")]
	public virtual void OnDraggableItemReset(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x1644954", Offset = "0x1644954", VA = "0x1644954", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x1644B98", Offset = "0x1644B98", VA = "0x1644B98", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x1644BA4", Offset = "0x1644BA4", VA = "0x1644BA4", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x1645018", Offset = "0x1645018", VA = "0x1645018", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x1645120", Offset = "0x1645120", VA = "0x1645120", Slot = "10")]
	protected virtual Pvr_UIPointer GetPointer()
	{
		return null;
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x16452A4", Offset = "0x16452A4", VA = "0x16452A4", Slot = "11")]
	protected virtual void SetDragPosition(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x1645570", Offset = "0x1645570", VA = "0x1645570", Slot = "12")]
	protected virtual void ResetElement()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x1645620", Offset = "0x1645620", VA = "0x1645620", Slot = "13")]
	protected virtual UIDraggableItemEventArgs SetEventPayload(GameObject target)
	{
		return default(UIDraggableItemEventArgs);
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x1645648", Offset = "0x1645648", VA = "0x1645648")]
	public Pvr_UIDraggableItem()
	{
	}
}
[Token(Token = "0x2000107")]
public class Pvr_UIDropZone : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Pvr_UIDraggableItem droppableItem;

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x164565C", Offset = "0x164565C", VA = "0x164565C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x1645770", Offset = "0x1645770", VA = "0x1645770", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x1645808", Offset = "0x1645808", VA = "0x1645808")]
	public Pvr_UIDropZone()
	{
	}
}
[Token(Token = "0x2000108")]
public class Pvr_UIGraphicRaycaster : GraphicRaycaster
{
	[Serializable]
	[Token(Token = "0x2000609")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8208", Offset = "0xBD8208")]
	private sealed class <>c
	{
		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastResult> <>9__7_0;

		[Token(Token = "0x600243F")]
		[Address(RVA = "0x1646730", Offset = "0x1646730", VA = "0x1646730")]
		public <>c()
		{
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0x1646738", Offset = "0x1646738", VA = "0x1646738")]
		internal int <Raycast>b__7_0(RaycastResult g1, RaycastResult g2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Canvas currentCanvas;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Vector2 lastKnownPosition;

	[Token(Token = "0x400072A")]
	protected const float UI_CONTROL_OFFSET = 1E-05f;

	[NonSerialized]
	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RaycastResult> s_RaycastResults;

	[Token(Token = "0x1700007E")]
	protected virtual Canvas canvas
	{
		[Token(Token = "0x600076B")]
		[Address(RVA = "0x164652C", Offset = "0x164652C", VA = "0x164652C", Slot = "25")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x1645810", Offset = "0x1645810", VA = "0x1645810", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x16459C0", Offset = "0x16459C0", VA = "0x16459C0", Slot = "22")]
	protected virtual void SetNearestRaycast(ref PointerEventData eventData, ref List<RaycastResult> resultAppendList, ref List<RaycastResult> raycastResults)
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x1645C54", Offset = "0x1645C54", VA = "0x1645C54", Slot = "23")]
	protected virtual float GetHitDistance(Ray ray)
	{
		return default(float);
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x1645F74", Offset = "0x1645F74", VA = "0x1645F74", Slot = "24")]
	protected virtual void Raycast(Canvas canvas, Camera eventCamera, Ray ray, ref List<RaycastResult> results)
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x16465E8", Offset = "0x16465E8", VA = "0x16465E8")]
	public Pvr_UIGraphicRaycaster()
	{
	}
}
[Token(Token = "0x2000109")]
public struct UIPointerEventArgs
{
	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isActive;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject currentTarget;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject previousTarget;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RaycastResult raycastResult;
}
[Token(Token = "0x200010A")]
public delegate void UIPointerEventHandler(object sender, UIPointerEventArgs e);
[Token(Token = "0x200010B")]
public class Pvr_UIPointer : MonoBehaviour
{
	[Token(Token = "0x200060A")]
	public enum ClickMethods
	{
		[Token(Token = "0x4001EA0")]
		ClickOnButtonUp,
		[Token(Token = "0x4001EA1")]
		ClickOnButtonDown
	}

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClickMethods clickMethod;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool collisionClick;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[HideInInspector]
	public bool pressToDrag;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject autoActivatingCanvas;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public PointerEventData pointerEventData;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject hoveringElement;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float hoverDurationTimer;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool canClickOnHover;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pointerOriginTransform;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool pointerClicked;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	protected bool beamEnabledState;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	protected bool lastPointerPressState;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	protected bool lastPointerClickState;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected GameObject currentTarget;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected EventSystem cachedEventSystem;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Pvr_InputModule cachedVRInputModule;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform originalPointerOriginTransform;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool TouchBtnValue;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool AppBtnValue;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool TriggerBtnValue;

	[Token(Token = "0x1400002A")]
	public event UIPointerEventHandler UIPointerElementEnter
	{
		[Token(Token = "0x6000772")]
		[Address(RVA = "0x1646748", Offset = "0x1646748", VA = "0x1646748")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9788", Offset = "0xBE9788")]
		add
		{
		}
		[Token(Token = "0x6000773")]
		[Address(RVA = "0x16467EC", Offset = "0x16467EC", VA = "0x16467EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9798", Offset = "0xBE9798")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002B")]
	public event UIPointerEventHandler UIPointerElementExit
	{
		[Token(Token = "0x6000774")]
		[Address(RVA = "0x1646890", Offset = "0x1646890", VA = "0x1646890")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE97A8", Offset = "0xBE97A8")]
		add
		{
		}
		[Token(Token = "0x6000775")]
		[Address(RVA = "0x1646934", Offset = "0x1646934", VA = "0x1646934")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE97B8", Offset = "0xBE97B8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002C")]
	public event UIPointerEventHandler UIPointerElementClick
	{
		[Token(Token = "0x6000776")]
		[Address(RVA = "0x16469D8", Offset = "0x16469D8", VA = "0x16469D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE97C8", Offset = "0xBE97C8")]
		add
		{
		}
		[Token(Token = "0x6000777")]
		[Address(RVA = "0x1646A7C", Offset = "0x1646A7C", VA = "0x1646A7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE97D8", Offset = "0xBE97D8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002D")]
	public event UIPointerEventHandler UIPointerElementDragStart
	{
		[Token(Token = "0x6000778")]
		[Address(RVA = "0x1646B20", Offset = "0x1646B20", VA = "0x1646B20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE97E8", Offset = "0xBE97E8")]
		add
		{
		}
		[Token(Token = "0x6000779")]
		[Address(RVA = "0x1646BC4", Offset = "0x1646BC4", VA = "0x1646BC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE97F8", Offset = "0xBE97F8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002E")]
	public event UIPointerEventHandler UIPointerElementDragEnd
	{
		[Token(Token = "0x600077A")]
		[Address(RVA = "0x1646C68", Offset = "0x1646C68", VA = "0x1646C68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9808", Offset = "0xBE9808")]
		add
		{
		}
		[Token(Token = "0x600077B")]
		[Address(RVA = "0x1646D0C", Offset = "0x1646D0C", VA = "0x1646D0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9818", Offset = "0xBE9818")]
		remove
		{
		}
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x1646DB0", Offset = "0x1646DB0", VA = "0x1646DB0", Slot = "4")]
	public virtual bool PointerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x1646DB8", Offset = "0x1646DB8", VA = "0x1646DB8", Slot = "5")]
	public virtual bool IsSelectionButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x1646E98", Offset = "0x1646E98", VA = "0x1646E98", Slot = "6")]
	public virtual Vector3 GetOriginPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x1646F2C", Offset = "0x1646F2C", VA = "0x1646F2C", Slot = "7")]
	public virtual Vector3 GetOriginForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x1646FC0", Offset = "0x1646FC0", VA = "0x1646FC0", Slot = "8")]
	public virtual bool ValidClick(bool checkLastClick, bool lastClickState = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x1646FDC", Offset = "0x1646FDC", VA = "0x1646FDC", Slot = "9")]
	protected virtual void ResetHoverTimer()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x1646FE8", Offset = "0x1646FE8", VA = "0x1646FE8", Slot = "10")]
	public virtual void OnUIPointerElementEnter(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x16470D0", Offset = "0x16470D0", VA = "0x16470D0", Slot = "11")]
	public virtual void OnUIPointerElementExit(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x164719C", Offset = "0x164719C", VA = "0x164719C", Slot = "12")]
	public virtual void OnUIPointerElementClick(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x1647268", Offset = "0x1647268", VA = "0x1647268", Slot = "13")]
	public virtual void OnUIPointerElementDragStart(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x16472B4", Offset = "0x16472B4", VA = "0x16472B4", Slot = "14")]
	public virtual void OnUIPointerElementDragEnd(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x1647300", Offset = "0x1647300", VA = "0x1647300", Slot = "15")]
	public virtual UIPointerEventArgs SetUIPointerEvent(RaycastResult currentRaycastResult, GameObject currentTarget, [Optional] GameObject lastTarget)
	{
		return default(UIPointerEventArgs);
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x16473C0", Offset = "0x16473C0", VA = "0x16473C0", Slot = "16")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x16473D4", Offset = "0x16473D4", VA = "0x16473D4", Slot = "17")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x1647418", Offset = "0x1647418", VA = "0x1647418", Slot = "18")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x164747C", Offset = "0x164747C", VA = "0x164747C", Slot = "19")]
	protected virtual void ConfigureEventSystem()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x1647654", Offset = "0x1647654", VA = "0x1647654")]
	public Pvr_UIPointer()
	{
	}
}
[Token(Token = "0x200010C")]
[ExecuteInEditMode]
public class Pvr_UnitySDKEditor : MonoBehaviour
{
	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool vrModeEnabled;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float mouseX;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float mouseY;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float mouseZ;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float neckModelScale;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool autoUntiltHead;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 neckOffset;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Matrix4x4 headView;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public Matrix4x4 leftEyeUndistortedProj;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public Matrix4x4 rightEyeUndistortedProj;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public Matrix4x4 leftEyeProj;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public Matrix4x4 rightEyeProj;

	[Token(Token = "0x4000755")]
	private const float TOUCH_TIME_LIMIT = 0.2f;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float touchStartTime;

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x1572BF8", Offset = "0x1572BF8", VA = "0x1572BF8")]
	public Matrix4x4 UndistortedProjection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x1572C1C", Offset = "0x1572C1C", VA = "0x1572C1C")]
	public Matrix4x4 Projection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x1572C40", Offset = "0x1572C40", VA = "0x1572C40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x1572E20", Offset = "0x1572E20", VA = "0x1572E20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x1572C54", Offset = "0x1572C54", VA = "0x1572C54")]
	public void InitEyePara()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x1572D98", Offset = "0x1572D98", VA = "0x1572D98")]
	private void InitEditorSensorPara()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x1573940", Offset = "0x1573940", VA = "0x1573940")]
	public static Matrix4x4 MakeProjection(float l, float t, float r, float b, float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x1573AE4", Offset = "0x1573AE4", VA = "0x1573AE4")]
	public bool UpdateStatesensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x15730E0", Offset = "0x15730E0", VA = "0x15730E0")]
	public void ComputeEyesFromProfile()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x1573F78", Offset = "0x1573F78", VA = "0x1573F78")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x1572EB4", Offset = "0x1572EB4", VA = "0x1572EB4")]
	private void SimulateInput()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x1573888", Offset = "0x1573888", VA = "0x1573888")]
	private void FovAdjust()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x157403C", Offset = "0x157403C", VA = "0x157403C")]
	private Rect RectAdjust(Rect eyeRect)
	{
		return default(Rect);
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x1573AFC", Offset = "0x1573AFC", VA = "0x1573AFC")]
	private void UpdateSimulatedSensor()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x1573574", Offset = "0x1573574", VA = "0x1573574")]
	private void InitForEye(ref Material mat, ref Material mat1)
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x1573F8C", Offset = "0x1573F8C", VA = "0x1573F8C")]
	private void EnableVEmodel()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x15741D8", Offset = "0x15741D8", VA = "0x15741D8")]
	public Pvr_UnitySDKEditor()
	{
	}
}
[Token(Token = "0x200010D")]
public class Pvr_VolumePowerBrightness : MonoBehaviour
{
	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool VolEnable;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool BattEnable;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text showResult;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text setVolumnum;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text setBrightnum;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string MusicPath;

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x1589D10", Offset = "0x1589D10", VA = "0x1589D10")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x1589DE0", Offset = "0x1589DE0", VA = "0x1589DE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x1589E34", Offset = "0x1589E34", VA = "0x1589E34")]
	public void GetMaxVolumeNumber()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x1589ED4", Offset = "0x1589ED4", VA = "0x1589ED4")]
	public void GetCurrentVolumeNumber()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x1589F74", Offset = "0x1589F74", VA = "0x1589F74")]
	public void VolumeUp()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x1589FF8", Offset = "0x1589FF8", VA = "0x1589FF8")]
	public void VolumeDown()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x158A07C", Offset = "0x158A07C", VA = "0x158A07C")]
	public void SetVolumeNum()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x158A194", Offset = "0x158A194", VA = "0x158A194")]
	public void SetBrightness()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x158A2AC", Offset = "0x158A2AC", VA = "0x158A2AC")]
	public void GetCurrentBrightness()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x158A34C", Offset = "0x158A34C", VA = "0x158A34C")]
	public bool setAudio(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x158A3DC", Offset = "0x158A3DC", VA = "0x158A3DC")]
	public bool setBattery(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x1589D78", Offset = "0x1589D78", VA = "0x1589D78")]
	private bool InitBatteryVolClass()
	{
		return default(bool);
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x1589D80", Offset = "0x1589D80", VA = "0x1589D80")]
	private bool StartBatteryReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x1589E2C", Offset = "0x1589E2C", VA = "0x1589E2C")]
	private bool StopBatteryReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x1589DB0", Offset = "0x1589DB0", VA = "0x1589DB0")]
	private bool StartAudioReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x1589E24", Offset = "0x1589E24", VA = "0x1589E24")]
	private bool StopAudioReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x158A46C", Offset = "0x158A46C", VA = "0x158A46C")]
	public Pvr_VolumePowerBrightness()
	{
	}
}
[Token(Token = "0x200010E")]
public class PrefabHierarchyHolder : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200060B")]
	public struct Reference
	{
		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_name;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UnityEngine.Object m_reference;
	}

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Reference> m_references;

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xEE7E14", Offset = "0xEE7E14", VA = "0xEE7E14")]
	public bool Have(string referenceSignature)
	{
		return default(bool);
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xEE7ED0", Offset = "0xEE7ED0", VA = "0xEE7ED0")]
	public UnityEngine.Object Get(string referenceSignature)
	{
		return null;
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xEE7FB4", Offset = "0xEE7FB4", VA = "0xEE7FB4")]
	public PrefabHierarchyHolder()
	{
	}
}
[Token(Token = "0x200010F")]
public class ConvertTestMono : MonoBehaviour
{
	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BoidBankSystem _boidBank;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private JobPathFollowerSystem _followSystem;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private JobMagnetSystem _magnetSystem;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint frameCount;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool magnetized;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool started;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public uint m_numberFrameToWait;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int m_sequenceId;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_curve;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_snake;

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xEDD0FC", Offset = "0xEDD0FC", VA = "0xEDD0FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xEDD2A0", Offset = "0xEDD2A0", VA = "0xEDD2A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xEDD3E0", Offset = "0xEDD3E0", VA = "0xEDD3E0")]
	public void StartConvert(int sequenceId)
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xEDD4E8", Offset = "0xEDD4E8", VA = "0xEDD4E8")]
	public ConvertTestMono()
	{
	}
}
[Token(Token = "0x2000110")]
public class DebugEventsViewer : CacheBehaviour
{
	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameEvent[] m_gameEvents;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntGameEvent[] m_intGameEvents;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string _intValue;

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xF05708", Offset = "0xF05708", VA = "0xF05708")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xF05B40", Offset = "0xF05B40", VA = "0xF05B40")]
	public DebugEventsViewer()
	{
	}
}
[Token(Token = "0x2000111")]
public class MoveShamanSphere : CacheBehaviour
{
	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDB6C8", Offset = "0xBDB6C8")]
	public ObjectArrayGameEvent m_wandInSphere;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ObjectArrayGameEvent m_wandLeaveSphere;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDB700", Offset = "0xBDB700")]
	public UnityAxis1DAction m_rightAction;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UnityAxis1DAction m_leftAction;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDB738", Offset = "0xBDB738")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDB738", Offset = "0xBDB738")]
	public Transform m_rightController;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform m_leftController;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform m_sphereToMove;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool _isRight;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool _updatePos;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	private bool _isInSphere;

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x1549198", Offset = "0x1549198", VA = "0x1549198")]
	private void Start()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x1549278", Offset = "0x1549278", VA = "0x1549278")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x15492DC", Offset = "0x15492DC", VA = "0x15492DC")]
	public void OnWandShamanSphereInteracted(object[] parameters)
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x1549394", Offset = "0x1549394", VA = "0x1549394")]
	public void OnWandShamanSphereLeave(object[] parameters)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x154939C", Offset = "0x154939C", VA = "0x154939C")]
	public void OnRightGripPressed()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x15493B8", Offset = "0x15493B8", VA = "0x15493B8")]
	public void OnRightGripReleased()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x15493C8", Offset = "0x15493C8", VA = "0x15493C8")]
	public void OnLeftGripPressed()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x15493E4", Offset = "0x15493E4", VA = "0x15493E4")]
	public void OnLeftGripReleased()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x15493F8", Offset = "0x15493F8", VA = "0x15493F8")]
	public MoveShamanSphere()
	{
	}
}
[Token(Token = "0x2000112")]
public class AchievementManager : CacheBehaviour
{
	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AchievementProfileData m_achievementProfile;

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x140BEA8", Offset = "0x140BEA8", VA = "0x140BEA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x140BEAC", Offset = "0x140BEAC", VA = "0x140BEAC")]
	private void LocaliseAchievement()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x140C080", Offset = "0x140C080", VA = "0x140C080")]
	public AchievementManager()
	{
	}
}
[Token(Token = "0x2000113")]
public abstract class AchievementBaseData : ScriptableObject
{
	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_unlocked;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite m_illustrationDisabled;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite m_illustrationUnlocked;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public StringVariable m_localisedName;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public StringVariable m_localisedDescription;

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x140BE9C", Offset = "0x140BE9C", VA = "0x140BE9C", Slot = "4")]
	public virtual void Unlock()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x140BEA0", Offset = "0x140BEA0", VA = "0x140BEA0")]
	protected AchievementBaseData()
	{
	}
}
[Token(Token = "0x2000114")]
public class AchievementProfileData : ScriptableObject
{
	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AchievementBaseData> m_achievements;

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x140C088", Offset = "0x140C088", VA = "0x140C088")]
	public AchievementProfileData()
	{
	}
}
[Token(Token = "0x2000115")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBCFF94", Offset = "0xBCFF94")]
public class CountAchievementData : AchievementBaseData
{
	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int m_countGoal;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int m_currentCount;

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xEDD740", Offset = "0xEDD740", VA = "0xEDD740")]
	public CountAchievementData()
	{
	}
}
[Token(Token = "0x2000116")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBCFFD8", Offset = "0xBCFFD8")]
public class SimpleAchievementData : AchievementBaseData
{
	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xF5271C", Offset = "0xF5271C", VA = "0xF5271C")]
	public SimpleAchievementData()
	{
	}
}
[Token(Token = "0x2000117")]
public class FogOverrider : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200060C")]
	public struct SkyboxToFog
	{
		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Material m_skybox;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Color m_fogFirstColor;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color m_fogSecondColor;
	}

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_distance;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color m_defaultFirstFogColor;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color m_defaultSecondFogColor;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<SkyboxToFog> m_skyboxToFogConversion;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer _renderer;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color _firstFogColor;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color _secondFogColor;

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xF1D924", Offset = "0xF1D924", VA = "0xF1D924")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xF1DAD0", Offset = "0xF1DAD0", VA = "0xF1DAD0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xF1DBA0", Offset = "0xF1DBA0", VA = "0xF1DBA0")]
	public FogOverrider()
	{
	}
}
[Token(Token = "0x2000118")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD001C", Offset = "0xBD001C")]
public class MusicBarReader : MonoBehaviour
{
	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloatVariable m_musicBarFloat;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MusicManager _musicManager;

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x154C150", Offset = "0x154C150", VA = "0x154C150")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x154C1B0", Offset = "0x154C1B0", VA = "0x154C1B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x154C1E4", Offset = "0x154C1E4", VA = "0x154C1E4")]
	public MusicBarReader()
	{
	}
}
[Token(Token = "0x2000119")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD0080", Offset = "0xBD0080")]
public class MusicBeatReader : MonoBehaviour
{
	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloatVariable m_musicBeatSyncFloat;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FloatVariable m_musicBarSyncFloat;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntVariable m_musicCurrentBeatInt;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntVariable m_musicBeatInBarInt;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FloatVariable m_musicVolumeFloat;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MusicManager _musicManager;

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x154C1EC", Offset = "0x154C1EC", VA = "0x154C1EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x154C24C", Offset = "0x154C24C", VA = "0x154C24C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x154C31C", Offset = "0x154C31C", VA = "0x154C31C")]
	public MusicBeatReader()
	{
	}
}
[Token(Token = "0x200011A")]
public class CheatEngine : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200060D")]
	public struct EventCheat
	{
		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_name;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameEvent m_event;
	}

	[Serializable]
	[Token(Token = "0x200060E")]
	public struct IntVariableCheat
	{
		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_name;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntVariable m_variable;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_desiredValue;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool m_enabled;
	}

	[Serializable]
	[Token(Token = "0x200060F")]
	public struct FloatVariableCheat
	{
		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_name;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public FloatVariable m_variable;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m_desiredValue;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool m_enabled;
	}

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDB788", Offset = "0xBDB788")]
	public GameObject m_UIEntryPrefab;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDB7C0", Offset = "0xBDB7C0")]
	public Transform m_UIViewportDestination;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDB7F8", Offset = "0xBDB7F8")]
	public List<EventCheat> m_eventCheat;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<IntVariableCheat> m_intVariableCheat;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<FloatVariableCheat> m_floatVariableCheat;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDB830", Offset = "0xBDB830")]
	public GameEvent OnLaserEnable;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameEvent OnLaserDisable;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<GameObject> m_uiEntry;

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xED9788", Offset = "0xED9788", VA = "0xED9788")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xED9924", Offset = "0xED9924", VA = "0xED9924")]
	public void DoCheats()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xED97B4", Offset = "0xED97B4", VA = "0xED97B4")]
	private void GenerateEventCheat()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xED9834", Offset = "0xED9834", VA = "0xED9834")]
	private void GenerateIntVariableCheat()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xED98AC", Offset = "0xED98AC", VA = "0xED98AC")]
	private void GenerateFloatVariableCheat()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xED9AF4", Offset = "0xED9AF4", VA = "0xED9AF4")]
	private void GenerateUIEntry(EventCheat eventCheat)
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xED9C0C", Offset = "0xED9C0C", VA = "0xED9C0C")]
	private void GenerateUIEntry(IntVariableCheat intCheat)
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xED9C10", Offset = "0xED9C10", VA = "0xED9C10")]
	private void GenerateUIEntry(FloatVariableCheat intCheat)
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xED9C14", Offset = "0xED9C14", VA = "0xED9C14")]
	public CheatEngine()
	{
	}
}
[Token(Token = "0x200011B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD00E4", Offset = "0xBD00E4")]
public class CurveHapticsData : ScriptableObject
{
	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve m_intensity;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDB868", Offset = "0xBDB868")]
	public float m_duration;

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xEDDC48", Offset = "0xEDDC48", VA = "0xEDDC48")]
	public CurveHapticsData()
	{
	}
}
[Token(Token = "0x200011C")]
public class FloatVariableHapticsData : MonoBehaviour
{
	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloatVariable m_floatVariable;

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xF1D76C", Offset = "0xF1D76C", VA = "0xF1D76C")]
	public FloatVariableHapticsData()
	{
	}
}
[Token(Token = "0x200011D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD0144", Offset = "0xBD0144")]
public class SimpleHapticsData : ScriptableObject
{
	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDB880", Offset = "0xBDB880")]
	public float m_intensity;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDB898", Offset = "0xBDB898")]
	public float m_duration;

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xF53168", Offset = "0xF53168", VA = "0xF53168")]
	public SimpleHapticsData()
	{
	}
}
[Token(Token = "0x200011E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD01A4", Offset = "0xBD01A4")]
public class SpectrumHapticsData : ScriptableObject
{
	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve m_intensity;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDB8B0", Offset = "0xBDB8B0")]
	public float m_duration;

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xF5BFFC", Offset = "0xF5BFFC", VA = "0xF5BFFC")]
	public SpectrumHapticsData()
	{
	}
}
[Token(Token = "0x200011F")]
public class RewindParticles : MonoBehaviour
{
	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_startTime;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_simulationSpeedScale;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem[] _particleSystems;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] _simulationTimes;

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xE3E37C", Offset = "0xE3E37C", VA = "0xE3E37C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xE3E4AC", Offset = "0xE3E4AC", VA = "0xE3E4AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xE3E418", Offset = "0xE3E418", VA = "0xE3E418")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xE3E794", Offset = "0xE3E794", VA = "0xE3E794")]
	public RewindParticles()
	{
	}
}
[Token(Token = "0x2000120")]
public class SplashScreenAnimator : MonoBehaviour
{
	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator m_animatorToTrigger;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_parameterName;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_timeBeforeEvent;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnSplashScreenFinished;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _parameterHash;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _startTime;

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xF601AC", Offset = "0xF601AC", VA = "0xF601AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xF60258", Offset = "0xF60258", VA = "0xF60258")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xF6029C", Offset = "0xF6029C", VA = "0xF6029C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xF602F0", Offset = "0xF602F0", VA = "0xF602F0")]
	public SplashScreenAnimator()
	{
	}
}
[Token(Token = "0x2000121")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD0204", Offset = "0xBD0204")]
public class LightSoftFlicker : CacheBehaviour
{
	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float minIntensity;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float maxIntensity;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float _random;

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xFA1724", Offset = "0xFA1724", VA = "0xFA1724")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xFA1758", Offset = "0xFA1758", VA = "0xFA1758")]
	private void Update()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xFA1814", Offset = "0xFA1814", VA = "0xFA1814")]
	public LightSoftFlicker()
	{
	}
}
[Token(Token = "0x2000122")]
public class LocalisationManager : CacheBehaviour
{
	[Token(Token = "0x2000610")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8218", Offset = "0xBD8218")]
	private sealed class <>c__DisplayClass31_0
	{
		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string lineName;

		[Token(Token = "0x6002441")]
		[Address(RVA = "0xFA3A4C", Offset = "0xFA3A4C", VA = "0xFA3A4C")]
		public <>c__DisplayClass31_0()
		{
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0xFA44A4", Offset = "0xFA44A4", VA = "0xFA44A4")]
		internal bool <RefreshLocalisedText>b__0(StringVariable x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0xFA44DC", Offset = "0xFA44DC", VA = "0xFA44DC")]
		internal bool <RefreshLocalisedText>b__1(StringVariable x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000611")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8228", Offset = "0xBD8228")]
	private sealed class <>c__DisplayClass31_1
	{
		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string lineName;

		[Token(Token = "0x6002444")]
		[Address(RVA = "0xFA3A54", Offset = "0xFA3A54", VA = "0xFA3A54")]
		public <>c__DisplayClass31_1()
		{
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0xFA4514", Offset = "0xFA4514", VA = "0xFA4514")]
		internal bool <RefreshLocalisedText>b__2(StringVariable x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0xFA454C", Offset = "0xFA454C", VA = "0xFA454C")]
		internal bool <RefreshLocalisedText>b__3(StringVariable x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000612")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8238", Offset = "0xBD8238")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StringVariable lineToTranslate;

		[Token(Token = "0x6002447")]
		[Address(RVA = "0xFA41E0", Offset = "0xFA41E0", VA = "0xFA41E0")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0xFA4584", Offset = "0xFA4584", VA = "0xFA4584")]
		internal bool <Translate>b__0(StringVariable x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000613")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8248", Offset = "0xBD8248")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string lineToTranslate;

		[Token(Token = "0x6002449")]
		[Address(RVA = "0xFA437C", Offset = "0xFA437C", VA = "0xFA437C")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0xFA45D8", Offset = "0xFA45D8", VA = "0xFA45D8")]
		internal bool <Translate>b__0(StringVariable x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LanguageData m_currentLanguage;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static TMP_FontAsset m_normalFont;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static TMP_FontAsset m_titleFont;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDB8C8", Offset = "0xBDB8C8")]
	public StringCollection m_normalFonts;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public StringCollection m_titleFonts;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDB900", Offset = "0xBDB900")]
	public LanguageData m_chinese;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LanguageData m_english;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public LanguageData m_french;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public LanguageData m_german;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public LanguageData m_italian;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public LanguageData m_japanese;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public LanguageData m_korean;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public LanguageData m_polish;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public LanguageData m_portugese;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public LanguageData m_russian;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public LanguageData m_spanish;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<TextMeshProLocalisationInjector> _textMeshPro3DToLocalise;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static List<TextMeshProUGUILocalisationInjector> _textMeshProUGUIToLocalise;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static StringCollection _normalFonts;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static StringCollection _titleFonts;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public int _fontCount;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static bool _ready;

	[Token(Token = "0x1700007F")]
	public static bool ready
	{
		[Token(Token = "0x6000804")]
		[Address(RVA = "0xFA4384", Offset = "0xFA4384", VA = "0xFA4384")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xFA22C8", Offset = "0xFA22C8", VA = "0xFA22C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xFA2380", Offset = "0xFA2380", VA = "0xFA2380")]
	private void Update()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xFA2A68", Offset = "0xFA2A68", VA = "0xFA2A68")]
	private void SwitchToChinese()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xFA2A70", Offset = "0xFA2A70", VA = "0xFA2A70")]
	private void SwitchToEnglish()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xFA2A78", Offset = "0xFA2A78", VA = "0xFA2A78")]
	private void SwitchToFrench()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xFA2A80", Offset = "0xFA2A80", VA = "0xFA2A80")]
	private void SwitchToGerman()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xFA2A88", Offset = "0xFA2A88", VA = "0xFA2A88")]
	private void SwitchToItalian()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xFA2A90", Offset = "0xFA2A90", VA = "0xFA2A90")]
	private void SwitchToJapanese()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xFA2A98", Offset = "0xFA2A98", VA = "0xFA2A98")]
	private void SwitchToKorean()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xFA2AA0", Offset = "0xFA2AA0", VA = "0xFA2AA0")]
	private void SwitchToPolish()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xFA2AA8", Offset = "0xFA2AA8", VA = "0xFA2AA8")]
	private void SwitchToPortuguese()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xFA2AB0", Offset = "0xFA2AB0", VA = "0xFA2AB0")]
	private void SwitchToRussian()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xFA2AB8", Offset = "0xFA2AB8", VA = "0xFA2AB8")]
	private void SwitchToSpanish()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xFA2388", Offset = "0xFA2388", VA = "0xFA2388")]
	public void SwitchLanguage(LanguageData languageData)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xFA3394", Offset = "0xFA3394", VA = "0xFA3394")]
	private void OnFontLoaded(AsyncOperationHandle<TMP_FontAsset> obj)
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xFA2AC0", Offset = "0xFA2AC0", VA = "0xFA2AC0")]
	public void RefreshLocalisedText()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xFA3A5C", Offset = "0xFA3A5C", VA = "0xFA3A5C")]
	public static void Register(TextMeshProLocalisationInjector TMproLocalised)
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xFA3C4C", Offset = "0xFA3C4C", VA = "0xFA3C4C")]
	public static TMP_FontAsset GetFont(TMP_FontAsset font)
	{
		return null;
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xFA3D20", Offset = "0xFA3D20", VA = "0xFA3D20")]
	public static TMP_FontAsset GetFont(bool title)
	{
		return null;
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xFA3DB4", Offset = "0xFA3DB4", VA = "0xFA3DB4")]
	public static void Unregister(TextMeshProLocalisationInjector TMProLocalised)
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xFA3E84", Offset = "0xFA3E84", VA = "0xFA3E84")]
	public static void Register(TextMeshProUGUILocalisationInjector TMproLocalised)
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xFA3F54", Offset = "0xFA3F54", VA = "0xFA3F54")]
	public static void Unregister(TextMeshProUGUILocalisationInjector TMProLocalised)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xFA4024", Offset = "0xFA4024", VA = "0xFA4024")]
	public static StringVariable Translate(StringVariable lineToTranslate)
	{
		return null;
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xFA41E8", Offset = "0xFA41E8", VA = "0xFA41E8")]
	public static StringVariable Translate(string lineToTranslate)
	{
		return null;
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xFA43EC", Offset = "0xFA43EC", VA = "0xFA43EC")]
	public LocalisationManager()
	{
	}
}
[Token(Token = "0x2000123")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD0268", Offset = "0xBD0268")]
public class LanguageData : ScriptableObject
{
	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Font m_font;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_FontAsset m_fontNormal;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_FontAsset m_fontTitle;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_identifier;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<StringVariable> m_lines;

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xF9BE4C", Offset = "0xF9BE4C", VA = "0xF9BE4C")]
	public LanguageData()
	{
	}
}
[Token(Token = "0x2000124")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD0278", Offset = "0xBD0278")]
public class TextMeshProLocalisationInjector : CacheBehaviour
{
	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public StringVariable m_lineToInject;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _isUGUI;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool _isTitleFont;

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xF68FE8", Offset = "0xF68FE8", VA = "0xF68FE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xF690E0", Offset = "0xF690E0", VA = "0xF690E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xF696D8", Offset = "0xF696D8", VA = "0xF696D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xF697A4", Offset = "0xF697A4", VA = "0xF697A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xF69814", Offset = "0xF69814", VA = "0xF69814")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xF6987C", Offset = "0xF6987C", VA = "0xF6987C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xF692AC", Offset = "0xF692AC", VA = "0xF692AC")]
	public void Refresh(StringVariable localisedLine)
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xF693C0", Offset = "0xF693C0", VA = "0xF693C0")]
	public void Inject()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xF698E4", Offset = "0xF698E4", VA = "0xF698E4")]
	public void ClearLineToInject()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xF69948", Offset = "0xF69948", VA = "0xF69948")]
	public void SetIsTitleFont(bool value)
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xF69954", Offset = "0xF69954", VA = "0xF69954")]
	public TMP_FontAsset GetFont()
	{
		return null;
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xF69978", Offset = "0xF69978", VA = "0xF69978")]
	public TextMeshProLocalisationInjector()
	{
	}
}
[Token(Token = "0x2000125")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD02DC", Offset = "0xBD02DC")]
public class TextMeshProUGUILocalisationInjector : CacheBehaviour
{
	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public StringVariable m_lineToInject;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _is3DText;

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xF69980", Offset = "0xF69980", VA = "0xF69980")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xF69A18", Offset = "0xF69A18", VA = "0xF69A18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xF69D60", Offset = "0xF69D60", VA = "0xF69D60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xF69DC8", Offset = "0xF69DC8", VA = "0xF69DC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xF69E30", Offset = "0xF69E30", VA = "0xF69E30")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xF69B20", Offset = "0xF69B20", VA = "0xF69B20")]
	public void Refresh(StringVariable localisedLine)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xF69BD8", Offset = "0xF69BD8", VA = "0xF69BD8")]
	public void Inject()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xF69E98", Offset = "0xF69E98", VA = "0xF69E98")]
	public TextMeshProUGUILocalisationInjector()
	{
	}
}
[Token(Token = "0x2000126")]
public class ConversationCharacter : CacheBehaviour
{
	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float m_speedOfFade;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private List<SpriteRenderer> _renderers;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _isAppearing;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private float _currentCharacterFade;

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xEDAEF8", Offset = "0xEDAEF8", VA = "0xEDAEF8")]
	public void Enter()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xEDAF04", Offset = "0xEDAF04", VA = "0xEDAF04")]
	public void Leave()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xEDB000", Offset = "0xEDB000", VA = "0xEDB000")]
	private void Awake()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xEDB074", Offset = "0xEDB074", VA = "0xEDB074")]
	private void Update()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xEDB134", Offset = "0xEDB134", VA = "0xEDB134")]
	private void UpdateGraphics()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xEDB004", Offset = "0xEDB004", VA = "0xEDB004")]
	private void PopulateRenderers()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xEDB24C", Offset = "0xEDB24C", VA = "0xEDB24C")]
	private void CleanRenderers()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xEDB2BC", Offset = "0xEDB2BC", VA = "0xEDB2BC")]
	public ConversationCharacter()
	{
	}
}
[Token(Token = "0x2000127")]
public class ConversationCreator : CacheBehaviour
{
	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject m_prefabConversation;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ConversationCollection m_conversationsData;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameEvent m_conversationFinished;

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xEDB2C4", Offset = "0xEDB2C4", VA = "0xEDB2C4")]
	public void CreateRandomConversation()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xEDB430", Offset = "0xEDB430", VA = "0xEDB430")]
	public ConversationCreator()
	{
	}
}
[Token(Token = "0x2000128")]
public class ConversationManager : CacheBehaviour
{
	[Serializable]
	[Token(Token = "0x2000614")]
	private struct CurrentLine
	{
		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int m_index;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBE72B0", Offset = "0xBE72B0")]
		public SheetData m_sheet;
	}

	[Serializable]
	[Token(Token = "0x2000615")]
	private class CurrentScene
	{
		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CurrentLine m_currentLine;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterPack m_leftCharacter;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CharacterPack m_rightCharacter;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBE72E8", Offset = "0xBE72E8")]
		public CharacterPack m_centerCharacter;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject m_nameInstance;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject m_backgroundInstance;

		[Token(Token = "0x600244B")]
		[Address(RVA = "0xEDD0D0", Offset = "0xEDD0D0", VA = "0xEDD0D0")]
		public CurrentScene()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000616")]
	public struct CharacterPack
	{
		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CharacterData m_characterData;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject m_characterInstance;
	}

	[Token(Token = "0x2000617")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8258", Offset = "0xBD8258")]
	private sealed class <SpawnCharacterName>d__17 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConversationManager <>4__this;

		[Token(Token = "0x1700034F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600244F")]
			[Address(RVA = "0xEDCCA4", Offset = "0xEDCCA4", VA = "0xEDCCA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000350")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002451")]
			[Address(RVA = "0xEDCD0C", Offset = "0xEDCD0C", VA = "0xEDCD0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0xEDC590", Offset = "0xEDC590", VA = "0xEDC590")]
		[DebuggerHidden]
		public <SpawnCharacterName>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0xEDC850", Offset = "0xEDC850", VA = "0xEDC850", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0xEDC854", Offset = "0xEDC854", VA = "0xEDC854", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0xEDCCAC", Offset = "0xEDCCAC", VA = "0xEDCCAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000618")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8268", Offset = "0xBD8268")]
	private sealed class <SpawnLocalisedLine>d__19 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConversationManager <>4__this;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text <textMesh>5__2;

		[Token(Token = "0x17000351")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002455")]
			[Address(RVA = "0xEDD004", Offset = "0xEDD004", VA = "0xEDD004", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000352")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002457")]
			[Address(RVA = "0xEDD06C", Offset = "0xEDD06C", VA = "0xEDD06C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0xEDC5BC", Offset = "0xEDC5BC", VA = "0xEDC5BC")]
		[DebuggerHidden]
		public <SpawnLocalisedLine>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0xEDCD70", Offset = "0xEDCD70", VA = "0xEDCD70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0xEDCD74", Offset = "0xEDCD74", VA = "0xEDCD74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0xEDD00C", Offset = "0xEDD00C", VA = "0xEDD00C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000619")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8278", Offset = "0xBD8278")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string characterName;

		[Token(Token = "0x6002458")]
		[Address(RVA = "0xEDC7B0", Offset = "0xEDC7B0", VA = "0xEDC7B0")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0xEDC7F8", Offset = "0xEDC7F8", VA = "0xEDC7F8")]
		internal bool <GetCharacterPrefabFrom>b__0(CharacterData character)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float m_timeBeforeShowingCharacterName;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float m_timeBeforeShowingCharacterDialog;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<SheetDataEvent> m_conversationTriggers;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameEvent OnConversationFinished;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDB958", Offset = "0xBDB958")]
	public RosterData _roster;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDB994", Offset = "0xBDB994")]
	public ConversationData m_conversation;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDB9D0", Offset = "0xBDB9D0")]
	private PrefabHierarchyHolder _prefabHierarchy;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private TMP_Text _textDialog;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private CurrentScene _currentScene;

	[Token(Token = "0x40007D9")]
	private const string PREFAB_HIERARCHY_MAIN_TEXT = "TextDialog";

	[Token(Token = "0x40007DA")]
	private const string PREFAB_HIERARCY_CHARACTER_LEFT_SLOT = "CharacterLeftSlot";

	[Token(Token = "0x40007DB")]
	private const string PREFAB_HIERARCY_CHARACTER_RIGHT_SLOT = "CharacterRightSlot";

	[Token(Token = "0x40007DC")]
	private const string PREFAB_HIERARCHY_CHARACTER_CENTER_SLOT = "CharacterCenterSlot";

	[Token(Token = "0x40007DD")]
	private const string STAGE_DIRECTION_ENTER_LEFT = "EnterLeft";

	[Token(Token = "0x40007DE")]
	private const string STAGE_DIRECTION_ENTER_RIGHT = "EnterRight";

	[Token(Token = "0x40007DF")]
	private const string SHEET_COLUMN_CHARACTER = "Character";

	[Token(Token = "0x40007E0")]
	private const string SHEET_COLUMN_STAGE_DIRECTION_1 = "Stage_Direction1";

	[Token(Token = "0x17000080")]
	public List<SheetData> Conversation
	{
		[Token(Token = "0x6000826")]
		[Address(RVA = "0xEDB4B4", Offset = "0xEDB4B4", VA = "0xEDB4B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000827")]
		[Address(RVA = "0xEDB4D0", Offset = "0xEDB4D0", VA = "0xEDB4D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public List<CharacterData> Roster
	{
		[Token(Token = "0x6000828")]
		[Address(RVA = "0xEDB4EC", Offset = "0xEDB4EC", VA = "0xEDB4EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000829")]
		[Address(RVA = "0xEDB508", Offset = "0xEDB508", VA = "0xEDB508")]
		set
		{
		}
	}

	[Token(Token = "0x17000082")]
	private SheetData CurrentLineSheet
	{
		[Token(Token = "0x6000838")]
		[Address(RVA = "0xEDB6E8", Offset = "0xEDB6E8", VA = "0xEDB6E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000839")]
		[Address(RVA = "0xEDC7D4", Offset = "0xEDC7D4", VA = "0xEDC7D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000083")]
	private int CurrentLineIndex
	{
		[Token(Token = "0x600083A")]
		[Address(RVA = "0xEDB884", Offset = "0xEDB884", VA = "0xEDB884")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600083B")]
		[Address(RVA = "0xEDC7B8", Offset = "0xEDC7B8", VA = "0xEDC7B8")]
		set
		{
		}
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xEDB40C", Offset = "0xEDB40C", VA = "0xEDB40C")]
	public void Begin()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xEDB524", Offset = "0xEDB524", VA = "0xEDB524")]
	public void GoToNextLine()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xEDB548", Offset = "0xEDB548", VA = "0xEDB548")]
	private void IncrementLineNumberOrFinishConversation()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xEDB650", Offset = "0xEDB650", VA = "0xEDB650")]
	private void SpawnLine()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xEDB8A0", Offset = "0xEDB8A0", VA = "0xEDB8A0")]
	private void SpawnCharacterFromStageDirection()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xEDBF78", Offset = "0xEDBF78", VA = "0xEDBF78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE9828", Offset = "0xBE9828")]
	private IEnumerator<float> SpawnCharacterName()
	{
		return null;
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xEDBFF4", Offset = "0xEDBFF4", VA = "0xEDBFF4")]
	private void SpawnCharacterTextBackground()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xEDC350", Offset = "0xEDC350", VA = "0xEDC350")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE988C", Offset = "0xBE988C")]
	private IEnumerator<float> SpawnLocalisedLine()
	{
		return null;
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xEDC3CC", Offset = "0xEDC3CC", VA = "0xEDC3CC")]
	private void SpawnButtons()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xEDC5E8", Offset = "0xEDC5E8", VA = "0xEDC5E8")]
	private void GenerateEventFlowFromReferencedConversation()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xEDC720", Offset = "0xEDC720", VA = "0xEDC720")]
	private void FinishConversation()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xEDC4A4", Offset = "0xEDC4A4", VA = "0xEDC4A4")]
	private GameObject GetCharacterSlotFrom(string stageDirection)
	{
		return null;
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xEDC3D0", Offset = "0xEDC3D0", VA = "0xEDC3D0")]
	private CharacterData GetCharacterPrefabFrom(string characterName)
	{
		return null;
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xEDB704", Offset = "0xEDB704", VA = "0xEDB704")]
	private void SetLineTo(int lineNumber)
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xEDC7F0", Offset = "0xEDC7F0", VA = "0xEDC7F0")]
	public ConversationManager()
	{
	}
}
[Token(Token = "0x2000129")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD0340", Offset = "0xBD0340")]
public class CharacterData : ScriptableObject
{
	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_name;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_character;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_background;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_nameBackground;

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xED9780", Offset = "0xED9780", VA = "0xED9780")]
	public CharacterData()
	{
	}
}
[Token(Token = "0x200012A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD03A0", Offset = "0xBD03A0")]
public class ConversationData : ScriptableObject
{
	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SheetData> m_conversation;

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xEDB438", Offset = "0xEDB438", VA = "0xEDB438")]
	public ConversationData()
	{
	}
}
[Token(Token = "0x200012B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD0400", Offset = "0xBD0400")]
public class RosterData : ScriptableObject
{
	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<CharacterData> m_roster;

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xE405C4", Offset = "0xE405C4", VA = "0xE405C4")]
	public RosterData()
	{
	}
}
[Token(Token = "0x200012C")]
public class SheetData : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200061A")]
	public struct SpreadsheetEntry
	{
		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBE7320", Offset = "0xBE7320")]
		public string m_column;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string m_value;
	}

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SpreadsheetEntry> m_entries;

	[Token(Token = "0x17000084")]
	public string FirstLineName
	{
		[Token(Token = "0x6000840")]
		[Address(RVA = "0xE4F3D4", Offset = "0xE4F3D4", VA = "0xE4F3D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000085")]
	public string ConversationName
	{
		[Token(Token = "0x6000841")]
		[Address(RVA = "0xE4F58C", Offset = "0xE4F58C", VA = "0xE4F58C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xE4F6D0", Offset = "0xE4F6D0", VA = "0xE4F6D0")]
	public bool Have(string columnName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xE4F78C", Offset = "0xE4F78C", VA = "0xE4F78C")]
	public string Get(string columnName)
	{
		return null;
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xE4F874", Offset = "0xE4F874", VA = "0xE4F874")]
	public string GetIfExist(string columnName)
	{
		return null;
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xE4F4E8", Offset = "0xE4F4E8", VA = "0xE4F4E8")]
	private string[] GetSplitedName()
	{
		return null;
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xE4F958", Offset = "0xE4F958", VA = "0xE4F958")]
	public SheetData()
	{
	}
}
[Token(Token = "0x200012D")]
public class SpreadSheetData : ScriptableObject
{
	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SheetData> m_lines;

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xF60A50", Offset = "0xF60A50", VA = "0xF60A50")]
	public SpreadSheetData()
	{
	}
}
[Token(Token = "0x200012E")]
public class TextSegmentData : MonoBehaviour
{
	[Token(Token = "0x6000848")]
	[Address(RVA = "0xF69EA0", Offset = "0xF69EA0", VA = "0xF69EA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xF69EA4", Offset = "0xF69EA4", VA = "0xF69EA4")]
	private void Update()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xF69EA8", Offset = "0xF69EA8", VA = "0xF69EA8")]
	public TextSegmentData()
	{
	}
}
[Serializable]
[Token(Token = "0x200012F")]
public struct SheetDataEvent
{
	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SheetData m_line;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public UnityEvent OnLineBegin;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UnityEvent OnLineDisplayed;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnLineSkipped;
}
[Token(Token = "0x2000130")]
public class OculusManager : CacheBehaviour
{
	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBA1C", Offset = "0xBDBA1C")]
	public OculusCredential m_oculusCredentialQuest;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public OculusCredential m_oculusCredentialPC;

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x10C1248", Offset = "0x10C1248", VA = "0x10C1248")]
	public OculusManager()
	{
	}
}
[Token(Token = "0x2000131")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD0460", Offset = "0xBD0460")]
public class OculusCredential : ScriptableObject
{
	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_appId;

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x10C1240", Offset = "0x10C1240", VA = "0x10C1240")]
	public OculusCredential()
	{
	}
}
[Token(Token = "0x2000132")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD04A4", Offset = "0xBD04A4")]
public class ParticleLookAtWorldOrigin : MonoBehaviour
{
	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBA54", Offset = "0xBDBA54")]
	public bool m_useDebugRotation;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 m_debugRotation;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem _particleSystem;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.Particle[] _particles;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _worldOrigin;

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x136EBF4", Offset = "0x136EBF4", VA = "0x136EBF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x136EC48", Offset = "0x136EC48", VA = "0x136EC48")]
	private void Initialize()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x136ED74", Offset = "0x136ED74", VA = "0x136ED74")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x136EEE4", Offset = "0x136EEE4", VA = "0x136EEE4")]
	public ParticleLookAtWorldOrigin()
	{
	}
}
[Token(Token = "0x2000133")]
public class VRSDKPositionSwitcher : CacheBehaviour
{
	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBA8C", Offset = "0xBDBA8C")]
	public Vector3 m_positionForOculus;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBAC4", Offset = "0xBDBAC4")]
	public Vector3 m_positionForOpenVR;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBAFC", Offset = "0xBDBAFC")]
	public Vector3 m_positionForPS4;

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xF785EC", Offset = "0xF785EC", VA = "0xF785EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xF786F8", Offset = "0xF786F8", VA = "0xF786F8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xF78814", Offset = "0xF78814", VA = "0xF78814")]
	private void SwitchToOculus()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xF7886C", Offset = "0xF7886C", VA = "0xF7886C")]
	private void SwitchToOpenVR()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xF788C4", Offset = "0xF788C4", VA = "0xF788C4")]
	private void SwitchToPS4()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xF788C8", Offset = "0xF788C8", VA = "0xF788C8")]
	public VRSDKPositionSwitcher()
	{
	}
}
[Token(Token = "0x2000134")]
public class VRSDKRotationSwitcher : CacheBehaviour
{
	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBB34", Offset = "0xBDBB34")]
	public Vector3 m_rotationForOculus;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBB6C", Offset = "0xBDBB6C")]
	public Vector3 m_rotationForOpenVR;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBBA4", Offset = "0xBDBBA4")]
	public Vector3 m_rotationForPS4;

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xF788D0", Offset = "0xF788D0", VA = "0xF788D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xF78AB4", Offset = "0xF78AB4", VA = "0xF78AB4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xF78BD0", Offset = "0xF78BD0", VA = "0xF78BD0")]
	private void SwitchToOculus()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xF78C28", Offset = "0xF78C28", VA = "0xF78C28")]
	private void SwitchToOpenVR()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xF78C80", Offset = "0xF78C80", VA = "0xF78C80")]
	private void SwitchToPS4()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xF78C84", Offset = "0xF78C84", VA = "0xF78C84")]
	public VRSDKRotationSwitcher()
	{
	}
}
[Token(Token = "0x2000135")]
public class SkyboxRotator : MonoBehaviour
{
	[Token(Token = "0x600085D")]
	[Address(RVA = "0xF545D0", Offset = "0xF545D0", VA = "0xF545D0")]
	private void Start()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xF546B4", Offset = "0xF546B4", VA = "0xF546B4")]
	public SkyboxRotator()
	{
	}
}
[Token(Token = "0x2000136")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD0518", Offset = "0xBD0518")]
public class SteamCredentialData : ScriptableObject
{
	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint m_applicationID;

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xF610E4", Offset = "0xF610E4", VA = "0xF610E4")]
	public SteamCredentialData()
	{
	}
}
[Token(Token = "0x2000137")]
public class SteamManager : CacheBehaviour
{
	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SteamCredentialData m_steamCredentialData;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string m_playerName;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ulong m_playerSteamId;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public string m_playerLanguage;

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xF610EC", Offset = "0xF610EC", VA = "0xF610EC")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x2000138")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD055C", Offset = "0xBD055C")]
public class VivePortCredential : ScriptableObject
{
	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_vivePortId;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_vivePortKey;

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xF794E8", Offset = "0xF794E8", VA = "0xF794E8")]
	public VivePortCredential()
	{
	}
}
[Token(Token = "0x2000139")]
public class VivePortManager : CacheBehaviour
{
	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBBDC", Offset = "0xBDBBDC")]
	public VivePortCredential m_vivePortCredential;

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xF794F0", Offset = "0xF794F0", VA = "0xF794F0")]
	public VivePortManager()
	{
	}
}
[Token(Token = "0x200013A")]
public class SpawnObjectInCircle : MonoBehaviour
{
	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> m_objectsToSpawn;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_centerOfSpawnCircle;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_radiusOfCircle;

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xF5B92C", Offset = "0xF5B92C", VA = "0xF5B92C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xF5B930", Offset = "0xF5B930", VA = "0xF5B930")]
	private void Spawn()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xF5BB80", Offset = "0xF5BB80", VA = "0xF5BB80")]
	private Vector3 RandomCircle(Vector3 center, float radius, float angle)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xF5BC3C", Offset = "0xF5BC3C", VA = "0xF5BC3C")]
	public SpawnObjectInCircle()
	{
	}
}
[Token(Token = "0x200013B")]
public class ArrowInteractor : MonoBehaviour
{
	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_tag;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_handTag;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_axisName;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BoolVariable m_handInGesture;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ObjectArrayUnityEvent OnArrowPickedUp;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObjectUnityEvent OnHandGestureStarted;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObjectUnityEvent OnAbortGesture;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public IntUnityEvent OnArrowNavPickedUp;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public WandDataVariable m_wand;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_arrowMagnet;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_shamanSphere;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_arrowLookAt;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject m_hitEffect;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] m_shamanSphereDeformable;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float m_deformationFactorMax;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float m_deformationMinDistance;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float m_deformationMaxDistance;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float m_distanceToReachForCompleteArrow;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObjectUnityEvent OnSpellChosen;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObjectVariable m_currentCurve;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public FloatVariable m_currentDistanceBetweenArrowAndHand;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public FloatVariable m_crystalSelected;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public BoolVariable m_arrowSelected;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float m_fallOfRatio;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public StringUnityEvent OnActivateHand;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public SpellDataVariable m_handSpell;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GameObject _arrow;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public MagnetDeformer _currentMagnetDeformer;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool _selected;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	private bool _completed;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject _fakeCrystal;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Transform _shamanSphereTransform;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 _crystalSnapShotPosition;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Quaternion _crystalSnapShotRotation;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private GameObject _crystal;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private GameObjectHolder _currentHolder;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int _picoHandIndex;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private bool _grabbed;

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x1125C04", Offset = "0x1125C04", VA = "0x1125C04")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x1125DB4", Offset = "0x1125DB4", VA = "0x1125DB4")]
	public void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x112651C", Offset = "0x112651C", VA = "0x112651C")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x1126688", Offset = "0x1126688", VA = "0x1126688")]
	private void Awake()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x1126714", Offset = "0x1126714", VA = "0x1126714")]
	public void Update()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x1126B18", Offset = "0x1126B18", VA = "0x1126B18")]
	public void DestroyFakeCrystal()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x1126B1C", Offset = "0x1126B1C", VA = "0x1126B1C")]
	public static Vector3 GetClampedPoint(Vector3 center, Vector3 objectToFollow, float radius)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x11267D4", Offset = "0x11267D4", VA = "0x11267D4")]
	private bool A()
	{
		return default(bool);
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x1126880", Offset = "0x1126880", VA = "0x1126880")]
	private void B()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x112695C", Offset = "0x112695C", VA = "0x112695C")]
	private void C()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x1126BFC", Offset = "0x1126BFC", VA = "0x1126BFC")]
	private bool D(Transform arrowTransform)
	{
		return default(bool);
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x1126DFC", Offset = "0x1126DFC", VA = "0x1126DFC")]
	private void E()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x1126FEC", Offset = "0x1126FEC", VA = "0x1126FEC")]
	private void F()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x112716C", Offset = "0x112716C", VA = "0x112716C")]
	private bool G(float arrowSphereDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x1127268", Offset = "0x1127268", VA = "0x1127268")]
	private void H()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x11273A4", Offset = "0x11273A4", VA = "0x11273A4")]
	private void I()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x112751C", Offset = "0x112751C", VA = "0x112751C")]
	private void J()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x11276A4", Offset = "0x11276A4", VA = "0x11276A4")]
	private void K()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x1127800", Offset = "0x1127800", VA = "0x1127800")]
	private void L(GameObject hitEffect)
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x1127974", Offset = "0x1127974", VA = "0x1127974")]
	private void NavArrowSnap()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x1127A90", Offset = "0x1127A90", VA = "0x1127A90")]
	private void SpellArrowSnap()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x1127B70", Offset = "0x1127B70", VA = "0x1127B70")]
	private void O()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x1127CA4", Offset = "0x1127CA4", VA = "0x1127CA4")]
	public ArrowInteractor()
	{
	}
}
[Token(Token = "0x200013C")]
public class DotInteractor : MonoBehaviour
{
	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VelocityTracker m_velocity;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_magnitudeTreshold;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_dotImpact;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_multipleDotImpact;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObjectVariable m_currentCurve;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public IntUnityEvent OnDotHit;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObjectUnityEvent OnNewSegmentTouched;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObjectUnityEvent OnGestureFinished;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string m_axisName;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string m_handtag;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _dotOrderIndex;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int _numberOfDots;

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xF14FF0", Offset = "0xF14FF0", VA = "0xF14FF0")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xF15348", Offset = "0xF15348", VA = "0xF15348")]
	public void Update()
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xF150C0", Offset = "0xF150C0", VA = "0xF150C0")]
	public void DestroyDot(Collider other)
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xF1538C", Offset = "0xF1538C", VA = "0xF1538C")]
	public void OnTriggerReleased()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xF15394", Offset = "0xF15394", VA = "0xF15394")]
	public DotInteractor()
	{
	}
}
[Token(Token = "0x200013D")]
public class DotManager : MonoBehaviour
{
	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_inOrder;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_order;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_hp;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_axisName;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_handTag;

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xF1539C", Offset = "0xF1539C", VA = "0xF1539C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xF15438", Offset = "0xF15438", VA = "0xF15438")]
	public DotManager()
	{
	}
}
[Token(Token = "0x200013E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD05A0", Offset = "0xBD05A0")]
public class GalaxyData : ScriptableObject
{
	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_galaxyId;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_galaxyName;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_empty;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<SolarSystemData> m_solarSystems;

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xF1DDF8", Offset = "0xF1DDF8", VA = "0xF1DDF8")]
	public void RegenerateGalaxy()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xF1DE04", Offset = "0xF1DE04", VA = "0xF1DE04")]
	public GalaxyData()
	{
	}
}
[Token(Token = "0x200013F")]
public static class MeshExtension
{
	[Serializable]
	[Token(Token = "0x200061B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8288", Offset = "0xBD8288")]
	private sealed class <>c
	{
		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<float, float> <>9__0_0;

		[Token(Token = "0x600245B")]
		[Address(RVA = "0xFAD618", Offset = "0xFAD618", VA = "0xFAD618")]
		public <>c()
		{
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0xFAD620", Offset = "0xFAD620", VA = "0xFAD620")]
		internal float <PointIsWithinBoundingSphere>b__0_0(float vector)
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xFAD218", Offset = "0xFAD218", VA = "0xFAD218")]
	public static bool PointIsWithinBoundingSphere(this Mesh mesh, Vector3 point)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000140")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD0610", Offset = "0xBD0610")]
public class PlanetData : ScriptableObject
{
	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_prefabPlanet;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_prefabPlanetString;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RecipeData m_recipe;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_type;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_boss;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string m_generatedPath;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool m_regenerated;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 m_mapPosition;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion m_mapRotation;

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xEE4194", Offset = "0xEE4194", VA = "0xEE4194")]
	public PlanetData()
	{
	}
}
[Token(Token = "0x2000141")]
public class ProceduralManager : CacheBehaviour
{
	[Token(Token = "0x200061C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8298", Offset = "0xBD8298")]
	private sealed class <StartProceduralRoutine>d__50 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProceduralManager <>4__this;

		[Token(Token = "0x17000353")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002460")]
			[Address(RVA = "0xEEF310", Offset = "0xEEF310", VA = "0xEEF310", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000354")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002462")]
			[Address(RVA = "0xEEF378", Offset = "0xEEF378", VA = "0xEEF378", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0xEE812C", Offset = "0xEE812C", VA = "0xEE812C")]
		[DebuggerHidden]
		public <StartProceduralRoutine>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0xEEF000", Offset = "0xEEF000", VA = "0xEEF000", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0xEEF004", Offset = "0xEEF004", VA = "0xEEF004", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0xEEF318", Offset = "0xEEF318", VA = "0xEEF318", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200061D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD82A8", Offset = "0xBD82A8")]
	private sealed class <>c__DisplayClass53_0
	{
		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SolarSystemData solarSystem;

		[Token(Token = "0x6002463")]
		[Address(RVA = "0xEED9C8", Offset = "0xEED9C8", VA = "0xEED9C8")]
		public <>c__DisplayClass53_0()
		{
		}

		[Token(Token = "0x6002464")]
		[Address(RVA = "0xEED9D0", Offset = "0xEED9D0", VA = "0xEED9D0")]
		internal bool <CreateGalaxy>b__1(PlanetData x)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x200061E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD82B8", Offset = "0xBD82B8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__53_0;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__54_2;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__54_3;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__54_4;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__54_5;

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__54_6;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Predicate<SheetData> <>9__54_0;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__54_7;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__54_8;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Predicate<SheetData> <>9__54_1;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__55_0;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__56_0;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__56_1;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__56_2;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__56_3;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__57_0;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__57_1;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__57_2;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__57_3;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__57_4;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__57_5;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__59_2;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__59_0;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__59_1;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__63_0;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__63_1;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__64_0;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__64_2;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__66_2;

		[Token(Token = "0x6002466")]
		[Address(RVA = "0xEECDF0", Offset = "0xEECDF0", VA = "0xEECDF0")]
		public <>c()
		{
		}

		[Token(Token = "0x6002467")]
		[Address(RVA = "0xEECDF8", Offset = "0xEECDF8", VA = "0xEECDF8")]
		internal bool <CreateGalaxy>b__53_0(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0xEECE4C", Offset = "0xEECE4C", VA = "0xEECE4C")]
		internal bool <CreateSolarSystem>b__54_2(SheetData.SpreadsheetEntry y)
		{
			return default(bool);
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0xEECEA0", Offset = "0xEECEA0", VA = "0xEECEA0")]
		internal bool <CreateSolarSystem>b__54_3(SheetData.SpreadsheetEntry y)
		{
			return default(bool);
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0xEECEF4", Offset = "0xEECEF4", VA = "0xEECEF4")]
		internal bool <CreateSolarSystem>b__54_4(SheetData.SpreadsheetEntry y)
		{
			return default(bool);
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0xEECF48", Offset = "0xEECF48", VA = "0xEECF48")]
		internal bool <CreateSolarSystem>b__54_5(SheetData.SpreadsheetEntry y)
		{
			return default(bool);
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0xEECF9C", Offset = "0xEECF9C", VA = "0xEECF9C")]
		internal bool <CreateSolarSystem>b__54_0(SheetData x)
		{
			return default(bool);
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0xEED0B4", Offset = "0xEED0B4", VA = "0xEED0B4")]
		internal bool <CreateSolarSystem>b__54_6(SheetData.SpreadsheetEntry y)
		{
			return default(bool);
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0xEED108", Offset = "0xEED108", VA = "0xEED108")]
		internal bool <CreateSolarSystem>b__54_1(SheetData x)
		{
			return default(bool);
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0xEED2E4", Offset = "0xEED2E4", VA = "0xEED2E4")]
		internal bool <CreateSolarSystem>b__54_7(SheetData.SpreadsheetEntry y)
		{
			return default(bool);
		}

		[Token(Token = "0x6002470")]
		[Address(RVA = "0xEED338", Offset = "0xEED338", VA = "0xEED338")]
		internal bool <CreateSolarSystem>b__54_8(SheetData.SpreadsheetEntry y)
		{
			return default(bool);
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0xEED38C", Offset = "0xEED38C", VA = "0xEED38C")]
		internal bool <CreatePlanet>b__55_0(SheetData.SpreadsheetEntry y)
		{
			return default(bool);
		}

		[Token(Token = "0x6002472")]
		[Address(RVA = "0xEED3E0", Offset = "0xEED3E0", VA = "0xEED3E0")]
		internal bool <CreateRecipe>b__56_0(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0xEED434", Offset = "0xEED434", VA = "0xEED434")]
		internal bool <CreateRecipe>b__56_1(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0xEED488", Offset = "0xEED488", VA = "0xEED488")]
		internal bool <CreateRecipe>b__56_2(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0xEED4DC", Offset = "0xEED4DC", VA = "0xEED4DC")]
		internal bool <CreateRecipe>b__56_3(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0xEED530", Offset = "0xEED530", VA = "0xEED530")]
		internal bool <CreateRecipeData>b__57_0(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0xEED584", Offset = "0xEED584", VA = "0xEED584")]
		internal bool <CreateRecipeData>b__57_1(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0xEED5D8", Offset = "0xEED5D8", VA = "0xEED5D8")]
		internal bool <CreateRecipeData>b__57_2(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0xEED62C", Offset = "0xEED62C", VA = "0xEED62C")]
		internal bool <CreateRecipeData>b__57_3(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0xEED680", Offset = "0xEED680", VA = "0xEED680")]
		internal bool <CreateRecipeData>b__57_4(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0xEED6D4", Offset = "0xEED6D4", VA = "0xEED6D4")]
		internal bool <CreateRecipeData>b__57_5(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x600247C")]
		[Address(RVA = "0xEED728", Offset = "0xEED728", VA = "0xEED728")]
		internal bool <CreateMoonWithPlanetData>b__59_2(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x600247D")]
		[Address(RVA = "0xEED77C", Offset = "0xEED77C", VA = "0xEED77C")]
		internal bool <CreateMoonWithPlanetData>b__59_0(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0xEED7D0", Offset = "0xEED7D0", VA = "0xEED7D0")]
		internal bool <CreateMoonWithPlanetData>b__59_1(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0xEED824", Offset = "0xEED824", VA = "0xEED824")]
		internal bool <GetRandomRate>b__63_0(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0xEED878", Offset = "0xEED878", VA = "0xEED878")]
		internal bool <GetRandomRate>b__63_1(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0xEED8CC", Offset = "0xEED8CC", VA = "0xEED8CC")]
		internal bool <FindPossibleRemainingPlanet>b__64_0(SheetData.SpreadsheetEntry y)
		{
			return default(bool);
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0xEED920", Offset = "0xEED920", VA = "0xEED920")]
		internal bool <FindPossibleRemainingPlanet>b__64_2(SheetData.SpreadsheetEntry y)
		{
			return default(bool);
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0xEED974", Offset = "0xEED974", VA = "0xEED974")]
		internal bool <RaiseDifficulty>b__66_2(SheetData.SpreadsheetEntry y)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200061F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD82C8", Offset = "0xBD82C8")]
	private sealed class <CreateGalaxy>d__53 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProceduralManager <>4__this;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass53_0 <>8__1;

		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GalaxyData <galaxyData>5__2;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<SheetData> <jsons>5__3;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__4;

		[Token(Token = "0x17000355")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002487")]
			[Address(RVA = "0xEEE424", Offset = "0xEEE424", VA = "0xEEE424", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000356")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002489")]
			[Address(RVA = "0xEEE48C", Offset = "0xEEE48C", VA = "0xEEE48C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0xEE8B10", Offset = "0xEE8B10", VA = "0xEE8B10")]
		[DebuggerHidden]
		public <CreateGalaxy>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0xEEDB8C", Offset = "0xEEDB8C", VA = "0xEEDB8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0xEEDB90", Offset = "0xEEDB90", VA = "0xEEDB90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0xEEE42C", Offset = "0xEEE42C", VA = "0xEEE42C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000620")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD82D8", Offset = "0xBD82D8")]
	private sealed class <CreateSolarSystem>d__54 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProceduralManager <>4__this;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SolarSystemData solarSystem;

		[Token(Token = "0x17000357")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600248D")]
			[Address(RVA = "0xEEEF34", Offset = "0xEEEF34", VA = "0xEEEF34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000358")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600248F")]
			[Address(RVA = "0xEEEF9C", Offset = "0xEEEF9C", VA = "0xEEEF9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0xEE8BD4", Offset = "0xEE8BD4", VA = "0xEE8BD4")]
		[DebuggerHidden]
		public <CreateSolarSystem>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0xEEE4F0", Offset = "0xEEE4F0", VA = "0xEEE4F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0xEEE4F4", Offset = "0xEEE4F4", VA = "0xEEE4F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0xEEEF3C", Offset = "0xEEEF3C", VA = "0xEEEF3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000621")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD82E8", Offset = "0xBD82E8")]
	private sealed class <>c__DisplayClass55_0
	{
		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string planettype;

		[Token(Token = "0x6002490")]
		[Address(RVA = "0xEE92AC", Offset = "0xEE92AC", VA = "0xEE92AC")]
		public <>c__DisplayClass55_0()
		{
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0xEEDA80", Offset = "0xEEDA80", VA = "0xEEDA80")]
		internal bool <CreatePlanet>b__1(PlanetData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000622")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD82F8", Offset = "0xBD82F8")]
	private sealed class <>c__DisplayClass57_0
	{
		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string worldPrefabStr;

		[Token(Token = "0x6002492")]
		[Address(RVA = "0xEEB2D0", Offset = "0xEEB2D0", VA = "0xEEB2D0")]
		public <>c__DisplayClass57_0()
		{
		}

		[Token(Token = "0x6002493")]
		[Address(RVA = "0xEEDAAC", Offset = "0xEEDAAC", VA = "0xEEDAAC")]
		internal bool <CreateRecipeData>b__6(GameObject x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000623")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8308", Offset = "0xBD8308")]
	private sealed class <>c__DisplayClass57_1
	{
		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string nameEnum;

		[Token(Token = "0x6002494")]
		[Address(RVA = "0xEEB2D8", Offset = "0xEEB2D8", VA = "0xEEB2D8")]
		public <>c__DisplayClass57_1()
		{
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0xEEDAE4", Offset = "0xEEDAE4", VA = "0xEEDAE4")]
		internal bool <CreateRecipeData>b__7(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000624")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8318", Offset = "0xBD8318")]
	private sealed class <>c__DisplayClass61_0
	{
		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fieldToCheck;

		[Token(Token = "0x6002496")]
		[Address(RVA = "0xEEB83C", Offset = "0xEEB83C", VA = "0xEEB83C")]
		public <>c__DisplayClass61_0()
		{
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0xEEDB54", Offset = "0xEEDB54", VA = "0xEEDB54")]
		internal bool <GetMultiIntValue>b__0(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000625")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8328", Offset = "0xBD8328")]
	private sealed class <>c__DisplayClass64_0
	{
		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string planettype;

		[Token(Token = "0x6002498")]
		[Address(RVA = "0xEEBAD0", Offset = "0xEEBAD0", VA = "0xEEBAD0")]
		public <>c__DisplayClass64_0()
		{
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0xEEDB68", Offset = "0xEEDB68", VA = "0xEEDB68")]
		internal bool <FindPossibleRemainingPlanet>b__1(PlanetData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBC14", Offset = "0xBDBC14")]
	public IntVariable m_difficulty;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBC4C", Offset = "0xBDBC4C")]
	public SpreadsheetDataVariable m_diffSpreadsheet;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBC84", Offset = "0xBDBC84")]
	public SpreadsheetDataVariable m_galaxySpreadsheet;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBCBC", Offset = "0xBDBCBC")]
	public SpreadsheetDataCollection m_systemSolarSpreadsheets;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBCF4", Offset = "0xBDBCF4")]
	public SpreadsheetDataVariable m_levelRecipeSpreadsheet;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBD2C", Offset = "0xBDBD2C")]
	public SpreadsheetDataVariable m_moonSpreadsheet;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBD64", Offset = "0xBDBD64")]
	public IntVariable m_galaxyId;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBD9C", Offset = "0xBDBD9C")]
	public bool m_generateGalaxy;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDBDD4", Offset = "0xBDBDD4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBDD4", Offset = "0xBDBDD4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBDD4", Offset = "0xBDBDD4")]
	public GalaxyDataVariable m_galaxyDataHolder;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBE48", Offset = "0xBDBE48")]
	public SolarSystemCollection m_solarSystemDataHolder;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBE80", Offset = "0xBDBE80")]
	public GameObjectCollection m_allPlanetsCollection;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBEB8", Offset = "0xBDBEB8")]
	public GameObjectCollection m_prefabWorlds;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBEF0", Offset = "0xBDBEF0")]
	public MoonDataCollection m_moonDatas;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBF28", Offset = "0xBDBF28")]
	public SolarSystemVariable m_currentSolarSystem;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public IntVariable m_currentSolarSystemId;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public int m_maxMoonNumber;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBF60", Offset = "0xBDBF60")]
	public GameModeTypeVariable m_gameModeVariable;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBF98", Offset = "0xBDBF98")]
	public BoolVariable m_isNewGameVariable;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public BoolVariable m_skipTutoVariable;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public BoolVariable m_combatTutoVariable;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public BoolVariable m_cradleTutoVariable;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public BoolVariable m_firstTimeShopVariable;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDBFD0", Offset = "0xBDBFD0")]
	public IntVariable m_numberOfSystems;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public IntVariable m_numberOfPlanetsToReveal;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public IntVariable m_numberOfLevelFinished;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC008", Offset = "0xBDC008")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDC008", Offset = "0xBDC008")]
	public UnityEvent OnNewSolarSystem;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public UnityEvent OnGameFinish;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public IntUnityEvent OnFirstPlanetPicked;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public IntUnityEvent OnRecipeGenerated;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public UnityEvent OnProceduralCreated;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public BoolVariable m_bossRevealed;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC058", Offset = "0xBDC058")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDC058", Offset = "0xBDC058")]
	public IntVariable m_currentAzote;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public IntVariable m_currentCarbon;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public IntVariable m_currentPhosphorus;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public IntVariable m_currentSulfur;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public IntVariable m_currentWater;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDC0A8", Offset = "0xBDC0A8")]
	public IntVariable m_neededAzote;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public IntVariable m_neededCarbon;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public IntVariable m_neededPhosphorus;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public IntVariable m_neededSulfur;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public IntVariable m_neededWater;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDC0BC", Offset = "0xBDC0BC")]
	public FloatVariable m_percentAzote;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public FloatVariable m_percentCarbon;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public FloatVariable m_percentPhosphorus;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public FloatVariable m_percentSulfur;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public FloatVariable m_percentWater;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDC0D0", Offset = "0xBDC0D0")]
	public IntVariable m_currentNumberOfMoons;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public IntVariable m_currentNumberOfPlanets;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public IntVariable m_currentNumberOfMoonsRegen;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private int _allocatedPoints;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private List<PlanetData> _firstPlanets;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private List<PlanetData> _tutoPlanets;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private bool _planetFetched;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private Dictionary<string, List<SheetData>> _moonsByElement;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private string[] _moonElementsToHave;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private int _countAzote;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	private int _countCarbon;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private int _countPhosphorus;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	private int _countSulfur;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private int _countWater;

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xEE7FBC", Offset = "0xEE7FBC", VA = "0xEE7FBC")]
	public void StartProcedural()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xEE80B0", Offset = "0xEE80B0", VA = "0xEE80B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE9900", Offset = "0xBE9900")]
	private IEnumerator<float> StartProceduralRoutine()
	{
		return null;
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xEE8158", Offset = "0xEE8158", VA = "0xEE8158")]
	public void RefreshNeededElementsCount()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xEE82A0", Offset = "0xEE82A0", VA = "0xEE82A0")]
	public void GetNextSolarSystem()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xEE8A94", Offset = "0xEE8A94", VA = "0xEE8A94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE9964", Offset = "0xBE9964")]
	public IEnumerator<float> CreateGalaxy()
	{
		return null;
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xEE8B3C", Offset = "0xEE8B3C", VA = "0xEE8B3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE99C8", Offset = "0xBE99C8")]
	public IEnumerator<float> CreateSolarSystem(SolarSystemData solarSystem)
	{
		return null;
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xEE8C00", Offset = "0xEE8C00", VA = "0xEE8C00")]
	public void CreatePlanet(int min, SheetData jsonPlanet, SolarSystemData solarSystem, Dictionary<string, List<SheetData>> recipesByType)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xEE92B4", Offset = "0xEE92B4", VA = "0xEE92B4")]
	public void CreateRecipe(PlanetData planet, SolarSystemData solarSystem, string path, int index, Dictionary<string, List<SheetData>> recipesByType)
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xEE9F58", Offset = "0xEE9F58", VA = "0xEE9F58")]
	public void CreateRecipeData(RecipeData recipeData, SheetData recipe)
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xEEB2E0", Offset = "0xEEB2E0", VA = "0xEEB2E0")]
	public void CreateMoon(int instanceId)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xEEA788", Offset = "0xEEA788", VA = "0xEEA788")]
	private void CreateMoonWithPlanetData(PlanetData planetData, SolarSystemData solarSystem)
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xEEB69C", Offset = "0xEEB69C", VA = "0xEEB69C")]
	public int GetMultiIntValue(JSONObject json, int checkVariable, string fieldToCheck)
	{
		return default(int);
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xEE9A6C", Offset = "0xEE9A6C", VA = "0xEE9A6C")]
	public int GetMultiIntValue(SheetData json, int checkVariable, string fieldToCheck)
	{
		return default(int);
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xEEB2E4", Offset = "0xEEB2E4", VA = "0xEEB2E4")]
	public JSONObject GetRandomRate(List<JSONObject> jsonList)
	{
		return null;
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xEE9C8C", Offset = "0xEE9C8C", VA = "0xEE9C8C")]
	public SheetData GetRandomRate(List<SheetData> jsonList)
	{
		return null;
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xEEB844", Offset = "0xEEB844", VA = "0xEEB844")]
	public SheetData FindPossibleRemainingPlanet(SolarSystemData solarSystem, SheetData planet)
	{
		return null;
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xEEBAD8", Offset = "0xEEBAD8", VA = "0xEEBAD8")]
	public void LoadCurrentSystem()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xEE85A8", Offset = "0xEE85A8", VA = "0xEE85A8")]
	public void RaiseDifficulty()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xEEC11C", Offset = "0xEEC11C", VA = "0xEEC11C")]
	public void OnFirstPlanet()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xEEC348", Offset = "0xEEC348", VA = "0xEEC348")]
	public void OnFirstTuto()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xEEB460", Offset = "0xEEB460", VA = "0xEEB460")]
	private MoonData GetMoonData(string moonName)
	{
		return null;
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xEEC570", Offset = "0xEEC570", VA = "0xEEC570")]
	private MoonElement GetMoonElementFromString(string str)
	{
		return default(MoonElement);
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xEEB52C", Offset = "0xEEB52C", VA = "0xEEB52C")]
	private void AddToMaxVariableDependingOnElement(MoonElement elmt, ref SolarSystemData solarSystem)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xEEC6B8", Offset = "0xEEC6B8", VA = "0xEEC6B8")]
	private void ResetElementsCount(SolarSystemData solarSystem)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xEEC850", Offset = "0xEEC850", VA = "0xEEC850")]
	public void OnAllMoonTyped()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xEEC854", Offset = "0xEEC854", VA = "0xEEC854")]
	private void SetNeededCount(IntVariable maxVariable, int allCount, FloatVariable percent)
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xEEBF4C", Offset = "0xEEBF4C", VA = "0xEEBF4C")]
	private void CalculateAnalyticsVariables()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xEEC010", Offset = "0xEEC010", VA = "0xEEC010")]
	private void CalculateAnalyticsTotalOfMoonsRegen()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xEEC898", Offset = "0xEEC898", VA = "0xEEC898")]
	private int CalculateCountOfNeeded(int allCount, FloatVariable percent)
	{
		return default(int);
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xEEC990", Offset = "0xEEC990", VA = "0xEEC990")]
	private void CalculateNeededForSystem(SolarSystemData solarSystem)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xEECA68", Offset = "0xEECA68", VA = "0xEECA68")]
	private void CreateDirectoryIfNotExists(string path)
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xEECAAC", Offset = "0xEECAAC", VA = "0xEECAAC")]
	private void CreateAssetIfNotExists(string path, string name, ScriptableObject data)
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xEECAB0", Offset = "0xEECAB0", VA = "0xEECAB0")]
	public ProceduralManager()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xEECB94", Offset = "0xEECB94", VA = "0xEECB94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9A2C", Offset = "0xBE9A2C")]
	private bool <RaiseDifficulty>b__66_0(SheetData x)
	{
		return default(bool);
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xEECCE8", Offset = "0xEECCE8", VA = "0xEECCE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9A3C", Offset = "0xBE9A3C")]
	private bool <RaiseDifficulty>b__66_1(SheetData.SpreadsheetEntry x)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000142")]
public class SolarSystemData : ScriptableObject
{
	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_galaxyId;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_solarSystemId;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_numberRevealBoss;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_currentPlanetIndex;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_planetCount;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<PlanetData> m_planetDatas;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<PlanetData> m_tutoPlanets;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int m_azoteCountInSystem;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int m_carbonCountInSystem;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_phosphorusCountInSystem;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int m_sulfurCountInSystem;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int m_waterCountInSystem;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int m_azoteNeeded;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int m_carbonNeeded;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int m_phosphorusNeeded;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int m_sulfurNeeded;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int m_waterNeeded;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool m_mapgenerated;

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xF58374", Offset = "0xF58374", VA = "0xF58374")]
	public SolarSystemData()
	{
	}
}
[Token(Token = "0x2000143")]
public class ActivateGameObject : MonoBehaviour
{
	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_deactivateMode;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_useLabel;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool m_useParentTransformForFX;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool m_worldPosStays;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool m_useExternalGameObject;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_gameObjectToActivate;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Label m_gameObjectToActivateLabel;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_fxToInstantiate;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Label m_fxLabelSpawner;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_launchOnEnable;

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x140F5E0", Offset = "0x140F5E0", VA = "0x140F5E0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x140F5F0", Offset = "0x140F5F0", VA = "0x140F5F0")]
	public void Activate()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x140F8E4", Offset = "0x140F8E4", VA = "0x140F8E4")]
	public ActivateGameObject()
	{
	}
}
[Token(Token = "0x2000144")]
public class AmmoBehaviourImpact : AmmoBehaviour
{
	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float m_velocityTreshold;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Vector3Variable m_leftControllerVelocity;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Vector3Variable m_rightControllerVelocity;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public LayerMask m_acceptedLayers;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public UnityEvent OnLeftAmmoImpact;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public UnityEvent OnRightAmmoImpact;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3Variable _usedVelocity;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool _canImpact;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector3 _velocity;

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x111B734", Offset = "0x111B734", VA = "0x111B734")]
	private new void Start()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x111B738", Offset = "0x111B738", VA = "0x111B738", Slot = "4")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x111B938", Offset = "0x111B938", VA = "0x111B938")]
	public void SetInfo()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x111B9C4", Offset = "0x111B9C4", VA = "0x111B9C4")]
	public void Update()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x111BA34", Offset = "0x111BA34", VA = "0x111BA34")]
	public AmmoBehaviourImpact()
	{
	}
}
[Token(Token = "0x2000145")]
public class AnimatorBoolSetter : MonoBehaviour
{
	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_setTarget;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator m_animator;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator animator;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string lastStateName;

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x111E954", Offset = "0x111E954", VA = "0x111E954")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x111E9C4", Offset = "0x111E9C4", VA = "0x111E9C4")]
	public void SetParameter(string p_parameterName)
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x111EA38", Offset = "0x111EA38", VA = "0x111EA38")]
	public AnimatorBoolSetter()
	{
	}
}
[Token(Token = "0x2000146")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD0670", Offset = "0xBD0670")]
public class AudioToHapticsBaker : MonoBehaviour
{
	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpectrumHapticsData m_output;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_timeBetweenBakeInMilliseconds;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float[] m_samples;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float[] m_frequencyBand;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FFTWindow m_FFTWindow;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int m_frequencyToBake;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource _audioSource;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _timeSinceLastBake;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _baking;

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xECCFC0", Offset = "0xECCFC0", VA = "0xECCFC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xECD020", Offset = "0xECD020", VA = "0xECD020")]
	private void Update()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xECD278", Offset = "0xECD278", VA = "0xECD278")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xECD3B0", Offset = "0xECD3B0", VA = "0xECD3B0")]
	private void Bake()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xECD460", Offset = "0xECD460", VA = "0xECD460")]
	public AudioToHapticsBaker()
	{
	}
}
[Token(Token = "0x2000147")]
public class BossDifficultyManager : MonoBehaviour
{
	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> m_bossSprites;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> m_difficultySprites;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntVariable m_planetsToReveal;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntVariable m_planetsRevealed;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public IntVariable m_difficulty;

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xED1A60", Offset = "0xED1A60", VA = "0xED1A60")]
	public void CalculateBossBar()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xED1C24", Offset = "0xED1C24", VA = "0xED1C24")]
	public void DisplayDifficulty()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xED1B88", Offset = "0xED1B88", VA = "0xED1B88")]
	public void ResetBossBar()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xED1CE0", Offset = "0xED1CE0", VA = "0xED1CE0")]
	public void ResetDifficultyBar()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xED1D88", Offset = "0xED1D88", VA = "0xED1D88")]
	public BossDifficultyManager()
	{
	}
}
[Token(Token = "0x2000148")]
public class Calculator : MonoBehaviour
{
	[Token(Token = "0x2000626")]
	public enum OPERATOR
	{
		[Token(Token = "0x4001EFE")]
		PLUS,
		[Token(Token = "0x4001EFF")]
		MINUS,
		[Token(Token = "0x4001F00")]
		MULTIPLY,
		[Token(Token = "0x4001F01")]
		DIVIDE,
		[Token(Token = "0x4001F02")]
		MODULO
	}

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_isValueFromEvent;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BaseVariable m_valueA;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OPERATOR m_operator;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool m_useBConstant;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BaseVariable m_valueB;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int m_valueBInt;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool m_noWriteOutputValue;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BaseVariable m_writeOutputValue;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FloatUnityEvent OnCalculatorFloatOutput;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public IntUnityEvent OnCalculatorIntOutput;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent OnEndOfCalculator;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool m_launchOnEnable;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool _started;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _tValueA;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _tValueB;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _valueType;

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xED70F4", Offset = "0xED70F4", VA = "0xED70F4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xED7104", Offset = "0xED7104", VA = "0xED7104")]
	public void DetermineValueType()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xED77D0", Offset = "0xED77D0", VA = "0xED77D0")]
	public void SetIntValueA(int p_value)
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xED77DC", Offset = "0xED77DC", VA = "0xED77DC")]
	public void SetFloatValueA(float p_value)
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xED77E4", Offset = "0xED77E4", VA = "0xED77E4")]
	public void Calculate()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xED75DC", Offset = "0xED75DC", VA = "0xED75DC")]
	private void PrivateCalculate()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xED77E8", Offset = "0xED77E8", VA = "0xED77E8")]
	public Calculator()
	{
	}
}
[Token(Token = "0x2000149")]
public class CollectionWasher : MonoBehaviour
{
	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<BaseCollection> m_collections;

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xEDA3C0", Offset = "0xEDA3C0", VA = "0xEDA3C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xEDA4D0", Offset = "0xEDA4D0", VA = "0xEDA4D0")]
	public CollectionWasher()
	{
	}
}
[Token(Token = "0x200014A")]
public class CooldownManager : MonoBehaviour
{
	[Token(Token = "0x2000627")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8338", Offset = "0xBD8338")]
	private sealed class <>c__DisplayClass0_0
	{
		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x600249A")]
		[Address(RVA = "0xEDD6F8", Offset = "0xEDD6F8", VA = "0xEDD6F8")]
		public <>c__DisplayClass0_0()
		{
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0xEDD708", Offset = "0xEDD708", VA = "0xEDD708")]
		internal bool <OnCooldownStarted>b__0(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xEDD504", Offset = "0xEDD504", VA = "0xEDD504")]
	public void OnCooldownStarted(object[] parameters)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xEDD700", Offset = "0xEDD700", VA = "0xEDD700")]
	public CooldownManager()
	{
	}
}
[Token(Token = "0x200014B")]
public class DataHolder : MonoBehaviour
{
	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScriptableObject m_data;

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xF05658", Offset = "0xF05658", VA = "0xF05658")]
	public DataHolder()
	{
	}
}
[Token(Token = "0x200014C")]
public class DeactivateAfterDelay : MonoBehaviour
{
	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_timer;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnDeactivatedEvent;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _timer;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _enabled;

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xF05660", Offset = "0xF05660", VA = "0xF05660")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xF05674", Offset = "0xF05674", VA = "0xF05674")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xF0567C", Offset = "0xF0567C", VA = "0xF0567C")]
	public void Update()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xF05700", Offset = "0xF05700", VA = "0xF05700")]
	public DeactivateAfterDelay()
	{
	}
}
[Token(Token = "0x200014D")]
public class DestroyAfterDelay : MonoBehaviour
{
	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_destroyDelay;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_objectToDestroy;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnDestroyEvent;

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xF0A2E8", Offset = "0xF0A2E8", VA = "0xF0A2E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xF0A3F0", Offset = "0xF0A3F0", VA = "0xF0A3F0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xF0A40C", Offset = "0xF0A40C", VA = "0xF0A40C")]
	public DestroyAfterDelay()
	{
	}
}
[Token(Token = "0x200014E")]
public class DotDamage : MonoBehaviour
{
	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DestroyObjectOnTriggerEnter m_enemyHpManager;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_intervalDotDamage;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_damageDot;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_fxOnDot;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Label m_fxSpawn;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnDot;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool m_increaseDamages;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public float m_ratioDamages;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float _intervalDotDamage;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected bool _init;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected List<GameObject> _fxs;

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xF1477C", Offset = "0xF1477C", VA = "0xF1477C")]
	public void Update()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xF14A10", Offset = "0xF14A10", VA = "0xF14A10", Slot = "4")]
	public virtual void Init(object[] parameters)
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xF14BC8", Offset = "0xF14BC8", VA = "0xF14BC8", Slot = "5")]
	public virtual void Init(float intervalDot, int damage, [Optional] GameObject fxOnDot)
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xF14CB8", Offset = "0xF14CB8", VA = "0xF14CB8", Slot = "6")]
	public virtual void StopDotDamage()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xF14DCC", Offset = "0xF14DCC", VA = "0xF14DCC")]
	public DotDamage()
	{
	}
}
[Token(Token = "0x200014F")]
public class DotDamagePlayer : DotDamage
{
	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PlayerManager m_playerHPManager;

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xF14EB4", Offset = "0xF14EB4", VA = "0xF14EB4")]
	public new void Update()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xF14FEC", Offset = "0xF14FEC", VA = "0xF14FEC")]
	public DotDamagePlayer()
	{
	}
}
[Token(Token = "0x2000150")]
public class ElementalPerkManager : CacheBehaviour
{
	[Token(Token = "0x2000628")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8348", Offset = "0xBD8348")]
	private sealed class <UltimateSpellActivationRoutine>d__8 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ElementalPerkManager <>4__this;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WandDataVariable wandData;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <ultimateFeedbackText>5__2;

		[Token(Token = "0x17000359")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600249F")]
			[Address(RVA = "0xF1A19C", Offset = "0xF1A19C", VA = "0xF1A19C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700035A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024A1")]
			[Address(RVA = "0xF1A204", Offset = "0xF1A204", VA = "0xF1A204", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0xF19D38", Offset = "0xF19D38", VA = "0xF19D38")]
		[DebuggerHidden]
		public <UltimateSpellActivationRoutine>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0xF19D70", Offset = "0xF19D70", VA = "0xF19D70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0xF19D74", Offset = "0xF19D74", VA = "0xF19D74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0xF1A1A4", Offset = "0xF1A1A4", VA = "0xF1A1A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC104", Offset = "0xBDC104")]
	public List<WandDataVariable> m_wands;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC13C", Offset = "0xBDC13C")]
	public GameObject m_ultimateSpellText;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject m_shamanSphere;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC174", Offset = "0xBDC174")]
	public MoonData m_debugMoon;

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xF195F4", Offset = "0xF195F4", VA = "0xF195F4")]
	public void OnPlanetRegenerated(int instanceId)
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xF19C5C", Offset = "0xF19C5C", VA = "0xF19C5C")]
	public void Update()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xF19C9C", Offset = "0xF19C9C", VA = "0xF19C9C")]
	public void CheckElementalHearts(int instanceId)
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xF196E0", Offset = "0xF196E0", VA = "0xF196E0")]
	public void CheckElementalSpell(MoonData moon)
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xF19CA0", Offset = "0xF19CA0", VA = "0xF19CA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE9A4C", Offset = "0xBE9A4C")]
	public IEnumerator<float> UltimateSpellActivationRoutine(WandDataVariable wandData)
	{
		return null;
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xF19D64", Offset = "0xF19D64", VA = "0xF19D64")]
	public void CheckElementalPowers(int instanceId)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xF19D68", Offset = "0xF19D68", VA = "0xF19D68")]
	public ElementalPerkManager()
	{
	}
}
[Token(Token = "0x2000151")]
public class EventHolder : MonoBehaviour
{
	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameEventBase m_event;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_raiseEventOnStart;

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xF1AC3C", Offset = "0xF1AC3C", VA = "0xF1AC3C")]
	public void Start()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xF1AC64", Offset = "0xF1AC64", VA = "0xF1AC64")]
	public EventHolder()
	{
	}
}
[Token(Token = "0x2000152")]
public class EventLauncher : MonoBehaviour
{
	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnEventLaunch;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_launchOnEnable;

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xF1AC6C", Offset = "0xF1AC6C", VA = "0xF1AC6C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xF1AC94", Offset = "0xF1AC94", VA = "0xF1AC94")]
	public void OnLevelStarted()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xF1ACB0", Offset = "0xF1ACB0", VA = "0xF1ACB0")]
	public EventLauncher()
	{
	}
}
[Token(Token = "0x2000153")]
public class EventStarter : MonoBehaviour
{
	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnEventStart;

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xF1ACB8", Offset = "0xF1ACB8", VA = "0xF1ACB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xF1ACD4", Offset = "0xF1ACD4", VA = "0xF1ACD4")]
	public EventStarter()
	{
	}
}
[Token(Token = "0x2000154")]
public class FloatVariableComparer : MonoBehaviour
{
	[Token(Token = "0x2000629")]
	public enum OPERATOR
	{
		[Token(Token = "0x4001F0A")]
		EQUALS,
		[Token(Token = "0x4001F0B")]
		SUPERIOR,
		[Token(Token = "0x4001F0C")]
		INFERIOR,
		[Token(Token = "0x4001F0D")]
		SUPERIOREQUALS,
		[Token(Token = "0x4001F0E")]
		INFERIOREQUALS,
		[Token(Token = "0x4001F0F")]
		DIFFERENT
	}

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_useInt;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_useConstantA;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool m_useConstantB;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FloatVariable m_floatA;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntVariable m_intA;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_floatConstantA;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int m_intConstantA;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OPERATOR m_operator;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FloatVariable m_floatB;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntVariable m_intB;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_floatConstantB;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int m_intConstantB;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent OnComparisonSuccess;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent OnComparisonFailed;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool m_launchOnEnable;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _floatValueA;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _floatValueB;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int _intValueA;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int _intValueB;

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xF1D548", Offset = "0xF1D548", VA = "0xF1D548")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xF1D558", Offset = "0xF1D558", VA = "0xF1D558")]
	public void Compare()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xF1D754", Offset = "0xF1D754", VA = "0xF1D754")]
	public void SetIntConstantA(int constantA)
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xF1D75C", Offset = "0xF1D75C", VA = "0xF1D75C")]
	public void SetIntConstantB(int constantB)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xF1D764", Offset = "0xF1D764", VA = "0xF1D764")]
	public FloatVariableComparer()
	{
	}
}
[Token(Token = "0x2000155")]
public class HandManager : MonoBehaviour
{
	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> m_hands;

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xF230AC", Offset = "0xF230AC", VA = "0xF230AC")]
	public void Activatehand(string tag)
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xF231F4", Offset = "0xF231F4", VA = "0xF231F4")]
	public HandManager()
	{
	}
}
[Token(Token = "0x2000156")]
public class HoverObjectTriggerEvent : MonoBehaviour
{
	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string _tag;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IntUnityEvent OnHoverObject;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntUnityEvent OnExitObject;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject _planetChosen;

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xF25970", Offset = "0xF25970", VA = "0xF25970")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xF25A1C", Offset = "0xF25A1C", VA = "0xF25A1C")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xF25AC8", Offset = "0xF25AC8", VA = "0xF25AC8")]
	public HoverObjectTriggerEvent()
	{
	}
}
[Token(Token = "0x2000157")]
public class IDChecker : CacheBehaviour
{
	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject m_target;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public UnityEvent m_response;

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xF25AD0", Offset = "0xF25AD0", VA = "0xF25AD0")]
	public void CheckID(int p_instanceID)
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xF25C14", Offset = "0xF25C14", VA = "0xF25C14")]
	public IDChecker()
	{
	}
}
[Token(Token = "0x2000158")]
public class InitialScaleInjector : MonoBehaviour
{
	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3Variable m_initialScale;

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xF2F290", Offset = "0xF2F290", VA = "0xF2F290")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xF2F328", Offset = "0xF2F328", VA = "0xF2F328")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xF2F32C", Offset = "0xF2F32C", VA = "0xF2F32C")]
	public InitialScaleInjector()
	{
	}
}
[Token(Token = "0x2000159")]
public class ActorDeployer : MonoBehaviour
{
	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ActorData m_actorDataToDeploy;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Label> m_labels;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> m_elementsToDeploy;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<int> unitBatches;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public IntVariable m_unitsToDestroy;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ActorDataTransformUnityEvent m_OnDeployUnit;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnUnitBatchDestroyed;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent OnAllUnitsDestroyed;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int currentUnitIndex;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int unitBatchIndex;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int currentNumberOfUnits;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ActorDataTransformGameEventStruct str;

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x140F9F0", Offset = "0x140F9F0", VA = "0x140F9F0")]
	public void OnDeployUnit()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x140FD1C", Offset = "0x140FD1C", VA = "0x140FD1C")]
	public void OnUnitDestroy()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x140FDC8", Offset = "0x140FDC8", VA = "0x140FDC8")]
	private void Reset()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x140FDD4", Offset = "0x140FDD4", VA = "0x140FDD4")]
	public ActorDeployer()
	{
	}
}
[Token(Token = "0x200015A")]
public class Instantiator : MonoBehaviour
{
	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_prefabToInstantiate;

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xF30B80", Offset = "0xF30B80", VA = "0xF30B80")]
	public void InstantiateObject(Label m_positionToInstantiate)
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xF30D5C", Offset = "0xF30D5C", VA = "0xF30D5C")]
	public Instantiator()
	{
	}
}
[Token(Token = "0x200015B")]
public class FloatVariableTrigger : MonoBehaviour
{
	[Token(Token = "0x200062A")]
	public enum EComparator
	{
		[Token(Token = "0x4001F11")]
		INVALID,
		[Token(Token = "0x4001F12")]
		INFERIOR,
		[Token(Token = "0x4001F13")]
		SUPERIOR,
		[Token(Token = "0x4001F14")]
		ENUM_COUNT
	}

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC1AC", Offset = "0xBDC1AC")]
	public FloatVariable m_floatVariable;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EComparator m_comparator;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_valueToCompare;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_isOneShot;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC1E4", Offset = "0xBDC1E4")]
	public GameEvent OnConditionValid;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _consumed;

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xF1D774", Offset = "0xF1D774", VA = "0xF1D774")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xF1D848", Offset = "0xF1D848", VA = "0xF1D848")]
	private void Update()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xF1D8F4", Offset = "0xF1D8F4", VA = "0xF1D8F4")]
	public bool CanEvaluate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xF1D91C", Offset = "0xF1D91C", VA = "0xF1D91C")]
	public FloatVariableTrigger()
	{
	}
}
[Token(Token = "0x200015C")]
public class IntVariableTrigger : MonoBehaviour
{
	[Token(Token = "0x200062B")]
	public enum EComparator
	{
		[Token(Token = "0x4001F16")]
		INVALID,
		[Token(Token = "0x4001F17")]
		INFERIOR,
		[Token(Token = "0x4001F18")]
		INFERIOR_OR_EQUALS,
		[Token(Token = "0x4001F19")]
		EQUALS,
		[Token(Token = "0x4001F1A")]
		SUPERIOR_OR_EQUALS,
		[Token(Token = "0x4001F1B")]
		SUPERIOR,
		[Token(Token = "0x4001F1C")]
		DIFFERENT,
		[Token(Token = "0x4001F1D")]
		ENUM_COUNT
	}

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC21C", Offset = "0xBDC21C")]
	public IntVariable m_intVariable;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EComparator m_comparator;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_valueToCompare;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_isOneShot;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool m_checkOnUpdate;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC254", Offset = "0xBDC254")]
	public UnityEvent OnConditionValid;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _consumed;

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xF30D64", Offset = "0xF30D64", VA = "0xF30D64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xF30E38", Offset = "0xF30E38", VA = "0xF30E38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xF30E48", Offset = "0xF30E48", VA = "0xF30E48")]
	public void Evaluate()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xF30FA4", Offset = "0xF30FA4", VA = "0xF30FA4")]
	public bool CanEvaluate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xF30FCC", Offset = "0xF30FCC", VA = "0xF30FCC")]
	public IntVariableTrigger()
	{
	}
}
[Token(Token = "0x200015D")]
public class PauseEditorInGame : MonoBehaviour
{
	[Token(Token = "0x6000908")]
	[Address(RVA = "0xEE10D0", Offset = "0xEE10D0", VA = "0xEE10D0")]
	public void PauseEditor()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xEE1130", Offset = "0xEE1130", VA = "0xEE1130")]
	public PauseEditorInGame()
	{
	}
}
[Token(Token = "0x200015E")]
public class SceneConsoleFacade : MonoBehaviour
{
	[Token(Token = "0x200062C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8358", Offset = "0xBD8358")]
	private sealed class <ClearLogs>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneConsoleFacade <>4__this;

		[Token(Token = "0x1700035B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024A5")]
			[Address(RVA = "0xE43D6C", Offset = "0xE43D6C", VA = "0xE43D6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024A7")]
			[Address(RVA = "0xE43DD4", Offset = "0xE43DD4", VA = "0xE43DD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0xE435B8", Offset = "0xE435B8", VA = "0xE435B8")]
		[DebuggerHidden]
		public <ClearLogs>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0xE43CAC", Offset = "0xE43CAC", VA = "0xE43CAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0xE43CB0", Offset = "0xE43CB0", VA = "0xE43CB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0xE43D74", Offset = "0xE43D74", VA = "0xE43D74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro textMeshPro;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color logMessageColor;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color AssertMessasgeColor;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC28C", Offset = "0xBDC28C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC28C", Offset = "0xBDC28C")]
	[DocumentedByXml]
	private int <FontSize>k__BackingField;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC2E8", Offset = "0xBDC2E8")]
	[DocumentedByXml]
	private Color <InfoMessage>k__BackingField;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC320", Offset = "0xBDC320")]
	[DocumentedByXml]
	private Color <AssertMessage>k__BackingField;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC358", Offset = "0xBDC358")]
	[DocumentedByXml]
	private Color <WarningMessage>k__BackingField;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC390", Offset = "0xBDC390")]
	[DocumentedByXml]
	private Color <ErrorMessage>k__BackingField;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC3C8", Offset = "0xBDC3C8")]
	[DocumentedByXml]
	private Color <ExceptionMessage>k__BackingField;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC400", Offset = "0xBDC400")]
	[DocumentedByXml]
	private bool <CollapseLog>k__BackingField;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC438", Offset = "0xBDC438")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC438", Offset = "0xBDC438")]
	[DocumentedByXml]
	[AttributeAttribute(Name = "RestrictedAttribute", RVA = "0xBDC438", Offset = "0xBDC438")]
	private ScrollRect <ScrollWindow>k__BackingField;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC4A8", Offset = "0xBDC4A8")]
	[DocumentedByXml]
	[AttributeAttribute(Name = "RestrictedAttribute", RVA = "0xBDC4A8", Offset = "0xBDC4A8")]
	private RectTransform <ConsoleRect>k__BackingField;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC4F4", Offset = "0xBDC4F4")]
	[DocumentedByXml]
	private TextMeshPro <ConsoleOutput>k__BackingField;

	[Token(Token = "0x400092D")]
	protected const string newline = "\n";

	[Token(Token = "0x400092E")]
	protected const int lineBuffer = 50;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected int currentBuffer;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string lastMessage;

	[Token(Token = "0x17000086")]
	[Serialized]
	public int FontSize
	{
		[Token(Token = "0x600090A")]
		[Address(RVA = "0xE43310", Offset = "0xE43310", VA = "0xE43310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9AB0", Offset = "0xBE9AB0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600090B")]
		[Address(RVA = "0xE43318", Offset = "0xE43318", VA = "0xE43318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9AC0", Offset = "0xBE9AC0")]
		set
		{
		}
	}

	[Token(Token = "0x17000087")]
	[Serialized]
	public Color InfoMessage
	{
		[Token(Token = "0x600090C")]
		[Address(RVA = "0xE43320", Offset = "0xE43320", VA = "0xE43320")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9AD0", Offset = "0xBE9AD0")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600090D")]
		[Address(RVA = "0xE4332C", Offset = "0xE4332C", VA = "0xE4332C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9AE0", Offset = "0xBE9AE0")]
		set
		{
		}
	}

	[Token(Token = "0x17000088")]
	[Serialized]
	public Color AssertMessage
	{
		[Token(Token = "0x600090E")]
		[Address(RVA = "0xE43338", Offset = "0xE43338", VA = "0xE43338")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9AF0", Offset = "0xBE9AF0")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600090F")]
		[Address(RVA = "0xE43344", Offset = "0xE43344", VA = "0xE43344")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9B00", Offset = "0xBE9B00")]
		set
		{
		}
	}

	[Token(Token = "0x17000089")]
	[Serialized]
	public Color WarningMessage
	{
		[Token(Token = "0x6000910")]
		[Address(RVA = "0xE43350", Offset = "0xE43350", VA = "0xE43350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9B10", Offset = "0xBE9B10")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000911")]
		[Address(RVA = "0xE4335C", Offset = "0xE4335C", VA = "0xE4335C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9B20", Offset = "0xBE9B20")]
		set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	[Serialized]
	public Color ErrorMessage
	{
		[Token(Token = "0x6000912")]
		[Address(RVA = "0xE43368", Offset = "0xE43368", VA = "0xE43368")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9B30", Offset = "0xBE9B30")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000913")]
		[Address(RVA = "0xE43374", Offset = "0xE43374", VA = "0xE43374")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9B40", Offset = "0xBE9B40")]
		set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	[Serialized]
	public Color ExceptionMessage
	{
		[Token(Token = "0x6000914")]
		[Address(RVA = "0xE43380", Offset = "0xE43380", VA = "0xE43380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9B50", Offset = "0xBE9B50")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000915")]
		[Address(RVA = "0xE4338C", Offset = "0xE4338C", VA = "0xE4338C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9B60", Offset = "0xBE9B60")]
		set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	[Serialized]
	public bool CollapseLog
	{
		[Token(Token = "0x6000916")]
		[Address(RVA = "0xE43398", Offset = "0xE43398", VA = "0xE43398")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9B70", Offset = "0xBE9B70")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000917")]
		[Address(RVA = "0xE433A0", Offset = "0xE433A0", VA = "0xE433A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9B80", Offset = "0xBE9B80")]
		set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	[Serialized]
	public ScrollRect ScrollWindow
	{
		[Token(Token = "0x6000918")]
		[Address(RVA = "0xE433AC", Offset = "0xE433AC", VA = "0xE433AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9B90", Offset = "0xBE9B90")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000919")]
		[Address(RVA = "0xE433B4", Offset = "0xE433B4", VA = "0xE433B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9BA0", Offset = "0xBE9BA0")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	[Serialized]
	public RectTransform ConsoleRect
	{
		[Token(Token = "0x600091A")]
		[Address(RVA = "0xE433BC", Offset = "0xE433BC", VA = "0xE433BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9BB0", Offset = "0xBE9BB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600091B")]
		[Address(RVA = "0xE433C4", Offset = "0xE433C4", VA = "0xE433C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9BC0", Offset = "0xBE9BC0")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	[Serialized]
	public TextMeshPro ConsoleOutput
	{
		[Token(Token = "0x600091C")]
		[Address(RVA = "0xE433CC", Offset = "0xE433CC", VA = "0xE433CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9BD0", Offset = "0xBE9BD0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600091D")]
		[Address(RVA = "0xE433D4", Offset = "0xE433D4", VA = "0xE433D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE9BE0", Offset = "0xBE9BE0")]
		protected set
		{
		}
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xE433DC", Offset = "0xE433DC", VA = "0xE433DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xE43414", Offset = "0xE43414", VA = "0xE43414", Slot = "4")]
	public virtual void ClearLog()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xE434C4", Offset = "0xE434C4", VA = "0xE434C4", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xE4353C", Offset = "0xE4353C", VA = "0xE4353C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE9BF0", Offset = "0xBE9BF0")]
	private IEnumerator ClearLogs()
	{
		return null;
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xE435E4", Offset = "0xE435E4", VA = "0xE435E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xE43610", Offset = "0xE43610", VA = "0xE43610", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xE43708", Offset = "0xE43708", VA = "0xE43708", Slot = "7")]
	protected virtual string GetMessage(string message, LogType type)
	{
		return null;
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xE439E0", Offset = "0xE439E0", VA = "0xE439E0", Slot = "8")]
	protected virtual void HandleLog(string message, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xE43C30", Offset = "0xE43C30", VA = "0xE43C30")]
	public SceneConsoleFacade()
	{
	}
}
[Token(Token = "0x200015F")]
public class UIDebugToggle : MonoBehaviour
{
	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] m_togglableElement;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _currentToggledElement;

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xF6DB58", Offset = "0xF6DB58", VA = "0xF6DB58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xF6DB60", Offset = "0xF6DB60", VA = "0xF6DB60")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xF6DBB8", Offset = "0xF6DBB8", VA = "0xF6DBB8")]
	private void SetAllActivationTo(bool status)
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xF6DE44", Offset = "0xF6DE44", VA = "0xF6DE44")]
	private void ActivateEverythingUntilIndex(int index)
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xF6E0D4", Offset = "0xF6E0D4", VA = "0xF6E0D4")]
	public UIDebugToggle()
	{
	}
}
[Token(Token = "0x2000160")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD06D4", Offset = "0xBD06D4")]
public class VariableViewer : CacheBehaviour
{
	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public BaseVariable[] m_variablesToDisplay;

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xF78C8C", Offset = "0xF78C8C", VA = "0xF78C8C")]
	private void Update()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xF78F84", Offset = "0xF78F84", VA = "0xF78F84")]
	public VariableViewer()
	{
	}
}
[Token(Token = "0x2000161")]
public class GroupsHolder : MonoBehaviour
{
	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Group> m_groups;

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xF20EFC", Offset = "0xF20EFC", VA = "0xF20EFC")]
	public bool IsInGroup(Group group)
	{
		return default(bool);
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xF20F64", Offset = "0xF20F64", VA = "0xF20F64")]
	public bool IsInGroup(string group)
	{
		return default(bool);
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xF2101C", Offset = "0xF2101C", VA = "0xF2101C")]
	public GroupsHolder()
	{
	}
}
[Token(Token = "0x2000162")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD0738", Offset = "0xBD0738")]
public class Group : ScriptableObject
{
	[Token(Token = "0x6000931")]
	[Address(RVA = "0xF20EF4", Offset = "0xF20EF4", VA = "0xF20EF4")]
	public Group()
	{
	}
}
[Token(Token = "0x2000163")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD0798", Offset = "0xBD0798")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD0798", Offset = "0xBD0798")]
public class Identity : MonoBehaviour
{
	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_instanceId;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GroupsHolder _groupHolder;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LabelsHolder _labelsHolder;

	[Token(Token = "0x17000090")]
	public int InstanceId
	{
		[Token(Token = "0x6000932")]
		[Address(RVA = "0xF25C1C", Offset = "0xF25C1C", VA = "0xF25C1C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000933")]
		[Address(RVA = "0xF25C24", Offset = "0xF25C24", VA = "0xF25C24")]
		private set
		{
		}
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xF25C2C", Offset = "0xF25C2C", VA = "0xF25C2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xF25CC0", Offset = "0xF25CC0", VA = "0xF25CC0")]
	public bool HaveLabel(Label label)
	{
		return default(bool);
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xF25CDC", Offset = "0xF25CDC", VA = "0xF25CDC")]
	public bool HaveLabel(string label)
	{
		return default(bool);
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xF25CF8", Offset = "0xF25CF8", VA = "0xF25CF8")]
	public bool IsInGroup(Group group)
	{
		return default(bool);
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xF25D10", Offset = "0xF25D10", VA = "0xF25D10")]
	public Identity()
	{
	}
}
[Token(Token = "0x2000164")]
public class LabelHolder : MonoBehaviour
{
	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Label label;

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xF9BD1C", Offset = "0xF9BD1C", VA = "0xF9BD1C")]
	public LabelHolder()
	{
	}
}
[Token(Token = "0x2000165")]
public class LabelsHolder : MonoBehaviour
{
	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Label> m_labels;

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xF9BD24", Offset = "0xF9BD24", VA = "0xF9BD24")]
	public bool HaveLabel(Label label)
	{
		return default(bool);
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xF9BD8C", Offset = "0xF9BD8C", VA = "0xF9BD8C")]
	public bool HaveLabel(string label)
	{
		return default(bool);
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xF9BE44", Offset = "0xF9BE44", VA = "0xF9BE44")]
	public LabelsHolder()
	{
	}
}
[Token(Token = "0x2000166")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD0824", Offset = "0xBD0824")]
public class Label : ScriptableObject
{
	[Token(Token = "0x600093D")]
	[Address(RVA = "0xF9BD14", Offset = "0xF9BD14", VA = "0xF9BD14")]
	public Label()
	{
	}
}
[Token(Token = "0x2000167")]
public class Countdown : CacheBehaviour
{
	[Token(Token = "0x200062D")]
	public enum TimeMode
	{
		[Token(Token = "0x4001F22")]
		Normal,
		[Token(Token = "0x4001F23")]
		Unscaled
	}

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float m_timeBeforeEvent;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public FloatVariable m_timeBeforeEventVariable;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool m_isRepeated;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public TimeMode m_timeMode;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UnityEvent OnCountdownReached;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC52C", Offset = "0xBDC52C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDC52C", Offset = "0xBDC52C")]
	[SerializeField]
	public bool m_isConsumed;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float _startTime;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool _started;

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xEDD748", Offset = "0xEDD748", VA = "0xEDD748")]
	private void Awake()
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xEDD848", Offset = "0xEDD848", VA = "0xEDD848")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xEDD84C", Offset = "0xEDD84C", VA = "0xEDD84C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xEDD854", Offset = "0xEDD854", VA = "0xEDD854")]
	private void Update()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xEDD780", Offset = "0xEDD780", VA = "0xEDD780")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xEDDC40", Offset = "0xEDDC40", VA = "0xEDDC40")]
	public Countdown()
	{
	}
}
[Token(Token = "0x2000168")]
public class DisplayTimer : MonoBehaviour
{
	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI m_timerTxt;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _timerStarted;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _minutes;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _hours;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _time;

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xF143F4", Offset = "0xF143F4", VA = "0xF143F4")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xF14404", Offset = "0xF14404", VA = "0xF14404")]
	public void StopTimer()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xF1440C", Offset = "0xF1440C", VA = "0xF1440C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xF14694", Offset = "0xF14694", VA = "0xF14694")]
	public DisplayTimer()
	{
	}
}
[Token(Token = "0x2000169")]
public class UnityOnEnable : MonoBehaviour
{
	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnEnableEvent;

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xF777A4", Offset = "0xF777A4", VA = "0xF777A4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xF777C0", Offset = "0xF777C0", VA = "0xF777C0")]
	public UnityOnEnable()
	{
	}
}
[Token(Token = "0x200016A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD0884", Offset = "0xBD0884")]
public class UnityOnTriggerEnter : MonoBehaviour
{
	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> m_validTags;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask m_validLayers;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnUnityTriggerEnter;

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xF777C8", Offset = "0xF777C8", VA = "0xF777C8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xF778C4", Offset = "0xF778C4", VA = "0xF778C4")]
	public UnityOnTriggerEnter()
	{
	}
}
[Token(Token = "0x200016B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD08E8", Offset = "0xBD08E8")]
public class UnityOnTriggerExit : MonoBehaviour
{
	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> m_validTags;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask m_validLayers;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnUnityTriggerExit;

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xF778CC", Offset = "0xF778CC", VA = "0xF778CC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xF779C8", Offset = "0xF779C8", VA = "0xF779C8")]
	public UnityOnTriggerExit()
	{
	}
}
[Token(Token = "0x200016C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD094C", Offset = "0xBD094C")]
public class AnimatorBoolUpdater : CacheBehaviour
{
	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_animatorPropertyName;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public BoolVariable m_boolToInject;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _bypassInjection;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int _propertyHash;

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x111EA40", Offset = "0x111EA40", VA = "0x111EA40")]
	private void Awake()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x111EB38", Offset = "0x111EB38", VA = "0x111EB38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x111EBAC", Offset = "0x111EBAC", VA = "0x111EBAC")]
	public AnimatorBoolUpdater()
	{
	}
}
[Token(Token = "0x200016D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD09B0", Offset = "0xBD09B0")]
public class AnimatorFloatUpdater : CacheBehaviour
{
	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_animatorPropertyName;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public FloatVariable m_floatToInject;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _bypassInjection;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int _propertyHash;

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x111EBB4", Offset = "0x111EBB4", VA = "0x111EBB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x111ECAC", Offset = "0x111ECAC", VA = "0x111ECAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x111ED1C", Offset = "0x111ED1C", VA = "0x111ED1C")]
	public AnimatorFloatUpdater()
	{
	}
}
[Token(Token = "0x200016E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD0A14", Offset = "0xBD0A14")]
public class AnimatorIntUpdater : CacheBehaviour
{
	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_animatorPropertyName;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntVariable m_intToInject;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _bypassInjection;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int _propertyHash;

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x111ED24", Offset = "0x111ED24", VA = "0x111ED24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x111EE1C", Offset = "0x111EE1C", VA = "0x111EE1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x111EE90", Offset = "0x111EE90", VA = "0x111EE90")]
	public AnimatorIntUpdater()
	{
	}
}
[Token(Token = "0x200016F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD0A78", Offset = "0xBD0A78")]
public class TMProBuildVersionSetter : MonoBehaviour
{
	[Token(Token = "0x6000957")]
	[Address(RVA = "0xF619C8", Offset = "0xF619C8", VA = "0xF619C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xF61A58", Offset = "0xF61A58", VA = "0xF61A58")]
	public TMProBuildVersionSetter()
	{
	}
}
[Token(Token = "0x2000170")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD0ADC", Offset = "0xBD0ADC")]
public class FPSCounter : MonoBehaviour
{
	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_updateInterval;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshPro m_text;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _accum;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _frames;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _timeleft;

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xF1B0F0", Offset = "0xF1B0F0", VA = "0xF1B0F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xF1B150", Offset = "0xF1B150", VA = "0xF1B150")]
	private void Start()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xF1B1E4", Offset = "0xF1B1E4", VA = "0xF1B1E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xF1B2E8", Offset = "0xF1B2E8", VA = "0xF1B2E8")]
	public FPSCounter()
	{
	}
}
[Token(Token = "0x2000171")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD0B40", Offset = "0xBD0B40")]
public class ImageFillAmountUpdater : MonoBehaviour
{
	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloatVariable m_fillAmount;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image _image;

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xF2F070", Offset = "0xF2F070", VA = "0xF2F070")]
	private void Awake()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xF2F0D0", Offset = "0xF2F0D0", VA = "0xF2F0D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xF2F118", Offset = "0xF2F118", VA = "0xF2F118")]
	public ImageFillAmountUpdater()
	{
	}
}
[Token(Token = "0x2000172")]
public class SharedMaterialUpdater : CacheBehaviour
{
	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Material[] m_materials;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float m_speed;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string m_propertyName;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public FloatVariable m_visibilityTarget;

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xE4F268", Offset = "0xE4F268", VA = "0xE4F268")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xE4F2E8", Offset = "0xE4F2E8", VA = "0xE4F2E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xE4F3CC", Offset = "0xE4F3CC", VA = "0xE4F3CC")]
	public SharedMaterialUpdater()
	{
	}
}
[Token(Token = "0x2000173")]
public class ShaderBoolUpdater : CacheBehaviour
{
	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_propertyNameToUpdate;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public BoolVariable m_sourceOfData;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Renderer _renderer;

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xE4D3F4", Offset = "0xE4D3F4", VA = "0xE4D3F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xE4D454", Offset = "0xE4D454", VA = "0xE4D454")]
	private void Update()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xE4D500", Offset = "0xE4D500", VA = "0xE4D500")]
	public ShaderBoolUpdater()
	{
	}
}
[Token(Token = "0x2000174")]
public class ShaderFloatUpdater : CacheBehaviour
{
	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDC58C", Offset = "0xBDC58C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC58C", Offset = "0xBDC58C")]
	public Renderer m_renderer;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDC5EC", Offset = "0xBDC5EC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC5EC", Offset = "0xBDC5EC")]
	public string m_propertyNameToUpdate;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public FloatVariable m_sourceOfData;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC63C", Offset = "0xBDC63C")]
	public bool m_isLerp;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float m_lerpSpeed;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Renderer _renderer;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float _propertyValue;

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xE4D508", Offset = "0xE4D508", VA = "0xE4D508")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xE4D74C", Offset = "0xE4D74C", VA = "0xE4D74C")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xE4D920", Offset = "0xE4D920", VA = "0xE4D920")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xE4D9BC", Offset = "0xE4D9BC", VA = "0xE4D9BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xE4DB10", Offset = "0xE4DB10", VA = "0xE4DB10")]
	public void SetFloatLerped(string parameterName, float destination)
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xE4D700", Offset = "0xE4D700", VA = "0xE4D700")]
	private void OnValueUpdate(float value)
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xE4DA70", Offset = "0xE4DA70", VA = "0xE4DA70")]
	private void SetFloat(string parameterName, float destination)
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xE4DB70", Offset = "0xE4DB70", VA = "0xE4DB70")]
	public ShaderFloatUpdater()
	{
	}
}
[Token(Token = "0x2000175")]
public class ShaderPropertyUpdater : CacheBehaviour
{
	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_propertyNameToUpdate;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public FloatVariable m_sourceOfData;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool m_isLerp;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float m_lerpSpeed;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Renderer _renderer;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float _propertyValue;

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xE4DB78", Offset = "0xE4DB78", VA = "0xE4DB78")]
	private void Awake()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xE4DBD8", Offset = "0xE4DBD8", VA = "0xE4DBD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xE4DCBC", Offset = "0xE4DCBC", VA = "0xE4DCBC")]
	public ShaderPropertyUpdater()
	{
	}
}
[Token(Token = "0x2000176")]
public class SkyboxColorUpdater : CacheBehaviour
{
	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_propertyName;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ColorVariable m_colorVariable;

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xF543F8", Offset = "0xF543F8", VA = "0xF543F8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xF5444C", Offset = "0xF5444C", VA = "0xF5444C")]
	public SkyboxColorUpdater()
	{
	}
}
[Token(Token = "0x2000177")]
public class SkyboxFloatUpdater : CacheBehaviour
{
	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_propertyName;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public FloatVariable m_floatVariable;

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xF54454", Offset = "0xF54454", VA = "0xF54454")]
	private void Update()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xF544B0", Offset = "0xF544B0", VA = "0xF544B0")]
	public SkyboxFloatUpdater()
	{
	}
}
[Token(Token = "0x2000178")]
public class SkyboxIntUpdater : CacheBehaviour
{
	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_propertyName;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntVariable m_floatVariable;

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xF544B8", Offset = "0xF544B8", VA = "0xF544B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xF54564", Offset = "0xF54564", VA = "0xF54564")]
	public SkyboxIntUpdater()
	{
	}
}
[Token(Token = "0x2000179")]
public class SkyboxOffsetUpdater : CacheBehaviour
{
	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_propertyName;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector2Variable m_value;

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xF5456C", Offset = "0xF5456C", VA = "0xF5456C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xF545C8", Offset = "0xF545C8", VA = "0xF545C8")]
	public SkyboxOffsetUpdater()
	{
	}
}
[Token(Token = "0x200017A")]
public class SkyboxTextureTillingUpdater : CacheBehaviour
{
	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_propertyName;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector2Variable m_value;

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xF546BC", Offset = "0xF546BC", VA = "0xF546BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xF54718", Offset = "0xF54718", VA = "0xF54718")]
	public SkyboxTextureTillingUpdater()
	{
	}
}
[Token(Token = "0x200017B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD0BA4", Offset = "0xBD0BA4")]
public class BuildWasher : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200062E")]
	public struct BoolVariableWash
	{
		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BoolVariable m_var;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool m_buildValue;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public bool m_buildDefaultValue;
	}

	[Serializable]
	[Token(Token = "0x200062F")]
	public struct IntVariableWash
	{
		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntVariable m_var;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_buildValue;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_buildDefaultValue;
	}

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC674", Offset = "0xBDC674")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDC674", Offset = "0xBDC674")]
	public GameModeTypeVariable m_gameModeVar;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameModeType m_buildValue;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameModeType m_buildDefaultValue;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC6C4", Offset = "0xBDC6C4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDC6C4", Offset = "0xBDC6C4")]
	public List<BoolVariableWash> m_boolVarsToWash;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC714", Offset = "0xBDC714")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDC714", Offset = "0xBDC714")]
	public List<IntVariableWash> m_intVarsToWash;

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xED62F8", Offset = "0xED62F8", VA = "0xED62F8")]
	public BuildWasher()
	{
	}
}
[Token(Token = "0x200017C")]
public class SpellWasher : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000630")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8368", Offset = "0xBD8368")]
	private sealed class <>c
	{
		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Ammo, Ammo> <>9__3_0;

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0xF5FBF8", Offset = "0xF5FBF8", VA = "0xF5FBF8")]
		public <>c()
		{
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0xF5FC00", Offset = "0xF5FC00", VA = "0xF5FC00")]
		internal Ammo <Wash>b__3_0(Ammo ammo)
		{
			return null;
		}
	}

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC764", Offset = "0xBDC764")]
	public SpellData[] m_spellDatas;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GestureData[] m_gestureDatas;

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xF5F854", Offset = "0xF5F854", VA = "0xF5F854")]
	private void Awake()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xF5F858", Offset = "0xF5F858", VA = "0xF5F858")]
	public void Wash()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xF5FB88", Offset = "0xF5FB88", VA = "0xF5FB88")]
	public SpellWasher()
	{
	}
}
[Token(Token = "0x200017D")]
public class Washer : MonoBehaviour
{
	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<BaseVariable> m_variablesToWash;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnPostWash;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_launchOnAwake;

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xF7B188", Offset = "0xF7B188", VA = "0xF7B188")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xF7B1CC", Offset = "0xF7B1CC", VA = "0xF7B1CC")]
	public void Wash()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xF7B26C", Offset = "0xF7B26C", VA = "0xF7B26C")]
	public Washer()
	{
	}
}
[Token(Token = "0x200017E")]
public class MapManager : CacheBehaviour
{
	[Serializable]
	[Token(Token = "0x2000631")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8378", Offset = "0xBD8378")]
	private sealed class <>c
	{
		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__28_0;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Transform, bool> <>9__28_1;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<Transform, bool> <>9__28_2;

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0xFAB734", Offset = "0xFAB734", VA = "0xFAB734")]
		public <>c()
		{
		}

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0xFAB73C", Offset = "0xFAB73C", VA = "0xFAB73C")]
		internal bool <DisplayMap>b__28_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0xFAB798", Offset = "0xFAB798", VA = "0xFAB798")]
		internal bool <DisplayMap>b__28_1(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0xFAB7F4", Offset = "0xFAB7F4", VA = "0xFAB7F4")]
		internal bool <DisplayMap>b__28_2(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000632")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8388", Offset = "0xBD8388")]
	private sealed class <WaitForRotation>d__32 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject planet;

		[Token(Token = "0x1700035D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024B3")]
			[Address(RVA = "0xFABA20", Offset = "0xFABA20", VA = "0xFABA20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700035E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024B5")]
			[Address(RVA = "0xFABA88", Offset = "0xFABA88", VA = "0xFABA88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0xFAA9B0", Offset = "0xFAA9B0", VA = "0xFAA9B0")]
		[DebuggerHidden]
		public <WaitForRotation>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0xFAB950", Offset = "0xFAB950", VA = "0xFAB950", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0xFAB954", Offset = "0xFAB954", VA = "0xFAB954", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0xFABA28", Offset = "0xFABA28", VA = "0xFABA28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000633")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8398", Offset = "0xBD8398")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int i;

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0xFAB350", Offset = "0xFAB350", VA = "0xFAB350")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0xFAB850", Offset = "0xFAB850", VA = "0xFAB850")]
		internal bool <OnBossReveal>b__0(GameObject x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC79C", Offset = "0xBDC79C")]
	public IntVariable m_difficultyGlobal;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC7D4", Offset = "0xBDC7D4")]
	public SolarSystemVariable m_currentSolarSystem;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC80C", Offset = "0xBDC80C")]
	public LayerMask m_layerMask;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC844", Offset = "0xBDC844")]
	public GameObject[] m_rings;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<int> m_ringsCount;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject m_map;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public IntUnityEvent OnGenerateRecipe;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public UnityEvent OnAllMoonTyped;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public IntUnityEvent OnCradleMapPosition;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public IntVariable m_numberOfPlanetsRevealed;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public BoolVariable m_playerInBoss;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public BoolVariable m_playerInLastBoss;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public BoolVariable m_bossRevealed;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public IntVariable m_numberOfSystems;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public FloatVariable m_sphereState;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject m_shamanSphere;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject m_shamanSphereHolderMap;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject m_shamanSphereHolder;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObjectCollection m_planets;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC87C", Offset = "0xBDC87C")]
	public float m_planetMinXRotation;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float m_planetMaxXRotation;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float m_planetMinYRotation;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float m_planetMaxYRotation;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float m_planetMinZRotation;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public float m_planetMaxZRotation;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public float m_radiusFactor;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private int _lastPlanetIndex;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int _lastPlanetPicked;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private List<GameObject> _planets;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private List<GameObject> _planetBosses;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Vector3 _originalPos;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Teleport _radarTeleport;

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xFA8758", Offset = "0xFA8758", VA = "0xFA8758")]
	public void Start()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xFA8894", Offset = "0xFA8894", VA = "0xFA8894")]
	public void GenerateMap()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xFA8E98", Offset = "0xFA8E98", VA = "0xFA8E98")]
	public void DisplayMap(int numberOfPlanetToGenerate, bool alreadyCalculated)
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xFAA1BC", Offset = "0xFAA1BC", VA = "0xFAA1BC")]
	public void ShowOnlyShop()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xFAA440", Offset = "0xFAA440", VA = "0xFAA440")]
	public void PositionIconOnCradle()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xFAA4FC", Offset = "0xFAA4FC", VA = "0xFAA4FC")]
	public void ActivatePlanets()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xFAA934", Offset = "0xFAA934", VA = "0xFAA934")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE9C54", Offset = "0xBE9C54")]
	private IEnumerator<float> WaitForRotation(GameObject planet)
	{
		return null;
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xFAA9DC", Offset = "0xFAA9DC", VA = "0xFAA9DC")]
	private Vector3 GetRandomPointOf(List<Vector3> vertices)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xFAAA64", Offset = "0xFAAA64", VA = "0xFAAA64")]
	public void ActiveMap()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xFAACE8", Offset = "0xFAACE8", VA = "0xFAACE8")]
	public void DeactiveMap()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xFAAE88", Offset = "0xFAAE88", VA = "0xFAAE88")]
	public void ActivatePlanetsCollider()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xFAB060", Offset = "0xFAB060", VA = "0xFAB060")]
	public void DeactivatePlanetsCollider()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xFAB178", Offset = "0xFAB178", VA = "0xFAB178")]
	public void ReactivateSphereShamanCollider()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xFA8CC0", Offset = "0xFA8CC0", VA = "0xFA8CC0")]
	public void DeleteMap()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xFAB1FC", Offset = "0xFAB1FC", VA = "0xFAB1FC")]
	public void OnBossReveal()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xFAB358", Offset = "0xFAB358", VA = "0xFAB358")]
	public void OnRecipeGenerated(int instanceId)
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xFAB3E8", Offset = "0xFAB3E8", VA = "0xFAB3E8")]
	public void OnPlanetPicked(int instanceId)
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xFA9C48", Offset = "0xFA9C48", VA = "0xFA9C48")]
	private void DisplayRecipe(int instanceId)
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xFAB624", Offset = "0xFAB624", VA = "0xFAB624")]
	public MapManager()
	{
	}
}
[Token(Token = "0x200017F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD0C10", Offset = "0xBD0C10")]
public class MaterialPropertyOverrider : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000634")]
	public struct FloatOverride
	{
		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_name;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_value;
	}

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<FloatOverride> m_floatOverrides;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MaterialPropertyBlock _materialPropertyBlock;

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xFABAEC", Offset = "0xFABAEC", VA = "0xFABAEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xFABB78", Offset = "0xFABB78", VA = "0xFABB78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xFABC70", Offset = "0xFABC70", VA = "0xFABC70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xFABCB0", Offset = "0xFABCB0", VA = "0xFABCB0")]
	public MaterialPropertyOverrider()
	{
	}
}
[Token(Token = "0x2000180")]
public class MoonShowroom : MonoBehaviour
{
	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> m_moons;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_offset;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_moonPerLine;

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x15478BC", Offset = "0x15478BC", VA = "0x15478BC")]
	private void Start()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x1547A74", Offset = "0x1547A74", VA = "0x1547A74")]
	public MoonShowroom()
	{
	}
}
[Token(Token = "0x2000181")]
public class OnStopVFXCallback : CacheBehaviour
{
	[Token(Token = "0x2000635")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD83A8", Offset = "0xBD83A8")]
	private sealed class <WaitUntilEndOfVFX>d__3 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnStopVFXCallback <>4__this;

		[Token(Token = "0x1700035F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024BB")]
			[Address(RVA = "0x10D64B0", Offset = "0x10D64B0", VA = "0x10D64B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000360")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024BD")]
			[Address(RVA = "0x10D6518", Offset = "0x10D6518", VA = "0x10D6518", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0x10D63B0", Offset = "0x10D63B0", VA = "0x10D63B0")]
		[DebuggerHidden]
		public <WaitUntilEndOfVFX>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0x10D63E4", Offset = "0x10D63E4", VA = "0x10D63E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0x10D63E8", Offset = "0x10D63E8", VA = "0x10D63E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0x10D64B8", Offset = "0x10D64B8", VA = "0x10D64B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<VisualEffect> m_vfxs;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC8B4", Offset = "0xBDC8B4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDC8B4", Offset = "0xBDC8B4")]
	public UnityEvent OnFinishedVFX;

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x10D6098", Offset = "0x10D6098", VA = "0x10D6098")]
	private void Start()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x10D6324", Offset = "0x10D6324", VA = "0x10D6324")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE9CB8", Offset = "0xBE9CB8")]
	private IEnumerator<float> WaitUntilEndOfVFX(float delay)
	{
		return null;
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x10D63DC", Offset = "0x10D63DC", VA = "0x10D63DC")]
	public OnStopVFXCallback()
	{
	}
}
[Token(Token = "0x2000182")]
public class PauseScreen : MonoBehaviour
{
	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PerkDataCollection m_obtainedPerks;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_playerPerksContainer;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_leftPerksContainer;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_rightPerksContainer;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_offset;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int m_playerPerksIndex;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_leftPerksIndex;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int m_rightPerksIndex;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> m_perkIcons;

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xEE1138", Offset = "0xEE1138", VA = "0xEE1138")]
	public void Create()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xEE15C0", Offset = "0xEE15C0", VA = "0xEE15C0")]
	public void ClearIcons()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xEE143C", Offset = "0xEE143C", VA = "0xEE143C")]
	private void AddPerkIcon(Sprite p_sprite, Transform p_transform, int p_index)
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xEE16B4", Offset = "0xEE16B4", VA = "0xEE16B4")]
	public PauseScreen()
	{
	}
}
[Token(Token = "0x2000183")]
public class PermanentPerkManager : MonoBehaviour
{
	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC904", Offset = "0xBDC904")]
	public FloatVariable m_damageBase;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FloatVariable m_damageInterRun;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC93C", Offset = "0xBDC93C")]
	public IntVariable m_health;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntVariable m_healthMax;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public IntVariable m_healthInterRun;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC974", Offset = "0xBDC974")]
	public FloatVariable m_criticalOdd;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FloatVariable m_criticalDamage;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FloatVariable m_criticalOddInterRun;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public FloatVariable m_criticalDamageInterRun;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC9AC", Offset = "0xBDC9AC")]
	public StringVariable m_dominantHand;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<GestureVariable> m_starterSpells;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public WandDataVariable m_leftWand;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public WandDataVariable m_rightWand;

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xEE1748", Offset = "0xEE1748", VA = "0xEE1748")]
	public void ApplyPermanentPerks()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xEE1774", Offset = "0xEE1774", VA = "0xEE1774")]
	public void AddHealthInterRun()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xEE17E4", Offset = "0xEE17E4", VA = "0xEE17E4")]
	public void AddCriticalRateAndDamageInterRun()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xEE18A8", Offset = "0xEE18A8", VA = "0xEE18A8")]
	public void AddDamageInterRun()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xEE191C", Offset = "0xEE191C", VA = "0xEE191C")]
	public void AddGesture()
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xEE1BF4", Offset = "0xEE1BF4", VA = "0xEE1BF4")]
	public PermanentPerkManager()
	{
	}
}
[Token(Token = "0x2000184")]
public class PillarRegenerationManager : CacheBehaviour
{
	[Token(Token = "0x2000636")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD83B8", Offset = "0xBD83B8")]
	private sealed class <WaitForQTEEffect>d__19 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PillarRegenerationManager <>4__this;

		[Token(Token = "0x17000361")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024C1")]
			[Address(RVA = "0xEE40C8", Offset = "0xEE40C8", VA = "0xEE40C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000362")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024C3")]
			[Address(RVA = "0xEE4130", Offset = "0xEE4130", VA = "0xEE4130", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0xEE3BE0", Offset = "0xEE3BE0", VA = "0xEE3BE0")]
		[DebuggerHidden]
		public <WaitForQTEEffect>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0xEE3FC4", Offset = "0xEE3FC4", VA = "0xEE3FC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0xEE3FC8", Offset = "0xEE3FC8", VA = "0xEE3FC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0xEE40D0", Offset = "0xEE40D0", VA = "0xEE40D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000637")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD83C8", Offset = "0xBD83C8")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string elmt;

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0xEE3C0C", Offset = "0xEE3C0C", VA = "0xEE3C0C")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0xEE3F8C", Offset = "0xEE3F8C", VA = "0xEE3F8C")]
		internal bool <RegeneratePillar>b__0(GameObject x)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000638")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD83D8", Offset = "0xBD83D8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__20_1;

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0xEE3F20", Offset = "0xEE3F20", VA = "0xEE3F20")]
		public <>c()
		{
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0xEE3F28", Offset = "0xEE3F28", VA = "0xEE3F28")]
		internal bool <RegeneratePillar>b__20_1(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public IntVariable[] m_currentElements;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntVariable[] m_neededElements;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string[] m_elements;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public BoolVariable m_sulfurPillar;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public BoolVariable m_azotePillar;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public BoolVariable m_phosphorusPillar;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public BoolVariable m_waterPillar;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public BoolVariable m_carbonPillar;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public BoolVariable m_bossRevealed;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject m_qteManager;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject m_shamanSphereCradle;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public string m_pillarAnimatorState;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public UnityEvent OnAllPillarRegenerated;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public UnityEvent OnEndPillarLoop;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Dictionary<string, BoolVariable> m_pillars;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int _index;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private string _currentElement;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private List<GameObject> m_pillarsGO;

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xEE32B4", Offset = "0xEE32B4", VA = "0xEE32B4")]
	public void Start()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xEE33A0", Offset = "0xEE33A0", VA = "0xEE33A0")]
	public void CheckPillar()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xEE3418", Offset = "0xEE3418", VA = "0xEE3418")]
	public void CheckPillar(IntVariable current, IntVariable needed, string element)
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xEE382C", Offset = "0xEE382C", VA = "0xEE382C")]
	public void OnPillarRegeneration()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0xEE3B64", Offset = "0xEE3B64", VA = "0xEE3B64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE9D1C", Offset = "0xBE9D1C")]
	public IEnumerator<float> WaitForQTEEffect()
	{
		return null;
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xEE396C", Offset = "0xEE396C", VA = "0xEE396C")]
	public void RegeneratePillar([Optional] string element)
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xEE3C14", Offset = "0xEE3C14", VA = "0xEE3C14")]
	public void OnNewSystemDiscovered()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0xEE3CC0", Offset = "0xEE3CC0", VA = "0xEE3CC0")]
	public void OnArriveCradle()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xEE3CC8", Offset = "0xEE3CC8", VA = "0xEE3CC8")]
	public void OnPillarRegistered(GameObject pillar)
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xEE3E08", Offset = "0xEE3E08", VA = "0xEE3E08")]
	public PillarRegenerationManager()
	{
	}
}
[Token(Token = "0x2000185")]
public class PlanetPicker : CacheBehaviour
{
	[Serializable]
	[Token(Token = "0x2000639")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD83E8", Offset = "0xBD83E8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__16_0;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Transform, bool> <>9__16_1;

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0xEE55B8", Offset = "0xEE55B8", VA = "0xEE55B8")]
		public <>c()
		{
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0xEE55C0", Offset = "0xEE55C0", VA = "0xEE55C0")]
		internal bool <OnPlanetPick>b__16_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0xEE5624", Offset = "0xEE5624", VA = "0xEE5624")]
		internal bool <OnPlanetPick>b__16_1(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject m_infoPlanet;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject m_infoPlanetUnknown;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject m_background;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float m_triggerTime;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public IntUnityEvent OnPlanetPicked;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public BoolVariable m_inPlanetChoice;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public BoolVariable m_bossRevealed;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public BoolVariable m_playerInBoss;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public BoolVariable m_playerInLastBoss;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public IntVariable m_numberOfSystems;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool toDenySound;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDC9E4", Offset = "0xBDC9E4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDC9E4", Offset = "0xBDC9E4")]
	public GameEventListener m_triggerPressed;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameEventListener m_triggerReleased;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool _triggered;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	private bool _picked;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float _triggerTime;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private GameObject _planetParent;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private PlanetData _data;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int _instanceID;

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0xEE419C", Offset = "0xEE419C", VA = "0xEE419C")]
	public void Start()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xEE4350", Offset = "0xEE4350", VA = "0xEE4350")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xEE43D4", Offset = "0xEE43D4", VA = "0xEE43D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xEE49B4", Offset = "0xEE49B4", VA = "0xEE49B4")]
	public void OnPlanetPick(int instanceId)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xEE45B4", Offset = "0xEE45B4", VA = "0xEE45B4")]
	public void FindBossPlanet(int instanceID)
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xEE4D00", Offset = "0xEE4D00", VA = "0xEE4D00")]
	public void OnHoverEnter(int instanceID)
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xEE4E3C", Offset = "0xEE4E3C", VA = "0xEE4E3C")]
	public void OnHoverExit(int instanceID)
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xEE50A4", Offset = "0xEE50A4", VA = "0xEE50A4")]
	public void OnHoverEnterUnknown(int instanceID)
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xEE51E8", Offset = "0xEE51E8", VA = "0xEE51E8")]
	public void OnHoverExitUnknown(int instanceID)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xEE5450", Offset = "0xEE5450", VA = "0xEE5450")]
	private void InstantiateHorizontalLayout()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xEE5454", Offset = "0xEE5454", VA = "0xEE5454")]
	public void OnTriggerPressed()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xEE54F8", Offset = "0xEE54F8", VA = "0xEE54F8")]
	public void OnTriggerRelease()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xEE5508", Offset = "0xEE5508", VA = "0xEE5508")]
	public void PickedToFalse()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xEE5510", Offset = "0xEE5510", VA = "0xEE5510")]
	public void SetInstanceId()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0xEE5548", Offset = "0xEE5548", VA = "0xEE5548")]
	public PlanetPicker()
	{
	}
}
[Token(Token = "0x2000186")]
public class PlanetShowroomBehaviour : MonoBehaviour
{
	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> m_moons;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode m_nextKey;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public KeyCode m_previousKey;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode m_regenerateKey;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_fxAzote;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_fxCarbon;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_fxPhosphorus;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_fxSulfur;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_fxWater;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _currentMoon;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform _currentFX;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _currentMoonIndex;

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xEE6704", Offset = "0xEE6704", VA = "0xEE6704")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xEE6864", Offset = "0xEE6864", VA = "0xEE6864")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xEE72CC", Offset = "0xEE72CC", VA = "0xEE72CC")]
	public PlanetShowroomBehaviour()
	{
	}
}
[Token(Token = "0x2000187")]
public class ProgressBar : MonoBehaviour
{
	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntVariable m_currentWaveNumber;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IntVariable m_currentWaveIndex;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntVariable m_currentBatchNumber;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntVariable m_currentBatchIndex;

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xEEF3DC", Offset = "0xEEF3DC", VA = "0xEEF3DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xEEF5A4", Offset = "0xEEF5A4", VA = "0xEEF5A4")]
	public ProgressBar()
	{
	}
}
[Token(Token = "0x2000188")]
public class ProximityManager : MonoBehaviour
{
	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xEF0144", Offset = "0xEF0144", VA = "0xEF0144")]
	public ProximityManager()
	{
	}
}
[Token(Token = "0x2000189")]
public class QTEObjectManager : CacheBehaviour
{
	[Token(Token = "0x200063A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD83F8", Offset = "0xBD83F8")]
	private sealed class <LerpToPunchPoint>d__17 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public QTEObjectManager <>4__this;

		[Token(Token = "0x17000363")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024D0")]
			[Address(RVA = "0xE3B24C", Offset = "0xE3B24C", VA = "0xE3B24C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000364")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024D2")]
			[Address(RVA = "0xE3B2B4", Offset = "0xE3B2B4", VA = "0xE3B2B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0xE3AFA0", Offset = "0xE3AFA0", VA = "0xE3AFA0")]
		[DebuggerHidden]
		public <LerpToPunchPoint>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0xE3AFCC", Offset = "0xE3AFCC", VA = "0xE3AFCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024CF")]
		[Address(RVA = "0xE3AFD0", Offset = "0xE3AFD0", VA = "0xE3AFD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0xE3B254", Offset = "0xE3B254", VA = "0xE3B254", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200063B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8408", Offset = "0xBD8408")]
	private sealed class <OnTimeLifeSupport>d__20 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public QTEObjectManager <>4__this;

		[Token(Token = "0x17000365")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024D6")]
			[Address(RVA = "0xE3B434", Offset = "0xE3B434", VA = "0xE3B434", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000366")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024D8")]
			[Address(RVA = "0xE3B49C", Offset = "0xE3B49C", VA = "0xE3B49C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0xE3B318", Offset = "0xE3B318", VA = "0xE3B318")]
		[DebuggerHidden]
		public <OnTimeLifeSupport>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0xE3B344", Offset = "0xE3B344", VA = "0xE3B344", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024D5")]
		[Address(RVA = "0xE3B348", Offset = "0xE3B348", VA = "0xE3B348", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0xE3B43C", Offset = "0xE3B43C", VA = "0xE3B43C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject m_deformer;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject m_QTEObject;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject m_QTEfx;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject m_QTESphere;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public UnityEvent OnQTELifeSupportSent;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public UnityEvent OnPillarRegeneration;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject m_punchSprite;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject m_shamanSphere;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject m_standardPoint;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject m_lerpPoint;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject m_pictoPunch;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public FloatVariable m_sphereState;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float m_modifierTweenTime;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float m_tweenAmount;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool m_pillarMode;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Vector3 _modifierPosition;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Vector3 _spherePosition;

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x158A474", Offset = "0x158A474", VA = "0x158A474")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x158A4BC", Offset = "0x158A4BC", VA = "0x158A4BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x158A5B4", Offset = "0x158A5B4", VA = "0x158A5B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE9D80", Offset = "0xBE9D80")]
	public IEnumerator<float> LerpToPunchPoint()
	{
		return null;
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x158A630", Offset = "0x158A630", VA = "0x158A630")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x158A6B8", Offset = "0x158A6B8", VA = "0x158A6B8")]
	public void OnQTEObjectPunched()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x158A7EC", Offset = "0x158A7EC", VA = "0x158A7EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE9DE4", Offset = "0xBE9DE4")]
	public IEnumerator<float> OnTimeLifeSupport(float time)
	{
		return null;
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x158A868", Offset = "0x158A868", VA = "0x158A868")]
	public void OnDeformerTweenComplete()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x158A944", Offset = "0x158A944", VA = "0x158A944")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x158AA90", Offset = "0x158AA90", VA = "0x158AA90")]
	public QTEObjectManager()
	{
	}
}
[Token(Token = "0x200018A")]
public class RandomElementGainer : MonoBehaviour
{
	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<IntVariable> m_currentElements;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<IntVariable> m_neededElements;

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xE3B700", Offset = "0xE3B700", VA = "0xE3B700")]
	public void GainRandomElement(int elementCount)
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xE3B880", Offset = "0xE3B880", VA = "0xE3B880")]
	public void GainRandomNeededElement(int elementCount)
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xE3BA48", Offset = "0xE3BA48", VA = "0xE3BA48")]
	public RandomElementGainer()
	{
	}
}
[Token(Token = "0x200018B")]
public class RandomNumberDrawer : MonoBehaviour
{
	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_useInt;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FloatVariable m_outputValue;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntVariable m_outputValueInt;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_minValue;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_maxValue;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int m_minValueInt;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int m_maxValueInt;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent m_OnNumberDrawned;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool m_launchOnEnable;

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xE3BA50", Offset = "0xE3BA50", VA = "0xE3BA50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xE3BA60", Offset = "0xE3BA60", VA = "0xE3BA60")]
	public void DrawRandomNumber()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xE3BAE8", Offset = "0xE3BAE8", VA = "0xE3BAE8")]
	public RandomNumberDrawer()
	{
	}
}
[Token(Token = "0x200018C")]
public class Randomizer : MonoBehaviour
{
	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_oddPercentage;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool m_superiorOdd;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent m_OnSuccess;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FloatUnityEvent m_OnFail;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_launchOnEnable;

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0xE3BAF0", Offset = "0xE3BAF0", VA = "0xE3BAF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xE3BBB8", Offset = "0xE3BBB8", VA = "0xE3BBB8")]
	public void CheckOdds(float odd)
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xE3BB00", Offset = "0xE3BB00", VA = "0xE3BB00")]
	public void DrawRandom()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xE3BC54", Offset = "0xE3BC54", VA = "0xE3BC54")]
	public Randomizer()
	{
	}
}
[Token(Token = "0x200018D")]
public class ReferenceHolder : MonoBehaviour
{
	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_reference;

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0xE3BDC4", Offset = "0xE3BDC4", VA = "0xE3BDC4")]
	public ReferenceHolder()
	{
	}
}
[Token(Token = "0x200018E")]
public class ReflectiveEffect : MonoBehaviour
{
	[Token(Token = "0x200063C")]
	public enum ReflectMode
	{
		[Token(Token = "0x4001F4A")]
		Instantiate,
		[Token(Token = "0x4001F4B")]
		Activate
	}

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObjectVariable headGO;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ReflectMode m_reflectMode;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_objectToInstantiate;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_objectToActivate;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnReflect;

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0xE3BDCC", Offset = "0xE3BDCC", VA = "0xE3BDCC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xE3C070", Offset = "0xE3C070", VA = "0xE3C070")]
	public ReflectiveEffect()
	{
	}
}
[Token(Token = "0x200018F")]
public class RegenerationManager : MonoBehaviour
{
	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDCA34", Offset = "0xBDCA34")]
	public string m_regenerationStateName;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDCA6C", Offset = "0xBDCA6C")]
	public GameObject m_superNovaFX;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDCAA4", Offset = "0xBDCAA4")]
	public GameObject m_shockwaveCollider;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_shockwaveSpeed;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _regenerated;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject _shockWaveCollider;

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xE3D0F8", Offset = "0xE3D0F8", VA = "0xE3D0F8")]
	public void Update()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xE3D230", Offset = "0xE3D230", VA = "0xE3D230")]
	public void OnPlanetRegenerated(int instanceID)
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xE3D468", Offset = "0xE3D468", VA = "0xE3D468")]
	public void OnWaveFinished()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xE3D4D8", Offset = "0xE3D4D8", VA = "0xE3D4D8")]
	public RegenerationManager()
	{
	}
}
[Token(Token = "0x2000190")]
public class ResetAnimatorBoolParams : MonoBehaviour
{
	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator m_animator;

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xE3E178", Offset = "0xE3E178", VA = "0xE3E178")]
	public void ResetAllParams()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xE3E2B4", Offset = "0xE3E2B4", VA = "0xE3E2B4")]
	public ResetAnimatorBoolParams()
	{
	}
}
[Token(Token = "0x2000191")]
public class StopActionCallback : MonoBehaviour
{
	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnShockwaveFinished;

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xF610F4", Offset = "0xF610F4", VA = "0xF610F4")]
	public void OnParticleSystemStopped()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xF61110", Offset = "0xF61110", VA = "0xF61110")]
	public StopActionCallback()
	{
	}
}
[Token(Token = "0x2000192")]
public class StringReferenceHolder : MonoBehaviour
{
	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_reference;

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xF61118", Offset = "0xF61118", VA = "0xF61118")]
	public StringReferenceHolder()
	{
	}
}
[Token(Token = "0x2000193")]
public class StringVariableComparer : MonoBehaviour
{
	[Token(Token = "0x200063D")]
	public enum StringToCompareType
	{
		[Token(Token = "0x4001F4D")]
		CONSTANTE,
		[Token(Token = "0x4001F4E")]
		STRINGVARIABLE,
		[Token(Token = "0x4001F4F")]
		STRING_REFERENCE_HOLDER
	}

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDCADC", Offset = "0xBDCADC")]
	public StringToCompareType m_variableAType;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_variableAString;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StringVariable m_variableAStringVar;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public StringReferenceHolder m_variableAReferenceHolder;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDCB14", Offset = "0xBDCB14")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDCB14", Offset = "0xBDCB14")]
	public StringToCompareType m_variableBType;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string m_variableBString;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public StringVariable m_variableBStringVar;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public StringReferenceHolder m_variableBReferenceHolder;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDCB64", Offset = "0xBDCB64")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDCB64", Offset = "0xBDCB64")]
	public UnityEvent OnComparisonSuccess;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent OnComparisonFail;

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xF611B4", Offset = "0xF611B4", VA = "0xF611B4")]
	public void Check()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xF61220", Offset = "0xF61220", VA = "0xF61220")]
	private string ReturnGoodString(StringToCompareType typeOfString, string constanteChoice, StringVariable stringVariableChoice, StringReferenceHolder stringReferenceHolderChoice)
	{
		return null;
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xF61268", Offset = "0xF61268", VA = "0xF61268")]
	public StringVariableComparer()
	{
	}
}
[Token(Token = "0x2000194")]
public abstract class AmmoBehaviour : CacheBehaviour
{
	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public ScriptableObject m_ammo;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public int m_actorInstanceId;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UnityEvent OnImpact;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public bool m_overridedTrigger;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	[HideInInspector]
	public bool m_overridedUpdate;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject m_hitFeedback;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public List<ModifierData> m_modifiersData;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public List<SpellModifierBase> m_modifiers;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public int m_damages;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[HideInInspector]
	public bool m_isCrit;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public UnityEvent m_OnDestroy;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected readonly string _ammoTag;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	protected Ammo _linkToAmmoData;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected float _autoDestructTimer;

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x111A238", Offset = "0x111A238", VA = "0x111A238")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x111A23C", Offset = "0x111A23C", VA = "0x111A23C")]
	protected void Start()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x111A340", Offset = "0x111A340", VA = "0x111A340")]
	private void Update()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x111A414", Offset = "0x111A414", VA = "0x111A414", Slot = "4")]
	public virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x111A704", Offset = "0x111A704", VA = "0x111A704")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x111A720", Offset = "0x111A720", VA = "0x111A720")]
	public void InstantiateModifiers()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x111A368", Offset = "0x111A368", VA = "0x111A368")]
	protected void DecrementAutoDestroyTimer(float deltaTime)
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x111A94C", Offset = "0x111A94C", VA = "0x111A94C")]
	protected AmmoBehaviour()
	{
	}
}
[Token(Token = "0x2000195")]
public class AmmoBehaviourExchangeVars : AmmoBehaviour
{
	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public UnityEvent OnNotEnoughMana;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private AmmoExchangeData _ammoExchange;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private AmmoExchangeData.VariableType _variableToDecrementType;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private FloatVariable _variableToDecrementFloat;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private IntVariable _variableToDecrementInt;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float _floatToDecrement;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private int _intToDecrement;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private AmmoExchangeData.VariableType _variableToIncrementType;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private FloatVariable _variableToIncrementFloat;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private IntVariable _variableToIncrementInt;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float _floatToIncrement;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private int _intToIncrement;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float _timeToDestroyFx;

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x111A9BC", Offset = "0x111A9BC", VA = "0x111A9BC")]
	private new void Start()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x111ADB8", Offset = "0x111ADB8", VA = "0x111ADB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x111ACBC", Offset = "0x111ACBC", VA = "0x111ACBC")]
	private void DestroyExchangeFX()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x111AE0C", Offset = "0x111AE0C", VA = "0x111AE0C")]
	public AmmoBehaviourExchangeVars()
	{
	}
}
[Token(Token = "0x2000196")]
public class AmmoBehaviourHold : AmmoBehaviour
{
	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public LayerMask m_layersToIgnore;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public StringUnityEvent OnEndCanalization;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public string m_ownerTag;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool m_maintainTrigger;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public string m_leftTrigger;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public string m_rightTrigger;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float _stayTime;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	protected float _intervalDotDamage;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	protected List<DotDamage> _dotDamages;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	protected bool _increaseDamages;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	protected float _ratioDamages;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private string _trigger;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	protected Event _stopHoldingEvent;

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x111AE10", Offset = "0x111AE10", VA = "0x111AE10")]
	protected new void Start()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x111AEF8", Offset = "0x111AEF8", VA = "0x111AEF8")]
	protected void Update()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x111B138", Offset = "0x111B138", VA = "0x111B138", Slot = "4")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x111B504", Offset = "0x111B504", VA = "0x111B504")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x111B6BC", Offset = "0x111B6BC", VA = "0x111B6BC")]
	public AmmoBehaviourHold()
	{
	}
}
[Token(Token = "0x2000197")]
public class AmmoBehaviourShield : AmmoBehaviour
{
	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject m_shieldImpact;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool _reflect;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private int _hp;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float _longevity;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private GameObjectIntUnityEvent _OnShieldDestroyed;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Event _shieldHitAudioEvent;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Event _shieldDestroyAudioEvent;

	[Token(Token = "0x17000091")]
	public bool Reflect
	{
		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x111BE78", Offset = "0x111BE78", VA = "0x111BE78")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x111BE80", Offset = "0x111BE80", VA = "0x111BE80")]
		set
		{
		}
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x111BA38", Offset = "0x111BA38", VA = "0x111BA38")]
	private new void Start()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x111BAFC", Offset = "0x111BAFC", VA = "0x111BAFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x111BC1C", Offset = "0x111BC1C", VA = "0x111BC1C", Slot = "4")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x111BE8C", Offset = "0x111BE8C", VA = "0x111BE8C")]
	public AmmoBehaviourShield()
	{
	}
}
[Token(Token = "0x2000198")]
public class AmmoBehaviourShieldCharge : AmmoBehaviourShield
{
	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public IntVariable m_dominantHand;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public IntVariable m_numberOfChargesLeft;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public IntVariable m_numberOfChargesRight;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public SpellDataVariable m_leftSpell;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public SpellDataVariable m_rightSpell;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public float m_addTime;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public int m_chargeNumber;

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x111BE90", Offset = "0x111BE90", VA = "0x111BE90", Slot = "4")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x111C084", Offset = "0x111C084", VA = "0x111C084")]
	public AmmoBehaviourShieldCharge()
	{
	}
}
[Token(Token = "0x2000199")]
public class AmmoBehaviourSlash : Projectile
{
	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Transform m_GOToRotate;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public BoxCollider m_collider;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Vector3 m_vectorToFollow;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private bool _scalable;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float _minScale;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float _maxScale;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float _initPropulsion;

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x111C088", Offset = "0x111C088", VA = "0x111C088")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x111C134", Offset = "0x111C134", VA = "0x111C134")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x111C334", Offset = "0x111C334", VA = "0x111C334")]
	public AmmoBehaviourSlash()
	{
	}
}
[Token(Token = "0x200019A")]
public class AmmoBehaviourTotem : AmmoBehaviour
{
	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private GameObject _totemPrefab;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float _propulsionFuelTime;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float _speed;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool _totemHasBeenPlanted;

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x111C348", Offset = "0x111C348", VA = "0x111C348")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x111C4C4", Offset = "0x111C4C4", VA = "0x111C4C4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x111C640", Offset = "0x111C640", VA = "0x111C640", Slot = "4")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x111C8B8", Offset = "0x111C8B8", VA = "0x111C8B8")]
	public AmmoBehaviourTotem()
	{
	}
}
[Token(Token = "0x200019B")]
public class BombBehaviour : CacheBehaviour
{
	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDCC44", Offset = "0xBDCC44")]
	public float m_delayBeforeCharge;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float m_timeBeforeExplode;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float m_timeOfExplosion;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDCC7C", Offset = "0xBDCC7C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDCC7C", Offset = "0xBDCC7C")]
	public GameObject m_sphereColliderGO;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float m_maxSphereScale;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDCCCC", Offset = "0xBDCCCC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDCCCC", Offset = "0xBDCCCC")]
	public Animator m_animator;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string m_animChargeExplosion;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string m_animExplosion;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDCD1C", Offset = "0xBDCD1C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDCD1C", Offset = "0xBDCD1C")]
	public UnityEvent OnStartCharge;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public UnityEvent OnExplosion;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float _timeBeforeExplode;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float _delay;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float _explodeTime;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private bool _delayDone;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
	private bool _exploding;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 _tempScale;

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xED1200", Offset = "0xED1200", VA = "0xED1200")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xED1350", Offset = "0xED1350", VA = "0xED1350")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xED1284", Offset = "0xED1284", VA = "0xED1284")]
	private void StartChargeExplosion()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xED14F8", Offset = "0xED14F8", VA = "0xED14F8")]
	private void Explode()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xED15C4", Offset = "0xED15C4", VA = "0xED15C4")]
	public BombBehaviour()
	{
	}
}
[Token(Token = "0x200019C")]
public class HoldBehaviourEnemy : AmmoBehaviourHold
{
	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDCD6C", Offset = "0xBDCD6C")]
	public EnemyLaserBehaviour m_laser;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Collider m_boxCollider;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject m_warningBox;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Countdown m_colliderCountdown;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public float m_ratioOfRayTimeBeforeColliderActivated;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDCDA4", Offset = "0xBDCDA4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDCDA4", Offset = "0xBDCDA4")]
	public PlayerManager m_playerManager;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float m_intervalDot;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public int m_damageDot;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public float m_rayTime;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float _holdStayTime;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private int _ownerID;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private bool _started;

	[Token(Token = "0x17000092")]
	public float StayTime
	{
		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xF23D94", Offset = "0xF23D94", VA = "0xF23D94")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xF23D9C", Offset = "0xF23D9C", VA = "0xF23D9C")]
		set
		{
		}
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xF23DA8", Offset = "0xF23DA8", VA = "0xF23DA8")]
	public void StartStayTime()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xF23DB4", Offset = "0xF23DB4", VA = "0xF23DB4")]
	public void SetOwnerID(int ownerID)
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xF23DBC", Offset = "0xF23DBC", VA = "0xF23DBC")]
	public void OnLaserDeath(int laserID)
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xF23E60", Offset = "0xF23E60", VA = "0xF23E60")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xF23EA4", Offset = "0xF23EA4", VA = "0xF23EA4")]
	private new void Update()
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xF23EAC", Offset = "0xF23EAC", VA = "0xF23EAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xF23F68", Offset = "0xF23F68", VA = "0xF23F68")]
	public void StartLaser()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xF23FA4", Offset = "0xF23FA4", VA = "0xF23FA4", Slot = "4")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xF242F0", Offset = "0xF242F0", VA = "0xF242F0")]
	public new void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xF244A0", Offset = "0xF244A0", VA = "0xF244A0")]
	public HoldBehaviourEnemy()
	{
	}
}
[Token(Token = "0x200019D")]
public class BouncingModifier : SpellModifierBase
{
	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int m_numberOfBounces;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float m_radius;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float m_bouncingSpeed;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public LayerMask m_layerMask;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool _isBouncing;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int _bounceCounter;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 _target;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject _targetGO;

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xED1E9C", Offset = "0xED1E9C", VA = "0xED1E9C", Slot = "5")]
	public override void OnImpact([Optional] Collider other)
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xED25FC", Offset = "0xED25FC", VA = "0xED25FC", Slot = "6")]
	public override void SetModifierData(ModifierData value)
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xED26BC", Offset = "0xED26BC", VA = "0xED26BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xED2C20", Offset = "0xED2C20", VA = "0xED2C20")]
	public BouncingModifier()
	{
	}
}
[Token(Token = "0x200019E")]
public class ExplosiveModifier : SpellModifierBase
{
	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDCDF4", Offset = "0xBDCDF4")]
	public Transform m_explodeSphere;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Projectile m_fakeProjectile;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDCE2C", Offset = "0xBDCE2C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDCE2C", Offset = "0xBDCE2C")]
	public float m_radius;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float m_speed;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int m_damages;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool _hasImpacted;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 _tempScale;

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xF1AD2C", Offset = "0xF1AD2C", VA = "0xF1AD2C", Slot = "5")]
	public override void OnImpact([Optional] Collider other)
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xF1AE18", Offset = "0xF1AE18", VA = "0xF1AE18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xF1AFA4", Offset = "0xF1AFA4", VA = "0xF1AFA4", Slot = "6")]
	public override void SetModifierData(ModifierData value)
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xF1B0B8", Offset = "0xF1B0B8", VA = "0xF1B0B8")]
	public ExplosiveModifier()
	{
	}
}
[Token(Token = "0x200019F")]
public class HomingModifier : SpellModifierBase
{
	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform m_target;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float m_speed;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float m_timeForLock;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool _targetLocked;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float _step;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject _lockedUI;

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xF24C04", Offset = "0xF24C04", VA = "0xF24C04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xF24E08", Offset = "0xF24E08", VA = "0xF24E08")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xF24EBC", Offset = "0xF24EBC", VA = "0xF24EBC")]
	public void OnTargetLocked(GameObject targetLocked)
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xF24F6C", Offset = "0xF24F6C", VA = "0xF24F6C", Slot = "6")]
	public override void SetModifierData(ModifierData value)
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xF253B8", Offset = "0xF253B8", VA = "0xF253B8")]
	public HomingModifier()
	{
	}
}
[Token(Token = "0x20001A0")]
public class PiercingModifier : SpellModifierBase
{
	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int m_hp;

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xEE3134", Offset = "0xEE3134", VA = "0xEE3134", Slot = "5")]
	public override void OnImpact([Optional] Collider other)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xEE3204", Offset = "0xEE3204", VA = "0xEE3204", Slot = "6")]
	public override void SetModifierData(ModifierData value)
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xEE32A4", Offset = "0xEE32A4", VA = "0xEE32A4")]
	public PiercingModifier()
	{
	}
}
[Token(Token = "0x20001A1")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD0C74", Offset = "0xBD0C74")]
public class BouncingModifierData : ModifierData
{
	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_numberOfBounces;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_radius;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_bouncingSpeed;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LayerMask m_layerMask;

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xED2C38", Offset = "0xED2C38", VA = "0xED2C38")]
	public BouncingModifierData()
	{
	}
}
[Token(Token = "0x20001A2")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD0CD4", Offset = "0xBD0CD4")]
public class ExplosiveModifierData : ModifierData
{
	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_radius;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_speed;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_useSameDamagesAsAmmo;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int m_damages;

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xF1B0C0", Offset = "0xF1B0C0", VA = "0xF1B0C0")]
	public ExplosiveModifierData()
	{
	}
}
[Token(Token = "0x20001A3")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD0D34", Offset = "0xBD0D34")]
public class HomingModifierData : ModifierData
{
	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_speed;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_timeForLock;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_allChargesAtOnce;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_homingLaser;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public HomingLock m_laserInstantiated;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public HomingLock m_laserInstantiatedLeft;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public Transform m_target;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public List<Transform> m_targets;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public int m_targetIndex;

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xF253C0", Offset = "0xF253C0", VA = "0xF253C0")]
	public HomingModifierData()
	{
	}
}
[Token(Token = "0x20001A4")]
public class ModifierData : ScriptableObject
{
	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_modifierPrefab;

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x1546450", Offset = "0x1546450", VA = "0x1546450")]
	public ModifierData()
	{
	}
}
[Token(Token = "0x20001A5")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD0D94", Offset = "0xBD0D94")]
public class PiercingModifierData : ModifierData
{
	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_hp;

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xEE32AC", Offset = "0xEE32AC", VA = "0xEE32AC")]
	public PiercingModifierData()
	{
	}
}
[Token(Token = "0x20001A6")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD0DF4", Offset = "0xBD0DF4")]
public class SpreadModifierData : ModifierData
{
	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 m_layoutOfDispersion;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_offset;

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xF60A40", Offset = "0xF60A40", VA = "0xF60A40")]
	public SpreadModifierData()
	{
	}
}
[Token(Token = "0x20001A7")]
public class SpellModifierBase : CacheBehaviour
{
	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public AmmoBehaviour m_ammo;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public Ammo m_ammoData;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	protected ModifierData _modifierData;

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xF5C0EC", Offset = "0xF5C0EC", VA = "0xF5C0EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xF5C168", Offset = "0xF5C168", VA = "0xF5C168", Slot = "4")]
	public virtual void OnStart()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xF5C16C", Offset = "0xF5C16C", VA = "0xF5C16C", Slot = "5")]
	public virtual void OnImpact([Optional] Collider other)
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xF5C170", Offset = "0xF5C170", VA = "0xF5C170", Slot = "6")]
	public virtual void SetModifierData(ModifierData value)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xF5C178", Offset = "0xF5C178", VA = "0xF5C178")]
	public SpellModifierBase()
	{
	}
}
[Token(Token = "0x20001A8")]
public class SpreadModifier : SpellModifierBase
{
	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Vector2 m_layoutOfDispersion;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int m_offset;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Transform _parent;

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xF602F8", Offset = "0xF602F8", VA = "0xF602F8", Slot = "4")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xF60864", Offset = "0xF60864", VA = "0xF60864")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xF60980", Offset = "0xF60980", VA = "0xF60980", Slot = "6")]
	public override void SetModifierData(ModifierData value)
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xF60A30", Offset = "0xF60A30", VA = "0xF60A30")]
	public SpreadModifier()
	{
	}
}
[Token(Token = "0x20001A9")]
public class HomingLock : CacheBehaviour
{
	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float m_timeForLock;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObjectUnityEvent OnTargetLocked;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDCEFC", Offset = "0xBDCEFC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDCEFC", Offset = "0xBDCEFC")]
	public TextMeshPro m_uiCounter;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject m_homingLockPrefab;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject m_targetLockedGO;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject m_objectToDestroy;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public HomingModifierData m_data;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public HomingModifierData m_dataLeft;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[HideInInspector]
	public bool m_isRight;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[HideInInspector]
	public int m_countToLock;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public List<Transform> m_targets;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject _currentTarget;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Transform _currentTargetTransform;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool _timingStarted;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float _currTiming;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool _targetLocked;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private MaterialPropertyBlock _mpb;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Renderer _renderer;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private GameObject _homingLock;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Material _homingLockMat;

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xF244BC", Offset = "0xF244BC", VA = "0xF244BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xF24758", Offset = "0xF24758", VA = "0xF24758")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xF24A40", Offset = "0xF24A40", VA = "0xF24A40")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xF2471C", Offset = "0xF2471C", VA = "0xF2471C")]
	public void ResetLaser()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xF24B7C", Offset = "0xF24B7C", VA = "0xF24B7C")]
	public HomingLock()
	{
	}
}
[Token(Token = "0x20001AA")]
public class Projectile : AmmoBehaviour
{
	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool m_notMoving;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Vector3 m_direction;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	protected float _propulsionFuelTime;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	protected float _propulsionForce;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	protected Vector2Int _dispersion;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	protected float _speed;

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xEEF5AC", Offset = "0xEEF5AC", VA = "0xEEF5AC")]
	public new void Start()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xEEF67C", Offset = "0xEEF67C", VA = "0xEEF67C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xEEF7FC", Offset = "0xEEF7FC", VA = "0xEEF7FC")]
	public Projectile()
	{
	}
}
[Token(Token = "0x20001AB")]
public class ProjectileAlongRay : AmmoBehaviour
{
	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool m_useLayerMaskFilter;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public LayerMask m_layerToCollideWith;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public IntUnityEvent OnFinishAction;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public UnityEvent OnDisable;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Ray _ray;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector3 _target;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float _speed;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Vector3 _movementVector;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float _timer;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool _overrideCollision;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	private bool _finished;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private AmmoBehaviour _otherAmmoBehav;

	[Token(Token = "0x17000093")]
	public Vector3 MovementVector
	{
		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xEEFCDC", Offset = "0xEEFCDC", VA = "0xEEFCDC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000A45")]
		[Address(RVA = "0xEEFCEC", Offset = "0xEEFCEC", VA = "0xEEFCEC")]
		set
		{
		}
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xEEF804", Offset = "0xEEF804", VA = "0xEEF804")]
	public new void Start()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xEEF98C", Offset = "0xEEF98C", VA = "0xEEF98C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xEEFAE0", Offset = "0xEEFAE0", VA = "0xEEFAE0", Slot = "4")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xEEFCFC", Offset = "0xEEFCFC", VA = "0xEEFCFC")]
	public ProjectileAlongRay()
	{
	}
}
[Token(Token = "0x20001AC")]
public class ProjectileHomingTorpedo : AmmoBehaviour
{
	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 _dir;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Transform m_target;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float m_speed;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float m_time;

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xEEFD04", Offset = "0xEEFD04", VA = "0xEEFD04")]
	public new void Start()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xEEFDCC", Offset = "0xEEFDCC", VA = "0xEEFDCC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xEEFE60", Offset = "0xEEFE60", VA = "0xEEFE60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xEF0134", Offset = "0xEF0134", VA = "0xEF0134")]
	public ProjectileHomingTorpedo()
	{
	}
}
[Token(Token = "0x20001AD")]
public class Ammo : ScriptableObject
{
	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_ammoToSpawn;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_size;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDCF8C", Offset = "0xBDCF8C")]
	public float m_defaultSize;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDCFC4", Offset = "0xBDCFC4")]
	public float m_autoDestructTimer;

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x111A21C", Offset = "0x111A21C", VA = "0x111A21C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x111A220", Offset = "0x111A220", VA = "0x111A220")]
	public Ammo()
	{
	}
}
[Token(Token = "0x20001AE")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD0E54", Offset = "0xBD0E54")]
public class AmmoExchangeData : Ammo
{
	[Token(Token = "0x200063E")]
	public enum VariableType
	{
		[Token(Token = "0x4001F51")]
		FLOAT,
		[Token(Token = "0x4001F52")]
		INT
	}

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDCFFC", Offset = "0xBDCFFC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDCFFC", Offset = "0xBDCFFC")]
	public VariableType m_variableToDecrementType;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FloatVariable m_variableToDecrementFloat;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_floatValueToDecrement;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public IntVariable m_variableToDecrementInt;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_intValueToDecrement;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDD04C", Offset = "0xBDD04C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD04C", Offset = "0xBDD04C")]
	public VariableType m_variableToIncrementType;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FloatVariable m_variableToIncrementFloat;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_floatValueToIncrement;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public IntVariable m_variableToIncrementInt;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int m_intValueToIncrement;

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x111C8C8", Offset = "0x111C8C8", VA = "0x111C8C8")]
	public AmmoExchangeData()
	{
	}
}
[Token(Token = "0x20001AF")]
public abstract class AmmoGearData : Ammo
{
	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD09C", Offset = "0xBDD09C")]
	public int m_gearHP;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD0D4", Offset = "0xBDD0D4")]
	public float m_gearLongevity;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD10C", Offset = "0xBDD10C")]
	public Label m_spawner;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD144", Offset = "0xBDD144")]
	public Label m_spawnerRight;

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x111C8E0", Offset = "0x111C8E0", VA = "0x111C8E0")]
	protected AmmoGearData()
	{
	}
}
[Token(Token = "0x20001B0")]
public class AmmoGearMineralShield : AmmoGearShieldData
{
	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD17C", Offset = "0xBDD17C")]
	public float m_distanceOffset;

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x111C8F8", Offset = "0x111C8F8", VA = "0x111C8F8")]
	public AmmoGearMineralShield()
	{
	}
}
[Token(Token = "0x20001B1")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD0EB4", Offset = "0xBD0EB4")]
public class AmmoGearShieldData : AmmoGearData
{
	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD1B4", Offset = "0xBDD1B4")]
	public bool m_reflect;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObjectIntUnityEvent OnShieldDestroyed;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD1EC", Offset = "0xBDD1EC")]
	public Event m_shieldHitAudioEvent;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Event m_shieldDestroyAudioEvent;

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x111C910", Offset = "0x111C910", VA = "0x111C910")]
	public AmmoGearShieldData()
	{
	}
}
[Token(Token = "0x20001B2")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD0F14", Offset = "0xBD0F14")]
public class AmmoHoldData : Ammo
{
	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD224", Offset = "0xBDD224")]
	public float m_lifeTime;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD25C", Offset = "0xBDD25C")]
	public float m_intervalDamages;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD294", Offset = "0xBDD294")]
	public int m_damages;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD2CC", Offset = "0xBDD2CC")]
	public bool m_increasingDamagesOvertime;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD304", Offset = "0xBDD304")]
	public float m_ratioToIncrease;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD33C", Offset = "0xBDD33C")]
	public Event m_audioEventOnStopHolding;

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x111C928", Offset = "0x111C928", VA = "0x111C928")]
	public AmmoHoldData()
	{
	}
}
[Token(Token = "0x20001B3")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD0F74", Offset = "0xBD0F74")]
public class AmmoHomingTorpedo : Ammo
{
	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD374", Offset = "0xBDD374")]
	public Transform m_target;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD3AC", Offset = "0xBDD3AC")]
	public float m_speed;

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x111C94C", Offset = "0x111C94C", VA = "0x111C94C")]
	public AmmoHomingTorpedo()
	{
	}
}
[Token(Token = "0x20001B4")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD0FD4", Offset = "0xBD0FD4")]
public class AmmoProjectile : Ammo
{
	[Token(Token = "0x200063F")]
	public enum EType
	{
		[Token(Token = "0x4001F54")]
		NONE,
		[Token(Token = "0x4001F55")]
		EXPLOSIVE
	}

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD3E4", Offset = "0xBDD3E4")]
	public float m_damage;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD41C", Offset = "0xBDD41C")]
	public float m_speed;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD454", Offset = "0xBDD454")]
	public float m_propulsionFuelTime;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD48C", Offset = "0xBDD48C")]
	public float m_propulsionRatio;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD4C4", Offset = "0xBDD4C4")]
	public Vector2Int m_layoutOfDispersion;

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x111C964", Offset = "0x111C964", VA = "0x111C964")]
	public AmmoProjectile()
	{
	}
}
[Token(Token = "0x20001B5")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1034", Offset = "0xBD1034")]
public class AmmoProjectileRay : Ammo
{
	[Token(Token = "0x2000640")]
	public enum EType
	{
		[Token(Token = "0x4001F57")]
		NONE,
		[Token(Token = "0x4001F58")]
		EXPLOSIVE
	}

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD4FC", Offset = "0xBDD4FC")]
	public float m_damage;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD534", Offset = "0xBDD534")]
	public float m_speed;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public Ray m_ray;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public Vector3 m_target;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public float m_timer;

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x111C97C", Offset = "0x111C97C", VA = "0x111C97C")]
	public AmmoProjectileRay()
	{
	}
}
[Token(Token = "0x20001B6")]
public class AmmoRayData : Ammo
{
	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD59C", Offset = "0xBDD59C")]
	public float m_reachValue;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD5D4", Offset = "0xBDD5D4")]
	public float m_rayLongevity;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD60C", Offset = "0xBDD60C")]
	public Vector2Int m_rayDispersion;

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x111C994", Offset = "0x111C994", VA = "0x111C994")]
	public AmmoRayData()
	{
	}
}
[Token(Token = "0x20001B7")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1094", Offset = "0xBD1094")]
public class AmmoSlashData : AmmoProjectile
{
	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD644", Offset = "0xBDD644")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDD644", Offset = "0xBDD644")]
	public bool m_scaleSlash;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float m_minScale;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float m_maxScale;

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x111C9AC", Offset = "0x111C9AC", VA = "0x111C9AC")]
	public AmmoSlashData()
	{
	}
}
[Token(Token = "0x20001B8")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD10F4", Offset = "0xBD10F4")]
public class AmmoTotemData : AmmoGearData
{
	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool m_isOffensive;

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x111C9C4", Offset = "0x111C9C4", VA = "0x111C9C4")]
	public AmmoTotemData()
	{
	}
}
[Token(Token = "0x20001B9")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1154", Offset = "0xBD1154")]
public class UltimeDotDamageAmmoData : Ammo
{
	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD694", Offset = "0xBDD694")]
	public ObjectArrayGameEvent DotDamageEvent;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD6CC", Offset = "0xBDD6CC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDD6CC", Offset = "0xBDD6CC")]
	public float m_intervalBetweenDot;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD71C", Offset = "0xBDD71C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDD71C", Offset = "0xBDD71C")]
	public float m_stopAfterTime;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD76C", Offset = "0xBDD76C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDD76C", Offset = "0xBDD76C")]
	public float m_delayBeforeHit;

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xF77064", Offset = "0xF77064", VA = "0xF77064")]
	public UltimeDotDamageAmmoData()
	{
	}
}
[Token(Token = "0x20001BA")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD11B4", Offset = "0xBD11B4")]
public class UltimeOneHitAmmoData : Ammo
{
	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_delayBeforeHit;

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xF7706C", Offset = "0xF7706C", VA = "0xF7706C")]
	public UltimeOneHitAmmoData()
	{
	}
}
[Token(Token = "0x20001BB")]
public class UltimeDotDamageAmmoBehaviour : AmmoBehaviour
{
	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public ObjectArrayGameEvent DotDamageEvent;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	protected UltimeDotDamageAmmoData _data;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	protected float _intervalBetweenDot;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	protected int _dotDamage;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected float _totalTime;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	protected bool _destroyAfterTime;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected object[] _dotParams;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float _delay;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private bool _delayEnded;

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xF76848", Offset = "0xF76848", VA = "0xF76848")]
	private void LaunchDotDamage()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xF76974", Offset = "0xF76974", VA = "0xF76974")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xF76C2C", Offset = "0xF76C2C", VA = "0xF76C2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xF76E1C", Offset = "0xF76E1C", VA = "0xF76E1C")]
	public void OnActorCreated(int instanceId)
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xF7705C", Offset = "0xF7705C", VA = "0xF7705C")]
	public UltimeDotDamageAmmoBehaviour()
	{
	}
}
[Token(Token = "0x20001BC")]
public class UltimeOneShotAmmoBehaviour : AmmoBehaviour
{
	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<DestroyObjectOnTriggerEnter> _hpManagers;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float _destructTime;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float _delay;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool _delayEnded;

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xF77074", Offset = "0xF77074", VA = "0xF77074")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xF7736C", Offset = "0xF7736C", VA = "0xF7736C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xF77450", Offset = "0xF77450", VA = "0xF77450")]
	private void Hit()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xF776FC", Offset = "0xF776FC", VA = "0xF776FC")]
	public UltimeOneShotAmmoBehaviour()
	{
	}
}
[Token(Token = "0x20001BD")]
public class RaisingEventWhenTutoPlanetRegenerated : MonoBehaviour
{
	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoolVariable m_boolTutorialCombat;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnTutoPlanetRegenerated;

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xE3B538", Offset = "0xE3B538", VA = "0xE3B538")]
	public void OnTutoPlanetRegeneration()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xE3B58C", Offset = "0xE3B58C", VA = "0xE3B58C")]
	public RaisingEventWhenTutoPlanetRegenerated()
	{
	}
}
[Token(Token = "0x20001BE")]
public class RaisingGenericEventWhenBooleanIsFalse : MonoBehaviour
{
	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoolVariable m_GenericBoolean;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent GenericEventWhenFalse;

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xE3B594", Offset = "0xE3B594", VA = "0xE3B594")]
	public void OnRaisingGenericEvent()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xE3B608", Offset = "0xE3B608", VA = "0xE3B608")]
	public RaisingGenericEventWhenBooleanIsFalse()
	{
	}
}
[Token(Token = "0x20001BF")]
public class RaisingGenericEventWhenBooleanIsTrueOrFalse : MonoBehaviour
{
	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoolVariable m_GenericBooleanFalsePerDefault;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BoolVariable m_GenericBooleanTruePerDefault;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent GenericEventWhenTrue;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent GenericEventWhenFalse;

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xE3B610", Offset = "0xE3B610", VA = "0xE3B610")]
	public void OnRaisingGenericEventWhenTrue()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xE3B684", Offset = "0xE3B684", VA = "0xE3B684")]
	public void OnRaisingGenericEventWhenFalse()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xE3B6F8", Offset = "0xE3B6F8", VA = "0xE3B6F8")]
	public RaisingGenericEventWhenBooleanIsTrueOrFalse()
	{
	}
}
[Token(Token = "0x20001C0")]
public class AutoAimSolver : CacheBehaviour
{
	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD7BC", Offset = "0xBDD7BC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD7BC", Offset = "0xBDD7BC")]
	public AutoAimTier[] m_autoAimTiers;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObjectVariable m_mostPertinentTarget;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UnityEvent OnRefreshMostPertinentTarget;

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xECD4F0", Offset = "0xECD4F0", VA = "0xECD4F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xECD5F0", Offset = "0xECD5F0", VA = "0xECD5F0")]
	public void ResetMostPertinentTarget()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xECD618", Offset = "0xECD618", VA = "0xECD618")]
	public void RefreshMostPertinentTarget()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xECDCEC", Offset = "0xECDCEC", VA = "0xECDCEC")]
	public AutoAimSolver()
	{
	}
}
[Token(Token = "0x20001C1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD1214", Offset = "0xBD1214")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD1214", Offset = "0xBD1214")]
public class AutoAimTier : CacheBehaviour
{
	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD81C", Offset = "0xBDD81C")]
	public List<Label> m_labelsToFind;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD854", Offset = "0xBDD854")]
	public UnityEvent OnTargetListDirty;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<Transform> _currentTargets;

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xECDCF4", Offset = "0xECDCF4", VA = "0xECDCF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xECDDA0", Offset = "0xECDDA0", VA = "0xECDDA0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xECE6F0", Offset = "0xECE6F0", VA = "0xECE6F0")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xECE6F4", Offset = "0xECE6F4", VA = "0xECE6F4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xECE834", Offset = "0xECE834", VA = "0xECE834")]
	public void RemoveCurrentTargets()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xECD7DC", Offset = "0xECD7DC", VA = "0xECD7DC")]
	public Transform GetMostPertinentTarget()
	{
		return null;
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xECDF00", Offset = "0xECDF00", VA = "0xECDF00")]
	private bool GetTargetFromLabelHolder(Collider other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xECE2A4", Offset = "0xECE2A4", VA = "0xECE2A4")]
	private bool GetTargetFromLabelsHolder(Collider other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xECE88C", Offset = "0xECE88C", VA = "0xECE88C")]
	public AutoAimTier()
	{
	}
}
[Token(Token = "0x20001C2")]
public class CalibrationManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000641")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8418", Offset = "0xBD8418")]
	private sealed class <>c
	{
		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<float, float> <>9__7_0;

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<IGrouping<float, float>, int> <>9__7_1;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<IGrouping<float, float>, float> <>9__7_2;

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0xED7E20", Offset = "0xED7E20", VA = "0xED7E20")]
		public <>c()
		{
		}

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0xED7E28", Offset = "0xED7E28", VA = "0xED7E28")]
		internal float <Update>b__7_0(float i)
		{
			return default(float);
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0xED7E2C", Offset = "0xED7E2C", VA = "0xED7E2C")]
		internal int <Update>b__7_1(IGrouping<float, float> grp)
		{
			return default(int);
		}

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0xED7E7C", Offset = "0xED7E7C", VA = "0xED7E7C")]
		internal float <Update>b__7_2(IGrouping<float, float> grp)
		{
			return default(float);
		}
	}

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD88C", Offset = "0xBDD88C")]
	public GameObject m_magicCircle;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD8C4", Offset = "0xBDD8C4")]
	public GameObjectVariable m_leftHand;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObjectVariable m_rightHand;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FloatVariable m_calibrationTime;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FloatVariable m_calibrationProgress;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDD8FC", Offset = "0xBDD8FC")]
	public UnityEvent m_calibrationFinished;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _started;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _finished;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _time;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<float> _calibrations;

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xED77F0", Offset = "0xED77F0", VA = "0xED77F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xED7860", Offset = "0xED7860", VA = "0xED7860")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xED7D2C", Offset = "0xED7D2C", VA = "0xED7D2C")]
	public void OnCalibrationStarted()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xED7D70", Offset = "0xED7D70", VA = "0xED7D70")]
	public void OnCalibrationFinished()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xED7DB0", Offset = "0xED7DB0", VA = "0xED7DB0")]
	public CalibrationManager()
	{
	}
}
[Token(Token = "0x20001C3")]
public struct BoidSequenceData : ISharedComponentData
{
	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int m_sequenceId;
}
[Token(Token = "0x20001C4")]
public struct AddingBoidComponentJob : IJob
{
	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[ReadOnly]
	public EntityCommandBuffer CommandBuffer;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public NativeArray<Entity> m_entities;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ReadOnly]
	public Boid settings;

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xD00D68", Offset = "0xD00D68", VA = "0xD00D68", Slot = "4")]
	public void Execute()
	{
	}
}
[Token(Token = "0x20001C5")]
public class BoidBankSystem : JobComponentSystem
{
	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EntityManager _entityManager;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private EntityArchetype _boidArchetype;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private EntityQuery _allBoidQuery;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private EntityQuery _boidQuery;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private EntityQuery _boidQueryWithoutSequence;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Boid _boidTemplate;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private RenderMesh _renderMeshTemplate;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private LocalToWorld _localToWorldTemplate;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private LocalToWorld _cachedLocalToWorld;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Unity.Mathematics.Random _bakedRandom;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private SimulationsData _simulationData;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private EndSimulationEntityCommandBufferSystem _commandBufferSystem;

	[Token(Token = "0x17000094")]
	public SimulationsData m_simulationData
	{
		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0xECF574", Offset = "0xECF574", VA = "0xECF574")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0xECF57C", Offset = "0xECF57C", VA = "0xECF57C")]
		set
		{
		}
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xECF6B0", Offset = "0xECF6B0", VA = "0xECF6B0", Slot = "4")]
	protected override void OnCreate()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xECFB7C", Offset = "0xECFB7C", VA = "0xECFB7C", Slot = "13")]
	protected override JobHandle OnUpdate(JobHandle inputDeps)
	{
		return default(JobHandle);
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xECFB88", Offset = "0xECFB88", VA = "0xECFB88")]
	public void GetOrCreate(ref NativeArray<Entity> returnedArray, float3 position, [Optional] ComponentType[] componentsToAdd, int sequenceId = -1)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xED0130", Offset = "0xED0130", VA = "0xED0130")]
	public void FreeBoidWithSequenceID(int sequenceId)
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xECFDB4", Offset = "0xECFDB4", VA = "0xECFDB4")]
	public void Get(ref NativeArray<Entity> nativeArray, float3 position, [Optional] ComponentType[] componentsToAdd, int sequenceId = -1)
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xED08B0", Offset = "0xED08B0", VA = "0xED08B0")]
	public void Get(ref NativeArray<Entity> nativeArray, [Optional] ComponentType[] componentsToAdd, int sequenceId = -1)
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xED0268", Offset = "0xED0268", VA = "0xED0268")]
	private void InternalGet(ref NativeArray<Entity> nativeArray, float3 position, [Optional] ComponentType[] componentsToAdd, int sequenceId = -1, bool teleportBoid = false)
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xECFDBC", Offset = "0xECFDBC", VA = "0xECFDBC")]
	public void Create(ref NativeArray<Entity> creationArray, float3 positionToSpawn, bool isBoid, int sequenceId = -1)
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xED0938", Offset = "0xED0938", VA = "0xED0938")]
	public void ReleaseToBoid(NativeArray<Entity> entitiesToConvert, ComponentType[] componentsToRemove)
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xED0B0C", Offset = "0xED0B0C", VA = "0xED0B0C")]
	public void ReleaseToBoid(NativeList<Entity> entitiesToConvert, ComponentType[] componentsToRemove)
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xED0C70", Offset = "0xED0C70", VA = "0xED0C70")]
	public void ConvertTo(NativeArray<Entity> entitiesToConvert, ComponentType[] componentsToRemove, ComponentType[] componentsToAdd)
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xED0D64", Offset = "0xED0D64", VA = "0xED0D64")]
	public void ConvertTo(int sequenceId, ComponentType[] componentsToRemove, ComponentType[] componentsToAdd)
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xED1028", Offset = "0xED1028", VA = "0xED1028")]
	public void DestroyAllBoids()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xED11D8", Offset = "0xED11D8", VA = "0xED11D8")]
	public BoidBankSystem()
	{
	}
}
[Token(Token = "0x20001C6")]
public struct PathPointBuffer : IBufferElementData
{
	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float3 Value;
}
[Token(Token = "0x20001C7")]
[AttributeAttribute(Name = "WriteGroupAttribute", RVA = "0xBD12A0", Offset = "0xBD12A0")]
public struct FollowerSimulationDataComponent : IComponentData
{
	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint m_followerId;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint m_pathId;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float m_radius;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float m_rotateSpeed;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float m_followSpeed;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public short m_index;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool m_toremove;
}
[Token(Token = "0x20001C8")]
public struct PathDataComponent : IComponentData
{
	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool m_boidAutoGeneration;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public ushort m_numberOfBoid;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public bool m_isLooping;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float2 m_rangeOfRadius;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ushort m_granularityAlongCurve;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float2 m_rangeSpeed;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_followCurveSpeed;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public uint m_pathId;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ushort m_pathVersion;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_sequenceId;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool m_raiseEventAtEnd;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool m_boidRetrieved;
}
[Token(Token = "0x20001C9")]
public struct PathDataLiteComponent : ISharedComponentData
{
	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint m_pathId;
}
[Token(Token = "0x20001CA")]
public struct PathToDestroyLabelComponent : IComponentData
{
	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint m_pathId;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ushort m_pathVersion;
}
[Token(Token = "0x20001CB")]
public struct DestroyPathJob : IJobParallelFor
{
	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[ReadOnly]
	public EntityCommandBuffer CommandBuffer;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public NativeArray<Entity> m_pathsToDestroy;

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xCE30F4", Offset = "0xCE30F4", VA = "0xCE30F4", Slot = "4")]
	public void Execute(int i)
	{
	}
}
[Token(Token = "0x20001CC")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0xBD1304", Offset = "0xBD1304")]
public struct FollowerSimulationJob : IJobForEachWithEntity<FollowerSimulationDataComponent, LocalToWorld>, IJobForEachWithEntity_ECC<FollowerSimulationDataComponent, LocalToWorld>, JobForEachExtensions.IBaseJobForEach_ECC, JobForEachExtensions.IBaseJobForEach
{
	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[ReadOnly]
	public uint m_pathId;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[ReadOnly]
	public DynamicBuffer<PathPointBuffer> m_pathPoints;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ReadOnly]
	public int m_numberOfBoid;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[ReadOnly]
	public bool m_curveLoop;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[ReadOnly]
	public float m_time;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[ReadOnly]
	public float m_deltaTime;

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xCE31F8", Offset = "0xCE31F8", VA = "0xCE31F8", Slot = "4")]
	public void Execute(Entity entity, int i, ref FollowerSimulationDataComponent fs, ref LocalToWorld localToWorld)
	{
	}
}
[Token(Token = "0x20001CD")]
public struct MoveFollowersJob : IJobForEachWithEntity<FollowerSimulationDataComponent, LocalToWorld>, IJobForEachWithEntity_ECC<FollowerSimulationDataComponent, LocalToWorld>, JobForEachExtensions.IBaseJobForEach_ECC, JobForEachExtensions.IBaseJobForEach
{
	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public EntityCommandBuffer CommandBuffer;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[ReadOnly]
	public NativeArray<float4> m_positions;

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xD038EC", Offset = "0xD038EC", VA = "0xD038EC", Slot = "4")]
	public void Execute(Entity entity, int i, ref FollowerSimulationDataComponent fs, ref LocalToWorld localToWorld)
	{
	}
}
[Token(Token = "0x20001CE")]
public struct RemoveFollowerJob : IJob
{
	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public NativeArray<FollowerSimulationDataComponent> m_followersData;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public NativeArray<Entity> m_followers;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NativeList<Entity> m_backToBoid;

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xCE1808", Offset = "0xCE1808", VA = "0xCE1808", Slot = "4")]
	public void Execute()
	{
	}
}
[Token(Token = "0x20001CF")]
public class JobPathFollowerSystem : JobComponentSystem
{
	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SimulationsData m_simulationData;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public IntGameEvent m_onEndPath;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[ReadOnly]
	public ComponentType[] m_components;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private EntityQuery _boidQuery;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private EntityQuery _followersQuery;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private EntityQuery _boidSequenceQuery;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private EntityQuery _curveQuery;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private EntityQuery _pathToDestroyQuery;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private EntityManager _entityManager;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Unity.Mathematics.Random _bakedRandom;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Dictionary<uint, DynamicBuffer<PathPointBuffer>> _pathPoints;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<Entity> _pathDatas;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<uint> _pathIds;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private EntityCommandBufferSystem _commandBufferSystem;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private DestroyPathJob _destroyPathJob;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private RemoveFollowerJob _removeFollowJob;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private JobHandle _destroyPathHandle;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private JobHandle _calculPosHandle;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private JobHandle _removeFollowHandle;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private BoidBankSystem _boidBankSystem;

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xF31AF4", Offset = "0xF31AF4", VA = "0xF31AF4", Slot = "4")]
	protected override void OnCreate()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xF32160", Offset = "0xF32160", VA = "0xF32160", Slot = "7")]
	protected override void OnStartRunning()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xF323E4", Offset = "0xF323E4", VA = "0xF323E4", Slot = "13")]
	protected override JobHandle OnUpdate(JobHandle inputDeps)
	{
		return default(JobHandle);
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xF330B4", Offset = "0xF330B4", VA = "0xF330B4")]
	protected void MoveFollowers(NativeArray<Entity> followers, float percentage, NativeList<float> followSpeed, NativeList<float3> curPositions, NativeArray<float3> posToGoList)
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xF32DF8", Offset = "0xF32DF8", VA = "0xF32DF8")]
	protected bool CreateBoid(int numberOfBoids, PathDataComponent data, int pathLength, float3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xF32F04", Offset = "0xF32F04", VA = "0xF32F04")]
	protected bool RetrieveBoid(int numberOfBoids, PathDataComponent data, int pathLength, float3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xF334DC", Offset = "0xF334DC", VA = "0xF334DC")]
	protected void SettingUsefulComponentsToFollowers(NativeArray<Entity> followers, PathDataComponent data, int pathLength)
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xF3325C", Offset = "0xF3325C", VA = "0xF3325C")]
	protected void AddingUsefulComponentsToFollowers(NativeArray<Entity> followers, PathDataComponent data, int pathLength)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xF322BC", Offset = "0xF322BC", VA = "0xF322BC")]
	protected void AddPathData(Entity curveData)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xF3375C", Offset = "0xF3375C", VA = "0xF3375C")]
	public JobPathFollowerSystem()
	{
	}
}
[Token(Token = "0x20001D0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD1314", Offset = "0xBD1314")]
public class CinemachinePathBaker : CacheBehaviour
{
	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Color m_colorOfDebugSphere;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDD9E4", Offset = "0xBDD9E4")]
	public float m_sizeOfDebugSphere;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDDA00", Offset = "0xBDDA00")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDDA00", Offset = "0xBDDA00")]
	public bool m_boidAutoGenerated;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int m_granularityAlongCurve;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int m_numberOfBoid;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float2 m_rangeOfRadius;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float2 m_rangeSpeed;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float m_followCurveSpeed;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public bool m_raiseEventAtEnd;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int m_sequenceId;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float3[] _bakedPoints;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private EntityManager _entityManager;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Entity _followDataHolder;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private PathDataComponent _pathData;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private uint _pathId;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private ushort _pathVersion;

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xED9D58", Offset = "0xED9D58", VA = "0xED9D58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xED9D5C", Offset = "0xED9D5C", VA = "0xED9D5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xEDA004", Offset = "0xEDA004", VA = "0xEDA004")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xEDA008", Offset = "0xEDA008", VA = "0xEDA008")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xEDA110", Offset = "0xEDA110", VA = "0xEDA110")]
	public void OnEndPath(int sequenceId)
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xEDA12C", Offset = "0xEDA12C", VA = "0xEDA12C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xEDA32C", Offset = "0xEDA32C", VA = "0xEDA32C")]
	public CinemachinePathBaker()
	{
	}
}
[Token(Token = "0x20001D1")]
public struct PositionsToMagnetizeBuffer : IBufferElementData
{
	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float3 Value;
}
[Token(Token = "0x20001D2")]
public struct MagnetDataHolderLabelComponent : IComponentData
{
	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int m_sequenceId;
}
[Token(Token = "0x20001D3")]
[AttributeAttribute(Name = "WriteGroupAttribute", RVA = "0xBD1378", Offset = "0xBD1378")]
public struct MagnetComponent : IComponentData
{
}
[Serializable]
[Token(Token = "0x20001D4")]
public struct MagnetTargetComponent : IComponentData
{
	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float3 position;
}
[Token(Token = "0x20001D5")]
[DisallowMultipleComponent]
public class MagnetTargetComponentProxy : ComponentDataProxy<MagnetTargetComponent>
{
	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xFA8708", Offset = "0xFA8708", VA = "0xFA8708")]
	public MagnetTargetComponentProxy()
	{
	}
}
[Token(Token = "0x20001D6")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0xBD13EC", Offset = "0xBD13EC")]
public struct CalculPositionToMagnet : IJobParallelFor
{
	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public NativeArray<float3> m_positions;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float3 m_angle;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float3 m_position;

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xCE2DB8", Offset = "0xCE2DB8", VA = "0xCE2DB8", Slot = "4")]
	public void Execute(int index)
	{
	}
}
[Token(Token = "0x20001D7")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0xBD13FC", Offset = "0xBD13FC")]
internal struct UpdateMagnetPosition : IJobForEachWithEntity<LocalToWorld>, IJobForEachWithEntity_EC<LocalToWorld>, JobForEachExtensions.IBaseJobForEach_EC, JobForEachExtensions.IBaseJobForEach
{
	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float m_speed;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float m_deltaTime;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[ReadOnly]
	public DynamicBuffer<PositionsToMagnetizeBuffer> m_magnetTarget;

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xCE3694", Offset = "0xCE3694", VA = "0xCE3694", Slot = "4")]
	public void Execute(Entity entity, int index, ref LocalToWorld localToWorld)
	{
	}
}
[Token(Token = "0x20001D8")]
public class JobMagnetSystem : JobComponentSystem
{
	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SimulationsData m_simulationData;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[ReadOnly]
	public ComponentType[] m_components;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private EntityManager _entityManager;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private EntityQuery _magnetizedQuery;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private EntityQuery _magnetDataHolderQuery;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private EntityQuery _boidsQuery;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Entity _allActorDataHolder;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private DynamicBuffer<PositionsToMagnetizeBuffer> _allActorDataBuffer;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Unity.Mathematics.Random _bakedRandom;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private BoidBankSystem _boidBankSystem;

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xF311BC", Offset = "0xF311BC", VA = "0xF311BC")]
	public void DestroyMagnetizedBoids(int sequenceId)
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xF31294", Offset = "0xF31294", VA = "0xF31294", Slot = "4")]
	protected override void OnCreate()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xF316FC", Offset = "0xF316FC", VA = "0xF316FC", Slot = "13")]
	protected override JobHandle OnUpdate(JobHandle inputDeps)
	{
		return default(JobHandle);
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xF313CC", Offset = "0xF313CC", VA = "0xF313CC")]
	private void SetupEntityQuery()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xF31A18", Offset = "0xF31A18", VA = "0xF31A18")]
	public JobMagnetSystem()
	{
	}
}
[Token(Token = "0x20001D9")]
public class RigBaker1 : CacheBehaviour
{
	[Token(Token = "0x2000642")]
	public struct BoneStructure
	{
		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform m_bone;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public BoneStructure[] m_childBones;
	}

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDDA70", Offset = "0xBDDA70")]
	public Transform m_magnetTargetPrefab;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform m_rootBone;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDDAA8", Offset = "0xBDDAA8")]
	public int m_granularityPerBone;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDDAC4", Offset = "0xBDDAC4")]
	public List<BoneStructure> m_bones;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Vector3[] _granularRigPosition;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform[] _granularRigTransform;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public EntityManager _entityManager;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Entity _jobMagnetDataHolder;

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xE3E7A8", Offset = "0xE3E7A8", VA = "0xE3E7A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xE3EEC0", Offset = "0xE3EEC0", VA = "0xE3EEC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xE3EF54", Offset = "0xE3EF54", VA = "0xE3EF54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xE3E8D0", Offset = "0xE3E8D0", VA = "0xE3E8D0")]
	private BoneStructure[] GetChildBones(Transform childTransform)
	{
		return null;
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xE3EBD8", Offset = "0xE3EBD8", VA = "0xE3EBD8")]
	private Transform[] CreateGranularEntities(BoneStructure bonesStructure)
	{
		return null;
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xE3EFCC", Offset = "0xE3EFCC", VA = "0xE3EFCC")]
	private Vector3[] GetGranularBones(BoneStructure bonesStructure)
	{
		return null;
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xE3F4B0", Offset = "0xE3F4B0", VA = "0xE3F4B0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xE3F564", Offset = "0xE3F564", VA = "0xE3F564")]
	public RigBaker1()
	{
	}
}
[Token(Token = "0x20001DA")]
public class SkinnedMeshBaker : CacheBehaviour
{
	[Serializable]
	[Token(Token = "0x2000643")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8428", Offset = "0xBD8428")]
	private sealed class <>c
	{
		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<SkinnedMeshRenderer, bool> <>9__21_0;

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0xF54384", Offset = "0xF54384", VA = "0xF54384")]
		public <>c()
		{
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0xF5438C", Offset = "0xF5438C", VA = "0xF5438C")]
		internal bool <UpdateBuffer>b__21_0(SkinnedMeshRenderer c)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDDAFC", Offset = "0xBDDAFC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDDAFC", Offset = "0xBDDAFC")]
	public string m_prefixToIgnore;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string m_prefixToConvertIntoInvulnerable;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public IntIntUnityEvent OnActorTouched;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public IntUnityEvent OnActorFullParts;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public CustomActionUnityEvent OnActionTouched;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool m_useHurt;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AnimationActionData m_AnimationActionData;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public int m_currentMagnetCount;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject m_actorRoot;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[HideInInspector]
	private int _sequenceId;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private SkinnedMeshRenderer[] _skinnedMeshRenderers;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private EntityManager _entityManager;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Entity _entityDataHolder;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private MagnetDataHolderLabelComponent _magnetData;

	[Token(Token = "0x17000095")]
	public int m_sequenceId
	{
		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xF53184", Offset = "0xF53184", VA = "0xF53184")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0xF5318C", Offset = "0xF5318C", VA = "0xF5318C")]
		set
		{
		}
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xF53290", Offset = "0xF53290", VA = "0xF53290")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xF53354", Offset = "0xF53354", VA = "0xF53354")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xF538EC", Offset = "0xF538EC", VA = "0xF538EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xF53E1C", Offset = "0xF53E1C", VA = "0xF53E1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xF53F5C", Offset = "0xF53F5C", VA = "0xF53F5C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xF533E0", Offset = "0xF533E0", VA = "0xF533E0")]
	private SkinnedMeshRenderer[] GetAllChildSkinnedMeshes()
	{
		return null;
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xF53760", Offset = "0xF53760", VA = "0xF53760")]
	private void CreateEntityDataHolder()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xF537F4", Offset = "0xF537F4", VA = "0xF537F4")]
	private void CreatePhysicsGeometry()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xF538F0", Offset = "0xF538F0", VA = "0xF538F0")]
	private void UpdateBuffer()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xF54158", Offset = "0xF54158", VA = "0xF54158")]
	public void OnTouched(int instanceID)
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xF5406C", Offset = "0xF5406C", VA = "0xF5406C")]
	private NativeArray<float3> GetNativeVertexArrays(Vector3[] vertexArray)
	{
		return default(NativeArray<float3>);
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xF54294", Offset = "0xF54294", VA = "0xF54294")]
	public SkinnedMeshBaker()
	{
	}
}
[Token(Token = "0x20001DB")]
public class DestroyObjectOnTriggerEnter : CacheBehaviour
{
	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int m_hp;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public int m_maxHp;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject m_objectToDestroyOnContact;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float m_colliderSize;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Vector3UnityEvent OnDestroyPosition;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Vector3UnityEvent OnTouchSkeletonPosition;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public IntUnityEvent OnDestroy;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ObjectArrayUnityEvent OnDestroyObjectArray;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public IntUnityEvent OnGainHP;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public IntUnityEvent OnLoseHP;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public UnityEvent OnRefreshMaxHP;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public IntIntUnityEvent OnActorPart;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDDB6C", Offset = "0xBDDB6C")]
	public ObjectArrayUnityEvent OnHit;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bool m_hasSkeleton;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	public bool m_isDead;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private readonly string _ammoTag;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int _currentHp;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private int _maxHp;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool _isDead;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private int _enemyHitCountValue;

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xF0A498", Offset = "0xF0A498", VA = "0xF0A498")]
	public void RefreshMaxHP()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xF0A560", Offset = "0xF0A560", VA = "0xF0A560")]
	public void RefreshHp()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xF0A610", Offset = "0xF0A610", VA = "0xF0A610")]
	public int GetCurrentHP()
	{
		return default(int);
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xF0A618", Offset = "0xF0A618", VA = "0xF0A618")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xF0A6C8", Offset = "0xF0A6C8", VA = "0xF0A6C8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xF0AD60", Offset = "0xF0AD60", VA = "0xF0AD60")]
	public void OnDebugTouched()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xF0A828", Offset = "0xF0A828", VA = "0xF0A828")]
	public void DealDamage(int damage, bool crit)
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xF0AD70", Offset = "0xF0AD70", VA = "0xF0AD70")]
	public void Ressurect()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xF0AF44", Offset = "0xF0AF44", VA = "0xF0AF44")]
	public DestroyObjectOnTriggerEnter()
	{
	}
}
[Token(Token = "0x20001DC")]
public class DestroyObjectsOnTriggerEnter : CacheBehaviour
{
	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<GameObject> m_objectsToDestroyOnContact;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float m_colliderSize;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UnityEvent OnDestroy;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private readonly string _ammoTag;

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xF0AFAC", Offset = "0xF0AFAC", VA = "0xF0AFAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xF0B030", Offset = "0xF0B030", VA = "0xF0B030")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xF0B200", Offset = "0xF0B200", VA = "0xF0B200")]
	public DestroyObjectsOnTriggerEnter()
	{
	}
}
[Token(Token = "0x20001DD")]
public class OnMagnetTriggerEnter : MonoBehaviour
{
	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_ammoTag;

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x10D5E64", Offset = "0x10D5E64", VA = "0x10D5E64")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x10D606C", Offset = "0x10D606C", VA = "0x10D606C")]
	public OnMagnetTriggerEnter()
	{
	}
}
[Token(Token = "0x20001DE")]
public class RotationFollower : CacheBehaviour
{
	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform m_rotationTarget;

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xE40760", Offset = "0xE40760", VA = "0xE40760")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xE407AC", Offset = "0xE407AC", VA = "0xE407AC")]
	public RotationFollower()
	{
	}
}
[Token(Token = "0x20001DF")]
public class SnakeAI : CacheBehaviour
{
	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xF55114", Offset = "0xF55114", VA = "0xF55114")]
	public SnakeAI()
	{
	}
}
[Token(Token = "0x20001E0")]
public class DOTSManager : CacheBehaviour
{
	[Token(Token = "0x2000644")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8438", Offset = "0xBD8438")]
	private sealed class <DisablePathFollow>d__3 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DOTSManager <>4__this;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x17000367")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024E4")]
			[Address(RVA = "0xF05540", Offset = "0xF05540", VA = "0xF05540", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000368")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024E6")]
			[Address(RVA = "0xF055A8", Offset = "0xF055A8", VA = "0xF055A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024E1")]
		[Address(RVA = "0xF0541C", Offset = "0xF0541C", VA = "0xF0541C")]
		[DebuggerHidden]
		public <DisablePathFollow>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0xF054BC", Offset = "0xF054BC", VA = "0xF054BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024E3")]
		[Address(RVA = "0xF054C0", Offset = "0xF054C0", VA = "0xF054C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0xF05548", Offset = "0xF05548", VA = "0xF05548", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public IntGameEvent m_boidPathFollow_OnEndPath;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Expandable]
	public SimulationsData m_simulationConfig;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private World _world;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private JobMagnetSystem _jobMagnetSystem;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private JobPathFollowerSystem _boidPathFollow;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private BoidBankSystem _boidBankSystem;

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xF05188", Offset = "0xF05188", VA = "0xF05188")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xF053A0", Offset = "0xF053A0", VA = "0xF053A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE9E48", Offset = "0xBE9E48")]
	private IEnumerator<float> DisablePathFollow()
	{
		return null;
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xF05448", Offset = "0xF05448", VA = "0xF05448")]
	public void OnGameStarted()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xF054B4", Offset = "0xF054B4", VA = "0xF054B4")]
	public DOTSManager()
	{
	}
}
[Token(Token = "0x20001E1")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD140C", Offset = "0xBD140C")]
public class BoidData : ScriptableObject
{
	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh m_mesh;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material m_material;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDDBB4", Offset = "0xBDDBB4")]
	public int m_cellRadius;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int m_separationWeight;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_alignmentWeight;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int m_targetWeight;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int m_obstacleAversionDistance;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int m_moveSpeed;

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xED11E0", Offset = "0xED11E0", VA = "0xED11E0")]
	public BoidData()
	{
	}
}
[Token(Token = "0x20001E2")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD146C", Offset = "0xBD146C")]
public class MagnetData : ScriptableObject
{
	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_speed;

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xFA86F8", Offset = "0xFA86F8", VA = "0xFA86F8")]
	public MagnetData()
	{
	}
}
[Token(Token = "0x20001E3")]
public class PathFollowerData : ScriptableObject
{
	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDDBC8", Offset = "0xBDDBC8")]
	public GameObject m_curve;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_prefabOfBoid;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDDC00", Offset = "0xBDDC00")]
	public int m_numberOfBoid;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float2 m_rangeOfRadius;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int m_granularityAlongCurve;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float2 m_rangeSpeed;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_followCurveSpeed;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool m_isLooping;

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x136EEEC", Offset = "0x136EEEC", VA = "0x136EEEC")]
	public PathFollowerData()
	{
	}
}
[Token(Token = "0x20001E4")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD14CC", Offset = "0xBD14CC")]
public class SimulationsData : ScriptableObject
{
	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Expandable]
	public BoidData m_boidData;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDDC48", Offset = "0xBDDC48")]
	[Expandable]
	public MagnetData m_magnetData;

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xF5317C", Offset = "0xF5317C", VA = "0xF5317C")]
	public SimulationsData()
	{
	}
}
[Token(Token = "0x20001E5")]
public class ActorManager : CacheBehaviour
{
	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDDC84", Offset = "0xBDDC84")]
	public IntUnityEvent OnActorSpawned;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntUnityEvent OnRequestSnapPosition;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public IntUnityEvent OnStopSnapPosition;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public IntIntUnityEvent OnChangePattern;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public IntIntUnityEvent OnBypassPattern;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public IntUnityEvent OnChangePatternInstanceID;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDDCBC", Offset = "0xBDDCBC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDDCBC", Offset = "0xBDDCBC")]
	public Vector3IntGameEventListener m_snapGridListener;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float m_speed;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDDD0C", Offset = "0xBDDD0C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDDD0C", Offset = "0xBDDD0C")]
	public DestroyObjectOnTriggerEnter m_hpManager;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDDD5C", Offset = "0xBDDD5C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDDD5C", Offset = "0xBDDD5C")]
	[HideInInspector]
	public float m_timeBeforeStart;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[HideInInspector]
	public bool m_isDisabled;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[HideInInspector]
	public CustomActionData m_customActionCurrent;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public bool m_isInGrid;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDDDEC", Offset = "0xBDDDEC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDDDEC", Offset = "0xBDDDEC")]
	[HideInInspector]
	public IntUnityEvent OnBecameInvisibleEvent;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public IntUnityEvent OnBecameVisibleEvent;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public IntUnityEvent OnDestroyEvent;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public bool m_isDead;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	[HideInInspector]
	public bool m_fromSpawner;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
	public bool m_fakeFromSpawner;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x133")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDDE8C", Offset = "0xBDDE8C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDDE8C", Offset = "0xBDDE8C")]
	public bool m_SnapGridSound;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	protected int _instanceId;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected bool _started;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
	protected bool _lerping;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	protected Vector3 _lerpPosition;

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x141074C", Offset = "0x141074C", VA = "0x141074C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x1410784", Offset = "0x1410784", VA = "0x1410784")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x1410A30", Offset = "0x1410A30", VA = "0x1410A30")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x1410AD4", Offset = "0x1410AD4", VA = "0x1410AD4")]
	public void OnStun()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x1410ADC", Offset = "0x1410ADC", VA = "0x1410ADC")]
	public void ChangePattern(int pattern)
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x1410B7C", Offset = "0x1410B7C", VA = "0x1410B7C")]
	public void BypassPattern(int pattern)
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x1410BE8", Offset = "0x1410BE8", VA = "0x1410BE8")]
	public void OnSnap()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x1410BF0", Offset = "0x1410BF0", VA = "0x1410BF0")]
	public void OnSnap(int instanceId)
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x1410E3C", Offset = "0x1410E3C", VA = "0x1410E3C")]
	public void ExitSnap(int instanceId)
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x1410E6C", Offset = "0x1410E6C", VA = "0x1410E6C")]
	public void OnBecameVisible()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x1410EC8", Offset = "0x1410EC8", VA = "0x1410EC8")]
	public void OnBecameInvisible()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x1410F24", Offset = "0x1410F24", VA = "0x1410F24")]
	public void SetInstanceId(int instanceId)
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x1410F2C", Offset = "0x1410F2C", VA = "0x1410F2C", Slot = "4")]
	public virtual void OnReceivedSnapPosition(Vector3IntGameEventStruct str)
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x14112B4", Offset = "0x14112B4", VA = "0x14112B4")]
	public ActorManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20001E6")]
public struct IntIntGameEventStruct
{
	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int m_instanceId;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int m_parts;
}
[Serializable]
[Token(Token = "0x20001E7")]
public struct LabelVector3GameEventStruct
{
	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Label m_label;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector3 m_scale;
}
[Token(Token = "0x20001E8")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD152C", Offset = "0xBD152C")]
public class ActorData : ScriptableObject
{
	[Token(Token = "0x2000645")]
	private enum ActorType
	{
		[Token(Token = "0x4001F66")]
		ACTOR,
		[Token(Token = "0x4001F67")]
		SHIELD
	}

	[Serializable]
	[Token(Token = "0x2000646")]
	public struct Pattern
	{
		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_name;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Expandable]
		public PatternData m_patternData;
	}

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDDEDC", Offset = "0xBDDEDC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDDEDC", Offset = "0xBDDEDC")]
	public GameObject m_actorPrefab;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_ratioScale;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDDF2C", Offset = "0xBDDF2C")]
	public bool m_eventWait;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDDF64", Offset = "0xBDDF64")]
	public IntGameEvent m_startAction;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDDF9C", Offset = "0xBDDF9C")]
	public bool m_timeWait;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDDFD4", Offset = "0xBDDFD4")]
	public float m_timeToWaitBeforeStart;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE00C", Offset = "0xBDE00C")]
	public bool m_fromSpawner;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE044", Offset = "0xBDE044")]
	public bool m_useActorSpawnPoint;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE07C", Offset = "0xBDE07C")]
	public Label m_actorSpawnPoint;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE0B4", Offset = "0xBDE0B4")]
	public Pattern[] m_patterns;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE0EC", Offset = "0xBDE0EC")]
	public int m_numberOfSectionRemainingToKillActor;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE124", Offset = "0xBDE124")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDE124", Offset = "0xBDE124")]
	public bool m_useHp;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int m_hpCount;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public PatternData m_currentPattern;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public int m_currentPatternIndex;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public int m_instanceId;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public string m_type;

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x140F98C", Offset = "0x140F98C", VA = "0x140F98C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x140F9E0", Offset = "0x140F9E0", VA = "0x140F9E0")]
	public ActorData()
	{
	}
}
[Token(Token = "0x20001E9")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD158C", Offset = "0xBD158C")]
public class ActorSpawnedData : ScriptableObject
{
	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE1B4", Offset = "0xBDE1B4")]
	public ActorData m_actorData;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE1EC", Offset = "0xBDE1EC")]
	public int m_spawnRate;

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x14112C4", Offset = "0x14112C4", VA = "0x14112C4")]
	public ActorSpawnedData()
	{
	}
}
[Token(Token = "0x20001EA")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD15EC", Offset = "0xBD15EC")]
public class LevelSettingsCollection : Collection<LevelSettingsCollection.LevelSettingsWrapper>
{
	[Serializable]
	[Token(Token = "0x2000647")]
	public struct LevelSettingsWrapper
	{
		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int m_difficulty;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<LevelSettingsData> m_levelSettings;
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xF9F148", Offset = "0xF9F148", VA = "0xF9F148")]
	public LevelSettingsCollection()
	{
	}
}
[Token(Token = "0x20001EB")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1658", Offset = "0xBD1658")]
public class ShieldData : ActorData
{
	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public List<string> m_propertiesToHide;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE234", Offset = "0xBDE234")]
	public float m_orbitRadius;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE26C", Offset = "0xBDE26C")]
	public float m_orbitRoationSpeed;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public float m_orbitAlignToDirectionSpeed;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public Vector3 m_orbitAxis;

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xE4FC04", Offset = "0xE4FC04", VA = "0xE4FC04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xE4FC74", Offset = "0xE4FC74", VA = "0xE4FC74")]
	public ShieldData()
	{
	}
}
[Token(Token = "0x20001EC")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD16B8", Offset = "0xBD16B8")]
public class SpawnListData : ScriptableObject
{
	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE2C4", Offset = "0xBDE2C4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDE2C4", Offset = "0xBDE2C4")]
	public List<ActorListWrapper> m_spawnLines;

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xF5A33C", Offset = "0xF5A33C", VA = "0xF5A33C")]
	public SpawnListData()
	{
	}
}
[Serializable]
[Token(Token = "0x20001ED")]
public class SpawnListRate : ScriptableObject
{
	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_rate;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_spawnlistId;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpreadSheetData m_spawnlistSpreadsheet;

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xF5A3B8", Offset = "0xF5A3B8", VA = "0xF5A3B8")]
	public SpawnListRate()
	{
	}
}
[Token(Token = "0x20001EE")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1718", Offset = "0xBD1718")]
public class SpawnerData : ActorData
{
	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public int spawnListIndex;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public int m_currentEnemyCount;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int m_maxEnemyLimit;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SpawnActionData m_spawnAction;

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xF5BC44", Offset = "0xF5BC44", VA = "0xF5BC44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xF5BC98", Offset = "0xF5BC98", VA = "0xF5BC98")]
	public SpawnerData()
	{
	}
}
[Token(Token = "0x20001EF")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1778", Offset = "0xBD1778")]
public class SpawnerGroupCollection : Collection<SpawnerGroupData>
{
	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xF5BCA0", Offset = "0xF5BCA0", VA = "0xF5BCA0")]
	public SpawnerGroupCollection()
	{
	}
}
[Token(Token = "0x20001F0")]
public class SpawnerGroupData : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000648")]
	public struct SpawnlistRate
	{
		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int m_rate;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string m_spawnlistId;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpreadSheetData m_spawnlistSpreadsheet;
	}

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_name;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<SpawnlistRate> m_spawnlists;

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xF5BCF0", Offset = "0xF5BCF0", VA = "0xF5BCF0")]
	public SpawnerGroupData()
	{
	}
}
[Token(Token = "0x20001F1")]
public class ShieldActorManager : CacheBehaviour
{
	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public DestroyObjectOnTriggerEnter m_destroyObjectOnTriggerEnter;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public Transform m_targetToProtect;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public int m_targetToProtectInstanceId;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public float m_angleOffset;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool _orbiting;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 _orbitDesiredPosition;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 _previousPosition;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 _relativePos;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Quaternion _rotation;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private ShieldData _data;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float _orbitRadius;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float _orbitRoationSpeed;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 _orbitAxis;

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xE4F960", Offset = "0xE4F960", VA = "0xE4F960")]
	public void SetData(ShieldData value)
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xE4FA90", Offset = "0xE4FA90", VA = "0xE4FA90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xE4FA94", Offset = "0xE4FA94", VA = "0xE4FA94")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xE4FB64", Offset = "0xE4FB64", VA = "0xE4FB64")]
	public void OnActorSpawnedInstanceId(int instanceId)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xE4FB7C", Offset = "0xE4FB7C", VA = "0xE4FB7C")]
	public ShieldActorManager()
	{
	}
}
[Token(Token = "0x20001F2")]
public class SpawnerManager : CacheBehaviour
{
	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SpawnActionData m_spawnAction;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public CustomActionUnityEvent OnCustomActionEvent;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public int m_enemiesEachSpawn;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private CustomActionGameEventStruct _str;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool _ready;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private SpawnerData _spawnerData;

	[Token(Token = "0x17000096")]
	public SpawnerData SpawnerData
	{
		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xF5BF40", Offset = "0xF5BF40", VA = "0xF5BF40")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xF5BF48", Offset = "0xF5BF48", VA = "0xF5BF48")]
		set
		{
		}
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xF5BCF8", Offset = "0xF5BCF8", VA = "0xF5BCF8")]
	public void OnAskForEnemies()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xF5BFF4", Offset = "0xF5BFF4", VA = "0xF5BFF4")]
	public SpawnerManager()
	{
	}
}
[Token(Token = "0x20001F3")]
public class ActionManager : CacheBehaviour
{
	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public IntUnityEvent m_OnActorFinishedAction;

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x140F5D8", Offset = "0x140F5D8", VA = "0x140F5D8")]
	public ActionManager()
	{
	}
}
[Token(Token = "0x20001F4")]
public class AnimationManager : ActionManager
{
	[Token(Token = "0x2000649")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8448", Offset = "0xBD8448")]
	private sealed class <CheckAnimationEnd>d__4 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationManager <>4__this;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator animator;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationActionData animationAction;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WrapMode wrapMode;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int instanceId;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timer>5__2;

		[Token(Token = "0x17000369")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024EA")]
			[Address(RVA = "0x111E888", Offset = "0x111E888", VA = "0x111E888", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700036A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024EC")]
			[Address(RVA = "0x111E8F0", Offset = "0x111E8F0", VA = "0x111E8F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0x111DD38", Offset = "0x111DD38", VA = "0x111DD38")]
		[DebuggerHidden]
		public <CheckAnimationEnd>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0x111E1CC", Offset = "0x111E1CC", VA = "0x111E1CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024E9")]
		[Address(RVA = "0x111E1D0", Offset = "0x111E1D0", VA = "0x111E1D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0x111E890", Offset = "0x111E890", VA = "0x111E890", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Animator m_animatorTriacontt;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _paused;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool _pausedException;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int _instanceIdException;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Dictionary<int, CoroutineHandle> animationRoutines;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Dictionary<int, List<CoroutineHandle>> animationRoutinesList;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<Collider> _deactivatedCollider;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<Renderer> _deactivatedRenderer;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private List<GameObject> _deactivatedGameObjects;

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x111D06C", Offset = "0x111D06C", VA = "0x111D06C")]
	public void OnAnimationAction(CustomActionGameEventStruct str)
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x111D428", Offset = "0x111D428", VA = "0x111D428")]
	public void OnSetEnabledComponentAction(CustomActionGameEventStruct str)
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x111DBF0", Offset = "0x111DBF0", VA = "0x111DBF0")]
	public void OnChangePattern(int instanceId)
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x111D368", Offset = "0x111D368", VA = "0x111D368")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE9EAC", Offset = "0xBE9EAC")]
	private IEnumerator<float> CheckAnimationEnd(Animator animator, AnimationActionData animationAction, int instanceId, WrapMode wrapMode)
	{
		return null;
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x111DD64", Offset = "0x111DD64", VA = "0x111DD64")]
	public void Update()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x111DD68", Offset = "0x111DD68", VA = "0x111DD68")]
	public void OnLevelStarted()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x111DDF0", Offset = "0x111DDF0", VA = "0x111DDF0")]
	public void OnPauseRoutine()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x111DE5C", Offset = "0x111DE5C", VA = "0x111DE5C")]
	public void OnPauseRoutineException(int instanceId)
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x111DF94", Offset = "0x111DF94", VA = "0x111DF94")]
	public void OnResumeRoutineException(int instanceId)
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x111DFFC", Offset = "0x111DFFC", VA = "0x111DFFC")]
	public void OnResumeRoutine()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x111E080", Offset = "0x111E080", VA = "0x111E080")]
	public AnimationManager()
	{
	}
}
[Token(Token = "0x20001F5")]
public class AttackManager : ActionManager
{
	[Token(Token = "0x200064A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8458", Offset = "0xBD8458")]
	private sealed class <WaitBeforeEnd>d__6 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeToWait;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AttackManager <>4__this;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int instanceId;

		[Token(Token = "0x1700036B")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024F0")]
			[Address(RVA = "0xECC84C", Offset = "0xECC84C", VA = "0xECC84C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700036C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024F2")]
			[Address(RVA = "0xECC8B4", Offset = "0xECC8B4", VA = "0xECC8B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024ED")]
		[Address(RVA = "0xECC3D8", Offset = "0xECC3D8", VA = "0xECC3D8")]
		[DebuggerHidden]
		public <WaitBeforeEnd>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0xECC774", Offset = "0xECC774", VA = "0xECC774", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0xECC778", Offset = "0xECC778", VA = "0xECC778", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0xECC854", Offset = "0xECC854", VA = "0xECC854", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200064B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8468", Offset = "0xBD8468")]
	private sealed class <LaunchDotDamageAttack>d__7 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeBeforeEnd;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DotDamage target;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AttackManager <>4__this;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int instanceId;

		[Token(Token = "0x1700036D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024F6")]
			[Address(RVA = "0xECC6A8", Offset = "0xECC6A8", VA = "0xECC6A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700036E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024F8")]
			[Address(RVA = "0xECC710", Offset = "0xECC710", VA = "0xECC710", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0xECC404", Offset = "0xECC404", VA = "0xECC404")]
		[DebuggerHidden]
		public <LaunchDotDamageAttack>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0xECC440", Offset = "0xECC440", VA = "0xECC440", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0xECC444", Offset = "0xECC444", VA = "0xECC444", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0xECC6B0", Offset = "0xECC6B0", VA = "0xECC6B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ObjectArrayGameEvent OnDotDamage;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE374", Offset = "0xBDE374")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDE374", Offset = "0xBDE374")]
	public PlayerManager m_playerManager;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool _isIKattacking;

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xECAF70", Offset = "0xECAF70", VA = "0xECAF70")]
	public void PlayAttackProjectile(CustomActionGameEventStruct customActionParams)
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xECB2F8", Offset = "0xECB2F8", VA = "0xECB2F8")]
	public void PlayAttackDotDamage(CustomActionGameEventStruct customActionParams)
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xECB7E4", Offset = "0xECB7E4", VA = "0xECB7E4")]
	public void PlayAttackLaser(CustomActionGameEventStruct customActionParams)
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xECBBC0", Offset = "0xECBBC0", VA = "0xECBBC0")]
	public void PlayAttackDropPrefab(CustomActionGameEventStruct customActionParams)
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xECB25C", Offset = "0xECB25C", VA = "0xECB25C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE9F10", Offset = "0xBE9F10")]
	private IEnumerator<float> WaitBeforeEnd(int instanceId, float timeToWait)
	{
		return null;
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xECB734", Offset = "0xECB734", VA = "0xECB734")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE9F74", Offset = "0xBE9F74")]
	private IEnumerator<float> LaunchDotDamageAttack(float timeBeforeEnd, int instanceId, [Optional] DotDamage target)
	{
		return null;
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xECC430", Offset = "0xECC430", VA = "0xECC430")]
	public void PlayAttackIK(CustomActionGameEventStruct customActionParams)
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xECC434", Offset = "0xECC434", VA = "0xECC434")]
	public void PlayAttackRay(CustomActionGameEventStruct customActionParams)
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xECC438", Offset = "0xECC438", VA = "0xECC438")]
	public AttackManager()
	{
	}
}
[Token(Token = "0x20001F6")]
public class EnemyLaserBehaviour : CacheBehaviour
{
	[Token(Token = "0x200064C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8478", Offset = "0xBD8478")]
	private sealed class <MoveAndScaleRay>d__11 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnemyLaserBehaviour <>4__this;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float finalZScale;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 finalPosition;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 startPosition;

		[Token(Token = "0x1700036F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024FC")]
			[Address(RVA = "0xF1A97C", Offset = "0xF1A97C", VA = "0xF1A97C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000370")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024FE")]
			[Address(RVA = "0xF1A9E4", Offset = "0xF1A9E4", VA = "0xF1A9E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0xF1A740", Offset = "0xF1A740", VA = "0xF1A740")]
		[DebuggerHidden]
		public <MoveAndScaleRay>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0xF1A7AC", Offset = "0xF1A7AC", VA = "0xF1A7AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0xF1A7B0", Offset = "0xF1A7B0", VA = "0xF1A7B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0xF1A984", Offset = "0xF1A984", VA = "0xF1A984", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200064D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8488", Offset = "0xBD8488")]
	private sealed class <ScaleRay>d__12 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnemyLaserBehaviour <>4__this;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float finalZScale;

		[Token(Token = "0x17000371")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002502")]
			[Address(RVA = "0xF1AB70", Offset = "0xF1AB70", VA = "0xF1AB70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000372")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002504")]
			[Address(RVA = "0xF1ABD8", Offset = "0xF1ABD8", VA = "0xF1ABD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0xF1A76C", Offset = "0xF1A76C", VA = "0xF1A76C")]
		[DebuggerHidden]
		public <ScaleRay>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0xF1AA48", Offset = "0xF1AA48", VA = "0xF1AA48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0xF1AA4C", Offset = "0xF1AA4C", VA = "0xF1AA4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0xF1AB78", Offset = "0xF1AB78", VA = "0xF1AB78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE3C4", Offset = "0xBDE3C4")]
	public HoldBehaviourEnemy m_holdBehaviourEnemy;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Collider m_boxCollider;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject m_warningBox;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform m_target;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool m_middlePivot;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float m_scaleOffset;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE3FC", Offset = "0xBDE3FC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDE3FC", Offset = "0xBDE3FC")]
	public float m_rayTime;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE44C", Offset = "0xBDE44C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDE44C", Offset = "0xBDE44C")]
	public UnityEvent OnEndRayScale;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float _scaleTimer;

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xF1A270", Offset = "0xF1A270", VA = "0xF1A270")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xF1A274", Offset = "0xF1A274", VA = "0xF1A274")]
	public void StartScalingLaserRay()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xF1A630", Offset = "0xF1A630", VA = "0xF1A630")]
	private void StartBoxDamage()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xF1A4DC", Offset = "0xF1A4DC", VA = "0xF1A4DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE9FD8", Offset = "0xBE9FD8")]
	private IEnumerator<float> MoveAndScaleRay(Vector3 startPosition, Vector3 finalPosition, float finalZScale)
	{
		return null;
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xF1A5A4", Offset = "0xF1A5A4", VA = "0xF1A5A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA03C", Offset = "0xBEA03C")]
	private IEnumerator<float> ScaleRay(float finalZScale)
	{
		return null;
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xF1A798", Offset = "0xF1A798", VA = "0xF1A798")]
	public EnemyLaserBehaviour()
	{
	}
}
[Token(Token = "0x20001F7")]
public class MoveManager : ActionManager
{
	[Token(Token = "0x200064E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8498", Offset = "0xBD8498")]
	private sealed class <WaitForTimer>d__12 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timer;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoveManager <>4__this;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int sequenceId;

		[Token(Token = "0x17000373")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002508")]
			[Address(RVA = "0x1549070", Offset = "0x1549070", VA = "0x1549070", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000374")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600250A")]
			[Address(RVA = "0x15490D8", Offset = "0x15490D8", VA = "0x15490D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0x1548F64", Offset = "0x1548F64", VA = "0x1548F64")]
		[DebuggerHidden]
		public <WaitForTimer>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0x1548F98", Offset = "0x1548F98", VA = "0x1548F98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0x1548F9C", Offset = "0x1548F9C", VA = "0x1548F9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0x1549078", Offset = "0x1549078", VA = "0x1549078", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public SpawnGrid m_gridManager;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Expandable]
	public MagnetData m_magnetData;

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x1547E84", Offset = "0x1547E84", VA = "0x1547E84")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x1547E88", Offset = "0x1547E88", VA = "0x1547E88")]
	public void OnLerpBackToSpawner(CustomActionGameEventStruct str)
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x154820C", Offset = "0x154820C", VA = "0x154820C")]
	public void OnChangeSnapPositionAction(CustomActionGameEventStruct str)
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x15483BC", Offset = "0x15483BC", VA = "0x15483BC")]
	public void OnChangePositionAction(CustomActionGameEventStruct str)
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x1548B74", Offset = "0x1548B74", VA = "0x1548B74")]
	private void OnChangePositionCompleteWithMovePositionActionData(object param)
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x1547FEC", Offset = "0x1547FEC", VA = "0x1547FEC")]
	private void TweenToPosition(Vector3 position, GameObject actor, float lerpTime, int instanceId)
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x1548D84", Offset = "0x1548D84", VA = "0x1548D84")]
	public void OnChangePositionComplete(object param)
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x1548E0C", Offset = "0x1548E0C", VA = "0x1548E0C")]
	public void OnMoveCurveAction(CustomActionGameEventStruct str)
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x1548EA8", Offset = "0x1548EA8", VA = "0x1548EA8")]
	public void OnMoveCurveActionFinished(int sequenceId)
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x1548EAC", Offset = "0x1548EAC", VA = "0x1548EAC")]
	public void MagnetSpeedTween(float value)
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x1548EC8", Offset = "0x1548EC8", VA = "0x1548EC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA0A0", Offset = "0xBEA0A0")]
	private IEnumerator<float> WaitForTimer(float timer, int sequenceId)
	{
		return null;
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x1548F90", Offset = "0x1548F90", VA = "0x1548F90")]
	public MoveManager()
	{
	}
}
[Token(Token = "0x20001F8")]
public struct OrbitalMoveDollyData
{
	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int m_instanceId;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public CinemachineDollyCart m_dolly;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int m_loopCountToDo;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int m_loopCountDone;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_previousPosition;
}
[Token(Token = "0x20001F9")]
public class OrbitalMoveManager : ActionManager
{
	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Dictionary<int, OrbitalMoveDollyData> _dollies;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject _actor;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OrbitalMoveActionData _actiondata;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private CinemachineDollyCart _dolly;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private OrbitalMoveDollyData _dollyData;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float _newPos;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int _instanceId;

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x10D69B4", Offset = "0x10D69B4", VA = "0x10D69B4")]
	public void OnOrbitalMoveAction(CustomActionGameEventStruct str)
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x10D6F0C", Offset = "0x10D6F0C", VA = "0x10D6F0C")]
	public void OnStopOrbitalMove(int instanceId)
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x10D716C", Offset = "0x10D716C", VA = "0x10D716C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x10D72E8", Offset = "0x10D72E8", VA = "0x10D72E8")]
	public OrbitalMoveManager()
	{
	}
}
[Token(Token = "0x20001FA")]
public class PatternManager : ActionManager
{
	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntIntUnityEvent OnChangePattern;

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xEE101C", Offset = "0xEE101C", VA = "0xEE101C")]
	public void ChangePattern(CustomActionGameEventStruct str)
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xEE10C8", Offset = "0xEE10C8", VA = "0xEE10C8")]
	public PatternManager()
	{
	}
}
[Token(Token = "0x20001FB")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD17E4", Offset = "0xBD17E4")]
public class AnimationActionData : CustomActionData
{
	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE4AC", Offset = "0xBDE4AC")]
	public string m_animationStateName;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_animationSpeed;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE4E4", Offset = "0xBDE4E4")]
	public WrapMode m_wrapMode;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE51C", Offset = "0xBDE51C")]
	public float m_timer;

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x111D008", Offset = "0x111D008", VA = "0x111D008")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x111D05C", Offset = "0x111D05C", VA = "0x111D05C")]
	public AnimationActionData()
	{
	}
}
[Token(Token = "0x20001FC")]
public abstract class AttackActionData : CustomActionData
{
	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE554", Offset = "0xBDE554")]
	public Label m_memberLabel;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE58C", Offset = "0xBDE58C")]
	public Label m_labelTarget;

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xECAE7C", Offset = "0xECAE7C", VA = "0xECAE7C")]
	protected AttackActionData()
	{
	}
}
[Token(Token = "0x20001FD")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1844", Offset = "0xBD1844")]
public class AttackDropPrefabActionData : CustomActionData
{
	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE5C4", Offset = "0xBDE5C4")]
	public GameObject m_prefabToInstantiate;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE5FC", Offset = "0xBDE5FC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDE5FC", Offset = "0xBDE5FC")]
	public bool m_useRadius;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float m_radius;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float m_yPosition;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float m_angleRange;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE64C", Offset = "0xBDE64C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDE64C", Offset = "0xBDE64C")]
	public List<Label> m_locationsForSpawn;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE69C", Offset = "0xBDE69C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDE69C", Offset = "0xBDE69C")]
	public int m_numberToSpawn;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE6EC", Offset = "0xBDE6EC")]
	public bool m_lerpToPosition;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float m_timeToLerp;

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xECAE84", Offset = "0xECAE84", VA = "0xECAE84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xECAED8", Offset = "0xECAED8", VA = "0xECAED8")]
	public AttackDropPrefabActionData()
	{
	}
}
[Token(Token = "0x20001FE")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD18A4", Offset = "0xBD18A4")]
public class AttackIKActionData : AttackActionData
{
	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDE724", Offset = "0xBDE724")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE724", Offset = "0xBDE724")]
	public float m_speed;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDE774", Offset = "0xBDE774")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE774", Offset = "0xBDE774")]
	public float m_ikWeight;

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xECAEF4", Offset = "0xECAEF4", VA = "0xECAEF4")]
	public AttackIKActionData()
	{
	}
}
[Token(Token = "0x20001FF")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1904", Offset = "0xBD1904")]
public class AttackLaserActionData : CustomActionData
{
	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE7C4", Offset = "0xBDE7C4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDE7C4", Offset = "0xBDE7C4")]
	public float m_intervalBetweenDots;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE814", Offset = "0xBDE814")]
	public int m_dotDamages;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE84C", Offset = "0xBDE84C")]
	public float m_laserRayTime;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE884", Offset = "0xBDE884")]
	public float m_totalTime;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE8BC", Offset = "0xBDE8BC")]
	public Label m_memberLabel;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE8F4", Offset = "0xBDE8F4")]
	public Label m_targetOfLaser;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE92C", Offset = "0xBDE92C")]
	public float m_waitTime;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE964", Offset = "0xBDE964")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDE964", Offset = "0xBDE964")]
	public GameObject m_prefabLaserAttack;

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xECAEFC", Offset = "0xECAEFC", VA = "0xECAEFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xECAF50", Offset = "0xECAF50", VA = "0xECAF50")]
	public AttackLaserActionData()
	{
	}
}
[Token(Token = "0x2000200")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1964", Offset = "0xBD1964")]
public class AttackProjectileActionData : AttackActionData
{
	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDE9B4", Offset = "0xBDE9B4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE9B4", Offset = "0xBDE9B4")]
	public Ammo m_projectile;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDEA04", Offset = "0xBDEA04")]
	public float m_timer;

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xECC918", Offset = "0xECC918", VA = "0xECC918")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xECC96C", Offset = "0xECC96C", VA = "0xECC96C")]
	public AttackProjectileActionData()
	{
	}
}
[Token(Token = "0x2000201")]
public abstract class CustomActionData : ScriptableObject
{
	[Token(Token = "0x200064F")]
	public enum ShowAttackHUD
	{
		[Token(Token = "0x4001F92")]
		NOCHANGE,
		[Token(Token = "0x4001F93")]
		SHOW,
		[Token(Token = "0x4001F94")]
		HIDE
	}

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDEA3C", Offset = "0xBDEA3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDEA3C", Offset = "0xBDEA3C")]
	public bool m_dontWaitForNextAction;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDEA8C", Offset = "0xBDEA8C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDEA8C", Offset = "0xBDEA8C")]
	public float m_actionDelay;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDEADC", Offset = "0xBDEADC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDEADC", Offset = "0xBDEADC")]
	public string m_eventName;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDEB2C", Offset = "0xBDEB2C")]
	public bool m_playOnce;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDEB64", Offset = "0xBDEB64")]
	public float m_delayCustomActionEvent;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDEB9C", Offset = "0xBDEB9C")]
	public IntUnityEvent OnCustomActionPlayed;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDEBD4", Offset = "0xBDEBD4")]
	public ShowAttackHUD m_showAttackHUD;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDEC0C", Offset = "0xBDEC0C")]
	public ShowAttackHUD m_showWarningZone;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Label m_locationWhereToShow;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 m_scaleOfWarningZone;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public bool m_alreadyPlayed;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool m_finished;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDEC54", Offset = "0xBDEC54")]
	public Event m_actionWwiseEvent;

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xF050C0", Offset = "0xF050C0", VA = "0xF050C0")]
	protected CustomActionData()
	{
	}
}
[Token(Token = "0x2000202")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD19C4", Offset = "0xBD19C4")]
public class DotDamageAttackActionData : CustomActionData
{
	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDEC8C", Offset = "0xBDEC8C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDEC8C", Offset = "0xBDEC8C")]
	public float m_intervalBetweenDots;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDECDC", Offset = "0xBDECDC")]
	public int m_dotDamages;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDED14", Offset = "0xBDED14")]
	public float m_totalTime;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDED4C", Offset = "0xBDED4C")]
	public GameObject m_fxOnDot;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDED84", Offset = "0xBDED84")]
	public Label m_targetOfDotDamage;

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xF14E48", Offset = "0xF14E48", VA = "0xF14E48")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xF14E9C", Offset = "0xF14E9C", VA = "0xF14E9C")]
	public DotDamageAttackActionData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000203")]
public struct CustomActionGameEventStruct
{
	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public CustomActionData m_customAction;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int m_instanceId;
}
[Token(Token = "0x2000204")]
public class FeedbackActionData : CustomActionData
{
	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDEDBC", Offset = "0xBDEDBC")]
	[Expandable]
	public FeedbackData m_feedback;

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xF1BA0C", Offset = "0xF1BA0C", VA = "0xF1BA0C")]
	public FeedbackActionData()
	{
	}
}
[Token(Token = "0x2000205")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1A24", Offset = "0xBD1A24")]
public class FeedbackRayActionData : FeedbackActionData
{
	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xF1BC10", Offset = "0xF1BC10", VA = "0xF1BC10")]
	public FeedbackRayActionData()
	{
	}
}
[Token(Token = "0x2000206")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1A84", Offset = "0xBD1A84")]
public class LerpBackToSpawnerActionData : CustomActionData
{
	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDEE08", Offset = "0xBDEE08")]
	public float m_timeToLerpBack;

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xF9C6F0", Offset = "0xF9C6F0", VA = "0xF9C6F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xF9C744", Offset = "0xF9C744", VA = "0xF9C744")]
	public LerpBackToSpawnerActionData()
	{
	}
}
[Token(Token = "0x2000207")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1AE4", Offset = "0xBD1AE4")]
public class MoveChangeSnapPositionActionData : CustomActionData
{
	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDEE40", Offset = "0xBDEE40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDEE40", Offset = "0xBDEE40")]
	public float m_lerpTime;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool m_assignPosition;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int x;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int y;

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x1547DBC", Offset = "0x1547DBC", VA = "0x1547DBC")]
	public MoveChangeSnapPositionActionData()
	{
	}
}
[Token(Token = "0x2000208")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1B44", Offset = "0xBD1B44")]
public class MoveCurveActionData : CustomActionData
{
	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDEE90", Offset = "0xBDEE90")]
	public Label m_curve;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDEEC8", Offset = "0xBDEEC8")]
	public Label m_arrivalPoint;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDEF00", Offset = "0xBDEF00")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDEF00", Offset = "0xBDEF00")]
	public float m_actionWaitEnd;

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x1547DCC", Offset = "0x1547DCC", VA = "0x1547DCC")]
	public MoveCurveActionData()
	{
	}
}
[Token(Token = "0x2000209")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1BA4", Offset = "0xBD1BA4")]
public class MovePositionActionData : CustomActionData
{
	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDEF50", Offset = "0xBDEF50")]
	public bool m_lerp;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDEF88", Offset = "0xBDEF88")]
	public float m_lerpTime;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDEFC0", Offset = "0xBDEFC0")]
	public Label m_positionLabel;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDEFF8", Offset = "0xBDEFF8")]
	public Label m_targetLabel;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF030", Offset = "0xBDF030")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDF030", Offset = "0xBDF030")]
	public bool m_lerpBack;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF080", Offset = "0xBDF080")]
	public Label m_lerpBackLabel;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF0B8", Offset = "0xBDF0B8")]
	public bool m_lerpBackTimeDifferent;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF0F0", Offset = "0xBDF0F0")]
	public float m_lerpTimeBack;

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x154913C", Offset = "0x154913C", VA = "0x154913C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x1549190", Offset = "0x1549190", VA = "0x1549190")]
	public MovePositionActionData()
	{
	}
}
[Token(Token = "0x200020A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1C04", Offset = "0xBD1C04")]
public class OrbitalMoveActionData : CustomActionData
{
	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF128", Offset = "0xBDF128")]
	public bool m_useSpawnerCurve;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF160", Offset = "0xBDF160")]
	public Label m_path;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF198", Offset = "0xBDF198")]
	public float m_speed;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF1D0", Offset = "0xBDF1D0")]
	public int m_loopCount;

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x10D6958", Offset = "0x10D6958", VA = "0x10D6958")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x10D69AC", Offset = "0x10D69AC", VA = "0x10D69AC")]
	public OrbitalMoveActionData()
	{
	}
}
[Token(Token = "0x200020B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1C64", Offset = "0xBD1C64")]
public class PatternChangeActionData : CustomActionData
{
	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int m_patternIndex;

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xEE0FB4", Offset = "0xEE0FB4", VA = "0xEE0FB4")]
	public PatternChangeActionData()
	{
	}
}
[Token(Token = "0x200020C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1CC4", Offset = "0xBD1CC4")]
public class SetEnabledComponentActionData : CustomActionData
{
	[Token(Token = "0x2000650")]
	public enum ComponentType
	{
		[Token(Token = "0x4001F96")]
		GAMEOBJECT,
		[Token(Token = "0x4001F97")]
		COLLIDER,
		[Token(Token = "0x4001F98")]
		RENDERER
	}

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF208", Offset = "0xBDF208")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDF208", Offset = "0xBDF208")]
	public ComponentType m_componentType;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF258", Offset = "0xBDF258")]
	public bool m_ownComponent;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF290", Offset = "0xBDF290")]
	public Label m_componentLabel;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF2C8", Offset = "0xBDF2C8")]
	public bool m_enabled;

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xE4D390", Offset = "0xE4D390", VA = "0xE4D390")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xE4D3E4", Offset = "0xE4D3E4", VA = "0xE4D3E4")]
	public SetEnabledComponentActionData()
	{
	}
}
[Token(Token = "0x200020D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1D24", Offset = "0xBD1D24")]
public class SpawnActionData : CustomActionData
{
	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SpawnListData m_spawnList;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_spawnBetweenDelaySpawn;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Label m_curveLabel;

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xF58440", Offset = "0xF58440", VA = "0xF58440")]
	public SpawnActionData()
	{
	}
}
[Token(Token = "0x200020E")]
public class OrbitRotation : CacheBehaviour
{
	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform m_targetToProtect;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float m_orbitRadius;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float m_orbitRoationSpeed;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float m_orbitAlignToDirectionSpeed;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public Vector3 m_orbitAxis;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float orbitRadiusCorrectionSpeed;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 orbitDesiredPosition;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 previousPosition;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 relativePos;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Quaternion rotation;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Transform _transform;

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x10D657C", Offset = "0x10D657C", VA = "0x10D657C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x10D65AC", Offset = "0x10D65AC", VA = "0x10D65AC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x10D68CC", Offset = "0x10D68CC", VA = "0x10D68CC")]
	public OrbitRotation()
	{
	}
}
[Token(Token = "0x200020F")]
public class SpawnManager : ActionManager
{
	[Token(Token = "0x2000651")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD84A8", Offset = "0xBD84A8")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int instanceId;

		[Token(Token = "0x600250B")]
		[Address(RVA = "0xF5B0EC", Offset = "0xF5B0EC", VA = "0xF5B0EC")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0xF5B764", Offset = "0xF5B764", VA = "0xF5B764")]
		internal bool <OnSpawnAction>b__0(ActorData act)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000652")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD84B8", Offset = "0xBD84B8")]
	private sealed class <WaitForDelaySpawn>d__9 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float seconds;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnManager <>4__this;

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int instanceId;

		[Token(Token = "0x17000375")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002510")]
			[Address(RVA = "0xF5B860", Offset = "0xF5B860", VA = "0xF5B860", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000376")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002512")]
			[Address(RVA = "0xF5B8C8", Offset = "0xF5B8C8", VA = "0xF5B8C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0xF5B6BC", Offset = "0xF5B6BC", VA = "0xF5B6BC")]
		[DebuggerHidden]
		public <WaitForDelaySpawn>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0xF5B788", Offset = "0xF5B788", VA = "0xF5B788", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0xF5B78C", Offset = "0xF5B78C", VA = "0xF5B78C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0xF5B868", Offset = "0xF5B868", VA = "0xF5B868", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ActorCollection m_actorDatas;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ActorDataTransformUnityEvent OnLoadActor;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public IntGameEventListener m_onActorCreatedInstanceIdListener;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public BoolVariable m_useBatchSystem;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public IntVariable m_currentBatchEnemyCount;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public IntVariable m_numberOfBatches;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public IntVariable m_currentBatchIndex;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Dictionary<int, List<ActorSpawnedData>> _waitingShields;

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xF5A3C0", Offset = "0xF5A3C0", VA = "0xF5A3C0")]
	public void OnSpawnAction(CustomActionGameEventStruct action)
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xF5B384", Offset = "0xF5B384", VA = "0xF5B384")]
	public void OnActorCreatedInstanceId(int instanceId)
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xF5B0F4", Offset = "0xF5B0F4", VA = "0xF5B0F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA104", Offset = "0xBEA104")]
	public IEnumerator<float> WaitForDelaySpawn(float seconds, int instanceId)
	{
		return null;
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xF5B190", Offset = "0xF5B190", VA = "0xF5B190")]
	public ActorData FindSpawnedActor(SpawnListData spawnListData, int spawnListIndex)
	{
		return null;
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xF5B6E8", Offset = "0xF5B6E8", VA = "0xF5B6E8")]
	public SpawnManager()
	{
	}
}
[Token(Token = "0x2000210")]
public class UpdateSpawner : CacheBehaviour
{
	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public IntVariable m_currentBatchEnemyCount;

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xF78384", Offset = "0xF78384", VA = "0xF78384")]
	public void OnUpdateSpawner(int instanceId)
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xF785E4", Offset = "0xF785E4", VA = "0xF785E4")]
	public UpdateSpawner()
	{
	}
}
[Token(Token = "0x2000211")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1D84", Offset = "0xBD1D84")]
public class DirectorGeneralData : ScriptableObject
{
	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Expandable]
	public GameData m_game;

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xF0B270", Offset = "0xF0B270", VA = "0xF0B270")]
	public DirectorGeneralData()
	{
	}
}
[Token(Token = "0x2000212")]
public class DirectorManager : CacheBehaviour
{
	[Token(Token = "0x2000653")]
	public enum EGameState
	{
		[Token(Token = "0x4001FA0")]
		INVALID,
		[Token(Token = "0x4001FA1")]
		LOADING,
		[Token(Token = "0x4001FA2")]
		PLAY,
		[Token(Token = "0x4001FA3")]
		PAUSE,
		[Token(Token = "0x4001FA4")]
		MAX
	}

	[Token(Token = "0x2000654")]
	public enum TypeLevel
	{
		[Token(Token = "0x4001FA6")]
		TUTO,
		[Token(Token = "0x4001FA7")]
		CLASSIC,
		[Token(Token = "0x4001FA8")]
		ELITE,
		[Token(Token = "0x4001FA9")]
		INTERACTIVELORE,
		[Token(Token = "0x4001FAA")]
		SHOP,
		[Token(Token = "0x4001FAB")]
		GOBLIN,
		[Token(Token = "0x4001FAC")]
		BOSS
	}

	[Token(Token = "0x2000655")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD84C8", Offset = "0xBD84C8")]
	private sealed class <LoadActorActionRoutine>d__50 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int instanceId;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DirectorManager <>4__this;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ActorStruct <actorStruct>5__2;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ActorData <actorData>5__3;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private CustomActionGameEventStruct <str>5__4;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ActorManager <actorManager>5__5;

		[Token(Token = "0x17000377")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002516")]
			[Address(RVA = "0xF13AC0", Offset = "0xF13AC0", VA = "0xF13AC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000378")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002518")]
			[Address(RVA = "0xF13B28", Offset = "0xF13B28", VA = "0xF13B28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0xF110F8", Offset = "0xF110F8", VA = "0xF110F8")]
		[DebuggerHidden]
		public <LoadActorActionRoutine>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0xF1316C", Offset = "0xF1316C", VA = "0xF1316C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0xF13170", Offset = "0xF13170", VA = "0xF13170", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002517")]
		[Address(RVA = "0xF13AC8", Offset = "0xF13AC8", VA = "0xF13AC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000656")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD84D8", Offset = "0xBD84D8")]
	private sealed class <DelayCustomActionEvent>d__52 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomActionData customAction;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int instanceID;

		[Token(Token = "0x17000379")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600251C")]
			[Address(RVA = "0xF130A0", Offset = "0xF130A0", VA = "0xF130A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700037A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600251E")]
			[Address(RVA = "0xF13108", Offset = "0xF13108", VA = "0xF13108", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002519")]
		[Address(RVA = "0xF11310", Offset = "0xF11310", VA = "0xF11310")]
		[DebuggerHidden]
		public <DelayCustomActionEvent>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0xF12FC0", Offset = "0xF12FC0", VA = "0xF12FC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0xF12FC4", Offset = "0xF12FC4", VA = "0xF12FC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600251D")]
		[Address(RVA = "0xF130A8", Offset = "0xF130A8", VA = "0xF130A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000657")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD84E8", Offset = "0xBD84E8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__53_0;

		[Token(Token = "0x6002520")]
		[Address(RVA = "0xF12D7C", Offset = "0xF12D7C", VA = "0xF12D7C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002521")]
		[Address(RVA = "0xF12D84", Offset = "0xF12D84", VA = "0xF12D84")]
		internal bool <OnBypassPatternRoutine>b__53_0(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000658")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD84F8", Offset = "0xBD84F8")]
	private sealed class <OnBypassPatternRoutine>d__53 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int instanceId;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DirectorManager <>4__this;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int pattern;

		[Token(Token = "0x1700037B")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002525")]
			[Address(RVA = "0xF13F9C", Offset = "0xF13F9C", VA = "0xF13F9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700037C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002527")]
			[Address(RVA = "0xF14004", Offset = "0xF14004", VA = "0xF14004", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0xF1133C", Offset = "0xF1133C", VA = "0xF1133C")]
		[DebuggerHidden]
		public <OnBypassPatternRoutine>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0xF13B8C", Offset = "0xF13B8C", VA = "0xF13B8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002524")]
		[Address(RVA = "0xF13B90", Offset = "0xF13B90", VA = "0xF13B90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0xF13FA4", Offset = "0xF13FA4", VA = "0xF13FA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000659")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8508", Offset = "0xBD8508")]
	private sealed class <>c__DisplayClass65_0
	{
		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CustomActionData customAction;

		[Token(Token = "0x6002528")]
		[Address(RVA = "0xF12370", Offset = "0xF12370", VA = "0xF12370")]
		public <>c__DisplayClass65_0()
		{
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0xF12E14", Offset = "0xF12E14", VA = "0xF12E14")]
		internal bool <FindCustomActionGameEvent>b__0(CustomActionGameEvent customActionEvent)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200065A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8518", Offset = "0xBD8518")]
	private sealed class <Wait>d__72 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float time;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DirectorManager <>4__this;

		[Token(Token = "0x1700037D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600252D")]
			[Address(RVA = "0xF14144", Offset = "0xF14144", VA = "0xF14144", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700037E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600252F")]
			[Address(RVA = "0xF141AC", Offset = "0xF141AC", VA = "0xF141AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600252A")]
		[Address(RVA = "0xF12BC4", Offset = "0xF12BC4", VA = "0xF12BC4")]
		[DebuggerHidden]
		public <Wait>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0xF14068", Offset = "0xF14068", VA = "0xF14068", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0xF1406C", Offset = "0xF1406C", VA = "0xF1406C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0xF1414C", Offset = "0xF1414C", VA = "0xF1414C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF310", Offset = "0xBDF310")]
	[Expandable]
	public DirectorGeneralData m_director;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF35C", Offset = "0xBDF35C")]
	public GameDataVariable m_currentGameData;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDF394", Offset = "0xBDF394")]
	public LevelDataVariable m_currentLevelData;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDF3A8", Offset = "0xBDF3A8")]
	public WaveDataVariable m_currentWaveData;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDF3BC", Offset = "0xBDF3BC")]
	public PatternDataVariable m_currentPatternData;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDF3D0", Offset = "0xBDF3D0")]
	public CustomActionDataVariable m_currentCustomActionData;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDF3E4", Offset = "0xBDF3E4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF3E4", Offset = "0xBDF3E4")]
	public List<CustomActionGameEvent> m_customActionEvents;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF434", Offset = "0xBDF434")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDF434", Offset = "0xBDF434")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF434", Offset = "0xBDF434")]
	public BetterEvent OnActorDeath;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public IntUnityEvent OnActorDeathInstanceId;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Vector3UnityEvent OnActorDeathPosition;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public IntUnityEvent OnActorCreated;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public IntUnityEvent OnActorCreatedInstanceId;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public UnityEvent OnLevelFinished;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public IntUnityEvent OnActorAttack;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public IntUnityEvent OnActorStopAttack;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public ObjectArrayUnityEvent OnActivateWarningZone;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public ObjectArrayUnityEvent OnDeactivateWarningZone;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public IntUnityEvent OnChangePatternInstanceId;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public UnityEvent OnWaveDisplay;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public BoolVariable m_useBatchSystem;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF4A8", Offset = "0xBDF4A8")]
	public int m_offsetRemainingParts;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public ActorCollection m_actorDatas;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public IntVariable m_currentWaveNumber;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public IntVariable m_enemyRemaining;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public IntVariable m_difficultyFactor;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public bool m_isBoss;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	public bool m_overrideDropRateBoidBall;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject m_boidBall;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject m_animationManager;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[HideInInspector]
	public bool m_endWhenNoEnemies;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public TextMeshPro m_objectiveText;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF4F0", Offset = "0xBDF4F0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDF4F0", Offset = "0xBDF4F0")]
	public BoolVariable m_playerDead;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF540", Offset = "0xBDF540")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDF540", Offset = "0xBDF540")]
	public TextFeedbackUI m_currentWaveText;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public float m_currentWaveDisplayTime;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF590", Offset = "0xBDF590")]
	public BoolVariable m_shopAtEachWave;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameEvent m_shopEvent;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static bool m_showWave;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF5D8", Offset = "0xBDF5D8")]
	public EGameState m_gameState;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[HideInInspector]
	public static TypeLevel m_nextLevelType;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private Dictionary<int, CoroutineHandle> m_actorRoutines;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private int _currentLevel;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private int _currentWave;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private int _currentActor;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private int _currentPattern;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private int _currentAction;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private int _nbActorsInWave;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private List<int> _actorsAlreadySpawned;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private GameBehaviour _gameBehaviour;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private List<GameObject> actorsSpawned;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private bool _killRemaining;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
	private bool _paused;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
	private bool _recipeDone;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x213")]
	private bool _shockwaving;

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xF0F75C", Offset = "0xF0F75C", VA = "0xF0F75C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xF0F898", Offset = "0xF0F898", VA = "0xF0F898")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xF0F8C4", Offset = "0xF0F8C4", VA = "0xF0F8C4")]
	public void GameStart()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xF0FE8C", Offset = "0xF0FE8C", VA = "0xF0FE8C")]
	public void LoadLevel(LevelData level)
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xF0FF90", Offset = "0xF0FF90", VA = "0xF0FF90")]
	public void LoadWave(WaveData wave)
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xF10C3C", Offset = "0xF10C3C", VA = "0xF10C3C")]
	public void LoadActor(ActorDataTransformGameEventStruct str)
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xF1024C", Offset = "0xF1024C", VA = "0xF1024C")]
	public void LoadActor(ActorData actorData, Transform spawnPoint, int ownerInstanceId = 0)
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xF10E14", Offset = "0xF10E14", VA = "0xF10E14")]
	public void LoadActorAction(int instanceId)
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xF10F9C", Offset = "0xF10F9C", VA = "0xF10F9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA168", Offset = "0xBEA168")]
	public IEnumerator<float> LoadActorActionRoutine(int instanceId)
	{
		return null;
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xF11124", Offset = "0xF11124", VA = "0xF11124")]
	public void OnBypassPattern(IntIntGameEventStruct str)
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xF11284", Offset = "0xF11284", VA = "0xF11284")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA1CC", Offset = "0xBEA1CC")]
	public IEnumerator<float> DelayCustomActionEvent(CustomActionData customAction, int instanceID)
	{
		return null;
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xF111F0", Offset = "0xF111F0", VA = "0xF111F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA230", Offset = "0xBEA230")]
	public IEnumerator<float> OnBypassPatternRoutine(int instanceId, int pattern)
	{
		return null;
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xF11368", Offset = "0xF11368", VA = "0xF11368")]
	public void NextActorAction(int instanceId)
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xF11854", Offset = "0xF11854", VA = "0xF11854")]
	private void NextActorPattern(int instanceId)
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xF11858", Offset = "0xF11858", VA = "0xF11858")]
	private void ResetCurrentPattern(int instanceId)
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xF119C4", Offset = "0xF119C4", VA = "0xF119C4")]
	public void PauseAllRoutines()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xF11A40", Offset = "0xF11A40", VA = "0xF11A40")]
	public void ResumeAllRoutines()
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xF11A48", Offset = "0xF11A48", VA = "0xF11A48")]
	public void OnChangePattern(IntIntGameEventStruct str)
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xF1170C", Offset = "0xF1170C", VA = "0xF1170C")]
	public void ResetActorActions(int instanceId)
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xF11BAC", Offset = "0xF11BAC", VA = "0xF11BAC")]
	public void OnPlanetRegenerated()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xF12090", Offset = "0xF12090", VA = "0xF12090")]
	public void OnAllPlanetsRegenerated()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xF0F910", Offset = "0xF0F910", VA = "0xF0F910")]
	private void ResetAllPlayedCustomAction()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xF120F0", Offset = "0xF120F0", VA = "0xF120F0")]
	private void CheckActionException(CustomActionData currentAction, CustomActionData nextAction)
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xF122A0", Offset = "0xF122A0", VA = "0xF122A0")]
	private CustomActionGameEvent FindCustomActionGameEvent(CustomActionData customAction)
	{
		return null;
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xF0FDB4", Offset = "0xF0FDB4", VA = "0xF0FDB4")]
	public void LoadGame(GameData game)
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xF12378", Offset = "0xF12378", VA = "0xF12378")]
	public void OnActorDead(IntIntGameEventStruct str)
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xF124B4", Offset = "0xF124B4", VA = "0xF124B4")]
	public void RemoveActorFromFinder(int instanceId)
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xF12674", Offset = "0xF12674", VA = "0xF12674")]
	public void NextWave()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xF11C10", Offset = "0xF11C10", VA = "0xF11C10")]
	public void DestroyAllGameElements()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xF0FDF8", Offset = "0xF0FDF8", VA = "0xF0FDF8")]
	public void DisplayWave()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xF12B38", Offset = "0xF12B38", VA = "0xF12B38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA294", Offset = "0xBEA294")]
	private IEnumerator<float> Wait(float time)
	{
		return null;
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xF12BF0", Offset = "0xF12BF0", VA = "0xF12BF0")]
	public void OnDisplayComplete()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xF12A78", Offset = "0xF12A78", VA = "0xF12A78")]
	public void OnEndGame()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xF0F780", Offset = "0xF0F780", VA = "0xF0F780")]
	private void CheckParameters()
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xF0F830", Offset = "0xF0F830", VA = "0xF0F830")]
	private void InitializeParameters()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xF12BF4", Offset = "0xF12BF4", VA = "0xF12BF4")]
	public DirectorManager()
	{
	}
}
[Token(Token = "0x2000213")]
public class GameBehaviour : CacheBehaviour
{
	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameDataVariable m_gameData;

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xF1E958", Offset = "0xF1E958", VA = "0xF1E958")]
	public void StartGame(int level, int wave, int pattern, int action)
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xF1EAD0", Offset = "0xF1EAD0", VA = "0xF1EAD0")]
	public void Play()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xF1EAD4", Offset = "0xF1EAD4", VA = "0xF1EAD4")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xF1EAD8", Offset = "0xF1EAD8", VA = "0xF1EAD8")]
	public bool IsFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xF1EAE0", Offset = "0xF1EAE0", VA = "0xF1EAE0")]
	public GameBehaviour()
	{
	}
}
[Token(Token = "0x2000214")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1DE4", Offset = "0xBD1DE4")]
public class GameData : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200065B")]
	public struct Level
	{
		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_name;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Expandable]
		public LevelData m_levelData;
	}

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Level[] m_levelDatas;

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xF1EAE8", Offset = "0xF1EAE8", VA = "0xF1EAE8")]
	public GameData()
	{
	}
}
[Token(Token = "0x2000215")]
public class LevelBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelData m_levelData;

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0xF9CD14", Offset = "0xF9CD14", VA = "0xF9CD14")]
	public void Play()
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0xF9CD18", Offset = "0xF9CD18", VA = "0xF9CD18")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0xF9CD1C", Offset = "0xF9CD1C", VA = "0xF9CD1C")]
	public bool IsFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0xF9CD24", Offset = "0xF9CD24", VA = "0xF9CD24")]
	public LevelBehaviour()
	{
	}
}
[Token(Token = "0x2000216")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1E44", Offset = "0xBD1E44")]
public class LevelData : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200065C")]
	public class Wave
	{
		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_name;

		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Expandable]
		public WaveData m_waveData;

		[Token(Token = "0x6002530")]
		[Address(RVA = "0xF9CD44", Offset = "0xF9CD44", VA = "0xF9CD44")]
		public Wave()
		{
		}
	}

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Wave[] m_waveDatas;

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xF9CD2C", Offset = "0xF9CD2C", VA = "0xF9CD2C")]
	public void Play()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xF9CD30", Offset = "0xF9CD30", VA = "0xF9CD30")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xF9CD34", Offset = "0xF9CD34", VA = "0xF9CD34")]
	public bool IsFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xF9CD3C", Offset = "0xF9CD3C", VA = "0xF9CD3C")]
	public LevelData()
	{
	}
}
[Token(Token = "0x2000217")]
public class PatternBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PatternData m_patternData;

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x136EEF4", Offset = "0x136EEF4", VA = "0x136EEF4")]
	public void Play()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x136EEF8", Offset = "0x136EEF8", VA = "0x136EEF8")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x136EEFC", Offset = "0x136EEFC", VA = "0x136EEFC")]
	public bool IsFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x136EF04", Offset = "0x136EF04", VA = "0x136EF04")]
	public PatternBehaviour()
	{
	}
}
[Token(Token = "0x2000218")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1EA4", Offset = "0xBD1EA4")]
public class PatternData : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200065D")]
	public struct Action
	{
		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_name;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Expandable]
		public CustomActionData m_customAction;
	}

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action[] m_actions;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public CustomActionData m_currentActionData;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int m_currentActionDataIndex;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntGameEvent m_activatorEvent;

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xEE0FBC", Offset = "0xEE0FBC", VA = "0xEE0FBC")]
	public PatternData()
	{
	}
}
[Token(Token = "0x2000219")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1F04", Offset = "0xBD1F04")]
public class CustomActionDataVariable : BaseVariable<CustomActionData>
{
	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xF05138", Offset = "0xF05138", VA = "0xF05138")]
	public CustomActionDataVariable()
	{
	}
}
[Token(Token = "0x200021A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1F70", Offset = "0xBD1F70")]
public class GameDataVariable : BaseVariable<GameData>
{
	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xF1EAF0", Offset = "0xF1EAF0", VA = "0xF1EAF0")]
	public GameDataVariable()
	{
	}
}
[Token(Token = "0x200021B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD1FDC", Offset = "0xBD1FDC")]
public class LevelDataVariable : BaseVariable<LevelData>
{
	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xF9CD4C", Offset = "0xF9CD4C", VA = "0xF9CD4C")]
	public LevelDataVariable()
	{
	}
}
[Token(Token = "0x200021C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD2048", Offset = "0xBD2048")]
public class PatternDataVariable : BaseVariable<PatternData>
{
	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xEE0FC4", Offset = "0xEE0FC4", VA = "0xEE0FC4")]
	public PatternDataVariable()
	{
	}
}
[Token(Token = "0x200021D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD20B4", Offset = "0xBD20B4")]
public class WaveDataVariable : BaseVariable<WaveData>
{
	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xF7B310", Offset = "0xF7B310", VA = "0xF7B310")]
	public WaveDataVariable()
	{
	}
}
[Token(Token = "0x200021E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD2120", Offset = "0xBD2120")]
public class WaveData : ScriptableObject
{
	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF640", Offset = "0xBDF640")]
	public List<Label> m_spawnPoints;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF678", Offset = "0xBDF678")]
	public bool m_boss;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Expandable]
	public List<ActorData> m_actors;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_actorIndex;

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xF7B294", Offset = "0xF7B294", VA = "0xF7B294")]
	public WaveData()
	{
	}
}
[Token(Token = "0x200021F")]
public class WaveBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaveData m_waveData;

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xF7B27C", Offset = "0xF7B27C", VA = "0xF7B27C")]
	public void Play()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xF7B280", Offset = "0xF7B280", VA = "0xF7B280")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xF7B284", Offset = "0xF7B284", VA = "0xF7B284")]
	public bool IsFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xF7B28C", Offset = "0xF7B28C", VA = "0xF7B28C")]
	public WaveBehaviour()
	{
	}
}
[Token(Token = "0x2000220")]
public class ActivateGameObjectWithTrigger : CacheBehaviour
{
	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_tag;

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x140F8EC", Offset = "0x140F8EC", VA = "0x140F8EC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x140F984", Offset = "0x140F984", VA = "0x140F984")]
	public ActivateGameObjectWithTrigger()
	{
	}
}
[Token(Token = "0x2000221")]
public class AttackSignManager : MonoBehaviour
{
	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_leftAttackSign;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_rightAttackSign;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_midAttackSign;

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xECC974", Offset = "0xECC974", VA = "0xECC974")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0xECCA1C", Offset = "0xECCA1C", VA = "0xECCA1C")]
	public void OnLeftAttackSign()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xECCACC", Offset = "0xECCACC", VA = "0xECCACC")]
	public void OnRightAttackSign()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0xECCB7C", Offset = "0xECCB7C", VA = "0xECCB7C")]
	public void OnMidAttackSign()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xECCC2C", Offset = "0xECCC2C", VA = "0xECCC2C")]
	public void OnLeftAttackSignDisabled()
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0xECCCDC", Offset = "0xECCCDC", VA = "0xECCCDC")]
	public void OnRightAttackSignDisabled()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0xECCD8C", Offset = "0xECCD8C", VA = "0xECCD8C")]
	public void OnMidAttackSignDisabled()
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xECCE3C", Offset = "0xECCE3C", VA = "0xECCE3C")]
	public AttackSignManager()
	{
	}
}
[Token(Token = "0x2000222")]
public class BossChangeColor : MonoBehaviour
{
	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material weakPointMat;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material classicMat;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject objectToChangeL;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject objectToChangeR;

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xED1830", Offset = "0xED1830", VA = "0xED1830")]
	public void EventStartColorChangeL()
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xED1898", Offset = "0xED1898", VA = "0xED1898")]
	public void EventStartColorChangeR()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xED1900", Offset = "0xED1900", VA = "0xED1900")]
	public void EventEndColorChangeR()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xED1968", Offset = "0xED1968", VA = "0xED1968")]
	public void EventEndColorChangeL()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xED19D0", Offset = "0xED19D0", VA = "0xED19D0")]
	public void EventHurt()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xED1A58", Offset = "0xED1A58", VA = "0xED1A58")]
	public BossChangeColor()
	{
	}
}
[Token(Token = "0x2000223")]
public class EffectManager : MonoBehaviour
{
	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0xF188A0", Offset = "0xF188A0", VA = "0xF188A0")]
	public void PlayFeedbackRay(CustomActionGameEventStruct str)
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xF18BA4", Offset = "0xF18BA4", VA = "0xF18BA4")]
	public void PlayFeedbackInstantiate(GameObjectGameEventStruct str)
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xF18CD8", Offset = "0xF18CD8", VA = "0xF18CD8")]
	public EffectManager()
	{
	}
}
[Token(Token = "0x2000224")]
public abstract class FeedbackData : ScriptableObject
{
	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xF1BC00", Offset = "0xF1BC00", VA = "0xF1BC00")]
	protected FeedbackData()
	{
	}
}
[Token(Token = "0x2000225")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD2180", Offset = "0xBD2180")]
public class FeedbackInstantiateData : FeedbackData
{
	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF6C0", Offset = "0xBDF6C0")]
	public GameObject m_feedbackToInstantiate;

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xF1BC08", Offset = "0xF1BC08", VA = "0xF1BC08")]
	public FeedbackInstantiateData()
	{
	}
}
[Token(Token = "0x2000226")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD21E0", Offset = "0xBD21E0")]
public class FeedbackRayData : FeedbackData
{
	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF6F8", Offset = "0xBDF6F8")]
	public TrailRenderer m_trailRenderer;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF730", Offset = "0xBDF730")]
	public Label m_originLabel;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF768", Offset = "0xBDF768")]
	public Label m_directionLabel;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF7A0", Offset = "0xBDF7A0")]
	public bool m_copyData;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF7D8", Offset = "0xBDF7D8")]
	public Color m_color;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF810", Offset = "0xBDF810")]
	public float m_time;

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xF1BC14", Offset = "0xF1BC14", VA = "0xF1BC14")]
	public FeedbackRayData()
	{
	}
}
[Token(Token = "0x2000227")]
public class InverseVelocity : MonoBehaviour
{
	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VelocityTracker m_velocity;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _transform;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _vectorZero;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _velocity;

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xF30FDC", Offset = "0xF30FDC", VA = "0xF30FDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xF31048", Offset = "0xF31048", VA = "0xF31048")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xF311B4", Offset = "0xF311B4", VA = "0xF311B4")]
	public InverseVelocity()
	{
	}
}
[Token(Token = "0x2000228")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD2240", Offset = "0xBD2240")]
public class Effect : ScriptableObject
{
	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<FeedbackData> m_feedbacks;

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xF18898", Offset = "0xF18898", VA = "0xF18898")]
	public Effect()
	{
	}
}
[Serializable]
[Token(Token = "0x2000229")]
public enum GameModeType
{
	[Token(Token = "0x4000D2B")]
	CLASSIC,
	[Token(Token = "0x4000D2C")]
	CHECKPOINT
}
[Token(Token = "0x200022A")]
public class GameModeTypeComparer : CacheBehaviour
{
	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDF848", Offset = "0xBDF848")]
	public GameModeTypeVariable m_variableToCompare;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameModeType m_gameModeToCompare;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDF85C", Offset = "0xBDF85C")]
	public UnityEvent OnComparisonSuccess;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UnityEvent OnComparisonFailed;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool m_launchOnEnable;

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xF1F33C", Offset = "0xF1F33C", VA = "0xF1F33C")]
	public void Compare()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xF1F524", Offset = "0xF1F524", VA = "0xF1F524")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xF1F534", Offset = "0xF1F534", VA = "0xF1F534")]
	public GameModeTypeComparer()
	{
	}
}
[Token(Token = "0x200022B")]
public class CalculateCurveDirection : MonoBehaviour
{
	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Expandable]
	public CinemachinePath m_path;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_granularity;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject root;

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xED6EFC", Offset = "0xED6EFC", VA = "0xED6EFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xED6F00", Offset = "0xED6F00", VA = "0xED6F00")]
	private void GenerateCurveData()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xED70EC", Offset = "0xED70EC", VA = "0xED70EC")]
	public CalculateCurveDirection()
	{
	}
}
[Token(Token = "0x200022C")]
public class ChangeDollyCartPosition : CacheBehaviour
{
	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Expandable]
	public CinemachineDollyCart m_cart;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float m_cartPosition;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TrailRenderer m_trail;

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xED881C", Offset = "0xED881C", VA = "0xED881C")]
	public void ChangePosition()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xED8870", Offset = "0xED8870", VA = "0xED8870")]
	public ChangeDollyCartPosition()
	{
	}
}
[Token(Token = "0x200022D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD22A0", Offset = "0xBD22A0")]
public class CinemachineDollyCartVariable : BaseVariable<CinemachineDollyCart>
{
	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xED9D08", Offset = "0xED9D08", VA = "0xED9D08")]
	public CinemachineDollyCartVariable()
	{
	}
}
[Token(Token = "0x200022E")]
public class CurveSegment : MonoBehaviour
{
	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_guid;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_tag;

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xEDDC58", Offset = "0xEDDC58", VA = "0xEDDC58")]
	public CurveSegment()
	{
	}
}
[Token(Token = "0x200022F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD230C", Offset = "0xBD230C")]
public class CurveTracer : MonoBehaviour
{
	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CinemachinePath path;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform trans;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int granularity;

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xEDDC60", Offset = "0xEDDC60", VA = "0xEDDC60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xEDDCC0", Offset = "0xEDDCC0", VA = "0xEDDCC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xEDDE20", Offset = "0xEDDE20", VA = "0xEDDE20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xEDDE24", Offset = "0xEDDE24", VA = "0xEDDE24")]
	public CurveTracer()
	{
	}
}
[Token(Token = "0x2000230")]
public class DollyCartTreshold : CacheBehaviour
{
	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public CinemachineDollyCart m_cart;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool m_usePathLength;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[HideInInspector]
	public float m_threshold;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public CinemachinePath m_thresholdPath;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UnityEvent OnCartReachedThreshold;

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xF1469C", Offset = "0xF1469C", VA = "0xF1469C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xF146A0", Offset = "0xF146A0", VA = "0xF146A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xF14718", Offset = "0xF14718", VA = "0xF14718")]
	private void ResetPathWithThreshold()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xF146B0", Offset = "0xF146B0", VA = "0xF146B0")]
	private void ResetPathWithPathLength()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xF14758", Offset = "0xF14758", VA = "0xF14758")]
	public void ResetPath()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xF14774", Offset = "0xF14774", VA = "0xF14774")]
	public DollyCartTreshold()
	{
	}
}
[Token(Token = "0x2000231")]
public class FadeOut : MonoBehaviour
{
	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material m_colorToFade;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_fadingTime;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _time;

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xF1B2F8", Offset = "0xF1B2F8", VA = "0xF1B2F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xF1B470", Offset = "0xF1B470", VA = "0xF1B470")]
	private void OnFinish()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xF1B528", Offset = "0xF1B528", VA = "0xF1B528")]
	public FadeOut()
	{
	}
}
[Token(Token = "0x2000232")]
public class GameManager : CacheBehaviour
{
	[Token(Token = "0x200065E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8528", Offset = "0xBD8528")]
	private sealed class <Start>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x1700037F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002534")]
			[Address(RVA = "0xF1F2CC", Offset = "0xF1F2CC", VA = "0xF1F2CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000380")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002536")]
			[Address(RVA = "0xF1F334", Offset = "0xF1F334", VA = "0xF1F334", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002531")]
		[Address(RVA = "0xF1EBBC", Offset = "0xF1EBBC", VA = "0xF1EBBC")]
		[DebuggerHidden]
		public <Start>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0xF1F160", Offset = "0xF1F160", VA = "0xF1F160", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0xF1F164", Offset = "0xF1F164", VA = "0xF1F164", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0xF1F2D4", Offset = "0xF1F2D4", VA = "0xF1F2D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UnityEvent OnGameStarted;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public UnityEvent OnIntroMenu;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameStateData m_currentGameState;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<IntVariable> m_states;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string m_sceneName;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public BoolVariable m_shopAtEachWave;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF8B0", Offset = "0xBDF8B0")]
	public bool m_elementsReveal;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDF8E8", Offset = "0xBDF8E8")]
	public IntVariable m_numberOfPlanetsToReveal;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public IntVariable m_numberOfPlanetsRevealed;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public IntVariable m_numberOfLevelFinished;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF8FC", Offset = "0xBDF8FC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDF8FC", Offset = "0xBDF8FC")]
	public IntVariable m_currentAzote;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public IntVariable m_currentCarbon;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public IntVariable m_currentPhosphorus;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public IntVariable m_currentSulfur;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public IntVariable m_currentWater;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDF94C", Offset = "0xBDF94C")]
	public IntVariable m_neededAzote;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public IntVariable m_neededCarbon;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public IntVariable m_neededPhosphorus;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public IntVariable m_neededSulfur;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public IntVariable m_neededWater;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public UnityEvent OnBossReveal;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public UnityEvent OnGameRestartAfterDeath;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public IntVariable m_score;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public IntVariable m_currency;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public BoolVariable m_bossRevealed;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF960", Offset = "0xBDF960")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDF960", Offset = "0xBDF960")]
	public BoolVariable m_isPaused;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public UnityEvent OnGamePause;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public UnityEvent OnGameUnpause;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public bool _gamePaused;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool _canPause;

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xF1EB40", Offset = "0xF1EB40", VA = "0xF1EB40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA2F8", Offset = "0xBEA2F8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xF1EBE8", Offset = "0xF1EBE8", VA = "0xF1EBE8")]
	public void OnRestartGame()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xF1EC6C", Offset = "0xF1EC6C", VA = "0xF1EC6C")]
	public void OnLevelFinished()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xF1EE94", Offset = "0xF1EE94", VA = "0xF1EE94")]
	public void PauseGame()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xF1EF68", Offset = "0xF1EF68", VA = "0xF1EF68")]
	public void UnpauseGame()
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xF1F038", Offset = "0xF1F038", VA = "0xF1F038")]
	public void OnLaunchPauseOrResume()
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0xF1F098", Offset = "0xF1F098", VA = "0xF1F098")]
	public void OnLaunchPause()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xF1F0E0", Offset = "0xF1F0E0", VA = "0xF1F0E0")]
	public void SetCanPause(bool value)
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xF1F0EC", Offset = "0xF1F0EC", VA = "0xF1F0EC")]
	public void Test()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xF1F158", Offset = "0xF1F158", VA = "0xF1F158")]
	public GameManager()
	{
	}
}
[Token(Token = "0x2000233")]
public class GetColorOfChildParticle : CacheBehaviour
{
	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Expandable]
	public ColorVariable m_colorToInject;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private ParticleSystem _particle;

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xF2027C", Offset = "0xF2027C", VA = "0xF2027C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xF203BC", Offset = "0xF203BC", VA = "0xF203BC")]
	public GetColorOfChildParticle()
	{
	}
}
[Token(Token = "0x2000234")]
public class GuardianExit : MonoBehaviour
{
	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoolVariable m_rightHandInGesture;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BoolVariable m_leftHandInGesture;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObjectVariable m_leftHand;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObjectVariable m_rightHand;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BoolVariable m_rightHandInteracted;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BoolVariable m_leftHandInteracted;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent m_OnLeftHandGuardianReferentialLeave;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent m_OnRightHandGuardianReferentialLeave;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent m_OnBothHandsGuardianReferentialLeave;

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xF21744", Offset = "0xF21744", VA = "0xF21744")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xF21944", Offset = "0xF21944", VA = "0xF21944")]
	public GuardianExit()
	{
	}
}
[Token(Token = "0x2000235")]
public class GuardianReferentialInteractor : MonoBehaviour
{
	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloatReference m_tolerance;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ContactPointVariable m_handLeftContactPoint;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ContactPointVariable m_handRightContactPoint;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent _OnLeftHandGuardianReferentialInteracted;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent _OnRightHandGuardianReferentialInteracted;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent _OnBothHandsGuardianReferentialInteracted;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent m_OnLeftHandGuardianReferentialLeave;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent m_OnRightHandGuardianReferentialLeave;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent m_OnBothHandsGuardianReferentialLeave;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent m_OnIntroStartFinished;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BoolVariable m_rightHandInGesture;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BoolVariable m_leftHandInGesture;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BoolVariable m_rightHandInChoice;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BoolVariable m_leftHandInChoice;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BoolVariable m_introStart;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObjectVariable m_leftHand;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObjectVariable m_rightHand;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BoolVariable m_rightHandInteracted;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BoolVariable m_leftHandInteracted;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObjectVariable m_rightHandSpell;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObjectVariable m_leftHandSpell;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public BoolVariable m_readyToPlay;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float _tolerance;

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xF2194C", Offset = "0xF2194C", VA = "0xF2194C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xF219AC", Offset = "0xF219AC", VA = "0xF219AC")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xF21D00", Offset = "0xF21D00", VA = "0xF21D00")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xF21F00", Offset = "0xF21F00", VA = "0xF21F00")]
	public void ResetGuardian(GameObject hand)
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xF22088", Offset = "0xF22088", VA = "0xF22088")]
	public GuardianReferentialInteractor()
	{
	}
}
[Token(Token = "0x2000236")]
public class Hand : MonoBehaviour
{
	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObjectVariable m_handGestureLeft;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObjectVariable m_handGestureRight;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject activeHand;

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xF22390", Offset = "0xF22390", VA = "0xF22390")]
	public void SetHandLeft(GameObject hand)
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xF223B4", Offset = "0xF223B4", VA = "0xF223B4")]
	public void SetHandRight(GameObject hand)
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xF223D8", Offset = "0xF223D8", VA = "0xF223D8")]
	public void SetHand(GameObject hand)
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xF224D8", Offset = "0xF224D8", VA = "0xF224D8")]
	public Hand()
	{
	}
}
[Token(Token = "0x2000237")]
public class LoadPath : MonoBehaviour
{
	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CinemachinePathVariable path;

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xFA21CC", Offset = "0xFA21CC", VA = "0xFA21CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xFA2240", Offset = "0xFA2240", VA = "0xFA2240")]
	public LoadPath()
	{
	}
}
[Token(Token = "0x2000238")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD2370", Offset = "0xBD2370")]
public class SpellData : ScriptableObject
{
	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF9C0", Offset = "0xBDF9C0")]
	public int m_numberOfCharges;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDF9F8", Offset = "0xBDF9F8")]
	public int m_defaultNumberOfCharges;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDFA30", Offset = "0xBDFA30")]
	public float m_velocityThreshold;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDFA68", Offset = "0xBDFA68")]
	public List<Ammo> m_ammoList;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDFAA0", Offset = "0xBDFAA0")]
	public GameObject m_spellPrefab;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDFAD8", Offset = "0xBDFAD8")]
	public GameObject m_muzzleFlash;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDFB10", Offset = "0xBDFB10")]
	public float m_sizeRatio;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDFB48", Offset = "0xBDFB48")]
	public bool m_instant;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDFB80", Offset = "0xBDFB80")]
	public bool m_impact;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDFBB8", Offset = "0xBDFBB8")]
	public bool m_autoFire;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDFBF0", Offset = "0xBDFBF0")]
	public bool m_launch;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDFC28", Offset = "0xBDFC28")]
	public bool m_canalized;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDFC60", Offset = "0xBDFC60")]
	public bool m_useModifiers;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDFC98", Offset = "0xBDFC98")]
	public bool m_isHoming;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDFCD0", Offset = "0xBDFCD0")]
	public List<ModifierData> m_modifiers;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDFD08", Offset = "0xBDFD08")]
	public Event m_akEventCast;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDFD40", Offset = "0xBDFD40")]
	public Event m_akEventHolding;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public int m_damages;

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xF5C00C", Offset = "0xF5C00C", VA = "0xF5C00C")]
	public SpellData()
	{
	}
}
[Token(Token = "0x2000239")]
public class ShamanSphereInteractor : MonoBehaviour
{
	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_axisName;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDFD88", Offset = "0xBDFD88")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDFD88", Offset = "0xBDFD88")]
	public WandDataVariable m_wand;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BoolVariable m_useTrigger;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpellDataVariable m_spellInHand;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BoolVariable m_otherHandInChoice;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BoolVariable m_otherHandInGesture;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BoolVariable m_handInGesture;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BoolVariable m_arrowSelected;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool m_overrideTrigger;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDFDD8", Offset = "0xBDFDD8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDFDD8", Offset = "0xBDFDD8")]
	public ObjectArrayUnityEvent OnHandShamanSphereInteracted;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ObjectArrayUnityEvent OnHandShamanSphereLeave;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BoolVariable m_shamanSphereNavMode;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _interacting;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool _triggerPressed;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	private bool _trigger;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject m_shamanSphere;

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xE4DCC4", Offset = "0xE4DCC4", VA = "0xE4DCC4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xE4DD14", Offset = "0xE4DD14", VA = "0xE4DD14")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xE4DF30", Offset = "0xE4DF30", VA = "0xE4DF30")]
	private void ActivateCrystals()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xE4E5E8", Offset = "0xE4E5E8", VA = "0xE4E5E8")]
	private void DeactivateCrystals()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xE4EAB8", Offset = "0xE4EAB8", VA = "0xE4EAB8")]
	public void DeactivateCrystalsWithException(int instanceId)
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xE4EEF0", Offset = "0xE4EEF0", VA = "0xE4EEF0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xE4F100", Offset = "0xE4F100", VA = "0xE4F100")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xE4E490", Offset = "0xE4E490", VA = "0xE4E490")]
	public void Interaction()
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xE4EF78", Offset = "0xE4EF78", VA = "0xE4EF78")]
	public void LeaveShamanSphere()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xE4F260", Offset = "0xE4F260", VA = "0xE4F260")]
	public ShamanSphereInteractor()
	{
	}
}
[Token(Token = "0x200023A")]
internal class boolVariable
{
	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x2442980", Offset = "0x2442980", VA = "0x2442980")]
	public boolVariable()
	{
	}
}
[Token(Token = "0x200023B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD23D0", Offset = "0xBD23D0")]
public class HapticsData : ScriptableObject
{
	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDFE28", Offset = "0xBDFE28")]
	public float m_intensity;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDFE40", Offset = "0xBDFE40")]
	public float m_duration;

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xF238A4", Offset = "0xF238A4", VA = "0xF238A4")]
	public HapticsData()
	{
	}
}
[Token(Token = "0x200023C")]
public class Inject : MonoBehaviour
{
	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObjectVariable m_variableToInject;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDFE58", Offset = "0xBDFE58")]
	public GameObject m_gameObjectToInject;

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xF2F334", Offset = "0xF2F334", VA = "0xF2F334")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xF2F3E8", Offset = "0xF2F3E8", VA = "0xF2F3E8")]
	public Inject()
	{
	}
}
[Token(Token = "0x200023D")]
public static class Finder
{
	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<int, PlanetData> m_planetInstances;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<int, GameObject> m_instanceIdPlanetDataToGameObjectPlanet;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Dictionary<int, MoonData> m_moonInstances;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Dictionary<int, GameObject> m_instanceIDTable;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Dictionary<int, GameObject> m_enemiesIDTable;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Dictionary<int, ActorStruct> m_actorStructTable;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Dictionary<int, ActorStruct> m_actorSpawnerTable;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Dictionary<int, Label> m_spawnerCurve;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static ActorCollection m_actorDatas;

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xF0DD64", Offset = "0xF0DD64", VA = "0xF0DD64")]
	public static Label FindLabel(string labelName)
	{
		return null;
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0xF1BC48", Offset = "0xF1BC48", VA = "0xF1BC48")]
	public static ActorData FindActorDataWithInstanceId(int configId, ActorCollection actorDatas)
	{
		return null;
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0xF115E8", Offset = "0xF115E8", VA = "0xF115E8")]
	public static ActorData FindActorDataWithInstanceId(int configId)
	{
		return null;
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0xF10C4C", Offset = "0xF10C4C", VA = "0xF10C4C")]
	public static void AddActorData(ActorData data)
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0xF1BD10", Offset = "0xF1BD10", VA = "0xF1BD10")]
	public static void RemoveActorData(ActorData data)
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0xF101D0", Offset = "0xF101D0", VA = "0xF101D0")]
	public static void ClearActorDataCollection()
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0xF0DABC", Offset = "0xF0DABC", VA = "0xF0DABC")]
	public static GameObject FindGameObjectByLabel(string labelName)
	{
		return null;
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xF1BDE4", Offset = "0xF1BDE4", VA = "0xF1BDE4")]
	public static GameObject FindGameObjectByLabel(string labelName, GameObject parent)
	{
		return null;
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xF1BEE0", Offset = "0xF1BEE0", VA = "0xF1BEE0")]
	public static GameObject FindGameObjectByLabel(string labelName, int parentInstanceId)
	{
		return null;
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xF1C000", Offset = "0xF1C000", VA = "0xF1C000")]
	public static List<GameObject> FindGameObjectsByLabel(string labelName)
	{
		return null;
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xF11028", Offset = "0xF11028", VA = "0xF11028")]
	public static GameObject FindGameObjectWithInstanceId(int instanceId)
	{
		return null;
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xF10D20", Offset = "0xF10D20", VA = "0xF10D20")]
	public static ActorStruct FindActorStructWithInstanceId(int instanceId)
	{
		return default(ActorStruct);
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xF1C20C", Offset = "0xF1C20C", VA = "0xF1C20C")]
	public static ActorStruct FindActorSpawnerStructWithInstanceId(int instanceId)
	{
		return default(ActorStruct);
	}

	[Token(Token = "0x6000BF6")]
	public static T FindComponentInChildren<T>(GameObject parent)
	{
		return (T)null;
	}
}
[Token(Token = "0x200023E")]
public class LerpToPosition : CacheBehaviour
{
	[Token(Token = "0x200065F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8538", Offset = "0xBD8538")]
	private sealed class <StartLerpWithDelay>d__3 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LerpToPosition <>4__this;

		[Token(Token = "0x17000381")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600253A")]
			[Address(RVA = "0xF9CA30", Offset = "0xF9CA30", VA = "0xF9CA30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000382")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600253C")]
			[Address(RVA = "0xF9CA98", Offset = "0xF9CA98", VA = "0xF9CA98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0xF9C824", Offset = "0xF9C824", VA = "0xF9C824")]
		[DebuggerHidden]
		public <StartLerpWithDelay>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0xF9C970", Offset = "0xF9C970", VA = "0xF9C970", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0xF9C974", Offset = "0xF9C974", VA = "0xF9C974", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0xF9CA38", Offset = "0xF9CA38", VA = "0xF9CA38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3 m_destination;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float m_timeToLerp;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 _startPosition;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float _timeToSpend;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool _started;

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xF9C74C", Offset = "0xF9C74C", VA = "0xF9C74C")]
	public void StartLerp()
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xF9C798", Offset = "0xF9C798", VA = "0xF9C798")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA35C", Offset = "0xBEA35C")]
	public IEnumerator<float> StartLerpWithDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xF9C850", Offset = "0xF9C850", VA = "0xF9C850")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xF9C960", Offset = "0xF9C960", VA = "0xF9C960")]
	public LerpToPosition()
	{
	}
}
[Token(Token = "0x200023F")]
public class LerpToTarget : MonoBehaviour
{
	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObjectVariable m_target;

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xF9CAFC", Offset = "0xF9CAFC", VA = "0xF9CAFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xF9CD0C", Offset = "0xF9CD0C", VA = "0xF9CD0C")]
	public LerpToTarget()
	{
	}
}
[Token(Token = "0x2000240")]
public class LightColorFader : CacheBehaviour
{
	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ColorVariable m_destination;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float m_speed;

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xFA160C", Offset = "0xFA160C", VA = "0xFA160C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xFA171C", Offset = "0xFA171C", VA = "0xFA171C")]
	public LightColorFader()
	{
	}
}
[Token(Token = "0x2000241")]
public class LookAtTarget : CacheBehaviour
{
	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool m_moveForwardAfterLookAt;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObjectVariable m_target;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDFE90", Offset = "0xBDFE90")]
	public bool m_x;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	public bool m_y;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
	public bool m_z;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
	private bool _updateErrorShown;

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xFA7AF8", Offset = "0xFA7AF8", VA = "0xFA7AF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xFA7E90", Offset = "0xFA7E90", VA = "0xFA7E90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xFA81E4", Offset = "0xFA81E4", VA = "0xFA81E4")]
	public void LookAt()
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xFA8528", Offset = "0xFA8528", VA = "0xFA8528")]
	public LookAtTarget()
	{
	}
}
[Token(Token = "0x2000242")]
public class LookAtWorldOrigin : MonoBehaviour
{
	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xFA8530", Offset = "0xFA8530", VA = "0xFA8530")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xFA85E8", Offset = "0xFA85E8", VA = "0xFA85E8")]
	public LookAtWorldOrigin()
	{
	}
}
[Token(Token = "0x2000243")]
public class LookAtWorldOriginYAxisIgnored : MonoBehaviour
{
	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xFA85F0", Offset = "0xFA85F0", VA = "0xFA85F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xFA8670", Offset = "0xFA8670", VA = "0xFA8670")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xFA86F0", Offset = "0xFA86F0", VA = "0xFA86F0")]
	public LookAtWorldOriginYAxisIgnored()
	{
	}
}
[Token(Token = "0x2000244")]
public class ResetRotation : MonoBehaviour
{
	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _baseRotationX;

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xE3E2BC", Offset = "0xE3E2BC", VA = "0xE3E2BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xE3E2C8", Offset = "0xE3E2C8", VA = "0xE3E2C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xE3E2CC", Offset = "0xE3E2CC", VA = "0xE3E2CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xE3E374", Offset = "0xE3E374", VA = "0xE3E374")]
	public ResetRotation()
	{
	}
}
[Token(Token = "0x2000245")]
public class Rotate : CacheBehaviour
{
	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3 m_orientation;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float m_speed;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool m_random;

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xE405CC", Offset = "0xE405CC", VA = "0xE405CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xE40678", Offset = "0xE40678", VA = "0xE40678")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xE40758", Offset = "0xE40758", VA = "0xE40758")]
	public Rotate()
	{
	}
}
[Token(Token = "0x2000246")]
public class TriggerEvent : MonoBehaviour
{
	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_useTag;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_tag;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_useTriggerExit;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool m_useLayerMaskFilter;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LayerMask m_layerToCollideWith;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDFEC8", Offset = "0xBDFEC8")]
	public bool m_useIntEnterEvent;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent m_OnTriggerEnter;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public IntUnityEvent m_OnTriggerEnterInt;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDFF00", Offset = "0xBDFF00")]
	public bool m_useIntExitEvent;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent m_OnTriggerExit;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public IntUnityEvent m_OnTriggerExitInt;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool m_useInstanceId;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject instanceIdGo;

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xF6D048", Offset = "0xF6D048", VA = "0xF6D048")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xF6D04C", Offset = "0xF6D04C", VA = "0xF6D04C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xF6D178", Offset = "0xF6D178", VA = "0xF6D178")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xF6D2AC", Offset = "0xF6D2AC", VA = "0xF6D2AC")]
	public TriggerEvent()
	{
	}
}
[Token(Token = "0x2000247")]
public class TriggerEventInputWithDelay : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000660")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8548", Offset = "0xBD8548")]
	private sealed class <>c
	{
		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__6_0;

		[Token(Token = "0x600253E")]
		[Address(RVA = "0xF6D554", Offset = "0xF6D554", VA = "0xF6D554")]
		public <>c()
		{
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0xF6D55C", Offset = "0xF6D55C", VA = "0xF6D55C")]
		internal bool <OnTriggerStay>b__6_0(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_tag;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_axisName;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_delay;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public StringUnityEvent OnTriggerDelay;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform parent;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _delay;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _interacted;

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xF6D2B4", Offset = "0xF6D2B4", VA = "0xF6D2B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xF6D2C0", Offset = "0xF6D2C0", VA = "0xF6D2C0")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xF6D4D4", Offset = "0xF6D4D4", VA = "0xF6D4D4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xF6D4E4", Offset = "0xF6D4E4", VA = "0xF6D4E4")]
	public TriggerEventInputWithDelay()
	{
	}
}
[Token(Token = "0x2000248")]
public class WaitForTimeEvent : MonoBehaviour
{
	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrailRenderer m_trailRenderer;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int m_instanceId;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntUnityEvent m_OnActorFinishedAction;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _time;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _finished;

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0xF79B64", Offset = "0xF79B64", VA = "0xF79B64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xF79B80", Offset = "0xF79B80", VA = "0xF79B80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xF79BB4", Offset = "0xF79BB4", VA = "0xF79BB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xF79C94", Offset = "0xF79C94", VA = "0xF79C94")]
	public WaitForTimeEvent()
	{
	}
}
[Token(Token = "0x2000249")]
public class PlateauManager : MonoBehaviour
{
	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> plateaux;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnWinGame;

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xEE72D4", Offset = "0xEE72D4", VA = "0xEE72D4")]
	public void PlateauActivator(int plateauNumber)
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xEE737C", Offset = "0xEE737C", VA = "0xEE737C")]
	public PlateauManager()
	{
	}
}
[Token(Token = "0x200024A")]
public class PerkManager : MonoBehaviour
{
	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xEE1738", Offset = "0xEE1738", VA = "0xEE1738")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xEE173C", Offset = "0xEE173C", VA = "0xEE173C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xEE1740", Offset = "0xEE1740", VA = "0xEE1740")]
	public PerkManager()
	{
	}
}
[Token(Token = "0x200024B")]
public class GobelinManager : ActorManager
{
	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public IntUnityEvent m_destroyGobelin;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public UnityEvent m_onGoblinLevelFinished;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[HideInInspector]
	public float m_increment;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	[HideInInspector]
	public float m_stayTime;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[HideInInspector]
	public bool m_isIntVar;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[HideInInspector]
	public FloatVariable m_varFloat;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[HideInInspector]
	public IntVariable m_varInt;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[HideInInspector]
	public bool m_spawnedByPertubatorsManager;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float _stayingTime;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float _currentTime;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private bool _staying;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
	private bool _waitingDestruction;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private GobelinData _data;

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xF20420", Offset = "0xF20420", VA = "0xF20420")]
	public int InstanceId()
	{
		return default(int);
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xF20428", Offset = "0xF20428", VA = "0xF20428")]
	public void SetData(GobelinData data)
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xF20494", Offset = "0xF20494", VA = "0xF20494")]
	public void OnlyStartWhenOnGrid()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xF204A4", Offset = "0xF204A4", VA = "0xF204A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xF204DC", Offset = "0xF204DC", VA = "0xF204DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xF20AB0", Offset = "0xF20AB0", VA = "0xF20AB0", Slot = "4")]
	public override void OnReceivedSnapPosition(Vector3IntGameEventStruct str)
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xF20E38", Offset = "0xF20E38", VA = "0xF20E38")]
	public void OnTriggerEnter()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xF20ED8", Offset = "0xF20ED8", VA = "0xF20ED8")]
	public GobelinManager()
	{
	}
}
[Token(Token = "0x200024C")]
public class PertubatorsManager : CacheBehaviour
{
	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDFFA8", Offset = "0xBDFFA8")]
	public FloatVariable m_timeBetweenCheck;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDFFE0", Offset = "0xBDFFE0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBDFFE0", Offset = "0xBDFFE0")]
	public List<GobelinData> m_listCurrencyGobelin;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public List<GobelinData> m_listLifeGobelin;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<GobelinData> m_listManaGobelin;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0030", Offset = "0xBE0030")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE0030", Offset = "0xBE0030")]
	public FloatVariable m_oddsCurrencyGobelin;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public FloatVariable m_oddsLifeGobelin;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public FloatVariable m_oddsManaGobelin;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0080", Offset = "0xBE0080")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE0080", Offset = "0xBE0080")]
	public IntVariable m_maxAmountCurrencyGobelin;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public IntVariable m_maxAmountLifeGobelin;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public IntVariable m_maxAmountManaGobelin;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE00D0", Offset = "0xBE00D0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE00D0", Offset = "0xBE00D0")]
	public FloatVariable m_gobelinChance;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0120", Offset = "0xBE0120")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE0120", Offset = "0xBE0120")]
	public IntVariable m_scoreMultiplier;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0170", Offset = "0xBE0170")]
	public SpawnGrid m_gridManager;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE01A8", Offset = "0xBE01A8")]
	public DirectorManager m_directorManager;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float _beginTime;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float _currentTime;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool _started;

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xEE1BFC", Offset = "0xEE1BFC", VA = "0xEE1BFC")]
	public void StartCheckingOdds()
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xEE1C2C", Offset = "0xEE1C2C", VA = "0xEE1C2C")]
	public void StopCheckingOdds()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xEE1C3C", Offset = "0xEE1C3C", VA = "0xEE1C3C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xEE1E7C", Offset = "0xEE1E7C", VA = "0xEE1E7C")]
	private void CheckAndInstantiate()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xEE20B4", Offset = "0xEE20B4", VA = "0xEE20B4")]
	private void InstantiateGobelins(List<GobelinData> list, IntVariable amountVariable)
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xEE1FA0", Offset = "0xEE1FA0", VA = "0xEE1FA0")]
	private bool CheckOdds(FloatVariable oddsVariable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xEE25D0", Offset = "0xEE25D0", VA = "0xEE25D0")]
	public PertubatorsManager()
	{
	}
}
[Token(Token = "0x200024D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD2430", Offset = "0xBD2430")]
public class GobelinData : ActorData
{
	[Token(Token = "0x2000661")]
	public enum VariableType
	{
		[Token(Token = "0x4001FD5")]
		FLOAT,
		[Token(Token = "0x4001FD6")]
		INT
	}

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE01E0", Offset = "0xBE01E0")]
	public VariableType m_variableAffectedType;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public FloatVariable m_variableAffectedFloat;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public IntVariable m_variableAffectedInt;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE0218", Offset = "0xBE0218")]
	public float m_incrementAmountOnHit;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float m_stayTime;

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xF203C4", Offset = "0xF203C4", VA = "0xF203C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xF20418", Offset = "0xF20418", VA = "0xF20418")]
	public GobelinData()
	{
	}
}
[Token(Token = "0x200024E")]
public class LifeSupportManager : CacheBehaviour
{
	[Token(Token = "0x2000662")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8558", Offset = "0xBD8558")]
	private sealed class <WaitForShamanSphere>d__40 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LifeSupportManager <>4__this;

		[Token(Token = "0x17000383")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002543")]
			[Address(RVA = "0xFA1540", Offset = "0xFA1540", VA = "0xFA1540", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000384")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002545")]
			[Address(RVA = "0xFA15A8", Offset = "0xFA15A8", VA = "0xFA15A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0xFA0BA0", Offset = "0xFA0BA0", VA = "0xFA0BA0")]
		[DebuggerHidden]
		public <WaitForShamanSphere>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0xFA139C", Offset = "0xFA139C", VA = "0xFA139C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0xFA13A0", Offset = "0xFA13A0", VA = "0xFA13A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0xFA1548", Offset = "0xFA1548", VA = "0xFA1548", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<string> m_handTags;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE022C", Offset = "0xBE022C")]
	public GameObject m_lifeSupportAfterEnemyDeath;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject m_lifeSupportInHand;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Vector3 m_lifeSupportInHandOffset;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public Vector3 m_lifeSupportInHandScale;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject m_lifeSupportLaunch;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject m_qteObjectManager;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject m_shamanSphere;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0264", Offset = "0xBE0264")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE0264", Offset = "0xBE0264")]
	public IntVariable m_lifeSupportChance;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public IntVariable m_lifeSupportAcquired;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public BoolVariable m_useBatchSystem;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public IntVariable m_currentBatchEnemyCount;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public IntVariable m_currentBatchIndex;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public IntVariable m_numberOfBatches;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public IntVariable m_leftCharges;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public IntVariable m_rightCharges;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE02B4", Offset = "0xBE02B4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE02B4", Offset = "0xBE02B4")]
	public float m_lerpToBackTime;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0304", Offset = "0xBE0304")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE0304", Offset = "0xBE0304")]
	public GameObject m_rightGripPressed;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject m_rigthGripReleased;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject m_leftGripPressed;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject m_leftGripReleased;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public StringUnityEvent OnAllChargesLaunchedString;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0354", Offset = "0xBE0354")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE0354", Offset = "0xBE0354")]
	public Transform m_rightHandTransform;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Transform m_leftHandTransform;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE03A4", Offset = "0xBE03A4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE03A4", Offset = "0xBE03A4")]
	public GameObjectVariable m_nextMoonToRegen;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE03F4", Offset = "0xBE03F4")]
	public float m_goingToMoonTime;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE042C", Offset = "0xBE042C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE042C", Offset = "0xBE042C")]
	public UnityEvent OnLifeSupportAcquired;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public UnityEvent OnLifeSupportSent;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public UnityEvent OnDestroySpells;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE047C", Offset = "0xBE047C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE047C", Offset = "0xBE047C")]
	public MoonSelector m_moonSelector;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private List<GameObject> _lifeSupports;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private List<float> _lifeSupportsLerpTime;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private GameObject _lifeSupportToLaunch;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private bool _supportsToLerp;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
	private bool _supportsGrabbed;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CA")]
	private bool _intoGrabArea;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CB")]
	private bool _supportGoingToMoon;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private bool _shockwaving;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float _supportGoingToMoonTime;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private Vector3 _supportOriginPos;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private Transform _moonToRegenTransform;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private Transform _handTransform;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private bool _inRightHand;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private GameObject _tempGO;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Vector3 _shamanSphereOriginalPos;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private bool _dead;

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xF9F218", Offset = "0xF9F218", VA = "0xF9F218")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xF9F27C", Offset = "0xF9F27C", VA = "0xF9F27C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xF9F6E8", Offset = "0xF9F6E8", VA = "0xF9F6E8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xF9F800", Offset = "0xF9F800", VA = "0xF9F800")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xF9F904", Offset = "0xF9F904", VA = "0xF9F904")]
	public void OnActorDeadPosition(Vector3 position)
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xF9FFE0", Offset = "0xF9FFE0", VA = "0xF9FFE0")]
	public void OnBossDead()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xFA03DC", Offset = "0xFA03DC", VA = "0xFA03DC")]
	public void OnButtonPressed(bool isRight)
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xFA05A0", Offset = "0xFA05A0", VA = "0xFA05A0")]
	public void OnLevelStarted()
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0xFA05E4", Offset = "0xFA05E4", VA = "0xFA05E4")]
	public void OnLevelFinished()
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0xFA0600", Offset = "0xFA0600", VA = "0xFA0600")]
	public void OnQTELifeSupportSent()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0xFA0B24", Offset = "0xFA0B24", VA = "0xFA0B24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA3C0", Offset = "0xBEA3C0")]
	public IEnumerator<float> WaitForShamanSphere()
	{
		return null;
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0xFA0BCC", Offset = "0xFA0BCC", VA = "0xFA0BCC")]
	public void OnDeath()
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0xFA0C84", Offset = "0xFA0C84", VA = "0xFA0C84")]
	public void OnButtonReleased(bool isRight)
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0xFA10E4", Offset = "0xFA10E4", VA = "0xFA10E4")]
	public void OnPlanetRegenerated()
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0xFA1178", Offset = "0xFA1178", VA = "0xFA1178")]
	public void OnShockwaveFinished()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xFA1180", Offset = "0xFA1180", VA = "0xFA1180")]
	public LifeSupportManager()
	{
	}
}
[Token(Token = "0x200024F")]
public class MoonSelector : CacheBehaviour
{
	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE04CC", Offset = "0xBE04CC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE04CC", Offset = "0xBE04CC")]
	public GameObjectVariable m_nextMoonToRegen;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObjectVariable m_autoAimPlanetRight;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObjectVariable m_autoAimPlanetLeft;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE051C", Offset = "0xBE051C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE051C", Offset = "0xBE051C")]
	public RegenerationDetector m_regenerationDetector;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE056C", Offset = "0xBE056C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE056C", Offset = "0xBE056C")]
	public GameObject m_currentMoonReticle;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject m_nextMoonReticle;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject m_prefabReadyMoonReticle;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE05BC", Offset = "0xBE05BC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE05BC", Offset = "0xBE05BC")]
	public UnityEvent m_OnBeginSelection;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public UnityEvent m_OnEndSelection;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public UnityEvent OnReadyDisplayed;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public UnityEvent OnReadyHidden;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool _buttonAPressed;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	private bool _buttonXPressed;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
	private bool _rightHandMaster;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private PlanetRegeneration _currentPlanetRegen;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private GameObject _currentMoon;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool _selecting;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private GameObject _currentMoonSelected;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Vector3 _tempPos;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Dictionary<int, GameObject> _readyUI;

	[Token(Token = "0x17000097")]
	public PlanetRegeneration m_currentPlanetRegen
	{
		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x15464A4", Offset = "0x15464A4", VA = "0x15464A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x15464AC", Offset = "0x15464AC", VA = "0x15464AC")]
	public void OnButtonOnePressed()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x15466F0", Offset = "0x15466F0", VA = "0x15466F0")]
	public void OnButtonOneReleased()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x1546754", Offset = "0x1546754", VA = "0x1546754")]
	public void OnButtonThreePressed()
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x1546770", Offset = "0x1546770", VA = "0x1546770")]
	public void OnButtonThreeReleased()
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x15467D4", Offset = "0x15467D4", VA = "0x15467D4")]
	public void OnRefreshMostPertinentTarget()
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x1546C98", Offset = "0x1546C98", VA = "0x1546C98")]
	public void OnPlanetRegenerated()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x1546F4C", Offset = "0x1546F4C", VA = "0x1546F4C")]
	public void OnPlanetReady(int instanceid)
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x1547258", Offset = "0x1547258", VA = "0x1547258")]
	public void OnLevelStarted()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x15472B0", Offset = "0x15472B0", VA = "0x15472B0")]
	private void ShowUI()
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x15472F4", Offset = "0x15472F4", VA = "0x15472F4")]
	public void HideUI()
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x15464C8", Offset = "0x15464C8", VA = "0x15464C8")]
	public void BeginSelectMoon()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x1547448", Offset = "0x1547448", VA = "0x1547448")]
	public void SelectCurrentMoon()
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x1546C9C", Offset = "0x1546C9C", VA = "0x1546C9C")]
	public void RefreshCurrentMoon()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x1547788", Offset = "0x1547788", VA = "0x1547788")]
	public void DeactivateCurrentMoon()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x15477A8", Offset = "0x15477A8", VA = "0x15477A8")]
	public void SetHand(bool isRightHand)
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x15477B4", Offset = "0x15477B4", VA = "0x15477B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x1547840", Offset = "0x1547840", VA = "0x1547840")]
	public MoonSelector()
	{
	}
}
[Token(Token = "0x2000250")]
public enum MoonElement
{
	[Token(Token = "0x4000E4B")]
	Azote,
	[Token(Token = "0x4000E4C")]
	Phosphorus,
	[Token(Token = "0x4000E4D")]
	Carbon,
	[Token(Token = "0x4000E4E")]
	Water,
	[Token(Token = "0x4000E4F")]
	Sulfur
}
[Token(Token = "0x2000251")]
public class PlanetRegeneration : CacheBehaviour
{
	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE060C", Offset = "0xBE060C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE060C", Offset = "0xBE060C")]
	public string m_boidBallTag;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int m_currentRegenLevel;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public int m_regenLevelNeeded;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE065C", Offset = "0xBE065C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE065C", Offset = "0xBE065C")]
	public TextMeshPro m_lifeCounterText;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LabelHolder m_autoAimHolder;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE06AC", Offset = "0xBE06AC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE06AC", Offset = "0xBE06AC")]
	public GameObjectVariable m_headset;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public IntVariable m_lifeSupportAcquired;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public IntVariable m_currentElementCount;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE06FC", Offset = "0xBE06FC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE06FC", Offset = "0xBE06FC")]
	public IntGameEvent OnPlanetRegenerableCreated;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public IntGameEvent OnPlanetRegeneratedEvent;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameEvent OnLifeSupportsSpent;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public IntUnityEvent OnPlanetReadyEvent;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public IntGameEvent OnPlanetReadyGameEvent;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameEventListener m_listenerOnLifeSupportAcquired;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE074C", Offset = "0xBE074C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE074C", Offset = "0xBE074C")]
	public Event m_OnRegeneratedWwiseEvent;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Color _tempColor;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Transform _headsetTransform;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int _instanceID;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private bool _regenerated;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private IDChecker _idchecker;

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xEE5688", Offset = "0xEE5688", VA = "0xEE5688")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xEE56D8", Offset = "0xEE56D8", VA = "0xEE56D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xEE58CC", Offset = "0xEE58CC", VA = "0xEE58CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xEE5948", Offset = "0xEE5948", VA = "0xEE5948")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xEE6504", Offset = "0xEE6504", VA = "0xEE6504")]
	public void OnLifeSupportAcquired()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xEE65B4", Offset = "0xEE65B4", VA = "0xEE65B4")]
	private void UpdateTextMeshProAlpha(float value)
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xEE6620", Offset = "0xEE6620", VA = "0xEE6620")]
	private void OnFadeInComplete()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xEE6278", Offset = "0xEE6278", VA = "0xEE6278")]
	private void RunTweenValueTo(string onupdate, float from, float to, float time, float delay = -1f, [Optional] string easeType, [Optional] string oncomplete)
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xEE669C", Offset = "0xEE669C", VA = "0xEE669C")]
	public PlanetRegeneration()
	{
	}
}
[Token(Token = "0x2000252")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD2490", Offset = "0xBD2490")]
public class TelekineticData : ScriptableObject
{
	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_telekineticDistance;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE079C", Offset = "0xBE079C")]
	public float m_telekineticForce;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE07B4", Offset = "0xBE07B4")]
	public float m_thresholdDistance;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE07EC", Offset = "0xBE07EC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE07EC", Offset = "0xBE07EC")]
	public float m_accelerationForce;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0840", Offset = "0xBE0840")]
	public float m_deadZoneAroundPlayer;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE0878", Offset = "0xBE0878")]
	public float m_depthForce;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0890", Offset = "0xBE0890")]
	public LayerMask m_affectedLayers;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE08C8", Offset = "0xBE08C8")]
	public bool m_useTelekineticEffect;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_curve;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0900", Offset = "0xBE0900")]
	public bool m_useInertia;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0938", Offset = "0xBE0938")]
	public float m_inertiaSpeed;

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xF61A68", Offset = "0xF61A68", VA = "0xF61A68")]
	public TelekineticData()
	{
	}
}
[Token(Token = "0x2000253")]
public class PlayerManager : MonoBehaviour
{
	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntVariable m_health;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnDeath;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_deathPrefab;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 m_positionDeathPrefab;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0970", Offset = "0xBE0970")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE0970", Offset = "0xBE0970")]
	public IntVariable m_reviveLives;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnRevive;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _touchTimer;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _touched;

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xEE770C", Offset = "0xEE770C", VA = "0xEE770C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xEE7754", Offset = "0xEE7754", VA = "0xEE7754")]
	public void OnTouched()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xEE776C", Offset = "0xEE776C", VA = "0xEE776C")]
	public void DealDamage(int damage = 1, float touchTimer = 1f)
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0xEE79FC", Offset = "0xEE79FC", VA = "0xEE79FC")]
	public PlayerManager()
	{
	}
}
[Token(Token = "0x2000254")]
public class SpellUser : CacheBehaviour
{
	[Token(Token = "0x2000663")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8568", Offset = "0xBD8568")]
	private sealed class <ShootCountdown>d__35 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpellUser <>4__this;

		[Token(Token = "0x17000385")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002549")]
			[Address(RVA = "0xF5F788", Offset = "0xF5F788", VA = "0xF5F788", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000386")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600254B")]
			[Address(RVA = "0xF5F7F0", Offset = "0xF5F7F0", VA = "0xF5F7F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0xF5EC58", Offset = "0xF5EC58", VA = "0xF5EC58")]
		[DebuggerHidden]
		public <ShootCountdown>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0xF5F6B8", Offset = "0xF5F6B8", VA = "0xF5F6B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0xF5F6BC", Offset = "0xF5F6BC", VA = "0xF5F6BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0xF5F790", Offset = "0xF5F790", VA = "0xF5F790", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public VelocityTracker m_velocity;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE09C0", Offset = "0xBE09C0")]
	public GameObjectVariable m_rightHandSpell;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SpellDataVariable m_rightHandSpellData;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObjectVariable m_leftHandSpell;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public SpellDataVariable m_leftHandSpellData;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public IntVariable m_numberOfChargeLeft;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public IntVariable m_numberOfChargeRight;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float m_velocityThreshold;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject m_shooter;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public FloatVariable m_manaVariable;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public BoolVariable m_useTrigger;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public string m_axisName;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public string m_grabAxisName;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public BoolVariable m_canShoot;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public BoolVariable m_isPaused;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public BoolVariable m_useGunSystem;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Vector3Variable m_controllerVelocity;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE09F8", Offset = "0xBE09F8")]
	public float m_baseScale;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float m_scaleFactor;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0A30", Offset = "0xBE0A30")]
	public FloatVariable m_critOdds;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public FloatVariable m_critMulti;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public FloatVariable m_shamanBaseDmgMulti;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0A68", Offset = "0xBE0A68")]
	public GameObjectVariable m_spell;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public SpellDataVariable m_spellData;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public IntVariable m_numberOfCharge;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0AA0", Offset = "0xBE0AA0")]
	public bool m_useAutoAim;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObjectVariable m_autoAimedEnemy;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject m_autoAimCone;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0AD8", Offset = "0xBE0AD8")]
	public UnityEvent OnSpellLaunched;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public UnityEvent OnAllChargesLaunched;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public StringUnityEvent OnAllChargesLaunchedString;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObjectGameEvent m_OnSpellLaunched;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public ObjectGameEvent m_OnSpellDataLaunched;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Vector3 _velocity;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private bool _reachVelocityTreshold;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Vector3 _firstPos;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private Vector3 _firstShooterForward;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private bool _slashBegun;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private float _baseScale;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private bool _canalized;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
	private bool _isRight;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private Vector3 _autoAimConeBaseSize;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private bool _homingUnactive;

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xF5C180", Offset = "0xF5C180", VA = "0xF5C180")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0xF5C3B8", Offset = "0xF5C3B8", VA = "0xF5C3B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0xF5EBDC", Offset = "0xF5EBDC", VA = "0xF5EBDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA424", Offset = "0xBEA424")]
	private IEnumerator<float> ShootCountdown()
	{
		return null;
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xF5EA00", Offset = "0xF5EA00", VA = "0xF5EA00")]
	private void BeginDeceleration()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xF5EC84", Offset = "0xF5EC84", VA = "0xF5EC84")]
	public void LaunchSpell()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xF5D0F4", Offset = "0xF5D0F4", VA = "0xF5D0F4")]
	private void LaunchSpell(SpellDataVariable spellDataVar, GameObjectVariable spellGOVariable, IntVariable chargesVariables, bool tooSoon = false)
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xF5EE7C", Offset = "0xF5EE7C", VA = "0xF5EE7C")]
	public void DestroySpells()
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0xF5EC94", Offset = "0xF5EC94", VA = "0xF5EC94")]
	private int CalculateDamages(AmmoBehaviour ammoBehav, int baseDamage)
	{
		return default(int);
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0xF5F6B0", Offset = "0xF5F6B0", VA = "0xF5F6B0")]
	public SpellUser()
	{
	}
}
[Token(Token = "0x2000255")]
public class DirectorGenerator : CacheBehaviour
{
	[Token(Token = "0x2000664")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8578", Offset = "0xBD8578")]
	private sealed class <>c__DisplayClass30_0
	{
		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string spawnGroup;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Func<SpawnerGroupData, bool> <>9__0;

		[Token(Token = "0x600254C")]
		[Address(RVA = "0xF0DBCC", Offset = "0xF0DBCC", VA = "0xF0DBCC")]
		public <>c__DisplayClass30_0()
		{
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0xF0F5A4", Offset = "0xF0F5A4", VA = "0xF0F5A4")]
		internal bool <BuildBossLevelDirector>b__0(SpawnerGroupData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000665")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8588", Offset = "0xBD8588")]
	private sealed class <>c__DisplayClass30_1
	{
		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string actorColumn;

		[Token(Token = "0x600254E")]
		[Address(RVA = "0xF0DD5C", Offset = "0xF0DD5C", VA = "0xF0DD5C")]
		public <>c__DisplayClass30_1()
		{
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0xF0F5C8", Offset = "0xF0F5C8", VA = "0xF0F5C8")]
		internal bool <BuildBossLevelDirector>b__1(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000666")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8598", Offset = "0xBD8598")]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string spawnGroup;

		[Token(Token = "0x6002550")]
		[Address(RVA = "0xF0E748", Offset = "0xF0E748", VA = "0xF0E748")]
		public <>c__DisplayClass32_0()
		{
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0xF0F5DC", Offset = "0xF0F5DC", VA = "0xF0F5DC")]
		internal bool <CreateSpawnList>b__0(SpawnerGroupData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000667")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD85A8", Offset = "0xBD85A8")]
	private sealed class <>c__DisplayClass32_1
	{
		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int j;

		[Token(Token = "0x6002552")]
		[Address(RVA = "0xF0E750", Offset = "0xF0E750", VA = "0xF0E750")]
		public <>c__DisplayClass32_1()
		{
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0xF0F600", Offset = "0xF0F600", VA = "0xF0F600")]
		internal bool <CreateSpawnList>b__2(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000668")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD85B8", Offset = "0xBD85B8")]
	private sealed class <>c__DisplayClass32_2
	{
		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string actorColumn;

		[Token(Token = "0x6002554")]
		[Address(RVA = "0xF0E758", Offset = "0xF0E758", VA = "0xF0E758")]
		public <>c__DisplayClass32_2()
		{
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0xF0F680", Offset = "0xF0F680", VA = "0xF0F680")]
		internal bool <CreateSpawnList>b__1(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000669")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD85C8", Offset = "0xBD85C8")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string recipeId;

		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int moonCount;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string type;

		[Token(Token = "0x6002556")]
		[Address(RVA = "0xF0E760", Offset = "0xF0E760", VA = "0xF0E760")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0xF0F694", Offset = "0xF0F694", VA = "0xF0F694")]
		internal bool <SelectLevelSettings>b__0(LevelSettingsData x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0xF0F6B8", Offset = "0xF0F6B8", VA = "0xF0F6B8")]
		internal bool <SelectLevelSettings>b__1(LevelSettingsData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0B10", Offset = "0xBE0B10")]
	public IntVariable m_difficultyGlobal;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ShopManager m_shopManager;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Label m_dataHolderLabel;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LevelGenerator m_levelGenerator;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public LevelData m_levelDataContainer;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string m_prefixLevelBoss;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string m_prefixLevelGobelin;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string m_prefixLevelLockedShop;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string m_nameLevelClassic;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string m_nameLevelElite;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public string m_nameLevelShop;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string m_nameInteractiveLore;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public List<GameObject> m_timeChangers;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public List<ActorData> m_actorConfigs;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public string m_spawnPointPrefix;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public string m_spawnerPrefix;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float m_spawnerDelayBeforeSpawning;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject m_spawnerPrefab;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float m_spawnBetweenDelaySpawn;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float m_actionDelay;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0B48", Offset = "0xBE0B48")]
	public LevelSettingsCollection m_levelSettingsCollection;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0B80", Offset = "0xBE0B80")]
	public SpawnerGroupCollection m_spawnerGroupCollection;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public UnityEvent OnLevelStarted;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[HideInInspector]
	public int m_maxDifficulty;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Dictionary<string, ActorData> _actorDataDico;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Dictionary<string, SpawnListData> _spawnlists;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Dictionary<string, GameObject> _timeChangers;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private string _spawnerGroupField;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private string _spawnerCountField;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private string _spawnerMaxEnemyField;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private LevelSettingsData _levelSelected;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool _levelCleared;

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0xF0B278", Offset = "0xF0B278", VA = "0xF0B278")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0xF0B4C0", Offset = "0xF0B4C0", VA = "0xF0B4C0")]
	public void ClearDirector()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xF0B53C", Offset = "0xF0B53C", VA = "0xF0B53C")]
	public void BuildDirector(int moonCount, string type, [Optional] string recipeId)
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xF0DA6C", Offset = "0xF0DA6C", VA = "0xF0DA6C")]
	private void BuildInteractiveLoreDirector()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xF0CF1C", Offset = "0xF0CF1C", VA = "0xF0CF1C")]
	private void BuildGoblinLevel()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xF0D828", Offset = "0xF0D828", VA = "0xF0D828")]
	private void BuildShopLevel()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xF0CF7C", Offset = "0xF0CF7C", VA = "0xF0CF7C")]
	private void BuildBossLevelDirector(bool bossLevel = true)
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xF0C81C", Offset = "0xF0C81C", VA = "0xF0C81C")]
	private void BuildClassicLevelDirector()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xF0DF3C", Offset = "0xF0DF3C", VA = "0xF0DF3C")]
	private SpawnListData CreateSpawnList(string spawnGroup, Label spawnpoint)
	{
		return null;
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xF0BBC4", Offset = "0xF0BBC4", VA = "0xF0BBC4")]
	private void SelectLevelSettings(int moonCount, string type, [Optional] string recipeId)
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xF0E768", Offset = "0xF0E768", VA = "0xF0E768")]
	private LevelSettingsData CloneLevelSettingsData(LevelSettingsData original)
	{
		return null;
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xF0B29C", Offset = "0xF0B29C", VA = "0xF0B29C")]
	private void CreateActorDico()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xF0B3D4", Offset = "0xF0B3D4", VA = "0xF0B3D4")]
	private void CreateTimeChangersDico()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xF0E870", Offset = "0xF0E870", VA = "0xF0E870")]
	private WaveSettingsData CreateWaveSettings(int index, JSONObject jsonObject)
	{
		return null;
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xF0DBD4", Offset = "0xF0DBD4", VA = "0xF0DBD4")]
	private SpawnerGroupData.SpawnlistRate GetRandomSpawnlist(List<SpawnerGroupData.SpawnlistRate> spawnlistRates)
	{
		return default(SpawnerGroupData.SpawnlistRate);
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xF0F378", Offset = "0xF0F378", VA = "0xF0F378")]
	public DirectorGenerator()
	{
	}
}
[Token(Token = "0x2000256")]
public class LevelSettingsData : ScriptableObject
{
	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_settingId;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_type;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_difficultyTier;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<int> m_diffTierInt;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int m_moonCount;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int m_rate;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int m_waveCount;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string m_timeChangerPrefabName;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<WaveSettingsData> m_wavesSettings;

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xF9F198", Offset = "0xF9F198", VA = "0xF9F198")]
	public LevelSettingsData()
	{
	}
}
[Token(Token = "0x2000257")]
public class WaveSettingsData : ScriptableObject
{
	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_spawnerGroup;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_prefabGridRythmTime;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_spawnerCount;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int m_maxEnemySpawner;

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xF7B360", Offset = "0xF7B360", VA = "0xF7B360")]
	public WaveSettingsData()
	{
	}
}
[Token(Token = "0x2000258")]
public class LevelGenerator : CacheBehaviour
{
	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public DirectorGenerator m_directorGenerator;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public RegenerationDetector m_regenerationDetector;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string m_moonPositionPrefix;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public PlanetData m_planet;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool m_loadLevelOnStart;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	public bool m_invokeDeloadLoadWithDelay;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float m_invokeDelay;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0BC8", Offset = "0xBE0BC8")]
	public List<Label> m_spawnpoints;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0C00", Offset = "0xBE0C00")]
	public List<Label> m_spawnerCurveLabels;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0C38", Offset = "0xBE0C38")]
	public List<Material> m_skyboxMaterials;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public UnityEvent OnMoonsInstantiated;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE0C70", Offset = "0xBE0C70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0C70", Offset = "0xBE0C70")]
	public IntGameEvent OnPlanetRegenerableCreated;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public IntGameEvent OnPlanetRegeneratedEvent;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameEvent OnLifeSupportsSpent;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public IntGameEvent OnPlanetReady;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Label m_labelAutoAimablePlanet;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public IntVariable m_lifeSupportAcquired;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObjectVariable m_headset;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE0CC0", Offset = "0xBE0CC0")]
	public IntVariable m_currentAzote;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public IntVariable m_currentCarbon;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public IntVariable m_currentPhosphorus;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public IntVariable m_currentSulfur;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public IntVariable m_currentWater;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[HideInInspector]
	public Dictionary<Label, Label> m_spawnpointsCurve;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GameObject _worldPrefab;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private List<GameObject> _moons;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private List<GameObject> _moonsLoaded;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Dictionary<string, Material> _skyboxesDico;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Dictionary<string, IResourceLocation> _dicoRes;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private int _moonToLoad;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private string[] _planetTypes;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private List<PlanetRegeneration> _moonRegen;

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xF9CD9C", Offset = "0xF9CD9C", VA = "0xF9CD9C")]
	public void OnLifeSupportAcquired()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xF9CEC0", Offset = "0xF9CEC0", VA = "0xF9CEC0")]
	public void DeloadPreviousLevel()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xF9D0D4", Offset = "0xF9D0D4", VA = "0xF9D0D4")]
	public void LoadLevel()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xF9D5F8", Offset = "0xF9D5F8", VA = "0xF9D5F8")]
	private void ApplyRandomRotationToSkybox()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xF9D724", Offset = "0xF9D724", VA = "0xF9D724")]
	public void OnNewPlanetToLoad(int planetDataInstanceid)
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xF9D89C", Offset = "0xF9D89C", VA = "0xF9D89C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xF9D998", Offset = "0xF9D998", VA = "0xF9D998")]
	private void OnAddressablesInitialized(AsyncOperationHandle<IResourceLocator> obj)
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xF9D9EC", Offset = "0xF9D9EC", VA = "0xF9D9EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xF9DBF4", Offset = "0xF9DBF4", VA = "0xF9DBF4")]
	private void OnMoonLoaded(AsyncOperationHandle<GameObject> obj)
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xF9DEBC", Offset = "0xF9DEBC", VA = "0xF9DEBC")]
	private void InstantiateMoons()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xF9EBDC", Offset = "0xF9EBDC", VA = "0xF9EBDC")]
	private IntVariable GetCurrentCountVariable(MoonElement elmt)
	{
		return null;
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xF9D6C8", Offset = "0xF9D6C8", VA = "0xF9D6C8")]
	private void OnEndMoonsInstanciation(int moonCount)
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xF9EC30", Offset = "0xF9EC30", VA = "0xF9EC30")]
	public LevelGenerator()
	{
	}
}
[Token(Token = "0x2000259")]
public class MoonInformationLinks : CacheBehaviour
{
	[Token(Token = "0x200066A")]
	public enum MoonType
	{
		[Token(Token = "0x4001FE7")]
		AZOTE,
		[Token(Token = "0x4001FE8")]
		PHOSPHORUS,
		[Token(Token = "0x4001FE9")]
		CARBON,
		[Token(Token = "0x4001FEA")]
		WATER,
		[Token(Token = "0x4001FEB")]
		SULFUR
	}

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LabelHolder m_spawnpointLabelHolder;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public LabelHolder m_spawncurveLabelHolder;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public MoonType m_type;

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x154649C", Offset = "0x154649C", VA = "0x154649C")]
	public MoonInformationLinks()
	{
	}
}
[Token(Token = "0x200025A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD24F0", Offset = "0xBD24F0")]
public class MoonData : ScriptableObject
{
	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_moonName;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_type;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MoonElement m_element;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int m_rate;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_numerOfBoidsToRegenerate;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool m_neededForRecipe;

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x1546458", Offset = "0x1546458", VA = "0x1546458")]
	public static int CompareByNumberOfBoidsToRegen(MoonData x, MoonData y)
	{
		return default(int);
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x1546494", Offset = "0x1546494", VA = "0x1546494")]
	public MoonData()
	{
	}
}
[Token(Token = "0x200025B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD2550", Offset = "0xBD2550")]
public class RecipeData : ScriptableObject
{
	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_recipeId;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_worldPrefab;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_worldPrefabString;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_skybox;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<MoonData> m_moonsData;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<string> m_moonsString;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_moonNeededCount;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int m_moonCount;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<MoonElement> m_elementsNeeded;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int m_minRecipeNumber;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int m_maxRecipeNumber;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Dictionary<string, int> m_moonRates;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public JSONObject m_recipeJson;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SheetData m_recipeSheetData;

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xE3BCAC", Offset = "0xE3BCAC", VA = "0xE3BCAC")]
	public RecipeData()
	{
	}
}
[Token(Token = "0x200025C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD25B0", Offset = "0xBD25B0")]
public class SpreadsheetDataVariable : BaseVariable<SpreadSheetData>
{
	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xF60BA4", Offset = "0xF60BA4", VA = "0xF60BA4")]
	public SpreadsheetDataVariable()
	{
	}
}
[Token(Token = "0x200025D")]
public class RegenerationDetector : CacheBehaviour
{
	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0CE4", Offset = "0xBE0CE4")]
	public UnityEvent OnAllPlanetsRegenerated;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0D1C", Offset = "0xBE0D1C")]
	public string m_regenerationStateName;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0D54", Offset = "0xBE0D54")]
	public GameObject m_superNovaFX;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0D8C", Offset = "0xBE0D8C")]
	public ObjectArrayUnityEvent OnDotDamage;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0DC4", Offset = "0xBE0DC4")]
	public GameObjectVariable m_nextMoonToRegen;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0DFC", Offset = "0xBE0DFC")]
	public GameEvent m_onShockwaveFinished;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public int m_moonNeededCount;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public List<MoonElement> m_elementsNeeded;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[HideInInspector]
	public List<GameObject> m_moonAutoRegenOrder;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[HideInInspector]
	public List<GameObject> m_moonAutoRegenOrderOrigin;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[HideInInspector]
	public GameObject m_currentMoonReticle;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public GameObject m_nextMoonReticle;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int _moonNeededRegenerated;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private int _planetToRegenerate;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int _planetRegenerated;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private bool _regenerated;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private GameObject _shockWaveCollider;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int _currentMoonIndex;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Dictionary<MoonElement, List<GameObject>> _moonsByElement;

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xE3C078", Offset = "0xE3C078", VA = "0xE3C078")]
	public void RegisterRegenerablePlanet()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xE3C110", Offset = "0xE3C110", VA = "0xE3C110")]
	public void RegisterPlanetRegerationCompleted()
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xE3C48C", Offset = "0xE3C48C", VA = "0xE3C48C")]
	public void ChangeNextMoon(GameObject nextMoon)
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xE3C59C", Offset = "0xE3C59C", VA = "0xE3C59C")]
	public void OnPlanetRegenerated(int instanceID)
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xE3CC0C", Offset = "0xE3CC0C", VA = "0xE3CC0C")]
	public void OnWaveFinished()
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xE3CC14", Offset = "0xE3CC14", VA = "0xE3CC14")]
	public void OnLevelFinished()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xE3CCBC", Offset = "0xE3CCBC", VA = "0xE3CCBC")]
	public void OnLevelStarted()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xE3C3B4", Offset = "0xE3C3B4", VA = "0xE3C3B4")]
	public void SendMoonRegeneratedPercentageToWwise()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xE3CED4", Offset = "0xE3CED4", VA = "0xE3CED4")]
	private void CreateMoonByElementDictionary()
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xE3D0F0", Offset = "0xE3D0F0", VA = "0xE3D0F0")]
	public RegenerationDetector()
	{
	}
}
[Serializable]
[Token(Token = "0x200025E")]
public class SaveGroup
{
	[Token(Token = "0x200066B")]
	public enum ELevel
	{
		[Token(Token = "0x4001FED")]
		APPLICATION,
		[Token(Token = "0x4001FEE")]
		GAME,
		[Token(Token = "0x4001FEF")]
		RUN
	}

	[Token(Token = "0x200066C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD85D8", Offset = "0xBD85D8")]
	private sealed class <Save>d__6 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SaveGroup <>4__this;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SaveProvider saveProvider;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000387")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600255C")]
			[Address(RVA = "0xE41834", Offset = "0xE41834", VA = "0xE41834", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000388")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600255E")]
			[Address(RVA = "0xE4189C", Offset = "0xE4189C", VA = "0xE4189C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0xE40E5C", Offset = "0xE40E5C", VA = "0xE40E5C")]
		[DebuggerHidden]
		public <Save>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0xE41684", Offset = "0xE41684", VA = "0xE41684", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600255B")]
		[Address(RVA = "0xE41688", Offset = "0xE41688", VA = "0xE41688", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0xE4183C", Offset = "0xE4183C", VA = "0xE4183C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200066D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD85E8", Offset = "0xBD85E8")]
	private sealed class <Load>d__7 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SaveGroup <>4__this;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SaveProvider saveProvider;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ScriptableObject <data>5__2;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x17000389")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002562")]
			[Address(RVA = "0xE415B8", Offset = "0xE415B8", VA = "0xE415B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700038A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002564")]
			[Address(RVA = "0xE41620", Offset = "0xE41620", VA = "0xE41620", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0xE40F20", Offset = "0xE40F20", VA = "0xE40F20")]
		[DebuggerHidden]
		public <Load>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0xE41254", Offset = "0xE41254", VA = "0xE41254", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0xE41258", Offset = "0xE41258", VA = "0xE41258", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0xE415C0", Offset = "0xE415C0", VA = "0xE415C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200066E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD85F8", Offset = "0xBD85F8")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6002565")]
		[Address(RVA = "0xE4120C", Offset = "0xE4120C", VA = "0xE4120C")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0xE4121C", Offset = "0xE4121C", VA = "0xE4121C")]
		internal bool <GetGestureData>b__0(GestureData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ELevel m_level;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ScriptableObject> m_datas;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GestureData[] m_allGesturesData;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnEndSaveGroup;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnEndLoadGroup;

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xE40DC4", Offset = "0xE40DC4", VA = "0xE40DC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA488", Offset = "0xBEA488")]
	public IEnumerator<float> Save(SaveProvider saveProvider)
	{
		return null;
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xE40E88", Offset = "0xE40E88", VA = "0xE40E88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA4EC", Offset = "0xBEA4EC")]
	public IEnumerator<float> Load(SaveProvider saveProvider)
	{
		return null;
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xE40F4C", Offset = "0xE40F4C", VA = "0xE40F4C")]
	public void Wash(bool launchEventAtEnd = true)
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xE41140", Offset = "0xE41140", VA = "0xE41140")]
	private GestureData GetGestureData(string name)
	{
		return null;
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xE41214", Offset = "0xE41214", VA = "0xE41214")]
	public SaveGroup()
	{
	}
}
[Token(Token = "0x200025F")]
public class SaveManager : CacheBehaviour
{
	[Token(Token = "0x200066F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8608", Offset = "0xBD8608")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SaveGroup.ELevel level;

		[Token(Token = "0x6002567")]
		[Address(RVA = "0xE42500", Offset = "0xE42500", VA = "0xE42500")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0xE42E8C", Offset = "0xE42E8C", VA = "0xE42E8C")]
		internal bool <Save>b__0(SaveGroup t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000670")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8618", Offset = "0xBD8618")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SaveGroup.ELevel level;

		[Token(Token = "0x6002569")]
		[Address(RVA = "0xE42508", Offset = "0xE42508", VA = "0xE42508")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0xE42EB0", Offset = "0xE42EB0", VA = "0xE42EB0")]
		internal bool <Load>b__0(SaveGroup t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000671")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8628", Offset = "0xBD8628")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SaveGroup.ELevel level;

		[Token(Token = "0x600256B")]
		[Address(RVA = "0xE42660", Offset = "0xE42660", VA = "0xE42660")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0xE42ED4", Offset = "0xE42ED4", VA = "0xE42ED4")]
		internal bool <Wash>b__0(SaveGroup t)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000672")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8638", Offset = "0xBD8638")]
	private sealed class <>c
	{
		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<SaveGroup, bool> <>9__24_0;

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<SaveGroup, bool> <>9__24_1;

		[Token(Token = "0x600256E")]
		[Address(RVA = "0xE42E44", Offset = "0xE42E44", VA = "0xE42E44")]
		public <>c()
		{
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0xE42E4C", Offset = "0xE42E4C", VA = "0xE42E4C")]
		internal bool <WashGameAndRun>b__24_0(SaveGroup t)
		{
			return default(bool);
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0xE42E6C", Offset = "0xE42E6C", VA = "0xE42E6C")]
		internal bool <WashGameAndRun>b__24_1(SaveGroup t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000673")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8648", Offset = "0xBD8648")]
	private sealed class <LoadAllCoroutine>d__27 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SaveManager <>4__this;

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<SaveGroup>.Enumerator <>7__wrap1;

		[Token(Token = "0x1700038B")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002575")]
			[Address(RVA = "0xE431E4", Offset = "0xE431E4", VA = "0xE431E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700038C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002577")]
			[Address(RVA = "0xE4324C", Offset = "0xE4324C", VA = "0xE4324C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0xE42A78", Offset = "0xE42A78", VA = "0xE42A78")]
		[DebuggerHidden]
		public <LoadAllCoroutine>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0xE42EF8", Offset = "0xE42EF8", VA = "0xE42EF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0xE42F6C", Offset = "0xE42F6C", VA = "0xE42F6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0xE42F14", Offset = "0xE42F14", VA = "0xE42F14")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0xE431EC", Offset = "0xE431EC", VA = "0xE431EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GestureGeneralData m_gestureGeneralData;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool m_avoidSaveData;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0EA4", Offset = "0xBE0EA4")]
	public UnityEvent OnEndSave;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UnityEvent OnEndLoad;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public IntUnityEvent OnEndWashSaveGroup;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE0EDC", Offset = "0xBE0EDC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0EDC", Offset = "0xBE0EDC")]
	public List<SaveGroup> m_saveGroups;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE0F2C", Offset = "0xBE0F2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0F2C", Offset = "0xBE0F2C")]
	private SaveProvider _saveProvider;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private SaveGroup savegroupAllSaveCallback;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private SaveGroup savegroupAllLoadCallback;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private SaveGroup savegroupCallbackStore;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Dictionary<string, GestureData> _gestureDictionary;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool _isSavingAll;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	private bool _isLoadingAll;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private int _saveGroupCounter;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int _loadGroupCounter;

	[Token(Token = "0x17000098")]
	public SaveProvider SaveProvider
	{
		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xE41900", Offset = "0xE41900", VA = "0xE41900")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xE41908", Offset = "0xE41908", VA = "0xE41908")]
		set
		{
		}
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xE41910", Offset = "0xE41910", VA = "0xE41910")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xE41A80", Offset = "0xE41A80", VA = "0xE41A80")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xE42080", Offset = "0xE42080", VA = "0xE42080")]
	public void SaveSaveGroupWithInt(int enumInt)
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xE4233C", Offset = "0xE4233C", VA = "0xE4233C")]
	public void SaveApplication()
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xE42344", Offset = "0xE42344", VA = "0xE42344")]
	public void SaveGame()
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xE4234C", Offset = "0xE4234C", VA = "0xE4234C")]
	public void SaveRun()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xE42010", Offset = "0xE42010", VA = "0xE42010")]
	public void LoadApplication()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xE42070", Offset = "0xE42070", VA = "0xE42070")]
	public void LoadGame()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xE42078", Offset = "0xE42078", VA = "0xE42078")]
	public void LoadRun()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xE42140", Offset = "0xE42140", VA = "0xE42140")]
	public void Save(SaveGroup.ELevel level)
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xE42354", Offset = "0xE42354", VA = "0xE42354")]
	public void Load(SaveGroup.ELevel level)
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xE42510", Offset = "0xE42510", VA = "0xE42510")]
	public void WashApplication()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xE42650", Offset = "0xE42650", VA = "0xE42650")]
	public void WashGame()
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xE42658", Offset = "0xE42658", VA = "0xE42658")]
	public void WashRun()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xE42518", Offset = "0xE42518", VA = "0xE42518")]
	public void Wash(SaveGroup.ELevel level)
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xE42668", Offset = "0xE42668", VA = "0xE42668")]
	public void WashGameAndRun(bool saveApplication = true)
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xE41CDC", Offset = "0xE41CDC", VA = "0xE41CDC")]
	public void SaveAll()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xE41F04", Offset = "0xE41F04", VA = "0xE41F04")]
	public void LoadAll()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xE42970", Offset = "0xE42970", VA = "0xE42970")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA550", Offset = "0xBEA550")]
	private IEnumerator<float> LoadAllCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xE42AA4", Offset = "0xE42AA4", VA = "0xE42AA4")]
	public void OnEndSaveGroup()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xE42B28", Offset = "0xE42B28", VA = "0xE42B28")]
	public void OnEndLoadGroup()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xE429EC", Offset = "0xE429EC", VA = "0xE429EC")]
	private void OnEndLoadCallback()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xE42890", Offset = "0xE42890", VA = "0xE42890")]
	private void OnEndSaveCallback()
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xE42C18", Offset = "0xE42C18", VA = "0xE42C18")]
	private void StoreCachedFile()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xE42CEC", Offset = "0xE42CEC", VA = "0xE42CEC")]
	public void QuitApplication()
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xE42D60", Offset = "0xE42D60", VA = "0xE42D60")]
	public SaveManager()
	{
	}
}
[Token(Token = "0x2000260")]
public class EasySaveWrapper : SaveProvider
{
	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xF1823C", Offset = "0xF1823C", VA = "0xF1823C", Slot = "4")]
	public override void Save(string name, object val)
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xF18354", Offset = "0xF18354", VA = "0xF18354", Slot = "5")]
	public override void Load(string name)
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xF1844C", Offset = "0xF1844C", VA = "0xF1844C", Slot = "6")]
	public override void Load(string name, object val)
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xF185F8", Offset = "0xF185F8", VA = "0xF185F8", Slot = "9")]
	public override void OnEndSave()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xF18600", Offset = "0xF18600", VA = "0xF18600", Slot = "10")]
	public override void OnEndLoad()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xF1860C", Offset = "0xF1860C", VA = "0xF1860C", Slot = "7")]
	public override bool CheckIfSaveFileExists()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xF18704", Offset = "0xF18704", VA = "0xF18704", Slot = "8")]
	public override void DeleteSaveFile()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xF18890", Offset = "0xF18890", VA = "0xF18890")]
	public EasySaveWrapper()
	{
	}
}
[Token(Token = "0x2000261")]
public abstract class SaveProvider : MonoBehaviour
{
	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_saveFile;

	[Token(Token = "0x6000CC3")]
	public abstract void Save(string name, object val);

	[Token(Token = "0x6000CC4")]
	public abstract void Load(string name);

	[Token(Token = "0x6000CC5")]
	public abstract void Load(string name, object val);

	[Token(Token = "0x6000CC6")]
	public abstract bool CheckIfSaveFileExists();

	[Token(Token = "0x6000CC7")]
	public abstract void DeleteSaveFile();

	[Token(Token = "0x6000CC8")]
	public abstract void OnEndSave();

	[Token(Token = "0x6000CC9")]
	public abstract void OnEndLoad();

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xE432B0", Offset = "0xE432B0", VA = "0xE432B0")]
	protected SaveProvider()
	{
	}
}
[Token(Token = "0x2000262")]
public class ShopManager : CacheBehaviour
{
	[Token(Token = "0x2000674")]
	public enum PerkType
	{
		[Token(Token = "0x4002007")]
		ANY,
		[Token(Token = "0x4002008")]
		WAND_RIGHT,
		[Token(Token = "0x4002009")]
		WAND_LEFT,
		[Token(Token = "0x400200A")]
		PLAYER,
		[Token(Token = "0x400200B")]
		ATTACK,
		[Token(Token = "0x400200C")]
		DEFENSE
	}

	[Serializable]
	[Token(Token = "0x2000675")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8658", Offset = "0xBD8658")]
	private sealed class <>c
	{
		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__81_0;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Transform, bool> <>9__81_1;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<Transform, bool> <>9__82_0;

		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<Transform, bool> <>9__82_1;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Func<Transform, bool> <>9__83_0;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Func<Transform, bool> <>9__83_1;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Func<Transform, bool> <>9__84_1;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Func<Transform, bool> <>9__85_0;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Func<Transform, bool> <>9__85_1;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Func<Transform, bool> <>9__85_2;

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static Func<Transform, bool> <>9__86_0;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static Func<Transform, bool> <>9__86_1;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static Func<Transform, bool> <>9__86_2;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static Func<Transform, bool> <>9__86_3;

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static Func<Transform, bool> <>9__86_4;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static Func<Transform, bool> <>9__86_5;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static Func<Transform, bool> <>9__86_6;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static Func<Transform, bool> <>9__86_7;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static Func<Transform, bool> <>9__86_8;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static Func<Transform, bool> <>9__86_9;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static Func<Transform, bool> <>9__86_10;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public static Func<Transform, bool> <>9__86_11;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public static Func<Transform, bool> <>9__86_12;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public static Func<Transform, bool> <>9__86_13;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public static Func<Transform, bool> <>9__86_14;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public static Func<Transform, bool> <>9__86_15;

		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public static Func<Transform, bool> <>9__86_16;

		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public static Func<Transform, bool> <>9__86_18;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public static Func<Transform, bool> <>9__86_20;

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public static Func<Transform, bool> <>9__86_21;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public static Func<Transform, bool> <>9__95_2;

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public static Func<Transform, bool> <>9__98_0;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public static Func<Transform, bool> <>9__100_0;

		[Token(Token = "0x6002579")]
		[Address(RVA = "0xF4E7C8", Offset = "0xF4E7C8", VA = "0xF4E7C8")]
		public <>c()
		{
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0xF4E7D0", Offset = "0xF4E7D0", VA = "0xF4E7D0")]
		internal bool <OnDisplayShop>b__81_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0xF4E834", Offset = "0xF4E834", VA = "0xF4E834")]
		internal bool <OnDisplayShop>b__81_1(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0xF4E898", Offset = "0xF4E898", VA = "0xF4E898")]
		internal bool <OnDisplayShop>b__82_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0xF4E8FC", Offset = "0xF4E8FC", VA = "0xF4E8FC")]
		internal bool <OnDisplayShop>b__82_1(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0xF4E960", Offset = "0xF4E960", VA = "0xF4E960")]
		internal bool <PopulateWire>b__83_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0xF4E9F0", Offset = "0xF4E9F0", VA = "0xF4E9F0")]
		internal bool <PopulateWire>b__83_1(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0xF4EA80", Offset = "0xF4EA80", VA = "0xF4EA80")]
		internal bool <OnHighlightPerk>b__84_1(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0xF4EAE4", Offset = "0xF4EAE4", VA = "0xF4EAE4")]
		internal bool <OnExitHighlightPerk>b__85_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0xF4EB48", Offset = "0xF4EB48", VA = "0xF4EB48")]
		internal bool <OnExitHighlightPerk>b__85_1(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0xF4EBAC", Offset = "0xF4EBAC", VA = "0xF4EBAC")]
		internal bool <OnExitHighlightPerk>b__85_2(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0xF4EC10", Offset = "0xF4EC10", VA = "0xF4EC10")]
		internal bool <CreatePerkBubble>b__86_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0xF4EC74", Offset = "0xF4EC74", VA = "0xF4EC74")]
		internal bool <CreatePerkBubble>b__86_1(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0xF4ECD8", Offset = "0xF4ECD8", VA = "0xF4ECD8")]
		internal bool <CreatePerkBubble>b__86_2(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0xF4ED3C", Offset = "0xF4ED3C", VA = "0xF4ED3C")]
		internal bool <CreatePerkBubble>b__86_3(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0xF4EDA0", Offset = "0xF4EDA0", VA = "0xF4EDA0")]
		internal bool <CreatePerkBubble>b__86_4(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0xF4EE04", Offset = "0xF4EE04", VA = "0xF4EE04")]
		internal bool <CreatePerkBubble>b__86_5(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0xF4EE68", Offset = "0xF4EE68", VA = "0xF4EE68")]
		internal bool <CreatePerkBubble>b__86_6(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600258B")]
		[Address(RVA = "0xF4EECC", Offset = "0xF4EECC", VA = "0xF4EECC")]
		internal bool <CreatePerkBubble>b__86_7(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0xF4EF30", Offset = "0xF4EF30", VA = "0xF4EF30")]
		internal bool <CreatePerkBubble>b__86_8(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0xF4EF94", Offset = "0xF4EF94", VA = "0xF4EF94")]
		internal bool <CreatePerkBubble>b__86_9(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600258E")]
		[Address(RVA = "0xF4EFF8", Offset = "0xF4EFF8", VA = "0xF4EFF8")]
		internal bool <CreatePerkBubble>b__86_10(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0xF4F05C", Offset = "0xF4F05C", VA = "0xF4F05C")]
		internal bool <CreatePerkBubble>b__86_11(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0xF4F0C0", Offset = "0xF4F0C0", VA = "0xF4F0C0")]
		internal bool <CreatePerkBubble>b__86_12(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0xF4F124", Offset = "0xF4F124", VA = "0xF4F124")]
		internal bool <CreatePerkBubble>b__86_13(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0xF4F188", Offset = "0xF4F188", VA = "0xF4F188")]
		internal bool <CreatePerkBubble>b__86_14(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0xF4F1EC", Offset = "0xF4F1EC", VA = "0xF4F1EC")]
		internal bool <CreatePerkBubble>b__86_15(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0xF4F250", Offset = "0xF4F250", VA = "0xF4F250")]
		internal bool <CreatePerkBubble>b__86_16(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0xF4F2B4", Offset = "0xF4F2B4", VA = "0xF4F2B4")]
		internal bool <CreatePerkBubble>b__86_18(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0xF4F318", Offset = "0xF4F318", VA = "0xF4F318")]
		internal bool <CreatePerkBubble>b__86_20(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0xF4F37C", Offset = "0xF4F37C", VA = "0xF4F37C")]
		internal bool <CreatePerkBubble>b__86_21(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0xF4F3E0", Offset = "0xF4F3E0", VA = "0xF4F3E0")]
		internal bool <CheckReplacement>b__95_2(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0xF4F444", Offset = "0xF4F444", VA = "0xF4F444")]
		internal bool <DeactiveAllBubbles>b__98_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0xF4F4A8", Offset = "0xF4F4A8", VA = "0xF4F4A8")]
		internal bool <ActivateAllBubbles>b__100_0(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000676")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8668", Offset = "0xBD8668")]
	private sealed class <>c__DisplayClass84_0
	{
		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string param1;

		[Token(Token = "0x600259B")]
		[Address(RVA = "0xF4F600", Offset = "0xF4F600", VA = "0xF4F600")]
		public <>c__DisplayClass84_0()
		{
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0xF4F608", Offset = "0xF4F608", VA = "0xF4F608")]
		internal bool <OnHighlightPerk>b__0(PerkData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000677")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8678", Offset = "0xBD8678")]
	private sealed class <>c__DisplayClass86_0
	{
		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PerkData perk;

		[Token(Token = "0x600259D")]
		[Address(RVA = "0xF4F62C", Offset = "0xF4F62C", VA = "0xF4F62C")]
		public <>c__DisplayClass86_0()
		{
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0xF4F634", Offset = "0xF4F634", VA = "0xF4F634")]
		internal bool <CreatePerkBubble>b__17(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600259F")]
		[Address(RVA = "0xF4F6EC", Offset = "0xF4F6EC", VA = "0xF4F6EC")]
		internal bool <CreatePerkBubble>b__19(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000678")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8688", Offset = "0xBD8688")]
	private sealed class <>c__DisplayClass86_1
	{
		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int j;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass86_0 CS$<>8__locals1;

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0xF4F7A4", Offset = "0xF4F7A4", VA = "0xF4F7A4")]
		public <>c__DisplayClass86_1()
		{
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0xF4F7AC", Offset = "0xF4F7AC", VA = "0xF4F7AC")]
		internal bool <CreatePerkBubble>b__22(GameObject x)
		{
			return default(bool);
		}

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0xF4F85C", Offset = "0xF4F85C", VA = "0xF4F85C")]
		internal bool <CreatePerkBubble>b__23(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0xF4F8A8", Offset = "0xF4F8A8", VA = "0xF4F8A8")]
		internal bool <CreatePerkBubble>b__24(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000679")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8698", Offset = "0xBD8698")]
	private sealed class <>c__DisplayClass86_2
	{
		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int starNumber;

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0xF4F8F4", Offset = "0xF4F8F4", VA = "0xF4F8F4")]
		public <>c__DisplayClass86_2()
		{
		}

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0xF4F8FC", Offset = "0xF4F8FC", VA = "0xF4F8FC")]
		internal bool <CreatePerkBubble>b__25(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200067A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD86A8", Offset = "0xBD86A8")]
	private sealed class <>c__DisplayClass93_0
	{
		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PerkData perk;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Predicate<GestureData> <>9__2;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Predicate<GestureData> <>9__3;

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0xF4F9BC", Offset = "0xF4F9BC", VA = "0xF4F9BC")]
		public <>c__DisplayClass93_0()
		{
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0xF4F9C4", Offset = "0xF4F9C4", VA = "0xF4F9C4")]
		internal bool <OnPurchasePerkRoutine>b__0(GestureData x)
		{
			return default(bool);
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0xF4F9F4", Offset = "0xF4F9F4", VA = "0xF4F9F4")]
		internal bool <OnPurchasePerkRoutine>b__1(GestureData x)
		{
			return default(bool);
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0xF4FA24", Offset = "0xF4FA24", VA = "0xF4FA24")]
		internal bool <OnPurchasePerkRoutine>b__2(GestureData x)
		{
			return default(bool);
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0xF4FA88", Offset = "0xF4FA88", VA = "0xF4FA88")]
		internal bool <OnPurchasePerkRoutine>b__3(GestureData x)
		{
			return default(bool);
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0xF4FAEC", Offset = "0xF4FAEC", VA = "0xF4FAEC")]
		internal bool <OnPurchasePerkRoutine>b__4(GestureData x)
		{
			return default(bool);
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0xF4FB1C", Offset = "0xF4FB1C", VA = "0xF4FB1C")]
		internal Ammo <OnPurchasePerkRoutine>b__5(Ammo ammo)
		{
			return null;
		}
	}

	[Token(Token = "0x200067B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD86B8", Offset = "0xBD86B8")]
	private sealed class <OnPurchasePerkRoutine>d__93 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string perkId;

		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShopManager <>4__this;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WandData wandUsed;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool routine;

		[Token(Token = "0x1700038D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60025B0")]
			[Address(RVA = "0xF50DD8", Offset = "0xF50DD8", VA = "0xF50DD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700038E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025B2")]
			[Address(RVA = "0xF50E40", Offset = "0xF50E40", VA = "0xF50E40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0xF4FE00", Offset = "0xF4FE00", VA = "0xF4FE00")]
		[DebuggerHidden]
		public <OnPurchasePerkRoutine>d__93(int <>1__state)
		{
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0xF4FE2C", Offset = "0xF4FE2C", VA = "0xF4FE2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0xF4FE30", Offset = "0xF4FE30", VA = "0xF4FE30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0xF50DE0", Offset = "0xF50DE0", VA = "0xF50DE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200067C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD86C8", Offset = "0xBD86C8")]
	private sealed class <BuyRoutine>d__94 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ShopManager <>4__this;

		[Token(Token = "0x1700038F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60025B6")]
			[Address(RVA = "0xF4FD34", Offset = "0xF4FD34", VA = "0xF4FD34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000390")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025B8")]
			[Address(RVA = "0xF4FD9C", Offset = "0xF4FD9C", VA = "0xF4FD9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0xF4FC74", Offset = "0xF4FC74", VA = "0xF4FC74")]
		[DebuggerHidden]
		public <BuyRoutine>d__94(int <>1__state)
		{
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0xF4FCA0", Offset = "0xF4FCA0", VA = "0xF4FCA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0xF4FCA4", Offset = "0xF4FCA4", VA = "0xF4FCA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0xF4FD3C", Offset = "0xF4FD3C", VA = "0xF4FD3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200067D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD86D8", Offset = "0xBD86D8")]
	private sealed class <>c__DisplayClass95_0
	{
		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GestureData gesture;

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0xF4FB54", Offset = "0xF4FB54", VA = "0xF4FB54")]
		public <>c__DisplayClass95_0()
		{
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0xF4FB5C", Offset = "0xF4FB5C", VA = "0xF4FB5C")]
		internal bool <CheckReplacement>b__0(PerkData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200067E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD86E8", Offset = "0xBD86E8")]
	private sealed class <>c__DisplayClass95_1
	{
		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GestureData gesture;

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0xF4FBE4", Offset = "0xF4FBE4", VA = "0xF4FBE4")]
		public <>c__DisplayClass95_1()
		{
		}

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0xF4FBEC", Offset = "0xF4FBEC", VA = "0xF4FBEC")]
		internal bool <CheckReplacement>b__1(PerkData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200067F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD86F8", Offset = "0xBD86F8")]
	private sealed class <>c__DisplayClass109_0
	{
		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bubble;

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string perkId;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<Transform, bool> <>9__0;

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0xF4F50C", Offset = "0xF4F50C", VA = "0xF4F50C")]
		public <>c__DisplayClass109_0()
		{
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0xF4F514", Offset = "0xF4F514", VA = "0xF4F514")]
		internal bool <FindBubble>b__0(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<PerkData> m_remainingPerks;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0F8C", Offset = "0xBE0F8C")]
	public ShopData m_shopData;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE0FC4", Offset = "0xBE0FC4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE0FC4", Offset = "0xBE0FC4")]
	public List<PerkData> m_allPerks;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject m_canvas;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject m_perkBubblePanel;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject m_perkBubble;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject m_perBubbleReplacement;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public TextMeshPro m_rerollPerks;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public BoxCollider m_rerollPerkButtonCollider;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Animator m_rerollPerkButtonAnimator;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public TextMeshPro m_upgradeShopText;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public BoxCollider m_upgradeShopCollider;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Animator m_upgradeShopAnimator;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Sprite[] m_cardRaritySprites;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Sprite m_cardSpriteDisabled;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Sprite[] m_starSprites;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject m_star;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public SpriteRenderer[] m_upgradeSprites;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Sprite m_filledUpgradeSprite;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject m_equipBubble;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public TextMeshPro m_equipHandText;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public TextMeshPro m_placeText;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public TextMeshPro m_spellNameText;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public TextMeshPro m_holdTriggerText;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject m_cardTween;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject m_cardComparedTween;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject m_cardPlayerPerkTween;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject m_reroll;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject m_exit;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject m_upgrade;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject m_cancelPurchase;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject m_replaceArrow;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject m_arrowVizualization;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject m_spellHolder;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject m_crystalReroll;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public TextMeshPro m_rerollCostText;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public TextMeshPro m_textSpell;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public TextMeshPro m_purchased;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public TextMeshPro m_purchasedCost;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject m_purchasedTween;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject m_shamanSphere;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public GameObject m_purchaseTween;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public TextMeshPro m_spellPurchasedLeft;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public TextMeshPro m_spellPurchasedRight;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public GameObject bg_window;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject m_slotCategoryShop;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public List<GameObject> m_moonElementSprites;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public List<GameObject> m_slots;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1014", Offset = "0xBE1014")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1014", Offset = "0xBE1014")]
	public WandDataVariable m_leftWand;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public WandDataVariable m_rightWand;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public IntVariable m_currency;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public IntVariable m_currentShopLevel;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public GameObjectVariable m_equipmentHand;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public GameObjectVariable m_leftHand;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public GameObjectVariable m_rightHand;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public StringVariable m_locLeftHand;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public StringVariable m_locRightHand;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public StringVariable m_chooseHand;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public SolarSystemVariable m_currentSolarSystem;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public FloatVariable m_fidelityShopSaleCard;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public BoolVariable m_firstTimeShop;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1064", Offset = "0xBE1064")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1064", Offset = "0xBE1064")]
	public int m_currentPerkNumber;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public IntVariable m_currentRerollCost;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public IntVariable m_currentUpgradeCost;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public BoolVariable m_firstShopVisit;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public List<PerkListWrapper> m_perkListUpgrades;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public string m_buttonStateDisabled;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public bool m_usePerkWand;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public List<PerkData> m_firstShopList;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE10B4", Offset = "0xBE10B4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE10B4", Offset = "0xBE10B4")]
	public StringVariable m_dominantHand;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public List<GestureData.SpellType> m_leadingHandSpellTypes;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public List<GestureData.SpellType> m_nonLeadingHandSpellTypes;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1104", Offset = "0xBE1104")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1104", Offset = "0xBE1104")]
	public UnityEvent OnPurchase;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public UnityEvent OnExitShop;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public StringUnityEvent OnExitTutoShop;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public StringUnityEvent OnNewGestureLeft;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public StringUnityEvent OnNewGestureRight;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public PerkListUpgradeUnityEvent OnNewPerkListShop;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public UnityEvent OnEndPurchase;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private List<GameObject> _instanciatedPerkBubbles;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private List<PerkData> _pickedPerks;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	private bool _inEquipment;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private GameObject _currentReplacementBubble;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	private GameObject _currentArrowVizualization;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	private GameObject _currentSpellFeedback;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	private GameObject _equipment;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	private TextMeshPro _currentText;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private Dictionary<GameObject, GameObject> _wireCrystalBinder;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	private int _currentSlotReroll;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	private List<PerkType> _types;

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xE4FF94", Offset = "0xE4FF94", VA = "0xE4FF94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xE50178", Offset = "0xE50178", VA = "0xE50178")]
	public void OnDisplayShop(bool reroll = false)
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xE5363C", Offset = "0xE5363C", VA = "0xE5363C")]
	public void OnDisplayShop(int slotNumber)
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xE53E90", Offset = "0xE53E90", VA = "0xE53E90")]
	public void PopulateWire(int index)
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xE54364", Offset = "0xE54364", VA = "0xE54364")]
	public void OnHighlightPerk(object[] perkInfo)
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xE54614", Offset = "0xE54614", VA = "0xE54614")]
	public void OnExitHighlightPerk(object[] perkInfo)
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xE51380", Offset = "0xE51380", VA = "0xE51380")]
	public void CreatePerkBubble(GameObject perkBubble, PerkData perk)
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xE51210", Offset = "0xE51210", VA = "0xE51210")]
	public PerkData GetRandomPerk([Optional] List<PerkData> perks, PerkType type = PerkType.DEFENSE)
	{
		return null;
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xE54934", Offset = "0xE54934", VA = "0xE54934")]
	public bool LimitPerk(PerkData perk)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xE509F8", Offset = "0xE509F8", VA = "0xE509F8")]
	public List<PerkData> CheckPerks(PerkType type)
	{
		return null;
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xE54A0C", Offset = "0xE54A0C", VA = "0xE54A0C")]
	public void OnEquipmentChosen()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xE54A54", Offset = "0xE54A54", VA = "0xE54A54")]
	public void OnPurchasePerk(object[] parameters)
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xE54D48", Offset = "0xE54D48", VA = "0xE54D48")]
	public void OnPurchasePerkNoRoutine(object[] parameters)
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xE54C88", Offset = "0xE54C88", VA = "0xE54C88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA5B4", Offset = "0xBEA5B4")]
	public IEnumerator<float> OnPurchasePerkRoutine(string perkId, WandData wandUsed, bool routine = true)
	{
		return null;
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xE54F40", Offset = "0xE54F40", VA = "0xE54F40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA618", Offset = "0xBEA618")]
	public IEnumerator<float> BuyRoutine(PerkData perk)
	{
		return null;
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xE52E28", Offset = "0xE52E28", VA = "0xE52E28")]
	public void CheckReplacement(PerkData perk, string handTag, Transform parent)
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xE54FBC", Offset = "0xE54FBC", VA = "0xE54FBC")]
	public void CancelPurchase()
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xE550A4", Offset = "0xE550A4", VA = "0xE550A4")]
	public void DeactiveAllBubbles(int instanceId)
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xE551C8", Offset = "0xE551C8", VA = "0xE551C8")]
	public void DeactiveAllBubbles([Optional] string perkId)
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xE55448", Offset = "0xE55448", VA = "0xE55448")]
	public void ActivateAllBubbles(int instanceId)
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xE5556C", Offset = "0xE5556C", VA = "0xE5556C")]
	public void ActivateAllBubbles([Optional] string perkId)
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xE557EC", Offset = "0xE557EC", VA = "0xE557EC")]
	public void OnRerollPerks()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xE53CB4", Offset = "0xE53CB4", VA = "0xE53CB4")]
	public void CheckBuyingPossibility()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xE53638", Offset = "0xE53638", VA = "0xE53638")]
	public void CheckRerollPossibility()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xE557F0", Offset = "0xE557F0", VA = "0xE557F0")]
	public void RestoreShopLevelState()
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xE55878", Offset = "0xE55878", VA = "0xE55878")]
	public void OnUpgradeShop(string upgrade)
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xE55AF4", Offset = "0xE55AF4", VA = "0xE55AF4")]
	public void UnlockPerkList(PerkListWrapper perkList)
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xE55BB8", Offset = "0xE55BB8", VA = "0xE55BB8")]
	public void ExitShop()
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xE55CF4", Offset = "0xE55CF4", VA = "0xE55CF4")]
	public void ResetStars()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xE55DB8", Offset = "0xE55DB8", VA = "0xE55DB8")]
	public GameObject FindBubble(string perkId)
	{
		return null;
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xE56018", Offset = "0xE56018", VA = "0xE56018")]
	public ShopManager()
	{
	}
}
[Token(Token = "0x2000263")]
public class ShopPurchaseManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000680")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8708", Offset = "0xBD8708")]
	private sealed class <>c
	{
		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__14_0;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Transform, bool> <>9__14_1;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<Transform, bool> <>9__15_0;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<Transform, bool> <>9__15_1;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Func<Transform, bool> <>9__16_0;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Func<Transform, bool> <>9__17_0;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Func<Transform, bool> <>9__17_1;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Func<Transform, bool> <>9__17_2;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Func<Transform, bool> <>9__17_3;

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0xF52390", Offset = "0xF52390", VA = "0xF52390")]
		public <>c()
		{
		}

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0xF52398", Offset = "0xF52398", VA = "0xF52398")]
		internal bool <OnTriggerExit>b__14_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0xF523FC", Offset = "0xF523FC", VA = "0xF523FC")]
		internal bool <OnTriggerExit>b__14_1(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0xF52460", Offset = "0xF52460", VA = "0xF52460")]
		internal bool <OnTriggerEnter>b__15_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0xF524C4", Offset = "0xF524C4", VA = "0xF524C4")]
		internal bool <OnTriggerEnter>b__15_1(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0xF52528", Offset = "0xF52528", VA = "0xF52528")]
		internal bool <OnTriggerStay>b__16_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0xF5258C", Offset = "0xF5258C", VA = "0xF5258C")]
		internal bool <Update>b__17_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0xF525F0", Offset = "0xF525F0", VA = "0xF525F0")]
		internal bool <Update>b__17_1(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0xF52654", Offset = "0xF52654", VA = "0xF52654")]
		internal bool <Update>b__17_2(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0xF526B8", Offset = "0xF526B8", VA = "0xF526B8")]
		internal bool <Update>b__17_3(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_tag;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_axisName;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ObjectArrayUnityEvent OnPurchasedPerk;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ObjectArrayUnityEvent OnHighlightPerk;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ObjectArrayUnityEvent OnExitHighlightPerk;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_purchaseTimer;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float m_minDistance;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FloatVariable m_distance;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_speed;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject m_arrowMagnet;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_replaceArrow;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_destroyFX;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public WandDataVariable m_wandData;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public StringVariable m_dominantHand;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _interacted;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _purchaseTimer;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject m_currentSlot;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject m_currentCrystal;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject m_currentParent;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject m_currentCard;

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xF50EA4", Offset = "0xF50EA4", VA = "0xF50EA4")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xF5126C", Offset = "0xF5126C", VA = "0xF5126C")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xF51630", Offset = "0xF51630", VA = "0xF51630")]
	public void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xF5198C", Offset = "0xF5198C", VA = "0xF5198C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xF52320", Offset = "0xF52320", VA = "0xF52320")]
	public ShopPurchaseManager()
	{
	}
}
[Token(Token = "0x2000264")]
internal class UnityStringEvent
{
	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xF779D0", Offset = "0xF779D0", VA = "0xF779D0")]
	public UnityStringEvent()
	{
	}
}
[Token(Token = "0x2000265")]
public struct ActorDataTransformGameEventStruct
{
	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ActorData m_actorData;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Transform m_spawnPoint;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int m_ownerInstanceId;
}
[Token(Token = "0x2000266")]
public struct ActorStruct
{
	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int m_currentPatternIndex;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int m_currentActionDataIndex;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public PatternData m_currentPattern;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CustomActionData m_currentAction;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_configId;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_maxEnemyLimit;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_currentEnemyCount;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_spawnListIndex;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_spawnerInstanceId;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<ActorListWrapper> m_batches;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_set;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string m_type;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool m_finished;
}
[Token(Token = "0x2000267")]
public struct GameObjectGameEventStruct
{
	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject m_gameObject;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int m_instanceId;
}
[Serializable]
[Token(Token = "0x2000268")]
public struct Pattern
{
	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string m_name;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[Expandable]
	public PatternData m_patternData;
}
[Token(Token = "0x2000269")]
public struct StringTextAssetListStruct
{
	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string m_name;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public List<TextAsset> m_textAssets;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int m_numberOfTextAssetToDownload;

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xCE3560", Offset = "0xCE3560", VA = "0xCE3560")]
	public StringTextAssetListStruct(string name)
	{
	}
}
[Token(Token = "0x200026A")]
public struct Vector3IntGameEventStruct
{
	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 m_position;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int m_instanceId;
}
[Token(Token = "0x200026B")]
public class ParticleInteractorSigns : MonoBehaviour
{
	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObjectVariable m_gameObjectVariable;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color m_defaultColor;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color m_activatedColor;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _gameObject;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem _particleSystem;

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x136E8F8", Offset = "0x136E8F8", VA = "0x136E8F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x136EB10", Offset = "0x136EB10", VA = "0x136EB10")]
	public void ChangeColor(GameObject go, Color color)
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x136EBEC", Offset = "0x136EBEC", VA = "0x136EBEC")]
	public ParticleInteractorSigns()
	{
	}
}
[Token(Token = "0x200026C")]
public class TelekineticManager : MonoBehaviour
{
	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TelekineticData m_telekineticData;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_shooter;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_telekineticEffect;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_telekinesisTarget;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_debugSphere;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string m_axisName;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VelocityTracker m_velocityTracker;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1164", Offset = "0xBE1164")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1164", Offset = "0xBE1164")]
	public bool m_useAutoAimForBoidBall;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObjectVariable m_autoAimedBoidBall;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE11B4", Offset = "0xBE11B4")]
	public bool m_useAutoAimForPlanet;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObjectVariable m_autoAimedPlanet;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject _hand;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _distance;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _force;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _thresholdDistance;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _accelerationForce;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _depthForce;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _useInertia;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	private bool _telekinesisOn;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject _telekinesisObject;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float _zSnap;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject _curve;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private CinemachinePath _telekineticEffectPath;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private CinemachineDollyCart _telekineticEffectCart;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 _handPositionSnapshot;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject _debugSphere;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float _depth;

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xF61A70", Offset = "0xF61A70", VA = "0xF61A70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xF61B04", Offset = "0xF61B04", VA = "0xF61B04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xF61E1C", Offset = "0xF61E1C", VA = "0xF61E1C")]
	public void OnControllerTriggerPressed()
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xF62204", Offset = "0xF62204", VA = "0xF62204")]
	public void OnControllerTriggerReleased()
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xF62408", Offset = "0xF62408", VA = "0xF62408")]
	public void MoveDepth()
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xF62598", Offset = "0xF62598", VA = "0xF62598")]
	public TelekineticManager()
	{
	}
}
[Token(Token = "0x200026D")]
public class VectorFollower : CacheBehaviour
{
	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3 m_vectorToFollow;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float m_speed;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform m_transformToFollow;

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xF791D8", Offset = "0xF791D8", VA = "0xF791D8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xF793C4", Offset = "0xF793C4", VA = "0xF793C4")]
	public VectorFollower()
	{
	}
}
[Token(Token = "0x200026E")]
public class ActorLifeGauge : CacheBehaviour
{
	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE11C8", Offset = "0xBE11C8")]
	public Transform m_gaugeTransform;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float m_barPositionWhenDeath;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public DestroyObjectOnTriggerEnter[] m_triggers;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public int m_maxHP;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[HideInInspector]
	public int m_currentHP;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 _tempPosition;

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x140FEA8", Offset = "0x140FEA8", VA = "0x140FEA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x1410178", Offset = "0x1410178", VA = "0x1410178")]
	public void OnLoseHP(int hpLost)
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x141050C", Offset = "0x141050C", VA = "0x141050C")]
	public void OnRefreshMaxHP()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x14104AC", Offset = "0x14104AC", VA = "0x14104AC")]
	private void MoveGauge()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x1410734", Offset = "0x1410734", VA = "0x1410734")]
	public ActorLifeGauge()
	{
	}
}
[Token(Token = "0x200026F")]
public class BossLifeGauge : MonoBehaviour
{
	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_gaugeTransform;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly float m_barPositionWhenDeath;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_offsetRemainingParts;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntVariable m_remainingParts;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntVariable m_fullPartsCount;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public IntVariable m_partsToDestroyCount;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _tempPosition;

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xED1D90", Offset = "0xED1D90", VA = "0xED1D90")]
	public void OnActorPart(IntIntGameEventStruct gameEventStruct)
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xED1E88", Offset = "0xED1E88", VA = "0xED1E88")]
	public BossLifeGauge()
	{
	}
}
[Token(Token = "0x2000270")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD261C", Offset = "0xBD261C")]
public class SOUIScoreDisplaySettings : ScriptableObject
{
	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_text;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_score;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 m_offset;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_stayTime;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_uiFeedback;

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xE407BC", Offset = "0xE407BC", VA = "0xE407BC")]
	public SOUIScoreDisplaySettings()
	{
	}
}
[Token(Token = "0x2000271")]
public class DamageDisplay : CacheBehaviour
{
	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextMeshPro m_text;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public FadeOutTextMeshPro m_fadeOut;

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xF0560C", Offset = "0xF0560C", VA = "0xF0560C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xF05650", Offset = "0xF05650", VA = "0xF05650")]
	public DamageDisplay()
	{
	}
}
[Token(Token = "0x2000272")]
public class FadeOutTextMeshPro : MonoBehaviour
{
	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro m_textMeshPro;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_fadingTime;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_delay;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_destroyOnFinish;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Color _tempcolor;

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xF1B530", Offset = "0xF1B530", VA = "0xF1B530")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xF1B8A0", Offset = "0xF1B8A0", VA = "0xF1B8A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xF1B91C", Offset = "0xF1B91C", VA = "0xF1B91C")]
	private void OnCompleteFadeOut()
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xF1B9CC", Offset = "0xF1B9CC", VA = "0xF1B9CC")]
	private void UpdateTextMeshProAlpha(float value)
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xF1B634", Offset = "0xF1B634", VA = "0xF1B634")]
	private void RunTweenValueTo(string name, string onupdate, float from, float to, float time, float delay = -1f, [Optional] string easeType, [Optional] string oncomplete)
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xF1BA04", Offset = "0xF1BA04", VA = "0xF1BA04")]
	public FadeOutTextMeshPro()
	{
	}
}
[Token(Token = "0x2000273")]
public class FeedbackAttack3D : CacheBehaviour
{
	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ActorLifeGauge m_lifeGauge;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject m_graphics;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool m_useTarget;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject m_target;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int _instanceId;

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xF1BA10", Offset = "0xF1BA10", VA = "0xF1BA10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xF1BB5C", Offset = "0xF1BB5C", VA = "0xF1BB5C")]
	public void OnAttackHUD(int instanceId)
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xF1BBC8", Offset = "0xF1BBC8", VA = "0xF1BBC8")]
	public void OnStopAttackHUD(int instanceId)
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xF1BBF8", Offset = "0xF1BBF8", VA = "0xF1BBF8")]
	public FeedbackAttack3D()
	{
	}
}
[Token(Token = "0x2000274")]
public class InfoPlanet : MonoBehaviour
{
	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1220", Offset = "0xBE1220")]
	public TextMeshPro m_planetName;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro m_azoteCount;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro m_carbonCount;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro m_phosphorusCount;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro m_sulfurCount;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro m_waterCount;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1258", Offset = "0xBE1258")]
	public GameObject m_azoteGO;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_carbonGO;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject m_phosphorusGO;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_sulfurGO;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_waterGO;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1290", Offset = "0xBE1290")]
	public GameObject m_azoteNoneGO;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject m_carbonNoneGO;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject m_phosphorusNoneGO;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject m_sulfurNoneGO;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject m_waterNoneGO;

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0xF2F120", Offset = "0xF2F120", VA = "0xF2F120")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0xF2F288", Offset = "0xF2F288", VA = "0xF2F288")]
	public InfoPlanet()
	{
	}
}
[Token(Token = "0x2000275")]
public class ScoreDisplay : CacheBehaviour
{
	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE12C8", Offset = "0xBE12C8")]
	public TextMeshPro m_text;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TextMeshPro m_score;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1300", Offset = "0xBE1300")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1300", Offset = "0xBE1300")]
	public SOUIScoreDisplaySettings m_hitSettings;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public SOUIScoreDisplaySettings m_deadSettings;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public SOUIScoreDisplaySettings m_invulnerableSettings;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public SOUIScoreDisplaySettings m_dodgeSettings;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1350", Offset = "0xBE1350")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1350", Offset = "0xBE1350")]
	public IntVariable m_playerScore;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public IntVariable m_playerScoreMultiplyer;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObjectVariable m_headset;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int _hitCount;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int _tempAddScore;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 _startTextPos;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 _startScorePos;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Transform _headsetTransform;

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0xE43DDC", Offset = "0xE43DDC", VA = "0xE43DDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0xE43DE0", Offset = "0xE43DE0", VA = "0xE43DE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xE43EAC", Offset = "0xE43EAC", VA = "0xE43EAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xE43F28", Offset = "0xE43F28", VA = "0xE43F28")]
	public void OnActorTouchedPosition(Vector3 position)
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xE442B0", Offset = "0xE442B0", VA = "0xE442B0")]
	public void OnActorSkeletonTouchedPosition(Vector3 position)
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xE444A0", Offset = "0xE444A0", VA = "0xE444A0")]
	public void OnActorDeadPosition(Vector3 position)
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xE446FC", Offset = "0xE446FC", VA = "0xE446FC")]
	public void OnDodge()
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xE4483C", Offset = "0xE4483C", VA = "0xE4483C")]
	public void ResetMultiplyer()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xE441E8", Offset = "0xE441E8", VA = "0xE441E8")]
	private void ShowUI(float stayTime, string hideFunction)
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xE44B14", Offset = "0xE44B14", VA = "0xE44B14")]
	public void HideAfterTouched()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xE44BF8", Offset = "0xE44BF8", VA = "0xE44BF8")]
	public void HideAfterInvulnerable()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xE44C14", Offset = "0xE44C14", VA = "0xE44C14")]
	public void HideAfterDead()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xE44C30", Offset = "0xE44C30", VA = "0xE44C30")]
	public void HideAfterDodge()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xE44B30", Offset = "0xE44B30", VA = "0xE44B30")]
	public void HideUI(float delay = -1f)
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xE44C4C", Offset = "0xE44C4C", VA = "0xE44C4C")]
	private void UpdateTextAlpha(float value)
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xE44CAC", Offset = "0xE44CAC", VA = "0xE44CAC")]
	private void UpdateScoreAlpha(float value)
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xE44C54", Offset = "0xE44C54", VA = "0xE44C54")]
	private void UpdateTextMeshProAlpha(TextMeshPro tmp, float value)
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xE4487C", Offset = "0xE4487C", VA = "0xE4487C")]
	private void RunTweenValueTo(string name, string onupdate, float from, float to, float time, float delay = -1f, [Optional] string easeType, [Optional] string oncomplete)
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xE44CB4", Offset = "0xE44CB4", VA = "0xE44CB4")]
	public ScoreDisplay()
	{
	}
}
[Token(Token = "0x2000276")]
public class TextFeedbackUI : MonoBehaviour
{
	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro m_textMeshPro;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_prefix;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro m_score;

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xF68DC4", Offset = "0xF68DC4", VA = "0xF68DC4")]
	public void ChangeText(string newText)
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xF68E80", Offset = "0xF68E80", VA = "0xF68E80")]
	public void ChangeText(StringVariable stringVariable)
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xF68EDC", Offset = "0xF68EDC", VA = "0xF68EDC")]
	public void ChangeText(IntVariable intVariable)
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xF68F88", Offset = "0xF68F88", VA = "0xF68F88")]
	public TextFeedbackUI()
	{
	}
}
[Token(Token = "0x2000277")]
public class WarningZoneManager : CacheBehaviour
{
	[Token(Token = "0x2000681")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8718", Offset = "0xBD8718")]
	private sealed class <DeactivateBox>d__10 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_disappearAnimTime;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WarningZoneManager <>4__this;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject box;

		[Token(Token = "0x17000391")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60025CD")]
			[Address(RVA = "0xF7B0BC", Offset = "0xF7B0BC", VA = "0xF7B0BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000392")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025CF")]
			[Address(RVA = "0xF7B124", Offset = "0xF7B124", VA = "0xF7B124", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0xF7AE80", Offset = "0xF7AE80", VA = "0xF7AE80")]
		[DebuggerHidden]
		public <DeactivateBox>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0xF7AF98", Offset = "0xF7AF98", VA = "0xF7AF98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0xF7AF9C", Offset = "0xF7AF9C", VA = "0xF7AF9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0xF7B0C4", Offset = "0xF7B0C4", VA = "0xF7B0C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject m_warningZonePrefab;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE13A0", Offset = "0xBE13A0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE13A0", Offset = "0xBE13A0")]
	public string m_nameAnimationDisappear;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float m_disappearAnimTime;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Dictionary<string, GameObject> _dicoLabelZones;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Dictionary<string, List<int>> _dicoLabelInstances;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<string> _labels;

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xF7A07C", Offset = "0xF7A07C", VA = "0xF7A07C")]
	public void OnActivateWarningZone(object[] eventParams)
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xF7A584", Offset = "0xF7A584", VA = "0xF7A584")]
	public void OnDeactivateWarningZone(object[] eventParams)
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xF7A79C", Offset = "0xF7A79C", VA = "0xF7A79C")]
	public void OnDeactivateAllWarningZonesInstanceId(int instanceId)
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xF7AA58", Offset = "0xF7AA58", VA = "0xF7AA58")]
	public void OnActorDestroyedInstanceId(int instanceId)
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xF7AA5C", Offset = "0xF7AA5C", VA = "0xF7AA5C")]
	public void OnAllPlanetsRegenerated()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xF7A91C", Offset = "0xF7A91C", VA = "0xF7A91C")]
	private void RemoveInstanceId(int instanceId, string labelName)
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0xF7AC08", Offset = "0xF7AC08", VA = "0xF7AC08")]
	private void BoxDisappear(GameObject box)
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xF7ADD8", Offset = "0xF7ADD8", VA = "0xF7ADD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA67C", Offset = "0xBEA67C")]
	private IEnumerator<float> DeactivateBox(GameObject box, float m_disappearAnimTime)
	{
		return null;
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xF7AEAC", Offset = "0xF7AEAC", VA = "0xF7AEAC")]
	public WarningZoneManager()
	{
	}
}
[Token(Token = "0x2000278")]
public class UI_EndScreen : CacheBehaviour
{
	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool _isVictory;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE13F0", Offset = "0xBE13F0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE13F0", Offset = "0xBE13F0")]
	public IntVariable m_playerScore;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public IntVariable m_playerScoreMultiplyer;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public IntVariable m_playerHealth;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public BoolVariable m_playerInBoss;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public BoolVariable m_playerInLastBoss;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1440", Offset = "0xBE1440")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1440", Offset = "0xBE1440")]
	public SpriteRenderer m_IcoWin;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public SpriteRenderer m_IcoLose;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public TextMeshPro m_text_gameOver;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject button_Continue;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject button_Resume;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1490", Offset = "0xBE1490")]
	public TextMeshPro m_newSystemDiscovered;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE14C8", Offset = "0xBE14C8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE14C8", Offset = "0xBE14C8")]
	public GameEventListener m_triggerThenHide;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public BoolUnityEvent OnTweenOver;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public UnityEvent OnScreenHiddenWin;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public UnityEvent OnScreenHiddenLose;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public UnityEvent OnScreenHiddenBoss;

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xF71944", Offset = "0xF71944", VA = "0xF71944")]
	public void OnVictory()
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0xF719D4", Offset = "0xF719D4", VA = "0xF719D4")]
	public void OnLose()
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0xF71A80", Offset = "0xF71A80", VA = "0xF71A80")]
	public void RaiseHiddenEvent()
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0xF71B94", Offset = "0xF71B94", VA = "0xF71B94")]
	public void OnShowComplete()
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0xF71BF0", Offset = "0xF71BF0", VA = "0xF71BF0")]
	public void OnEndScreenTweenStart()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xF71C78", Offset = "0xF71C78", VA = "0xF71C78")]
	public void OnFinalScoreTweenStart()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xF71D00", Offset = "0xF71D00", VA = "0xF71D00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xF71D04", Offset = "0xF71D04", VA = "0xF71D04")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xF71D80", Offset = "0xF71D80", VA = "0xF71D80")]
	public UI_EndScreen()
	{
	}
}
[Token(Token = "0x2000279")]
public class UI_EnemyRadar : CacheBehaviour
{
	[Serializable]
	[Token(Token = "0x2000682")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8728", Offset = "0xBD8728")]
	private sealed class <>c
	{
		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__15_0;

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0xF72D18", Offset = "0xF72D18", VA = "0xF72D18")]
		public <>c()
		{
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0xF72D20", Offset = "0xF72D20", VA = "0xF72D20")]
		internal bool <CheckDistanceAndCreateArrow>b__15_0(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float m_detectionDistance;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject m_arrow;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public RectTransform m_mainCanvas;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float m_screenOffsetX;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float m_screenOffsetY;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Camera m_headCamera;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Color m_signColor;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Dictionary<int, Transform> _enemiesDico;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Dictionary<int, GameObject> _signsDico;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Dictionary<int, GameObject> _signsIdleDico;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject _tempArrow;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 _screenCenter;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Camera _mainCamera;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Plane[] _planes;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Color _baseColor;

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xF71D90", Offset = "0xF71D90", VA = "0xF71D90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xF71EA4", Offset = "0xF71EA4", VA = "0xF71EA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xF722F8", Offset = "0xF722F8", VA = "0xF722F8")]
	public void OnActorCreatedInstanceId(int instanceId)
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xF727D8", Offset = "0xF727D8", VA = "0xF727D8")]
	private void OnActorSnapped(int instanceId)
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xF72880", Offset = "0xF72880", VA = "0xF72880")]
	public void OnActorIsAttacking(int instanceId)
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xF7299C", Offset = "0xF7299C", VA = "0xF7299C")]
	public void OnActorStopAttack(int instanceId)
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xF72AB8", Offset = "0xF72AB8", VA = "0xF72AB8")]
	private void OnBecameVisibleIntEvent(int instanceId)
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xF72ABC", Offset = "0xF72ABC", VA = "0xF72ABC")]
	private void OnBecameInvisibleIntEvent(int instanceId)
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xF72484", Offset = "0xF72484", VA = "0xF72484")]
	private void CheckDistanceAndCreateArrow(int instanceId)
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xF72AC0", Offset = "0xF72AC0", VA = "0xF72AC0")]
	private void OnDestroyIntEvent(int instanceId)
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xF72BC8", Offset = "0xF72BC8", VA = "0xF72BC8")]
	public UI_EnemyRadar()
	{
	}
}
[Token(Token = "0x200027A")]
public class UI_FloatVariableSpriteDisplay : CacheBehaviour
{
	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject m_spriteDisplay;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public FloatVariable m_currentVariable;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public FloatVariable m_maxVariable;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public CanvasGroup m_allSpriteCanvasGroup;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float m_offset;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[HideInInspector]
	public bool m_maxVarChanged;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	[HideInInspector]
	public bool m_currentChanged;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<GameObject> _sprites;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float _maxVar;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float _currentVar;

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xF72D84", Offset = "0xF72D84", VA = "0xF72D84")]
	public void UpdateVarCount()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0xF72ED0", Offset = "0xF72ED0", VA = "0xF72ED0")]
	public void UpdateVarMax()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xF73284", Offset = "0xF73284", VA = "0xF73284")]
	public void Create()
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xF733B0", Offset = "0xF733B0", VA = "0xF733B0")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xF7349C", Offset = "0xF7349C", VA = "0xF7349C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0xF73640", Offset = "0xF73640", VA = "0xF73640")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xF73624", Offset = "0xF73624", VA = "0xF73624")]
	public void UpdateChildrenAlpha(float value)
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xF7316C", Offset = "0xF7316C", VA = "0xF7316C")]
	private void AddSprite(int index)
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0xF736D0", Offset = "0xF736D0", VA = "0xF736D0")]
	public UI_FloatVariableSpriteDisplay()
	{
	}
}
[Token(Token = "0x200027B")]
public class UI_HUD : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000683")]
	public struct VariableWatcherGraph
	{
		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntVariable m_intVariable;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public CanvasGroup m_canvasGroup;
	}

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1538", Offset = "0xBE1538")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1538", Offset = "0xBE1538")]
	public Canvas m_mainCanvas;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UI_LifeGauge m_life;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UI_ManaGauge m_manaGauge;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UI_FloatVariableSpriteDisplay m_newManaGauge;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI m_score;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI m_multiplyer;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SpriteRenderer m_lifeSupportIcon;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro m_lifeSupportsText;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1588", Offset = "0xBE1588")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1588", Offset = "0xBE1588")]
	public bool m_deactivateIdleCanvas;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float m_displayTime;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float m_fadeInTime;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float m_fadeOutTime;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE15D8", Offset = "0xBE15D8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE15D8", Offset = "0xBE15D8")]
	public VariableWatcherGraph[] m_intVarToWatchWithCanvasGroup;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1628", Offset = "0xBE1628")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1628", Offset = "0xBE1628")]
	public bool m_enemyRadarActivate;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UI_EnemyRadar m_enemyRadar;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _lifeTweening;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool _manaTweening;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<int> _previousIntVars;

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xF73754", Offset = "0xF73754", VA = "0xF73754")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xF739E0", Offset = "0xF739E0", VA = "0xF739E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xF73BAC", Offset = "0xF73BAC", VA = "0xF73BAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xF73C28", Offset = "0xF73C28", VA = "0xF73C28")]
	public void ShowLifeSupport()
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xF73EF0", Offset = "0xF73EF0", VA = "0xF73EF0")]
	public void HideLifeSupport()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xF73960", Offset = "0xF73960", VA = "0xF73960")]
	public void UpdateLifeSupportAlpha(float value)
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xF73FAC", Offset = "0xF73FAC", VA = "0xF73FAC")]
	public void OnCompleteLifeSupportAlpha()
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xF73B5C", Offset = "0xF73B5C", VA = "0xF73B5C")]
	public void PlayerLoseLifeFeedback()
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xF744D0", Offset = "0xF744D0", VA = "0xF744D0")]
	public void OnUpdateAlphaLife(float value)
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0xF744F8", Offset = "0xF744F8", VA = "0xF744F8")]
	public void OnCompleteAlphaLife()
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xF7475C", Offset = "0xF7475C", VA = "0xF7475C")]
	public void OnCompleteDisableCanvas()
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xF73A80", Offset = "0xF73A80", VA = "0xF73A80")]
	public void ShowManaGauge()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0xF74788", Offset = "0xF74788", VA = "0xF74788")]
	public void OnUpdateManaAlpha(float value)
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0xF747B0", Offset = "0xF747B0", VA = "0xF747B0")]
	public void OnCompleteManaAlpha()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xF7489C", Offset = "0xF7489C", VA = "0xF7489C")]
	public void OnActorTouched()
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xF738D0", Offset = "0xF738D0", VA = "0xF738D0")]
	public void OnUpdateAlphaScore(float value)
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xF74970", Offset = "0xF74970", VA = "0xF74970")]
	public void OnCompleteScoreAlpha()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xF73CFC", Offset = "0xF73CFC", VA = "0xF73CFC")]
	private Hashtable GetTweenHashtable(string name, string onupdate, float from, float to, float time, [Optional] string oncomplete, float delay = -1f)
	{
		return null;
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xF74A2C", Offset = "0xF74A2C", VA = "0xF74A2C")]
	public UI_HUD()
	{
	}
}
[Token(Token = "0x200027C")]
public class UI_HUD_Dodge : MonoBehaviour
{
	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1678", Offset = "0xBE1678")]
	public TextMeshProUGUI m_text;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI m_score;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE16B0", Offset = "0xBE16B0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE16B0", Offset = "0xBE16B0")]
	public string m_textWhenDodged;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_scoreWhenDodged;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1700", Offset = "0xBE1700")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1700", Offset = "0xBE1700")]
	public IntVariable m_playerScore;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public IntVariable m_playerScoreMultiplyer;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1750", Offset = "0xBE1750")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1750", Offset = "0xBE1750")]
	public float m_dodgeStayTime;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _tempAddScore;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color _tempcolor;

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xF74A48", Offset = "0xF74A48", VA = "0xF74A48")]
	public void OnDodge()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xF74B58", Offset = "0xF74B58", VA = "0xF74B58")]
	private void ShowUI(float stayTime, string hideFunction)
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xF74EB8", Offset = "0xF74EB8", VA = "0xF74EB8")]
	public void HideAfterDodge()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xF74EC0", Offset = "0xF74EC0", VA = "0xF74EC0")]
	public void HideUI(float delay = -1f)
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xF74F88", Offset = "0xF74F88", VA = "0xF74F88")]
	private void UpdateTextAlpha(float value)
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xF74FF4", Offset = "0xF74FF4", VA = "0xF74FF4")]
	private void UpdateScoreAlpha(float value)
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xF74F90", Offset = "0xF74F90", VA = "0xF74F90")]
	private void UpdateTextMeshProAlpha(TextMeshProUGUI tmp, float value)
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xF74C20", Offset = "0xF74C20", VA = "0xF74C20")]
	private void RunTweenValueTo(string name, string onupdate, float from, float to, float time, float delay = -1f, [Optional] string easeType, [Optional] string oncomplete)
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xF74FFC", Offset = "0xF74FFC", VA = "0xF74FFC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xF75078", Offset = "0xF75078", VA = "0xF75078")]
	public UI_HUD_Dodge()
	{
	}
}
[Token(Token = "0x200027D")]
public class UI_IntVarToText : MonoBehaviour
{
	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI m_text;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IntVariable m_intVariable;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_prefix;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _currentValue;

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xF750E8", Offset = "0xF750E8", VA = "0xF750E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xF750EC", Offset = "0xF750EC", VA = "0xF750EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xF7519C", Offset = "0xF7519C", VA = "0xF7519C")]
	public UI_IntVarToText()
	{
	}
}
[Token(Token = "0x200027E")]
public class UI_IntVarToTextMeshPro : CacheBehaviour
{
	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextMeshPro m_text;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntVariable m_intVariable;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string m_prefix;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool m_updateEachFrame;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int _currentValue;

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xF751FC", Offset = "0xF751FC", VA = "0xF751FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xF752B4", Offset = "0xF752B4", VA = "0xF752B4")]
	public void ChangeTextWithVar(IntVariable intvar)
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xF753A0", Offset = "0xF753A0", VA = "0xF753A0")]
	public void UpdateTextWithRefVar()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xF754E4", Offset = "0xF754E4", VA = "0xF754E4")]
	public UI_IntVarToTextMeshPro()
	{
	}
}
[Token(Token = "0x200027F")]
public class UI_LifeGauge : CacheBehaviour
{
	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject m_heart;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntVariable m_playerHp;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public IntVariable m_playerMaxHp;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public CanvasGroup m_allHeartsGroup;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE17A0", Offset = "0xBE17A0")]
	public string m_loseLifeAnim;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string m_lastLifeAnim;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string m_idleLifeAnim;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float m_offset;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public bool m_linearLife;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float m_deployAngle;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float m_radius;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float m_offsetAngle;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE17D8", Offset = "0xBE17D8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE17D8", Offset = "0xBE17D8")]
	public UnityEvent OnGainLife;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public UnityEvent OnLoseLife;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public UnityEvent OnLastLife;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public UnityEvent OnDeath;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public bool m_maxHpChanged;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	[HideInInspector]
	public bool m_hpChanged;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
	[HideInInspector]
	public bool m_lastLife;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private List<GameObject> _hearts;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int _maxHealth;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private int _currentHealth;

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xF73FB0", Offset = "0xF73FB0", VA = "0xF73FB0")]
	public void UpdateLifeCount()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xF7425C", Offset = "0xF7425C", VA = "0xF7425C")]
	public void UpdateLifeMax()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xF758CC", Offset = "0xF758CC", VA = "0xF758CC")]
	public void Create()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xF75664", Offset = "0xF75664", VA = "0xF75664")]
	private void GenerateRadialLifeGauge()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xF75A08", Offset = "0xF75A08", VA = "0xF75A08")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xF75AF4", Offset = "0xF75AF4", VA = "0xF75AF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xF75C04", Offset = "0xF75C04", VA = "0xF75C04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xF7380C", Offset = "0xF7380C", VA = "0xF7380C")]
	public void UpdateChildrenAlpha(float value)
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xF75544", Offset = "0xF75544", VA = "0xF75544")]
	private void AddHeart(int index)
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xF75C8C", Offset = "0xF75C8C", VA = "0xF75C8C")]
	public UI_LifeGauge()
	{
	}
}
[Token(Token = "0x2000280")]
public class UI_ManaGauge : CacheBehaviour
{
	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1858", Offset = "0xBE1858")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1858", Offset = "0xBE1858")]
	public Image m_border;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Image m_full;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE18A8", Offset = "0xBE18A8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE18A8", Offset = "0xBE18A8")]
	public FloatVariable m_manaMax;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE18F8", Offset = "0xBE18F8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE18F8", Offset = "0xBE18F8")]
	public FloatVariable m_manaVar;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public RectTransform m_transformGauge;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public bool m_showGauge;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float _currentValue;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float _currentMaxValue;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 _tempVector;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Color _tempColor;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool _updateGauge;

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xF73828", Offset = "0xF73828", VA = "0xF73828")]
	public void UpdateAlpha(float value)
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xF760D4", Offset = "0xF760D4", VA = "0xF760D4")]
	public void OnCompleteManaAlpha()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xF76398", Offset = "0xF76398", VA = "0xF76398")]
	public void OnSpellDataLaunched(UnityEngine.Object value)
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xF7639C", Offset = "0xF7639C", VA = "0xF7639C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xF7646C", Offset = "0xF7646C", VA = "0xF7646C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xF76620", Offset = "0xF76620", VA = "0xF76620")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xF7617C", Offset = "0xF7617C", VA = "0xF7617C")]
	private Hashtable GetTweenHashtable(string onupdate, float from, float to, float time, [Optional] string oncomplete, float delay = -1f)
	{
		return null;
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xF7669C", Offset = "0xF7669C", VA = "0xF7669C")]
	public UI_ManaGauge()
	{
	}
}
[Token(Token = "0x2000281")]
public class UI_NatureGauge : MonoBehaviour
{
	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1958", Offset = "0xBE1958")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1958", Offset = "0xBE1958")]
	public Image m_border;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image m_full;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE19A8", Offset = "0xBE19A8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE19A8", Offset = "0xBE19A8")]
	public FloatVariable m_groundPower;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform m_transformGauge;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _currentValue;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 _tempVector;

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xF766B4", Offset = "0xF766B4", VA = "0xF766B4")]
	public void UpdateAlpha(float value)
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xF76744", Offset = "0xF76744", VA = "0xF76744")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xF76748", Offset = "0xF76748", VA = "0xF76748")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xF76840", Offset = "0xF76840", VA = "0xF76840")]
	public UI_NatureGauge()
	{
	}
}
[Token(Token = "0x2000282")]
public class VisibilityEvents : CacheBehaviour
{
	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UnityEvent OnBecameInvisibleEvent;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public UnityEvent OnBecameVisibleEvent;

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xF794A8", Offset = "0xF794A8", VA = "0xF794A8")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xF794C4", Offset = "0xF794C4", VA = "0xF794C4")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xF794E0", Offset = "0xF794E0", VA = "0xF794E0")]
	public VisibilityEvents()
	{
	}
}
[Token(Token = "0x2000283")]
public class AlphaPulse : MonoBehaviour
{
	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_speed;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshPro _textMeshPro;

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x111A0D0", Offset = "0x111A0D0", VA = "0x111A0D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x111A130", Offset = "0x111A130", VA = "0x111A130")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x111A214", Offset = "0x111A214", VA = "0x111A214")]
	public AlphaPulse()
	{
	}
}
[Token(Token = "0x2000284")]
public class UI_MainScreen : MonoBehaviour
{
	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE19F8", Offset = "0xBE19F8")]
	public SpriteRenderer m_logo;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro m_text;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AlphaPulse m_pulse;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1A30", Offset = "0xBE1A30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1A30", Offset = "0xBE1A30")]
	public float m_fadeInTime;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_fadeOutTime;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color _tempColor;

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xF6ECE0", Offset = "0xF6ECE0", VA = "0xF6ECE0")]
	public void Show()
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xF6ED2C", Offset = "0xF6ED2C", VA = "0xF6ED2C")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xF75D2C", Offset = "0xF75D2C", VA = "0xF75D2C")]
	public void ActivatePulse()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xF75D4C", Offset = "0xF75D4C", VA = "0xF75D4C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xF75DC8", Offset = "0xF75DC8", VA = "0xF75DC8")]
	public void UpdateLogoAlpha(float value)
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xF75E1C", Offset = "0xF75E1C", VA = "0xF75E1C")]
	public void UpdateTextAlpha(float value)
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xF75E80", Offset = "0xF75E80", VA = "0xF75E80")]
	private void RunTweenValueTo(string name, string onupdate, float from, float to, float time, float delay = -1f, [Optional] string oncomplete)
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xF760C0", Offset = "0xF760C0", VA = "0xF760C0")]
	public UI_MainScreen()
	{
	}
}
[Token(Token = "0x2000285")]
public class ElementProgressText : CacheBehaviour
{
	[Token(Token = "0x2000684")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8738", Offset = "0xBD8738")]
	private sealed class <WaitForUpdateText>d__13 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ElementProgressText <>4__this;

		[Token(Token = "0x17000393")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60025D6")]
			[Address(RVA = "0xF19528", Offset = "0xF19528", VA = "0xF19528", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000394")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025D8")]
			[Address(RVA = "0xF19590", Offset = "0xF19590", VA = "0xF19590", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0xF19218", Offset = "0xF19218", VA = "0xF19218")]
		[DebuggerHidden]
		public <WaitForUpdateText>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0xF19468", Offset = "0xF19468", VA = "0xF19468", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0xF1946C", Offset = "0xF1946C", VA = "0xF1946C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0xF19530", Offset = "0xF19530", VA = "0xF19530", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000685")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8748", Offset = "0xBD8748")]
	private sealed class <WaitForEventLaunch>d__15 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ElementProgressText <>4__this;

		[Token(Token = "0x17000395")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60025DC")]
			[Address(RVA = "0xF1939C", Offset = "0xF1939C", VA = "0xF1939C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000396")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025DE")]
			[Address(RVA = "0xF19404", Offset = "0xF19404", VA = "0xF19404", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0xF19244", Offset = "0xF19244", VA = "0xF19244")]
		[DebuggerHidden]
		public <WaitForEventLaunch>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0xF192DC", Offset = "0xF192DC", VA = "0xF192DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0xF192E0", Offset = "0xF192E0", VA = "0xF192E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0xF193A4", Offset = "0xF193A4", VA = "0xF193A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1A80", Offset = "0xBE1A80")]
	public IntVariable m_elementCurrentCount;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntVariable m_elementNeededCount;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1AB8", Offset = "0xBE1AB8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1AB8", Offset = "0xBE1AB8")]
	public TextMeshPro m_textCurrent;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public TextMeshPro m_textNeeded;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1B08", Offset = "0xBE1B08")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1B08", Offset = "0xBE1B08")]
	public float m_delayBeforeEvent;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float m_delayChangeTextWithCurrentValue;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string m_neededPrefix;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1B58", Offset = "0xBE1B58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1B58", Offset = "0xBE1B58")]
	public UnityEvent OnChangeValue;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public UnityEvent OnFullGauge;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public UnityEvent OnFullGaugeIncrease;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int _previousValue;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int _maxValue;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool _fullGauge;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	private bool _started;

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xF18CE0", Offset = "0xF18CE0", VA = "0xF18CE0")]
	public void UpdateDisplay()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xF18D8C", Offset = "0xF18D8C", VA = "0xF18D8C")]
	public void UpdateProgress()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xF19180", Offset = "0xF19180", VA = "0xF19180")]
	public void ReinitializeProgress()
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xF190F4", Offset = "0xF190F4", VA = "0xF190F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA6E0", Offset = "0xBEA6E0")]
	private IEnumerator<float> WaitForUpdateText(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xF19090", Offset = "0xF19090", VA = "0xF19090")]
	private void UpdateCurrentTextMeshPro()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0xF19004", Offset = "0xF19004", VA = "0xF19004")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA744", Offset = "0xBEA744")]
	private IEnumerator<float> WaitForEventLaunch(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0xF18F58", Offset = "0xF18F58", VA = "0xF18F58")]
	private void LaunchEvent()
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0xF19270", Offset = "0xF19270", VA = "0xF19270")]
	public ElementProgressText()
	{
	}
}
[Token(Token = "0x2000286")]
public class HorizontalChoicesList : MonoBehaviour
{
	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1BA8", Offset = "0xBE1BA8")]
	public TextMeshPro m_choiceText;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> m_choices;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_defaultChoiceIndex;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntVariable m_indexVariable;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1BE0", Offset = "0xBE1BE0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1BE0", Offset = "0xBE1BE0")]
	public bool m_infiniteLoop;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1C30", Offset = "0xBE1C30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1C30", Offset = "0xBE1C30")]
	public Collider m_leftArrow;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Collider m_rightArrow;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1C80", Offset = "0xBE1C80")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1C80", Offset = "0xBE1C80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1C80", Offset = "0xBE1C80")]
	public List<UnityEvent> OnEachIndexChanged;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1CF4", Offset = "0xBE1CF4")]
	public IntUnityEvent OnIndexChanged;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _rightInstanceId;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _leftInstanceId;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _currentIndex;

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0xF2543C", Offset = "0xF2543C", VA = "0xF2543C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0xF256A0", Offset = "0xF256A0", VA = "0xF256A0")]
	private void ChangeIndex(int step)
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0xF25768", Offset = "0xF25768", VA = "0xF25768")]
	public void OnSelectedUI(ObjectPointer.EventData eventData)
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0xF25894", Offset = "0xF25894", VA = "0xF25894")]
	public void UpdateWithIntVariable()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0xF254AC", Offset = "0xF254AC", VA = "0xF254AC")]
	private void ChangeCurrentIndex(int index, bool sendEvent = true)
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xF25960", Offset = "0xF25960", VA = "0xF25960")]
	public HorizontalChoicesList()
	{
	}
}
[Token(Token = "0x2000287")]
public class SliderFloat : CacheBehaviour
{
	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1D2C", Offset = "0xBE1D2C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1D2C", Offset = "0xBE1D2C")]
	public FloatVariable m_floatVariable;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1D7C", Offset = "0xBE1D7C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1D7C", Offset = "0xBE1D7C")]
	public SpriteRenderer m_sliderButton;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SpriteRenderer m_sliderBar;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public TextMeshPro m_valueText;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float m_barPivotOnAxis;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1DCC", Offset = "0xBE1DCC")]
	public Collider m_leftArrow;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Collider m_rightArrow;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1E04", Offset = "0xBE1E04")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1E04", Offset = "0xBE1E04")]
	public float m_minValue;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float m_maxValue;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float m_step;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float m_defaultRatio;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float m_currentRatio;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1E54", Offset = "0xBE1E54")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1E54", Offset = "0xBE1E54")]
	public GameEventListener m_onTriggerPressedListener;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameEventListener m_onTriggerReleasedListener;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1EA4", Offset = "0xBE1EA4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1EA4", Offset = "0xBE1EA4")]
	public FloatUnityEvent OnRatioChanged;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int _instanceId;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private bool _grabbing;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float _barWidth;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private Vector3 _sliderBarBasicPosition;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Vector3 _buttonPosition;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private int _rightInstanceId;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int _leftInstanceId;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private bool _init;

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xF54720", Offset = "0xF54720", VA = "0xF54720")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xF54724", Offset = "0xF54724", VA = "0xF54724")]
	private void InitSliderFloat()
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0xF54A40", Offset = "0xF54A40", VA = "0xF54A40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xF5495C", Offset = "0xF5495C", VA = "0xF5495C")]
	private void MoveButtonWithRatio(float ratio)
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xF54A50", Offset = "0xF54A50", VA = "0xF54A50")]
	private void CalculateRatioWithPosition()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xF54BC8", Offset = "0xF54BC8", VA = "0xF54BC8")]
	private void ChangeRatio(float ratioDelta)
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xF54CF4", Offset = "0xF54CF4", VA = "0xF54CF4")]
	private void SetRatio(float ratio, bool forceSet = false)
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xF54B10", Offset = "0xF54B10", VA = "0xF54B10")]
	private void SetValueText(float ratio)
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xF54DDC", Offset = "0xF54DDC", VA = "0xF54DDC")]
	public void UpdateWithFloatVariable()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xF54E94", Offset = "0xF54E94", VA = "0xF54E94")]
	public void OnHoverInstanceId(int instanceId)
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xF54EF0", Offset = "0xF54EF0", VA = "0xF54EF0")]
	public void OnExitInstanceId(int instanceId)
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xF54F4C", Offset = "0xF54F4C", VA = "0xF54F4C")]
	public void OnSelectedUI(ObjectPointer.EventData eventData)
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xF550DC", Offset = "0xF550DC", VA = "0xF550DC")]
	public void OnTriggerPressed()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xF550E8", Offset = "0xF550E8", VA = "0xF550E8")]
	public void OnTriggerReleased()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xF550F0", Offset = "0xF550F0", VA = "0xF550F0")]
	public SliderFloat()
	{
	}
}
[Token(Token = "0x2000288")]
public class PointerManager : CacheBehaviour
{
	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UnityEvent OnPointerActivatedEvent;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public UnityEvent OnPointerDeactivatedEvent;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _currentStatus;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool _previousStatus;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
	private bool _savedStatus;

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0xEE7A04", Offset = "0xEE7A04", VA = "0xEE7A04")]
	public void OnPointerActivated()
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xEE7A6C", Offset = "0xEE7A6C", VA = "0xEE7A6C")]
	public void OnPointerDeactivated()
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xEE7AD0", Offset = "0xEE7AD0", VA = "0xEE7AD0")]
	public void OnPointerBackToPreviousStatus()
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0xEE7B68", Offset = "0xEE7B68", VA = "0xEE7B68")]
	public void SaveCurrentPointerStatus()
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0xEE7B74", Offset = "0xEE7B74", VA = "0xEE7B74")]
	public void OnPointerBackToSavedStatus()
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xEE7C0C", Offset = "0xEE7C0C", VA = "0xEE7C0C")]
	public PointerManager()
	{
	}
}
[Token(Token = "0x2000289")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD267C", Offset = "0xBD267C")]
public class GameStateData : ScriptableObject
{
	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntVariable m_state;

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xF1F62C", Offset = "0xF1F62C", VA = "0xF1F62C")]
	public GameStateData()
	{
	}
}
[Token(Token = "0x200028A")]
public class ScoreManager : CacheBehaviour
{
	[Token(Token = "0x2000686")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8758", Offset = "0xBD8758")]
	private sealed class <DisplayScore>d__13 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float displayTime;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject scoreDisplay;

		[Token(Token = "0x17000397")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60025E2")]
			[Address(RVA = "0xE45C5C", Offset = "0xE45C5C", VA = "0xE45C5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000398")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025E4")]
			[Address(RVA = "0xE45CC4", Offset = "0xE45CC4", VA = "0xE45CC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0xE45B48", Offset = "0xE45B48", VA = "0xE45B48")]
		[DebuggerHidden]
		public <DisplayScore>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0xE45B7C", Offset = "0xE45B7C", VA = "0xE45B7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0xE45B80", Offset = "0xE45B80", VA = "0xE45B80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0xE45C64", Offset = "0xE45C64", VA = "0xE45C64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1EF4", Offset = "0xBE1EF4")]
	public SOUIScoreDisplaySettings m_moonRegenSettings;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public SOUIScoreDisplaySettings m_moonOverchargeSettings;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SOUIScoreDisplaySettings m_deadSettings;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1F2C", Offset = "0xBE1F2C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1F2C", Offset = "0xBE1F2C")]
	public IntVariable m_playerScore;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public IntVariable m_levelScore;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public IntVariable m_playerScoreMultiplyer;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObjectVariable m_headset;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Transform _headsetTransform;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int _tempAddScore;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int _hitCount;

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xE44CBC", Offset = "0xE44CBC", VA = "0xE44CBC")]
	public void OnActorDeadPosition(Vector3 position)
	{
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xE4522C", Offset = "0xE4522C", VA = "0xE4522C")]
	public void OnPlanetRegenerated(int instanceId)
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xE45990", Offset = "0xE45990", VA = "0xE45990")]
	public void OnActorTouchedPosition(Vector3 position)
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0xE45A8C", Offset = "0xE45A8C", VA = "0xE45A8C")]
	public void ResetMultiplyer()
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0xE45ACC", Offset = "0xE45ACC", VA = "0xE45ACC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0xE45164", Offset = "0xE45164", VA = "0xE45164")]
	private int CalculateScore(int baseScore)
	{
		return default(int);
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0xE451A0", Offset = "0xE451A0", VA = "0xE451A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA7A8", Offset = "0xBEA7A8")]
	private IEnumerator<float> DisplayScore(float displayTime, GameObject scoreDisplay)
	{
		return null;
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0xE45B74", Offset = "0xE45B74", VA = "0xE45B74")]
	public ScoreManager()
	{
	}
}
[Token(Token = "0x200028B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD26DC", Offset = "0xBD26DC")]
public class SplashScreenAnimation : CacheBehaviour
{
	[Serializable]
	[Token(Token = "0x2000687")]
	public struct LogoSequence
	{
		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Sprite m_logo;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE7398", Offset = "0xBE7398")]
		public float m_timeToDisplay;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE73B0", Offset = "0xBE73B0")]
		public float m_timeToFadeIn;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE73CC", Offset = "0xBE73CC")]
		public float m_timeToFadeOut;
	}

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1F7C", Offset = "0xBE1F7C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1F7C", Offset = "0xBE1F7C")]
	public List<LogoSequence> m_logosSequence;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE1FCC", Offset = "0xBE1FCC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE1FCC", Offset = "0xBE1FCC")]
	public UnityEvent OnLogoChanged;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UnityEvent OnSplashScreenFinished;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int _step;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool _finished;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float _timeOfLastLogoSwitch;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private SpriteRenderer _targetTexture;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Color _tempColor;

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xF5FC20", Offset = "0xF5FC20", VA = "0xF5FC20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xF5FC80", Offset = "0xF5FC80", VA = "0xF5FC80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xF5FD00", Offset = "0xF5FD00", VA = "0xF5FD00")]
	public void SwitchLogo()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xF60090", Offset = "0xF60090", VA = "0xF60090")]
	public void FadeOutLogo()
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xF5FCAC", Offset = "0xF5FCAC", VA = "0xF5FCAC")]
	public void OnUpdateScreenAlpha(float value)
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xF5FE50", Offset = "0xF5FE50", VA = "0xF5FE50")]
	private void RunTweenValueTo(string name, string onupdate, float from, float to, float time, float delay = -1f, [Optional] string oncomplete)
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xF601A4", Offset = "0xF601A4", VA = "0xF601A4")]
	public SplashScreenAnimation()
	{
	}
}
[Token(Token = "0x200028C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD2740", Offset = "0xBD2740")]
public class WandData : ScriptableObject
{
	[Token(Token = "0x2000688")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8768", Offset = "0xBD8768")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GestureData gesture;

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0xF79DB4", Offset = "0xF79DB4", VA = "0xF79DB4")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0xF79DC4", Offset = "0xF79DC4", VA = "0xF79DC4")]
		internal bool <AddGesture>b__0(GestureData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_handTag;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int m_numberOfCharges;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GestureData> m_gestureList;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE202C", Offset = "0xBE202C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE202C", Offset = "0xBE202C")]
	public int m_defaultNumberOfCharges;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GestureData> m_defaultGestureList;

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xF79C9C", Offset = "0xF79C9C", VA = "0xF79C9C")]
	public void AddGesture(GestureData gesture)
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xF79DBC", Offset = "0xF79DBC", VA = "0xF79DBC")]
	public WandData()
	{
	}
}
[Token(Token = "0x200028D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD27A0", Offset = "0xBD27A0")]
public class WandDataVariable : BaseVariable<WandData>
{
	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xF79E20", Offset = "0xF79E20", VA = "0xF79E20")]
	public WandDataVariable()
	{
	}
}
[Token(Token = "0x200028E")]
public class WandWasher : MonoBehaviour
{
	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<WandData> m_wandsDataToWash;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnPostWash;

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xF79E70", Offset = "0xF79E70", VA = "0xF79E70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xF79EA0", Offset = "0xF79EA0", VA = "0xF79EA0")]
	public void Wash()
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xF7A074", Offset = "0xF7A074", VA = "0xF7A074")]
	public WandWasher()
	{
	}
}
[Token(Token = "0x200028F")]
public class TestGen : MonoBehaviour
{
	[Token(Token = "0x2000689")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8778", Offset = "0xBD8778")]
	private sealed class <Generate>d__6 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TestGen <>4__this;

		[Token(Token = "0x17000399")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60025EA")]
			[Address(RVA = "0xF683D4", Offset = "0xF683D4", VA = "0xF683D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700039A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025EC")]
			[Address(RVA = "0xF6843C", Offset = "0xF6843C", VA = "0xF6843C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0xF67D68", Offset = "0xF67D68", VA = "0xF67D68")]
		[DebuggerHidden]
		public <Generate>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0xF6808C", Offset = "0xF6808C", VA = "0xF6808C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0xF68090", Offset = "0xF68090", VA = "0xF68090", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0xF683DC", Offset = "0xF683DC", VA = "0xF683DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject planet;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> planets;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask m_layerMask;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float radiusMultiplyer;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xF67C88", Offset = "0xF67C88", VA = "0xF67C88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xF67CE8", Offset = "0xF67CE8", VA = "0xF67CE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xF67CEC", Offset = "0xF67CEC", VA = "0xF67CEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA80C", Offset = "0xBEA80C")]
	private IEnumerator<float> Generate()
	{
		return null;
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xF67D94", Offset = "0xF67D94", VA = "0xF67D94")]
	private Vector3 GetRandomPointOf(List<Vector3> vertices)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xF67E44", Offset = "0xF67E44", VA = "0xF67E44")]
	private void CleanPlanets()
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xF67F74", Offset = "0xF67F74", VA = "0xF67F74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xF68008", Offset = "0xF68008", VA = "0xF68008")]
	public TestGen()
	{
	}
}
[Token(Token = "0x2000290")]
public class TimeScaler : MonoBehaviour
{
	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_isTweened;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timeScale;

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xF69EB0", Offset = "0xF69EB0", VA = "0xF69EB0")]
	public void SetTimeScale(float p_timeScale)
	{
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xF6A120", Offset = "0xF6A120", VA = "0xF6A120")]
	public void OnTimeScaleUpdate(float value)
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xF6A14C", Offset = "0xF6A14C", VA = "0xF6A14C")]
	public TimeScaler()
	{
	}
}
[Token(Token = "0x2000291")]
public class Transformer : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200068A")]
	public class PositionToggle
	{
		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Enabled;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE73E8", Offset = "0xBE73E8")]
		public bool m_useLabelTarget;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE7420", Offset = "0xBE7420")]
		public bool m_useLabelDestination;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE7458", Offset = "0xBE7458")]
		public GameObject m_target;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE7490", Offset = "0xBE7490")]
		public Label m_targetLabel;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE74C8", Offset = "0xBE74C8")]
		public GameObject m_destination;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE7500", Offset = "0xBE7500")]
		public Label m_destinationLabel;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE7538", Offset = "0xBE7538")]
		public bool m_useUpdate;

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0xF6C7E8", Offset = "0xF6C7E8", VA = "0xF6C7E8")]
		public PositionToggle()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200068B")]
	public class RotationToggle
	{
		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Enabled;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE7570", Offset = "0xBE7570")]
		public bool m_useLabelTarget;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE75A8", Offset = "0xBE75A8")]
		public GameObject m_target;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE75E0", Offset = "0xBE75E0")]
		public Label m_targetLabel;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE7618", Offset = "0xBE7618")]
		public bool m_setRotation;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE7650", Offset = "0xBE7650")]
		public bool m_addRotation;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 m_angle;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE7688", Offset = "0xBE7688")]
		public bool m_setFromGameObject;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE76C0", Offset = "0xBE76C0")]
		public GameObject m_destination;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE76F8", Offset = "0xBE76F8")]
		public bool m_useUpdate;

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0xF6C7F0", Offset = "0xF6C7F0", VA = "0xF6C7F0")]
		public RotationToggle()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200068C")]
	public class ScaleToggle
	{
		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Enabled;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE7730", Offset = "0xBE7730")]
		public bool m_useLabelTarget;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE7768", Offset = "0xBE7768")]
		public GameObject m_target;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE77A0", Offset = "0xBE77A0")]
		public Label m_targetLabel;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE77D8", Offset = "0xBE77D8")]
		public bool m_setScale;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE7810", Offset = "0xBE7810")]
		public bool m_addScale;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 m_scale;

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0xF6C7F8", Offset = "0xF6C7F8", VA = "0xF6C7F8")]
		public ScaleToggle()
		{
		}
	}

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_launchOnEnable;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PositionToggle m_position;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RotationToggle m_rotation;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ScaleToggle m_scale;

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xF6BE98", Offset = "0xF6BE98", VA = "0xF6BE98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xF6C534", Offset = "0xF6C534", VA = "0xF6C534")]
	public void Update()
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xF6BF20", Offset = "0xF6BF20", VA = "0xF6BF20")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xF6C59C", Offset = "0xF6C59C", VA = "0xF6C59C")]
	public void DoTeleport(int instanceId)
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xF6C0E4", Offset = "0xF6C0E4", VA = "0xF6C0E4")]
	public void DoRotation()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xF6C334", Offset = "0xF6C334", VA = "0xF6C334")]
	public void DoScale()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xF6C71C", Offset = "0xF6C71C", VA = "0xF6C71C")]
	public Transformer()
	{
	}
}
[Token(Token = "0x2000292")]
public class TransitionManager : CacheBehaviour
{
	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE207C", Offset = "0xBE207C")]
	public FloatVariable m_InTunnel;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public FloatVariable m_OutTunnel;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE20B4", Offset = "0xBE20B4")]
	public GameObject m_transitionObject;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE20EC", Offset = "0xBE20EC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE20EC", Offset = "0xBE20EC")]
	public float m_transitionTime;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE213C", Offset = "0xBE213C")]
	public float m_tweenTime;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE2174", Offset = "0xBE2174")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE2174", Offset = "0xBE2174")]
	public UnityEvent OnLevelStarted;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public IntUnityEvent OnLoadLevel;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public UnityEvent OnTransitionIn;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public UnityEvent OnTransitionOut;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE21C4", Offset = "0xBE21C4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE21C4", Offset = "0xBE21C4")]
	public UnityEvent OnGoingToShop;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public UnityEvent OnGoingToAnyTypeOfLevelExceptShop;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool _tweenStart;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float _transitionTime;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int planetPicked;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private bool _levelGenerated;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
	private bool _transitionEnded;

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xF6C800", Offset = "0xF6C800", VA = "0xF6C800")]
	public void Start()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xF6C80C", Offset = "0xF6C80C", VA = "0xF6C80C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xF6CAE8", Offset = "0xF6CAE8", VA = "0xF6CAE8")]
	public void OnLevelGenerated()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xF6CBB8", Offset = "0xF6CBB8", VA = "0xF6CBB8")]
	public void TransitionIn(int instanceID)
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xF6CE18", Offset = "0xF6CE18", VA = "0xF6CE18")]
	public void TransitionInTween(float value)
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xF6CE90", Offset = "0xF6CE90", VA = "0xF6CE90")]
	public void TransitionOutTween(float value)
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xF6CF08", Offset = "0xF6CF08", VA = "0xF6CF08")]
	public void TransitionInTweenComplete()
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xF6CF6C", Offset = "0xF6CF6C", VA = "0xF6CF6C")]
	public void TransitionOutTweenComplete()
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xF6C8CC", Offset = "0xF6C8CC", VA = "0xF6C8CC")]
	public void TransitionOut()
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xF6D038", Offset = "0xF6D038", VA = "0xF6D038")]
	public TransitionManager()
	{
	}
}
[Token(Token = "0x2000293")]
public class Tweener : MonoBehaviour
{
	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_targetIsAnotherObject;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_target;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_setOrigin;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Label m_originLabel;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Label m_destinationLabel;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_tweenTime;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public iTween.EaseType m_easeType;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent m_onTweenOver;

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xF6D964", Offset = "0xF6D964", VA = "0xF6D964")]
	public void DoTween()
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xF6DB34", Offset = "0xF6DB34", VA = "0xF6DB34")]
	private void OnTweenComplete()
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xF6DB50", Offset = "0xF6DB50", VA = "0xF6DB50")]
	public Tweener()
	{
	}
}
[Token(Token = "0x2000294")]
public class OnAnimationFinished : CacheBehaviour
{
	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Animator m_animator;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string m_animationName;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool m_launchAtStart;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE2214", Offset = "0xBE2214")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE2214", Offset = "0xBE2214")]
	public UnityEvent OnAnimationFinishedEvent;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private AnimationClip _animClip;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float _length;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool _started;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float _reverseTimer;

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x10D5594", Offset = "0x10D5594", VA = "0x10D5594")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x10D5CA0", Offset = "0x10D5CA0", VA = "0x10D5CA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x10D5AE4", Offset = "0x10D5AE4", VA = "0x10D5AE4")]
	public void LaunchTimer()
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x10D5CFC", Offset = "0x10D5CFC", VA = "0x10D5CFC")]
	public void AnimationFinished()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x10D5D84", Offset = "0x10D5D84", VA = "0x10D5D84")]
	public OnAnimationFinished()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x10D5D8C", Offset = "0x10D5D8C", VA = "0x10D5D8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEA870", Offset = "0xBEA870")]
	private bool <Start>b__4_0(AnimationClip x)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000295")]
public class OnFinishState : StateMachineBehaviour
{
	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntUnityEvent OnStateFinished;

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x10D5DD4", Offset = "0x10D5DD4", VA = "0x10D5DD4", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x10D5E5C", Offset = "0x10D5E5C", VA = "0x10D5E5C")]
	public OnFinishState()
	{
	}
}
[Token(Token = "0x2000296")]
public class OnStateOverrideBehaviour : StateMachineBehaviour
{
	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnStateFinished;

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x10D6074", Offset = "0x10D6074", VA = "0x10D6074", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x10D6090", Offset = "0x10D6090", VA = "0x10D6090")]
	public OnStateOverrideBehaviour()
	{
	}
}
[Token(Token = "0x2000297")]
public class AudioDelayedHolder : MonoBehaviour
{
	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameAudioManager gameAudioManager;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AkInitializer wwiseGlobal;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AkAudioListener audioListener;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2264", Offset = "0xBE2264")]
	public int framesToWait;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int currentFrames;

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xECCE44", Offset = "0xECCE44", VA = "0xECCE44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xECCE4C", Offset = "0xECCE4C", VA = "0xECCE4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xECCEE4", Offset = "0xECCEE4", VA = "0xECCEE4")]
	public AudioDelayedHolder()
	{
	}
}
[Token(Token = "0x2000298")]
public class AudioEventTrigger : MonoBehaviour
{
	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_audioSource;

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xECCEEC", Offset = "0xECCEEC", VA = "0xECCEEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xECCEF0", Offset = "0xECCEF0", VA = "0xECCEF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xECCEF4", Offset = "0xECCEF4", VA = "0xECCEF4", Slot = "4")]
	public virtual void LaunchAkEvent(string eventName)
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xECCF70", Offset = "0xECCF70", VA = "0xECCF70", Slot = "5")]
	public virtual void LaunchAkEvent(Event akEvent)
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xECCFB8", Offset = "0xECCFB8", VA = "0xECCFB8")]
	public AudioEventTrigger()
	{
	}
}
[Token(Token = "0x2000299")]
public class AudioUIHolder : MonoBehaviour
{
	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Event onUIHover;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Event onUIClick;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Event onUICancel;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Event onUIValidate;

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xECD4E8", Offset = "0xECD4E8", VA = "0xECD4E8")]
	public AudioUIHolder()
	{
	}
}
[Token(Token = "0x200029A")]
public class BarksSpatializer : MonoBehaviour
{
	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE229C", Offset = "0xBE229C")]
	public Vector3[] m_podsPositions;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _playNextBark;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _currentPodPosition;

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xECEAF4", Offset = "0xECEAF4", VA = "0xECEAF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xECEB60", Offset = "0xECEB60", VA = "0xECEB60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xECEB64", Offset = "0xECEB64", VA = "0xECEB64")]
	public BarksSpatializer()
	{
	}
}
[Token(Token = "0x200029B")]
public class ConditionalAudioEventTrigger : AudioEventTrigger
{
	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BoolVariable m_condition;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_requiredState;

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xEDADD8", Offset = "0xEDADD8", VA = "0xEDADD8", Slot = "5")]
	public override void LaunchAkEvent(Event akEvent)
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xEDAE3C", Offset = "0xEDAE3C", VA = "0xEDAE3C", Slot = "4")]
	public override void LaunchAkEvent(string eventName)
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xEDAEA0", Offset = "0xEDAEA0", VA = "0xEDAEA0")]
	public ConditionalAudioEventTrigger()
	{
	}
}
[Token(Token = "0x200029C")]
public class GameAudioManager : MonoBehaviour
{
	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE22D4", Offset = "0xBE22D4")]
	[SerializeField]
	private float _OverrideNatureRestorationLevel;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE2314", Offset = "0xBE2314")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE2314", Offset = "0xBE2314")]
	[SerializeField]
	private float _editorMainVolume;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE2378", Offset = "0xBE2378")]
	[SerializeField]
	private float _editorSFXVolume;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE23B8", Offset = "0xBE23B8")]
	[SerializeField]
	private float _editorAMBVolume;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE23F8", Offset = "0xBE23F8")]
	[SerializeField]
	private float _editorMusicVolume;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MusicManager m_musicManager;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public IntVariable _currentEnemyCount;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public IntVariable _currentBatchIndex;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntVariable _numberOfBatches;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _currentNatureRestorationLevel;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _currentMainVolume;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _currentSFXVolume;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _currentMusicVolume;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _currentAmbientVolume;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameAudioManager Instance;

	[Token(Token = "0x17000099")]
	public float m_mainVolume
	{
		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0xF1E344", Offset = "0xF1E344", VA = "0xF1E344")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xF1E004", Offset = "0xF1E004", VA = "0xF1E004")]
		set
		{
		}
	}

	[Token(Token = "0x1700009A")]
	public float m_SFXVolume
	{
		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0xF1E34C", Offset = "0xF1E34C", VA = "0xF1E34C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0xF1E0D4", Offset = "0xF1E0D4", VA = "0xF1E0D4")]
		set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public float m_AMBVolume
	{
		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0xF1E354", Offset = "0xF1E354", VA = "0xF1E354")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0xF1E274", Offset = "0xF1E274", VA = "0xF1E274")]
		set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public float m_musicVolume
	{
		[Token(Token = "0x6000E10")]
		[Address(RVA = "0xF1E35C", Offset = "0xF1E35C", VA = "0xF1E35C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0xF1E1A4", Offset = "0xF1E1A4", VA = "0xF1E1A4")]
		set
		{
		}
	}

	[Token(Token = "0x1700009D")]
	public float m_natureRestorationLevel
	{
		[Token(Token = "0x6000E12")]
		[Address(RVA = "0xF1E378", Offset = "0xF1E378", VA = "0xF1E378")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000E11")]
		[Address(RVA = "0xF1E364", Offset = "0xF1E364", VA = "0xF1E364")]
		set
		{
		}
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xF1DED8", Offset = "0xF1DED8", VA = "0xF1DED8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0xF1E380", Offset = "0xF1E380", VA = "0xF1E380")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0xF1E4E4", Offset = "0xF1E4E4", VA = "0xF1E4E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0xF1E694", Offset = "0xF1E694", VA = "0xF1E694")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0xF1DF38", Offset = "0xF1DF38", VA = "0xF1DF38")]
	public void ChangeAudioNatureRestorationLevel(float restorationLevel)
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0xF1E698", Offset = "0xF1E698", VA = "0xF1E698")]
	public void SetAmbienceState(string ambienceState)
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0xF1E70C", Offset = "0xF1E70C", VA = "0xF1E70C")]
	public void SetAmbienceRTPCValue(float ambienceRTPC)
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0xF1E574", Offset = "0xF1E574", VA = "0xF1E574")]
	public void LoadSolarSystem(int solarSystemId)
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0xF1E788", Offset = "0xF1E788", VA = "0xF1E788")]
	public void UnloadSolarSystem(int solarSystemId)
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0xF1E838", Offset = "0xF1E838", VA = "0xF1E838")]
	public void CheckIfAllEnemiesDead()
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0xF1E94C", Offset = "0xF1E94C", VA = "0xF1E94C")]
	public GameAudioManager()
	{
	}
}
[Token(Token = "0x200029D")]
public class HandAudioEventTrigger : AudioEventTrigger
{
	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Event m_gestureAbortedAkEvent;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Event m_gestureFinishedAkEvent;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int m_gestureMaxSteps;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _currentGestureSegmentCount;

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0xF224E0", Offset = "0xF224E0", VA = "0xF224E0")]
	public void LaunchGestureAbortedAkEvent(GameObject audioSource)
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0xF22578", Offset = "0xF22578", VA = "0xF22578")]
	public void LaunchGestureFinishedAkEvent(GameObject audioSource)
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0xF22610", Offset = "0xF22610", VA = "0xF22610")]
	public void ResetGestureAudioSegmentCount(int newGestureMaxSteps = 1)
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0xF226B8", Offset = "0xF226B8", VA = "0xF226B8")]
	public void IncreaseGestureAudioSegmentCount()
	{
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0xF22770", Offset = "0xF22770", VA = "0xF22770")]
	public HandAudioEventTrigger()
	{
	}
}
[Token(Token = "0x200029E")]
public class MusicManager : MonoBehaviour
{
	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_playMusicOnStart;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_musicBeatSyncFloat;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_musicBarSyncFloat;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_musicCurrentBeatInt;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_musicBeatsInBarInt;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_musicVolumeFloat;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isMusicPlaying;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _timeInCurrentBeat;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _timeInCurrentBar;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _currentBeatLength;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _currentBarLength;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _currentMusicBusVolume;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _rtpcValueType;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AnimationCurve _beatFloatInterpolationCurve;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AnimationCurve _barFloatInterpolationCurve;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AnimationCurve _musicVolumeFloatInterpolationCurve;

	[Token(Token = "0x400114B")]
	private const uint _callbackFlags = 768u;

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x154C324", Offset = "0x154C324", VA = "0x154C324")]
	public void StartMusicWithCallbacks()
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x154C484", Offset = "0x154C484", VA = "0x154C484")]
	public void StopMusic()
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x154C410", Offset = "0x154C410", VA = "0x154C410")]
	public void SetMusicState(string musicState)
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x154C514", Offset = "0x154C514", VA = "0x154C514")]
	public void SetWinState(string winState)
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x154C588", Offset = "0x154C588", VA = "0x154C588")]
	public void SetCradleState(string cradleState)
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x154C5FC", Offset = "0x154C5FC", VA = "0x154C5FC")]
	private void MusicMarkerCallback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x154C70C", Offset = "0x154C70C", VA = "0x154C70C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x154C71C", Offset = "0x154C71C", VA = "0x154C71C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x154C8AC", Offset = "0x154C8AC", VA = "0x154C8AC")]
	public MusicManager()
	{
	}
}
[Token(Token = "0x200029F")]
public class SendSpeedToWwise : MonoBehaviour
{
	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RTPC m_WwiseParameter;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _previousPosition;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _speed;

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xE4CFC8", Offset = "0xE4CFC8", VA = "0xE4CFC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xE4D004", Offset = "0xE4D004", VA = "0xE4D004")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xE4D160", Offset = "0xE4D160", VA = "0xE4D160")]
	public SendSpeedToWwise()
	{
	}
}
[Token(Token = "0x20002A0")]
public class SendValueToWwise : MonoBehaviour
{
	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _sendEveryFrame;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_activateUpdateSendOnStart;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FloatVariable m_valueToSend;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_receiverObject;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RTPC m_rtpcValue;

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xE4D168", Offset = "0xE4D168", VA = "0xE4D168")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xE4D17C", Offset = "0xE4D17C", VA = "0xE4D17C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xE4D280", Offset = "0xE4D280", VA = "0xE4D280")]
	public void SendValueEveryFrame(bool active)
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xE4D28C", Offset = "0xE4D28C", VA = "0xE4D28C")]
	public void SendCurrentValue()
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xE4D388", Offset = "0xE4D388", VA = "0xE4D388")]
	public SendValueToWwise()
	{
	}
}
[Token(Token = "0x20002A1")]
public class TestMusicSwitcher : MonoBehaviour
{
	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _currentTrack;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string[] _trackNames;

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xF684A0", Offset = "0xF684A0", VA = "0xF684A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xF68528", Offset = "0xF68528", VA = "0xF68528")]
	public void NextSong()
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xF68684", Offset = "0xF68684", VA = "0xF68684")]
	public void PreviousSong()
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0xF687E0", Offset = "0xF687E0", VA = "0xF687E0")]
	public TestMusicSwitcher()
	{
	}
}
[Token(Token = "0x20002A2")]
public class BooleanActionIkimasho : BooleanAction
{
	[Token(Token = "0x6000E38")]
	[Address(RVA = "0xED1818", Offset = "0xED1818", VA = "0xED1818")]
	public void OnBooleanChange(bool value)
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0xED1828", Offset = "0xED1828", VA = "0xED1828")]
	public BooleanActionIkimasho()
	{
	}
}
[Token(Token = "0x20002A3")]
public static class Float3Extension
{
	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xF1D508", Offset = "0xF1D508", VA = "0xF1D508")]
	public static Vector3 ToVector3(this float3 float3ToConvert)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20002A4")]
public static class FloatExtention
{
	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0xF1D50C", Offset = "0xF1D50C", VA = "0xF1D50C")]
	public static bool Between(this float toCompare, float min, float max)
	{
		return default(bool);
	}
}
[Token(Token = "0x20002A5")]
public static class GameObjectExtension
{
	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0xF1F53C", Offset = "0xF1F53C", VA = "0xF1F53C")]
	public static void Destroy(this GameObject go)
	{
	}
}
[Token(Token = "0x20002A6")]
public static class Vector3Extensions
{
	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xF78F8C", Offset = "0xF78F8C", VA = "0xF78F8C")]
	public static Vector3 GetDirection(this Vector3 from, Vector3 to)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xF790A8", Offset = "0xF790A8", VA = "0xF790A8")]
	public static float3 ToFloat3(this Vector3 vector)
	{
		return default(float3);
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xF790AC", Offset = "0xF790AC", VA = "0xF790AC")]
	public static Vector3 RotateAroundPivot(this Vector3 point, Vector3 pivot, Vector3 angle)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20002A7")]
public class BoolChecker : CacheBehaviour
{
	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool m_startValue;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public UnityEvent OnTrue;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UnityEvent OnFalse;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool _boolToCheck;

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0xED15D4", Offset = "0xED15D4", VA = "0xED15D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0xED15E0", Offset = "0xED15E0", VA = "0xED15E0")]
	public void SetBoolVariable(bool value)
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xED1670", Offset = "0xED1670", VA = "0xED1670")]
	public void Check()
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0xED1708", Offset = "0xED1708", VA = "0xED1708")]
	public BoolChecker()
	{
	}
}
[Token(Token = "0x20002A8")]
public class BoolVariableChecker : MonoBehaviour
{
	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoolVariable m_variableToCheck;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnIsTrue;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnIsFalse;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_launchOnEnable;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool m_shortcutTrue;

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0xED1710", Offset = "0xED1710", VA = "0xED1710")]
	public void Check()
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0xED1800", Offset = "0xED1800", VA = "0xED1800")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0xED1810", Offset = "0xED1810", VA = "0xED1810")]
	public BoolVariableChecker()
	{
	}
}
[Token(Token = "0x20002A9")]
public class GestureVariableComparer : CacheBehaviour
{
	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GestureVariable m_variableA;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GestureVariable m_variableB;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UnityEvent OnCompareTrue;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UnityEvent OnCompareFalse;

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0xF1FD20", Offset = "0xF1FD20", VA = "0xF1FD20")]
	public void CompareDefaultWithValue()
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0xF1FE70", Offset = "0xF1FE70", VA = "0xF1FE70")]
	public void CompareValueNull()
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0xF1FFBC", Offset = "0xF1FFBC", VA = "0xF1FFBC")]
	public void CompareVariables()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0xF20274", Offset = "0xF20274", VA = "0xF20274")]
	public GestureVariableComparer()
	{
	}
}
[Token(Token = "0x20002AA")]
public class DisableOnReleaseBuild : MonoBehaviour
{
	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0xF14358", Offset = "0xF14358", VA = "0xF14358")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0xF143EC", Offset = "0xF143EC", VA = "0xF143EC")]
	public DisableOnReleaseBuild()
	{
	}
}
[Token(Token = "0x20002AB")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD284C", Offset = "0xBD284C")]
public class SpreadsheetCredentialData : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200068D")]
	public struct GETParameterData
	{
		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_name;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string m_value;
	}

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_nameForExport;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2478", Offset = "0xBE2478")]
	public string m_serviceUrl;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GETParameterData[] m_GETparameters;

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0xF60A58", Offset = "0xF60A58", VA = "0xF60A58")]
	public string GetConstructedUrl()
	{
		return null;
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0xF60B4C", Offset = "0xF60B4C", VA = "0xF60B4C")]
	public SpreadsheetCredentialData()
	{
	}
}
[Token(Token = "0x20002AC")]
public class GameObjectHolder : MonoBehaviour
{
	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_gameObject;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> m_gameObjects;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform m_parent;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_notReady;

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0xF1F5A8", Offset = "0xF1F5A8", VA = "0xF1F5A8")]
	public void SetGameObject(GameObject value)
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0xF1F5B0", Offset = "0xF1F5B0", VA = "0xF1F5B0")]
	public GameObjectHolder()
	{
	}
}
[Token(Token = "0x20002AD")]
public class BoneInjector : MonoBehaviour
{
	[Token(Token = "0x6000E51")]
	[Address(RVA = "0xED15CC", Offset = "0xED15CC", VA = "0xED15CC")]
	public BoneInjector()
	{
	}
}
[Token(Token = "0x20002AE")]
public class DebugWaveText : CacheBehaviour
{
	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public WaveDataVariable m_waveData;

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0xF08E1C", Offset = "0xF08E1C", VA = "0xF08E1C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0xF08FDC", Offset = "0xF08FDC", VA = "0xF08FDC")]
	public DebugWaveText()
	{
	}
}
[Token(Token = "0x20002AF")]
public class LIVDebugTools : MonoBehaviour
{
	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_worldOrigin;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_lefthHand;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform m_rightHand;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_leftWand;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform m_rightWand;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_head;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE24B0", Offset = "0xBE24B0")]
	public float m_worldOriginIncrement;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector2 m_boxSize;

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0xF9BD0C", Offset = "0xF9BD0C", VA = "0xF9BD0C")]
	public LIVDebugTools()
	{
	}
}
[Token(Token = "0x20002B0")]
public class ImageFillAmountInjector : CacheBehaviour
{
	[Serializable]
	[Token(Token = "0x200068E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8788", Offset = "0xBD8788")]
	private sealed class <>c
	{
		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__9_0;

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0xF2F004", Offset = "0xF2F004", VA = "0xF2F004")]
		public <>c()
		{
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0xF2F00C", Offset = "0xF2F00C", VA = "0xF2F00C")]
		internal bool <OnRegisterCrystal>b__9_0(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public FloatVariable m_floatToInject;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AnimationCurve m_acceleration;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool m_useSpriteRenderer;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UnityEvent OnFillComplete;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string m_cooldownTag;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Image _target;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public SpriteRenderer _targetSprite;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool _fillInProgress;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool _noRenderer;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float _normalizedTimer;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float _val;

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0xF2E53C", Offset = "0xF2E53C", VA = "0xF2E53C")]
	public void AnimateFill()
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0xF2E7C4", Offset = "0xF2E7C4", VA = "0xF2E7C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0xF2E898", Offset = "0xF2E898", VA = "0xF2E898")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0xF2E89C", Offset = "0xF2E89C", VA = "0xF2E89C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0xF2ED04", Offset = "0xF2ED04", VA = "0xF2ED04")]
	public void OnRegisterCrystal(GameObject crystal)
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xF2EF94", Offset = "0xF2EF94", VA = "0xF2EF94")]
	public ImageFillAmountInjector()
	{
	}
}
[Token(Token = "0x20002B1")]
public class ExpandableAttribute : PropertyAttribute
{
	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xF1AD24", Offset = "0xF1AD24", VA = "0xF1AD24")]
	public ExpandableAttribute()
	{
	}
}
[Serializable]
[Token(Token = "0x20002B2")]
public struct BetterEvent
{
	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<BetterEventEntry> Events;

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xCE29E0", Offset = "0xCE29E0", VA = "0xCE29E0")]
	public void Invoke()
	{
	}
}
[Serializable]
[Token(Token = "0x20002B3")]
public class BetterEventEntry : ISerializationCallbackReceiver
{
	[Token(Token = "0x200068F")]
	private struct OdinSerializedData
	{
		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Delegate Delegate;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public object[] ParameterValues;
	}

	[NonSerialized]
	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public Delegate Delegate;

	[NonSerialized]
	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public object[] ParameterValues;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private List<UnityEngine.Object> unityReferences;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private byte[] bytes;

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xECEC5C", Offset = "0xECEC5C", VA = "0xECEC5C")]
	public BetterEventEntry(Delegate del)
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0xECEC00", Offset = "0xECEC00", VA = "0xECEC00")]
	public void Invoke()
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0xECED40", Offset = "0xECED40", VA = "0xECED40", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0xECEDC0", Offset = "0xECEDC0", VA = "0xECEDC0", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}
}
[Token(Token = "0x20002B4")]
public class ExampleMonoBehaviour : MonoBehaviour
{
	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BetterEvent MyEvent;

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0xF1ACDC", Offset = "0xF1ACDC", VA = "0xF1ACDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0xF1AD1C", Offset = "0xF1AD1C", VA = "0xF1AD1C")]
	public ExampleMonoBehaviour()
	{
	}
}
[Token(Token = "0x20002B5")]
public class TagSelectorAttribute : PropertyAttribute
{
	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool UseDefaultTagFieldDrawer;

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0xF61A60", Offset = "0xF61A60", VA = "0xF61A60")]
	public TagSelectorAttribute()
	{
	}
}
[Token(Token = "0x20002B6")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xBD28AC", Offset = "0xBD28AC")]
public class MultiLine : Attribute
{
	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x154C148", Offset = "0x154C148", VA = "0x154C148")]
	public MultiLine()
	{
	}
}
[Token(Token = "0x20002B7")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD28C0", Offset = "0xBD28C0")]
public class CinemachinePathVariable : BaseVariable<CinemachinePath>
{
	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_curveSegmentsNb;

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0xEDA370", Offset = "0xEDA370", VA = "0xEDA370")]
	public CinemachinePathVariable()
	{
	}
}
[Token(Token = "0x20002B8")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD292C", Offset = "0xBD292C")]
public class ContactPointVariable : BaseVariable<ContactPoint>
{
	[Token(Token = "0x6000E66")]
	[Address(RVA = "0xEDAEA8", Offset = "0xEDAEA8", VA = "0xEDAEA8")]
	public ContactPointVariable()
	{
	}
}
[Token(Token = "0x20002B9")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD2998", Offset = "0xBD2998")]
public class GalaxyDataVariable : BaseVariable<GalaxyData>
{
	[Token(Token = "0x6000E67")]
	[Address(RVA = "0xF1DE88", Offset = "0xF1DE88", VA = "0xF1DE88")]
	public GalaxyDataVariable()
	{
	}
}
[Token(Token = "0x20002BA")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD2A04", Offset = "0xBD2A04")]
public class RaycastHitVariable : BaseVariable<RaycastHit>
{
	[Token(Token = "0x6000E68")]
	[Address(RVA = "0xE3BC5C", Offset = "0xE3BC5C", VA = "0xE3BC5C")]
	public RaycastHitVariable()
	{
	}
}
[Token(Token = "0x20002BB")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD2A70", Offset = "0xBD2A70")]
public class SolarSystemVariable : BaseVariable<SolarSystemData>
{
	[Token(Token = "0x6000E69")]
	[Address(RVA = "0xF583F0", Offset = "0xF583F0", VA = "0xF583F0")]
	public SolarSystemVariable()
	{
	}
}
[Token(Token = "0x20002BC")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD2ADC", Offset = "0xBD2ADC")]
public class SpellDataVariable : BaseVariable<SpellData>
{
	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0xF5C09C", Offset = "0xF5C09C", VA = "0xF5C09C")]
	public SpellDataVariable()
	{
	}
}
[Token(Token = "0x20002BD")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD2B48", Offset = "0xBD2B48")]
public class SpreadsheetDataCollection : Collection<SpreadSheetData>
{
	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0xF60B54", Offset = "0xF60B54", VA = "0xF60B54")]
	public SpreadsheetDataCollection()
	{
	}
}
[Token(Token = "0x20002BE")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD2BB4", Offset = "0xBD2BB4")]
public class TrailRendererVariable : BaseVariable<TrailRenderer>
{
	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0xF6BCC8", Offset = "0xF6BCC8", VA = "0xF6BCC8")]
	public TrailRendererVariable()
	{
	}
}
[Token(Token = "0x20002BF")]
public class SwapIntVariables : MonoBehaviour
{
	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntVariable m_intVarA;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IntVariable m_intVarB;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntVariable _tempVar;

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0xF61384", Offset = "0xF61384", VA = "0xF61384")]
	public void SwapVariables(bool swapDefaultToo = false)
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xF6165C", Offset = "0xF6165C", VA = "0xF6165C")]
	public SwapIntVariables()
	{
	}
}
[Token(Token = "0x20002C0")]
public class SwapWandDataVariables : MonoBehaviour
{
	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WandDataVariable m_wandVarLeft;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WandDataVariable m_wandVarRight;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WandData m_leftWandData;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WandData m_rightWandData;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WandDataVariable _tempVar;

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0xF61664", Offset = "0xF61664", VA = "0xF61664")]
	public void SwapVariablesWithIndex(int index)
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xF616E8", Offset = "0xF616E8", VA = "0xF616E8")]
	public void SwapVariables(bool swapDefaultToo = false)
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xF619C0", Offset = "0xF619C0", VA = "0xF619C0")]
	public SwapWandDataVariables()
	{
	}
}
[Token(Token = "0x20002C1")]
public static class TransformEx
{
	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xF6BD18", Offset = "0xF6BD18", VA = "0xF6BD18")]
	public static Transform FirstChildOrDefault(this Transform parent, Func<Transform, bool> query)
	{
		return null;
	}
}
[Token(Token = "0x20002C2")]
public class UnityAplicationQuit : MonoBehaviour
{
	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnApplicationQuitted;

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xF77778", Offset = "0xF77778", VA = "0xF77778")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xF77794", Offset = "0xF77794", VA = "0xF77794")]
	public UnityAplicationQuit()
	{
	}
}
[Token(Token = "0x20002C3")]
public class FFRSetter : MonoBehaviour
{
	[Token(Token = "0x6000E75")]
	[Address(RVA = "0xF1B0D4", Offset = "0xF1B0D4", VA = "0xF1B0D4")]
	public FFRSetter()
	{
	}
}
[Token(Token = "0x20002C4")]
public class FFRSetterProfileData : ScriptableObject
{
	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPlugin.FixedFoveatedRenderingLevel m_FFRLevel;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_resolutionScale;

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xF1B0DC", Offset = "0xF1B0DC", VA = "0xF1B0DC")]
	public FFRSetterProfileData()
	{
	}
}
[Token(Token = "0x20002C5")]
public class VersionNumberInjector : MonoBehaviour
{
	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StringVariable m_target;

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xF79460", Offset = "0xF79460", VA = "0xF79460")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xF794A0", Offset = "0xF794A0", VA = "0xF794A0")]
	public VersionNumberInjector()
	{
	}
}
[Serializable]
[Token(Token = "0x20002C6")]
public class ActorListWrapper
{
	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Expandable]
	public List<ActorSpawnedData> m_list;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isShield;

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x1410744", Offset = "0x1410744", VA = "0x1410744")]
	public ActorListWrapper()
	{
	}
}
[Serializable]
[Token(Token = "0x20002C7")]
public class PatternListWrapper
{
	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Expandable]
	public List<PatternData> m_patternList;

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xEE1014", Offset = "0xEE1014", VA = "0xEE1014")]
	public PatternListWrapper()
	{
	}
}
[Serializable]
[Token(Token = "0x20002C8")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD2C30", Offset = "0xBD2C30")]
public class PerkListWrapper : ScriptableObject
{
	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Expandable]
	public List<PerkData> m_perkList;

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xEE1730", Offset = "0xEE1730", VA = "0xEE1730")]
	public PerkListWrapper()
	{
	}
}
[Token(Token = "0x20002C9")]
public class Teleport : MonoBehaviour
{
	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_useLabel;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_target;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_destination;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Label m_destinationLabel;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_launchOnEnable;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool m_useUpdate;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObjectCollection m_planets;

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xF625A0", Offset = "0xF625A0", VA = "0xF625A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xF62760", Offset = "0xF62760", VA = "0xF62760")]
	public void Update()
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xF62770", Offset = "0xF62770", VA = "0xF62770")]
	public void SetDestination(Label label)
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xF6262C", Offset = "0xF6262C", VA = "0xF6262C")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xF62810", Offset = "0xF62810", VA = "0xF62810")]
	public void DoTeleport(int instanceId)
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xF62A2C", Offset = "0xF62A2C", VA = "0xF62A2C")]
	public Teleport()
	{
	}
}
[Token(Token = "0x20002CA")]
public class XPManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000690")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8798", Offset = "0xBD8798")]
	private sealed class <>c
	{
		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__37_0;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Transform, bool> <>9__37_1;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<Transform, bool> <>9__44_2;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<Transform, bool> <>9__44_3;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Func<Transform, bool> <>9__44_4;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Func<Transform, bool> <>9__44_5;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Func<Transform, bool> <>9__44_0;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Func<Transform, bool> <>9__44_1;

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0xF7D5EC", Offset = "0xF7D5EC", VA = "0xF7D5EC")]
		public <>c()
		{
		}

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0xF7D5F4", Offset = "0xF7D5F4", VA = "0xF7D5F4")]
		internal bool <RestoreState>b__37_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x60025F6")]
		[Address(RVA = "0xF7D658", Offset = "0xF7D658", VA = "0xF7D658")]
		internal bool <RestoreState>b__37_1(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0xF7D6BC", Offset = "0xF7D6BC", VA = "0xF7D6BC")]
		internal bool <LevelUpRoutine>b__44_2(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0xF7D720", Offset = "0xF7D720", VA = "0xF7D720")]
		internal bool <LevelUpRoutine>b__44_3(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0xF7D784", Offset = "0xF7D784", VA = "0xF7D784")]
		internal bool <LevelUpRoutine>b__44_4(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0xF7D7E8", Offset = "0xF7D7E8", VA = "0xF7D7E8")]
		internal bool <LevelUpRoutine>b__44_5(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0xF7D84C", Offset = "0xF7D84C", VA = "0xF7D84C")]
		internal bool <LevelUpRoutine>b__44_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0xF7D8B0", Offset = "0xF7D8B0", VA = "0xF7D8B0")]
		internal bool <LevelUpRoutine>b__44_1(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000691")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD87A8", Offset = "0xBD87A8")]
	private sealed class <LevelUp>d__41 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XPManager <>4__this;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float xpGain;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <newScale>5__2;

		[Token(Token = "0x1700039B")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002600")]
			[Address(RVA = "0xF7DF20", Offset = "0xF7DF20", VA = "0xF7DF20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700039C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002602")]
			[Address(RVA = "0xF7DF88", Offset = "0xF7DF88", VA = "0xF7DF88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0xF7CBC4", Offset = "0xF7CBC4", VA = "0xF7CBC4")]
		[DebuggerHidden]
		public <LevelUp>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0xF7D914", Offset = "0xF7D914", VA = "0xF7D914", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0xF7D918", Offset = "0xF7D918", VA = "0xF7D918", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0xF7DF28", Offset = "0xF7DF28", VA = "0xF7DF28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000692")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD87B8", Offset = "0xBD87B8")]
	private sealed class <LevelUpRoutine>d__44 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XPManager <>4__this;

		[Token(Token = "0x1700039D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002606")]
			[Address(RVA = "0x24418D0", Offset = "0x24418D0", VA = "0x24418D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700039E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002608")]
			[Address(RVA = "0x2441938", Offset = "0x2441938", VA = "0x2441938", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002603")]
		[Address(RVA = "0x2440990", Offset = "0x2440990", VA = "0x2440990")]
		[DebuggerHidden]
		public <LevelUpRoutine>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0x24409BC", Offset = "0x24409BC", VA = "0x24409BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0x24409C0", Offset = "0x24409C0", VA = "0x24409C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0x24418D8", Offset = "0x24418D8", VA = "0x24418D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000693")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD87C8", Offset = "0xBD87C8")]
	private sealed class <OnWaitMoneyLegacyScreen>d__46 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XPManager <>4__this;

		[Token(Token = "0x1700039F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600260C")]
			[Address(RVA = "0x2441ABC", Offset = "0x2441ABC", VA = "0x2441ABC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600260E")]
			[Address(RVA = "0x2441B24", Offset = "0x2441B24", VA = "0x2441B24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0x244199C", Offset = "0x244199C", VA = "0x244199C")]
		[DebuggerHidden]
		public <OnWaitMoneyLegacyScreen>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0x24419C8", Offset = "0x24419C8", VA = "0x24419C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0x24419CC", Offset = "0x24419CC", VA = "0x24419CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0x2441AC4", Offset = "0x2441AC4", VA = "0x2441AC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE2584", Offset = "0xBE2584")]
	public List<int> m_xpThreshold;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IntVariable m_starShamanLevelInterRun;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntVariable m_starShamanLevel;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntVariable m_perkPageNumber;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public IntVariable m_perkPanelNumber;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public IntVariable m_xpInterRun;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntVariable m_xpCurrent;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public IntVariable m_xpNeeded;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public IntVariable m_xpRemaining;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public IntVariable m_score;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public IntVariable m_shopTier;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public FloatVariable m_progressBarScaleX;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BoolVariable m_isInLevelUp;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<float> m_statsScorePercentages;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<TextMeshProLocalisationInjector> m_statsScoreTextMeshLocalizationInjectors;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<TextMeshPro> m_statsScoreTextMesh;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<StringVariable> m_statsScoreStringVariable;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshPro m_totalScore;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshPro m_ratioScore;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMeshPro m_lifeSeq;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public FloatVariable m_scoreRatio;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public FloatVariable m_xpRatio;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public IntVariable m_currency;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float m_animTime;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshPro m_xpNeededText;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TextMeshPro m_xpGainText;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public TextMeshPro m_xpTotalText;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform m_progressBar;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject m_xpScreen;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public List<GameObject> perks;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public List<PerkListWrapper> m_perkLists;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public string m_unlockedState;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public string m_unlockingState;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public UnityEvent OnXpScreenRoutineEnd;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public UnityEvent OnMoneyScreenRoutineEnd;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject m_newItemsInShop;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float _time;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float _totalXp;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool _endInvoked;

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xF7C01C", Offset = "0xF7C01C", VA = "0xF7C01C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xF7C020", Offset = "0xF7C020", VA = "0xF7C020")]
	public void RestoreState()
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xF7C4AC", Offset = "0xF7C4AC", VA = "0xF7C4AC")]
	public void TryLevelUp()
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xF7C82C", Offset = "0xF7C82C", VA = "0xF7C82C")]
	public void TryLevelUpInRun()
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xF7CAB8", Offset = "0xF7CAB8", VA = "0xF7CAB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xF7C7A0", Offset = "0xF7C7A0", VA = "0xF7C7A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA8F0", Offset = "0xBEA8F0")]
	public IEnumerator<float> LevelUp(float xpGain)
	{
		return null;
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xF7CBF0", Offset = "0xF7CBF0", VA = "0xF7CBF0")]
	private void OnScaleUpdate()
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xF7CCF0", Offset = "0xF7CCF0", VA = "0xF7CCF0")]
	private void OnValueUpdate(float value)
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xF7CFD0", Offset = "0xF7CFD0", VA = "0xF7CFD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA954", Offset = "0xBEA954")]
	public IEnumerator<float> LevelUpRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0xF7D04C", Offset = "0xF7D04C", VA = "0xF7D04C")]
	public void OnMoneyLegacyScreen()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xF7D458", Offset = "0xF7D458", VA = "0xF7D458")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEA9B8", Offset = "0xBEA9B8")]
	private IEnumerator<float> OnWaitMoneyLegacyScreen()
	{
		return null;
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xF7D4D4", Offset = "0xF7D4D4", VA = "0xF7D4D4")]
	public XPManager()
	{
	}
}
[Token(Token = "0x20002CB")]
public class Stun : MonoBehaviour
{
	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask m_acceptedLayers;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IntUnityEvent OnStun;

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xF61270", Offset = "0xF61270", VA = "0xF61270")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xF6137C", Offset = "0xF6137C", VA = "0xF6137C")]
	public Stun()
	{
	}
}
[Token(Token = "0x20002CC")]
public class AkCommunicationSettings : IDisposable
{
	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700009E")]
	public uint uPoolSize
	{
		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x141FEE8", Offset = "0x141FEE8", VA = "0x141FEE8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x141F16C", Offset = "0x141F16C", VA = "0x141F16C")]
		set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public ushort uDiscoveryBroadcastPort
	{
		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x141FF54", Offset = "0x141FF54", VA = "0x141FF54")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x141F1E8", Offset = "0x141F1E8", VA = "0x141F1E8")]
		set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public ushort uCommandPort
	{
		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x141FFC0", Offset = "0x141FFC0", VA = "0x141FFC0")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x141F264", Offset = "0x141F264", VA = "0x141F264")]
		set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public ushort uNotificationPort
	{
		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x142002C", Offset = "0x142002C", VA = "0x142002C")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x141F2E0", Offset = "0x141F2E0", VA = "0x141F2E0")]
		set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	public bool bInitSystemLib
	{
		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x1420098", Offset = "0x1420098", VA = "0x1420098")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x141F35C", Offset = "0x141F35C", VA = "0x141F35C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public string szAppNetworkName
	{
		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x1420104", Offset = "0x1420104", VA = "0x1420104")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x141F3D8", Offset = "0x141F3D8", VA = "0x141F3D8")]
		set
		{
		}
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x141FC78", Offset = "0x141FC78", VA = "0x141FC78")]
	internal AkCommunicationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x141FCB8", Offset = "0x141FCB8", VA = "0x141FCB8")]
	internal static IntPtr getCPtr(AkCommunicationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x141FD08", Offset = "0x141FD08", VA = "0x141FD08", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x141FD3C", Offset = "0x141FD3C", VA = "0x141FD3C", Slot = "1")]
	~AkCommunicationSettings()
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x141FDAC", Offset = "0x141FDAC", VA = "0x141FDAC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x141A100", Offset = "0x141A100", VA = "0x141A100")]
	public AkCommunicationSettings()
	{
	}
}
[Token(Token = "0x20002CD")]
public enum AkMemPoolAttributes
{
	[Token(Token = "0x40011C9")]
	AkNoAlloc = 0,
	[Token(Token = "0x40011CA")]
	AkMalloc = 1,
	[Token(Token = "0x40011CB")]
	AkAllocMask = 1,
	[Token(Token = "0x40011CC")]
	AkFixedSizeBlocksMode = 8,
	[Token(Token = "0x40011CD")]
	AkBlockMgmtMask = 8
}
[Token(Token = "0x20002CE")]
public class AkPlatformInitSettings : IDisposable
{
	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000A4")]
	public AkThreadProperties threadLEngine
	{
		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x18D78E0", Offset = "0x18D78E0", VA = "0x18D78E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x18D7850", Offset = "0x18D7850", VA = "0x18D7850")]
		set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public AkThreadProperties threadOutputMgr
	{
		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x18D7A20", Offset = "0x18D7A20", VA = "0x18D7A20")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x18D7990", Offset = "0x18D7990", VA = "0x18D7990")]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public AkThreadProperties threadBankManager
	{
		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x18D7B60", Offset = "0x18D7B60", VA = "0x18D7B60")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x18D7AD0", Offset = "0x18D7AD0", VA = "0x18D7AD0")]
		set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public AkThreadProperties threadMonitor
	{
		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x18D7CA0", Offset = "0x18D7CA0", VA = "0x18D7CA0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x18D7C10", Offset = "0x18D7C10", VA = "0x18D7C10")]
		set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public float fLEngineDefaultPoolRatioThreshold
	{
		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x18D7DCC", Offset = "0x18D7DCC", VA = "0x18D7DCC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x18D7D50", Offset = "0x18D7D50", VA = "0x18D7D50")]
		set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public uint uLEngineDefaultPoolSize
	{
		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x18D7EB4", Offset = "0x18D7EB4", VA = "0x18D7EB4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x18D7E38", Offset = "0x18D7E38", VA = "0x18D7E38")]
		set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public uint uSampleRate
	{
		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x18D7F9C", Offset = "0x18D7F9C", VA = "0x18D7F9C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x18D7F20", Offset = "0x18D7F20", VA = "0x18D7F20")]
		set
		{
		}
	}

	[Token(Token = "0x170000AB")]
	public ushort uNumRefillsInVoice
	{
		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x18D8084", Offset = "0x18D8084", VA = "0x18D8084")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x18D8008", Offset = "0x18D8008", VA = "0x18D8008")]
		set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public uint uChannelMask
	{
		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x18D816C", Offset = "0x18D816C", VA = "0x18D816C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x18D80F0", Offset = "0x18D80F0", VA = "0x18D80F0")]
		set
		{
		}
	}

	[Token(Token = "0x170000AD")]
	public bool bRoundFrameSizeToHWSize
	{
		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x18D8254", Offset = "0x18D8254", VA = "0x18D8254")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x18D81D8", Offset = "0x18D81D8", VA = "0x18D81D8")]
		set
		{
		}
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x18CB98C", Offset = "0x18CB98C", VA = "0x18CB98C")]
	internal AkPlatformInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x18CB88C", Offset = "0x18CB88C", VA = "0x18CB88C")]
	internal static IntPtr getCPtr(AkPlatformInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x18D7670", Offset = "0x18D7670", VA = "0x18D7670", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x18D76A4", Offset = "0x18D76A4", VA = "0x18D76A4", Slot = "1")]
	~AkPlatformInitSettings()
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x18D7714", Offset = "0x18D7714", VA = "0x18D7714", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x18D82C0", Offset = "0x18D82C0", VA = "0x18D82C0")]
	public AkPlatformInitSettings()
	{
	}
}
[Token(Token = "0x20002CF")]
internal class AkSoundEnginePINVOKE
{
	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x1000E58", Offset = "0x1000E58", VA = "0x1000E58")]
	static AkSoundEnginePINVOKE()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xFE5BAC", Offset = "0xFE5BAC", VA = "0xFE5BAC")]
	public static extern uint CSharp_AK_SOUNDBANK_VERSION_get();

	[PreserveSig]
	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x1000E5C", Offset = "0x1000E5C", VA = "0x1000E5C")]
	public static extern void CSharp_AkAudioSettings_uNumSamplesPerFrame_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x1000EEC", Offset = "0x1000EEC", VA = "0x1000EEC")]
	public static extern uint CSharp_AkAudioSettings_uNumSamplesPerFrame_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x1000F6C", Offset = "0x1000F6C", VA = "0x1000F6C")]
	public static extern void CSharp_AkAudioSettings_uNumSamplesPerSecond_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x1000FFC", Offset = "0x1000FFC", VA = "0x1000FFC")]
	public static extern uint CSharp_AkAudioSettings_uNumSamplesPerSecond_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x100107C", Offset = "0x100107C", VA = "0x100107C")]
	public static extern IntPtr CSharp_new_AkAudioSettings();

	[PreserveSig]
	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x10010F0", Offset = "0x10010F0", VA = "0x10010F0")]
	public static extern void CSharp_delete_AkAudioSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x1001170", Offset = "0x1001170", VA = "0x1001170")]
	public static extern void CSharp_AkVector_Zero(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x10011F0", Offset = "0x10011F0", VA = "0x10011F0")]
	public static extern void CSharp_AkVector_X_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x1001280", Offset = "0x1001280", VA = "0x1001280")]
	public static extern float CSharp_AkVector_X_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x1001300", Offset = "0x1001300", VA = "0x1001300")]
	public static extern void CSharp_AkVector_Y_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x1001390", Offset = "0x1001390", VA = "0x1001390")]
	public static extern float CSharp_AkVector_Y_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x1001410", Offset = "0x1001410", VA = "0x1001410")]
	public static extern void CSharp_AkVector_Z_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x10014A0", Offset = "0x10014A0", VA = "0x10014A0")]
	public static extern float CSharp_AkVector_Z_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x1001520", Offset = "0x1001520", VA = "0x1001520")]
	public static extern IntPtr CSharp_new_AkVector();

	[PreserveSig]
	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x1001594", Offset = "0x1001594", VA = "0x1001594")]
	public static extern void CSharp_delete_AkVector(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x1001614", Offset = "0x1001614", VA = "0x1001614")]
	public static extern IntPtr CSharp_AkTransform_Position(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x1001694", Offset = "0x1001694", VA = "0x1001694")]
	public static extern IntPtr CSharp_AkTransform_OrientationFront(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x1001714", Offset = "0x1001714", VA = "0x1001714")]
	public static extern IntPtr CSharp_AkTransform_OrientationTop(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x1001794", Offset = "0x1001794", VA = "0x1001794")]
	public static extern void CSharp_AkTransform_Set__SWIG_0(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x100183C", Offset = "0x100183C", VA = "0x100183C")]
	public static extern void CSharp_AkTransform_Set__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10);

	[PreserveSig]
	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x1001924", Offset = "0x1001924", VA = "0x1001924")]
	public static extern void CSharp_AkTransform_SetPosition__SWIG_0(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x10019B4", Offset = "0x10019B4", VA = "0x10019B4")]
	public static extern void CSharp_AkTransform_SetPosition__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x1001A5C", Offset = "0x1001A5C", VA = "0x1001A5C")]
	public static extern void CSharp_AkTransform_SetOrientation__SWIG_0(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x1001AF4", Offset = "0x1001AF4", VA = "0x1001AF4")]
	public static extern void CSharp_AkTransform_SetOrientation__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7);

	[PreserveSig]
	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x1001BBC", Offset = "0x1001BBC", VA = "0x1001BBC")]
	public static extern IntPtr CSharp_new_AkTransform();

	[PreserveSig]
	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x1001C30", Offset = "0x1001C30", VA = "0x1001C30")]
	public static extern void CSharp_delete_AkTransform(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x1001CB0", Offset = "0x1001CB0", VA = "0x1001CB0")]
	public static extern void CSharp_AkObstructionOcclusionValues_occlusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x1001D40", Offset = "0x1001D40", VA = "0x1001D40")]
	public static extern float CSharp_AkObstructionOcclusionValues_occlusion_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x1001DC0", Offset = "0x1001DC0", VA = "0x1001DC0")]
	public static extern void CSharp_AkObstructionOcclusionValues_obstruction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x1001E50", Offset = "0x1001E50", VA = "0x1001E50")]
	public static extern float CSharp_AkObstructionOcclusionValues_obstruction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x1001ED0", Offset = "0x1001ED0", VA = "0x1001ED0")]
	public static extern void CSharp_AkObstructionOcclusionValues_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x1001F50", Offset = "0x1001F50", VA = "0x1001F50")]
	public static extern int CSharp_AkObstructionOcclusionValues_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x1001FC4", Offset = "0x1001FC4", VA = "0x1001FC4")]
	public static extern void CSharp_AkObstructionOcclusionValues_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x1002054", Offset = "0x1002054", VA = "0x1002054")]
	public static extern IntPtr CSharp_new_AkObstructionOcclusionValues();

	[PreserveSig]
	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x10020C8", Offset = "0x10020C8", VA = "0x10020C8")]
	public static extern void CSharp_delete_AkObstructionOcclusionValues(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x1002148", Offset = "0x1002148", VA = "0x1002148")]
	public static extern void CSharp_AkChannelEmitter_position_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x10021D8", Offset = "0x10021D8", VA = "0x10021D8")]
	public static extern IntPtr CSharp_AkChannelEmitter_position_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x1002258", Offset = "0x1002258", VA = "0x1002258")]
	public static extern void CSharp_AkChannelEmitter_uInputChannels_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x10022E8", Offset = "0x10022E8", VA = "0x10022E8")]
	public static extern uint CSharp_AkChannelEmitter_uInputChannels_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x1002368", Offset = "0x1002368", VA = "0x1002368")]
	public static extern void CSharp_delete_AkChannelEmitter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x10023E8", Offset = "0x10023E8", VA = "0x10023E8")]
	public static extern void CSharp_AkAuxSendValue_listenerID_set(IntPtr jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x1002478", Offset = "0x1002478", VA = "0x1002478")]
	public static extern ulong CSharp_AkAuxSendValue_listenerID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x10024F8", Offset = "0x10024F8", VA = "0x10024F8")]
	public static extern void CSharp_AkAuxSendValue_auxBusID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x1002588", Offset = "0x1002588", VA = "0x1002588")]
	public static extern uint CSharp_AkAuxSendValue_auxBusID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x1002608", Offset = "0x1002608", VA = "0x1002608")]
	public static extern void CSharp_AkAuxSendValue_fControlValue_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x1002698", Offset = "0x1002698", VA = "0x1002698")]
	public static extern float CSharp_AkAuxSendValue_fControlValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x1002718", Offset = "0x1002718", VA = "0x1002718")]
	public static extern void CSharp_AkAuxSendValue_Set(IntPtr jarg1, ulong jarg2, uint jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x10027C0", Offset = "0x10027C0", VA = "0x10027C0")]
	public static extern bool CSharp_AkAuxSendValue_IsSame(IntPtr jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x1002860", Offset = "0x1002860", VA = "0x1002860")]
	public static extern int CSharp_AkAuxSendValue_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x10028D4", Offset = "0x10028D4", VA = "0x10028D4")]
	public static extern void CSharp_delete_AkAuxSendValue(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0xFDE678", Offset = "0xFDE678", VA = "0xFDE678")]
	public static extern IntPtr CSharp_new_AkRamp__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0xFDE784", Offset = "0xFDE784", VA = "0xFDE784")]
	public static extern IntPtr CSharp_new_AkRamp__SWIG_1(float jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0xFDE88C", Offset = "0xFDE88C", VA = "0xFDE88C")]
	public static extern void CSharp_AkRamp_fPrev_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0xFDE984", Offset = "0xFDE984", VA = "0xFDE984")]
	public static extern float CSharp_AkRamp_fPrev_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0xFDEA7C", Offset = "0xFDEA7C", VA = "0xFDEA7C")]
	public static extern void CSharp_AkRamp_fNext_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xFDEB74", Offset = "0xFDEB74", VA = "0xFDEB74")]
	public static extern float CSharp_AkRamp_fNext_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xFDE578", Offset = "0xFDE578", VA = "0xFDE578")]
	public static extern void CSharp_delete_AkRamp(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xFE5C7C", Offset = "0xFE5C7C", VA = "0xFE5C7C")]
	public static extern ushort CSharp_AK_INT_get();

	[PreserveSig]
	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xFE5D4C", Offset = "0xFE5D4C", VA = "0xFE5D4C")]
	public static extern ushort CSharp_AK_FLOAT_get();

	[PreserveSig]
	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xFE5E1C", Offset = "0xFE5E1C", VA = "0xFE5E1C")]
	public static extern byte CSharp_AK_INTERLEAVED_get();

	[PreserveSig]
	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xFE5EEC", Offset = "0xFE5EEC", VA = "0xFE5EEC")]
	public static extern byte CSharp_AK_NONINTERLEAVED_get();

	[PreserveSig]
	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xFE5FBC", Offset = "0xFE5FBC", VA = "0xFE5FBC")]
	public static extern uint CSharp_AK_LE_NATIVE_BITSPERSAMPLE_get();

	[PreserveSig]
	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xFE608C", Offset = "0xFE608C", VA = "0xFE608C")]
	public static extern uint CSharp_AK_LE_NATIVE_SAMPLETYPE_get();

	[PreserveSig]
	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0xFE615C", Offset = "0xFE615C", VA = "0xFE615C")]
	public static extern uint CSharp_AK_LE_NATIVE_INTERLEAVE_get();

	[PreserveSig]
	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x1002954", Offset = "0x1002954", VA = "0x1002954")]
	public static extern void CSharp_AkAudioFormat_uSampleRate_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x10029E4", Offset = "0x10029E4", VA = "0x10029E4")]
	public static extern uint CSharp_AkAudioFormat_uSampleRate_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x1002A64", Offset = "0x1002A64", VA = "0x1002A64")]
	public static extern void CSharp_AkAudioFormat_channelConfig_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x1002AF4", Offset = "0x1002AF4", VA = "0x1002AF4")]
	public static extern IntPtr CSharp_AkAudioFormat_channelConfig_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x1002B74", Offset = "0x1002B74", VA = "0x1002B74")]
	public static extern void CSharp_AkAudioFormat_uBitsPerSample_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x1002C04", Offset = "0x1002C04", VA = "0x1002C04")]
	public static extern uint CSharp_AkAudioFormat_uBitsPerSample_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x1002C84", Offset = "0x1002C84", VA = "0x1002C84")]
	public static extern void CSharp_AkAudioFormat_uBlockAlign_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x1002D14", Offset = "0x1002D14", VA = "0x1002D14")]
	public static extern uint CSharp_AkAudioFormat_uBlockAlign_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x1002D94", Offset = "0x1002D94", VA = "0x1002D94")]
	public static extern void CSharp_AkAudioFormat_uTypeID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x1002E24", Offset = "0x1002E24", VA = "0x1002E24")]
	public static extern uint CSharp_AkAudioFormat_uTypeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x1002EA4", Offset = "0x1002EA4", VA = "0x1002EA4")]
	public static extern void CSharp_AkAudioFormat_uInterleaveID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x1002F34", Offset = "0x1002F34", VA = "0x1002F34")]
	public static extern uint CSharp_AkAudioFormat_uInterleaveID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x1002FB4", Offset = "0x1002FB4", VA = "0x1002FB4")]
	public static extern uint CSharp_AkAudioFormat_GetNumChannels(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x1003034", Offset = "0x1003034", VA = "0x1003034")]
	public static extern uint CSharp_AkAudioFormat_GetBitsPerSample(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x10030B4", Offset = "0x10030B4", VA = "0x10030B4")]
	public static extern uint CSharp_AkAudioFormat_GetBlockAlign(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x1003134", Offset = "0x1003134", VA = "0x1003134")]
	public static extern uint CSharp_AkAudioFormat_GetTypeID(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x10031B4", Offset = "0x10031B4", VA = "0x10031B4")]
	public static extern uint CSharp_AkAudioFormat_GetInterleaveID(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x1003234", Offset = "0x1003234", VA = "0x1003234")]
	public static extern void CSharp_AkAudioFormat_SetAll(IntPtr jarg1, uint jarg2, IntPtr jarg3, uint jarg4, uint jarg5, uint jarg6, uint jarg7);

	[PreserveSig]
	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x10032FC", Offset = "0x10032FC", VA = "0x10032FC")]
	public static extern bool CSharp_AkAudioFormat_IsChannelConfigSupported(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x1003384", Offset = "0x1003384", VA = "0x1003384")]
	public static extern IntPtr CSharp_new_AkAudioFormat();

	[PreserveSig]
	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x10033F8", Offset = "0x10033F8", VA = "0x10033F8")]
	public static extern void CSharp_delete_AkAudioFormat(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x1003478", Offset = "0x1003478", VA = "0x1003478")]
	public static extern void CSharp_AkIterator_pItem_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x1003508", Offset = "0x1003508", VA = "0x1003508")]
	public static extern IntPtr CSharp_AkIterator_pItem_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x1003588", Offset = "0x1003588", VA = "0x1003588")]
	public static extern IntPtr CSharp_AkIterator_NextIter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x1003608", Offset = "0x1003608", VA = "0x1003608")]
	public static extern IntPtr CSharp_AkIterator_PrevIter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x1003688", Offset = "0x1003688", VA = "0x1003688")]
	public static extern IntPtr CSharp_AkIterator_GetItem(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x1003708", Offset = "0x1003708", VA = "0x1003708")]
	public static extern bool CSharp_AkIterator_IsEqualTo(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x10037A0", Offset = "0x10037A0", VA = "0x10037A0")]
	public static extern bool CSharp_AkIterator_IsDifferentFrom(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x1003838", Offset = "0x1003838", VA = "0x1003838")]
	public static extern IntPtr CSharp_new_AkIterator();

	[PreserveSig]
	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x10038AC", Offset = "0x10038AC", VA = "0x10038AC")]
	public static extern void CSharp_delete_AkIterator(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x100392C", Offset = "0x100392C", VA = "0x100392C")]
	public static extern int CSharp__ArrayPoolDefault_Get();

	[PreserveSig]
	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x10039A0", Offset = "0x10039A0", VA = "0x10039A0")]
	public static extern IntPtr CSharp_new__ArrayPoolDefault();

	[PreserveSig]
	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x1003A14", Offset = "0x1003A14", VA = "0x1003A14")]
	public static extern void CSharp_delete__ArrayPoolDefault(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x1003A94", Offset = "0x1003A94", VA = "0x1003A94")]
	public static extern int CSharp__ArrayPoolLEngineDefault_Get();

	[PreserveSig]
	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x1003B08", Offset = "0x1003B08", VA = "0x1003B08")]
	public static extern IntPtr CSharp_new__ArrayPoolLEngineDefault();

	[PreserveSig]
	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x1003B7C", Offset = "0x1003B7C", VA = "0x1003B7C")]
	public static extern void CSharp_delete__ArrayPoolLEngineDefault(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x1003BFC", Offset = "0x1003BFC", VA = "0x1003BFC")]
	public static extern IntPtr CSharp_new_AkPlaylistItem__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x1003C70", Offset = "0x1003C70", VA = "0x1003C70")]
	public static extern IntPtr CSharp_new_AkPlaylistItem__SWIG_1(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x1003CF0", Offset = "0x1003CF0", VA = "0x1003CF0")]
	public static extern void CSharp_delete_AkPlaylistItem(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x1003D70", Offset = "0x1003D70", VA = "0x1003D70")]
	public static extern IntPtr CSharp_AkPlaylistItem_Assign(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x1003E00", Offset = "0x1003E00", VA = "0x1003E00")]
	public static extern bool CSharp_AkPlaylistItem_IsEqualTo(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x1003E98", Offset = "0x1003E98", VA = "0x1003E98")]
	public static extern int CSharp_AkPlaylistItem_SetExternalSources(IntPtr jarg1, uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x1003F30", Offset = "0x1003F30", VA = "0x1003F30")]
	public static extern void CSharp_AkPlaylistItem_audioNodeID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x1003FC0", Offset = "0x1003FC0", VA = "0x1003FC0")]
	public static extern uint CSharp_AkPlaylistItem_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x1004040", Offset = "0x1004040", VA = "0x1004040")]
	public static extern void CSharp_AkPlaylistItem_msDelay_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x10040D0", Offset = "0x10040D0", VA = "0x10040D0")]
	public static extern int CSharp_AkPlaylistItem_msDelay_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x1004150", Offset = "0x1004150", VA = "0x1004150")]
	public static extern void CSharp_AkPlaylistItem_pCustomInfo_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x10041E0", Offset = "0x10041E0", VA = "0x10041E0")]
	public static extern IntPtr CSharp_AkPlaylistItem_pCustomInfo_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x1004260", Offset = "0x1004260", VA = "0x1004260")]
	public static extern IntPtr CSharp_new_AkPlaylistArray();

	[PreserveSig]
	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x10042D4", Offset = "0x10042D4", VA = "0x10042D4")]
	public static extern void CSharp_delete_AkPlaylistArray(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x1004354", Offset = "0x1004354", VA = "0x1004354")]
	public static extern IntPtr CSharp_AkPlaylistArray_Begin(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x10043D4", Offset = "0x10043D4", VA = "0x10043D4")]
	public static extern IntPtr CSharp_AkPlaylistArray_End(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x1004454", Offset = "0x1004454", VA = "0x1004454")]
	public static extern IntPtr CSharp_AkPlaylistArray_FindEx(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x10044E4", Offset = "0x10044E4", VA = "0x10044E4")]
	public static extern IntPtr CSharp_AkPlaylistArray_Erase__SWIG_0(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x1004574", Offset = "0x1004574", VA = "0x1004574")]
	public static extern void CSharp_AkPlaylistArray_Erase__SWIG_1(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x1004604", Offset = "0x1004604", VA = "0x1004604")]
	public static extern IntPtr CSharp_AkPlaylistArray_EraseSwap(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x1004694", Offset = "0x1004694", VA = "0x1004694")]
	public static extern int CSharp_AkPlaylistArray_Reserve(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x1004724", Offset = "0x1004724", VA = "0x1004724")]
	public static extern uint CSharp_AkPlaylistArray_Reserved(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x10047A4", Offset = "0x10047A4", VA = "0x10047A4")]
	public static extern void CSharp_AkPlaylistArray_Term(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x1004824", Offset = "0x1004824", VA = "0x1004824")]
	public static extern uint CSharp_AkPlaylistArray_Length(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x10048A4", Offset = "0x10048A4", VA = "0x10048A4")]
	public static extern IntPtr CSharp_AkPlaylistArray_Data(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x1004924", Offset = "0x1004924", VA = "0x1004924")]
	public static extern bool CSharp_AkPlaylistArray_IsEmpty(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x10049AC", Offset = "0x10049AC", VA = "0x10049AC")]
	public static extern IntPtr CSharp_AkPlaylistArray_Exists(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x1004A3C", Offset = "0x1004A3C", VA = "0x1004A3C")]
	public static extern IntPtr CSharp_AkPlaylistArray_AddLast__SWIG_0(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x1004ABC", Offset = "0x1004ABC", VA = "0x1004ABC")]
	public static extern IntPtr CSharp_AkPlaylistArray_AddLast__SWIG_1(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x1004B4C", Offset = "0x1004B4C", VA = "0x1004B4C")]
	public static extern IntPtr CSharp_AkPlaylistArray_Last(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x1004BCC", Offset = "0x1004BCC", VA = "0x1004BCC")]
	public static extern void CSharp_AkPlaylistArray_RemoveLast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x1004C4C", Offset = "0x1004C4C", VA = "0x1004C4C")]
	public static extern int CSharp_AkPlaylistArray_Remove(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x1004CDC", Offset = "0x1004CDC", VA = "0x1004CDC")]
	public static extern int CSharp_AkPlaylistArray_RemoveSwap(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x1004D6C", Offset = "0x1004D6C", VA = "0x1004D6C")]
	public static extern void CSharp_AkPlaylistArray_RemoveAll(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x1004DEC", Offset = "0x1004DEC", VA = "0x1004DEC")]
	public static extern IntPtr CSharp_AkPlaylistArray_ItemAtIndex(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x1004E7C", Offset = "0x1004E7C", VA = "0x1004E7C")]
	public static extern IntPtr CSharp_AkPlaylistArray_Insert(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x1004F0C", Offset = "0x1004F0C", VA = "0x1004F0C")]
	public static extern bool CSharp_AkPlaylistArray_GrowArray__SWIG_0(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x1004FA4", Offset = "0x1004FA4", VA = "0x1004FA4")]
	public static extern bool CSharp_AkPlaylistArray_GrowArray__SWIG_1(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x100502C", Offset = "0x100502C", VA = "0x100502C")]
	public static extern bool CSharp_AkPlaylistArray_Resize(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x10050C4", Offset = "0x10050C4", VA = "0x10050C4")]
	public static extern void CSharp_AkPlaylistArray_Transfer(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x1005154", Offset = "0x1005154", VA = "0x1005154")]
	public static extern int CSharp_AkPlaylistArray_Copy(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x10051E4", Offset = "0x10051E4", VA = "0x10051E4")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_0(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6);

	[PreserveSig]
	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x10052A4", Offset = "0x10052A4", VA = "0x10052A4")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_1(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x1005354", Offset = "0x1005354", VA = "0x1005354")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_2(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x10053FC", Offset = "0x10053FC", VA = "0x10053FC")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_3(IntPtr jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x1005494", Offset = "0x1005494", VA = "0x1005494")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_4(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x1005524", Offset = "0x1005524", VA = "0x1005524")]
	public static extern IntPtr CSharp_new_AkPlaylist();

	[PreserveSig]
	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x1005598", Offset = "0x1005598", VA = "0x1005598")]
	public static extern void CSharp_delete_AkPlaylist(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xFE63A8", Offset = "0xFE63A8", VA = "0xFE63A8")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_0(ulong jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xFE65B4", Offset = "0xFE65B4", VA = "0xFE65B4")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_1(ulong jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xFE6734", Offset = "0xFE6734", VA = "0xFE6734")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_2(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xFE6818", Offset = "0xFE6818", VA = "0xFE6818")]
	public static extern int CSharp_DynamicSequenceClose(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F56")]
	[Address(RVA = "0xFE6914", Offset = "0xFE6914", VA = "0xFE6914")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000F57")]
	[Address(RVA = "0xFE6A20", Offset = "0xFE6A20", VA = "0xFE6A20")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F58")]
	[Address(RVA = "0xFE6B14", Offset = "0xFE6B14", VA = "0xFE6B14")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xFE6C10", Offset = "0xFE6C10", VA = "0xFE6C10")]
	public static extern int CSharp_DynamicSequencePause__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0xFE6D1C", Offset = "0xFE6D1C", VA = "0xFE6D1C")]
	public static extern int CSharp_DynamicSequencePause__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xFE6E10", Offset = "0xFE6E10", VA = "0xFE6E10")]
	public static extern int CSharp_DynamicSequencePause__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0xFE6F0C", Offset = "0xFE6F0C", VA = "0xFE6F0C")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0xFE7018", Offset = "0xFE7018", VA = "0xFE7018")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xFE710C", Offset = "0xFE710C", VA = "0xFE710C")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0xFE7208", Offset = "0xFE7208", VA = "0xFE7208")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000F60")]
	[Address(RVA = "0xFE7314", Offset = "0xFE7314", VA = "0xFE7314")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F61")]
	[Address(RVA = "0xFE7408", Offset = "0xFE7408", VA = "0xFE7408")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F62")]
	[Address(RVA = "0xFE74EC", Offset = "0xFE74EC", VA = "0xFE74EC")]
	public static extern int CSharp_DynamicSequenceBreak(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F63")]
	[Address(RVA = "0xFE75E8", Offset = "0xFE75E8", VA = "0xFE75E8")]
	public static extern int CSharp_DynamicSequenceGetPauseTimes(uint jarg1, out uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000F64")]
	[Address(RVA = "0xFE7728", Offset = "0xFE7728", VA = "0xFE7728")]
	public static extern IntPtr CSharp_DynamicSequenceLockPlaylist(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xFE780C", Offset = "0xFE780C", VA = "0xFE780C")]
	public static extern int CSharp_DynamicSequenceUnlockPlaylist(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x1005618", Offset = "0x1005618", VA = "0x1005618")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x100568C", Offset = "0x100568C", VA = "0x100568C")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_1(string jarg1, uint jarg2, IntPtr jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x100574C", Offset = "0x100574C", VA = "0x100574C")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_2(string jarg1, uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x10057FC", Offset = "0x10057FC", VA = "0x10057FC")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_3(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x10058A4", Offset = "0x10058A4", VA = "0x10058A4")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_4(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x100593C", Offset = "0x100593C", VA = "0x100593C")]
	public static extern void CSharp_AkOutputSettings_audioDeviceShareset_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x10059CC", Offset = "0x10059CC", VA = "0x10059CC")]
	public static extern uint CSharp_AkOutputSettings_audioDeviceShareset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x1005A4C", Offset = "0x1005A4C", VA = "0x1005A4C")]
	public static extern void CSharp_AkOutputSettings_idDevice_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x1005ADC", Offset = "0x1005ADC", VA = "0x1005ADC")]
	public static extern uint CSharp_AkOutputSettings_idDevice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x1005B5C", Offset = "0x1005B5C", VA = "0x1005B5C")]
	public static extern void CSharp_AkOutputSettings_ePanningRule_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x1005BEC", Offset = "0x1005BEC", VA = "0x1005BEC")]
	public static extern int CSharp_AkOutputSettings_ePanningRule_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x1005C6C", Offset = "0x1005C6C", VA = "0x1005C6C")]
	public static extern void CSharp_AkOutputSettings_channelConfig_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x1005CFC", Offset = "0x1005CFC", VA = "0x1005CFC")]
	public static extern IntPtr CSharp_AkOutputSettings_channelConfig_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x1005D7C", Offset = "0x1005D7C", VA = "0x1005D7C")]
	public static extern void CSharp_delete_AkOutputSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x1005DFC", Offset = "0x1005DFC", VA = "0x1005DFC")]
	public static extern void CSharp_AkTaskContext_uIdxThread_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x1005E8C", Offset = "0x1005E8C", VA = "0x1005E8C")]
	public static extern uint CSharp_AkTaskContext_uIdxThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x1005F0C", Offset = "0x1005F0C", VA = "0x1005F0C")]
	public static extern IntPtr CSharp_new_AkTaskContext();

	[PreserveSig]
	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x1005F80", Offset = "0x1005F80", VA = "0x1005F80")]
	public static extern void CSharp_delete_AkTaskContext(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x1006000", Offset = "0x1006000", VA = "0x1006000")]
	public static extern void CSharp_AkInitSettings_uMaxNumPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x1006090", Offset = "0x1006090", VA = "0x1006090")]
	public static extern uint CSharp_AkInitSettings_uMaxNumPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x1006110", Offset = "0x1006110", VA = "0x1006110")]
	public static extern void CSharp_AkInitSettings_uDefaultPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x10061A0", Offset = "0x10061A0", VA = "0x10061A0")]
	public static extern uint CSharp_AkInitSettings_uDefaultPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x1006220", Offset = "0x1006220", VA = "0x1006220")]
	public static extern void CSharp_AkInitSettings_fDefaultPoolRatioThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x10062B0", Offset = "0x10062B0", VA = "0x10062B0")]
	public static extern float CSharp_AkInitSettings_fDefaultPoolRatioThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x1006330", Offset = "0x1006330", VA = "0x1006330")]
	public static extern void CSharp_AkInitSettings_uCommandQueueSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x10063C0", Offset = "0x10063C0", VA = "0x10063C0")]
	public static extern uint CSharp_AkInitSettings_uCommandQueueSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x1006440", Offset = "0x1006440", VA = "0x1006440")]
	public static extern void CSharp_AkInitSettings_uPrepareEventMemoryPoolID_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x10064D0", Offset = "0x10064D0", VA = "0x10064D0")]
	public static extern int CSharp_AkInitSettings_uPrepareEventMemoryPoolID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x1006550", Offset = "0x1006550", VA = "0x1006550")]
	public static extern void CSharp_AkInitSettings_bEnableGameSyncPreparation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x10065E0", Offset = "0x10065E0", VA = "0x10065E0")]
	public static extern bool CSharp_AkInitSettings_bEnableGameSyncPreparation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x1006668", Offset = "0x1006668", VA = "0x1006668")]
	public static extern void CSharp_AkInitSettings_uContinuousPlaybackLookAhead_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x10066F8", Offset = "0x10066F8", VA = "0x10066F8")]
	public static extern uint CSharp_AkInitSettings_uContinuousPlaybackLookAhead_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x1006778", Offset = "0x1006778", VA = "0x1006778")]
	public static extern void CSharp_AkInitSettings_uNumSamplesPerFrame_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x1006808", Offset = "0x1006808", VA = "0x1006808")]
	public static extern uint CSharp_AkInitSettings_uNumSamplesPerFrame_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x1006888", Offset = "0x1006888", VA = "0x1006888")]
	public static extern void CSharp_AkInitSettings_uMonitorPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x1006918", Offset = "0x1006918", VA = "0x1006918")]
	public static extern uint CSharp_AkInitSettings_uMonitorPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x1006998", Offset = "0x1006998", VA = "0x1006998")]
	public static extern void CSharp_AkInitSettings_uMonitorQueuePoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x1006A28", Offset = "0x1006A28", VA = "0x1006A28")]
	public static extern uint CSharp_AkInitSettings_uMonitorQueuePoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x1006AA8", Offset = "0x1006AA8", VA = "0x1006AA8")]
	public static extern void CSharp_AkInitSettings_settingsMainOutput_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x1006B38", Offset = "0x1006B38", VA = "0x1006B38")]
	public static extern IntPtr CSharp_AkInitSettings_settingsMainOutput_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x1006BB8", Offset = "0x1006BB8", VA = "0x1006BB8")]
	public static extern void CSharp_AkInitSettings_uMaxHardwareTimeoutMs_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x1006C48", Offset = "0x1006C48", VA = "0x1006C48")]
	public static extern uint CSharp_AkInitSettings_uMaxHardwareTimeoutMs_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x1006CC8", Offset = "0x1006CC8", VA = "0x1006CC8")]
	public static extern void CSharp_AkInitSettings_bUseSoundBankMgrThread_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x1006D58", Offset = "0x1006D58", VA = "0x1006D58")]
	public static extern bool CSharp_AkInitSettings_bUseSoundBankMgrThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x1006DE0", Offset = "0x1006DE0", VA = "0x1006DE0")]
	public static extern void CSharp_AkInitSettings_bUseLEngineThread_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x1006E70", Offset = "0x1006E70", VA = "0x1006E70")]
	public static extern bool CSharp_AkInitSettings_bUseLEngineThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x1006EF8", Offset = "0x1006EF8", VA = "0x1006EF8")]
	public static extern void CSharp_AkInitSettings_szPluginDLLPath_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x1006F9C", Offset = "0x1006F9C", VA = "0x1006F9C")]
	public static extern IntPtr CSharp_AkInitSettings_szPluginDLLPath_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x100701C", Offset = "0x100701C", VA = "0x100701C")]
	public static extern void CSharp_AkInitSettings_eFloorPlane_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x10070AC", Offset = "0x10070AC", VA = "0x10070AC")]
	public static extern int CSharp_AkInitSettings_eFloorPlane_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x100712C", Offset = "0x100712C", VA = "0x100712C")]
	public static extern IntPtr CSharp_new_AkInitSettings();

	[PreserveSig]
	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x10071A0", Offset = "0x10071A0", VA = "0x10071A0")]
	public static extern void CSharp_delete_AkInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x1007220", Offset = "0x1007220", VA = "0x1007220")]
	public static extern void CSharp_AkSourceSettings_sourceID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x10072B0", Offset = "0x10072B0", VA = "0x10072B0")]
	public static extern uint CSharp_AkSourceSettings_sourceID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0x1007330", Offset = "0x1007330", VA = "0x1007330")]
	public static extern void CSharp_AkSourceSettings_pMediaMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x10073C0", Offset = "0x10073C0", VA = "0x10073C0")]
	public static extern IntPtr CSharp_AkSourceSettings_pMediaMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x1007440", Offset = "0x1007440", VA = "0x1007440")]
	public static extern void CSharp_AkSourceSettings_uMediaSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x10074D0", Offset = "0x10074D0", VA = "0x10074D0")]
	public static extern uint CSharp_AkSourceSettings_uMediaSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x1007550", Offset = "0x1007550", VA = "0x1007550")]
	public static extern void CSharp_AkSourceSettings_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x10075D0", Offset = "0x10075D0", VA = "0x10075D0")]
	public static extern int CSharp_AkSourceSettings_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x1007644", Offset = "0x1007644", VA = "0x1007644")]
	public static extern void CSharp_AkSourceSettings_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x10076D4", Offset = "0x10076D4", VA = "0x10076D4")]
	public static extern IntPtr CSharp_new_AkSourceSettings();

	[PreserveSig]
	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x1007748", Offset = "0x1007748", VA = "0x1007748")]
	public static extern void CSharp_delete_AkSourceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xFE78E8", Offset = "0xFE78E8", VA = "0xFE78E8")]
	public static extern bool CSharp_IsInitialized();

	[PreserveSig]
	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0xFE79DC", Offset = "0xFE79DC", VA = "0xFE79DC")]
	public static extern int CSharp_GetAudioSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0xFE7AF4", Offset = "0xFE7AF4", VA = "0xFE7AF4")]
	public static extern IntPtr CSharp_GetSpeakerConfiguration__SWIG_0(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0xFE7C04", Offset = "0xFE7C04", VA = "0xFE7C04")]
	public static extern IntPtr CSharp_GetSpeakerConfiguration__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0xFE7CEC", Offset = "0xFE7CEC", VA = "0xFE7CEC")]
	public static extern int CSharp_GetPanningRule__SWIG_0(out int jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0xFE7DE0", Offset = "0xFE7DE0", VA = "0xFE7DE0")]
	public static extern int CSharp_GetPanningRule__SWIG_1(out int jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0xFE7ED4", Offset = "0xFE7ED4", VA = "0xFE7ED4")]
	public static extern int CSharp_SetPanningRule__SWIG_0(int jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0xFE7FC8", Offset = "0xFE7FC8", VA = "0xFE7FC8")]
	public static extern int CSharp_SetPanningRule__SWIG_1(int jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0xFE80D4", Offset = "0xFE80D4", VA = "0xFE80D4")]
	public static extern int CSharp_GetSpeakerAngles__SWIG_0([In][Out] float[] jarg1, ref uint jarg2, out float jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0xFE8200", Offset = "0xFE8200", VA = "0xFE8200")]
	public static extern int CSharp_GetSpeakerAngles__SWIG_1([In][Out] float[] jarg1, ref uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0xFE832C", Offset = "0xFE832C", VA = "0xFE832C")]
	public static extern int CSharp_SetSpeakerAngles__SWIG_0([In] float[] jarg1, uint jarg2, float jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0xFE8460", Offset = "0xFE8460", VA = "0xFE8460")]
	public static extern int CSharp_SetSpeakerAngles__SWIG_1([In] float[] jarg1, uint jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0xFE8574", Offset = "0xFE8574", VA = "0xFE8574")]
	public static extern int CSharp_SetVolumeThreshold(float jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xFE8660", Offset = "0xFE8660", VA = "0xFE8660")]
	public static extern int CSharp_SetMaxNumVoicesLimit(ushort jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xFE8744", Offset = "0xFE8744", VA = "0xFE8744")]
	public static extern int CSharp_RenderAudio__SWIG_0(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0xFE8820", Offset = "0xFE8820", VA = "0xFE8820")]
	public static extern int CSharp_RenderAudio__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xFE88F8", Offset = "0xFE88F8", VA = "0xFE88F8")]
	public static extern int CSharp_RegisterPluginDLL(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xFE89F4", Offset = "0xFE89F4", VA = "0xFE89F4")]
	public static extern uint CSharp_GetIDFromString(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xFE8C24", Offset = "0xFE8C24", VA = "0xFE8C24")]
	public static extern uint CSharp_PostEvent__SWIG_0(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xFE8E84", Offset = "0xFE8E84", VA = "0xFE8E84")]
	public static extern uint CSharp_PostEvent__SWIG_1(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xFE90B0", Offset = "0xFE90B0", VA = "0xFE90B0")]
	public static extern uint CSharp_PostEvent__SWIG_2(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0xFE9248", Offset = "0xFE9248", VA = "0xFE9248")]
	public static extern uint CSharp_PostEvent__SWIG_3(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xFE9470", Offset = "0xFE9470", VA = "0xFE9470")]
	public static extern uint CSharp_PostEvent__SWIG_4(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xFE96E8", Offset = "0xFE96E8", VA = "0xFE96E8")]
	public static extern uint CSharp_PostEvent__SWIG_5(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0xFE992C", Offset = "0xFE992C", VA = "0xFE992C")]
	public static extern uint CSharp_PostEvent__SWIG_6(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0xFE9ADC", Offset = "0xFE9ADC", VA = "0xFE9ADC")]
	public static extern uint CSharp_PostEvent__SWIG_7(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xFE9C60", Offset = "0xFE9C60", VA = "0xFE9C60")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_0(uint jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xFE9DEC", Offset = "0xFE9DEC", VA = "0xFE9DEC")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_1(uint jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xFE9F60", Offset = "0xFE9F60", VA = "0xFE9F60")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_2(uint jarg1, int jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xFEA0BC", Offset = "0xFEA0BC", VA = "0xFEA0BC")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_3(uint jarg1, int jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xFEA1C8", Offset = "0xFEA1C8", VA = "0xFEA1C8")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_4(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xFEA334", Offset = "0xFEA334", VA = "0xFEA334")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_5(string jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xFEA4D8", Offset = "0xFEA4D8", VA = "0xFEA4D8")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_6(string jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xFEA664", Offset = "0xFEA664", VA = "0xFEA664")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_7(string jarg1, int jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0xFEA7D8", Offset = "0xFEA7D8", VA = "0xFEA7D8")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_8(string jarg1, int jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0xFEA8FC", Offset = "0xFEA8FC", VA = "0xFEA8FC")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_9(string jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xFEAA74", Offset = "0xFEAA74", VA = "0xFEAA74")]
	public static extern int CSharp_PostMIDIOnEvent(uint jarg1, ulong jarg2, IntPtr jarg3, ushort jarg4);

	[PreserveSig]
	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xFEABC8", Offset = "0xFEABC8", VA = "0xFEABC8")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_0(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xFEACBC", Offset = "0xFEACBC", VA = "0xFEACBC")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_1(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xFEAD98", Offset = "0xFEAD98", VA = "0xFEAD98")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_2();

	[PreserveSig]
	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xFEAE88", Offset = "0xFEAE88", VA = "0xFEAE88")]
	public static extern int CSharp_PinEventInStreamCache__SWIG_0(uint jarg1, sbyte jarg2, sbyte jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xFEAF9C", Offset = "0xFEAF9C", VA = "0xFEAF9C")]
	public static extern int CSharp_PinEventInStreamCache__SWIG_1(string jarg1, sbyte jarg2, sbyte jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xFEB0B0", Offset = "0xFEB0B0", VA = "0xFEB0B0")]
	public static extern int CSharp_UnpinEventInStreamCache__SWIG_0(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xFEB194", Offset = "0xFEB194", VA = "0xFEB194")]
	public static extern int CSharp_UnpinEventInStreamCache__SWIG_1(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xFEB2A8", Offset = "0xFEB2A8", VA = "0xFEB2A8")]
	public static extern int CSharp_GetBufferStatusForPinnedEvent__SWIG_0(uint jarg1, out float jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xFEB3BC", Offset = "0xFEB3BC", VA = "0xFEB3BC")]
	public static extern int CSharp_GetBufferStatusForPinnedEvent__SWIG_1(string jarg1, out float jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xFEB538", Offset = "0xFEB538", VA = "0xFEB538")]
	public static extern int CSharp_SeekOnEvent__SWIG_0(uint jarg1, ulong jarg2, int jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xFEB6AC", Offset = "0xFEB6AC", VA = "0xFEB6AC")]
	public static extern int CSharp_SeekOnEvent__SWIG_1(uint jarg1, ulong jarg2, int jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xFEB808", Offset = "0xFEB808", VA = "0xFEB808")]
	public static extern int CSharp_SeekOnEvent__SWIG_2(uint jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xFEB96C", Offset = "0xFEB96C", VA = "0xFEB96C")]
	public static extern int CSharp_SeekOnEvent__SWIG_3(string jarg1, ulong jarg2, int jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xFEBAF8", Offset = "0xFEBAF8", VA = "0xFEBAF8")]
	public static extern int CSharp_SeekOnEvent__SWIG_4(string jarg1, ulong jarg2, int jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xFEBC6C", Offset = "0xFEBC6C", VA = "0xFEBC6C")]
	public static extern int CSharp_SeekOnEvent__SWIG_5(string jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xFEBDF0", Offset = "0xFEBDF0", VA = "0xFEBDF0")]
	public static extern int CSharp_SeekOnEvent__SWIG_6(uint jarg1, ulong jarg2, float jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0xFEBF6C", Offset = "0xFEBF6C", VA = "0xFEBF6C")]
	public static extern int CSharp_SeekOnEvent__SWIG_7(uint jarg1, ulong jarg2, float jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0xFEC0D0", Offset = "0xFEC0D0", VA = "0xFEC0D0")]
	public static extern int CSharp_SeekOnEvent__SWIG_8(uint jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xFEC244", Offset = "0xFEC244", VA = "0xFEC244")]
	public static extern int CSharp_SeekOnEvent__SWIG_9(string jarg1, ulong jarg2, float jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0xFEC3D8", Offset = "0xFEC3D8", VA = "0xFEC3D8")]
	public static extern int CSharp_SeekOnEvent__SWIG_10(string jarg1, ulong jarg2, float jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xFEC554", Offset = "0xFEC554", VA = "0xFEC554")]
	public static extern int CSharp_SeekOnEvent__SWIG_11(string jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x10077C8", Offset = "0x10077C8", VA = "0x10077C8")]
	public static extern void CSharp_CancelEventCallbackCookie(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0xFEC710", Offset = "0xFEC710", VA = "0xFEC710")]
	public static extern void CSharp_CancelEventCallbackGameObject(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x1007848", Offset = "0x1007848", VA = "0x1007848")]
	public static extern void CSharp_CancelEventCallback(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xFEC874", Offset = "0xFEC874", VA = "0xFEC874")]
	public static extern int CSharp_GetSourcePlayPosition__SWIG_0(uint jarg1, out int jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xFEC980", Offset = "0xFEC980", VA = "0xFEC980")]
	public static extern int CSharp_GetSourcePlayPosition__SWIG_1(uint jarg1, out int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xFECA8C", Offset = "0xFECA8C", VA = "0xFECA8C")]
	public static extern int CSharp_GetSourceStreamBuffering(uint jarg1, out int jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xFECBC0", Offset = "0xFECBC0", VA = "0xFECBC0")]
	public static extern void CSharp_StopAll__SWIG_0(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xFECC9C", Offset = "0xFECC9C", VA = "0xFECC9C")]
	public static extern void CSharp_StopAll__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0xFECD88", Offset = "0xFECD88", VA = "0xFECD88")]
	public static extern void CSharp_StopPlayingID__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0xFECE94", Offset = "0xFECE94", VA = "0xFECE94")]
	public static extern void CSharp_StopPlayingID__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0xFECF88", Offset = "0xFECF88", VA = "0xFECF88")]
	public static extern void CSharp_StopPlayingID__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0xFED094", Offset = "0xFED094", VA = "0xFED094")]
	public static extern void CSharp_ExecuteActionOnPlayingID__SWIG_0(int jarg1, uint jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xFED1B8", Offset = "0xFED1B8", VA = "0xFED1B8")]
	public static extern void CSharp_ExecuteActionOnPlayingID__SWIG_1(int jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0xFED2C4", Offset = "0xFED2C4", VA = "0xFED2C4")]
	public static extern void CSharp_ExecuteActionOnPlayingID__SWIG_2(int jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FED")]
	[Address(RVA = "0xFED3B8", Offset = "0xFED3B8", VA = "0xFED3B8")]
	public static extern void CSharp_SetRandomSeed(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xFED49C", Offset = "0xFED49C", VA = "0xFED49C")]
	public static extern void CSharp_MuteBackgroundMusic(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0xFED578", Offset = "0xFED578", VA = "0xFED578")]
	public static extern bool CSharp_GetBackgroundMusicMute();

	[PreserveSig]
	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0xFED6D8", Offset = "0xFED6D8", VA = "0xFED6D8")]
	public static extern int CSharp_SendPluginCustomGameData(uint jarg1, ulong jarg2, int jarg3, uint jarg4, uint jarg5, IntPtr jarg6, uint jarg7);

	[PreserveSig]
	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0xFED7FC", Offset = "0xFED7FC", VA = "0xFED7FC")]
	public static extern int CSharp_UnregisterAllGameObj();

	[PreserveSig]
	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0xFED934", Offset = "0xFED934", VA = "0xFED934")]
	public static extern int CSharp_SetMultiplePositions__SWIG_0(ulong jarg1, IntPtr jarg2, ushort jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0xFEDA90", Offset = "0xFEDA90", VA = "0xFEDA90")]
	public static extern int CSharp_SetMultiplePositions__SWIG_1(ulong jarg1, IntPtr jarg2, ushort jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0xFEDBEC", Offset = "0xFEDBEC", VA = "0xFEDBEC")]
	public static extern int CSharp_SetMultiplePositions__SWIG_2(ulong jarg1, IntPtr jarg2, ushort jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0xFEDD48", Offset = "0xFEDD48", VA = "0xFEDD48")]
	public static extern int CSharp_SetMultiplePositions__SWIG_3(ulong jarg1, IntPtr jarg2, ushort jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0xFEDE84", Offset = "0xFEDE84", VA = "0xFEDE84")]
	public static extern int CSharp_SetScalingFactor(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0xFEDF70", Offset = "0xFEDF70", VA = "0xFEDF70")]
	public static extern int CSharp_ClearBanks();

	[PreserveSig]
	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0xFEE058", Offset = "0xFEE058", VA = "0xFEE058")]
	public static extern int CSharp_SetBankLoadIOSettings(float jarg1, sbyte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0xFEE164", Offset = "0xFEE164", VA = "0xFEE164")]
	public static extern int CSharp_LoadBank__SWIG_0(string jarg1, int jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0xFEE288", Offset = "0xFEE288", VA = "0xFEE288")]
	public static extern int CSharp_LoadBank__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0xFEE394", Offset = "0xFEE394", VA = "0xFEE394")]
	public static extern int CSharp_LoadBank__SWIG_2(IntPtr jarg1, uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xFEE4B8", Offset = "0xFEE4B8", VA = "0xFEE4B8")]
	public static extern int CSharp_LoadBank__SWIG_3(IntPtr jarg1, uint jarg2, int jarg3, out uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xFEE640", Offset = "0xFEE640", VA = "0xFEE640")]
	public static extern int CSharp_LoadBank__SWIG_4(string jarg1, IntPtr jarg2, IntPtr jarg3, int jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xFEE7E0", Offset = "0xFEE7E0", VA = "0xFEE7E0")]
	public static extern int CSharp_LoadBank__SWIG_5(uint jarg1, IntPtr jarg2, IntPtr jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0xFEE968", Offset = "0xFEE968", VA = "0xFEE968")]
	public static extern int CSharp_LoadBank__SWIG_6(IntPtr jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001000")]
	[Address(RVA = "0xFEEB08", Offset = "0xFEEB08", VA = "0xFEEB08")]
	public static extern int CSharp_LoadBank__SWIG_7(IntPtr jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5, out uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6001001")]
	[Address(RVA = "0xFEEC44", Offset = "0xFEEC44", VA = "0xFEEC44")]
	public static extern int CSharp_UnloadBank__SWIG_0(string jarg1, IntPtr jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001002")]
	[Address(RVA = "0xFEED68", Offset = "0xFEED68", VA = "0xFEED68")]
	public static extern int CSharp_UnloadBank__SWIG_1(string jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001003")]
	[Address(RVA = "0xFEEE8C", Offset = "0xFEEE8C", VA = "0xFEEE8C")]
	public static extern int CSharp_UnloadBank__SWIG_2(uint jarg1, IntPtr jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001004")]
	[Address(RVA = "0xFEEF98", Offset = "0xFEEF98", VA = "0xFEEF98")]
	public static extern int CSharp_UnloadBank__SWIG_3(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001005")]
	[Address(RVA = "0xFEF100", Offset = "0xFEF100", VA = "0xFEF100")]
	public static extern int CSharp_UnloadBank__SWIG_4(string jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6001006")]
	[Address(RVA = "0xFEF298", Offset = "0xFEF298", VA = "0xFEF298")]
	public static extern int CSharp_UnloadBank__SWIG_5(uint jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6001007")]
	[Address(RVA = "0x10078C8", Offset = "0x10078C8", VA = "0x10078C8")]
	public static extern void CSharp_CancelBankCallbackCookie(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001008")]
	[Address(RVA = "0xFEF424", Offset = "0xFEF424", VA = "0xFEF424")]
	public static extern int CSharp_PrepareBank__SWIG_0(int jarg1, string jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001009")]
	[Address(RVA = "0xFEF54C", Offset = "0xFEF54C", VA = "0xFEF54C")]
	public static extern int CSharp_PrepareBank__SWIG_1(int jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x600100A")]
	[Address(RVA = "0xFEF674", Offset = "0xFEF674", VA = "0xFEF674")]
	public static extern int CSharp_PrepareBank__SWIG_2(int jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x600100B")]
	[Address(RVA = "0xFEF780", Offset = "0xFEF780", VA = "0xFEF780")]
	public static extern int CSharp_PrepareBank__SWIG_3(int jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600100C")]
	[Address(RVA = "0xFEF8F0", Offset = "0xFEF8F0", VA = "0xFEF8F0")]
	public static extern int CSharp_PrepareBank__SWIG_4(int jarg1, string jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x600100D")]
	[Address(RVA = "0xFEFA94", Offset = "0xFEFA94", VA = "0xFEFA94")]
	public static extern int CSharp_PrepareBank__SWIG_5(int jarg1, string jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x600100E")]
	[Address(RVA = "0xFEFC38", Offset = "0xFEFC38", VA = "0xFEFC38")]
	public static extern int CSharp_PrepareBank__SWIG_6(int jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x600100F")]
	[Address(RVA = "0xFEFDC0", Offset = "0xFEFDC0", VA = "0xFEFDC0")]
	public static extern int CSharp_PrepareBank__SWIG_7(int jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6001010")]
	[Address(RVA = "0xFEFEC4", Offset = "0xFEFEC4", VA = "0xFEFEC4")]
	public static extern int CSharp_ClearPreparedEvents();

	[PreserveSig]
	[Token(Token = "0x6001011")]
	[Address(RVA = "0xFF01E0", Offset = "0xFF01E0", VA = "0xFF01E0")]
	public static extern int CSharp_PrepareEvent__SWIG_0(int jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001012")]
	[Address(RVA = "0xFF02F4", Offset = "0xFF02F4", VA = "0xFF02F4")]
	public static extern int CSharp_PrepareEvent__SWIG_1(int jarg1, [In] uint[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001013")]
	[Address(RVA = "0xFF06A0", Offset = "0xFF06A0", VA = "0xFF06A0")]
	public static extern int CSharp_PrepareEvent__SWIG_2(int jarg1, IntPtr jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6001014")]
	[Address(RVA = "0xFF0830", Offset = "0xFF0830", VA = "0xFF0830")]
	public static extern int CSharp_PrepareEvent__SWIG_3(int jarg1, [In] uint[] jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6001015")]
	[Address(RVA = "0xFF0968", Offset = "0xFF0968", VA = "0xFF0968")]
	public static extern int CSharp_SetMedia(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001016")]
	[Address(RVA = "0xFF0A78", Offset = "0xFF0A78", VA = "0xFF0A78")]
	public static extern int CSharp_UnsetMedia(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001017")]
	[Address(RVA = "0xFF0DC0", Offset = "0xFF0DC0", VA = "0xFF0DC0")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_0(int jarg1, int jarg2, string jarg3, IntPtr jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001018")]
	[Address(RVA = "0xFF0F20", Offset = "0xFF0F20", VA = "0xFF0F20")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_1(int jarg1, int jarg2, uint jarg3, [In] uint[] jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001019")]
	[Address(RVA = "0xFF12F4", Offset = "0xFF12F4", VA = "0xFF12F4")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_2(int jarg1, int jarg2, string jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x600101A")]
	[Address(RVA = "0xFF14D0", Offset = "0xFF14D0", VA = "0xFF14D0")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_3(int jarg1, int jarg2, uint jarg3, [In] uint[] jarg4, uint jarg5, IntPtr jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x600101B")]
	[Address(RVA = "0xFF1664", Offset = "0xFF1664", VA = "0xFF1664")]
	public static extern int CSharp_AddListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600101C")]
	[Address(RVA = "0xFF17B8", Offset = "0xFF17B8", VA = "0xFF17B8")]
	public static extern int CSharp_RemoveListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600101D")]
	[Address(RVA = "0xFF18E4", Offset = "0xFF18E4", VA = "0xFF18E4")]
	public static extern int CSharp_AddDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x600101E")]
	[Address(RVA = "0xFF1A00", Offset = "0xFF1A00", VA = "0xFF1A00")]
	public static extern int CSharp_RemoveDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x600101F")]
	[Address(RVA = "0xFF1B1C", Offset = "0xFF1B1C", VA = "0xFF1B1C")]
	public static extern int CSharp_ResetListenersToDefault(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001020")]
	[Address(RVA = "0xFF1C74", Offset = "0xFF1C74", VA = "0xFF1C74")]
	public static extern int CSharp_SetListenerSpatialization__SWIG_0(ulong jarg1, bool jarg2, IntPtr jarg3, [In] float[] jarg4);

	[PreserveSig]
	[Token(Token = "0x6001021")]
	[Address(RVA = "0xFF1DEC", Offset = "0xFF1DEC", VA = "0xFF1DEC")]
	public static extern int CSharp_SetListenerSpatialization__SWIG_1(ulong jarg1, bool jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6001022")]
	[Address(RVA = "0xFF1F60", Offset = "0xFF1F60", VA = "0xFF1F60")]
	public static extern int CSharp_SetRTPCValue__SWIG_0(uint jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6001023")]
	[Address(RVA = "0xFF20F4", Offset = "0xFF20F4", VA = "0xFF20F4")]
	public static extern int CSharp_SetRTPCValue__SWIG_1(uint jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001024")]
	[Address(RVA = "0xFF2270", Offset = "0xFF2270", VA = "0xFF2270")]
	public static extern int CSharp_SetRTPCValue__SWIG_2(uint jarg1, float jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001025")]
	[Address(RVA = "0xFF23D4", Offset = "0xFF23D4", VA = "0xFF23D4")]
	public static extern int CSharp_SetRTPCValue__SWIG_3(uint jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6001026")]
	[Address(RVA = "0xFF24E8", Offset = "0xFF24E8", VA = "0xFF24E8")]
	public static extern int CSharp_SetRTPCValue__SWIG_4(uint jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001027")]
	[Address(RVA = "0xFF2654", Offset = "0xFF2654", VA = "0xFF2654")]
	public static extern int CSharp_SetRTPCValue__SWIG_5(string jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6001028")]
	[Address(RVA = "0xFF2800", Offset = "0xFF2800", VA = "0xFF2800")]
	public static extern int CSharp_SetRTPCValue__SWIG_6(string jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001029")]
	[Address(RVA = "0xFF2994", Offset = "0xFF2994", VA = "0xFF2994")]
	public static extern int CSharp_SetRTPCValue__SWIG_7(string jarg1, float jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x600102A")]
	[Address(RVA = "0xFF2B10", Offset = "0xFF2B10", VA = "0xFF2B10")]
	public static extern int CSharp_SetRTPCValue__SWIG_8(string jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x600102B")]
	[Address(RVA = "0xFF2C3C", Offset = "0xFF2C3C", VA = "0xFF2C3C")]
	public static extern int CSharp_SetRTPCValue__SWIG_9(string jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600102C")]
	[Address(RVA = "0xFF2D88", Offset = "0xFF2D88", VA = "0xFF2D88")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_0(uint jarg1, float jarg2, uint jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x600102D")]
	[Address(RVA = "0xFF2EE4", Offset = "0xFF2EE4", VA = "0xFF2EE4")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_1(uint jarg1, float jarg2, uint jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x600102E")]
	[Address(RVA = "0xFF3028", Offset = "0xFF3028", VA = "0xFF3028")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_2(uint jarg1, float jarg2, uint jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x600102F")]
	[Address(RVA = "0xFF3154", Offset = "0xFF3154", VA = "0xFF3154")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_3(uint jarg1, float jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001030")]
	[Address(RVA = "0xFF3298", Offset = "0xFF3298", VA = "0xFF3298")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_4(string jarg1, float jarg2, uint jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6001031")]
	[Address(RVA = "0xFF340C", Offset = "0xFF340C", VA = "0xFF340C")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_5(string jarg1, float jarg2, uint jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001032")]
	[Address(RVA = "0xFF3568", Offset = "0xFF3568", VA = "0xFF3568")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_6(string jarg1, float jarg2, uint jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001033")]
	[Address(RVA = "0xFF36AC", Offset = "0xFF36AC", VA = "0xFF36AC")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_7(string jarg1, float jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001034")]
	[Address(RVA = "0xFF3830", Offset = "0xFF3830", VA = "0xFF3830")]
	public static extern int CSharp_ResetRTPCValue__SWIG_0(uint jarg1, ulong jarg2, int jarg3, int jarg4, bool jarg5);

	[PreserveSig]
	[Token(Token = "0x6001035")]
	[Address(RVA = "0xFF39A4", Offset = "0xFF39A4", VA = "0xFF39A4")]
	public static extern int CSharp_ResetRTPCValue__SWIG_1(uint jarg1, ulong jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001036")]
	[Address(RVA = "0xFF3B00", Offset = "0xFF3B00", VA = "0xFF3B00")]
	public static extern int CSharp_ResetRTPCValue__SWIG_2(uint jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001037")]
	[Address(RVA = "0xFF3C44", Offset = "0xFF3C44", VA = "0xFF3C44")]
	public static extern int CSharp_ResetRTPCValue__SWIG_3(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001038")]
	[Address(RVA = "0xFF3D38", Offset = "0xFF3D38", VA = "0xFF3D38")]
	public static extern int CSharp_ResetRTPCValue__SWIG_4(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001039")]
	[Address(RVA = "0xFF3E84", Offset = "0xFF3E84", VA = "0xFF3E84")]
	public static extern int CSharp_ResetRTPCValue__SWIG_5(string jarg1, ulong jarg2, int jarg3, int jarg4, bool jarg5);

	[PreserveSig]
	[Token(Token = "0x600103A")]
	[Address(RVA = "0xFF4010", Offset = "0xFF4010", VA = "0xFF4010")]
	public static extern int CSharp_ResetRTPCValue__SWIG_6(string jarg1, ulong jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x600103B")]
	[Address(RVA = "0xFF4184", Offset = "0xFF4184", VA = "0xFF4184")]
	public static extern int CSharp_ResetRTPCValue__SWIG_7(string jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x600103C")]
	[Address(RVA = "0xFF42E0", Offset = "0xFF42E0", VA = "0xFF42E0")]
	public static extern int CSharp_ResetRTPCValue__SWIG_8(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600103D")]
	[Address(RVA = "0xFF43EC", Offset = "0xFF43EC", VA = "0xFF43EC")]
	public static extern int CSharp_ResetRTPCValue__SWIG_9(string jarg1);

	[PreserveSig]
	[Token(Token = "0x600103E")]
	[Address(RVA = "0xFF4538", Offset = "0xFF4538", VA = "0xFF4538")]
	public static extern int CSharp_SetSwitch__SWIG_0(uint jarg1, uint jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x600103F")]
	[Address(RVA = "0xFF4684", Offset = "0xFF4684", VA = "0xFF4684")]
	public static extern int CSharp_SetSwitch__SWIG_1(string jarg1, string jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6001040")]
	[Address(RVA = "0xFF47F4", Offset = "0xFF47F4", VA = "0xFF47F4")]
	public static extern int CSharp_PostTrigger__SWIG_0(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001041")]
	[Address(RVA = "0xFF4930", Offset = "0xFF4930", VA = "0xFF4930")]
	public static extern int CSharp_PostTrigger__SWIG_1(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001042")]
	[Address(RVA = "0xFF4A4C", Offset = "0xFF4A4C", VA = "0xFF4A4C")]
	public static extern int CSharp_SetState__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001043")]
	[Address(RVA = "0xFF4B50", Offset = "0xFF4B50", VA = "0xFF4B50")]
	public static extern int CSharp_SetState__SWIG_1(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001044")]
	[Address(RVA = "0xFF4CD0", Offset = "0xFF4CD0", VA = "0xFF4CD0")]
	public static extern int CSharp_SetGameObjectAuxSendValues(ulong jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001045")]
	[Address(RVA = "0xFF4E3C", Offset = "0xFF4E3C", VA = "0xFF4E3C")]
	public static extern int CSharp_SetGameObjectOutputBusVolume(ulong jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001046")]
	[Address(RVA = "0xFF4F58", Offset = "0xFF4F58", VA = "0xFF4F58")]
	public static extern int CSharp_SetActorMixerEffect(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001047")]
	[Address(RVA = "0xFF506C", Offset = "0xFF506C", VA = "0xFF506C")]
	public static extern int CSharp_SetBusEffect__SWIG_0(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001048")]
	[Address(RVA = "0xFF5180", Offset = "0xFF5180", VA = "0xFF5180")]
	public static extern int CSharp_SetBusEffect__SWIG_1(string jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001049")]
	[Address(RVA = "0xFF52A4", Offset = "0xFF52A4", VA = "0xFF52A4")]
	public static extern int CSharp_SetMixer__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600104A")]
	[Address(RVA = "0xFF53A8", Offset = "0xFF53A8", VA = "0xFF53A8")]
	public static extern int CSharp_SetMixer__SWIG_1(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600104B")]
	[Address(RVA = "0xFF54D8", Offset = "0xFF54D8", VA = "0xFF54D8")]
	public static extern int CSharp_SetBusConfig__SWIG_0(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600104C")]
	[Address(RVA = "0xFF55F0", Offset = "0xFF55F0", VA = "0xFF55F0")]
	public static extern int CSharp_SetBusConfig__SWIG_1(string jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600104D")]
	[Address(RVA = "0xFF5774", Offset = "0xFF5774", VA = "0xFF5774")]
	public static extern int CSharp_SetObjectObstructionAndOcclusion(ulong jarg1, ulong jarg2, float jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x600104E")]
	[Address(RVA = "0xFF5904", Offset = "0xFF5904", VA = "0xFF5904")]
	public static extern int CSharp_SetMultipleObstructionAndOcclusion(ulong jarg1, ulong jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x600104F")]
	[Address(RVA = "0xFF5A10", Offset = "0xFF5A10", VA = "0xFF5A10")]
	public static extern int CSharp_StartOutputCapture(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001050")]
	[Address(RVA = "0xFF5B04", Offset = "0xFF5B04", VA = "0xFF5B04")]
	public static extern int CSharp_StopOutputCapture();

	[PreserveSig]
	[Token(Token = "0x6001051")]
	[Address(RVA = "0xFF5BDC", Offset = "0xFF5BDC", VA = "0xFF5BDC")]
	public static extern int CSharp_AddOutputCaptureMarker(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001052")]
	[Address(RVA = "0xFF5CD8", Offset = "0xFF5CD8", VA = "0xFF5CD8")]
	public static extern int CSharp_StartProfilerCapture(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001053")]
	[Address(RVA = "0xFF5DCC", Offset = "0xFF5DCC", VA = "0xFF5DCC")]
	public static extern int CSharp_StopProfilerCapture();

	[PreserveSig]
	[Token(Token = "0x6001054")]
	[Address(RVA = "0xFF5EA4", Offset = "0xFF5EA4", VA = "0xFF5EA4")]
	public static extern int CSharp_RemoveOutput(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001055")]
	[Address(RVA = "0xFF5FB4", Offset = "0xFF5FB4", VA = "0xFF5FB4")]
	public static extern int CSharp_ReplaceOutput__SWIG_0(IntPtr jarg1, ulong jarg2, out ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6001056")]
	[Address(RVA = "0xFF60D4", Offset = "0xFF60D4", VA = "0xFF60D4")]
	public static extern int CSharp_ReplaceOutput__SWIG_1(IntPtr jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001057")]
	[Address(RVA = "0xFF61D8", Offset = "0xFF61D8", VA = "0xFF61D8")]
	public static extern ulong CSharp_GetOutputID__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001058")]
	[Address(RVA = "0xFF62DC", Offset = "0xFF62DC", VA = "0xFF62DC")]
	public static extern ulong CSharp_GetOutputID__SWIG_1(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001059")]
	[Address(RVA = "0xFF63F8", Offset = "0xFF63F8", VA = "0xFF63F8")]
	public static extern int CSharp_SetBusDevice__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600105A")]
	[Address(RVA = "0xFF64FC", Offset = "0xFF64FC", VA = "0xFF64FC")]
	public static extern int CSharp_SetBusDevice__SWIG_1(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x600105B")]
	[Address(RVA = "0xFF6630", Offset = "0xFF6630", VA = "0xFF6630")]
	public static extern int CSharp_SetOutputVolume(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600105C")]
	[Address(RVA = "0xFF6724", Offset = "0xFF6724", VA = "0xFF6724")]
	public static extern int CSharp_GetDeviceSpatialAudioSupport(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600105D")]
	[Address(RVA = "0xFF6808", Offset = "0xFF6808", VA = "0xFF6808")]
	public static extern int CSharp_Suspend__SWIG_0(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x600105E")]
	[Address(RVA = "0xFF68E4", Offset = "0xFF68E4", VA = "0xFF68E4")]
	public static extern int CSharp_Suspend__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x600105F")]
	[Address(RVA = "0xFF69B4", Offset = "0xFF69B4", VA = "0xFF69B4")]
	public static extern int CSharp_WakeupFromSuspend();

	[PreserveSig]
	[Token(Token = "0x6001060")]
	[Address(RVA = "0xFF6A84", Offset = "0xFF6A84", VA = "0xFF6A84")]
	public static extern uint CSharp_GetBufferTick();

	[PreserveSig]
	[Token(Token = "0x6001061")]
	[Address(RVA = "0xFE418C", Offset = "0xFE418C", VA = "0xFE418C")]
	public static extern void CSharp_AkSegmentInfo_iCurrentPosition_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001062")]
	[Address(RVA = "0xFE4284", Offset = "0xFE4284", VA = "0xFE4284")]
	public static extern int CSharp_AkSegmentInfo_iCurrentPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001063")]
	[Address(RVA = "0xFE437C", Offset = "0xFE437C", VA = "0xFE437C")]
	public static extern void CSharp_AkSegmentInfo_iPreEntryDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001064")]
	[Address(RVA = "0xFE4474", Offset = "0xFE4474", VA = "0xFE4474")]
	public static extern int CSharp_AkSegmentInfo_iPreEntryDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001065")]
	[Address(RVA = "0xFE456C", Offset = "0xFE456C", VA = "0xFE456C")]
	public static extern void CSharp_AkSegmentInfo_iActiveDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001066")]
	[Address(RVA = "0xFE4664", Offset = "0xFE4664", VA = "0xFE4664")]
	public static extern int CSharp_AkSegmentInfo_iActiveDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001067")]
	[Address(RVA = "0xFE475C", Offset = "0xFE475C", VA = "0xFE475C")]
	public static extern void CSharp_AkSegmentInfo_iPostExitDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001068")]
	[Address(RVA = "0xFE4854", Offset = "0xFE4854", VA = "0xFE4854")]
	public static extern int CSharp_AkSegmentInfo_iPostExitDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001069")]
	[Address(RVA = "0xFE494C", Offset = "0xFE494C", VA = "0xFE494C")]
	public static extern void CSharp_AkSegmentInfo_iRemainingLookAheadTime_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600106A")]
	[Address(RVA = "0xFE4A44", Offset = "0xFE4A44", VA = "0xFE4A44")]
	public static extern int CSharp_AkSegmentInfo_iRemainingLookAheadTime_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600106B")]
	[Address(RVA = "0xFE4B3C", Offset = "0xFE4B3C", VA = "0xFE4B3C")]
	public static extern void CSharp_AkSegmentInfo_fBeatDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600106C")]
	[Address(RVA = "0xFE4C34", Offset = "0xFE4C34", VA = "0xFE4C34")]
	public static extern float CSharp_AkSegmentInfo_fBeatDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600106D")]
	[Address(RVA = "0xFE4D2C", Offset = "0xFE4D2C", VA = "0xFE4D2C")]
	public static extern void CSharp_AkSegmentInfo_fBarDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600106E")]
	[Address(RVA = "0xFE4E24", Offset = "0xFE4E24", VA = "0xFE4E24")]
	public static extern float CSharp_AkSegmentInfo_fBarDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600106F")]
	[Address(RVA = "0xFE4F1C", Offset = "0xFE4F1C", VA = "0xFE4F1C")]
	public static extern void CSharp_AkSegmentInfo_fGridDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001070")]
	[Address(RVA = "0xFE5014", Offset = "0xFE5014", VA = "0xFE5014")]
	public static extern float CSharp_AkSegmentInfo_fGridDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001071")]
	[Address(RVA = "0xFE510C", Offset = "0xFE510C", VA = "0xFE510C")]
	public static extern void CSharp_AkSegmentInfo_fGridOffset_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001072")]
	[Address(RVA = "0xFE5204", Offset = "0xFE5204", VA = "0xFE5204")]
	public static extern float CSharp_AkSegmentInfo_fGridOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001073")]
	[Address(RVA = "0xFE5304", Offset = "0xFE5304", VA = "0xFE5304")]
	public static extern IntPtr CSharp_new_AkSegmentInfo();

	[PreserveSig]
	[Token(Token = "0x6001074")]
	[Address(RVA = "0xFE4094", Offset = "0xFE4094", VA = "0xFE4094")]
	public static extern void CSharp_delete_AkSegmentInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001075")]
	[Address(RVA = "0xFF6B54", Offset = "0xFF6B54", VA = "0xFF6B54")]
	public static extern byte CSharp_AK_INVALID_MIDI_CHANNEL_get();

	[PreserveSig]
	[Token(Token = "0x6001076")]
	[Address(RVA = "0xFF6C24", Offset = "0xFF6C24", VA = "0xFF6C24")]
	public static extern byte CSharp_AK_INVALID_MIDI_NOTE_get();

	[PreserveSig]
	[Token(Token = "0x6001077")]
	[Address(RVA = "0x1007948", Offset = "0x1007948", VA = "0x1007948")]
	public static extern void CSharp_AkMIDIEvent_byChan_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001078")]
	[Address(RVA = "0x10079D8", Offset = "0x10079D8", VA = "0x10079D8")]
	public static extern byte CSharp_AkMIDIEvent_byChan_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001079")]
	[Address(RVA = "0x1007A58", Offset = "0x1007A58", VA = "0x1007A58")]
	public static extern void CSharp_AkMIDIEvent_tGen_byParam1_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600107A")]
	[Address(RVA = "0x1007AE8", Offset = "0x1007AE8", VA = "0x1007AE8")]
	public static extern byte CSharp_AkMIDIEvent_tGen_byParam1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600107B")]
	[Address(RVA = "0x1007B68", Offset = "0x1007B68", VA = "0x1007B68")]
	public static extern void CSharp_AkMIDIEvent_tGen_byParam2_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600107C")]
	[Address(RVA = "0x1007BF8", Offset = "0x1007BF8", VA = "0x1007BF8")]
	public static extern byte CSharp_AkMIDIEvent_tGen_byParam2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600107D")]
	[Address(RVA = "0x1007C78", Offset = "0x1007C78", VA = "0x1007C78")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tGen();

	[PreserveSig]
	[Token(Token = "0x600107E")]
	[Address(RVA = "0x1007CEC", Offset = "0x1007CEC", VA = "0x1007CEC")]
	public static extern void CSharp_delete_AkMIDIEvent_tGen(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600107F")]
	[Address(RVA = "0x1007D6C", Offset = "0x1007D6C", VA = "0x1007D6C")]
	public static extern void CSharp_AkMIDIEvent_tNoteOnOff_byNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001080")]
	[Address(RVA = "0x1007DFC", Offset = "0x1007DFC", VA = "0x1007DFC")]
	public static extern byte CSharp_AkMIDIEvent_tNoteOnOff_byNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001081")]
	[Address(RVA = "0x1007E7C", Offset = "0x1007E7C", VA = "0x1007E7C")]
	public static extern void CSharp_AkMIDIEvent_tNoteOnOff_byVelocity_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001082")]
	[Address(RVA = "0x1007F0C", Offset = "0x1007F0C", VA = "0x1007F0C")]
	public static extern byte CSharp_AkMIDIEvent_tNoteOnOff_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001083")]
	[Address(RVA = "0x1007F8C", Offset = "0x1007F8C", VA = "0x1007F8C")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tNoteOnOff();

	[PreserveSig]
	[Token(Token = "0x6001084")]
	[Address(RVA = "0x1008000", Offset = "0x1008000", VA = "0x1008000")]
	public static extern void CSharp_delete_AkMIDIEvent_tNoteOnOff(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001085")]
	[Address(RVA = "0x1008080", Offset = "0x1008080", VA = "0x1008080")]
	public static extern void CSharp_AkMIDIEvent_tCc_byCc_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001086")]
	[Address(RVA = "0x1008110", Offset = "0x1008110", VA = "0x1008110")]
	public static extern byte CSharp_AkMIDIEvent_tCc_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001087")]
	[Address(RVA = "0x1008190", Offset = "0x1008190", VA = "0x1008190")]
	public static extern void CSharp_AkMIDIEvent_tCc_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001088")]
	[Address(RVA = "0x1008220", Offset = "0x1008220", VA = "0x1008220")]
	public static extern byte CSharp_AkMIDIEvent_tCc_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001089")]
	[Address(RVA = "0x10082A0", Offset = "0x10082A0", VA = "0x10082A0")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tCc();

	[PreserveSig]
	[Token(Token = "0x600108A")]
	[Address(RVA = "0x1008314", Offset = "0x1008314", VA = "0x1008314")]
	public static extern void CSharp_delete_AkMIDIEvent_tCc(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600108B")]
	[Address(RVA = "0x1008394", Offset = "0x1008394", VA = "0x1008394")]
	public static extern void CSharp_AkMIDIEvent_tPitchBend_byValueLsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600108C")]
	[Address(RVA = "0x1008424", Offset = "0x1008424", VA = "0x1008424")]
	public static extern byte CSharp_AkMIDIEvent_tPitchBend_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600108D")]
	[Address(RVA = "0x10084A4", Offset = "0x10084A4", VA = "0x10084A4")]
	public static extern void CSharp_AkMIDIEvent_tPitchBend_byValueMsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600108E")]
	[Address(RVA = "0x1008534", Offset = "0x1008534", VA = "0x1008534")]
	public static extern byte CSharp_AkMIDIEvent_tPitchBend_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600108F")]
	[Address(RVA = "0x10085B4", Offset = "0x10085B4", VA = "0x10085B4")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tPitchBend();

	[PreserveSig]
	[Token(Token = "0x6001090")]
	[Address(RVA = "0x1008628", Offset = "0x1008628", VA = "0x1008628")]
	public static extern void CSharp_delete_AkMIDIEvent_tPitchBend(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001091")]
	[Address(RVA = "0x10086A8", Offset = "0x10086A8", VA = "0x10086A8")]
	public static extern void CSharp_AkMIDIEvent_tNoteAftertouch_byNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001092")]
	[Address(RVA = "0x1008738", Offset = "0x1008738", VA = "0x1008738")]
	public static extern byte CSharp_AkMIDIEvent_tNoteAftertouch_byNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001093")]
	[Address(RVA = "0x10087B8", Offset = "0x10087B8", VA = "0x10087B8")]
	public static extern void CSharp_AkMIDIEvent_tNoteAftertouch_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001094")]
	[Address(RVA = "0x1008848", Offset = "0x1008848", VA = "0x1008848")]
	public static extern byte CSharp_AkMIDIEvent_tNoteAftertouch_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001095")]
	[Address(RVA = "0x10088C8", Offset = "0x10088C8", VA = "0x10088C8")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tNoteAftertouch();

	[PreserveSig]
	[Token(Token = "0x6001096")]
	[Address(RVA = "0x100893C", Offset = "0x100893C", VA = "0x100893C")]
	public static extern void CSharp_delete_AkMIDIEvent_tNoteAftertouch(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001097")]
	[Address(RVA = "0x10089BC", Offset = "0x10089BC", VA = "0x10089BC")]
	public static extern void CSharp_AkMIDIEvent_tChanAftertouch_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001098")]
	[Address(RVA = "0x1008A4C", Offset = "0x1008A4C", VA = "0x1008A4C")]
	public static extern byte CSharp_AkMIDIEvent_tChanAftertouch_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001099")]
	[Address(RVA = "0x1008ACC", Offset = "0x1008ACC", VA = "0x1008ACC")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tChanAftertouch();

	[PreserveSig]
	[Token(Token = "0x600109A")]
	[Address(RVA = "0x1008B40", Offset = "0x1008B40", VA = "0x1008B40")]
	public static extern void CSharp_delete_AkMIDIEvent_tChanAftertouch(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600109B")]
	[Address(RVA = "0x1008BC0", Offset = "0x1008BC0", VA = "0x1008BC0")]
	public static extern void CSharp_AkMIDIEvent_tProgramChange_byProgramNum_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600109C")]
	[Address(RVA = "0x1008C50", Offset = "0x1008C50", VA = "0x1008C50")]
	public static extern byte CSharp_AkMIDIEvent_tProgramChange_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600109D")]
	[Address(RVA = "0x1008CD0", Offset = "0x1008CD0", VA = "0x1008CD0")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tProgramChange();

	[PreserveSig]
	[Token(Token = "0x600109E")]
	[Address(RVA = "0x1008D44", Offset = "0x1008D44", VA = "0x1008D44")]
	public static extern void CSharp_delete_AkMIDIEvent_tProgramChange(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600109F")]
	[Address(RVA = "0x1008DC4", Offset = "0x1008DC4", VA = "0x1008DC4")]
	public static extern void CSharp_AkMIDIEvent_Gen_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60010A0")]
	[Address(RVA = "0x1008E54", Offset = "0x1008E54", VA = "0x1008E54")]
	public static extern IntPtr CSharp_AkMIDIEvent_Gen_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010A1")]
	[Address(RVA = "0x1008ED4", Offset = "0x1008ED4", VA = "0x1008ED4")]
	public static extern void CSharp_AkMIDIEvent_Cc_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60010A2")]
	[Address(RVA = "0x1008F64", Offset = "0x1008F64", VA = "0x1008F64")]
	public static extern IntPtr CSharp_AkMIDIEvent_Cc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010A3")]
	[Address(RVA = "0x1008FE4", Offset = "0x1008FE4", VA = "0x1008FE4")]
	public static extern void CSharp_AkMIDIEvent_NoteOnOff_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x1009074", Offset = "0x1009074", VA = "0x1009074")]
	public static extern IntPtr CSharp_AkMIDIEvent_NoteOnOff_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x10090F4", Offset = "0x10090F4", VA = "0x10090F4")]
	public static extern void CSharp_AkMIDIEvent_PitchBend_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60010A6")]
	[Address(RVA = "0x1009184", Offset = "0x1009184", VA = "0x1009184")]
	public static extern IntPtr CSharp_AkMIDIEvent_PitchBend_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010A7")]
	[Address(RVA = "0x1009204", Offset = "0x1009204", VA = "0x1009204")]
	public static extern void CSharp_AkMIDIEvent_NoteAftertouch_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60010A8")]
	[Address(RVA = "0x1009294", Offset = "0x1009294", VA = "0x1009294")]
	public static extern IntPtr CSharp_AkMIDIEvent_NoteAftertouch_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010A9")]
	[Address(RVA = "0x1009314", Offset = "0x1009314", VA = "0x1009314")]
	public static extern void CSharp_AkMIDIEvent_ChanAftertouch_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x10093A4", Offset = "0x10093A4", VA = "0x10093A4")]
	public static extern IntPtr CSharp_AkMIDIEvent_ChanAftertouch_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x1009424", Offset = "0x1009424", VA = "0x1009424")]
	public static extern void CSharp_AkMIDIEvent_ProgramChange_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x10094B4", Offset = "0x10094B4", VA = "0x10094B4")]
	public static extern IntPtr CSharp_AkMIDIEvent_ProgramChange_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010AD")]
	[Address(RVA = "0x1009534", Offset = "0x1009534", VA = "0x1009534")]
	public static extern void CSharp_AkMIDIEvent_byType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60010AE")]
	[Address(RVA = "0x10095C4", Offset = "0x10095C4", VA = "0x10095C4")]
	public static extern int CSharp_AkMIDIEvent_byType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010AF")]
	[Address(RVA = "0x1009644", Offset = "0x1009644", VA = "0x1009644")]
	public static extern void CSharp_AkMIDIEvent_byOnOffNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x60010B0")]
	[Address(RVA = "0x10096D4", Offset = "0x10096D4", VA = "0x10096D4")]
	public static extern byte CSharp_AkMIDIEvent_byOnOffNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010B1")]
	[Address(RVA = "0x1009754", Offset = "0x1009754", VA = "0x1009754")]
	public static extern void CSharp_AkMIDIEvent_byVelocity_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x60010B2")]
	[Address(RVA = "0x10097E4", Offset = "0x10097E4", VA = "0x10097E4")]
	public static extern byte CSharp_AkMIDIEvent_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010B3")]
	[Address(RVA = "0x1009864", Offset = "0x1009864", VA = "0x1009864")]
	public static extern void CSharp_AkMIDIEvent_byCc_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60010B4")]
	[Address(RVA = "0x10098F4", Offset = "0x10098F4", VA = "0x10098F4")]
	public static extern int CSharp_AkMIDIEvent_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010B5")]
	[Address(RVA = "0x1009974", Offset = "0x1009974", VA = "0x1009974")]
	public static extern void CSharp_AkMIDIEvent_byCcValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x1009A04", Offset = "0x1009A04", VA = "0x1009A04")]
	public static extern byte CSharp_AkMIDIEvent_byCcValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x1009A84", Offset = "0x1009A84", VA = "0x1009A84")]
	public static extern void CSharp_AkMIDIEvent_byValueLsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x1009B14", Offset = "0x1009B14", VA = "0x1009B14")]
	public static extern byte CSharp_AkMIDIEvent_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010B9")]
	[Address(RVA = "0x1009B94", Offset = "0x1009B94", VA = "0x1009B94")]
	public static extern void CSharp_AkMIDIEvent_byValueMsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x1009C24", Offset = "0x1009C24", VA = "0x1009C24")]
	public static extern byte CSharp_AkMIDIEvent_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x1009CA4", Offset = "0x1009CA4", VA = "0x1009CA4")]
	public static extern void CSharp_AkMIDIEvent_byAftertouchNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x1009D34", Offset = "0x1009D34", VA = "0x1009D34")]
	public static extern byte CSharp_AkMIDIEvent_byAftertouchNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x1009DB4", Offset = "0x1009DB4", VA = "0x1009DB4")]
	public static extern void CSharp_AkMIDIEvent_byNoteAftertouchValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x1009E44", Offset = "0x1009E44", VA = "0x1009E44")]
	public static extern byte CSharp_AkMIDIEvent_byNoteAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x1009EC4", Offset = "0x1009EC4", VA = "0x1009EC4")]
	public static extern void CSharp_AkMIDIEvent_byChanAftertouchValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x1009F54", Offset = "0x1009F54", VA = "0x1009F54")]
	public static extern byte CSharp_AkMIDIEvent_byChanAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010C1")]
	[Address(RVA = "0x1009FD4", Offset = "0x1009FD4", VA = "0x1009FD4")]
	public static extern void CSharp_AkMIDIEvent_byProgramNum_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x100A064", Offset = "0x100A064", VA = "0x100A064")]
	public static extern byte CSharp_AkMIDIEvent_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010C3")]
	[Address(RVA = "0x100A0E4", Offset = "0x100A0E4", VA = "0x100A0E4")]
	public static extern IntPtr CSharp_new_AkMIDIEvent();

	[PreserveSig]
	[Token(Token = "0x60010C4")]
	[Address(RVA = "0x100A158", Offset = "0x100A158", VA = "0x100A158")]
	public static extern void CSharp_delete_AkMIDIEvent(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010C5")]
	[Address(RVA = "0x100A1D8", Offset = "0x100A1D8", VA = "0x100A1D8")]
	public static extern void CSharp_AkMIDIPost_uOffset_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x100A268", Offset = "0x100A268", VA = "0x100A268")]
	public static extern uint CSharp_AkMIDIPost_uOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010C7")]
	[Address(RVA = "0x100A2E8", Offset = "0x100A2E8", VA = "0x100A2E8")]
	public static extern int CSharp_AkMIDIPost_PostOnEvent(IntPtr jarg1, uint jarg2, ulong jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x100A390", Offset = "0x100A390", VA = "0x100A390")]
	public static extern void CSharp_AkMIDIPost_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x100A420", Offset = "0x100A420", VA = "0x100A420")]
	public static extern int CSharp_AkMIDIPost_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x100A494", Offset = "0x100A494", VA = "0x100A494")]
	public static extern IntPtr CSharp_new_AkMIDIPost();

	[PreserveSig]
	[Token(Token = "0x60010CB")]
	[Address(RVA = "0x100A508", Offset = "0x100A508", VA = "0x100A508")]
	public static extern void CSharp_delete_AkMIDIPost(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x100A588", Offset = "0x100A588", VA = "0x100A588")]
	public static extern IntPtr CSharp_new_AkMemSettings();

	[PreserveSig]
	[Token(Token = "0x60010CD")]
	[Address(RVA = "0x100A5FC", Offset = "0x100A5FC", VA = "0x100A5FC")]
	public static extern void CSharp_AkMemSettings_uMaxNumPools_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60010CE")]
	[Address(RVA = "0x100A68C", Offset = "0x100A68C", VA = "0x100A68C")]
	public static extern uint CSharp_AkMemSettings_uMaxNumPools_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010CF")]
	[Address(RVA = "0x100A70C", Offset = "0x100A70C", VA = "0x100A70C")]
	public static extern void CSharp_AkMemSettings_uDebugFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60010D0")]
	[Address(RVA = "0x100A79C", Offset = "0x100A79C", VA = "0x100A79C")]
	public static extern uint CSharp_AkMemSettings_uDebugFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x100A81C", Offset = "0x100A81C", VA = "0x100A81C")]
	public static extern void CSharp_delete_AkMemSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x100A89C", Offset = "0x100A89C", VA = "0x100A89C")]
	public static extern void CSharp_AkMusicSettings_fStreamingLookAheadRatio_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60010D3")]
	[Address(RVA = "0x100A92C", Offset = "0x100A92C", VA = "0x100A92C")]
	public static extern float CSharp_AkMusicSettings_fStreamingLookAheadRatio_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x100A9AC", Offset = "0x100A9AC", VA = "0x100A9AC")]
	public static extern IntPtr CSharp_new_AkMusicSettings();

	[PreserveSig]
	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x100AA20", Offset = "0x100AA20", VA = "0x100AA20")]
	public static extern void CSharp_delete_AkMusicSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010D6")]
	[Address(RVA = "0xFF6D40", Offset = "0xFF6D40", VA = "0xFF6D40")]
	public static extern int CSharp_GetPlayingSegmentInfo__SWIG_0(uint jarg1, IntPtr jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x60010D7")]
	[Address(RVA = "0xFF6E78", Offset = "0xFF6E78", VA = "0xFF6E78")]
	public static extern int CSharp_GetPlayingSegmentInfo__SWIG_1(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60010D8")]
	[Address(RVA = "0xFE56CC", Offset = "0xFE56CC", VA = "0xFE56CC")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pPackage_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xFE57F8", Offset = "0xFE57F8", VA = "0xFE57F8")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pNext_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xFE58E0", Offset = "0xFE58E0", VA = "0xFE58E0")]
	public static extern int CSharp_AkSerializedCallbackHeader_eType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xFE59C8", Offset = "0xFE59C8", VA = "0xFE59C8")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_GetData(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010DC")]
	[Address(RVA = "0xFE5AC8", Offset = "0xFE5AC8", VA = "0xFE5AC8")]
	public static extern IntPtr CSharp_new_AkSerializedCallbackHeader();

	[PreserveSig]
	[Token(Token = "0x60010DD")]
	[Address(RVA = "0xFE55E4", Offset = "0xFE55E4", VA = "0xFE55E4")]
	public static extern void CSharp_delete_AkSerializedCallbackHeader(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x100AAA0", Offset = "0x100AAA0", VA = "0x100AAA0")]
	public static extern IntPtr CSharp_AkCallbackInfo_pCookie_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x100AB20", Offset = "0x100AB20", VA = "0x100AB20")]
	public static extern ulong CSharp_AkCallbackInfo_gameObjID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x100ABA0", Offset = "0x100ABA0", VA = "0x100ABA0")]
	public static extern IntPtr CSharp_new_AkCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x100AC14", Offset = "0x100AC14", VA = "0x100AC14")]
	public static extern void CSharp_delete_AkCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x100AC94", Offset = "0x100AC94", VA = "0x100AC94")]
	public static extern uint CSharp_AkEventCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x100AD14", Offset = "0x100AD14", VA = "0x100AD14")]
	public static extern uint CSharp_AkEventCallbackInfo_eventID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010E4")]
	[Address(RVA = "0x100AD94", Offset = "0x100AD94", VA = "0x100AD94")]
	public static extern IntPtr CSharp_new_AkEventCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60010E5")]
	[Address(RVA = "0x100AE08", Offset = "0x100AE08", VA = "0x100AE08")]
	public static extern void CSharp_delete_AkEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010E6")]
	[Address(RVA = "0x100AE88", Offset = "0x100AE88", VA = "0x100AE88")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byChan_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010E7")]
	[Address(RVA = "0x100AF08", Offset = "0x100AF08", VA = "0x100AF08")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byParam1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010E8")]
	[Address(RVA = "0x100AF88", Offset = "0x100AF88", VA = "0x100AF88")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byParam2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010E9")]
	[Address(RVA = "0x100B008", Offset = "0x100B008", VA = "0x100B008")]
	public static extern int CSharp_AkMIDIEventCallbackInfo_byType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010EA")]
	[Address(RVA = "0x100B088", Offset = "0x100B088", VA = "0x100B088")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byOnOffNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010EB")]
	[Address(RVA = "0x100B108", Offset = "0x100B108", VA = "0x100B108")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010EC")]
	[Address(RVA = "0x100B188", Offset = "0x100B188", VA = "0x100B188")]
	public static extern int CSharp_AkMIDIEventCallbackInfo_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010ED")]
	[Address(RVA = "0x100B208", Offset = "0x100B208", VA = "0x100B208")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byCcValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010EE")]
	[Address(RVA = "0x100B288", Offset = "0x100B288", VA = "0x100B288")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010EF")]
	[Address(RVA = "0x100B308", Offset = "0x100B308", VA = "0x100B308")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010F0")]
	[Address(RVA = "0x100B388", Offset = "0x100B388", VA = "0x100B388")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byAftertouchNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010F1")]
	[Address(RVA = "0x100B408", Offset = "0x100B408", VA = "0x100B408")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byNoteAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010F2")]
	[Address(RVA = "0x100B488", Offset = "0x100B488", VA = "0x100B488")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byChanAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010F3")]
	[Address(RVA = "0x100B508", Offset = "0x100B508", VA = "0x100B508")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010F4")]
	[Address(RVA = "0x100B588", Offset = "0x100B588", VA = "0x100B588")]
	public static extern IntPtr CSharp_new_AkMIDIEventCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60010F5")]
	[Address(RVA = "0x100B5FC", Offset = "0x100B5FC", VA = "0x100B5FC")]
	public static extern void CSharp_delete_AkMIDIEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010F6")]
	[Address(RVA = "0x100B67C", Offset = "0x100B67C", VA = "0x100B67C")]
	public static extern uint CSharp_AkMarkerCallbackInfo_uIdentifier_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010F7")]
	[Address(RVA = "0x100B6FC", Offset = "0x100B6FC", VA = "0x100B6FC")]
	public static extern uint CSharp_AkMarkerCallbackInfo_uPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010F8")]
	[Address(RVA = "0x100B77C", Offset = "0x100B77C", VA = "0x100B77C")]
	public static extern IntPtr CSharp_AkMarkerCallbackInfo_strLabel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010F9")]
	[Address(RVA = "0x100B7FC", Offset = "0x100B7FC", VA = "0x100B7FC")]
	public static extern IntPtr CSharp_new_AkMarkerCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60010FA")]
	[Address(RVA = "0x100B870", Offset = "0x100B870", VA = "0x100B870")]
	public static extern void CSharp_delete_AkMarkerCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010FB")]
	[Address(RVA = "0x100B8F0", Offset = "0x100B8F0", VA = "0x100B8F0")]
	public static extern float CSharp_AkDurationCallbackInfo_fDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010FC")]
	[Address(RVA = "0x100B970", Offset = "0x100B970", VA = "0x100B970")]
	public static extern float CSharp_AkDurationCallbackInfo_fEstimatedDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010FD")]
	[Address(RVA = "0x100B9F0", Offset = "0x100B9F0", VA = "0x100B9F0")]
	public static extern uint CSharp_AkDurationCallbackInfo_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010FE")]
	[Address(RVA = "0x100BA70", Offset = "0x100BA70", VA = "0x100BA70")]
	public static extern uint CSharp_AkDurationCallbackInfo_mediaID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60010FF")]
	[Address(RVA = "0x100BAF0", Offset = "0x100BAF0", VA = "0x100BAF0")]
	public static extern bool CSharp_AkDurationCallbackInfo_bStreaming_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001100")]
	[Address(RVA = "0x100BB78", Offset = "0x100BB78", VA = "0x100BB78")]
	public static extern IntPtr CSharp_new_AkDurationCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001101")]
	[Address(RVA = "0x100BBEC", Offset = "0x100BBEC", VA = "0x100BBEC")]
	public static extern void CSharp_delete_AkDurationCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001102")]
	[Address(RVA = "0x100BC6C", Offset = "0x100BC6C", VA = "0x100BC6C")]
	public static extern uint CSharp_AkDynamicSequenceItemCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001103")]
	[Address(RVA = "0x100BCEC", Offset = "0x100BCEC", VA = "0x100BCEC")]
	public static extern uint CSharp_AkDynamicSequenceItemCallbackInfo_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001104")]
	[Address(RVA = "0x100BD6C", Offset = "0x100BD6C", VA = "0x100BD6C")]
	public static extern IntPtr CSharp_AkDynamicSequenceItemCallbackInfo_pCustomInfo_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001105")]
	[Address(RVA = "0x100BDEC", Offset = "0x100BDEC", VA = "0x100BDEC")]
	public static extern IntPtr CSharp_new_AkDynamicSequenceItemCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001106")]
	[Address(RVA = "0x100BE60", Offset = "0x100BE60", VA = "0x100BE60")]
	public static extern void CSharp_delete_AkDynamicSequenceItemCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001107")]
	[Address(RVA = "0x100BEE0", Offset = "0x100BEE0", VA = "0x100BEE0")]
	public static extern uint CSharp_AkMusicSyncCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001108")]
	[Address(RVA = "0x100BF60", Offset = "0x100BF60", VA = "0x100BF60")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iCurrentPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001109")]
	[Address(RVA = "0x100BFE0", Offset = "0x100BFE0", VA = "0x100BFE0")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iPreEntryDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600110A")]
	[Address(RVA = "0x100C060", Offset = "0x100C060", VA = "0x100C060")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iActiveDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600110B")]
	[Address(RVA = "0x100C0E0", Offset = "0x100C0E0", VA = "0x100C0E0")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iPostExitDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600110C")]
	[Address(RVA = "0x100C160", Offset = "0x100C160", VA = "0x100C160")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iRemainingLookAheadTime_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600110D")]
	[Address(RVA = "0x100C1E0", Offset = "0x100C1E0", VA = "0x100C1E0")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fBeatDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600110E")]
	[Address(RVA = "0x100C260", Offset = "0x100C260", VA = "0x100C260")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fBarDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600110F")]
	[Address(RVA = "0x100C2E0", Offset = "0x100C2E0", VA = "0x100C2E0")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fGridDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001110")]
	[Address(RVA = "0x100C360", Offset = "0x100C360", VA = "0x100C360")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fGridOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001111")]
	[Address(RVA = "0x100C3E0", Offset = "0x100C3E0", VA = "0x100C3E0")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_musicSyncType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001112")]
	[Address(RVA = "0x100C460", Offset = "0x100C460", VA = "0x100C460")]
	public static extern IntPtr CSharp_AkMusicSyncCallbackInfo_userCueName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001113")]
	[Address(RVA = "0x100C4E0", Offset = "0x100C4E0", VA = "0x100C4E0")]
	public static extern IntPtr CSharp_new_AkMusicSyncCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001114")]
	[Address(RVA = "0x100C554", Offset = "0x100C554", VA = "0x100C554")]
	public static extern void CSharp_delete_AkMusicSyncCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001115")]
	[Address(RVA = "0x100C5D4", Offset = "0x100C5D4", VA = "0x100C5D4")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_playlistID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001116")]
	[Address(RVA = "0x100C654", Offset = "0x100C654", VA = "0x100C654")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uNumPlaylistItems_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001117")]
	[Address(RVA = "0x100C6D4", Offset = "0x100C6D4", VA = "0x100C6D4")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uPlaylistSelection_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001118")]
	[Address(RVA = "0x100C754", Offset = "0x100C754", VA = "0x100C754")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uPlaylistItemDone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001119")]
	[Address(RVA = "0x100C7D4", Offset = "0x100C7D4", VA = "0x100C7D4")]
	public static extern IntPtr CSharp_new_AkMusicPlaylistCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x600111A")]
	[Address(RVA = "0x100C848", Offset = "0x100C848", VA = "0x100C848")]
	public static extern void CSharp_delete_AkMusicPlaylistCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600111B")]
	[Address(RVA = "0x100C8C8", Offset = "0x100C8C8", VA = "0x100C8C8")]
	public static extern uint CSharp_AkBankCallbackInfo_bankID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600111C")]
	[Address(RVA = "0x100C948", Offset = "0x100C948", VA = "0x100C948")]
	public static extern IntPtr CSharp_AkBankCallbackInfo_inMemoryBankPtr_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600111D")]
	[Address(RVA = "0x100C9C8", Offset = "0x100C9C8", VA = "0x100C9C8")]
	public static extern int CSharp_AkBankCallbackInfo_loadResult_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600111E")]
	[Address(RVA = "0x100CA48", Offset = "0x100CA48", VA = "0x100CA48")]
	public static extern int CSharp_AkBankCallbackInfo_memPoolId_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600111F")]
	[Address(RVA = "0x100CAC8", Offset = "0x100CAC8", VA = "0x100CAC8")]
	public static extern IntPtr CSharp_new_AkBankCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001120")]
	[Address(RVA = "0x100CB3C", Offset = "0x100CB3C", VA = "0x100CB3C")]
	public static extern void CSharp_delete_AkBankCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001121")]
	[Address(RVA = "0x100CBBC", Offset = "0x100CBBC", VA = "0x100CBBC")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorCode_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001122")]
	[Address(RVA = "0x100CC3C", Offset = "0x100CC3C", VA = "0x100CC3C")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001123")]
	[Address(RVA = "0x100CCBC", Offset = "0x100CCBC", VA = "0x100CCBC")]
	public static extern uint CSharp_AkMonitoringCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001124")]
	[Address(RVA = "0x100CD3C", Offset = "0x100CD3C", VA = "0x100CD3C")]
	public static extern ulong CSharp_AkMonitoringCallbackInfo_gameObjID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001125")]
	[Address(RVA = "0x100CDBC", Offset = "0x100CDBC", VA = "0x100CDBC")]
	public static extern IntPtr CSharp_AkMonitoringCallbackInfo_message_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001126")]
	[Address(RVA = "0x100CE3C", Offset = "0x100CE3C", VA = "0x100CE3C")]
	public static extern IntPtr CSharp_new_AkMonitoringCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001127")]
	[Address(RVA = "0x100CEB0", Offset = "0x100CEB0", VA = "0x100CEB0")]
	public static extern void CSharp_delete_AkMonitoringCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001128")]
	[Address(RVA = "0x100CF30", Offset = "0x100CF30", VA = "0x100CF30")]
	public static extern bool CSharp_AkAudioInterruptionCallbackInfo_bEnterInterruption_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001129")]
	[Address(RVA = "0x100CFB8", Offset = "0x100CFB8", VA = "0x100CFB8")]
	public static extern IntPtr CSharp_new_AkAudioInterruptionCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x600112A")]
	[Address(RVA = "0x100D02C", Offset = "0x100D02C", VA = "0x100D02C")]
	public static extern void CSharp_delete_AkAudioInterruptionCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600112B")]
	[Address(RVA = "0x100D0AC", Offset = "0x100D0AC", VA = "0x100D0AC")]
	public static extern bool CSharp_AkAudioSourceChangeCallbackInfo_bOtherAudioPlaying_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600112C")]
	[Address(RVA = "0x100D134", Offset = "0x100D134", VA = "0x100D134")]
	public static extern IntPtr CSharp_new_AkAudioSourceChangeCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x600112D")]
	[Address(RVA = "0x100D1A8", Offset = "0x100D1A8", VA = "0x100D1A8")]
	public static extern void CSharp_delete_AkAudioSourceChangeCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600112E")]
	[Address(RVA = "0x100D228", Offset = "0x100D228", VA = "0x100D228")]
	public static extern int CSharp_AkCallbackSerializer_Init(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600112F")]
	[Address(RVA = "0x100D2B8", Offset = "0x100D2B8", VA = "0x100D2B8")]
	public static extern void CSharp_AkCallbackSerializer_Term();

	[PreserveSig]
	[Token(Token = "0x6001130")]
	[Address(RVA = "0x100D328", Offset = "0x100D328", VA = "0x100D328")]
	public static extern IntPtr CSharp_AkCallbackSerializer_Lock();

	[PreserveSig]
	[Token(Token = "0x6001131")]
	[Address(RVA = "0x100D39C", Offset = "0x100D39C", VA = "0x100D39C")]
	public static extern void CSharp_AkCallbackSerializer_SetLocalOutput(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001132")]
	[Address(RVA = "0x100D41C", Offset = "0x100D41C", VA = "0x100D41C")]
	public static extern void CSharp_AkCallbackSerializer_Unlock();

	[PreserveSig]
	[Token(Token = "0x6001133")]
	[Address(RVA = "0x100D48C", Offset = "0x100D48C", VA = "0x100D48C")]
	public static extern int CSharp_AkCallbackSerializer_AudioSourceChangeCallbackFunc(bool jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001134")]
	[Address(RVA = "0x100D51C", Offset = "0x100D51C", VA = "0x100D51C")]
	public static extern IntPtr CSharp_new_AkCallbackSerializer();

	[PreserveSig]
	[Token(Token = "0x6001135")]
	[Address(RVA = "0x100D590", Offset = "0x100D590", VA = "0x100D590")]
	public static extern void CSharp_delete_AkCallbackSerializer(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001136")]
	[Address(RVA = "0xFF6FE4", Offset = "0xFF6FE4", VA = "0xFF6FE4")]
	public static extern int CSharp_PostCode__SWIG_0(int jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6001137")]
	[Address(RVA = "0xFF7170", Offset = "0xFF7170", VA = "0xFF7170")]
	public static extern int CSharp_PostCode__SWIG_1(int jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001138")]
	[Address(RVA = "0xFF72E4", Offset = "0xFF72E4", VA = "0xFF72E4")]
	public static extern int CSharp_PostCode__SWIG_2(int jarg1, int jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6001139")]
	[Address(RVA = "0xFF7408", Offset = "0xFF7408", VA = "0xFF7408")]
	public static extern int CSharp_PostCode__SWIG_3(int jarg1, int jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600113A")]
	[Address(RVA = "0xFF7514", Offset = "0xFF7514", VA = "0xFF7514")]
	public static extern int CSharp_PostCode__SWIG_4(int jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600113B")]
	[Address(RVA = "0xFF7680", Offset = "0xFF7680", VA = "0xFF7680")]
	public static extern int CSharp_PostString__SWIG_0(string jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x600113C")]
	[Address(RVA = "0xFF7824", Offset = "0xFF7824", VA = "0xFF7824")]
	public static extern int CSharp_PostString__SWIG_1(string jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x600113D")]
	[Address(RVA = "0xFF79B0", Offset = "0xFF79B0", VA = "0xFF79B0")]
	public static extern int CSharp_PostString__SWIG_2(string jarg1, int jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x600113E")]
	[Address(RVA = "0xFF7AEC", Offset = "0xFF7AEC", VA = "0xFF7AEC")]
	public static extern int CSharp_PostString__SWIG_3(string jarg1, int jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600113F")]
	[Address(RVA = "0xFF7C10", Offset = "0xFF7C10", VA = "0xFF7C10")]
	public static extern int CSharp_PostString__SWIG_4(string jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001140")]
	[Address(RVA = "0xFF7D14", Offset = "0xFF7D14", VA = "0xFF7D14")]
	public static extern int CSharp_GetTimeStamp();

	[PreserveSig]
	[Token(Token = "0x6001141")]
	[Address(RVA = "0xFF7DEC", Offset = "0xFF7DEC", VA = "0xFF7DEC")]
	public static extern uint CSharp_GetNumNonZeroBits(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001142")]
	[Address(RVA = "0xFF7EE4", Offset = "0xFF7EE4", VA = "0xFF7EE4")]
	public static extern void CSharp_AkGetDefaultHighPriorityThreadProperties(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001143")]
	[Address(RVA = "0xFF7FF0", Offset = "0xFF7FF0", VA = "0xFF7FF0")]
	public static extern uint CSharp_ResolveDialogueEvent__SWIG_0(uint jarg1, [In] uint[] jarg2, uint jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001144")]
	[Address(RVA = "0xFF811C", Offset = "0xFF811C", VA = "0xFF811C")]
	public static extern uint CSharp_ResolveDialogueEvent__SWIG_1(uint jarg1, [In] uint[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001145")]
	[Address(RVA = "0xFF8238", Offset = "0xFF8238", VA = "0xFF8238")]
	public static extern int CSharp_GetDialogueEventCustomPropertyValue__SWIG_0(uint jarg1, uint jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001146")]
	[Address(RVA = "0xFF834C", Offset = "0xFF834C", VA = "0xFF834C")]
	public static extern int CSharp_GetDialogueEventCustomPropertyValue__SWIG_1(uint jarg1, uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001147")]
	[Address(RVA = "0x100D610", Offset = "0x100D610", VA = "0x100D610")]
	public static extern void CSharp_AkPositioningInfo_fCenterPct_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001148")]
	[Address(RVA = "0x100D6A0", Offset = "0x100D6A0", VA = "0x100D6A0")]
	public static extern float CSharp_AkPositioningInfo_fCenterPct_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001149")]
	[Address(RVA = "0x100D720", Offset = "0x100D720", VA = "0x100D720")]
	public static extern void CSharp_AkPositioningInfo_pannerType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600114A")]
	[Address(RVA = "0x100D7B0", Offset = "0x100D7B0", VA = "0x100D7B0")]
	public static extern int CSharp_AkPositioningInfo_pannerType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600114B")]
	[Address(RVA = "0x100D830", Offset = "0x100D830", VA = "0x100D830")]
	public static extern void CSharp_AkPositioningInfo_e3dPositioningType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600114C")]
	[Address(RVA = "0x100D8C0", Offset = "0x100D8C0", VA = "0x100D8C0")]
	public static extern int CSharp_AkPositioningInfo_e3dPositioningType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600114D")]
	[Address(RVA = "0x100D940", Offset = "0x100D940", VA = "0x100D940")]
	public static extern void CSharp_AkPositioningInfo_bHoldEmitterPosAndOrient_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x600114E")]
	[Address(RVA = "0x100D9D0", Offset = "0x100D9D0", VA = "0x100D9D0")]
	public static extern bool CSharp_AkPositioningInfo_bHoldEmitterPosAndOrient_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600114F")]
	[Address(RVA = "0x100DA58", Offset = "0x100DA58", VA = "0x100DA58")]
	public static extern void CSharp_AkPositioningInfo_e3DSpatializationMode_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001150")]
	[Address(RVA = "0x100DAE8", Offset = "0x100DAE8", VA = "0x100DAE8")]
	public static extern int CSharp_AkPositioningInfo_e3DSpatializationMode_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001151")]
	[Address(RVA = "0x100DB68", Offset = "0x100DB68", VA = "0x100DB68")]
	public static extern void CSharp_AkPositioningInfo_bEnableAttenuation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001152")]
	[Address(RVA = "0x100DBF8", Offset = "0x100DBF8", VA = "0x100DBF8")]
	public static extern bool CSharp_AkPositioningInfo_bEnableAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001153")]
	[Address(RVA = "0x100DC80", Offset = "0x100DC80", VA = "0x100DC80")]
	public static extern void CSharp_AkPositioningInfo_bUseConeAttenuation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001154")]
	[Address(RVA = "0x100DD10", Offset = "0x100DD10", VA = "0x100DD10")]
	public static extern bool CSharp_AkPositioningInfo_bUseConeAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001155")]
	[Address(RVA = "0x100DD98", Offset = "0x100DD98", VA = "0x100DD98")]
	public static extern void CSharp_AkPositioningInfo_fInnerAngle_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001156")]
	[Address(RVA = "0x100DE28", Offset = "0x100DE28", VA = "0x100DE28")]
	public static extern float CSharp_AkPositioningInfo_fInnerAngle_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001157")]
	[Address(RVA = "0x100DEA8", Offset = "0x100DEA8", VA = "0x100DEA8")]
	public static extern void CSharp_AkPositioningInfo_fOuterAngle_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001158")]
	[Address(RVA = "0x100DF38", Offset = "0x100DF38", VA = "0x100DF38")]
	public static extern float CSharp_AkPositioningInfo_fOuterAngle_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001159")]
	[Address(RVA = "0x100DFB8", Offset = "0x100DFB8", VA = "0x100DFB8")]
	public static extern void CSharp_AkPositioningInfo_fConeMaxAttenuation_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600115A")]
	[Address(RVA = "0x100E048", Offset = "0x100E048", VA = "0x100E048")]
	public static extern float CSharp_AkPositioningInfo_fConeMaxAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600115B")]
	[Address(RVA = "0x100E0C8", Offset = "0x100E0C8", VA = "0x100E0C8")]
	public static extern void CSharp_AkPositioningInfo_LPFCone_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600115C")]
	[Address(RVA = "0x100E158", Offset = "0x100E158", VA = "0x100E158")]
	public static extern float CSharp_AkPositioningInfo_LPFCone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600115D")]
	[Address(RVA = "0x100E1D8", Offset = "0x100E1D8", VA = "0x100E1D8")]
	public static extern void CSharp_AkPositioningInfo_HPFCone_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600115E")]
	[Address(RVA = "0x100E268", Offset = "0x100E268", VA = "0x100E268")]
	public static extern float CSharp_AkPositioningInfo_HPFCone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600115F")]
	[Address(RVA = "0x100E2E8", Offset = "0x100E2E8", VA = "0x100E2E8")]
	public static extern void CSharp_AkPositioningInfo_fMaxDistance_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001160")]
	[Address(RVA = "0x100E378", Offset = "0x100E378", VA = "0x100E378")]
	public static extern float CSharp_AkPositioningInfo_fMaxDistance_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001161")]
	[Address(RVA = "0x100E3F8", Offset = "0x100E3F8", VA = "0x100E3F8")]
	public static extern void CSharp_AkPositioningInfo_fVolDryAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001162")]
	[Address(RVA = "0x100E488", Offset = "0x100E488", VA = "0x100E488")]
	public static extern float CSharp_AkPositioningInfo_fVolDryAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001163")]
	[Address(RVA = "0x100E508", Offset = "0x100E508", VA = "0x100E508")]
	public static extern void CSharp_AkPositioningInfo_fVolAuxGameDefAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001164")]
	[Address(RVA = "0x100E598", Offset = "0x100E598", VA = "0x100E598")]
	public static extern float CSharp_AkPositioningInfo_fVolAuxGameDefAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001165")]
	[Address(RVA = "0x100E618", Offset = "0x100E618", VA = "0x100E618")]
	public static extern void CSharp_AkPositioningInfo_fVolAuxUserDefAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001166")]
	[Address(RVA = "0x100E6A8", Offset = "0x100E6A8", VA = "0x100E6A8")]
	public static extern float CSharp_AkPositioningInfo_fVolAuxUserDefAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001167")]
	[Address(RVA = "0x100E728", Offset = "0x100E728", VA = "0x100E728")]
	public static extern void CSharp_AkPositioningInfo_LPFValueAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001168")]
	[Address(RVA = "0x100E7B8", Offset = "0x100E7B8", VA = "0x100E7B8")]
	public static extern float CSharp_AkPositioningInfo_LPFValueAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001169")]
	[Address(RVA = "0x100E838", Offset = "0x100E838", VA = "0x100E838")]
	public static extern void CSharp_AkPositioningInfo_HPFValueAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600116A")]
	[Address(RVA = "0x100E8C8", Offset = "0x100E8C8", VA = "0x100E8C8")]
	public static extern float CSharp_AkPositioningInfo_HPFValueAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600116B")]
	[Address(RVA = "0x100E948", Offset = "0x100E948", VA = "0x100E948")]
	public static extern IntPtr CSharp_new_AkPositioningInfo();

	[PreserveSig]
	[Token(Token = "0x600116C")]
	[Address(RVA = "0x100E9BC", Offset = "0x100E9BC", VA = "0x100E9BC")]
	public static extern void CSharp_delete_AkPositioningInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600116D")]
	[Address(RVA = "0x100EA3C", Offset = "0x100EA3C", VA = "0x100EA3C")]
	public static extern void CSharp_AkObjectInfo_objID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600116E")]
	[Address(RVA = "0x100EACC", Offset = "0x100EACC", VA = "0x100EACC")]
	public static extern uint CSharp_AkObjectInfo_objID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600116F")]
	[Address(RVA = "0x100EB4C", Offset = "0x100EB4C", VA = "0x100EB4C")]
	public static extern void CSharp_AkObjectInfo_parentID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001170")]
	[Address(RVA = "0x100EBDC", Offset = "0x100EBDC", VA = "0x100EBDC")]
	public static extern uint CSharp_AkObjectInfo_parentID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001171")]
	[Address(RVA = "0x100EC5C", Offset = "0x100EC5C", VA = "0x100EC5C")]
	public static extern void CSharp_AkObjectInfo_iDepth_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001172")]
	[Address(RVA = "0x100ECEC", Offset = "0x100ECEC", VA = "0x100ECEC")]
	public static extern int CSharp_AkObjectInfo_iDepth_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001173")]
	[Address(RVA = "0x100ED6C", Offset = "0x100ED6C", VA = "0x100ED6C")]
	public static extern void CSharp_AkObjectInfo_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001174")]
	[Address(RVA = "0x100EDEC", Offset = "0x100EDEC", VA = "0x100EDEC")]
	public static extern int CSharp_AkObjectInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001175")]
	[Address(RVA = "0x100EE60", Offset = "0x100EE60", VA = "0x100EE60")]
	public static extern void CSharp_AkObjectInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001176")]
	[Address(RVA = "0x100EEF0", Offset = "0x100EEF0", VA = "0x100EEF0")]
	public static extern IntPtr CSharp_new_AkObjectInfo();

	[PreserveSig]
	[Token(Token = "0x6001177")]
	[Address(RVA = "0x100EF64", Offset = "0x100EF64", VA = "0x100EF64")]
	public static extern void CSharp_delete_AkObjectInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001178")]
	[Address(RVA = "0xFF8498", Offset = "0xFF8498", VA = "0xFF8498")]
	public static extern int CSharp_GetPosition(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001179")]
	[Address(RVA = "0xFF85E8", Offset = "0xFF85E8", VA = "0xFF85E8")]
	public static extern int CSharp_GetListenerPosition(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600117A")]
	[Address(RVA = "0xFF8744", Offset = "0xFF8744", VA = "0xFF8744")]
	public static extern int CSharp_GetRTPCValue__SWIG_0(uint jarg1, ulong jarg2, uint jarg3, out float jarg4, ref int jarg5);

	[PreserveSig]
	[Token(Token = "0x600117B")]
	[Address(RVA = "0xFF88C0", Offset = "0xFF88C0", VA = "0xFF88C0")]
	public static extern int CSharp_GetRTPCValue__SWIG_1(string jarg1, ulong jarg2, uint jarg3, out float jarg4, ref int jarg5);

	[PreserveSig]
	[Token(Token = "0x600117C")]
	[Address(RVA = "0xFF8A3C", Offset = "0xFF8A3C", VA = "0xFF8A3C")]
	public static extern int CSharp_GetSwitch__SWIG_0(uint jarg1, ulong jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600117D")]
	[Address(RVA = "0xFF8B80", Offset = "0xFF8B80", VA = "0xFF8B80")]
	public static extern int CSharp_GetSwitch__SWIG_1(string jarg1, ulong jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600117E")]
	[Address(RVA = "0xFF8CA0", Offset = "0xFF8CA0", VA = "0xFF8CA0")]
	public static extern int CSharp_GetState__SWIG_0(uint jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600117F")]
	[Address(RVA = "0xFF8DA4", Offset = "0xFF8DA4", VA = "0xFF8DA4")]
	public static extern int CSharp_GetState__SWIG_1(string jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001180")]
	[Address(RVA = "0xFF8F0C", Offset = "0xFF8F0C", VA = "0xFF8F0C")]
	public static extern int CSharp_GetGameObjectAuxSendValues(ulong jarg1, IntPtr jarg2, ref uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001181")]
	[Address(RVA = "0xFF9070", Offset = "0xFF9070", VA = "0xFF9070")]
	public static extern int CSharp_GetGameObjectDryLevelValue(ulong jarg1, ulong jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001182")]
	[Address(RVA = "0xFF91E4", Offset = "0xFF91E4", VA = "0xFF91E4")]
	public static extern int CSharp_GetObjectObstructionAndOcclusion(ulong jarg1, ulong jarg2, out float jarg3, out float jarg4);

	[PreserveSig]
	[Token(Token = "0x6001183")]
	[Address(RVA = "0xFF9314", Offset = "0xFF9314", VA = "0xFF9314")]
	public static extern int CSharp_QueryAudioObjectIDs__SWIG_0(uint jarg1, ref uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6001184")]
	[Address(RVA = "0xFF9434", Offset = "0xFF9434", VA = "0xFF9434")]
	public static extern int CSharp_QueryAudioObjectIDs__SWIG_1(string jarg1, ref uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6001185")]
	[Address(RVA = "0xFF956C", Offset = "0xFF956C", VA = "0xFF956C")]
	public static extern int CSharp_GetPositioningInfo(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001186")]
	[Address(RVA = "0xFF9698", Offset = "0xFF9698", VA = "0xFF9698")]
	public static extern bool CSharp_GetIsGameObjectActive(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001187")]
	[Address(RVA = "0xFF97BC", Offset = "0xFF97BC", VA = "0xFF97BC")]
	public static extern float CSharp_GetMaxRadius(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001188")]
	[Address(RVA = "0xFF98A0", Offset = "0xFF98A0", VA = "0xFF98A0")]
	public static extern uint CSharp_GetEventIDFromPlayingID(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001189")]
	[Address(RVA = "0xFF9984", Offset = "0xFF9984", VA = "0xFF9984")]
	public static extern ulong CSharp_GetGameObjectFromPlayingID(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600118A")]
	[Address(RVA = "0xFF9AB8", Offset = "0xFF9AB8", VA = "0xFF9AB8")]
	public static extern int CSharp_GetPlayingIDsFromGameObject(ulong jarg1, ref uint jarg2, [Out] uint[] jarg3);

	[PreserveSig]
	[Token(Token = "0x600118B")]
	[Address(RVA = "0xFF9C5C", Offset = "0xFF9C5C", VA = "0xFF9C5C")]
	public static extern int CSharp_GetCustomPropertyValue__SWIG_0(uint jarg1, uint jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x600118C")]
	[Address(RVA = "0xFF9D70", Offset = "0xFF9D70", VA = "0xFF9D70")]
	public static extern int CSharp_GetCustomPropertyValue__SWIG_1(uint jarg1, uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x600118D")]
	[Address(RVA = "0xFF9E6C", Offset = "0xFF9E6C", VA = "0xFF9E6C")]
	public static extern void CSharp_AK_SPEAKER_SETUP_FIX_LEFT_TO_CENTER(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600118E")]
	[Address(RVA = "0xFF9F50", Offset = "0xFF9F50", VA = "0xFF9F50")]
	public static extern void CSharp_AK_SPEAKER_SETUP_FIX_REAR_TO_SIDE(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600118F")]
	[Address(RVA = "0xFFA034", Offset = "0xFFA034", VA = "0xFFA034")]
	public static extern void CSharp_AK_SPEAKER_SETUP_CONVERT_TO_SUPPORTED(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001190")]
	[Address(RVA = "0xFFA118", Offset = "0xFFA118", VA = "0xFFA118")]
	public static extern byte CSharp_ChannelMaskToNumChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001191")]
	[Address(RVA = "0xFFA1FC", Offset = "0xFFA1FC", VA = "0xFFA1FC")]
	public static extern uint CSharp_ChannelMaskFromNumChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001192")]
	[Address(RVA = "0xFFA2F0", Offset = "0xFFA2F0", VA = "0xFFA2F0")]
	public static extern byte CSharp_ChannelBitToIndex(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001193")]
	[Address(RVA = "0xFFA3E4", Offset = "0xFFA3E4", VA = "0xFFA3E4")]
	public static extern bool CSharp_HasSurroundChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001194")]
	[Address(RVA = "0xFFA4D0", Offset = "0xFFA4D0", VA = "0xFFA4D0")]
	public static extern bool CSharp_HasStrictlyOnePairOfSurroundChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001195")]
	[Address(RVA = "0xFFA5BC", Offset = "0xFFA5BC", VA = "0xFFA5BC")]
	public static extern bool CSharp_HasSideAndRearChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001196")]
	[Address(RVA = "0xFFA6A8", Offset = "0xFFA6A8", VA = "0xFFA6A8")]
	public static extern bool CSharp_HasHeightChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001197")]
	[Address(RVA = "0xFFA794", Offset = "0xFFA794", VA = "0xFFA794")]
	public static extern uint CSharp_BackToSideChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001198")]
	[Address(RVA = "0xFFA890", Offset = "0xFFA890", VA = "0xFFA890")]
	public static extern uint CSharp_StdChannelIndexToDisplayIndex(int jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001199")]
	[Address(RVA = "0x100EFE4", Offset = "0x100EFE4", VA = "0x100EFE4")]
	public static extern void CSharp_AkChannelConfig_uNumChannels_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600119A")]
	[Address(RVA = "0x100F074", Offset = "0x100F074", VA = "0x100F074")]
	public static extern uint CSharp_AkChannelConfig_uNumChannels_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600119B")]
	[Address(RVA = "0x100F0F4", Offset = "0x100F0F4", VA = "0x100F0F4")]
	public static extern void CSharp_AkChannelConfig_eConfigType_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600119C")]
	[Address(RVA = "0x100F184", Offset = "0x100F184", VA = "0x100F184")]
	public static extern uint CSharp_AkChannelConfig_eConfigType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600119D")]
	[Address(RVA = "0x100F204", Offset = "0x100F204", VA = "0x100F204")]
	public static extern void CSharp_AkChannelConfig_uChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600119E")]
	[Address(RVA = "0x100F294", Offset = "0x100F294", VA = "0x100F294")]
	public static extern uint CSharp_AkChannelConfig_uChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600119F")]
	[Address(RVA = "0x100F314", Offset = "0x100F314", VA = "0x100F314")]
	public static extern IntPtr CSharp_new_AkChannelConfig__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x60011A0")]
	[Address(RVA = "0x100F388", Offset = "0x100F388", VA = "0x100F388")]
	public static extern IntPtr CSharp_new_AkChannelConfig__SWIG_1(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011A1")]
	[Address(RVA = "0x100F418", Offset = "0x100F418", VA = "0x100F418")]
	public static extern void CSharp_AkChannelConfig_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011A2")]
	[Address(RVA = "0x100F498", Offset = "0x100F498", VA = "0x100F498")]
	public static extern void CSharp_AkChannelConfig_SetStandard(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011A3")]
	[Address(RVA = "0x100F528", Offset = "0x100F528", VA = "0x100F528")]
	public static extern void CSharp_AkChannelConfig_SetStandardOrAnonymous(IntPtr jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60011A4")]
	[Address(RVA = "0x100F5C0", Offset = "0x100F5C0", VA = "0x100F5C0")]
	public static extern void CSharp_AkChannelConfig_SetAnonymous(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011A5")]
	[Address(RVA = "0x100F650", Offset = "0x100F650", VA = "0x100F650")]
	public static extern void CSharp_AkChannelConfig_SetAmbisonic(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011A6")]
	[Address(RVA = "0x100F6E0", Offset = "0x100F6E0", VA = "0x100F6E0")]
	public static extern bool CSharp_AkChannelConfig_IsValid(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011A7")]
	[Address(RVA = "0x100F768", Offset = "0x100F768", VA = "0x100F768")]
	public static extern uint CSharp_AkChannelConfig_Serialize(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011A8")]
	[Address(RVA = "0x100F7E8", Offset = "0x100F7E8", VA = "0x100F7E8")]
	public static extern void CSharp_AkChannelConfig_Deserialize(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011A9")]
	[Address(RVA = "0x100F878", Offset = "0x100F878", VA = "0x100F878")]
	public static extern IntPtr CSharp_AkChannelConfig_RemoveLFE(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011AA")]
	[Address(RVA = "0x100F8F8", Offset = "0x100F8F8", VA = "0x100F8F8")]
	public static extern IntPtr CSharp_AkChannelConfig_RemoveCenter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011AB")]
	[Address(RVA = "0x100F978", Offset = "0x100F978", VA = "0x100F978")]
	public static extern bool CSharp_AkChannelConfig_IsChannelConfigSupported(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011AC")]
	[Address(RVA = "0x100FA00", Offset = "0x100FA00", VA = "0x100FA00")]
	public static extern void CSharp_delete_AkChannelConfig(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011AD")]
	[Address(RVA = "0x100FA80", Offset = "0x100FA80", VA = "0x100FA80")]
	public static extern IntPtr CSharp_new_AkImageSourceParams__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x60011AE")]
	[Address(RVA = "0x100FAF4", Offset = "0x100FAF4", VA = "0x100FAF4")]
	public static extern IntPtr CSharp_new_AkImageSourceParams__SWIG_1(IntPtr jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x60011AF")]
	[Address(RVA = "0x100FB8C", Offset = "0x100FB8C", VA = "0x100FB8C")]
	public static extern void CSharp_AkImageSourceParams_sourcePosition_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011B0")]
	[Address(RVA = "0x100FC1C", Offset = "0x100FC1C", VA = "0x100FC1C")]
	public static extern IntPtr CSharp_AkImageSourceParams_sourcePosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011B1")]
	[Address(RVA = "0x100FC9C", Offset = "0x100FC9C", VA = "0x100FC9C")]
	public static extern void CSharp_AkImageSourceParams_fDistanceScalingFactor_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60011B2")]
	[Address(RVA = "0x100FD2C", Offset = "0x100FD2C", VA = "0x100FD2C")]
	public static extern float CSharp_AkImageSourceParams_fDistanceScalingFactor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011B3")]
	[Address(RVA = "0x100FDAC", Offset = "0x100FDAC", VA = "0x100FDAC")]
	public static extern void CSharp_AkImageSourceParams_fLevel_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x100FE3C", Offset = "0x100FE3C", VA = "0x100FE3C")]
	public static extern float CSharp_AkImageSourceParams_fLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011B5")]
	[Address(RVA = "0x100FEBC", Offset = "0x100FEBC", VA = "0x100FEBC")]
	public static extern void CSharp_AkImageSourceParams_fDiffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x100FF4C", Offset = "0x100FF4C", VA = "0x100FF4C")]
	public static extern float CSharp_AkImageSourceParams_fDiffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011B7")]
	[Address(RVA = "0x100FFCC", Offset = "0x100FFCC", VA = "0x100FFCC")]
	public static extern void CSharp_AkImageSourceParams_uDiffractionEmitterSide_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x101005C", Offset = "0x101005C", VA = "0x101005C")]
	public static extern byte CSharp_AkImageSourceParams_uDiffractionEmitterSide_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011B9")]
	[Address(RVA = "0x10100DC", Offset = "0x10100DC", VA = "0x10100DC")]
	public static extern void CSharp_AkImageSourceParams_uDiffractionListenerSide_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x101016C", Offset = "0x101016C", VA = "0x101016C")]
	public static extern byte CSharp_AkImageSourceParams_uDiffractionListenerSide_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011BB")]
	[Address(RVA = "0x10101EC", Offset = "0x10101EC", VA = "0x10101EC")]
	public static extern void CSharp_delete_AkImageSourceParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011BC")]
	[Address(RVA = "0xFFA984", Offset = "0xFFA984", VA = "0xFFA984")]
	public static extern float CSharp_kDefaultMaxPathLength_get();

	[PreserveSig]
	[Token(Token = "0x60011BD")]
	[Address(RVA = "0xFFAA50", Offset = "0xFFAA50", VA = "0xFFAA50")]
	public static extern uint CSharp_kDefaultDiffractionMaxEdges_get();

	[PreserveSig]
	[Token(Token = "0x60011BE")]
	[Address(RVA = "0xFFAB20", Offset = "0xFFAB20", VA = "0xFFAB20")]
	public static extern uint CSharp_kDefaultDiffractionMaxPaths_get();

	[PreserveSig]
	[Token(Token = "0x60011BF")]
	[Address(RVA = "0xFFABF0", Offset = "0xFFABF0", VA = "0xFFABF0")]
	public static extern float CSharp_kMaxDiffraction_get();

	[PreserveSig]
	[Token(Token = "0x60011C0")]
	[Address(RVA = "0xFFACBC", Offset = "0xFFACBC", VA = "0xFFACBC")]
	public static extern uint CSharp_kListenerDiffractionMaxEdges_get();

	[PreserveSig]
	[Token(Token = "0x60011C1")]
	[Address(RVA = "0xFFAD8C", Offset = "0xFFAD8C", VA = "0xFFAD8C")]
	public static extern uint CSharp_kListenerDiffractionMaxPaths_get();

	[PreserveSig]
	[Token(Token = "0x60011C2")]
	[Address(RVA = "0xFFAE5C", Offset = "0xFFAE5C", VA = "0xFFAE5C")]
	public static extern uint CSharp_kPortalToPortalDiffractionMaxPaths_get();

	[PreserveSig]
	[Token(Token = "0x60011C3")]
	[Address(RVA = "0xFFAF34", Offset = "0xFFAF34", VA = "0xFFAF34")]
	public static extern void CSharp_g_SpatialAudioPoolId_set(int jarg1);

	[PreserveSig]
	[Token(Token = "0x60011C4")]
	[Address(RVA = "0xFFB010", Offset = "0xFFB010", VA = "0xFFB010")]
	public static extern int CSharp_g_SpatialAudioPoolId_get();

	[PreserveSig]
	[Token(Token = "0x60011C5")]
	[Address(RVA = "0x101026C", Offset = "0x101026C", VA = "0x101026C")]
	public static extern int CSharp__ArrayPoolSpatialAudio_Get();

	[PreserveSig]
	[Token(Token = "0x60011C6")]
	[Address(RVA = "0x10102E0", Offset = "0x10102E0", VA = "0x10102E0")]
	public static extern IntPtr CSharp_new__ArrayPoolSpatialAudio();

	[PreserveSig]
	[Token(Token = "0x60011C7")]
	[Address(RVA = "0x1010354", Offset = "0x1010354", VA = "0x1010354")]
	public static extern void CSharp_delete__ArrayPoolSpatialAudio(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011C8")]
	[Address(RVA = "0x10103D4", Offset = "0x10103D4", VA = "0x10103D4")]
	public static extern IntPtr CSharp_new_AkSpatialAudioInitSettings();

	[PreserveSig]
	[Token(Token = "0x60011C9")]
	[Address(RVA = "0x1010448", Offset = "0x1010448", VA = "0x1010448")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uPoolID_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60011CA")]
	[Address(RVA = "0x10104D8", Offset = "0x10104D8", VA = "0x10104D8")]
	public static extern int CSharp_AkSpatialAudioInitSettings_uPoolID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011CB")]
	[Address(RVA = "0x1010558", Offset = "0x1010558", VA = "0x1010558")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011CC")]
	[Address(RVA = "0x10105E8", Offset = "0x10105E8", VA = "0x10105E8")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011CD")]
	[Address(RVA = "0x1010668", Offset = "0x1010668", VA = "0x1010668")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uMaxSoundPropagationDepth_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011CE")]
	[Address(RVA = "0x10106F8", Offset = "0x10106F8", VA = "0x10106F8")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uMaxSoundPropagationDepth_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011CF")]
	[Address(RVA = "0x1010778", Offset = "0x1010778", VA = "0x1010778")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uDiffractionFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011D0")]
	[Address(RVA = "0x1010808", Offset = "0x1010808", VA = "0x1010808")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uDiffractionFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011D1")]
	[Address(RVA = "0x1010888", Offset = "0x1010888", VA = "0x1010888")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowAttenFactor_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60011D2")]
	[Address(RVA = "0x1010918", Offset = "0x1010918", VA = "0x1010918")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fDiffractionShadowAttenFactor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011D3")]
	[Address(RVA = "0x1010998", Offset = "0x1010998", VA = "0x1010998")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowDegrees_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60011D4")]
	[Address(RVA = "0x1010A28", Offset = "0x1010A28", VA = "0x1010A28")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fDiffractionShadowDegrees_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011D5")]
	[Address(RVA = "0x1010AA8", Offset = "0x1010AA8", VA = "0x1010AA8")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fMovementThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60011D6")]
	[Address(RVA = "0x1010B38", Offset = "0x1010B38", VA = "0x1010B38")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fMovementThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x1010BB8", Offset = "0x1010BB8", VA = "0x1010BB8")]
	public static extern void CSharp_delete_AkSpatialAudioInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011D8")]
	[Address(RVA = "0x1010C38", Offset = "0x1010C38", VA = "0x1010C38")]
	public static extern IntPtr CSharp_new_AkImageSourceSettings__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x60011D9")]
	[Address(RVA = "0x1010CAC", Offset = "0x1010CAC", VA = "0x1010CAC")]
	public static extern IntPtr CSharp_new_AkImageSourceSettings__SWIG_1(IntPtr jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x60011DA")]
	[Address(RVA = "0x1010D44", Offset = "0x1010D44", VA = "0x1010D44")]
	public static extern void CSharp_delete_AkImageSourceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011DB")]
	[Address(RVA = "0x1010DC4", Offset = "0x1010DC4", VA = "0x1010DC4")]
	public static extern void CSharp_AkImageSourceSettings_SetOneTexture(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011DC")]
	[Address(RVA = "0x1010E54", Offset = "0x1010E54", VA = "0x1010E54")]
	public static extern void CSharp_AkImageSourceSettings_SetName(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x60011DD")]
	[Address(RVA = "0x1010EF8", Offset = "0x1010EF8", VA = "0x1010EF8")]
	public static extern void CSharp_AkImageSourceSettings_params__set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011DE")]
	[Address(RVA = "0x1010F88", Offset = "0x1010F88", VA = "0x1010F88")]
	public static extern IntPtr CSharp_AkImageSourceSettings_params__get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011DF")]
	[Address(RVA = "0x1011008", Offset = "0x1011008", VA = "0x1011008")]
	public static extern IntPtr CSharp_new_AkEmitterSettings();

	[PreserveSig]
	[Token(Token = "0x60011E0")]
	[Address(RVA = "0x101107C", Offset = "0x101107C", VA = "0x101107C")]
	public static extern void CSharp_AkEmitterSettings_reflectAuxBusID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011E1")]
	[Address(RVA = "0x101110C", Offset = "0x101110C", VA = "0x101110C")]
	public static extern uint CSharp_AkEmitterSettings_reflectAuxBusID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011E2")]
	[Address(RVA = "0x101118C", Offset = "0x101118C", VA = "0x101118C")]
	public static extern void CSharp_AkEmitterSettings_reflectionMaxPathLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60011E3")]
	[Address(RVA = "0x101121C", Offset = "0x101121C", VA = "0x101121C")]
	public static extern float CSharp_AkEmitterSettings_reflectionMaxPathLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011E4")]
	[Address(RVA = "0x101129C", Offset = "0x101129C", VA = "0x101129C")]
	public static extern void CSharp_AkEmitterSettings_reflectionsAuxBusGain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60011E5")]
	[Address(RVA = "0x101132C", Offset = "0x101132C", VA = "0x101132C")]
	public static extern float CSharp_AkEmitterSettings_reflectionsAuxBusGain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011E6")]
	[Address(RVA = "0x10113AC", Offset = "0x10113AC", VA = "0x10113AC")]
	public static extern void CSharp_AkEmitterSettings_reflectionsOrder_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011E7")]
	[Address(RVA = "0x101143C", Offset = "0x101143C", VA = "0x101143C")]
	public static extern uint CSharp_AkEmitterSettings_reflectionsOrder_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011E8")]
	[Address(RVA = "0x10114BC", Offset = "0x10114BC", VA = "0x10114BC")]
	public static extern void CSharp_AkEmitterSettings_reflectorFilterMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011E9")]
	[Address(RVA = "0x101154C", Offset = "0x101154C", VA = "0x101154C")]
	public static extern uint CSharp_AkEmitterSettings_reflectorFilterMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011EA")]
	[Address(RVA = "0x10115CC", Offset = "0x10115CC", VA = "0x10115CC")]
	public static extern void CSharp_AkEmitterSettings_roomReverbAuxBusGain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60011EB")]
	[Address(RVA = "0x101165C", Offset = "0x101165C", VA = "0x101165C")]
	public static extern float CSharp_AkEmitterSettings_roomReverbAuxBusGain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011EC")]
	[Address(RVA = "0x10116DC", Offset = "0x10116DC", VA = "0x10116DC")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxEdges_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011ED")]
	[Address(RVA = "0x101176C", Offset = "0x101176C", VA = "0x101176C")]
	public static extern uint CSharp_AkEmitterSettings_diffractionMaxEdges_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011EE")]
	[Address(RVA = "0x10117EC", Offset = "0x10117EC", VA = "0x10117EC")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011EF")]
	[Address(RVA = "0x101187C", Offset = "0x101187C", VA = "0x101187C")]
	public static extern uint CSharp_AkEmitterSettings_diffractionMaxPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011F0")]
	[Address(RVA = "0x10118FC", Offset = "0x10118FC", VA = "0x10118FC")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxPathLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60011F1")]
	[Address(RVA = "0x101198C", Offset = "0x101198C", VA = "0x101198C")]
	public static extern float CSharp_AkEmitterSettings_diffractionMaxPathLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011F2")]
	[Address(RVA = "0x1011A0C", Offset = "0x1011A0C", VA = "0x1011A0C")]
	public static extern void CSharp_AkEmitterSettings_useImageSources_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x60011F3")]
	[Address(RVA = "0x1011A9C", Offset = "0x1011A9C", VA = "0x1011A9C")]
	public static extern byte CSharp_AkEmitterSettings_useImageSources_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011F4")]
	[Address(RVA = "0x1011B1C", Offset = "0x1011B1C", VA = "0x1011B1C")]
	public static extern void CSharp_delete_AkEmitterSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011F5")]
	[Address(RVA = "0x1011B9C", Offset = "0x1011B9C", VA = "0x1011B9C")]
	public static extern IntPtr CSharp_new_AkVertex__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x60011F6")]
	[Address(RVA = "0x1011C10", Offset = "0x1011C10", VA = "0x1011C10")]
	public static extern IntPtr CSharp_new_AkVertex__SWIG_1(float jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x60011F7")]
	[Address(RVA = "0x1011CB0", Offset = "0x1011CB0", VA = "0x1011CB0")]
	public static extern void CSharp_AkVertex_X_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60011F8")]
	[Address(RVA = "0x1011D40", Offset = "0x1011D40", VA = "0x1011D40")]
	public static extern float CSharp_AkVertex_X_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011F9")]
	[Address(RVA = "0x1011DC0", Offset = "0x1011DC0", VA = "0x1011DC0")]
	public static extern void CSharp_AkVertex_Y_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60011FA")]
	[Address(RVA = "0x1011E50", Offset = "0x1011E50", VA = "0x1011E50")]
	public static extern float CSharp_AkVertex_Y_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011FB")]
	[Address(RVA = "0x1011ED0", Offset = "0x1011ED0", VA = "0x1011ED0")]
	public static extern void CSharp_AkVertex_Z_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60011FC")]
	[Address(RVA = "0x1011F60", Offset = "0x1011F60", VA = "0x1011F60")]
	public static extern float CSharp_AkVertex_Z_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011FD")]
	[Address(RVA = "0x1011FE0", Offset = "0x1011FE0", VA = "0x1011FE0")]
	public static extern void CSharp_AkVertex_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011FE")]
	[Address(RVA = "0x1012060", Offset = "0x1012060", VA = "0x1012060")]
	public static extern int CSharp_AkVertex_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x10120D4", Offset = "0x10120D4", VA = "0x10120D4")]
	public static extern void CSharp_AkVertex_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001200")]
	[Address(RVA = "0x1012164", Offset = "0x1012164", VA = "0x1012164")]
	public static extern void CSharp_delete_AkVertex(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001201")]
	[Address(RVA = "0x10121E4", Offset = "0x10121E4", VA = "0x10121E4")]
	public static extern IntPtr CSharp_new_AkTriangle__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6001202")]
	[Address(RVA = "0x1012258", Offset = "0x1012258", VA = "0x1012258")]
	public static extern IntPtr CSharp_new_AkTriangle__SWIG_1(ushort jarg1, ushort jarg2, ushort jarg3, ushort jarg4);

	[PreserveSig]
	[Token(Token = "0x6001203")]
	[Address(RVA = "0x1012300", Offset = "0x1012300", VA = "0x1012300")]
	public static extern void CSharp_AkTriangle_point0_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001204")]
	[Address(RVA = "0x1012390", Offset = "0x1012390", VA = "0x1012390")]
	public static extern ushort CSharp_AkTriangle_point0_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001205")]
	[Address(RVA = "0x1012410", Offset = "0x1012410", VA = "0x1012410")]
	public static extern void CSharp_AkTriangle_point1_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001206")]
	[Address(RVA = "0x10124A0", Offset = "0x10124A0", VA = "0x10124A0")]
	public static extern ushort CSharp_AkTriangle_point1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001207")]
	[Address(RVA = "0x1012520", Offset = "0x1012520", VA = "0x1012520")]
	public static extern void CSharp_AkTriangle_point2_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001208")]
	[Address(RVA = "0x10125B0", Offset = "0x10125B0", VA = "0x10125B0")]
	public static extern ushort CSharp_AkTriangle_point2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001209")]
	[Address(RVA = "0x1012630", Offset = "0x1012630", VA = "0x1012630")]
	public static extern void CSharp_AkTriangle_surface_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x600120A")]
	[Address(RVA = "0x10126C0", Offset = "0x10126C0", VA = "0x10126C0")]
	public static extern ushort CSharp_AkTriangle_surface_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600120B")]
	[Address(RVA = "0x1012740", Offset = "0x1012740", VA = "0x1012740")]
	public static extern void CSharp_AkTriangle_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600120C")]
	[Address(RVA = "0x10127C0", Offset = "0x10127C0", VA = "0x10127C0")]
	public static extern int CSharp_AkTriangle_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x600120D")]
	[Address(RVA = "0x1012834", Offset = "0x1012834", VA = "0x1012834")]
	public static extern void CSharp_AkTriangle_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600120E")]
	[Address(RVA = "0x10128C4", Offset = "0x10128C4", VA = "0x10128C4")]
	public static extern void CSharp_delete_AkTriangle(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600120F")]
	[Address(RVA = "0x1012944", Offset = "0x1012944", VA = "0x1012944")]
	public static extern IntPtr CSharp_new_AkAcousticSurface();

	[PreserveSig]
	[Token(Token = "0x6001210")]
	[Address(RVA = "0x10129B8", Offset = "0x10129B8", VA = "0x10129B8")]
	public static extern void CSharp_AkAcousticSurface_textureID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001211")]
	[Address(RVA = "0x1012A48", Offset = "0x1012A48", VA = "0x1012A48")]
	public static extern uint CSharp_AkAcousticSurface_textureID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001212")]
	[Address(RVA = "0x1012AC8", Offset = "0x1012AC8", VA = "0x1012AC8")]
	public static extern void CSharp_AkAcousticSurface_reflectorChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001213")]
	[Address(RVA = "0x1012B58", Offset = "0x1012B58", VA = "0x1012B58")]
	public static extern uint CSharp_AkAcousticSurface_reflectorChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001214")]
	[Address(RVA = "0x1012BD8", Offset = "0x1012BD8", VA = "0x1012BD8")]
	public static extern void CSharp_AkAcousticSurface_strName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001215")]
	[Address(RVA = "0x1012C7C", Offset = "0x1012C7C", VA = "0x1012C7C")]
	public static extern IntPtr CSharp_AkAcousticSurface_strName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001216")]
	[Address(RVA = "0x1012CFC", Offset = "0x1012CFC", VA = "0x1012CFC")]
	public static extern void CSharp_AkAcousticSurface_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001217")]
	[Address(RVA = "0x1012D7C", Offset = "0x1012D7C", VA = "0x1012D7C")]
	public static extern void CSharp_AkAcousticSurface_DeleteName(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001218")]
	[Address(RVA = "0x1012DFC", Offset = "0x1012DFC", VA = "0x1012DFC")]
	public static extern int CSharp_AkAcousticSurface_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001219")]
	[Address(RVA = "0x1012E70", Offset = "0x1012E70", VA = "0x1012E70")]
	public static extern void CSharp_AkAcousticSurface_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600121A")]
	[Address(RVA = "0x1012F00", Offset = "0x1012F00", VA = "0x1012F00")]
	public static extern void CSharp_delete_AkAcousticSurface(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600121B")]
	[Address(RVA = "0xFDEF6C", Offset = "0xFDEF6C", VA = "0xFDEF6C")]
	public static extern void CSharp_AkReflectionPathInfo_imageSource_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600121C")]
	[Address(RVA = "0xFDF0A8", Offset = "0xFDF0A8", VA = "0xFDF0A8")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_imageSource_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600121D")]
	[Address(RVA = "0xFDF1A0", Offset = "0xFDF1A0", VA = "0xFDF1A0")]
	public static extern void CSharp_AkReflectionPathInfo_numPathPoints_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600121E")]
	[Address(RVA = "0xFDF298", Offset = "0xFDF298", VA = "0xFDF298")]
	public static extern uint CSharp_AkReflectionPathInfo_numPathPoints_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600121F")]
	[Address(RVA = "0xFDF390", Offset = "0xFDF390", VA = "0xFDF390")]
	public static extern void CSharp_AkReflectionPathInfo_numReflections_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001220")]
	[Address(RVA = "0xFDF488", Offset = "0xFDF488", VA = "0xFDF488")]
	public static extern uint CSharp_AkReflectionPathInfo_numReflections_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001221")]
	[Address(RVA = "0xFDF580", Offset = "0xFDF580", VA = "0xFDF580")]
	public static extern void CSharp_AkReflectionPathInfo_level_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001222")]
	[Address(RVA = "0xFDF678", Offset = "0xFDF678", VA = "0xFDF678")]
	public static extern float CSharp_AkReflectionPathInfo_level_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001223")]
	[Address(RVA = "0xFDF770", Offset = "0xFDF770", VA = "0xFDF770")]
	public static extern void CSharp_AkReflectionPathInfo_isOccluded_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001224")]
	[Address(RVA = "0xFDF868", Offset = "0xFDF868", VA = "0xFDF868")]
	public static extern bool CSharp_AkReflectionPathInfo_isOccluded_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001225")]
	[Address(RVA = "0xFDF94C", Offset = "0xFDF94C", VA = "0xFDF94C")]
	public static extern int CSharp_AkReflectionPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001226")]
	[Address(RVA = "0xFDFA7C", Offset = "0xFDFA7C", VA = "0xFDFA7C")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_GetPathPoint(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001227")]
	[Address(RVA = "0xFDFBB8", Offset = "0xFDFBB8", VA = "0xFDFBB8")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_GetAcousticSurface(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001228")]
	[Address(RVA = "0xFDFCC0", Offset = "0xFDFCC0", VA = "0xFDFCC0")]
	public static extern float CSharp_AkReflectionPathInfo_GetDiffraction(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001229")]
	[Address(RVA = "0xFDFDF4", Offset = "0xFDFDF4", VA = "0xFDFDF4")]
	public static extern void CSharp_AkReflectionPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600122A")]
	[Address(RVA = "0xFDFF04", Offset = "0xFDFF04", VA = "0xFDFF04")]
	public static extern IntPtr CSharp_new_AkReflectionPathInfo();

	[PreserveSig]
	[Token(Token = "0x600122B")]
	[Address(RVA = "0xFDEE60", Offset = "0xFDEE60", VA = "0xFDEE60")]
	public static extern void CSharp_delete_AkReflectionPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600122C")]
	[Address(RVA = "0x1012F80", Offset = "0x1012F80", VA = "0x1012F80")]
	public static extern void CSharp_AkDiffractionPathInfo_virtualPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600122D")]
	[Address(RVA = "0x1013010", Offset = "0x1013010", VA = "0x1013010")]
	public static extern IntPtr CSharp_AkDiffractionPathInfo_virtualPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600122E")]
	[Address(RVA = "0x1013090", Offset = "0x1013090", VA = "0x1013090")]
	public static extern void CSharp_AkDiffractionPathInfo_nodeCount_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600122F")]
	[Address(RVA = "0x1013120", Offset = "0x1013120", VA = "0x1013120")]
	public static extern uint CSharp_AkDiffractionPathInfo_nodeCount_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001230")]
	[Address(RVA = "0x10131A0", Offset = "0x10131A0", VA = "0x10131A0")]
	public static extern void CSharp_AkDiffractionPathInfo_diffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001231")]
	[Address(RVA = "0x1013230", Offset = "0x1013230", VA = "0x1013230")]
	public static extern float CSharp_AkDiffractionPathInfo_diffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001232")]
	[Address(RVA = "0x10132B0", Offset = "0x10132B0", VA = "0x10132B0")]
	public static extern void CSharp_AkDiffractionPathInfo_totLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001233")]
	[Address(RVA = "0x1013340", Offset = "0x1013340", VA = "0x1013340")]
	public static extern float CSharp_AkDiffractionPathInfo_totLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001234")]
	[Address(RVA = "0x10133C0", Offset = "0x10133C0", VA = "0x10133C0")]
	public static extern void CSharp_AkDiffractionPathInfo_obstructionValue_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001235")]
	[Address(RVA = "0x1013450", Offset = "0x1013450", VA = "0x1013450")]
	public static extern float CSharp_AkDiffractionPathInfo_obstructionValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001236")]
	[Address(RVA = "0x10134D0", Offset = "0x10134D0", VA = "0x10134D0")]
	public static extern int CSharp_AkDiffractionPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001237")]
	[Address(RVA = "0x1013544", Offset = "0x1013544", VA = "0x1013544")]
	public static extern IntPtr CSharp_AkDiffractionPathInfo_GetNodes(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001238")]
	[Address(RVA = "0x10135D4", Offset = "0x10135D4", VA = "0x10135D4")]
	public static extern float CSharp_AkDiffractionPathInfo_GetAngles(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001239")]
	[Address(RVA = "0x1013664", Offset = "0x1013664", VA = "0x1013664")]
	public static extern ulong CSharp_AkDiffractionPathInfo_GetPortals(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600123A")]
	[Address(RVA = "0x10136F4", Offset = "0x10136F4", VA = "0x10136F4")]
	public static extern ulong CSharp_AkDiffractionPathInfo_GetRooms(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600123B")]
	[Address(RVA = "0x1013784", Offset = "0x1013784", VA = "0x1013784")]
	public static extern void CSharp_AkDiffractionPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600123C")]
	[Address(RVA = "0x1013814", Offset = "0x1013814", VA = "0x1013814")]
	public static extern IntPtr CSharp_new_AkDiffractionPathInfo();

	[PreserveSig]
	[Token(Token = "0x600123D")]
	[Address(RVA = "0x1013888", Offset = "0x1013888", VA = "0x1013888")]
	public static extern void CSharp_delete_AkDiffractionPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600123E")]
	[Address(RVA = "0xFE1914", Offset = "0xFE1914", VA = "0xFE1914")]
	public static extern IntPtr CSharp_new_AkRoomParams();

	[PreserveSig]
	[Token(Token = "0x600123F")]
	[Address(RVA = "0xFE1A14", Offset = "0xFE1A14", VA = "0xFE1A14")]
	public static extern void CSharp_AkRoomParams_Up_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001240")]
	[Address(RVA = "0xFE1AA4", Offset = "0xFE1AA4", VA = "0xFE1AA4")]
	public static extern IntPtr CSharp_AkRoomParams_Up_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001241")]
	[Address(RVA = "0xFE1BB0", Offset = "0xFE1BB0", VA = "0xFE1BB0")]
	public static extern void CSharp_AkRoomParams_Front_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001242")]
	[Address(RVA = "0xFE1C40", Offset = "0xFE1C40", VA = "0xFE1C40")]
	public static extern IntPtr CSharp_AkRoomParams_Front_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001243")]
	[Address(RVA = "0xFE1CC0", Offset = "0xFE1CC0", VA = "0xFE1CC0")]
	public static extern void CSharp_AkRoomParams_ReverbAuxBus_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001244")]
	[Address(RVA = "0xFE1DB8", Offset = "0xFE1DB8", VA = "0xFE1DB8")]
	public static extern uint CSharp_AkRoomParams_ReverbAuxBus_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001245")]
	[Address(RVA = "0xFE1E38", Offset = "0xFE1E38", VA = "0xFE1E38")]
	public static extern void CSharp_AkRoomParams_ReverbLevel_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001246")]
	[Address(RVA = "0xFE1F30", Offset = "0xFE1F30", VA = "0xFE1F30")]
	public static extern float CSharp_AkRoomParams_ReverbLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001247")]
	[Address(RVA = "0xFE1FB0", Offset = "0xFE1FB0", VA = "0xFE1FB0")]
	public static extern void CSharp_AkRoomParams_WallOcclusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001248")]
	[Address(RVA = "0xFE20A8", Offset = "0xFE20A8", VA = "0xFE20A8")]
	public static extern float CSharp_AkRoomParams_WallOcclusion_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001249")]
	[Address(RVA = "0xFE2128", Offset = "0xFE2128", VA = "0xFE2128")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_AuxSendLevelToSelf_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600124A")]
	[Address(RVA = "0xFE2220", Offset = "0xFE2220", VA = "0xFE2220")]
	public static extern float CSharp_AkRoomParams_RoomGameObj_AuxSendLevelToSelf_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600124B")]
	[Address(RVA = "0xFE22A0", Offset = "0xFE22A0", VA = "0xFE22A0")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_KeepRegistered_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x600124C")]
	[Address(RVA = "0xFE2398", Offset = "0xFE2398", VA = "0xFE2398")]
	public static extern bool CSharp_AkRoomParams_RoomGameObj_KeepRegistered_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600124D")]
	[Address(RVA = "0xFE1894", Offset = "0xFE1894", VA = "0xFE1894")]
	public static extern void CSharp_delete_AkRoomParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600124E")]
	[Address(RVA = "0xFFB0E0", Offset = "0xFFB0E0", VA = "0xFFB0E0")]
	public static extern int CSharp_GetPoolID();

	[PreserveSig]
	[Token(Token = "0x600124F")]
	[Address(RVA = "0xFFB214", Offset = "0xFFB214", VA = "0xFFB214")]
	public static extern int CSharp_RegisterEmitter(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001250")]
	[Address(RVA = "0xFFB340", Offset = "0xFFB340", VA = "0xFFB340")]
	public static extern int CSharp_UnregisterEmitter(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001251")]
	[Address(RVA = "0xFFB480", Offset = "0xFFB480", VA = "0xFFB480")]
	public static extern int CSharp_SetEmitterAuxSendValues(ulong jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001252")]
	[Address(RVA = "0xFFB5F8", Offset = "0xFFB5F8", VA = "0xFFB5F8")]
	public static extern int CSharp_SetImageSource__SWIG_0(uint jarg1, IntPtr jarg2, uint jarg3, ulong jarg4, ulong jarg5);

	[PreserveSig]
	[Token(Token = "0x6001253")]
	[Address(RVA = "0xFFB748", Offset = "0xFFB748", VA = "0xFFB748")]
	public static extern int CSharp_SetImageSource__SWIG_1(uint jarg1, IntPtr jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6001254")]
	[Address(RVA = "0xFFB8A4", Offset = "0xFFB8A4", VA = "0xFFB8A4")]
	public static extern int CSharp_RemoveImageSource__SWIG_0(uint jarg1, uint jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6001255")]
	[Address(RVA = "0xFFB9B0", Offset = "0xFFB9B0", VA = "0xFFB9B0")]
	public static extern int CSharp_RemoveImageSource__SWIG_1(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001256")]
	[Address(RVA = "0xFFBAA4", Offset = "0xFFBAA4", VA = "0xFFBAA4")]
	public static extern int CSharp_RemoveGeometry(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001257")]
	[Address(RVA = "0xFFBC1C", Offset = "0xFFBC1C", VA = "0xFFBC1C")]
	public static extern int CSharp_QueryReflectionPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001258")]
	[Address(RVA = "0xFFBCCC", Offset = "0xFFBCCC", VA = "0xFFBCCC")]
	public static extern int CSharp_RemoveRoom(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001259")]
	[Address(RVA = "0xFFBDB0", Offset = "0xFFBDB0", VA = "0xFFBDB0")]
	public static extern int CSharp_RemovePortal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x600125A")]
	[Address(RVA = "0xFFBEDC", Offset = "0xFFBEDC", VA = "0xFFBEDC")]
	public static extern int CSharp_SetGameObjectInRoom(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600125B")]
	[Address(RVA = "0xFFC020", Offset = "0xFFC020", VA = "0xFFC020")]
	public static extern int CSharp_SetEmitterObstructionAndOcclusion(ulong jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x600125C")]
	[Address(RVA = "0xFFC0B8", Offset = "0xFFC0B8", VA = "0xFFC0B8")]
	public static extern int CSharp_SetPortalObstructionAndOcclusion(ulong jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x600125D")]
	[Address(RVA = "0xFFC1C4", Offset = "0xFFC1C4", VA = "0xFFC1C4")]
	public static extern int CSharp_QueryWetDiffraction(ulong jarg1, out float jarg2);

	[PreserveSig]
	[Token(Token = "0x600125E")]
	[Address(RVA = "0x1013908", Offset = "0x1013908", VA = "0x1013908")]
	public static extern void CSharp_AkPlatformInitSettings_threadLEngine_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600125F")]
	[Address(RVA = "0x1013998", Offset = "0x1013998", VA = "0x1013998")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadLEngine_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001260")]
	[Address(RVA = "0x1013A18", Offset = "0x1013A18", VA = "0x1013A18")]
	public static extern void CSharp_AkPlatformInitSettings_threadOutputMgr_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001261")]
	[Address(RVA = "0x1013AA8", Offset = "0x1013AA8", VA = "0x1013AA8")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadOutputMgr_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001262")]
	[Address(RVA = "0x1013B28", Offset = "0x1013B28", VA = "0x1013B28")]
	public static extern void CSharp_AkPlatformInitSettings_threadBankManager_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001263")]
	[Address(RVA = "0x1013BB8", Offset = "0x1013BB8", VA = "0x1013BB8")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadBankManager_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001264")]
	[Address(RVA = "0x1013C38", Offset = "0x1013C38", VA = "0x1013C38")]
	public static extern void CSharp_AkPlatformInitSettings_threadMonitor_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001265")]
	[Address(RVA = "0x1013CC8", Offset = "0x1013CC8", VA = "0x1013CC8")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadMonitor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001266")]
	[Address(RVA = "0x1013D48", Offset = "0x1013D48", VA = "0x1013D48")]
	public static extern void CSharp_AkPlatformInitSettings_fLEngineDefaultPoolRatioThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001267")]
	[Address(RVA = "0x1013DD8", Offset = "0x1013DD8", VA = "0x1013DD8")]
	public static extern float CSharp_AkPlatformInitSettings_fLEngineDefaultPoolRatioThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001268")]
	[Address(RVA = "0x1013E58", Offset = "0x1013E58", VA = "0x1013E58")]
	public static extern void CSharp_AkPlatformInitSettings_uLEngineDefaultPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001269")]
	[Address(RVA = "0x1013EE8", Offset = "0x1013EE8", VA = "0x1013EE8")]
	public static extern uint CSharp_AkPlatformInitSettings_uLEngineDefaultPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600126A")]
	[Address(RVA = "0x1013F68", Offset = "0x1013F68", VA = "0x1013F68")]
	public static extern void CSharp_AkPlatformInitSettings_uSampleRate_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600126B")]
	[Address(RVA = "0x1013FF8", Offset = "0x1013FF8", VA = "0x1013FF8")]
	public static extern uint CSharp_AkPlatformInitSettings_uSampleRate_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600126C")]
	[Address(RVA = "0x1014078", Offset = "0x1014078", VA = "0x1014078")]
	public static extern void CSharp_AkPlatformInitSettings_uNumRefillsInVoice_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x600126D")]
	[Address(RVA = "0x1014108", Offset = "0x1014108", VA = "0x1014108")]
	public static extern ushort CSharp_AkPlatformInitSettings_uNumRefillsInVoice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600126E")]
	[Address(RVA = "0x1014188", Offset = "0x1014188", VA = "0x1014188")]
	public static extern void CSharp_AkPlatformInitSettings_uChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600126F")]
	[Address(RVA = "0x1014218", Offset = "0x1014218", VA = "0x1014218")]
	public static extern uint CSharp_AkPlatformInitSettings_uChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001270")]
	[Address(RVA = "0x1014298", Offset = "0x1014298", VA = "0x1014298")]
	public static extern void CSharp_AkPlatformInitSettings_bRoundFrameSizeToHWSize_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001271")]
	[Address(RVA = "0x1014328", Offset = "0x1014328", VA = "0x1014328")]
	public static extern bool CSharp_AkPlatformInitSettings_bRoundFrameSizeToHWSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001272")]
	[Address(RVA = "0x10143B0", Offset = "0x10143B0", VA = "0x10143B0")]
	public static extern IntPtr CSharp_new_AkPlatformInitSettings();

	[PreserveSig]
	[Token(Token = "0x6001273")]
	[Address(RVA = "0x1014424", Offset = "0x1014424", VA = "0x1014424")]
	public static extern void CSharp_delete_AkPlatformInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001274")]
	[Address(RVA = "0xFFC2EC", Offset = "0xFFC2EC", VA = "0xFFC2EC")]
	public static extern int CSharp_GetFastPathSettings(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001275")]
	[Address(RVA = "0x10144A4", Offset = "0x10144A4", VA = "0x10144A4")]
	public static extern void CSharp_AkStreamMgrSettings_uMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001276")]
	[Address(RVA = "0x1014534", Offset = "0x1014534", VA = "0x1014534")]
	public static extern uint CSharp_AkStreamMgrSettings_uMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001277")]
	[Address(RVA = "0x10145B4", Offset = "0x10145B4", VA = "0x10145B4")]
	public static extern IntPtr CSharp_new_AkStreamMgrSettings();

	[PreserveSig]
	[Token(Token = "0x6001278")]
	[Address(RVA = "0x1014628", Offset = "0x1014628", VA = "0x1014628")]
	public static extern void CSharp_delete_AkStreamMgrSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001279")]
	[Address(RVA = "0x10146A8", Offset = "0x10146A8", VA = "0x10146A8")]
	public static extern void CSharp_AkDeviceSettings_pIOMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600127A")]
	[Address(RVA = "0x1014738", Offset = "0x1014738", VA = "0x1014738")]
	public static extern IntPtr CSharp_AkDeviceSettings_pIOMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600127B")]
	[Address(RVA = "0x10147B8", Offset = "0x10147B8", VA = "0x10147B8")]
	public static extern void CSharp_AkDeviceSettings_uIOMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600127C")]
	[Address(RVA = "0x1014848", Offset = "0x1014848", VA = "0x1014848")]
	public static extern uint CSharp_AkDeviceSettings_uIOMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600127D")]
	[Address(RVA = "0x10148C8", Offset = "0x10148C8", VA = "0x10148C8")]
	public static extern void CSharp_AkDeviceSettings_uIOMemoryAlignment_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600127E")]
	[Address(RVA = "0x1014958", Offset = "0x1014958", VA = "0x1014958")]
	public static extern uint CSharp_AkDeviceSettings_uIOMemoryAlignment_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600127F")]
	[Address(RVA = "0x10149D8", Offset = "0x10149D8", VA = "0x10149D8")]
	public static extern void CSharp_AkDeviceSettings_ePoolAttributes_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001280")]
	[Address(RVA = "0x1014A68", Offset = "0x1014A68", VA = "0x1014A68")]
	public static extern int CSharp_AkDeviceSettings_ePoolAttributes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001281")]
	[Address(RVA = "0x1014AE8", Offset = "0x1014AE8", VA = "0x1014AE8")]
	public static extern void CSharp_AkDeviceSettings_uGranularity_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001282")]
	[Address(RVA = "0x1014B78", Offset = "0x1014B78", VA = "0x1014B78")]
	public static extern uint CSharp_AkDeviceSettings_uGranularity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001283")]
	[Address(RVA = "0x1014BF8", Offset = "0x1014BF8", VA = "0x1014BF8")]
	public static extern void CSharp_AkDeviceSettings_uSchedulerTypeFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001284")]
	[Address(RVA = "0x1014C88", Offset = "0x1014C88", VA = "0x1014C88")]
	public static extern uint CSharp_AkDeviceSettings_uSchedulerTypeFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001285")]
	[Address(RVA = "0x1014D08", Offset = "0x1014D08", VA = "0x1014D08")]
	public static extern void CSharp_AkDeviceSettings_threadProperties_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001286")]
	[Address(RVA = "0x1014D98", Offset = "0x1014D98", VA = "0x1014D98")]
	public static extern IntPtr CSharp_AkDeviceSettings_threadProperties_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001287")]
	[Address(RVA = "0x1014E18", Offset = "0x1014E18", VA = "0x1014E18")]
	public static extern void CSharp_AkDeviceSettings_fTargetAutoStmBufferLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001288")]
	[Address(RVA = "0x1014EA8", Offset = "0x1014EA8", VA = "0x1014EA8")]
	public static extern float CSharp_AkDeviceSettings_fTargetAutoStmBufferLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001289")]
	[Address(RVA = "0x1014F28", Offset = "0x1014F28", VA = "0x1014F28")]
	public static extern void CSharp_AkDeviceSettings_uMaxConcurrentIO_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600128A")]
	[Address(RVA = "0x1014FB8", Offset = "0x1014FB8", VA = "0x1014FB8")]
	public static extern uint CSharp_AkDeviceSettings_uMaxConcurrentIO_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600128B")]
	[Address(RVA = "0x1015038", Offset = "0x1015038", VA = "0x1015038")]
	public static extern void CSharp_AkDeviceSettings_bUseStreamCache_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x600128C")]
	[Address(RVA = "0x10150C8", Offset = "0x10150C8", VA = "0x10150C8")]
	public static extern bool CSharp_AkDeviceSettings_bUseStreamCache_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600128D")]
	[Address(RVA = "0x1015150", Offset = "0x1015150", VA = "0x1015150")]
	public static extern void CSharp_AkDeviceSettings_uMaxCachePinnedBytes_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600128E")]
	[Address(RVA = "0x10151E0", Offset = "0x10151E0", VA = "0x10151E0")]
	public static extern uint CSharp_AkDeviceSettings_uMaxCachePinnedBytes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600128F")]
	[Address(RVA = "0x1015260", Offset = "0x1015260", VA = "0x1015260")]
	public static extern IntPtr CSharp_new_AkDeviceSettings();

	[PreserveSig]
	[Token(Token = "0x6001290")]
	[Address(RVA = "0x10152D4", Offset = "0x10152D4", VA = "0x10152D4")]
	public static extern void CSharp_delete_AkDeviceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001291")]
	[Address(RVA = "0x1015354", Offset = "0x1015354", VA = "0x1015354")]
	public static extern void CSharp_AkThreadProperties_nPriority_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001292")]
	[Address(RVA = "0x10153E4", Offset = "0x10153E4", VA = "0x10153E4")]
	public static extern int CSharp_AkThreadProperties_nPriority_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001293")]
	[Address(RVA = "0x1015464", Offset = "0x1015464", VA = "0x1015464")]
	public static extern void CSharp_AkThreadProperties_uStackSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001294")]
	[Address(RVA = "0x10154F4", Offset = "0x10154F4", VA = "0x10154F4")]
	public static extern uint CSharp_AkThreadProperties_uStackSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001295")]
	[Address(RVA = "0x1015574", Offset = "0x1015574", VA = "0x1015574")]
	public static extern void CSharp_AkThreadProperties_uSchedPolicy_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001296")]
	[Address(RVA = "0x1015604", Offset = "0x1015604", VA = "0x1015604")]
	public static extern int CSharp_AkThreadProperties_uSchedPolicy_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001297")]
	[Address(RVA = "0x1015684", Offset = "0x1015684", VA = "0x1015684")]
	public static extern void CSharp_AkThreadProperties_dwAffinityMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001298")]
	[Address(RVA = "0x1015714", Offset = "0x1015714", VA = "0x1015714")]
	public static extern uint CSharp_AkThreadProperties_dwAffinityMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001299")]
	[Address(RVA = "0x1015794", Offset = "0x1015794", VA = "0x1015794")]
	public static extern IntPtr CSharp_new_AkThreadProperties();

	[PreserveSig]
	[Token(Token = "0x600129A")]
	[Address(RVA = "0x1015808", Offset = "0x1015808", VA = "0x1015808")]
	public static extern void CSharp_delete_AkThreadProperties(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600129B")]
	[Address(RVA = "0xFFC3E0", Offset = "0xFFC3E0", VA = "0xFFC3E0")]
	public static extern void CSharp_SetErrorLogger__SWIG_0(AkLogger.ErrorLoggerInteropDelegate jarg1);

	[PreserveSig]
	[Token(Token = "0x600129C")]
	[Address(RVA = "0xFFC4C0", Offset = "0xFFC4C0", VA = "0xFFC4C0")]
	public static extern void CSharp_SetErrorLogger__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x600129D")]
	[Address(RVA = "0xFFC5A4", Offset = "0xFFC5A4", VA = "0xFFC5A4")]
	public static extern void CSharp_SetAudioInputCallbacks(AkAudioInputManager.AudioSamplesInteropDelegate jarg1, AkAudioInputManager.AudioFormatInteropDelegate jarg2);

	[PreserveSig]
	[Token(Token = "0x600129E")]
	[Address(RVA = "0x1015888", Offset = "0x1015888", VA = "0x1015888")]
	public static extern void CSharp_AkPathParams_listenerPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600129F")]
	[Address(RVA = "0x1015918", Offset = "0x1015918", VA = "0x1015918")]
	public static extern IntPtr CSharp_AkPathParams_listenerPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012A0")]
	[Address(RVA = "0x1015998", Offset = "0x1015998", VA = "0x1015998")]
	public static extern void CSharp_AkPathParams_emitterPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60012A1")]
	[Address(RVA = "0x1015A28", Offset = "0x1015A28", VA = "0x1015A28")]
	public static extern IntPtr CSharp_AkPathParams_emitterPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012A2")]
	[Address(RVA = "0x1015AA8", Offset = "0x1015AA8", VA = "0x1015AA8")]
	public static extern void CSharp_AkPathParams_numValidPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012A3")]
	[Address(RVA = "0x1015B38", Offset = "0x1015B38", VA = "0x1015B38")]
	public static extern uint CSharp_AkPathParams_numValidPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012A4")]
	[Address(RVA = "0x1015BB8", Offset = "0x1015BB8", VA = "0x1015BB8")]
	public static extern IntPtr CSharp_new_AkPathParams();

	[PreserveSig]
	[Token(Token = "0x60012A5")]
	[Address(RVA = "0x1015C2C", Offset = "0x1015C2C", VA = "0x1015C2C")]
	public static extern void CSharp_delete_AkPathParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012A6")]
	[Address(RVA = "0x1015CAC", Offset = "0x1015CAC", VA = "0x1015CAC")]
	public static extern IntPtr CSharp_new_AkUnityPlatformSpecificSettings();

	[PreserveSig]
	[Token(Token = "0x60012A7")]
	[Address(RVA = "0x1015D20", Offset = "0x1015D20", VA = "0x1015D20")]
	public static extern void CSharp_delete_AkUnityPlatformSpecificSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012A8")]
	[Address(RVA = "0x1015DA0", Offset = "0x1015DA0", VA = "0x1015DA0")]
	public static extern IntPtr CSharp_new_AkCommunicationSettings();

	[PreserveSig]
	[Token(Token = "0x60012A9")]
	[Address(RVA = "0x1015E14", Offset = "0x1015E14", VA = "0x1015E14")]
	public static extern void CSharp_AkCommunicationSettings_uPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012AA")]
	[Address(RVA = "0x1015EA4", Offset = "0x1015EA4", VA = "0x1015EA4")]
	public static extern uint CSharp_AkCommunicationSettings_uPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012AB")]
	[Address(RVA = "0x1015F24", Offset = "0x1015F24", VA = "0x1015F24")]
	public static extern void CSharp_AkCommunicationSettings_uDiscoveryBroadcastPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x60012AC")]
	[Address(RVA = "0x1015FB4", Offset = "0x1015FB4", VA = "0x1015FB4")]
	public static extern ushort CSharp_AkCommunicationSettings_uDiscoveryBroadcastPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012AD")]
	[Address(RVA = "0x1016034", Offset = "0x1016034", VA = "0x1016034")]
	public static extern void CSharp_AkCommunicationSettings_uCommandPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x60012AE")]
	[Address(RVA = "0x10160C4", Offset = "0x10160C4", VA = "0x10160C4")]
	public static extern ushort CSharp_AkCommunicationSettings_uCommandPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012AF")]
	[Address(RVA = "0x1016144", Offset = "0x1016144", VA = "0x1016144")]
	public static extern void CSharp_AkCommunicationSettings_uNotificationPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x60012B0")]
	[Address(RVA = "0x10161D4", Offset = "0x10161D4", VA = "0x10161D4")]
	public static extern ushort CSharp_AkCommunicationSettings_uNotificationPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012B1")]
	[Address(RVA = "0x1016254", Offset = "0x1016254", VA = "0x1016254")]
	public static extern void CSharp_AkCommunicationSettings_bInitSystemLib_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x60012B2")]
	[Address(RVA = "0x10162E4", Offset = "0x10162E4", VA = "0x10162E4")]
	public static extern bool CSharp_AkCommunicationSettings_bInitSystemLib_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012B3")]
	[Address(RVA = "0x101636C", Offset = "0x101636C", VA = "0x101636C")]
	public static extern void CSharp_AkCommunicationSettings_szAppNetworkName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x60012B4")]
	[Address(RVA = "0x1016410", Offset = "0x1016410", VA = "0x1016410")]
	public static extern IntPtr CSharp_AkCommunicationSettings_szAppNetworkName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012B5")]
	[Address(RVA = "0x1016490", Offset = "0x1016490", VA = "0x1016490")]
	public static extern void CSharp_delete_AkCommunicationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012B6")]
	[Address(RVA = "0x1016510", Offset = "0x1016510", VA = "0x1016510")]
	public static extern IntPtr CSharp_new_AkInitializationSettings();

	[PreserveSig]
	[Token(Token = "0x60012B7")]
	[Address(RVA = "0x1016584", Offset = "0x1016584", VA = "0x1016584")]
	public static extern void CSharp_delete_AkInitializationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012B8")]
	[Address(RVA = "0x1016604", Offset = "0x1016604", VA = "0x1016604")]
	public static extern void CSharp_AkInitializationSettings_memSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60012B9")]
	[Address(RVA = "0x1016694", Offset = "0x1016694", VA = "0x1016694")]
	public static extern IntPtr CSharp_AkInitializationSettings_memSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012BA")]
	[Address(RVA = "0x1016714", Offset = "0x1016714", VA = "0x1016714")]
	public static extern void CSharp_AkInitializationSettings_streamMgrSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x10167A4", Offset = "0x10167A4", VA = "0x10167A4")]
	public static extern IntPtr CSharp_AkInitializationSettings_streamMgrSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x1016824", Offset = "0x1016824", VA = "0x1016824")]
	public static extern void CSharp_AkInitializationSettings_deviceSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60012BD")]
	[Address(RVA = "0x10168B4", Offset = "0x10168B4", VA = "0x10168B4")]
	public static extern IntPtr CSharp_AkInitializationSettings_deviceSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012BE")]
	[Address(RVA = "0x1016934", Offset = "0x1016934", VA = "0x1016934")]
	public static extern void CSharp_AkInitializationSettings_initSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60012BF")]
	[Address(RVA = "0x10169C4", Offset = "0x10169C4", VA = "0x10169C4")]
	public static extern IntPtr CSharp_AkInitializationSettings_initSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012C0")]
	[Address(RVA = "0x1016A44", Offset = "0x1016A44", VA = "0x1016A44")]
	public static extern void CSharp_AkInitializationSettings_platformSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60012C1")]
	[Address(RVA = "0x1016AD4", Offset = "0x1016AD4", VA = "0x1016AD4")]
	public static extern IntPtr CSharp_AkInitializationSettings_platformSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012C2")]
	[Address(RVA = "0x1016B54", Offset = "0x1016B54", VA = "0x1016B54")]
	public static extern void CSharp_AkInitializationSettings_musicSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60012C3")]
	[Address(RVA = "0x1016BE4", Offset = "0x1016BE4", VA = "0x1016BE4")]
	public static extern IntPtr CSharp_AkInitializationSettings_musicSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012C4")]
	[Address(RVA = "0x1016C64", Offset = "0x1016C64", VA = "0x1016C64")]
	public static extern void CSharp_AkInitializationSettings_preparePoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012C5")]
	[Address(RVA = "0x1016CF4", Offset = "0x1016CF4", VA = "0x1016CF4")]
	public static extern uint CSharp_AkInitializationSettings_preparePoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012C6")]
	[Address(RVA = "0x1016D74", Offset = "0x1016D74", VA = "0x1016D74")]
	public static extern void CSharp_AkInitializationSettings_unityPlatformSpecificSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60012C7")]
	[Address(RVA = "0x1016E04", Offset = "0x1016E04", VA = "0x1016E04")]
	public static extern IntPtr CSharp_AkInitializationSettings_unityPlatformSpecificSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012C8")]
	[Address(RVA = "0x1016E84", Offset = "0x1016E84", VA = "0x1016E84")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x60012C9")]
	[Address(RVA = "0x1016EF8", Offset = "0x1016EF8", VA = "0x1016EF8")]
	public static extern void CSharp_delete_AkExternalSourceInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012CA")]
	[Address(RVA = "0x1016F78", Offset = "0x1016F78", VA = "0x1016F78")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_1(IntPtr jarg1, uint jarg2, uint jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x60012CB")]
	[Address(RVA = "0x1017020", Offset = "0x1017020", VA = "0x1017020")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_2(string jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60012CC")]
	[Address(RVA = "0x10170D0", Offset = "0x10170D0", VA = "0x10170D0")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_3(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60012CD")]
	[Address(RVA = "0x1017168", Offset = "0x1017168", VA = "0x1017168")]
	public static extern void CSharp_AkExternalSourceInfo_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012CE")]
	[Address(RVA = "0x10171E8", Offset = "0x10171E8", VA = "0x10171E8")]
	public static extern void CSharp_AkExternalSourceInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60012CF")]
	[Address(RVA = "0x1017278", Offset = "0x1017278", VA = "0x1017278")]
	public static extern int CSharp_AkExternalSourceInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60012D0")]
	[Address(RVA = "0x10172EC", Offset = "0x10172EC", VA = "0x10172EC")]
	public static extern void CSharp_AkExternalSourceInfo_iExternalSrcCookie_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012D1")]
	[Address(RVA = "0x101737C", Offset = "0x101737C", VA = "0x101737C")]
	public static extern uint CSharp_AkExternalSourceInfo_iExternalSrcCookie_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012D2")]
	[Address(RVA = "0x10173FC", Offset = "0x10173FC", VA = "0x10173FC")]
	public static extern void CSharp_AkExternalSourceInfo_idCodec_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012D3")]
	[Address(RVA = "0x101748C", Offset = "0x101748C", VA = "0x101748C")]
	public static extern uint CSharp_AkExternalSourceInfo_idCodec_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012D4")]
	[Address(RVA = "0x101750C", Offset = "0x101750C", VA = "0x101750C")]
	public static extern void CSharp_AkExternalSourceInfo_szFile_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x60012D5")]
	[Address(RVA = "0x10175B0", Offset = "0x10175B0", VA = "0x10175B0")]
	public static extern IntPtr CSharp_AkExternalSourceInfo_szFile_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012D6")]
	[Address(RVA = "0x1017630", Offset = "0x1017630", VA = "0x1017630")]
	public static extern void CSharp_AkExternalSourceInfo_pInMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60012D7")]
	[Address(RVA = "0x10176C0", Offset = "0x10176C0", VA = "0x10176C0")]
	public static extern IntPtr CSharp_AkExternalSourceInfo_pInMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012D8")]
	[Address(RVA = "0x1017740", Offset = "0x1017740", VA = "0x1017740")]
	public static extern void CSharp_AkExternalSourceInfo_uiMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012D9")]
	[Address(RVA = "0x10177D0", Offset = "0x10177D0", VA = "0x10177D0")]
	public static extern uint CSharp_AkExternalSourceInfo_uiMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012DA")]
	[Address(RVA = "0x1017850", Offset = "0x1017850", VA = "0x1017850")]
	public static extern void CSharp_AkExternalSourceInfo_idFile_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012DB")]
	[Address(RVA = "0x10178E0", Offset = "0x10178E0", VA = "0x10178E0")]
	public static extern uint CSharp_AkExternalSourceInfo_idFile_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012DC")]
	[Address(RVA = "0xFFC6C0", Offset = "0xFFC6C0", VA = "0xFFC6C0")]
	public static extern int CSharp_Init(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012DD")]
	[Address(RVA = "0xFFC7B8", Offset = "0xFFC7B8", VA = "0xFFC7B8")]
	public static extern int CSharp_InitSpatialAudio(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012DE")]
	[Address(RVA = "0xFFC8B0", Offset = "0xFFC8B0", VA = "0xFFC8B0")]
	public static extern int CSharp_InitCommunication(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012DF")]
	[Address(RVA = "0xFFC98C", Offset = "0xFFC98C", VA = "0xFFC98C")]
	public static extern void CSharp_Term();

	[PreserveSig]
	[Token(Token = "0x60012E0")]
	[Address(RVA = "0xFFCA90", Offset = "0xFFCA90", VA = "0xFFCA90")]
	public static extern int CSharp_RegisterGameObjInternal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60012E1")]
	[Address(RVA = "0xFFCBA4", Offset = "0xFFCBA4", VA = "0xFFCBA4")]
	public static extern int CSharp_UnregisterGameObjInternal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60012E2")]
	[Address(RVA = "0xFFCCC8", Offset = "0xFFCCC8", VA = "0xFFCCC8")]
	public static extern int CSharp_RegisterGameObjInternal_WithName(ulong jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x60012E3")]
	[Address(RVA = "0xFFCDD8", Offset = "0xFFCDD8", VA = "0xFFCDD8")]
	public static extern int CSharp_SetBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60012E4")]
	[Address(RVA = "0xFFCED4", Offset = "0xFFCED4", VA = "0xFFCED4")]
	public static extern int CSharp_SetCurrentLanguage(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60012E5")]
	[Address(RVA = "0xFFCFE8", Offset = "0xFFCFE8", VA = "0xFFCFE8")]
	public static extern int CSharp_LoadFilePackage(string jarg1, out uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60012E6")]
	[Address(RVA = "0xFFD0FC", Offset = "0xFFD0FC", VA = "0xFFD0FC")]
	public static extern int CSharp_AddBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60012E7")]
	[Address(RVA = "0xFFD1F8", Offset = "0xFFD1F8", VA = "0xFFD1F8")]
	public static extern int CSharp_SetGameName(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60012E8")]
	[Address(RVA = "0xFFD2F4", Offset = "0xFFD2F4", VA = "0xFFD2F4")]
	public static extern int CSharp_SetDecodedBankPath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60012E9")]
	[Address(RVA = "0xFFD408", Offset = "0xFFD408", VA = "0xFFD408")]
	public static extern int CSharp_LoadAndDecodeBank(string jarg1, bool jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60012EA")]
	[Address(RVA = "0xFFD55C", Offset = "0xFFD55C", VA = "0xFFD55C")]
	public static extern int CSharp_LoadAndDecodeBankFromMemory(IntPtr jarg1, uint jarg2, bool jarg3, string jarg4, bool jarg5, out uint jarg6);

	[PreserveSig]
	[Token(Token = "0x60012EB")]
	[Address(RVA = "0xFFD6C4", Offset = "0xFFD6C4", VA = "0xFFD6C4")]
	public static extern IntPtr CSharp_GetCurrentLanguage();

	[PreserveSig]
	[Token(Token = "0x60012EC")]
	[Address(RVA = "0xFFD800", Offset = "0xFFD800", VA = "0xFFD800")]
	public static extern int CSharp_UnloadFilePackage(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60012ED")]
	[Address(RVA = "0xFFD8DC", Offset = "0xFFD8DC", VA = "0xFFD8DC")]
	public static extern int CSharp_UnloadAllFilePackages();

	[PreserveSig]
	[Token(Token = "0x60012EE")]
	[Address(RVA = "0xFFDA54", Offset = "0xFFDA54", VA = "0xFFDA54")]
	public static extern int CSharp_SetObjectPosition(ulong jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10);

	[PreserveSig]
	[Token(Token = "0x60012EF")]
	[Address(RVA = "0xFFDBE0", Offset = "0xFFDBE0", VA = "0xFFDBE0")]
	public static extern int CSharp_GetSourceMultiplePlayPositions(uint jarg1, [Out] uint[] jarg2, [Out] uint[] jarg3, [Out] int[] jarg4, ref uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60012F0")]
	[Address(RVA = "0xFFDEA4", Offset = "0xFFDEA4", VA = "0xFFDEA4")]
	public static extern int CSharp_SetListeners(ulong jarg1, ulong[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60012F1")]
	[Address(RVA = "0xFFDFB8", Offset = "0xFFDFB8", VA = "0xFFDFB8")]
	public static extern int CSharp_SetDefaultListeners(ulong[] jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012F2")]
	[Address(RVA = "0xFFE0F0", Offset = "0xFFE0F0", VA = "0xFFE0F0")]
	public static extern int CSharp_AddOutput(IntPtr jarg1, out ulong jarg2, ulong[] jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x60012F3")]
	[Address(RVA = "0xFFE218", Offset = "0xFFE218", VA = "0xFFE218")]
	public static extern void CSharp_GetDefaultStreamSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012F4")]
	[Address(RVA = "0xFFE310", Offset = "0xFFE310", VA = "0xFFE310")]
	public static extern void CSharp_GetDefaultDeviceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012F5")]
	[Address(RVA = "0xFFE408", Offset = "0xFFE408", VA = "0xFFE408")]
	public static extern void CSharp_GetDefaultMusicSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012F6")]
	[Address(RVA = "0xFFE500", Offset = "0xFFE500", VA = "0xFFE500")]
	public static extern void CSharp_GetDefaultInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012F7")]
	[Address(RVA = "0xFFE5F8", Offset = "0xFFE5F8", VA = "0xFFE5F8")]
	public static extern void CSharp_GetDefaultPlatformInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012F8")]
	[Address(RVA = "0xFFE6D4", Offset = "0xFFE6D4", VA = "0xFFE6D4")]
	public static extern uint CSharp_GetMajorMinorVersion();

	[PreserveSig]
	[Token(Token = "0x60012F9")]
	[Address(RVA = "0xFFE7A4", Offset = "0xFFE7A4", VA = "0xFFE7A4")]
	public static extern uint CSharp_GetSubminorBuildVersion();

	[PreserveSig]
	[Token(Token = "0x60012FA")]
	[Address(RVA = "0xFFE8F8", Offset = "0xFFE8F8", VA = "0xFFE8F8")]
	public static extern int CSharp_QueryIndirectPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x60012FB")]
	[Address(RVA = "0xFFEA80", Offset = "0xFFEA80", VA = "0xFFEA80")]
	public static extern int CSharp_QueryDiffractionPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x60012FC")]
	[Address(RVA = "0xFFEB24", Offset = "0xFFEB24", VA = "0xFFEB24")]
	public static extern int CSharp_SetRoomPortal(ulong jarg1, IntPtr jarg2, IntPtr jarg3, bool jarg4, ulong jarg5, ulong jarg6);

	[PreserveSig]
	[Token(Token = "0x60012FD")]
	[Address(RVA = "0xFFEBE4", Offset = "0xFFEBE4", VA = "0xFFEBE4")]
	public static extern int CSharp_SetRoom(ulong jarg1, IntPtr jarg2, string jarg3);

	[PreserveSig]
	[Token(Token = "0x60012FE")]
	[Address(RVA = "0xFFED34", Offset = "0xFFED34", VA = "0xFFED34")]
	public static extern int CSharp_RegisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60012FF")]
	[Address(RVA = "0xFFEE50", Offset = "0xFFEE50", VA = "0xFFEE50")]
	public static extern int CSharp_UnregisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001300")]
	[Address(RVA = "0xFFF000", Offset = "0xFFF000", VA = "0xFFF000")]
	public static extern int CSharp_SetGeometry(ulong jarg1, IntPtr jarg2, uint jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6, uint jarg7, ulong jarg8, bool jarg9, bool jarg10);

	[PreserveSig]
	[Token(Token = "0x6001301")]
	[Address(RVA = "0x1017960", Offset = "0x1017960", VA = "0x1017960")]
	public static extern IntPtr CSharp_AkPlaylist_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001302")]
	[Address(RVA = "0x10179E0", Offset = "0x10179E0", VA = "0x10179E0")]
	public static extern IntPtr CSharp_AkMIDIPost_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001303")]
	[Address(RVA = "0x1017A60", Offset = "0x1017A60", VA = "0x1017A60")]
	public static extern IntPtr CSharp_AkEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001304")]
	[Address(RVA = "0x1017AE0", Offset = "0x1017AE0", VA = "0x1017AE0")]
	public static extern IntPtr CSharp_AkMIDIEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001305")]
	[Address(RVA = "0x1017B60", Offset = "0x1017B60", VA = "0x1017B60")]
	public static extern IntPtr CSharp_AkMarkerCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001306")]
	[Address(RVA = "0x1017BE0", Offset = "0x1017BE0", VA = "0x1017BE0")]
	public static extern IntPtr CSharp_AkDurationCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001307")]
	[Address(RVA = "0x1017C60", Offset = "0x1017C60", VA = "0x1017C60")]
	public static extern IntPtr CSharp_AkDynamicSequenceItemCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001308")]
	[Address(RVA = "0x1017CE0", Offset = "0x1017CE0", VA = "0x1017CE0")]
	public static extern IntPtr CSharp_AkMusicSyncCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001309")]
	[Address(RVA = "0x1017D60", Offset = "0x1017D60", VA = "0x1017D60")]
	public static extern IntPtr CSharp_AkMusicPlaylistCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[Token(Token = "0x600130A")]
	[Address(RVA = "0x1017DE0", Offset = "0x1017DE0", VA = "0x1017DE0")]
	public AkSoundEnginePINVOKE()
	{
	}
}
[Token(Token = "0x20002D0")]
public class AkSoundEngine
{
	[Token(Token = "0x2000694")]
	public delegate ulong GameObjectHashFunction(GameObject gameObject);

	[Token(Token = "0x2000695")]
	private class AutoObject
	{
		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly GameObject gameObject;

		[Token(Token = "0x6002613")]
		[Address(RVA = "0x1000494", Offset = "0x1000494", VA = "0x1000494")]
		public AutoObject(GameObject go)
		{
		}

		[Token(Token = "0x6002614")]
		[Address(RVA = "0x10006D4", Offset = "0x10006D4", VA = "0x10006D4", Slot = "1")]
		~AutoObject()
		{
		}
	}

	[Token(Token = "0x40011D0")]
	public const int AK_SIMD_ALIGNMENT = 16;

	[Token(Token = "0x40011D1")]
	public const int AK_BUFFER_ALIGNMENT = 16;

	[Token(Token = "0x40011D2")]
	public const int AK_MAX_PATH = 260;

	[Token(Token = "0x40011D3")]
	public const int AK_BANK_PLATFORM_DATA_ALIGNMENT = 16;

	[Token(Token = "0x40011D4")]
	public const uint AK_INVALID_PLUGINID = uint.MaxValue;

	[Token(Token = "0x40011D5")]
	public const ulong AK_INVALID_GAME_OBJECT = ulong.MaxValue;

	[Token(Token = "0x40011D6")]
	public const uint AK_INVALID_UNIQUE_ID = 0u;

	[Token(Token = "0x40011D7")]
	public const uint AK_INVALID_RTPC_ID = 0u;

	[Token(Token = "0x40011D8")]
	public const uint AK_INVALID_LISTENER_INDEX = uint.MaxValue;

	[Token(Token = "0x40011D9")]
	public const uint AK_INVALID_PLAYING_ID = 0u;

	[Token(Token = "0x40011DA")]
	public const uint AK_DEFAULT_SWITCH_STATE = 0u;

	[Token(Token = "0x40011DB")]
	public const int AK_INVALID_POOL_ID = -1;

	[Token(Token = "0x40011DC")]
	public const int AK_DEFAULT_POOL_ID = -1;

	[Token(Token = "0x40011DD")]
	public const uint AK_INVALID_AUX_ID = 0u;

	[Token(Token = "0x40011DE")]
	public const uint AK_INVALID_FILE_ID = uint.MaxValue;

	[Token(Token = "0x40011DF")]
	public const uint AK_INVALID_DEVICE_ID = uint.MaxValue;

	[Token(Token = "0x40011E0")]
	public const uint AK_INVALID_BANK_ID = 0u;

	[Token(Token = "0x40011E1")]
	public const uint AK_FALLBACK_ARGUMENTVALUE_ID = 0u;

	[Token(Token = "0x40011E2")]
	public const uint AK_INVALID_CHANNELMASK = 0u;

	[Token(Token = "0x40011E3")]
	public const uint AK_INVALID_OUTPUT_DEVICE_ID = 0u;

	[Token(Token = "0x40011E4")]
	public const uint AK_MIXER_FX_SLOT = uint.MaxValue;

	[Token(Token = "0x40011E5")]
	public const ulong AK_DEFAULT_LISTENER_OBJ = 0uL;

	[Token(Token = "0x40011E6")]
	public const uint AK_DEFAULT_PRIORITY = 50u;

	[Token(Token = "0x40011E7")]
	public const uint AK_MIN_PRIORITY = 0u;

	[Token(Token = "0x40011E8")]
	public const uint AK_MAX_PRIORITY = 100u;

	[Token(Token = "0x40011E9")]
	public const uint AK_DEFAULT_BANK_IO_PRIORITY = 50u;

	[Token(Token = "0x40011EA")]
	public const double AK_DEFAULT_BANK_THROUGHPUT = 1048.576;

	[Token(Token = "0x40011EB")]
	public const uint AKCOMPANYID_AUDIOKINETIC = 0u;

	[Token(Token = "0x40011EC")]
	public const uint AK_LISTENERS_MASK_ALL = uint.MaxValue;

	[Token(Token = "0x40011ED")]
	public const int NULL = 0;

	[Token(Token = "0x40011EE")]
	public const int AKCURVEINTERPOLATION_NUM_STORAGE_BIT = 5;

	[Token(Token = "0x40011EF")]
	public const int AK_MAX_LANGUAGE_NAME_SIZE = 32;

	[Token(Token = "0x40011F0")]
	public const int AKCOMPANYID_PLUGINDEV_MIN = 64;

	[Token(Token = "0x40011F1")]
	public const int AKCOMPANYID_PLUGINDEV_MAX = 255;

	[Token(Token = "0x40011F2")]
	public const int AKCOMPANYID_AUDIOKINETIC_EXTERNAL = 1;

	[Token(Token = "0x40011F3")]
	public const int AKCOMPANYID_MCDSP = 256;

	[Token(Token = "0x40011F4")]
	public const int AKCOMPANYID_WAVEARTS = 257;

	[Token(Token = "0x40011F5")]
	public const int AKCOMPANYID_PHONETICARTS = 258;

	[Token(Token = "0x40011F6")]
	public const int AKCOMPANYID_IZOTOPE = 259;

	[Token(Token = "0x40011F7")]
	public const int AKCOMPANYID_CRANKCASEAUDIO = 261;

	[Token(Token = "0x40011F8")]
	public const int AKCOMPANYID_IOSONO = 262;

	[Token(Token = "0x40011F9")]
	public const int AKCOMPANYID_AUROTECHNOLOGIES = 263;

	[Token(Token = "0x40011FA")]
	public const int AKCOMPANYID_DOLBY = 264;

	[Token(Token = "0x40011FB")]
	public const int AKCOMPANYID_TWOBIGEARS = 265;

	[Token(Token = "0x40011FC")]
	public const int AKCOMPANYID_OCULUS = 266;

	[Token(Token = "0x40011FD")]
	public const int AKCOMPANYID_BLUERIPPLESOUND = 267;

	[Token(Token = "0x40011FE")]
	public const int AKCOMPANYID_ENZIEN = 268;

	[Token(Token = "0x40011FF")]
	public const int AKCOMPANYID_KROTOS = 269;

	[Token(Token = "0x4001200")]
	public const int AKCOMPANYID_NURULIZE = 270;

	[Token(Token = "0x4001201")]
	public const int AKCOMPANYID_SUPERPOWERED = 271;

	[Token(Token = "0x4001202")]
	public const int AKCOMPANYID_GOOGLE = 272;

	[Token(Token = "0x4001203")]
	public const int AKCOMPANYID_VISISONICS = 277;

	[Token(Token = "0x4001204")]
	public const int AKCODECID_BANK = 0;

	[Token(Token = "0x4001205")]
	public const int AKCODECID_PCM = 1;

	[Token(Token = "0x4001206")]
	public const int AKCODECID_ADPCM = 2;

	[Token(Token = "0x4001207")]
	public const int AKCODECID_XMA = 3;

	[Token(Token = "0x4001208")]
	public const int AKCODECID_VORBIS = 4;

	[Token(Token = "0x4001209")]
	public const int AKCODECID_WIIADPCM = 5;

	[Token(Token = "0x400120A")]
	public const int AKCODECID_PCMEX = 7;

	[Token(Token = "0x400120B")]
	public const int AKCODECID_EXTERNAL_SOURCE = 8;

	[Token(Token = "0x400120C")]
	public const int AKCODECID_XWMA = 9;

	[Token(Token = "0x400120D")]
	public const int AKCODECID_AAC = 10;

	[Token(Token = "0x400120E")]
	public const int AKCODECID_FILE_PACKAGE = 11;

	[Token(Token = "0x400120F")]
	public const int AKCODECID_ATRAC9 = 12;

	[Token(Token = "0x4001210")]
	public const int AKCODECID_VAG = 13;

	[Token(Token = "0x4001211")]
	public const int AKCODECID_PROFILERCAPTURE = 14;

	[Token(Token = "0x4001212")]
	public const int AKCODECID_ANALYSISFILE = 15;

	[Token(Token = "0x4001213")]
	public const int AKCODECID_MIDI = 16;

	[Token(Token = "0x4001214")]
	public const int AKCODECID_OPUSNX = 17;

	[Token(Token = "0x4001215")]
	public const int AKCODECID_CAF = 18;

	[Token(Token = "0x4001216")]
	public const int AKCODECID_AKOPUS = 19;

	[Token(Token = "0x4001217")]
	public const int AKPLUGINID_METER = 129;

	[Token(Token = "0x4001218")]
	public const int AKPLUGINID_RECORDER = 132;

	[Token(Token = "0x4001219")]
	public const int AKEXTENSIONID_SPATIALAUDIO = 800;

	[Token(Token = "0x400121A")]
	public const int AKEXTENSIONID_INTERACTIVEMUSIC = 801;

	[Token(Token = "0x400121B")]
	public const int AKEXTENSIONID_EVENTMGRTHREAD = 900;

	[Token(Token = "0x400121C")]
	public const int AK_WAVE_FORMAT_VAG = 65531;

	[Token(Token = "0x400121D")]
	public const int AK_WAVE_FORMAT_AT9 = 65532;

	[Token(Token = "0x400121E")]
	public const int AK_WAVE_FORMAT_VORBIS = 65535;

	[Token(Token = "0x400121F")]
	public const int AK_WAVE_FORMAT_AAC = 43712;

	[Token(Token = "0x4001220")]
	public const int AK_WAVE_FORMAT_OPUSNX = 12345;

	[Token(Token = "0x4001221")]
	public const int AK_WAVE_FORMAT_OPUS = 12352;

	[Token(Token = "0x4001222")]
	public const int WAVE_FORMAT_XMA2 = 358;

	[Token(Token = "0x4001223")]
	public const int AK_PANNER_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4001224")]
	public const int AK_POSSOURCE_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4001225")]
	public const int AK_SPAT_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4001226")]
	public const int AK_MAX_BITS_METERING_FLAGS = 5;

	[Token(Token = "0x4001227")]
	public const int AK_OS_STRUCT_ALIGN = 4;

	[Token(Token = "0x4001228")]
	public const int AK_64B_OS_STRUCT_ALIGN = 8;

	[Token(Token = "0x4001229")]
	public const bool AK_ASYNC_OPEN_DEFAULT = false;

	[Token(Token = "0x400122A")]
	public const int AK_COMM_DEFAULT_DISCOVERY_PORT = 24024;

	[Token(Token = "0x400122B")]
	public const int AK_MIDI_EVENT_TYPE_INVALID = 0;

	[Token(Token = "0x400122C")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_OFF = 128;

	[Token(Token = "0x400122D")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_ON = 144;

	[Token(Token = "0x400122E")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_AFTERTOUCH = 160;

	[Token(Token = "0x400122F")]
	public const int AK_MIDI_EVENT_TYPE_CONTROLLER = 176;

	[Token(Token = "0x4001230")]
	public const int AK_MIDI_EVENT_TYPE_PROGRAM_CHANGE = 192;

	[Token(Token = "0x4001231")]
	public const int AK_MIDI_EVENT_TYPE_CHANNEL_AFTERTOUCH = 208;

	[Token(Token = "0x4001232")]
	public const int AK_MIDI_EVENT_TYPE_PITCH_BEND = 224;

	[Token(Token = "0x4001233")]
	public const int AK_MIDI_EVENT_TYPE_SYSEX = 240;

	[Token(Token = "0x4001234")]
	public const int AK_MIDI_EVENT_TYPE_ESCAPE = 247;

	[Token(Token = "0x4001235")]
	public const int AK_MIDI_EVENT_TYPE_META = 255;

	[Token(Token = "0x4001236")]
	public const int AK_MIDI_CC_BANK_SELECT_COARSE = 0;

	[Token(Token = "0x4001237")]
	public const int AK_MIDI_CC_MOD_WHEEL_COARSE = 1;

	[Token(Token = "0x4001238")]
	public const int AK_MIDI_CC_BREATH_CTRL_COARSE = 2;

	[Token(Token = "0x4001239")]
	public const int AK_MIDI_CC_CTRL_3_COARSE = 3;

	[Token(Token = "0x400123A")]
	public const int AK_MIDI_CC_FOOT_PEDAL_COARSE = 4;

	[Token(Token = "0x400123B")]
	public const int AK_MIDI_CC_PORTAMENTO_COARSE = 5;

	[Token(Token = "0x400123C")]
	public const int AK_MIDI_CC_DATA_ENTRY_COARSE = 6;

	[Token(Token = "0x400123D")]
	public const int AK_MIDI_CC_VOLUME_COARSE = 7;

	[Token(Token = "0x400123E")]
	public const int AK_MIDI_CC_BALANCE_COARSE = 8;

	[Token(Token = "0x400123F")]
	public const int AK_MIDI_CC_CTRL_9_COARSE = 9;

	[Token(Token = "0x4001240")]
	public const int AK_MIDI_CC_PAN_POSITION_COARSE = 10;

	[Token(Token = "0x4001241")]
	public const int AK_MIDI_CC_EXPRESSION_COARSE = 11;

	[Token(Token = "0x4001242")]
	public const int AK_MIDI_CC_EFFECT_CTRL_1_COARSE = 12;

	[Token(Token = "0x4001243")]
	public const int AK_MIDI_CC_EFFECT_CTRL_2_COARSE = 13;

	[Token(Token = "0x4001244")]
	public const int AK_MIDI_CC_CTRL_14_COARSE = 14;

	[Token(Token = "0x4001245")]
	public const int AK_MIDI_CC_CTRL_15_COARSE = 15;

	[Token(Token = "0x4001246")]
	public const int AK_MIDI_CC_GEN_SLIDER_1 = 16;

	[Token(Token = "0x4001247")]
	public const int AK_MIDI_CC_GEN_SLIDER_2 = 17;

	[Token(Token = "0x4001248")]
	public const int AK_MIDI_CC_GEN_SLIDER_3 = 18;

	[Token(Token = "0x4001249")]
	public const int AK_MIDI_CC_GEN_SLIDER_4 = 19;

	[Token(Token = "0x400124A")]
	public const int AK_MIDI_CC_CTRL_20_COARSE = 20;

	[Token(Token = "0x400124B")]
	public const int AK_MIDI_CC_CTRL_21_COARSE = 21;

	[Token(Token = "0x400124C")]
	public const int AK_MIDI_CC_CTRL_22_COARSE = 22;

	[Token(Token = "0x400124D")]
	public const int AK_MIDI_CC_CTRL_23_COARSE = 23;

	[Token(Token = "0x400124E")]
	public const int AK_MIDI_CC_CTRL_24_COARSE = 24;

	[Token(Token = "0x400124F")]
	public const int AK_MIDI_CC_CTRL_25_COARSE = 25;

	[Token(Token = "0x4001250")]
	public const int AK_MIDI_CC_CTRL_26_COARSE = 26;

	[Token(Token = "0x4001251")]
	public const int AK_MIDI_CC_CTRL_27_COARSE = 27;

	[Token(Token = "0x4001252")]
	public const int AK_MIDI_CC_CTRL_28_COARSE = 28;

	[Token(Token = "0x4001253")]
	public const int AK_MIDI_CC_CTRL_29_COARSE = 29;

	[Token(Token = "0x4001254")]
	public const int AK_MIDI_CC_CTRL_30_COARSE = 30;

	[Token(Token = "0x4001255")]
	public const int AK_MIDI_CC_CTRL_31_COARSE = 31;

	[Token(Token = "0x4001256")]
	public const int AK_MIDI_CC_BANK_SELECT_FINE = 32;

	[Token(Token = "0x4001257")]
	public const int AK_MIDI_CC_MOD_WHEEL_FINE = 33;

	[Token(Token = "0x4001258")]
	public const int AK_MIDI_CC_BREATH_CTRL_FINE = 34;

	[Token(Token = "0x4001259")]
	public const int AK_MIDI_CC_CTRL_3_FINE = 35;

	[Token(Token = "0x400125A")]
	public const int AK_MIDI_CC_FOOT_PEDAL_FINE = 36;

	[Token(Token = "0x400125B")]
	public const int AK_MIDI_CC_PORTAMENTO_FINE = 37;

	[Token(Token = "0x400125C")]
	public const int AK_MIDI_CC_DATA_ENTRY_FINE = 38;

	[Token(Token = "0x400125D")]
	public const int AK_MIDI_CC_VOLUME_FINE = 39;

	[Token(Token = "0x400125E")]
	public const int AK_MIDI_CC_BALANCE_FINE = 40;

	[Token(Token = "0x400125F")]
	public const int AK_MIDI_CC_CTRL_9_FINE = 41;

	[Token(Token = "0x4001260")]
	public const int AK_MIDI_CC_PAN_POSITION_FINE = 42;

	[Token(Token = "0x4001261")]
	public const int AK_MIDI_CC_EXPRESSION_FINE = 43;

	[Token(Token = "0x4001262")]
	public const int AK_MIDI_CC_EFFECT_CTRL_1_FINE = 44;

	[Token(Token = "0x4001263")]
	public const int AK_MIDI_CC_EFFECT_CTRL_2_FINE = 45;

	[Token(Token = "0x4001264")]
	public const int AK_MIDI_CC_CTRL_14_FINE = 46;

	[Token(Token = "0x4001265")]
	public const int AK_MIDI_CC_CTRL_15_FINE = 47;

	[Token(Token = "0x4001266")]
	public const int AK_MIDI_CC_CTRL_20_FINE = 52;

	[Token(Token = "0x4001267")]
	public const int AK_MIDI_CC_CTRL_21_FINE = 53;

	[Token(Token = "0x4001268")]
	public const int AK_MIDI_CC_CTRL_22_FINE = 54;

	[Token(Token = "0x4001269")]
	public const int AK_MIDI_CC_CTRL_23_FINE = 55;

	[Token(Token = "0x400126A")]
	public const int AK_MIDI_CC_CTRL_24_FINE = 56;

	[Token(Token = "0x400126B")]
	public const int AK_MIDI_CC_CTRL_25_FINE = 57;

	[Token(Token = "0x400126C")]
	public const int AK_MIDI_CC_CTRL_26_FINE = 58;

	[Token(Token = "0x400126D")]
	public const int AK_MIDI_CC_CTRL_27_FINE = 59;

	[Token(Token = "0x400126E")]
	public const int AK_MIDI_CC_CTRL_28_FINE = 60;

	[Token(Token = "0x400126F")]
	public const int AK_MIDI_CC_CTRL_29_FINE = 61;

	[Token(Token = "0x4001270")]
	public const int AK_MIDI_CC_CTRL_30_FINE = 62;

	[Token(Token = "0x4001271")]
	public const int AK_MIDI_CC_CTRL_31_FINE = 63;

	[Token(Token = "0x4001272")]
	public const int AK_MIDI_CC_HOLD_PEDAL = 64;

	[Token(Token = "0x4001273")]
	public const int AK_MIDI_CC_PORTAMENTO_ON_OFF = 65;

	[Token(Token = "0x4001274")]
	public const int AK_MIDI_CC_SUSTENUTO_PEDAL = 66;

	[Token(Token = "0x4001275")]
	public const int AK_MIDI_CC_SOFT_PEDAL = 67;

	[Token(Token = "0x4001276")]
	public const int AK_MIDI_CC_LEGATO_PEDAL = 68;

	[Token(Token = "0x4001277")]
	public const int AK_MIDI_CC_HOLD_PEDAL_2 = 69;

	[Token(Token = "0x4001278")]
	public const int AK_MIDI_CC_SOUND_VARIATION = 70;

	[Token(Token = "0x4001279")]
	public const int AK_MIDI_CC_SOUND_TIMBRE = 71;

	[Token(Token = "0x400127A")]
	public const int AK_MIDI_CC_SOUND_RELEASE_TIME = 72;

	[Token(Token = "0x400127B")]
	public const int AK_MIDI_CC_SOUND_ATTACK_TIME = 73;

	[Token(Token = "0x400127C")]
	public const int AK_MIDI_CC_SOUND_BRIGHTNESS = 74;

	[Token(Token = "0x400127D")]
	public const int AK_MIDI_CC_SOUND_CTRL_6 = 75;

	[Token(Token = "0x400127E")]
	public const int AK_MIDI_CC_SOUND_CTRL_7 = 76;

	[Token(Token = "0x400127F")]
	public const int AK_MIDI_CC_SOUND_CTRL_8 = 77;

	[Token(Token = "0x4001280")]
	public const int AK_MIDI_CC_SOUND_CTRL_9 = 78;

	[Token(Token = "0x4001281")]
	public const int AK_MIDI_CC_SOUND_CTRL_10 = 79;

	[Token(Token = "0x4001282")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_1 = 80;

	[Token(Token = "0x4001283")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_2 = 81;

	[Token(Token = "0x4001284")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_3 = 82;

	[Token(Token = "0x4001285")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_4 = 83;

	[Token(Token = "0x4001286")]
	public const int AK_MIDI_CC_REVERB_LEVEL = 91;

	[Token(Token = "0x4001287")]
	public const int AK_MIDI_CC_TREMOLO_LEVEL = 92;

	[Token(Token = "0x4001288")]
	public const int AK_MIDI_CC_CHORUS_LEVEL = 93;

	[Token(Token = "0x4001289")]
	public const int AK_MIDI_CC_CELESTE_LEVEL = 94;

	[Token(Token = "0x400128A")]
	public const int AK_MIDI_CC_PHASER_LEVEL = 95;

	[Token(Token = "0x400128B")]
	public const int AK_MIDI_CC_DATA_BUTTON_P1 = 96;

	[Token(Token = "0x400128C")]
	public const int AK_MIDI_CC_DATA_BUTTON_M1 = 97;

	[Token(Token = "0x400128D")]
	public const int AK_MIDI_CC_NON_REGISTER_COARSE = 98;

	[Token(Token = "0x400128E")]
	public const int AK_MIDI_CC_NON_REGISTER_FINE = 99;

	[Token(Token = "0x400128F")]
	public const int AK_MIDI_CC_ALL_SOUND_OFF = 120;

	[Token(Token = "0x4001290")]
	public const int AK_MIDI_CC_ALL_CONTROLLERS_OFF = 121;

	[Token(Token = "0x4001291")]
	public const int AK_MIDI_CC_LOCAL_KEYBOARD = 122;

	[Token(Token = "0x4001292")]
	public const int AK_MIDI_CC_ALL_NOTES_OFF = 123;

	[Token(Token = "0x4001293")]
	public const int AK_MIDI_CC_OMNI_MODE_OFF = 124;

	[Token(Token = "0x4001294")]
	public const int AK_MIDI_CC_OMNI_MODE_ON = 125;

	[Token(Token = "0x4001295")]
	public const int AK_MIDI_CC_OMNI_MONOPHONIC_ON = 126;

	[Token(Token = "0x4001296")]
	public const int AK_MIDI_CC_OMNI_POLYPHONIC_ON = 127;

	[Token(Token = "0x4001297")]
	public const int AK_SPEAKER_FRONT_LEFT = 1;

	[Token(Token = "0x4001298")]
	public const int AK_SPEAKER_FRONT_RIGHT = 2;

	[Token(Token = "0x4001299")]
	public const int AK_SPEAKER_FRONT_CENTER = 4;

	[Token(Token = "0x400129A")]
	public const int AK_SPEAKER_LOW_FREQUENCY = 8;

	[Token(Token = "0x400129B")]
	public const int AK_SPEAKER_BACK_LEFT = 16;

	[Token(Token = "0x400129C")]
	public const int AK_SPEAKER_BACK_RIGHT = 32;

	[Token(Token = "0x400129D")]
	public const int AK_SPEAKER_BACK_CENTER = 256;

	[Token(Token = "0x400129E")]
	public const int AK_SPEAKER_SIDE_LEFT = 512;

	[Token(Token = "0x400129F")]
	public const int AK_SPEAKER_SIDE_RIGHT = 1024;

	[Token(Token = "0x40012A0")]
	public const int AK_SPEAKER_TOP = 2048;

	[Token(Token = "0x40012A1")]
	public const int AK_SPEAKER_HEIGHT_FRONT_LEFT = 4096;

	[Token(Token = "0x40012A2")]
	public const int AK_SPEAKER_HEIGHT_FRONT_CENTER = 8192;

	[Token(Token = "0x40012A3")]
	public const int AK_SPEAKER_HEIGHT_FRONT_RIGHT = 16384;

	[Token(Token = "0x40012A4")]
	public const int AK_SPEAKER_HEIGHT_BACK_LEFT = 32768;

	[Token(Token = "0x40012A5")]
	public const int AK_SPEAKER_HEIGHT_BACK_CENTER = 65536;

	[Token(Token = "0x40012A6")]
	public const int AK_SPEAKER_HEIGHT_BACK_RIGHT = 131072;

	[Token(Token = "0x40012A7")]
	public const int AK_SPEAKER_SETUP_MONO = 4;

	[Token(Token = "0x40012A8")]
	public const int AK_SPEAKER_SETUP_0POINT1 = 8;

	[Token(Token = "0x40012A9")]
	public const int AK_SPEAKER_SETUP_1POINT1 = 12;

	[Token(Token = "0x40012AA")]
	public const int AK_SPEAKER_SETUP_STEREO = 3;

	[Token(Token = "0x40012AB")]
	public const int AK_SPEAKER_SETUP_2POINT1 = 11;

	[Token(Token = "0x40012AC")]
	public const int AK_SPEAKER_SETUP_3STEREO = 7;

	[Token(Token = "0x40012AD")]
	public const int AK_SPEAKER_SETUP_3POINT1 = 15;

	[Token(Token = "0x40012AE")]
	public const int AK_SPEAKER_SETUP_4 = 1539;

	[Token(Token = "0x40012AF")]
	public const int AK_SPEAKER_SETUP_4POINT1 = 1547;

	[Token(Token = "0x40012B0")]
	public const int AK_SPEAKER_SETUP_5 = 1543;

	[Token(Token = "0x40012B1")]
	public const int AK_SPEAKER_SETUP_5POINT1 = 1551;

	[Token(Token = "0x40012B2")]
	public const int AK_SPEAKER_SETUP_6 = 1587;

	[Token(Token = "0x40012B3")]
	public const int AK_SPEAKER_SETUP_6POINT1 = 1595;

	[Token(Token = "0x40012B4")]
	public const int AK_SPEAKER_SETUP_7 = 1591;

	[Token(Token = "0x40012B5")]
	public const int AK_SPEAKER_SETUP_7POINT1 = 1599;

	[Token(Token = "0x40012B6")]
	public const int AK_SPEAKER_SETUP_SURROUND = 259;

	[Token(Token = "0x40012B7")]
	public const int AK_SPEAKER_SETUP_DPL2 = 1539;

	[Token(Token = "0x40012B8")]
	public const int AK_SPEAKER_SETUP_HEIGHT_4 = 184320;

	[Token(Token = "0x40012B9")]
	public const int AK_SPEAKER_SETUP_HEIGHT_5 = 192512;

	[Token(Token = "0x40012BA")]
	public const int AK_SPEAKER_SETUP_HEIGHT_ALL = 258048;

	[Token(Token = "0x40012BB")]
	public const int AK_SPEAKER_SETUP_AURO_222 = 22019;

	[Token(Token = "0x40012BC")]
	public const int AK_SPEAKER_SETUP_AURO_8 = 185859;

	[Token(Token = "0x40012BD")]
	public const int AK_SPEAKER_SETUP_AURO_9 = 185863;

	[Token(Token = "0x40012BE")]
	public const int AK_SPEAKER_SETUP_AURO_9POINT1 = 185871;

	[Token(Token = "0x40012BF")]
	public const int AK_SPEAKER_SETUP_AURO_10 = 187911;

	[Token(Token = "0x40012C0")]
	public const int AK_SPEAKER_SETUP_AURO_10POINT1 = 187919;

	[Token(Token = "0x40012C1")]
	public const int AK_SPEAKER_SETUP_AURO_11 = 196103;

	[Token(Token = "0x40012C2")]
	public const int AK_SPEAKER_SETUP_AURO_11POINT1 = 196111;

	[Token(Token = "0x40012C3")]
	public const int AK_SPEAKER_SETUP_AURO_11_740 = 185911;

	[Token(Token = "0x40012C4")]
	public const int AK_SPEAKER_SETUP_AURO_11POINT1_740 = 185919;

	[Token(Token = "0x40012C5")]
	public const int AK_SPEAKER_SETUP_AURO_13_751 = 196151;

	[Token(Token = "0x40012C6")]
	public const int AK_SPEAKER_SETUP_AURO_13POINT1_751 = 196159;

	[Token(Token = "0x40012C7")]
	public const int AK_SPEAKER_SETUP_DOLBY_5_0_2 = 22023;

	[Token(Token = "0x40012C8")]
	public const int AK_SPEAKER_SETUP_DOLBY_5_1_2 = 22031;

	[Token(Token = "0x40012C9")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_0_2 = 22067;

	[Token(Token = "0x40012CA")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_1_2 = 22075;

	[Token(Token = "0x40012CB")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_0_4 = 185907;

	[Token(Token = "0x40012CC")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_1_4 = 185915;

	[Token(Token = "0x40012CD")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_0_2 = 22071;

	[Token(Token = "0x40012CE")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_1_2 = 22079;

	[Token(Token = "0x40012CF")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_0_4 = 185911;

	[Token(Token = "0x40012D0")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_1_4 = 185919;

	[Token(Token = "0x40012D1")]
	public const int AK_SPEAKER_SETUP_ALL_SPEAKERS = 261951;

	[Token(Token = "0x40012D2")]
	public const int AK_IDX_SETUP_FRONT_LEFT = 0;

	[Token(Token = "0x40012D3")]
	public const int AK_IDX_SETUP_FRONT_RIGHT = 1;

	[Token(Token = "0x40012D4")]
	public const int AK_IDX_SETUP_CENTER = 2;

	[Token(Token = "0x40012D5")]
	public const int AK_IDX_SETUP_NOCENTER_BACK_LEFT = 2;

	[Token(Token = "0x40012D6")]
	public const int AK_IDX_SETUP_NOCENTER_BACK_RIGHT = 3;

	[Token(Token = "0x40012D7")]
	public const int AK_IDX_SETUP_NOCENTER_SIDE_LEFT = 4;

	[Token(Token = "0x40012D8")]
	public const int AK_IDX_SETUP_NOCENTER_SIDE_RIGHT = 5;

	[Token(Token = "0x40012D9")]
	public const int AK_IDX_SETUP_WITHCENTER_BACK_LEFT = 3;

	[Token(Token = "0x40012DA")]
	public const int AK_IDX_SETUP_WITHCENTER_BACK_RIGHT = 4;

	[Token(Token = "0x40012DB")]
	public const int AK_IDX_SETUP_WITHCENTER_SIDE_LEFT = 5;

	[Token(Token = "0x40012DC")]
	public const int AK_IDX_SETUP_WITHCENTER_SIDE_RIGHT = 6;

	[Token(Token = "0x40012DD")]
	public const int AK_IDX_SETUP_0_LFE = 0;

	[Token(Token = "0x40012DE")]
	public const int AK_IDX_SETUP_1_CENTER = 0;

	[Token(Token = "0x40012DF")]
	public const int AK_IDX_SETUP_1_LFE = 1;

	[Token(Token = "0x40012E0")]
	public const int AK_IDX_SETUP_2_LEFT = 0;

	[Token(Token = "0x40012E1")]
	public const int AK_IDX_SETUP_2_RIGHT = 1;

	[Token(Token = "0x40012E2")]
	public const int AK_IDX_SETUP_2_LFE = 2;

	[Token(Token = "0x40012E3")]
	public const int AK_IDX_SETUP_3_LEFT = 0;

	[Token(Token = "0x40012E4")]
	public const int AK_IDX_SETUP_3_RIGHT = 1;

	[Token(Token = "0x40012E5")]
	public const int AK_IDX_SETUP_3_CENTER = 2;

	[Token(Token = "0x40012E6")]
	public const int AK_IDX_SETUP_3_LFE = 3;

	[Token(Token = "0x40012E7")]
	public const int AK_IDX_SETUP_4_FRONTLEFT = 0;

	[Token(Token = "0x40012E8")]
	public const int AK_IDX_SETUP_4_FRONTRIGHT = 1;

	[Token(Token = "0x40012E9")]
	public const int AK_IDX_SETUP_4_REARLEFT = 2;

	[Token(Token = "0x40012EA")]
	public const int AK_IDX_SETUP_4_REARRIGHT = 3;

	[Token(Token = "0x40012EB")]
	public const int AK_IDX_SETUP_4_LFE = 4;

	[Token(Token = "0x40012EC")]
	public const int AK_IDX_SETUP_5_FRONTLEFT = 0;

	[Token(Token = "0x40012ED")]
	public const int AK_IDX_SETUP_5_FRONTRIGHT = 1;

	[Token(Token = "0x40012EE")]
	public const int AK_IDX_SETUP_5_CENTER = 2;

	[Token(Token = "0x40012EF")]
	public const int AK_IDX_SETUP_5_REARLEFT = 3;

	[Token(Token = "0x40012F0")]
	public const int AK_IDX_SETUP_5_REARRIGHT = 4;

	[Token(Token = "0x40012F1")]
	public const int AK_IDX_SETUP_5_LFE = 5;

	[Token(Token = "0x40012F2")]
	public const int AK_IDX_SETUP_6_FRONTLEFT = 0;

	[Token(Token = "0x40012F3")]
	public const int AK_IDX_SETUP_6_FRONTRIGHT = 1;

	[Token(Token = "0x40012F4")]
	public const int AK_IDX_SETUP_6_REARLEFT = 2;

	[Token(Token = "0x40012F5")]
	public const int AK_IDX_SETUP_6_REARRIGHT = 3;

	[Token(Token = "0x40012F6")]
	public const int AK_IDX_SETUP_6_SIDELEFT = 4;

	[Token(Token = "0x40012F7")]
	public const int AK_IDX_SETUP_6_SIDERIGHT = 5;

	[Token(Token = "0x40012F8")]
	public const int AK_IDX_SETUP_6_LFE = 6;

	[Token(Token = "0x40012F9")]
	public const int AK_IDX_SETUP_7_FRONTLEFT = 0;

	[Token(Token = "0x40012FA")]
	public const int AK_IDX_SETUP_7_FRONTRIGHT = 1;

	[Token(Token = "0x40012FB")]
	public const int AK_IDX_SETUP_7_CENTER = 2;

	[Token(Token = "0x40012FC")]
	public const int AK_IDX_SETUP_7_REARLEFT = 3;

	[Token(Token = "0x40012FD")]
	public const int AK_IDX_SETUP_7_REARRIGHT = 4;

	[Token(Token = "0x40012FE")]
	public const int AK_IDX_SETUP_7_SIDELEFT = 5;

	[Token(Token = "0x40012FF")]
	public const int AK_IDX_SETUP_7_SIDERIGHT = 6;

	[Token(Token = "0x4001300")]
	public const int AK_IDX_SETUP_7_LFE = 7;

	[Token(Token = "0x4001301")]
	public const int AK_SPEAKER_SETUP_0_1 = 8;

	[Token(Token = "0x4001302")]
	public const int AK_SPEAKER_SETUP_1_0_CENTER = 4;

	[Token(Token = "0x4001303")]
	public const int AK_SPEAKER_SETUP_1_1_CENTER = 12;

	[Token(Token = "0x4001304")]
	public const int AK_SPEAKER_SETUP_2_0 = 3;

	[Token(Token = "0x4001305")]
	public const int AK_SPEAKER_SETUP_2_1 = 11;

	[Token(Token = "0x4001306")]
	public const int AK_SPEAKER_SETUP_3_0 = 7;

	[Token(Token = "0x4001307")]
	public const int AK_SPEAKER_SETUP_3_1 = 15;

	[Token(Token = "0x4001308")]
	public const int AK_SPEAKER_SETUP_FRONT = 7;

	[Token(Token = "0x4001309")]
	public const int AK_SPEAKER_SETUP_4_0 = 1539;

	[Token(Token = "0x400130A")]
	public const int AK_SPEAKER_SETUP_4_1 = 1547;

	[Token(Token = "0x400130B")]
	public const int AK_SPEAKER_SETUP_5_0 = 1543;

	[Token(Token = "0x400130C")]
	public const int AK_SPEAKER_SETUP_5_1 = 1551;

	[Token(Token = "0x400130D")]
	public const int AK_SPEAKER_SETUP_6_0 = 1587;

	[Token(Token = "0x400130E")]
	public const int AK_SPEAKER_SETUP_6_1 = 1595;

	[Token(Token = "0x400130F")]
	public const int AK_SPEAKER_SETUP_7_0 = 1591;

	[Token(Token = "0x4001310")]
	public const int AK_SPEAKER_SETUP_7_1 = 1599;

	[Token(Token = "0x4001311")]
	public const int AK_SPEAKER_SETUP_DEFAULT_PLANE = 1599;

	[Token(Token = "0x4001312")]
	public const int AK_SUPPORTED_STANDARD_CHANNEL_MASK = 261951;

	[Token(Token = "0x4001313")]
	public const int AK_STANDARD_MAX_NUM_CHANNELS = 8;

	[Token(Token = "0x4001314")]
	public const int AK_NUM_SAMPLED_SPHERE_POINTS = 32;

	[Token(Token = "0x4001315")]
	public const int AK_MAX_NUM_TEXTURE = 4;

	[Token(Token = "0x4001316")]
	public const int AK_MAX_REFLECT_ORDER = 4;

	[Token(Token = "0x4001317")]
	public const int AK_MAX_REFLECTION_PATH_LENGTH = 6;

	[Token(Token = "0x4001318")]
	public const int AK_MAX_SOUND_PROPAGATION_DEPTH = 8;

	[Token(Token = "0x4001319")]
	public const double AK_DEFAULT_DIFFR_SHADOW_DEGREES = 30.0;

	[Token(Token = "0x400131A")]
	public const double AK_DEFAULT_DIFFR_SHADOW_ATTEN = 2.0;

	[Token(Token = "0x400131B")]
	public const double AK_DEFAULT_MOVEMENT_THRESHOLD = 1.0;

	[Token(Token = "0x400131C")]
	public const double AK_SA_EPSILON = 0.001;

	[Token(Token = "0x400131D")]
	public const double AK_SA_DIFFRACTION_EPSILON = 0.1;

	[Token(Token = "0x400131E")]
	public const double AK_SA_PLANE_THICKNESS_RATIO = 0.005;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObjectHashFunction gameObjectHash;

	[Token(Token = "0x4001320")]
	public const string Deprecation_2018_1_2 = "This functionality is deprecated as of Wwise v2018.1.2 and will be removed in a future release.";

	[Token(Token = "0x4001321")]
	public const string Deprecation_2018_1_6 = "This functionality is deprecated as of Wwise v2018.1.6 and will be removed in a future release.";

	[Token(Token = "0x4001322")]
	public const string Deprecation_2019_1_1 = "This functionality is deprecated as of Wwise v2019.1.1 and will be removed in a future release.";

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly HashSet<ulong> RegisteredGameObjects;

	[Token(Token = "0x170000AE")]
	public static uint AK_SOUNDBANK_VERSION
	{
		[Token(Token = "0x600130B")]
		[Address(RVA = "0xFE5B50", Offset = "0xFE5B50", VA = "0xFE5B50")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000AF")]
	public static ushort AK_INT
	{
		[Token(Token = "0x600130C")]
		[Address(RVA = "0xFE5C20", Offset = "0xFE5C20", VA = "0xFE5C20")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x170000B0")]
	public static ushort AK_FLOAT
	{
		[Token(Token = "0x600130D")]
		[Address(RVA = "0xFE5CF0", Offset = "0xFE5CF0", VA = "0xFE5CF0")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x170000B1")]
	public static byte AK_INTERLEAVED
	{
		[Token(Token = "0x600130E")]
		[Address(RVA = "0xFE5DC0", Offset = "0xFE5DC0", VA = "0xFE5DC0")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000B2")]
	public static byte AK_NONINTERLEAVED
	{
		[Token(Token = "0x600130F")]
		[Address(RVA = "0xFE5E90", Offset = "0xFE5E90", VA = "0xFE5E90")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000B3")]
	public static uint AK_LE_NATIVE_BITSPERSAMPLE
	{
		[Token(Token = "0x6001310")]
		[Address(RVA = "0xFE5F60", Offset = "0xFE5F60", VA = "0xFE5F60")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000B4")]
	public static uint AK_LE_NATIVE_SAMPLETYPE
	{
		[Token(Token = "0x6001311")]
		[Address(RVA = "0xFE6030", Offset = "0xFE6030", VA = "0xFE6030")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000B5")]
	public static uint AK_LE_NATIVE_INTERLEAVE
	{
		[Token(Token = "0x6001312")]
		[Address(RVA = "0xFE6100", Offset = "0xFE6100", VA = "0xFE6100")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000B6")]
	public static byte AK_INVALID_MIDI_CHANNEL
	{
		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xFF6AF8", Offset = "0xFF6AF8", VA = "0xFF6AF8")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000B7")]
	public static byte AK_INVALID_MIDI_NOTE
	{
		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xFF6BC8", Offset = "0xFF6BC8", VA = "0xFF6BC8")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000B8")]
	public static float kDefaultMaxPathLength
	{
		[Token(Token = "0x6001419")]
		[Address(RVA = "0xFFA928", Offset = "0xFFA928", VA = "0xFFA928")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B9")]
	public static uint kDefaultDiffractionMaxEdges
	{
		[Token(Token = "0x600141A")]
		[Address(RVA = "0xFFA9F4", Offset = "0xFFA9F4", VA = "0xFFA9F4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000BA")]
	public static uint kDefaultDiffractionMaxPaths
	{
		[Token(Token = "0x600141B")]
		[Address(RVA = "0xFFAAC4", Offset = "0xFFAAC4", VA = "0xFFAAC4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000BB")]
	public static float kMaxDiffraction
	{
		[Token(Token = "0x600141C")]
		[Address(RVA = "0xFFAB94", Offset = "0xFFAB94", VA = "0xFFAB94")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000BC")]
	public static uint kListenerDiffractionMaxEdges
	{
		[Token(Token = "0x600141D")]
		[Address(RVA = "0xFFAC60", Offset = "0xFFAC60", VA = "0xFFAC60")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000BD")]
	public static uint kListenerDiffractionMaxPaths
	{
		[Token(Token = "0x600141E")]
		[Address(RVA = "0xFFAD30", Offset = "0xFFAD30", VA = "0xFFAD30")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000BE")]
	public static uint kPortalToPortalDiffractionMaxPaths
	{
		[Token(Token = "0x600141F")]
		[Address(RVA = "0xFFAE00", Offset = "0xFFAE00", VA = "0xFFAE00")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000BF")]
	public static int g_SpatialAudioPoolId
	{
		[Token(Token = "0x6001421")]
		[Address(RVA = "0xFFAFB4", Offset = "0xFFAFB4", VA = "0xFFAFB4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001420")]
		[Address(RVA = "0xFFAED0", Offset = "0xFFAED0", VA = "0xFFAED0")]
		set
		{
		}
	}

	[Token(Token = "0x170000C0")]
	public static GameObjectHashFunction GameObjectHash
	{
		[Token(Token = "0x600145F")]
		[Address(RVA = "0xFFF258", Offset = "0xFFF258", VA = "0xFFF258")]
		set
		{
		}
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0xFE61D0", Offset = "0xFE61D0", VA = "0xFE61D0")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, AkDynamicSequenceType in_eDynamicSequenceType)
	{
		return default(uint);
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0xFE6458", Offset = "0xFE6458", VA = "0xFE6458")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0xFE665C", Offset = "0xFE665C", VA = "0xFE665C")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0xFE67B4", Offset = "0xFE67B4", VA = "0xFE67B4")]
	public static AKRESULT DynamicSequenceClose(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0xFE6898", Offset = "0xFE6898", VA = "0xFE6898")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0xFE69AC", Offset = "0xFE69AC", VA = "0xFE69AC")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0xFE6AB0", Offset = "0xFE6AB0", VA = "0xFE6AB0")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0xFE6B94", Offset = "0xFE6B94", VA = "0xFE6B94")]
	public static AKRESULT DynamicSequencePause(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0xFE6CA8", Offset = "0xFE6CA8", VA = "0xFE6CA8")]
	public static AKRESULT DynamicSequencePause(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0xFE6DAC", Offset = "0xFE6DAC", VA = "0xFE6DAC")]
	public static AKRESULT DynamicSequencePause(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0xFE6E90", Offset = "0xFE6E90", VA = "0xFE6E90")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0xFE6FA4", Offset = "0xFE6FA4", VA = "0xFE6FA4")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0xFE70A8", Offset = "0xFE70A8", VA = "0xFE70A8")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0xFE718C", Offset = "0xFE718C", VA = "0xFE718C")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0xFE72A0", Offset = "0xFE72A0", VA = "0xFE72A0")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001322")]
	[Address(RVA = "0xFE73A4", Offset = "0xFE73A4", VA = "0xFE73A4")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0xFE7488", Offset = "0xFE7488", VA = "0xFE7488")]
	public static AKRESULT DynamicSequenceBreak(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0xFE756C", Offset = "0xFE756C", VA = "0xFE756C")]
	public static AKRESULT DynamicSequenceGetPauseTimes(uint in_playingID, out uint out_uTime, out uint out_uDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0xFE7680", Offset = "0xFE7680", VA = "0xFE7680")]
	public static AkPlaylist DynamicSequenceLockPlaylist(uint in_playingID)
	{
		return null;
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0xFE77A8", Offset = "0xFE77A8", VA = "0xFE77A8")]
	public static AKRESULT DynamicSequenceUnlockPlaylist(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001327")]
	[Address(RVA = "0xFE788C", Offset = "0xFE788C", VA = "0xFE788C")]
	public static bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6001328")]
	[Address(RVA = "0xFE7964", Offset = "0xFE7964", VA = "0xFE7964")]
	public static AKRESULT GetAudioSettings(AkAudioSettings out_audioSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001329")]
	[Address(RVA = "0xFE7A5C", Offset = "0xFE7A5C", VA = "0xFE7A5C")]
	public static AkChannelConfig GetSpeakerConfiguration(ulong in_idOutput)
	{
		return null;
	}

	[Token(Token = "0x600132A")]
	[Address(RVA = "0xFE7B74", Offset = "0xFE7B74", VA = "0xFE7B74")]
	public static AkChannelConfig GetSpeakerConfiguration()
	{
		return null;
	}

	[Token(Token = "0x600132B")]
	[Address(RVA = "0xFE7C78", Offset = "0xFE7C78", VA = "0xFE7C78")]
	public static AKRESULT GetPanningRule(out int out_ePanningRule, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600132C")]
	[Address(RVA = "0xFE7D7C", Offset = "0xFE7D7C", VA = "0xFE7D7C")]
	public static AKRESULT GetPanningRule(out int out_ePanningRule)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600132D")]
	[Address(RVA = "0xFE7E60", Offset = "0xFE7E60", VA = "0xFE7E60")]
	public static AKRESULT SetPanningRule(AkPanningRule in_ePanningRule, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600132E")]
	[Address(RVA = "0xFE7F64", Offset = "0xFE7F64", VA = "0xFE7F64")]
	public static AKRESULT SetPanningRule(AkPanningRule in_ePanningRule)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0xFE8048", Offset = "0xFE8048", VA = "0xFE8048")]
	public static AKRESULT GetSpeakerAngles(float[] io_pfSpeakerAngles, ref uint io_uNumAngles, out float out_fHeightAngle, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0xFE8184", Offset = "0xFE8184", VA = "0xFE8184")]
	public static AKRESULT GetSpeakerAngles(float[] io_pfSpeakerAngles, ref uint io_uNumAngles, out float out_fHeightAngle)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0xFE82A0", Offset = "0xFE82A0", VA = "0xFE82A0")]
	public static AKRESULT SetSpeakerAngles(float[] in_pfSpeakerAngles, uint in_uNumAngles, float in_fHeightAngle, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0xFE83DC", Offset = "0xFE83DC", VA = "0xFE83DC")]
	public static AKRESULT SetSpeakerAngles(float[] in_pfSpeakerAngles, uint in_uNumAngles, float in_fHeightAngle)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0xFE8508", Offset = "0xFE8508", VA = "0xFE8508")]
	public static AKRESULT SetVolumeThreshold(float in_fVolumeThresholdDB)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0xFE85FC", Offset = "0xFE85FC", VA = "0xFE85FC")]
	public static AKRESULT SetMaxNumVoicesLimit(ushort in_maxNumberVoices)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0xFE86E0", Offset = "0xFE86E0", VA = "0xFE86E0")]
	public static AKRESULT RenderAudio(bool in_bAllowSyncRender)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0xFE87C4", Offset = "0xFE87C4", VA = "0xFE87C4")]
	public static AKRESULT RenderAudio()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0xFE8894", Offset = "0xFE8894", VA = "0xFE8894")]
	public static AKRESULT RegisterPluginDLL(string in_DllName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0xFE8990", Offset = "0xFE8990", VA = "0xFE8990")]
	public static uint GetIDFromString(string in_pszString)
	{
		return default(uint);
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0xFE8A8C", Offset = "0xFE8A8C", VA = "0xFE8A8C")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x600133A")]
	[Address(RVA = "0xFE8CFC", Offset = "0xFE8CFC", VA = "0xFE8CFC")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0xFE8F4C", Offset = "0xFE8F4C", VA = "0xFE8F4C")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0xFE9160", Offset = "0xFE9160", VA = "0xFE9160")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0xFE92D8", Offset = "0xFE92D8", VA = "0xFE92D8")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0xFE9560", Offset = "0xFE9560", VA = "0xFE9560")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0xFE97C8", Offset = "0xFE97C8", VA = "0xFE97C8")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0xFE99F4", Offset = "0xFE99F4", VA = "0xFE99F4")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0xFE9B84", Offset = "0xFE9B84", VA = "0xFE9B84")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0xFE9D20", Offset = "0xFE9D20", VA = "0xFE9D20")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0xFE9E9C", Offset = "0xFE9E9C", VA = "0xFE9E9C")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0xFEA008", Offset = "0xFEA008", VA = "0xFEA008")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0xFEA154", Offset = "0xFEA154", VA = "0xFEA154")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001346")]
	[Address(RVA = "0xFEA258", Offset = "0xFEA258", VA = "0xFEA258")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0xFEA40C", Offset = "0xFEA40C", VA = "0xFEA40C")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0xFEA5A0", Offset = "0xFEA5A0", VA = "0xFEA5A0")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001349")]
	[Address(RVA = "0xFEA724", Offset = "0xFEA724", VA = "0xFEA724")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600134A")]
	[Address(RVA = "0xFEA888", Offset = "0xFEA888", VA = "0xFEA888")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0xFEA9A4", Offset = "0xFEA9A4", VA = "0xFEA9A4")]
	public static AKRESULT PostMIDIOnEvent(uint in_eventID, GameObject in_gameObjectID, AkMIDIPostArray in_pPosts, ushort in_uNumPosts)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600134C")]
	[Address(RVA = "0xFEAB1C", Offset = "0xFEAB1C", VA = "0xFEAB1C")]
	public static AKRESULT StopMIDIOnEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600134D")]
	[Address(RVA = "0xFEAC58", Offset = "0xFEAC58", VA = "0xFEAC58")]
	public static AKRESULT StopMIDIOnEvent(uint in_eventID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600134E")]
	[Address(RVA = "0xFEAD3C", Offset = "0xFEAD3C", VA = "0xFEAD3C")]
	public static AKRESULT StopMIDIOnEvent()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600134F")]
	[Address(RVA = "0xFEAE0C", Offset = "0xFEAE0C", VA = "0xFEAE0C")]
	public static AKRESULT PinEventInStreamCache(uint in_eventID, sbyte in_uActivePriority, sbyte in_uInactivePriority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001350")]
	[Address(RVA = "0xFEAF20", Offset = "0xFEAF20", VA = "0xFEAF20")]
	public static AKRESULT PinEventInStreamCache(string in_pszEventName, sbyte in_uActivePriority, sbyte in_uInactivePriority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001351")]
	[Address(RVA = "0xFEB04C", Offset = "0xFEB04C", VA = "0xFEB04C")]
	public static AKRESULT UnpinEventInStreamCache(uint in_eventID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001352")]
	[Address(RVA = "0xFEB130", Offset = "0xFEB130", VA = "0xFEB130")]
	public static AKRESULT UnpinEventInStreamCache(string in_pszEventName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001353")]
	[Address(RVA = "0xFEB22C", Offset = "0xFEB22C", VA = "0xFEB22C")]
	public static AKRESULT GetBufferStatusForPinnedEvent(uint in_eventID, out float out_fPercentBuffered, out int out_bCachePinnedMemoryFull)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001354")]
	[Address(RVA = "0xFEB340", Offset = "0xFEB340", VA = "0xFEB340")]
	public static AKRESULT GetBufferStatusForPinnedEvent(string in_pszEventName, out float out_fPercentBuffered, out int out_bCachePinnedMemoryFull)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001355")]
	[Address(RVA = "0xFEB46C", Offset = "0xFEB46C", VA = "0xFEB46C")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001356")]
	[Address(RVA = "0xFEB5E8", Offset = "0xFEB5E8", VA = "0xFEB5E8")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0xFEB754", Offset = "0xFEB754", VA = "0xFEB754")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001358")]
	[Address(RVA = "0xFEB8A0", Offset = "0xFEB8A0", VA = "0xFEB8A0")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001359")]
	[Address(RVA = "0xFEBA34", Offset = "0xFEBA34", VA = "0xFEBA34")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0xFEBBB8", Offset = "0xFEBBB8", VA = "0xFEBBB8")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0xFEBD1C", Offset = "0xFEBD1C", VA = "0xFEBD1C")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0xFEBEA8", Offset = "0xFEBEA8", VA = "0xFEBEA8")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0xFEC014", Offset = "0xFEC014", VA = "0xFEC014")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0xFEC170", Offset = "0xFEC170", VA = "0xFEC170")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600135F")]
	[Address(RVA = "0xFEC314", Offset = "0xFEC314", VA = "0xFEC314")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001360")]
	[Address(RVA = "0xFEC498", Offset = "0xFEC498", VA = "0xFEC498")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001361")]
	[Address(RVA = "0xFEC60C", Offset = "0xFEC60C", VA = "0xFEC60C")]
	public static void CancelEventCallbackCookie(object in_pCookie)
	{
	}

	[Token(Token = "0x6001362")]
	[Address(RVA = "0xFEC674", Offset = "0xFEC674", VA = "0xFEC674")]
	public static void CancelEventCallbackGameObject(GameObject in_gameObjectID)
	{
	}

	[Token(Token = "0x6001363")]
	[Address(RVA = "0xFEC790", Offset = "0xFEC790", VA = "0xFEC790")]
	public static void CancelEventCallback(uint in_playingID)
	{
	}

	[Token(Token = "0x6001364")]
	[Address(RVA = "0xFEC7F8", Offset = "0xFEC7F8", VA = "0xFEC7F8")]
	public static AKRESULT GetSourcePlayPosition(uint in_PlayingID, out int out_puPosition, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001365")]
	[Address(RVA = "0xFEC90C", Offset = "0xFEC90C", VA = "0xFEC90C")]
	public static AKRESULT GetSourcePlayPosition(uint in_PlayingID, out int out_puPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0xFECA10", Offset = "0xFECA10", VA = "0xFECA10")]
	public static AKRESULT GetSourceStreamBuffering(uint in_PlayingID, out int out_buffering, out int out_bIsBuffering)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0xFECB24", Offset = "0xFECB24", VA = "0xFECB24")]
	public static void StopAll(GameObject in_gameObjectID)
	{
	}

	[Token(Token = "0x6001368")]
	[Address(RVA = "0xFECC40", Offset = "0xFECC40", VA = "0xFECC40")]
	public static void StopAll()
	{
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0xFECD0C", Offset = "0xFECD0C", VA = "0xFECD0C")]
	public static void StopPlayingID(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0xFECE20", Offset = "0xFECE20", VA = "0xFECE20")]
	public static void StopPlayingID(uint in_playingID, int in_uTransitionDuration)
	{
	}

	[Token(Token = "0x600136B")]
	[Address(RVA = "0xFECF24", Offset = "0xFECF24", VA = "0xFECF24")]
	public static void StopPlayingID(uint in_playingID)
	{
	}

	[Token(Token = "0x600136C")]
	[Address(RVA = "0xFED008", Offset = "0xFED008", VA = "0xFED008")]
	public static void ExecuteActionOnPlayingID(AkActionOnEventType in_ActionType, uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0xFED13C", Offset = "0xFED13C", VA = "0xFED13C")]
	public static void ExecuteActionOnPlayingID(AkActionOnEventType in_ActionType, uint in_playingID, int in_uTransitionDuration)
	{
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0xFED250", Offset = "0xFED250", VA = "0xFED250")]
	public static void ExecuteActionOnPlayingID(AkActionOnEventType in_ActionType, uint in_playingID)
	{
	}

	[Token(Token = "0x600136F")]
	[Address(RVA = "0xFED354", Offset = "0xFED354", VA = "0xFED354")]
	public static void SetRandomSeed(uint in_uSeed)
	{
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0xFED438", Offset = "0xFED438", VA = "0xFED438")]
	public static void MuteBackgroundMusic(bool in_bMute)
	{
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0xFED51C", Offset = "0xFED51C", VA = "0xFED51C")]
	public static bool GetBackgroundMusicMute()
	{
		return default(bool);
	}

	[Token(Token = "0x6001372")]
	[Address(RVA = "0xFED5F4", Offset = "0xFED5F4", VA = "0xFED5F4")]
	public static AKRESULT SendPluginCustomGameData(uint in_busID, GameObject in_busObjectID, AkPluginType in_eType, uint in_uCompanyID, uint in_uPluginID, IntPtr in_pData, uint in_uSizeInBytes)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001373")]
	[Address(RVA = "0xFED7A0", Offset = "0xFED7A0", VA = "0xFED7A0")]
	public static AKRESULT UnregisterAllGameObj()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001374")]
	[Address(RVA = "0xFED870", Offset = "0xFED870", VA = "0xFED870")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkPositionArray in_pPositions, ushort in_NumPositions, AkMultiPositionType in_eMultiPositionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001375")]
	[Address(RVA = "0xFED9DC", Offset = "0xFED9DC", VA = "0xFED9DC")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkPositionArray in_pPositions, ushort in_NumPositions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001376")]
	[Address(RVA = "0xFEDB28", Offset = "0xFEDB28", VA = "0xFEDB28")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkChannelEmitterArray in_pPositions, ushort in_NumPositions, AkMultiPositionType in_eMultiPositionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0xFEDC94", Offset = "0xFEDC94", VA = "0xFEDC94")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkChannelEmitterArray in_pPositions, ushort in_NumPositions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001378")]
	[Address(RVA = "0xFEDDE0", Offset = "0xFEDDE0", VA = "0xFEDDE0")]
	public static AKRESULT SetScalingFactor(GameObject in_GameObjectID, float in_fAttenuationScalingFactor)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001379")]
	[Address(RVA = "0xFEDF14", Offset = "0xFEDF14", VA = "0xFEDF14")]
	public static AKRESULT ClearBanks()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600137A")]
	[Address(RVA = "0xFEDFE4", Offset = "0xFEDFE4", VA = "0xFEDFE4")]
	public static AKRESULT SetBankLoadIOSettings(float in_fThroughput, sbyte in_priority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600137B")]
	[Address(RVA = "0xFEE0E8", Offset = "0xFEE0E8", VA = "0xFEE0E8")]
	public static AKRESULT LoadBank(string in_pszString, int in_memPoolId, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600137C")]
	[Address(RVA = "0xFEE214", Offset = "0xFEE214", VA = "0xFEE214")]
	public static AKRESULT LoadBank(uint in_bankID, int in_memPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600137D")]
	[Address(RVA = "0xFEE318", Offset = "0xFEE318", VA = "0xFEE318")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600137E")]
	[Address(RVA = "0xFEE42C", Offset = "0xFEE42C", VA = "0xFEE42C")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, int in_uPoolForBankMedia, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600137F")]
	[Address(RVA = "0xFEE560", Offset = "0xFEE560", VA = "0xFEE560")]
	public static AKRESULT LoadBank(string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_memPoolId, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001380")]
	[Address(RVA = "0xFEE708", Offset = "0xFEE708", VA = "0xFEE708")]
	public static AKRESULT LoadBank(uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_memPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001381")]
	[Address(RVA = "0xFEE888", Offset = "0xFEE888", VA = "0xFEE888")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001382")]
	[Address(RVA = "0xFEEA18", Offset = "0xFEEA18", VA = "0xFEEA18")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_uPoolForBankMedia, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001383")]
	[Address(RVA = "0xFEEBC8", Offset = "0xFEEBC8", VA = "0xFEEBC8")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr, out int out_pMemPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001384")]
	[Address(RVA = "0xFEECF4", Offset = "0xFEECF4", VA = "0xFEECF4")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001385")]
	[Address(RVA = "0xFEEE10", Offset = "0xFEEE10", VA = "0xFEEE10")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr, out int out_pMemPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0xFEEF24", Offset = "0xFEEF24", VA = "0xFEEF24")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0xFEF028", Offset = "0xFEF028", VA = "0xFEF028")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0xFEF1C0", Offset = "0xFEF1C0", VA = "0xFEF1C0")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0xFEF340", Offset = "0xFEF340", VA = "0xFEF340")]
	public static void CancelBankCallbackCookie(object in_pCookie)
	{
	}

	[Token(Token = "0x600138A")]
	[Address(RVA = "0xFEF3A8", Offset = "0xFEF3A8", VA = "0xFEF3A8")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0xFEF4D8", Offset = "0xFEF4D8", VA = "0xFEF4D8")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0xFEF5F8", Offset = "0xFEF5F8", VA = "0xFEF5F8")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0xFEF70C", Offset = "0xFEF70C", VA = "0xFEF70C")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0xFEF810", Offset = "0xFEF810", VA = "0xFEF810")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0xFEF9BC", Offset = "0xFEF9BC", VA = "0xFEF9BC")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0xFEFB58", Offset = "0xFEFB58", VA = "0xFEFB58")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001391")]
	[Address(RVA = "0xFEFCE8", Offset = "0xFEFCE8", VA = "0xFEFCE8")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001392")]
	[Address(RVA = "0xFEFE68", Offset = "0xFEFE68", VA = "0xFEFE68")]
	public static AKRESULT ClearPreparedEvents()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001393")]
	[Address(RVA = "0xFEFF38", Offset = "0xFEFF38", VA = "0xFEFF38")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, string[] in_ppszString, uint in_uNumEvent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001394")]
	[Address(RVA = "0xFF0278", Offset = "0xFF0278", VA = "0xFF0278")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, uint[] in_pEventID, uint in_uNumEvent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001395")]
	[Address(RVA = "0xFF0394", Offset = "0xFF0394", VA = "0xFF0394")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, string[] in_ppszString, uint in_uNumEvent, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001396")]
	[Address(RVA = "0xFF0750", Offset = "0xFF0750", VA = "0xFF0750")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, uint[] in_pEventID, uint in_uNumEvent, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001397")]
	[Address(RVA = "0xFF08E8", Offset = "0xFF08E8", VA = "0xFF08E8")]
	public static AKRESULT SetMedia(AkSourceSettingsArray in_pSourceSettings, uint in_uNumSourceSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001398")]
	[Address(RVA = "0xFF09F8", Offset = "0xFF09F8", VA = "0xFF09F8")]
	public static AKRESULT UnsetMedia(AkSourceSettingsArray in_pSourceSettings, uint in_uNumSourceSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0xFF0B08", Offset = "0xFF0B08", VA = "0xFF0B08")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, string in_pszGroupName, string[] in_ppszGameSyncName, uint in_uNumGameSyncs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600139A")]
	[Address(RVA = "0xFF0E8C", Offset = "0xFF0E8C", VA = "0xFF0E8C")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, uint in_GroupID, uint[] in_paGameSyncID, uint in_uNumGameSyncs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600139B")]
	[Address(RVA = "0xFF0FD8", Offset = "0xFF0FD8", VA = "0xFF0FD8")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, string in_pszGroupName, string[] in_ppszGameSyncName, uint in_uNumGameSyncs, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600139C")]
	[Address(RVA = "0xFF13D8", Offset = "0xFF13D8", VA = "0xFF13D8")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, uint in_GroupID, uint[] in_paGameSyncID, uint in_uNumGameSyncs, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0xFF15A0", Offset = "0xFF15A0", VA = "0xFF15A0")]
	public static AKRESULT AddListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0xFF16F4", Offset = "0xFF16F4", VA = "0xFF16F4")]
	public static AKRESULT RemoveListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600139F")]
	[Address(RVA = "0xFF1848", Offset = "0xFF1848", VA = "0xFF1848")]
	public static AKRESULT AddDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0xFF1964", Offset = "0xFF1964", VA = "0xFF1964")]
	public static AKRESULT RemoveDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013A1")]
	[Address(RVA = "0xFF1A80", Offset = "0xFF1A80", VA = "0xFF1A80")]
	public static AKRESULT ResetListenersToDefault(GameObject in_emitterGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0xFF1B9C", Offset = "0xFF1B9C", VA = "0xFF1B9C")]
	public static AKRESULT SetListenerSpatialization(GameObject in_uListenerID, bool in_bSpatialized, AkChannelConfig in_channelConfig, float[] in_pVolumeOffsets)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0xFF1D24", Offset = "0xFF1D24", VA = "0xFF1D24")]
	public static AKRESULT SetListenerSpatialization(GameObject in_uListenerID, bool in_bSpatialized, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0xFF1E84", Offset = "0xFF1E84", VA = "0xFF1E84")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013A5")]
	[Address(RVA = "0xFF2020", Offset = "0xFF2020", VA = "0xFF2020")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0xFF21AC", Offset = "0xFF21AC", VA = "0xFF21AC")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0xFF2318", Offset = "0xFF2318", VA = "0xFF2318")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013A8")]
	[Address(RVA = "0xFF2474", Offset = "0xFF2474", VA = "0xFF2474")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0xFF2578", Offset = "0xFF2578", VA = "0xFF2578")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0xFF272C", Offset = "0xFF272C", VA = "0xFF272C")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0xFF28D0", Offset = "0xFF28D0", VA = "0xFF28D0")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013AC")]
	[Address(RVA = "0xFF2A54", Offset = "0xFF2A54", VA = "0xFF2A54")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013AD")]
	[Address(RVA = "0xFF2BC8", Offset = "0xFF2BC8", VA = "0xFF2BC8")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0xFF2CE4", Offset = "0xFF2CE4", VA = "0xFF2CE4")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0xFF2E48", Offset = "0xFF2E48", VA = "0xFF2E48")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013B0")]
	[Address(RVA = "0xFF2F9C", Offset = "0xFF2F9C", VA = "0xFF2F9C")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013B1")]
	[Address(RVA = "0xFF30D0", Offset = "0xFF30D0", VA = "0xFF30D0")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013B2")]
	[Address(RVA = "0xFF31F4", Offset = "0xFF31F4", VA = "0xFF31F4")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013B3")]
	[Address(RVA = "0xFF3370", Offset = "0xFF3370", VA = "0xFF3370")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013B4")]
	[Address(RVA = "0xFF34DC", Offset = "0xFF34DC", VA = "0xFF34DC")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0xFF3628", Offset = "0xFF3628", VA = "0xFF3628")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0xFF3764", Offset = "0xFF3764", VA = "0xFF3764")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0xFF38E0", Offset = "0xFF38E0", VA = "0xFF38E0")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013B8")]
	[Address(RVA = "0xFF3A4C", Offset = "0xFF3A4C", VA = "0xFF3A4C")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013B9")]
	[Address(RVA = "0xFF3B98", Offset = "0xFF3B98", VA = "0xFF3B98")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013BA")]
	[Address(RVA = "0xFF3CD4", Offset = "0xFF3CD4", VA = "0xFF3CD4")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013BB")]
	[Address(RVA = "0xFF3DB8", Offset = "0xFF3DB8", VA = "0xFF3DB8")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013BC")]
	[Address(RVA = "0xFF3F4C", Offset = "0xFF3F4C", VA = "0xFF3F4C")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013BD")]
	[Address(RVA = "0xFF40D0", Offset = "0xFF40D0", VA = "0xFF40D0")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0xFF4234", Offset = "0xFF4234", VA = "0xFF4234")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0xFF4388", Offset = "0xFF4388", VA = "0xFF4388")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0xFF4484", Offset = "0xFF4484", VA = "0xFF4484")]
	public static AKRESULT SetSwitch(uint in_switchGroup, uint in_switchState, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0xFF45D0", Offset = "0xFF45D0", VA = "0xFF45D0")]
	public static AKRESULT SetSwitch(string in_pszSwitchGroup, string in_pszSwitchState, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0xFF4748", Offset = "0xFF4748", VA = "0xFF4748")]
	public static AKRESULT PostTrigger(uint in_triggerID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0xFF4884", Offset = "0xFF4884", VA = "0xFF4884")]
	public static AKRESULT PostTrigger(string in_pszTrigger, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0xFF49D8", Offset = "0xFF49D8", VA = "0xFF49D8")]
	public static AKRESULT SetState(uint in_stateGroup, uint in_state)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0xFF4ADC", Offset = "0xFF4ADC", VA = "0xFF4ADC")]
	public static AKRESULT SetState(string in_pszStateGroup, string in_pszState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0xFF4C10", Offset = "0xFF4C10", VA = "0xFF4C10")]
	public static AKRESULT SetGameObjectAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray in_aAuxSendValues, uint in_uNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013C7")]
	[Address(RVA = "0xFF4D68", Offset = "0xFF4D68", VA = "0xFF4D68")]
	public static AKRESULT SetGameObjectOutputBusVolume(GameObject in_emitterObjID, GameObject in_listenerObjID, float in_fControlValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013C8")]
	[Address(RVA = "0xFF4EDC", Offset = "0xFF4EDC", VA = "0xFF4EDC")]
	public static AKRESULT SetActorMixerEffect(uint in_audioNodeID, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013C9")]
	[Address(RVA = "0xFF4FF0", Offset = "0xFF4FF0", VA = "0xFF4FF0")]
	public static AKRESULT SetBusEffect(uint in_audioNodeID, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013CA")]
	[Address(RVA = "0xFF5104", Offset = "0xFF5104", VA = "0xFF5104")]
	public static AKRESULT SetBusEffect(string in_pszBusName, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013CB")]
	[Address(RVA = "0xFF5230", Offset = "0xFF5230", VA = "0xFF5230")]
	public static AKRESULT SetMixer(uint in_audioNodeID, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0xFF5334", Offset = "0xFF5334", VA = "0xFF5334")]
	public static AKRESULT SetMixer(string in_pszBusName, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0xFF5450", Offset = "0xFF5450", VA = "0xFF5450")]
	public static AKRESULT SetBusConfig(uint in_audioNodeID, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0xFF5568", Offset = "0xFF5568", VA = "0xFF5568")]
	public static AKRESULT SetBusConfig(string in_pszBusName, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0xFF5698", Offset = "0xFF5698", VA = "0xFF5698")]
	public static AKRESULT SetObjectObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_ListenerID, float in_fObstructionLevel, float in_fOcclusionLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013D0")]
	[Address(RVA = "0xFF581C", Offset = "0xFF581C", VA = "0xFF581C")]
	public static AKRESULT SetMultipleObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_uListenerID, AkObstructionOcclusionValuesArray in_fObstructionOcclusionValues, uint in_uNumOcclusionObstruction)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013D1")]
	[Address(RVA = "0xFF59AC", Offset = "0xFF59AC", VA = "0xFF59AC")]
	public static AKRESULT StartOutputCapture(string in_CaptureFileName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013D2")]
	[Address(RVA = "0xFF5AA8", Offset = "0xFF5AA8", VA = "0xFF5AA8")]
	public static AKRESULT StopOutputCapture()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013D3")]
	[Address(RVA = "0xFF5B78", Offset = "0xFF5B78", VA = "0xFF5B78")]
	public static AKRESULT AddOutputCaptureMarker(string in_MarkerText)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013D4")]
	[Address(RVA = "0xFF5C74", Offset = "0xFF5C74", VA = "0xFF5C74")]
	public static AKRESULT StartProfilerCapture(string in_CaptureFileName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013D5")]
	[Address(RVA = "0xFF5D70", Offset = "0xFF5D70", VA = "0xFF5D70")]
	public static AKRESULT StopProfilerCapture()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013D6")]
	[Address(RVA = "0xFF5E40", Offset = "0xFF5E40", VA = "0xFF5E40")]
	public static AKRESULT RemoveOutput(ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0xFF5F24", Offset = "0xFF5F24", VA = "0xFF5F24")]
	public static AKRESULT ReplaceOutput(AkOutputSettings in_Settings, ulong in_outputDeviceId, out ulong out_pOutputDeviceId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0xFF604C", Offset = "0xFF604C", VA = "0xFF604C")]
	public static AKRESULT ReplaceOutput(AkOutputSettings in_Settings, ulong in_outputDeviceId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0xFF6164", Offset = "0xFF6164", VA = "0xFF6164")]
	public static ulong GetOutputID(uint in_idShareset, uint in_idDevice)
	{
		return default(ulong);
	}

	[Token(Token = "0x60013DA")]
	[Address(RVA = "0xFF6268", Offset = "0xFF6268", VA = "0xFF6268")]
	public static ulong GetOutputID(string in_szShareSet, uint in_idDevice)
	{
		return default(ulong);
	}

	[Token(Token = "0x60013DB")]
	[Address(RVA = "0xFF6384", Offset = "0xFF6384", VA = "0xFF6384")]
	public static AKRESULT SetBusDevice(uint in_idBus, uint in_idNewDevice)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013DC")]
	[Address(RVA = "0xFF6488", Offset = "0xFF6488", VA = "0xFF6488")]
	public static AKRESULT SetBusDevice(string in_BusName, string in_DeviceName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0xFF65BC", Offset = "0xFF65BC", VA = "0xFF65BC")]
	public static AKRESULT SetOutputVolume(ulong in_idOutput, float in_fVolume)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013DE")]
	[Address(RVA = "0xFF66C0", Offset = "0xFF66C0", VA = "0xFF66C0")]
	public static AKRESULT GetDeviceSpatialAudioSupport(uint in_idDevice)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013DF")]
	[Address(RVA = "0xFF67A4", Offset = "0xFF67A4", VA = "0xFF67A4")]
	public static AKRESULT Suspend(bool in_bRenderAnyway)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013E0")]
	[Address(RVA = "0xFF6888", Offset = "0xFF6888", VA = "0xFF6888")]
	public static AKRESULT Suspend()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013E1")]
	[Address(RVA = "0xFF6958", Offset = "0xFF6958", VA = "0xFF6958")]
	public static AKRESULT WakeupFromSuspend()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013E2")]
	[Address(RVA = "0xFF6A28", Offset = "0xFF6A28", VA = "0xFF6A28")]
	public static uint GetBufferTick()
	{
		return default(uint);
	}

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0xFF6C98", Offset = "0xFF6C98", VA = "0xFF6C98")]
	public static AKRESULT GetPlayingSegmentInfo(uint in_PlayingID, AkSegmentInfo out_segmentInfo, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013E6")]
	[Address(RVA = "0xFF6DD8", Offset = "0xFF6DD8", VA = "0xFF6DD8")]
	public static AKRESULT GetPlayingSegmentInfo(uint in_PlayingID, AkSegmentInfo out_segmentInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0xFF6F08", Offset = "0xFF6F08", VA = "0xFF6F08")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID, bool in_bIsBus)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013E8")]
	[Address(RVA = "0xFF70A4", Offset = "0xFF70A4", VA = "0xFF70A4")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0xFF7220", Offset = "0xFF7220", VA = "0xFF7220")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013EA")]
	[Address(RVA = "0xFF738C", Offset = "0xFF738C", VA = "0xFF738C")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013EB")]
	[Address(RVA = "0xFF74A0", Offset = "0xFF74A0", VA = "0xFF74A0")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0xFF75A4", Offset = "0xFF75A4", VA = "0xFF75A4")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID, bool in_bIsBus)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013ED")]
	[Address(RVA = "0xFF7758", Offset = "0xFF7758", VA = "0xFF7758")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013EE")]
	[Address(RVA = "0xFF78EC", Offset = "0xFF78EC", VA = "0xFF78EC")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0xFF7A70", Offset = "0xFF7A70", VA = "0xFF7A70")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0xFF7B9C", Offset = "0xFF7B9C", VA = "0xFF7B9C")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0xFF7CB8", Offset = "0xFF7CB8", VA = "0xFF7CB8")]
	public static int GetTimeStamp()
	{
		return default(int);
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0xFF7D88", Offset = "0xFF7D88", VA = "0xFF7D88")]
	public static uint GetNumNonZeroBits(uint in_uWord)
	{
		return default(uint);
	}

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0xFF7E6C", Offset = "0xFF7E6C", VA = "0xFF7E6C")]
	public static void AkGetDefaultHighPriorityThreadProperties(AkThreadProperties out_threadProperties)
	{
	}

	[Token(Token = "0x60013F4")]
	[Address(RVA = "0xFF7F64", Offset = "0xFF7F64", VA = "0xFF7F64")]
	public static uint ResolveDialogueEvent(uint in_eventID, uint[] in_aArgumentValues, uint in_uNumArguments, uint in_idSequence)
	{
		return default(uint);
	}

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0xFF80A0", Offset = "0xFF80A0", VA = "0xFF80A0")]
	public static uint ResolveDialogueEvent(uint in_eventID, uint[] in_aArgumentValues, uint in_uNumArguments)
	{
		return default(uint);
	}

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0xFF81BC", Offset = "0xFF81BC", VA = "0xFF81BC")]
	public static AKRESULT GetDialogueEventCustomPropertyValue(uint in_eventID, uint in_uPropID, out int out_iValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0xFF82D0", Offset = "0xFF82D0", VA = "0xFF82D0")]
	public static AKRESULT GetDialogueEventCustomPropertyValue(uint in_eventID, uint in_uPropID, out float out_fValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013F8")]
	[Address(RVA = "0xFF83E4", Offset = "0xFF83E4", VA = "0xFF83E4")]
	public static AKRESULT GetPosition(GameObject in_GameObjectID, AkTransform out_rPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013F9")]
	[Address(RVA = "0xFF8528", Offset = "0xFF8528", VA = "0xFF8528")]
	public static AKRESULT GetListenerPosition(GameObject in_uIndex, AkTransform out_rPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013FA")]
	[Address(RVA = "0xFF8678", Offset = "0xFF8678", VA = "0xFF8678")]
	public static AKRESULT GetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, uint in_playingID, out float out_rValue, ref int io_rValueType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013FB")]
	[Address(RVA = "0xFF87F4", Offset = "0xFF87F4", VA = "0xFF87F4")]
	public static AKRESULT GetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, uint in_playingID, out float out_rValue, ref int io_rValueType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013FC")]
	[Address(RVA = "0xFF8988", Offset = "0xFF8988", VA = "0xFF8988")]
	public static AKRESULT GetSwitch(uint in_switchGroup, GameObject in_gameObjectID, out uint out_rSwitchState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013FD")]
	[Address(RVA = "0xFF8AD4", Offset = "0xFF8AD4", VA = "0xFF8AD4")]
	public static AKRESULT GetSwitch(string in_pstrSwitchGroupName, GameObject in_GameObj, out uint out_rSwitchState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013FE")]
	[Address(RVA = "0xFF8C2C", Offset = "0xFF8C2C", VA = "0xFF8C2C")]
	public static AKRESULT GetState(uint in_stateGroup, out uint out_rState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60013FF")]
	[Address(RVA = "0xFF8D30", Offset = "0xFF8D30", VA = "0xFF8D30")]
	public static AKRESULT GetState(string in_pstrStateGroupName, out uint out_rState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001400")]
	[Address(RVA = "0xFF8E4C", Offset = "0xFF8E4C", VA = "0xFF8E4C")]
	public static AKRESULT GetGameObjectAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray out_paAuxSendValues, ref uint io_ruNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001401")]
	[Address(RVA = "0xFF8FA4", Offset = "0xFF8FA4", VA = "0xFF8FA4")]
	public static AKRESULT GetGameObjectDryLevelValue(GameObject in_EmitterID, GameObject in_ListenerID, out float out_rfControlValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001402")]
	[Address(RVA = "0xFF9108", Offset = "0xFF9108", VA = "0xFF9108")]
	public static AKRESULT GetObjectObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_ListenerID, out float out_rfObstructionLevel, out float out_rfOcclusionLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001403")]
	[Address(RVA = "0xFF928C", Offset = "0xFF928C", VA = "0xFF928C")]
	public static AKRESULT QueryAudioObjectIDs(uint in_eventID, ref uint io_ruNumItems, AkObjectInfoArray out_aObjectInfos)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001404")]
	[Address(RVA = "0xFF93AC", Offset = "0xFF93AC", VA = "0xFF93AC")]
	public static AKRESULT QueryAudioObjectIDs(string in_pszEventName, ref uint io_ruNumItems, AkObjectInfoArray out_aObjectInfos)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001405")]
	[Address(RVA = "0xFF94E4", Offset = "0xFF94E4", VA = "0xFF94E4")]
	public static AKRESULT GetPositioningInfo(uint in_ObjectID, AkPositioningInfo out_rPositioningInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001406")]
	[Address(RVA = "0xFF95FC", Offset = "0xFF95FC", VA = "0xFF95FC")]
	public static bool GetIsGameObjectActive(GameObject in_GameObjId)
	{
		return default(bool);
	}

	[Token(Token = "0x6001407")]
	[Address(RVA = "0xFF9720", Offset = "0xFF9720", VA = "0xFF9720")]
	public static float GetMaxRadius(GameObject in_GameObjId)
	{
		return default(float);
	}

	[Token(Token = "0x6001408")]
	[Address(RVA = "0xFF983C", Offset = "0xFF983C", VA = "0xFF983C")]
	public static uint GetEventIDFromPlayingID(uint in_playingID)
	{
		return default(uint);
	}

	[Token(Token = "0x6001409")]
	[Address(RVA = "0xFF9920", Offset = "0xFF9920", VA = "0xFF9920")]
	public static ulong GetGameObjectFromPlayingID(uint in_playingID)
	{
		return default(ulong);
	}

	[Token(Token = "0x600140A")]
	[Address(RVA = "0xFF9A04", Offset = "0xFF9A04", VA = "0xFF9A04")]
	public static AKRESULT GetPlayingIDsFromGameObject(GameObject in_GameObjId, ref uint io_ruNumIDs, uint[] out_aPlayingIDs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600140B")]
	[Address(RVA = "0xFF9BE0", Offset = "0xFF9BE0", VA = "0xFF9BE0")]
	public static AKRESULT GetCustomPropertyValue(uint in_ObjectID, uint in_uPropID, out int out_iValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600140C")]
	[Address(RVA = "0xFF9CF4", Offset = "0xFF9CF4", VA = "0xFF9CF4")]
	public static AKRESULT GetCustomPropertyValue(uint in_ObjectID, uint in_uPropID, out float out_fValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600140D")]
	[Address(RVA = "0xFF9E08", Offset = "0xFF9E08", VA = "0xFF9E08")]
	public static void AK_SPEAKER_SETUP_FIX_LEFT_TO_CENTER(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x600140E")]
	[Address(RVA = "0xFF9EEC", Offset = "0xFF9EEC", VA = "0xFF9EEC")]
	public static void AK_SPEAKER_SETUP_FIX_REAR_TO_SIDE(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x600140F")]
	[Address(RVA = "0xFF9FD0", Offset = "0xFF9FD0", VA = "0xFF9FD0")]
	public static void AK_SPEAKER_SETUP_CONVERT_TO_SUPPORTED(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x6001410")]
	[Address(RVA = "0xFFA0B4", Offset = "0xFFA0B4", VA = "0xFFA0B4")]
	public static byte ChannelMaskToNumChannels(uint in_uChannelMask)
	{
		return default(byte);
	}

	[Token(Token = "0x6001411")]
	[Address(RVA = "0xFFA198", Offset = "0xFFA198", VA = "0xFFA198")]
	public static uint ChannelMaskFromNumChannels(uint in_uNumChannels)
	{
		return default(uint);
	}

	[Token(Token = "0x6001412")]
	[Address(RVA = "0xFFA27C", Offset = "0xFFA27C", VA = "0xFFA27C")]
	public static byte ChannelBitToIndex(uint in_uChannelBit, uint in_uChannelMask)
	{
		return default(byte);
	}

	[Token(Token = "0x6001413")]
	[Address(RVA = "0xFFA380", Offset = "0xFFA380", VA = "0xFFA380")]
	public static bool HasSurroundChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6001414")]
	[Address(RVA = "0xFFA46C", Offset = "0xFFA46C", VA = "0xFFA46C")]
	public static bool HasStrictlyOnePairOfSurroundChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6001415")]
	[Address(RVA = "0xFFA558", Offset = "0xFFA558", VA = "0xFFA558")]
	public static bool HasSideAndRearChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0xFFA644", Offset = "0xFFA644", VA = "0xFFA644")]
	public static bool HasHeightChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0xFFA730", Offset = "0xFFA730", VA = "0xFFA730")]
	public static uint BackToSideChannels(uint in_uChannelMask)
	{
		return default(uint);
	}

	[Token(Token = "0x6001418")]
	[Address(RVA = "0xFFA814", Offset = "0xFFA814", VA = "0xFFA814")]
	public static uint StdChannelIndexToDisplayIndex(AkChannelOrdering in_eOrdering, uint in_uChannelMask, uint in_uChannelIdx)
	{
		return default(uint);
	}

	[Token(Token = "0x6001422")]
	[Address(RVA = "0xFFB084", Offset = "0xFFB084", VA = "0xFFB084")]
	public static int GetPoolID()
	{
		return default(int);
	}

	[Token(Token = "0x6001423")]
	[Address(RVA = "0xFFB154", Offset = "0xFFB154", VA = "0xFFB154")]
	public static AKRESULT RegisterEmitter(GameObject in_gameObjectID, AkEmitterSettings in_settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001424")]
	[Address(RVA = "0xFFB2A4", Offset = "0xFFB2A4", VA = "0xFFB2A4")]
	public static AKRESULT UnregisterEmitter(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001425")]
	[Address(RVA = "0xFFB3C0", Offset = "0xFFB3C0", VA = "0xFFB3C0")]
	public static AKRESULT SetEmitterAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray in_pAuxSends, uint in_uNumAux)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001426")]
	[Address(RVA = "0xFFB518", Offset = "0xFFB518", VA = "0xFFB518")]
	public static AKRESULT SetImageSource(uint in_srcID, AkImageSourceSettings in_info, uint in_AuxBusID, ulong in_roomID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001427")]
	[Address(RVA = "0xFFB6A8", Offset = "0xFFB6A8", VA = "0xFFB6A8")]
	public static AKRESULT SetImageSource(uint in_srcID, AkImageSourceSettings in_info, uint in_AuxBusID, ulong in_roomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001428")]
	[Address(RVA = "0xFFB7F0", Offset = "0xFFB7F0", VA = "0xFFB7F0")]
	public static AKRESULT RemoveImageSource(uint in_srcID, uint in_AuxBusID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001429")]
	[Address(RVA = "0xFFB93C", Offset = "0xFFB93C", VA = "0xFFB93C")]
	public static AKRESULT RemoveImageSource(uint in_srcID, uint in_AuxBusID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600142A")]
	[Address(RVA = "0xFFBA40", Offset = "0xFFBA40", VA = "0xFFBA40")]
	public static AKRESULT RemoveGeometry(ulong in_SetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600142B")]
	[Address(RVA = "0xFFBB24", Offset = "0xFFBB24", VA = "0xFFBB24")]
	public static AKRESULT QueryReflectionPaths(GameObject in_gameObjectID, AkVector out_listenerPos, AkVector out_emitterPos, AkReflectionPathInfoArray out_aPaths, out uint io_uArraySize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600142C")]
	[Address(RVA = "0xFE0E24", Offset = "0xFE0E24", VA = "0xFE0E24")]
	public static AKRESULT RemoveRoom(ulong in_RoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600142D")]
	[Address(RVA = "0xFFBD4C", Offset = "0xFFBD4C", VA = "0xFFBD4C")]
	public static AKRESULT RemovePortal(ulong in_PortalID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600142E")]
	[Address(RVA = "0xFFBE30", Offset = "0xFFBE30", VA = "0xFFBE30")]
	public static AKRESULT SetGameObjectInRoom(GameObject in_gameObjectID, ulong in_CurrentRoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600142F")]
	[Address(RVA = "0xFFBF6C", Offset = "0xFFBF6C", VA = "0xFFBF6C")]
	public static AKRESULT SetEmitterObstructionAndOcclusion(GameObject in_gameObjectID, float in_fObstruction, float in_fOcclusion)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001430")]
	[Address(RVA = "0xFE3DA4", Offset = "0xFE3DA4", VA = "0xFE3DA4")]
	public static AKRESULT SetPortalObstructionAndOcclusion(ulong in_PortalID, float in_fObstruction, float in_fOcclusion)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001431")]
	[Address(RVA = "0xFFC150", Offset = "0xFFC150", VA = "0xFFC150")]
	public static AKRESULT QueryWetDiffraction(ulong in_portal, out float out_wetDiffraction)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001432")]
	[Address(RVA = "0xFFC254", Offset = "0xFFC254", VA = "0xFFC254")]
	public static AKRESULT GetFastPathSettings(AkInitSettings in_settings, AkPlatformInitSettings in_pfSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001433")]
	[Address(RVA = "0xFFC37C", Offset = "0xFFC37C", VA = "0xFFC37C")]
	public static void SetErrorLogger(AkLogger.ErrorLoggerInteropDelegate logger)
	{
	}

	[Token(Token = "0x6001434")]
	[Address(RVA = "0xFFC464", Offset = "0xFFC464", VA = "0xFFC464")]
	public static void SetErrorLogger()
	{
	}

	[Token(Token = "0x6001435")]
	[Address(RVA = "0xFFC530", Offset = "0xFFC530", VA = "0xFFC530")]
	public static void SetAudioInputCallbacks(AkAudioInputManager.AudioSamplesInteropDelegate getAudioSamples, AkAudioInputManager.AudioFormatInteropDelegate getAudioFormat)
	{
	}

	[Token(Token = "0x6001436")]
	[Address(RVA = "0xFFC648", Offset = "0xFFC648", VA = "0xFFC648")]
	public static AKRESULT Init(AkInitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001437")]
	[Address(RVA = "0xFFC740", Offset = "0xFFC740", VA = "0xFFC740")]
	public static AKRESULT InitSpatialAudio(AkSpatialAudioInitSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001438")]
	[Address(RVA = "0xFFC838", Offset = "0xFFC838", VA = "0xFFC838")]
	public static AKRESULT InitCommunication(AkCommunicationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001439")]
	[Address(RVA = "0xFFC930", Offset = "0xFFC930", VA = "0xFFC930")]
	public static void Term()
	{
	}

	[Token(Token = "0x600143A")]
	[Address(RVA = "0xFFC9FC", Offset = "0xFFC9FC", VA = "0xFFC9FC")]
	public static AKRESULT RegisterGameObjInternal(GameObject in_GameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600143B")]
	[Address(RVA = "0xFFCB10", Offset = "0xFFCB10", VA = "0xFFCB10")]
	public static AKRESULT UnregisterGameObjInternal(GameObject in_GameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600143C")]
	[Address(RVA = "0xFFCC24", Offset = "0xFFCC24", VA = "0xFFCC24")]
	public static AKRESULT RegisterGameObjInternal_WithName(GameObject in_GameObj, string in_pszObjName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600143D")]
	[Address(RVA = "0xFFCD74", Offset = "0xFFCD74", VA = "0xFFCD74")]
	public static AKRESULT SetBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600143E")]
	[Address(RVA = "0xFFCE70", Offset = "0xFFCE70", VA = "0xFFCE70")]
	public static AKRESULT SetCurrentLanguage(string in_pszAudioSrcPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600143F")]
	[Address(RVA = "0xFFCF6C", Offset = "0xFFCF6C", VA = "0xFFCF6C")]
	public static AKRESULT LoadFilePackage(string in_pszFilePackageName, out uint out_uPackageID, int in_memPoolID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001440")]
	[Address(RVA = "0xFFD098", Offset = "0xFFD098", VA = "0xFFD098")]
	public static AKRESULT AddBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001441")]
	[Address(RVA = "0xFFD194", Offset = "0xFFD194", VA = "0xFFD194")]
	public static AKRESULT SetGameName(string in_GameName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001442")]
	[Address(RVA = "0xFFD290", Offset = "0xFFD290", VA = "0xFFD290")]
	public static AKRESULT SetDecodedBankPath(string in_DecodedPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0xFFD38C", Offset = "0xFFD38C", VA = "0xFFD38C")]
	public static AKRESULT LoadAndDecodeBank(string in_pszString, bool in_bSaveDecodedBank, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001444")]
	[Address(RVA = "0xFFD4B8", Offset = "0xFFD4B8", VA = "0xFFD4B8")]
	public static AKRESULT LoadAndDecodeBankFromMemory(IntPtr in_BankData, uint in_BankDataSize, bool in_bSaveDecodedBank, string in_DecodedBankName, bool in_bIsLanguageSpecific, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001445")]
	[Address(RVA = "0xFFD638", Offset = "0xFFD638", VA = "0xFFD638")]
	public static string GetCurrentLanguage()
	{
		return null;
	}

	[Token(Token = "0x6001446")]
	[Address(RVA = "0xFFD79C", Offset = "0xFFD79C", VA = "0xFFD79C")]
	public static AKRESULT UnloadFilePackage(uint in_uPackageID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001447")]
	[Address(RVA = "0xFFD880", Offset = "0xFFD880", VA = "0xFFD880")]
	public static AKRESULT UnloadAllFilePackages()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001448")]
	[Address(RVA = "0xFFD950", Offset = "0xFFD950", VA = "0xFFD950")]
	public static AKRESULT SetObjectPosition(GameObject in_GameObjectID, float PosX, float PosY, float PosZ, float FrontX, float FrontY, float FrontZ, float TopX, float TopY, float TopZ)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001449")]
	[Address(RVA = "0xFFDB3C", Offset = "0xFFDB3C", VA = "0xFFDB3C")]
	public static AKRESULT GetSourceMultiplePlayPositions(uint in_PlayingID, uint[] out_audioNodeID, uint[] out_mediaID, int[] out_msTime, ref uint io_pcPositions, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600144A")]
	[Address(RVA = "0xFFDDF0", Offset = "0xFFDDF0", VA = "0xFFDDF0")]
	public static AKRESULT SetListeners(GameObject in_emitterGameObj, ulong[] in_pListenerGameObjs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600144B")]
	[Address(RVA = "0xFFDF44", Offset = "0xFFDF44", VA = "0xFFDF44")]
	public static AKRESULT SetDefaultListeners(ulong[] in_pListenerObjs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600144C")]
	[Address(RVA = "0xFFE050", Offset = "0xFFE050", VA = "0xFFE050")]
	public static AKRESULT AddOutput(AkOutputSettings in_Settings, out ulong out_pDeviceID, ulong[] in_pListenerIDs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600144D")]
	[Address(RVA = "0xFFE1A0", Offset = "0xFFE1A0", VA = "0xFFE1A0")]
	public static void GetDefaultStreamSettings(AkStreamMgrSettings out_settings)
	{
	}

	[Token(Token = "0x600144E")]
	[Address(RVA = "0xFFE298", Offset = "0xFFE298", VA = "0xFFE298")]
	public static void GetDefaultDeviceSettings(AkDeviceSettings out_settings)
	{
	}

	[Token(Token = "0x600144F")]
	[Address(RVA = "0xFFE390", Offset = "0xFFE390", VA = "0xFFE390")]
	public static void GetDefaultMusicSettings(AkMusicSettings out_settings)
	{
	}

	[Token(Token = "0x6001450")]
	[Address(RVA = "0xFFE488", Offset = "0xFFE488", VA = "0xFFE488")]
	public static void GetDefaultInitSettings(AkInitSettings out_settings)
	{
	}

	[Token(Token = "0x6001451")]
	[Address(RVA = "0xFFE580", Offset = "0xFFE580", VA = "0xFFE580")]
	public static void GetDefaultPlatformInitSettings(AkPlatformInitSettings out_settings)
	{
	}

	[Token(Token = "0x6001452")]
	[Address(RVA = "0xFFE678", Offset = "0xFFE678", VA = "0xFFE678")]
	public static uint GetMajorMinorVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x6001453")]
	[Address(RVA = "0xFFE748", Offset = "0xFFE748", VA = "0xFFE748")]
	public static uint GetSubminorBuildVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x6001454")]
	[Address(RVA = "0xFFE818", Offset = "0xFFE818", VA = "0xFFE818")]
	public static AKRESULT QueryIndirectPaths(GameObject in_gameObjectID, AkPathParams arg1, AkReflectionPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001455")]
	[Address(RVA = "0xFFE9A0", Offset = "0xFFE9A0", VA = "0xFFE9A0")]
	public static AKRESULT QueryDiffractionPaths(GameObject in_gameObjectID, AkPathParams arg1, AkDiffractionPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001456")]
	[Address(RVA = "0xFE2A90", Offset = "0xFE2A90", VA = "0xFE2A90")]
	public static AKRESULT SetRoomPortal(ulong in_PortalID, AkTransform Transform, AkVector Extent, bool bEnabled, ulong FrontRoom, ulong BackRoom)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001457")]
	[Address(RVA = "0xFE09F0", Offset = "0xFE09F0", VA = "0xFE09F0")]
	public static AKRESULT SetRoom(ulong in_RoomID, AkRoomParams in_roomParams, string in_pName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001458")]
	[Address(RVA = "0xFFEC98", Offset = "0xFFEC98", VA = "0xFFEC98")]
	public static AKRESULT RegisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001459")]
	[Address(RVA = "0xFFEDB4", Offset = "0xFFEDB4", VA = "0xFFEDB4")]
	public static AKRESULT UnregisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600145A")]
	[Address(RVA = "0xFFEED0", Offset = "0xFFEED0", VA = "0xFFEED0")]
	public static AKRESULT SetGeometry(ulong in_GeomSetID, AkTriangleArray Triangles, uint NumTriangles, AkVertexArray Vertices, uint NumVertices, AkAcousticSurfaceArray Surfaces, uint NumSurfaces, ulong RoomID, bool EnableDiffraction, bool EnableDiffractionOnBoundaryEdges)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600145B")]
	[Address(RVA = "0xFFF0F4", Offset = "0xFFF0F4", VA = "0xFFF0F4")]
	public static string StringFromIntPtrString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x600145C")]
	[Address(RVA = "0xFFF15C", Offset = "0xFFF15C", VA = "0xFFF15C")]
	public static string StringFromIntPtrWString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x600145D")]
	[Address(RVA = "0xFFD738", Offset = "0xFFD738", VA = "0xFFD738")]
	public static string StringFromIntPtrOSString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x600145E")]
	[Address(RVA = "0xFFF1C4", Offset = "0xFFF1C4", VA = "0xFFF1C4")]
	private static ulong InternalGameObjectHash(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001460")]
	[Address(RVA = "0xFE0290", Offset = "0xFE0290", VA = "0xFE0290")]
	public static ulong GetAkGameObjectID(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001461")]
	[Address(RVA = "0xFFF6D8", Offset = "0xFFF6D8", VA = "0xFFF6D8")]
	public static AKRESULT RegisterGameObj(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001462")]
	[Address(RVA = "0xFFF828", Offset = "0xFFF828", VA = "0xFFF828")]
	public static AKRESULT RegisterGameObj(GameObject gameObject, string name)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001463")]
	[Address(RVA = "0xFFF8E0", Offset = "0xFFF8E0", VA = "0xFFF8E0")]
	public static AKRESULT UnregisterGameObj(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001464")]
	[Address(RVA = "0xFFFA30", Offset = "0xFFFA30", VA = "0xFFFA30")]
	public static AKRESULT SetObjectPosition(GameObject gameObject, Transform transform)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001465")]
	[Address(RVA = "0xFFFBB4", Offset = "0xFFFBB4", VA = "0xFFFBB4")]
	public static AKRESULT SetObjectPosition(GameObject gameObject, Vector3 position, Vector3 forward, Vector3 up)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001466")]
	[Address(RVA = "0xFFFCB4", Offset = "0xFFFCB4", VA = "0xFFFCB4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBEAA1C", Offset = "0xBEAA1C")]
	public static uint PostEvent(uint eventId, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources, uint playingId)
	{
		return default(uint);
	}

	[Token(Token = "0x6001467")]
	[Address(RVA = "0xFFFDF8", Offset = "0xFFFDF8", VA = "0xFFFDF8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBEAA54", Offset = "0xBEAA54")]
	public static uint PostEvent(uint eventId, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x6001468")]
	[Address(RVA = "0xFFFF78", Offset = "0xFFFF78", VA = "0xFFFF78")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBEAA8C", Offset = "0xBEAA8C")]
	public static uint PostEvent(string eventName, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources, uint playingId)
	{
		return default(uint);
	}

	[Token(Token = "0x6001469")]
	[Address(RVA = "0x10000BC", Offset = "0x10000BC", VA = "0x10000BC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBEAAC4", Offset = "0xBEAAC4")]
	public static uint PostEvent(string eventName, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x600146A")]
	[Address(RVA = "0xFE6334", Offset = "0xFE6334", VA = "0xFE6334")]
	public static void PreGameObjectAPICall(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x600146B")]
	[Address(RVA = "0x100023C", Offset = "0x100023C", VA = "0x100023C")]
	private static void PreGameObjectAPICallUserHook(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0xFFF780", Offset = "0xFFF780", VA = "0xFFF780")]
	private static void PostRegisterGameObjUserHook(AKRESULT result, GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0xFFF988", Offset = "0xFFF988", VA = "0xFFF988")]
	private static void PostUnregisterGameObjUserHook(AKRESULT result, GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x600146E")]
	[Address(RVA = "0x1000384", Offset = "0x1000384", VA = "0x1000384")]
	private static void AutoRegister(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x600146F")]
	[Address(RVA = "0x1000300", Offset = "0x1000300", VA = "0x1000300")]
	private static bool IsInRegisteredList(ulong id)
	{
		return default(bool);
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0x10005A0", Offset = "0x10005A0", VA = "0x10005A0")]
	public static bool IsGameObjectRegistered(GameObject in_gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6001471")]
	[Address(RVA = "0x1000608", Offset = "0x1000608", VA = "0x1000608")]
	public AkSoundEngine()
	{
	}
}
[Token(Token = "0x20002D1")]
public class AkThreadProperties : IDisposable
{
	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000C1")]
	public int nPriority
	{
		[Token(Token = "0x6001479")]
		[Address(RVA = "0x1113BAC", Offset = "0x1113BAC", VA = "0x1113BAC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001478")]
		[Address(RVA = "0x1113B30", Offset = "0x1113B30", VA = "0x1113B30")]
		set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public uint uStackSize
	{
		[Token(Token = "0x600147B")]
		[Address(RVA = "0x1113C94", Offset = "0x1113C94", VA = "0x1113C94")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600147A")]
		[Address(RVA = "0x1113C18", Offset = "0x1113C18", VA = "0x1113C18")]
		set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public int uSchedPolicy
	{
		[Token(Token = "0x600147D")]
		[Address(RVA = "0x1113D7C", Offset = "0x1113D7C", VA = "0x1113D7C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600147C")]
		[Address(RVA = "0x1113D00", Offset = "0x1113D00", VA = "0x1113D00")]
		set
		{
		}
	}

	[Token(Token = "0x170000C4")]
	public uint dwAffinityMask
	{
		[Token(Token = "0x600147F")]
		[Address(RVA = "0x1113E64", Offset = "0x1113E64", VA = "0x1113E64")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600147E")]
		[Address(RVA = "0x1113DE8", Offset = "0x1113DE8", VA = "0x1113DE8")]
		set
		{
		}
	}

	[Token(Token = "0x6001473")]
	[Address(RVA = "0x11138C0", Offset = "0x11138C0", VA = "0x11138C0")]
	internal AkThreadProperties(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001474")]
	[Address(RVA = "0x1113900", Offset = "0x1113900", VA = "0x1113900")]
	internal static IntPtr getCPtr(AkThreadProperties obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001475")]
	[Address(RVA = "0x1113950", Offset = "0x1113950", VA = "0x1113950", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001476")]
	[Address(RVA = "0x1113984", Offset = "0x1113984", VA = "0x1113984", Slot = "1")]
	~AkThreadProperties()
	{
	}

	[Token(Token = "0x6001477")]
	[Address(RVA = "0x11139F4", Offset = "0x11139F4", VA = "0x11139F4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001480")]
	[Address(RVA = "0x1113ED0", Offset = "0x1113ED0", VA = "0x1113ED0")]
	public AkThreadProperties()
	{
	}
}
[Token(Token = "0x20002D2")]
public class AkUnityPlatformSpecificSettings : IDisposable
{
	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001481")]
	[Address(RVA = "0x1116B34", Offset = "0x1116B34", VA = "0x1116B34")]
	internal AkUnityPlatformSpecificSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001482")]
	[Address(RVA = "0x1116B74", Offset = "0x1116B74", VA = "0x1116B74")]
	internal static IntPtr getCPtr(AkUnityPlatformSpecificSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001483")]
	[Address(RVA = "0x1116BC4", Offset = "0x1116BC4", VA = "0x1116BC4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001484")]
	[Address(RVA = "0x1116BF8", Offset = "0x1116BF8", VA = "0x1116BF8", Slot = "1")]
	~AkUnityPlatformSpecificSettings()
	{
	}

	[Token(Token = "0x6001485")]
	[Address(RVA = "0x1116C68", Offset = "0x1116C68", VA = "0x1116C68", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001486")]
	[Address(RVA = "0x1116DA4", Offset = "0x1116DA4", VA = "0x1116DA4")]
	public AkUnityPlatformSpecificSettings()
	{
	}
}
[Token(Token = "0x20002D3")]
public enum AKRESULT
{
	[Token(Token = "0x4001329")]
	AK_NotImplemented = 0,
	[Token(Token = "0x400132A")]
	AK_Success = 1,
	[Token(Token = "0x400132B")]
	AK_Fail = 2,
	[Token(Token = "0x400132C")]
	AK_PartialSuccess = 3,
	[Token(Token = "0x400132D")]
	AK_NotCompatible = 4,
	[Token(Token = "0x400132E")]
	AK_AlreadyConnected = 5,
	[Token(Token = "0x400132F")]
	AK_InvalidFile = 7,
	[Token(Token = "0x4001330")]
	AK_AudioFileHeaderTooLarge = 8,
	[Token(Token = "0x4001331")]
	AK_MaxReached = 9,
	[Token(Token = "0x4001332")]
	AK_InvalidID = 14,
	[Token(Token = "0x4001333")]
	AK_IDNotFound = 15,
	[Token(Token = "0x4001334")]
	AK_InvalidInstanceID = 16,
	[Token(Token = "0x4001335")]
	AK_NoMoreData = 17,
	[Token(Token = "0x4001336")]
	AK_InvalidStateGroup = 20,
	[Token(Token = "0x4001337")]
	AK_ChildAlreadyHasAParent = 21,
	[Token(Token = "0x4001338")]
	AK_InvalidLanguage = 22,
	[Token(Token = "0x4001339")]
	AK_CannotAddItseflAsAChild = 23,
	[Token(Token = "0x400133A")]
	AK_InvalidParameter = 31,
	[Token(Token = "0x400133B")]
	AK_ElementAlreadyInList = 35,
	[Token(Token = "0x400133C")]
	AK_PathNotFound = 36,
	[Token(Token = "0x400133D")]
	AK_PathNoVertices = 37,
	[Token(Token = "0x400133E")]
	AK_PathNotRunning = 38,
	[Token(Token = "0x400133F")]
	AK_PathNotPaused = 39,
	[Token(Token = "0x4001340")]
	AK_PathNodeAlreadyInList = 40,
	[Token(Token = "0x4001341")]
	AK_PathNodeNotInList = 41,
	[Token(Token = "0x4001342")]
	AK_DataNeeded = 43,
	[Token(Token = "0x4001343")]
	AK_NoDataNeeded = 44,
	[Token(Token = "0x4001344")]
	AK_DataReady = 45,
	[Token(Token = "0x4001345")]
	AK_NoDataReady = 46,
	[Token(Token = "0x4001346")]
	AK_InsufficientMemory = 52,
	[Token(Token = "0x4001347")]
	AK_Cancelled = 53,
	[Token(Token = "0x4001348")]
	AK_UnknownBankID = 54,
	[Token(Token = "0x4001349")]
	AK_BankReadError = 56,
	[Token(Token = "0x400134A")]
	AK_InvalidSwitchType = 57,
	[Token(Token = "0x400134B")]
	AK_FormatNotReady = 63,
	[Token(Token = "0x400134C")]
	AK_WrongBankVersion = 64,
	[Token(Token = "0x400134D")]
	AK_FileNotFound = 66,
	[Token(Token = "0x400134E")]
	AK_DeviceNotReady = 67,
	[Token(Token = "0x400134F")]
	AK_BankAlreadyLoaded = 69,
	[Token(Token = "0x4001350")]
	AK_RenderedFX = 71,
	[Token(Token = "0x4001351")]
	AK_ProcessNeeded = 72,
	[Token(Token = "0x4001352")]
	AK_ProcessDone = 73,
	[Token(Token = "0x4001353")]
	AK_MemManagerNotInitialized = 74,
	[Token(Token = "0x4001354")]
	AK_StreamMgrNotInitialized = 75,
	[Token(Token = "0x4001355")]
	AK_SSEInstructionsNotSupported = 76,
	[Token(Token = "0x4001356")]
	AK_Busy = 77,
	[Token(Token = "0x4001357")]
	AK_UnsupportedChannelConfig = 78,
	[Token(Token = "0x4001358")]
	AK_PluginMediaNotAvailable = 79,
	[Token(Token = "0x4001359")]
	AK_MustBeVirtualized = 80,
	[Token(Token = "0x400135A")]
	AK_CommandTooLarge = 81,
	[Token(Token = "0x400135B")]
	AK_RejectedByFilter = 82,
	[Token(Token = "0x400135C")]
	AK_InvalidCustomPlatformName = 83,
	[Token(Token = "0x400135D")]
	AK_DLLCannotLoad = 84,
	[Token(Token = "0x400135E")]
	AK_DLLPathNotFound = 85,
	[Token(Token = "0x400135F")]
	AK_NoJavaVM = 86,
	[Token(Token = "0x4001360")]
	AK_OpenSLError = 87,
	[Token(Token = "0x4001361")]
	AK_PluginNotRegistered = 88,
	[Token(Token = "0x4001362")]
	AK_DataAlignmentError = 89,
	[Token(Token = "0x4001363")]
	AK_DeviceNotCompatible = 90,
	[Token(Token = "0x4001364")]
	AK_DuplicateUniqueID = 91,
	[Token(Token = "0x4001365")]
	AK_InitBankNotLoaded = 92,
	[Token(Token = "0x4001366")]
	AK_DeviceNotFound = 93
}
[Token(Token = "0x20002D4")]
public enum Ak3DPositionType
{
	[Token(Token = "0x4001368")]
	AK_3DPositionType_Emitter,
	[Token(Token = "0x4001369")]
	AK_3DPositionType_EmitterWithAutomation,
	[Token(Token = "0x400136A")]
	AK_3DPositionType_ListenerWithAutomation
}
[Token(Token = "0x20002D5")]
public enum Ak3DSpatializationMode
{
	[Token(Token = "0x400136C")]
	AK_SpatializationMode_None,
	[Token(Token = "0x400136D")]
	AK_SpatializationMode_PositionOnly,
	[Token(Token = "0x400136E")]
	AK_SpatializationMode_PositionAndOrientation
}
[Token(Token = "0x20002D6")]
public class AkAcousticSurface : IDisposable
{
	[Token(Token = "0x400136F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000C5")]
	public uint textureID
	{
		[Token(Token = "0x600148E")]
		[Address(RVA = "0x14116E4", Offset = "0x14116E4", VA = "0x14116E4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600148D")]
		[Address(RVA = "0x1411668", Offset = "0x1411668", VA = "0x1411668")]
		set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	public uint reflectorChannelMask
	{
		[Token(Token = "0x6001490")]
		[Address(RVA = "0x14117CC", Offset = "0x14117CC", VA = "0x14117CC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600148F")]
		[Address(RVA = "0x1411750", Offset = "0x1411750", VA = "0x1411750")]
		set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	public string strName
	{
		[Token(Token = "0x6001492")]
		[Address(RVA = "0x14118B4", Offset = "0x14118B4", VA = "0x14118B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001491")]
		[Address(RVA = "0x1411838", Offset = "0x1411838", VA = "0x1411838")]
		set
		{
		}
	}

	[Token(Token = "0x6001487")]
	[Address(RVA = "0x1411374", Offset = "0x1411374", VA = "0x1411374")]
	internal AkAcousticSurface(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001488")]
	[Address(RVA = "0x14113B4", Offset = "0x14113B4", VA = "0x14113B4")]
	internal static IntPtr getCPtr(AkAcousticSurface obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001489")]
	[Address(RVA = "0x1411404", Offset = "0x1411404", VA = "0x1411404", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600148A")]
	[Address(RVA = "0x1411438", Offset = "0x1411438", VA = "0x1411438", Slot = "1")]
	~AkAcousticSurface()
	{
	}

	[Token(Token = "0x600148B")]
	[Address(RVA = "0x14114A8", Offset = "0x14114A8", VA = "0x14114A8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600148C")]
	[Address(RVA = "0x14115E4", Offset = "0x14115E4", VA = "0x14115E4")]
	public AkAcousticSurface()
	{
	}

	[Token(Token = "0x6001493")]
	[Address(RVA = "0x1411954", Offset = "0x1411954", VA = "0x1411954")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001494")]
	[Address(RVA = "0x14119C0", Offset = "0x14119C0", VA = "0x14119C0")]
	public void DeleteName()
	{
	}

	[Token(Token = "0x6001495")]
	[Address(RVA = "0x1411A2C", Offset = "0x1411A2C", VA = "0x1411A2C")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001496")]
	[Address(RVA = "0x1411A8C", Offset = "0x1411A8C", VA = "0x1411A8C")]
	public void Clone(AkAcousticSurface other)
	{
	}
}
[Token(Token = "0x20002D7")]
public enum AkActionOnEventType
{
	[Token(Token = "0x4001372")]
	AkActionOnEventType_Stop,
	[Token(Token = "0x4001373")]
	AkActionOnEventType_Pause,
	[Token(Token = "0x4001374")]
	AkActionOnEventType_Resume,
	[Token(Token = "0x4001375")]
	AkActionOnEventType_Break,
	[Token(Token = "0x4001376")]
	AkActionOnEventType_ReleaseEnvelope
}
[Token(Token = "0x20002D8")]
public enum AkAudioDeviceState
{
	[Token(Token = "0x4001378")]
	AkDeviceState_Active = 1,
	[Token(Token = "0x4001379")]
	AkDeviceState_Disabled = 2,
	[Token(Token = "0x400137A")]
	AkDeviceState_NotPresent = 4,
	[Token(Token = "0x400137B")]
	AkDeviceState_Unplugged = 8,
	[Token(Token = "0x400137C")]
	AkDeviceState_All = 15
}
[Token(Token = "0x20002D9")]
public class AkAudioFormat : IDisposable
{
	[Token(Token = "0x400137D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000C8")]
	public uint uSampleRate
	{
		[Token(Token = "0x600149D")]
		[Address(RVA = "0x1413190", Offset = "0x1413190", VA = "0x1413190")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600149C")]
		[Address(RVA = "0x1413114", Offset = "0x1413114", VA = "0x1413114")]
		set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public AkChannelConfig channelConfig
	{
		[Token(Token = "0x600149F")]
		[Address(RVA = "0x14132F4", Offset = "0x14132F4", VA = "0x14132F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600149E")]
		[Address(RVA = "0x14131FC", Offset = "0x14131FC", VA = "0x14131FC")]
		set
		{
		}
	}

	[Token(Token = "0x170000CA")]
	public uint uBitsPerSample
	{
		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x1413460", Offset = "0x1413460", VA = "0x1413460")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x14133E4", Offset = "0x14133E4", VA = "0x14133E4")]
		set
		{
		}
	}

	[Token(Token = "0x170000CB")]
	public uint uBlockAlign
	{
		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x1413548", Offset = "0x1413548", VA = "0x1413548")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x14134CC", Offset = "0x14134CC", VA = "0x14134CC")]
		set
		{
		}
	}

	[Token(Token = "0x170000CC")]
	public uint uTypeID
	{
		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x1413630", Offset = "0x1413630", VA = "0x1413630")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x14135B4", Offset = "0x14135B4", VA = "0x14135B4")]
		set
		{
		}
	}

	[Token(Token = "0x170000CD")]
	public uint uInterleaveID
	{
		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x1413718", Offset = "0x1413718", VA = "0x1413718")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x141369C", Offset = "0x141369C", VA = "0x141369C")]
		set
		{
		}
	}

	[Token(Token = "0x6001497")]
	[Address(RVA = "0x1412EA4", Offset = "0x1412EA4", VA = "0x1412EA4")]
	internal AkAudioFormat(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001498")]
	[Address(RVA = "0x1412EE4", Offset = "0x1412EE4", VA = "0x1412EE4")]
	internal static IntPtr getCPtr(AkAudioFormat obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001499")]
	[Address(RVA = "0x1412F34", Offset = "0x1412F34", VA = "0x1412F34", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600149A")]
	[Address(RVA = "0x1412F68", Offset = "0x1412F68", VA = "0x1412F68", Slot = "1")]
	~AkAudioFormat()
	{
	}

	[Token(Token = "0x600149B")]
	[Address(RVA = "0x1412FD8", Offset = "0x1412FD8", VA = "0x1412FD8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60014A8")]
	[Address(RVA = "0x1413784", Offset = "0x1413784", VA = "0x1413784")]
	public uint GetNumChannels()
	{
		return default(uint);
	}

	[Token(Token = "0x60014A9")]
	[Address(RVA = "0x14137F0", Offset = "0x14137F0", VA = "0x14137F0")]
	public uint GetBitsPerSample()
	{
		return default(uint);
	}

	[Token(Token = "0x60014AA")]
	[Address(RVA = "0x141385C", Offset = "0x141385C", VA = "0x141385C")]
	public uint GetBlockAlign()
	{
		return default(uint);
	}

	[Token(Token = "0x60014AB")]
	[Address(RVA = "0x14138C8", Offset = "0x14138C8", VA = "0x14138C8")]
	public uint GetTypeID()
	{
		return default(uint);
	}

	[Token(Token = "0x60014AC")]
	[Address(RVA = "0x1413934", Offset = "0x1413934", VA = "0x1413934")]
	public uint GetInterleaveID()
	{
		return default(uint);
	}

	[Token(Token = "0x60014AD")]
	[Address(RVA = "0x14139A0", Offset = "0x14139A0", VA = "0x14139A0")]
	public void SetAll(uint in_uSampleRate, AkChannelConfig in_channelConfig, uint in_uBitsPerSample, uint in_uBlockAlign, uint in_uTypeID, uint in_uInterleaveID)
	{
	}

	[Token(Token = "0x60014AE")]
	[Address(RVA = "0x1413A80", Offset = "0x1413A80", VA = "0x1413A80")]
	public bool IsChannelConfigSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x60014AF")]
	[Address(RVA = "0x1413AEC", Offset = "0x1413AEC", VA = "0x1413AEC")]
	public AkAudioFormat()
	{
	}
}
[Token(Token = "0x20002DA")]
public class AkAudioInterruptionCallbackInfo : IDisposable
{
	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000CE")]
	public bool bEnterInterruption
	{
		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x141555C", Offset = "0x141555C", VA = "0x141555C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60014B0")]
	[Address(RVA = "0x14152EC", Offset = "0x14152EC", VA = "0x14152EC")]
	internal AkAudioInterruptionCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60014B1")]
	[Address(RVA = "0x141532C", Offset = "0x141532C", VA = "0x141532C")]
	internal static IntPtr getCPtr(AkAudioInterruptionCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60014B2")]
	[Address(RVA = "0x141537C", Offset = "0x141537C", VA = "0x141537C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60014B3")]
	[Address(RVA = "0x14153B0", Offset = "0x14153B0", VA = "0x14153B0", Slot = "1")]
	~AkAudioInterruptionCallbackInfo()
	{
	}

	[Token(Token = "0x60014B4")]
	[Address(RVA = "0x1415420", Offset = "0x1415420", VA = "0x1415420", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60014B6")]
	[Address(RVA = "0x14155C8", Offset = "0x14155C8", VA = "0x14155C8")]
	public AkAudioInterruptionCallbackInfo()
	{
	}
}
[Token(Token = "0x20002DB")]
public class AkAudioSettings : IDisposable
{
	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000CF")]
	public uint uNumSamplesPerFrame
	{
		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x141663C", Offset = "0x141663C", VA = "0x141663C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x14165C0", Offset = "0x14165C0", VA = "0x14165C0")]
		set
		{
		}
	}

	[Token(Token = "0x170000D0")]
	public uint uNumSamplesPerSecond
	{
		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x1416724", Offset = "0x1416724", VA = "0x1416724")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x14166A8", Offset = "0x14166A8", VA = "0x14166A8")]
		set
		{
		}
	}

	[Token(Token = "0x60014B7")]
	[Address(RVA = "0x1416350", Offset = "0x1416350", VA = "0x1416350")]
	internal AkAudioSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60014B8")]
	[Address(RVA = "0x1416390", Offset = "0x1416390", VA = "0x1416390")]
	internal static IntPtr getCPtr(AkAudioSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60014B9")]
	[Address(RVA = "0x14163E0", Offset = "0x14163E0", VA = "0x14163E0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60014BA")]
	[Address(RVA = "0x1416414", Offset = "0x1416414", VA = "0x1416414", Slot = "1")]
	~AkAudioSettings()
	{
	}

	[Token(Token = "0x60014BB")]
	[Address(RVA = "0x1416484", Offset = "0x1416484", VA = "0x1416484", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60014C0")]
	[Address(RVA = "0x1416790", Offset = "0x1416790", VA = "0x1416790")]
	public AkAudioSettings()
	{
	}
}
[Token(Token = "0x20002DC")]
public class AkAudioSourceChangeCallbackInfo : IDisposable
{
	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000D1")]
	public bool bOtherAudioPlaying
	{
		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x1416A84", Offset = "0x1416A84", VA = "0x1416A84")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60014C1")]
	[Address(RVA = "0x1416814", Offset = "0x1416814", VA = "0x1416814")]
	internal AkAudioSourceChangeCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60014C2")]
	[Address(RVA = "0x1416854", Offset = "0x1416854", VA = "0x1416854")]
	internal static IntPtr getCPtr(AkAudioSourceChangeCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60014C3")]
	[Address(RVA = "0x14168A4", Offset = "0x14168A4", VA = "0x14168A4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60014C4")]
	[Address(RVA = "0x14168D8", Offset = "0x14168D8", VA = "0x14168D8", Slot = "1")]
	~AkAudioSourceChangeCallbackInfo()
	{
	}

	[Token(Token = "0x60014C5")]
	[Address(RVA = "0x1416948", Offset = "0x1416948", VA = "0x1416948", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60014C7")]
	[Address(RVA = "0x1416AF0", Offset = "0x1416AF0", VA = "0x1416AF0")]
	public AkAudioSourceChangeCallbackInfo()
	{
	}
}
[Token(Token = "0x20002DD")]
public class AkAuxSendValue : IDisposable
{
	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000D2")]
	public ulong listenerID
	{
		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x1417754", Offset = "0x1417754", VA = "0x1417754")]
		get
		{
			return default(ulong);
		}
		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x14176D8", Offset = "0x14176D8", VA = "0x14176D8")]
		set
		{
		}
	}

	[Token(Token = "0x170000D3")]
	public uint auxBusID
	{
		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x141783C", Offset = "0x141783C", VA = "0x141783C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x14177C0", Offset = "0x14177C0", VA = "0x14177C0")]
		set
		{
		}
	}

	[Token(Token = "0x170000D4")]
	public float fControlValue
	{
		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x1417924", Offset = "0x1417924", VA = "0x1417924")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x14178A8", Offset = "0x14178A8", VA = "0x14178A8")]
		set
		{
		}
	}

	[Token(Token = "0x60014C8")]
	[Address(RVA = "0x1416D44", Offset = "0x1416D44", VA = "0x1416D44")]
	internal AkAuxSendValue(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60014C9")]
	[Address(RVA = "0x14174A8", Offset = "0x14174A8", VA = "0x14174A8")]
	internal static IntPtr getCPtr(AkAuxSendValue obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60014CA")]
	[Address(RVA = "0x14174F8", Offset = "0x14174F8", VA = "0x14174F8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60014CB")]
	[Address(RVA = "0x141752C", Offset = "0x141752C", VA = "0x141752C", Slot = "1")]
	~AkAuxSendValue()
	{
	}

	[Token(Token = "0x60014CC")]
	[Address(RVA = "0x141759C", Offset = "0x141759C", VA = "0x141759C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60014D3")]
	[Address(RVA = "0x1417990", Offset = "0x1417990", VA = "0x1417990")]
	public void Set(GameObject listener, uint id, float value)
	{
	}

	[Token(Token = "0x60014D4")]
	[Address(RVA = "0x1417A64", Offset = "0x1417A64", VA = "0x1417A64")]
	public bool IsSame(GameObject listener, uint id)
	{
		return default(bool);
	}

	[Token(Token = "0x60014D5")]
	[Address(RVA = "0x1417B28", Offset = "0x1417B28", VA = "0x1417B28")]
	public static int GetSizeOf()
	{
		return default(int);
	}
}
[Token(Token = "0x20002DE")]
public class AkBankCallbackInfo : IDisposable
{
	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000D5")]
	public uint bankID
	{
		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x14182A8", Offset = "0x14182A8", VA = "0x14182A8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000D6")]
	public IntPtr inMemoryBankPtr
	{
		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x1418314", Offset = "0x1418314", VA = "0x1418314")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170000D7")]
	public AKRESULT loadResult
	{
		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x1418380", Offset = "0x1418380", VA = "0x1418380")]
		get
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x170000D8")]
	public int memPoolId
	{
		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x14183EC", Offset = "0x14183EC", VA = "0x14183EC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60014D6")]
	[Address(RVA = "0x1418038", Offset = "0x1418038", VA = "0x1418038")]
	internal AkBankCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60014D7")]
	[Address(RVA = "0x1418078", Offset = "0x1418078", VA = "0x1418078")]
	internal static IntPtr getCPtr(AkBankCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60014D8")]
	[Address(RVA = "0x14180C8", Offset = "0x14180C8", VA = "0x14180C8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60014D9")]
	[Address(RVA = "0x14180FC", Offset = "0x14180FC", VA = "0x14180FC", Slot = "1")]
	~AkBankCallbackInfo()
	{
	}

	[Token(Token = "0x60014DA")]
	[Address(RVA = "0x141816C", Offset = "0x141816C", VA = "0x141816C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60014DF")]
	[Address(RVA = "0x1418458", Offset = "0x1418458", VA = "0x1418458")]
	public AkBankCallbackInfo()
	{
	}
}
[Token(Token = "0x20002DF")]
public enum AkBankContent
{
	[Token(Token = "0x400138A")]
	AkBankContent_StructureOnly,
	[Token(Token = "0x400138B")]
	AkBankContent_All
}
[Token(Token = "0x20002E0")]
public enum AkBusHierarchyFlags
{
	[Token(Token = "0x400138D")]
	AkBusHierarchy_Primary = 1,
	[Token(Token = "0x400138E")]
	AkBusHierarchy_Secondary = 2,
	[Token(Token = "0x400138F")]
	AkBusHierarchy_IsMaster = 0x80
}
[Token(Token = "0x20002E1")]
public class AkCallbackInfo : IDisposable
{
	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000D9")]
	public IntPtr pCookie
	{
		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x141A3FC", Offset = "0x141A3FC", VA = "0x141A3FC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170000DA")]
	public ulong gameObjID
	{
		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x141A468", Offset = "0x141A468", VA = "0x141A468")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x60014E0")]
	[Address(RVA = "0x141A18C", Offset = "0x141A18C", VA = "0x141A18C")]
	internal AkCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60014E1")]
	[Address(RVA = "0x141A1CC", Offset = "0x141A1CC", VA = "0x141A1CC")]
	internal static IntPtr getCPtr(AkCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60014E2")]
	[Address(RVA = "0x141A21C", Offset = "0x141A21C", VA = "0x141A21C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60014E3")]
	[Address(RVA = "0x141A250", Offset = "0x141A250", VA = "0x141A250", Slot = "1")]
	~AkCallbackInfo()
	{
	}

	[Token(Token = "0x60014E4")]
	[Address(RVA = "0x141A2C0", Offset = "0x141A2C0", VA = "0x141A2C0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60014E7")]
	[Address(RVA = "0x141A4D4", Offset = "0x141A4D4", VA = "0x141A4D4")]
	public AkCallbackInfo()
	{
	}
}
[Token(Token = "0x20002E2")]
public class AkCallbackSerializer : IDisposable
{
	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x60014E8")]
	[Address(RVA = "0x141D3E0", Offset = "0x141D3E0", VA = "0x141D3E0")]
	internal AkCallbackSerializer(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60014E9")]
	[Address(RVA = "0x141D420", Offset = "0x141D420", VA = "0x141D420")]
	internal static IntPtr getCPtr(AkCallbackSerializer obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60014EA")]
	[Address(RVA = "0x141D470", Offset = "0x141D470", VA = "0x141D470", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60014EB")]
	[Address(RVA = "0x141D4A4", Offset = "0x141D4A4", VA = "0x141D4A4", Slot = "1")]
	~AkCallbackSerializer()
	{
	}

	[Token(Token = "0x60014EC")]
	[Address(RVA = "0x141D514", Offset = "0x141D514", VA = "0x141D514", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60014ED")]
	[Address(RVA = "0x141AF24", Offset = "0x141AF24", VA = "0x141AF24")]
	public static AKRESULT Init(IntPtr in_pMemory, uint in_uSize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60014EE")]
	[Address(RVA = "0x141B078", Offset = "0x141B078", VA = "0x141B078")]
	public static void Term()
	{
	}

	[Token(Token = "0x60014EF")]
	[Address(RVA = "0x141BE74", Offset = "0x141BE74", VA = "0x141BE74")]
	public static IntPtr Lock()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60014F0")]
	[Address(RVA = "0x141B160", Offset = "0x141B160", VA = "0x141B160")]
	public static void SetLocalOutput(uint in_uErrorLevel)
	{
	}

	[Token(Token = "0x60014F1")]
	[Address(RVA = "0x141C8A0", Offset = "0x141C8A0", VA = "0x141C8A0")]
	public static void Unlock()
	{
	}

	[Token(Token = "0x60014F2")]
	[Address(RVA = "0x141D650", Offset = "0x141D650", VA = "0x141D650")]
	public static AKRESULT AudioSourceChangeCallbackFunc(bool in_bOtherAudioPlaying, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60014F3")]
	[Address(RVA = "0x141D6E8", Offset = "0x141D6E8", VA = "0x141D6E8")]
	public AkCallbackSerializer()
	{
	}
}
[Token(Token = "0x20002E3")]
public enum AkCallbackType
{
	[Token(Token = "0x4001395")]
	AK_EndOfEvent = 1,
	[Token(Token = "0x4001396")]
	AK_EndOfDynamicSequenceItem = 2,
	[Token(Token = "0x4001397")]
	AK_Marker = 4,
	[Token(Token = "0x4001398")]
	AK_Duration = 8,
	[Token(Token = "0x4001399")]
	AK_SpeakerVolumeMatrix = 16,
	[Token(Token = "0x400139A")]
	AK_Starvation = 32,
	[Token(Token = "0x400139B")]
	AK_MusicPlaylistSelect = 64,
	[Token(Token = "0x400139C")]
	AK_MusicPlayStarted = 128,
	[Token(Token = "0x400139D")]
	AK_MusicSyncBeat = 256,
	[Token(Token = "0x400139E")]
	AK_MusicSyncBar = 512,
	[Token(Token = "0x400139F")]
	AK_MusicSyncEntry = 1024,
	[Token(Token = "0x40013A0")]
	AK_MusicSyncExit = 2048,
	[Token(Token = "0x40013A1")]
	AK_MusicSyncGrid = 4096,
	[Token(Token = "0x40013A2")]
	AK_MusicSyncUserCue = 8192,
	[Token(Token = "0x40013A3")]
	AK_MusicSyncPoint = 16384,
	[Token(Token = "0x40013A4")]
	AK_MusicSyncAll = 32512,
	[Token(Token = "0x40013A5")]
	AK_MIDIEvent = 65536,
	[Token(Token = "0x40013A6")]
	AK_CallbackBits = 1048575,
	[Token(Token = "0x40013A7")]
	AK_EnableGetSourcePlayPosition = 1048576,
	[Token(Token = "0x40013A8")]
	AK_EnableGetMusicPlayPosition = 2097152,
	[Token(Token = "0x40013A9")]
	AK_EnableGetSourceStreamBuffering = 4194304,
	[Token(Token = "0x40013AA")]
	AK_Monitoring = 536870912,
	[Token(Token = "0x40013AB")]
	AK_AudioSourceChange = 587202560,
	[Token(Token = "0x40013AC")]
	AK_Bank = 1073741824,
	[Token(Token = "0x40013AD")]
	AK_AudioInterruption = 570425344
}
[Token(Token = "0x20002E4")]
public class AkChannelConfig : IDisposable
{
	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000DB")]
	public uint uNumChannels
	{
		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x141D9C8", Offset = "0x141D9C8", VA = "0x141D9C8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x141D94C", Offset = "0x141D94C", VA = "0x141D94C")]
		set
		{
		}
	}

	[Token(Token = "0x170000DC")]
	public uint eConfigType
	{
		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x141DAB0", Offset = "0x141DAB0", VA = "0x141DAB0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x141DA34", Offset = "0x141DA34", VA = "0x141DA34")]
		set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	public uint uChannelMask
	{
		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x141DB98", Offset = "0x141DB98", VA = "0x141DB98")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x141DB1C", Offset = "0x141DB1C", VA = "0x141DB1C")]
		set
		{
		}
	}

	[Token(Token = "0x60014F4")]
	[Address(RVA = "0x14133A4", Offset = "0x14133A4", VA = "0x14133A4")]
	internal AkChannelConfig(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60014F5")]
	[Address(RVA = "0x14132A4", Offset = "0x14132A4", VA = "0x14132A4")]
	internal static IntPtr getCPtr(AkChannelConfig obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60014F6")]
	[Address(RVA = "0x141D76C", Offset = "0x141D76C", VA = "0x141D76C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60014F7")]
	[Address(RVA = "0x141D7A0", Offset = "0x141D7A0", VA = "0x141D7A0", Slot = "1")]
	~AkChannelConfig()
	{
	}

	[Token(Token = "0x60014F8")]
	[Address(RVA = "0x141D810", Offset = "0x141D810", VA = "0x141D810", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60014FF")]
	[Address(RVA = "0x141DC04", Offset = "0x141DC04", VA = "0x141DC04")]
	public AkChannelConfig()
	{
	}

	[Token(Token = "0x6001500")]
	[Address(RVA = "0x141DC88", Offset = "0x141DC88", VA = "0x141DC88")]
	public AkChannelConfig(uint in_uNumChannels, uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6001501")]
	[Address(RVA = "0x141DD24", Offset = "0x141DD24", VA = "0x141DD24")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001502")]
	[Address(RVA = "0x141DD90", Offset = "0x141DD90", VA = "0x141DD90")]
	public void SetStandard(uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6001503")]
	[Address(RVA = "0x141DE0C", Offset = "0x141DE0C", VA = "0x141DE0C")]
	public void SetStandardOrAnonymous(uint in_uNumChannels, uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6001504")]
	[Address(RVA = "0x141DE90", Offset = "0x141DE90", VA = "0x141DE90")]
	public void SetAnonymous(uint in_uNumChannels)
	{
	}

	[Token(Token = "0x6001505")]
	[Address(RVA = "0x141DF0C", Offset = "0x141DF0C", VA = "0x141DF0C")]
	public void SetAmbisonic(uint in_uNumChannels)
	{
	}

	[Token(Token = "0x6001506")]
	[Address(RVA = "0x141DF88", Offset = "0x141DF88", VA = "0x141DF88")]
	public bool IsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6001507")]
	[Address(RVA = "0x141DFF4", Offset = "0x141DFF4", VA = "0x141DFF4")]
	public uint Serialize()
	{
		return default(uint);
	}

	[Token(Token = "0x6001508")]
	[Address(RVA = "0x141E060", Offset = "0x141E060", VA = "0x141E060")]
	public void Deserialize(uint in_uChannelConfig)
	{
	}

	[Token(Token = "0x6001509")]
	[Address(RVA = "0x141E0DC", Offset = "0x141E0DC", VA = "0x141E0DC")]
	public AkChannelConfig RemoveLFE()
	{
		return null;
	}

	[Token(Token = "0x600150A")]
	[Address(RVA = "0x141E180", Offset = "0x141E180", VA = "0x141E180")]
	public AkChannelConfig RemoveCenter()
	{
		return null;
	}

	[Token(Token = "0x600150B")]
	[Address(RVA = "0x141E224", Offset = "0x141E224", VA = "0x141E224")]
	public bool IsChannelConfigSupported()
	{
		return default(bool);
	}
}
[Token(Token = "0x20002E5")]
public enum AkChannelConfigType
{
	[Token(Token = "0x40013B1")]
	AK_ChannelConfigType_Anonymous,
	[Token(Token = "0x40013B2")]
	AK_ChannelConfigType_Standard,
	[Token(Token = "0x40013B3")]
	AK_ChannelConfigType_Ambisonic
}
[Token(Token = "0x20002E6")]
public class AkChannelEmitter : IDisposable
{
	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000DE")]
	public AkTransform position
	{
		[Token(Token = "0x6001512")]
		[Address(RVA = "0x141E590", Offset = "0x141E590", VA = "0x141E590")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001511")]
		[Address(RVA = "0x141E500", Offset = "0x141E500", VA = "0x141E500")]
		set
		{
		}
	}

	[Token(Token = "0x170000DF")]
	public uint uInputChannels
	{
		[Token(Token = "0x6001514")]
		[Address(RVA = "0x141E6BC", Offset = "0x141E6BC", VA = "0x141E6BC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001513")]
		[Address(RVA = "0x141E640", Offset = "0x141E640", VA = "0x141E640")]
		set
		{
		}
	}

	[Token(Token = "0x600150C")]
	[Address(RVA = "0x141E290", Offset = "0x141E290", VA = "0x141E290")]
	internal AkChannelEmitter(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600150D")]
	[Address(RVA = "0x141E2D0", Offset = "0x141E2D0", VA = "0x141E2D0")]
	internal static IntPtr getCPtr(AkChannelEmitter obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600150E")]
	[Address(RVA = "0x141E320", Offset = "0x141E320", VA = "0x141E320", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600150F")]
	[Address(RVA = "0x141E354", Offset = "0x141E354", VA = "0x141E354", Slot = "1")]
	~AkChannelEmitter()
	{
	}

	[Token(Token = "0x6001510")]
	[Address(RVA = "0x141E3C4", Offset = "0x141E3C4", VA = "0x141E3C4", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x20002E7")]
public enum AkChannelOrdering
{
	[Token(Token = "0x40013B7")]
	ChannelOrdering_Standard,
	[Token(Token = "0x40013B8")]
	ChannelOrdering_RunTime
}
[Token(Token = "0x20002E8")]
public enum AkConnectionType
{
	[Token(Token = "0x40013BA")]
	ConnectionType_Direct,
	[Token(Token = "0x40013BB")]
	ConnectionType_GameDefSend,
	[Token(Token = "0x40013BC")]
	ConnectionType_UserDefSend
}
[Token(Token = "0x20002E9")]
public enum AkCurveInterpolation
{
	[Token(Token = "0x40013BE")]
	AkCurveInterpolation_Log3 = 0,
	[Token(Token = "0x40013BF")]
	AkCurveInterpolation_Sine = 1,
	[Token(Token = "0x40013C0")]
	AkCurveInterpolation_Log1 = 2,
	[Token(Token = "0x40013C1")]
	AkCurveInterpolation_InvSCurve = 3,
	[Token(Token = "0x40013C2")]
	AkCurveInterpolation_Linear = 4,
	[Token(Token = "0x40013C3")]
	AkCurveInterpolation_SCurve = 5,
	[Token(Token = "0x40013C4")]
	AkCurveInterpolation_Exp1 = 6,
	[Token(Token = "0x40013C5")]
	AkCurveInterpolation_SineRecip = 7,
	[Token(Token = "0x40013C6")]
	AkCurveInterpolation_Exp3 = 8,
	[Token(Token = "0x40013C7")]
	AkCurveInterpolation_LastFadeCurve = 8,
	[Token(Token = "0x40013C8")]
	AkCurveInterpolation_Constant = 9
}
[Token(Token = "0x20002EA")]
public class AkDeviceSettings : IDisposable
{
	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000E0")]
	public IntPtr pIOMemory
	{
		[Token(Token = "0x600151B")]
		[Address(RVA = "0x1420490", Offset = "0x1420490", VA = "0x1420490")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x600151A")]
		[Address(RVA = "0x1420414", Offset = "0x1420414", VA = "0x1420414")]
		set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public uint uIOMemorySize
	{
		[Token(Token = "0x600151D")]
		[Address(RVA = "0x14204FC", Offset = "0x14204FC", VA = "0x14204FC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600151C")]
		[Address(RVA = "0x141ED08", Offset = "0x141ED08", VA = "0x141ED08")]
		set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public uint uIOMemoryAlignment
	{
		[Token(Token = "0x600151F")]
		[Address(RVA = "0x14205E4", Offset = "0x14205E4", VA = "0x14205E4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600151E")]
		[Address(RVA = "0x1420568", Offset = "0x1420568", VA = "0x1420568")]
		set
		{
		}
	}

	[Token(Token = "0x170000E3")]
	public int ePoolAttributes
	{
		[Token(Token = "0x6001521")]
		[Address(RVA = "0x14206CC", Offset = "0x14206CC", VA = "0x14206CC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001520")]
		[Address(RVA = "0x1420650", Offset = "0x1420650", VA = "0x1420650")]
		set
		{
		}
	}

	[Token(Token = "0x170000E4")]
	public uint uGranularity
	{
		[Token(Token = "0x6001523")]
		[Address(RVA = "0x14207B4", Offset = "0x14207B4", VA = "0x14207B4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001522")]
		[Address(RVA = "0x1420738", Offset = "0x1420738", VA = "0x1420738")]
		set
		{
		}
	}

	[Token(Token = "0x170000E5")]
	public uint uSchedulerTypeFlags
	{
		[Token(Token = "0x6001525")]
		[Address(RVA = "0x142089C", Offset = "0x142089C", VA = "0x142089C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001524")]
		[Address(RVA = "0x1420820", Offset = "0x1420820", VA = "0x1420820")]
		set
		{
		}
	}

	[Token(Token = "0x170000E6")]
	public AkThreadProperties threadProperties
	{
		[Token(Token = "0x6001527")]
		[Address(RVA = "0x1420998", Offset = "0x1420998", VA = "0x1420998")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001526")]
		[Address(RVA = "0x1420908", Offset = "0x1420908", VA = "0x1420908")]
		set
		{
		}
	}

	[Token(Token = "0x170000E7")]
	public float fTargetAutoStmBufferLength
	{
		[Token(Token = "0x6001529")]
		[Address(RVA = "0x1420A48", Offset = "0x1420A48", VA = "0x1420A48")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001528")]
		[Address(RVA = "0x141ED84", Offset = "0x141ED84", VA = "0x141ED84")]
		set
		{
		}
	}

	[Token(Token = "0x170000E8")]
	public uint uMaxConcurrentIO
	{
		[Token(Token = "0x600152B")]
		[Address(RVA = "0x1420B30", Offset = "0x1420B30", VA = "0x1420B30")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600152A")]
		[Address(RVA = "0x1420AB4", Offset = "0x1420AB4", VA = "0x1420AB4")]
		set
		{
		}
	}

	[Token(Token = "0x170000E9")]
	public bool bUseStreamCache
	{
		[Token(Token = "0x600152D")]
		[Address(RVA = "0x1420B9C", Offset = "0x1420B9C", VA = "0x1420B9C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600152C")]
		[Address(RVA = "0x141EE00", Offset = "0x141EE00", VA = "0x141EE00")]
		set
		{
		}
	}

	[Token(Token = "0x170000EA")]
	public uint uMaxCachePinnedBytes
	{
		[Token(Token = "0x600152F")]
		[Address(RVA = "0x1420C08", Offset = "0x1420C08", VA = "0x1420C08")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600152E")]
		[Address(RVA = "0x141EE7C", Offset = "0x141EE7C", VA = "0x141EE7C")]
		set
		{
		}
	}

	[Token(Token = "0x6001515")]
	[Address(RVA = "0x14201A4", Offset = "0x14201A4", VA = "0x14201A4")]
	internal AkDeviceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001516")]
	[Address(RVA = "0x14201E4", Offset = "0x14201E4", VA = "0x14201E4")]
	internal static IntPtr getCPtr(AkDeviceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001517")]
	[Address(RVA = "0x1420234", Offset = "0x1420234", VA = "0x1420234", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001518")]
	[Address(RVA = "0x1420268", Offset = "0x1420268", VA = "0x1420268", Slot = "1")]
	~AkDeviceSettings()
	{
	}

	[Token(Token = "0x6001519")]
	[Address(RVA = "0x14202D8", Offset = "0x14202D8", VA = "0x14202D8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001530")]
	[Address(RVA = "0x1420C74", Offset = "0x1420C74", VA = "0x1420C74")]
	public AkDeviceSettings()
	{
	}
}
[Token(Token = "0x20002EB")]
public enum AkDiffractionFlags
{
	[Token(Token = "0x40013CC")]
	DiffractionFlags_UseBuiltInParam = 1,
	[Token(Token = "0x40013CD")]
	DiffractionFlags_UseObstruction = 2,
	[Token(Token = "0x40013CE")]
	DiffractionFlags_CalcEmitterVirtualPosition = 8,
	[Token(Token = "0x40013CF")]
	DefaultDiffractionFlags = 11
}
[Token(Token = "0x20002EC")]
public class AkDiffractionPathInfo : IDisposable
{
	[Token(Token = "0x40013D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40013D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x40013D2")]
	public const uint kMaxNodes = 8u;

	[Token(Token = "0x170000EB")]
	public AkTransform virtualPos
	{
		[Token(Token = "0x6001537")]
		[Address(RVA = "0x1420FF8", Offset = "0x1420FF8", VA = "0x1420FF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001536")]
		[Address(RVA = "0x1420F68", Offset = "0x1420F68", VA = "0x1420F68")]
		set
		{
		}
	}

	[Token(Token = "0x170000EC")]
	public uint nodeCount
	{
		[Token(Token = "0x6001539")]
		[Address(RVA = "0x1421124", Offset = "0x1421124", VA = "0x1421124")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001538")]
		[Address(RVA = "0x14210A8", Offset = "0x14210A8", VA = "0x14210A8")]
		set
		{
		}
	}

	[Token(Token = "0x170000ED")]
	public float diffraction
	{
		[Token(Token = "0x600153B")]
		[Address(RVA = "0x142120C", Offset = "0x142120C", VA = "0x142120C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600153A")]
		[Address(RVA = "0x1421190", Offset = "0x1421190", VA = "0x1421190")]
		set
		{
		}
	}

	[Token(Token = "0x170000EE")]
	public float totLength
	{
		[Token(Token = "0x600153D")]
		[Address(RVA = "0x14212F4", Offset = "0x14212F4", VA = "0x14212F4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600153C")]
		[Address(RVA = "0x1421278", Offset = "0x1421278", VA = "0x1421278")]
		set
		{
		}
	}

	[Token(Token = "0x170000EF")]
	public float obstructionValue
	{
		[Token(Token = "0x600153F")]
		[Address(RVA = "0x14213DC", Offset = "0x14213DC", VA = "0x14213DC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600153E")]
		[Address(RVA = "0x1421360", Offset = "0x1421360", VA = "0x1421360")]
		set
		{
		}
	}

	[Token(Token = "0x6001531")]
	[Address(RVA = "0x1420CF8", Offset = "0x1420CF8", VA = "0x1420CF8")]
	internal AkDiffractionPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001532")]
	[Address(RVA = "0x1420D38", Offset = "0x1420D38", VA = "0x1420D38")]
	internal static IntPtr getCPtr(AkDiffractionPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001533")]
	[Address(RVA = "0x1420D88", Offset = "0x1420D88", VA = "0x1420D88", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001534")]
	[Address(RVA = "0x1420DBC", Offset = "0x1420DBC", VA = "0x1420DBC", Slot = "1")]
	~AkDiffractionPathInfo()
	{
	}

	[Token(Token = "0x6001535")]
	[Address(RVA = "0x1420E2C", Offset = "0x1420E2C", VA = "0x1420E2C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001540")]
	[Address(RVA = "0x1421448", Offset = "0x1421448", VA = "0x1421448")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001541")]
	[Address(RVA = "0x14214A8", Offset = "0x14214A8", VA = "0x14214A8")]
	public AkVector GetNodes(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6001542")]
	[Address(RVA = "0x1421568", Offset = "0x1421568", VA = "0x1421568")]
	public float GetAngles(uint idx)
	{
		return default(float);
	}

	[Token(Token = "0x6001543")]
	[Address(RVA = "0x14215E4", Offset = "0x14215E4", VA = "0x14215E4")]
	public ulong GetPortals(uint idx)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001544")]
	[Address(RVA = "0x1421660", Offset = "0x1421660", VA = "0x1421660")]
	public ulong GetRooms(uint idx)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001545")]
	[Address(RVA = "0x14216DC", Offset = "0x14216DC", VA = "0x14216DC")]
	public void Clone(AkDiffractionPathInfo other)
	{
	}

	[Token(Token = "0x6001546")]
	[Address(RVA = "0x1421784", Offset = "0x1421784", VA = "0x1421784")]
	public AkDiffractionPathInfo()
	{
	}
}
[Token(Token = "0x20002ED")]
public class AkDurationCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x40013D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170000F0")]
	public float fDuration
	{
		[Token(Token = "0x600154C")]
		[Address(RVA = "0x1421CE8", Offset = "0x1421CE8", VA = "0x1421CE8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000F1")]
	public float fEstimatedDuration
	{
		[Token(Token = "0x600154D")]
		[Address(RVA = "0x1421D54", Offset = "0x1421D54", VA = "0x1421D54")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000F2")]
	public uint audioNodeID
	{
		[Token(Token = "0x600154E")]
		[Address(RVA = "0x1421DC0", Offset = "0x1421DC0", VA = "0x1421DC0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000F3")]
	public uint mediaID
	{
		[Token(Token = "0x600154F")]
		[Address(RVA = "0x1421E2C", Offset = "0x1421E2C", VA = "0x1421E2C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000F4")]
	public bool bStreaming
	{
		[Token(Token = "0x6001550")]
		[Address(RVA = "0x1421E98", Offset = "0x1421E98", VA = "0x1421E98")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001547")]
	[Address(RVA = "0x141CC84", Offset = "0x141CC84", VA = "0x141CC84")]
	internal AkDurationCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001548")]
	[Address(RVA = "0x1421A54", Offset = "0x1421A54", VA = "0x1421A54")]
	internal static IntPtr getCPtr(AkDurationCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001549")]
	[Address(RVA = "0x1421AA4", Offset = "0x1421AA4", VA = "0x1421AA4", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600154A")]
	[Address(RVA = "0x1421B30", Offset = "0x1421B30", VA = "0x1421B30", Slot = "1")]
	~AkDurationCallbackInfo()
	{
	}

	[Token(Token = "0x600154B")]
	[Address(RVA = "0x1421BA0", Offset = "0x1421BA0", VA = "0x1421BA0", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001551")]
	[Address(RVA = "0x1421F04", Offset = "0x1421F04", VA = "0x1421F04")]
	public AkDurationCallbackInfo()
	{
	}
}
[Token(Token = "0x20002EE")]
public class AkDynamicSequenceItemCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170000F5")]
	public uint playingID
	{
		[Token(Token = "0x6001557")]
		[Address(RVA = "0x1422208", Offset = "0x1422208", VA = "0x1422208")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000F6")]
	public uint audioNodeID
	{
		[Token(Token = "0x6001558")]
		[Address(RVA = "0x1422274", Offset = "0x1422274", VA = "0x1422274")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000F7")]
	public IntPtr pCustomInfo
	{
		[Token(Token = "0x6001559")]
		[Address(RVA = "0x14222E0", Offset = "0x14222E0", VA = "0x14222E0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x6001552")]
	[Address(RVA = "0x141CBE8", Offset = "0x141CBE8", VA = "0x141CBE8")]
	internal AkDynamicSequenceItemCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001553")]
	[Address(RVA = "0x1421F78", Offset = "0x1421F78", VA = "0x1421F78")]
	internal static IntPtr getCPtr(AkDynamicSequenceItemCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001554")]
	[Address(RVA = "0x1421FC8", Offset = "0x1421FC8", VA = "0x1421FC8", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001555")]
	[Address(RVA = "0x142205C", Offset = "0x142205C", VA = "0x142205C", Slot = "1")]
	~AkDynamicSequenceItemCallbackInfo()
	{
	}

	[Token(Token = "0x6001556")]
	[Address(RVA = "0x14220C4", Offset = "0x14220C4", VA = "0x14220C4", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x600155A")]
	[Address(RVA = "0x142234C", Offset = "0x142234C", VA = "0x142234C")]
	public AkDynamicSequenceItemCallbackInfo()
	{
	}
}
[Token(Token = "0x20002EF")]
public enum AkDynamicSequenceType
{
	[Token(Token = "0x40013D6")]
	DynamicSequenceType_SampleAccurate,
	[Token(Token = "0x40013D7")]
	DynamicSequenceType_NormalTransition
}
[Token(Token = "0x20002F0")]
public class AkEmitterSettings : IDisposable
{
	[Token(Token = "0x40013D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40013D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000F8")]
	public uint reflectAuxBusID
	{
		[Token(Token = "0x6001562")]
		[Address(RVA = "0x1422A44", Offset = "0x1422A44", VA = "0x1422A44")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001561")]
		[Address(RVA = "0x14229C8", Offset = "0x14229C8", VA = "0x14229C8")]
		set
		{
		}
	}

	[Token(Token = "0x170000F9")]
	public float reflectionMaxPathLength
	{
		[Token(Token = "0x6001564")]
		[Address(RVA = "0x1422B2C", Offset = "0x1422B2C", VA = "0x1422B2C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001563")]
		[Address(RVA = "0x1422AB0", Offset = "0x1422AB0", VA = "0x1422AB0")]
		set
		{
		}
	}

	[Token(Token = "0x170000FA")]
	public float reflectionsAuxBusGain
	{
		[Token(Token = "0x6001566")]
		[Address(RVA = "0x1422C14", Offset = "0x1422C14", VA = "0x1422C14")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001565")]
		[Address(RVA = "0x1422B98", Offset = "0x1422B98", VA = "0x1422B98")]
		set
		{
		}
	}

	[Token(Token = "0x170000FB")]
	public uint reflectionsOrder
	{
		[Token(Token = "0x6001568")]
		[Address(RVA = "0x1422CFC", Offset = "0x1422CFC", VA = "0x1422CFC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001567")]
		[Address(RVA = "0x1422C80", Offset = "0x1422C80", VA = "0x1422C80")]
		set
		{
		}
	}

	[Token(Token = "0x170000FC")]
	public uint reflectorFilterMask
	{
		[Token(Token = "0x600156A")]
		[Address(RVA = "0x1422DE4", Offset = "0x1422DE4", VA = "0x1422DE4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001569")]
		[Address(RVA = "0x1422D68", Offset = "0x1422D68", VA = "0x1422D68")]
		set
		{
		}
	}

	[Token(Token = "0x170000FD")]
	public float roomReverbAuxBusGain
	{
		[Token(Token = "0x600156C")]
		[Address(RVA = "0x1422ECC", Offset = "0x1422ECC", VA = "0x1422ECC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600156B")]
		[Address(RVA = "0x1422E50", Offset = "0x1422E50", VA = "0x1422E50")]
		set
		{
		}
	}

	[Token(Token = "0x170000FE")]
	public uint diffractionMaxEdges
	{
		[Token(Token = "0x600156E")]
		[Address(RVA = "0x1422FB4", Offset = "0x1422FB4", VA = "0x1422FB4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600156D")]
		[Address(RVA = "0x1422F38", Offset = "0x1422F38", VA = "0x1422F38")]
		set
		{
		}
	}

	[Token(Token = "0x170000FF")]
	public uint diffractionMaxPaths
	{
		[Token(Token = "0x6001570")]
		[Address(RVA = "0x142309C", Offset = "0x142309C", VA = "0x142309C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600156F")]
		[Address(RVA = "0x1423020", Offset = "0x1423020", VA = "0x1423020")]
		set
		{
		}
	}

	[Token(Token = "0x17000100")]
	public float diffractionMaxPathLength
	{
		[Token(Token = "0x6001572")]
		[Address(RVA = "0x1423184", Offset = "0x1423184", VA = "0x1423184")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001571")]
		[Address(RVA = "0x1423108", Offset = "0x1423108", VA = "0x1423108")]
		set
		{
		}
	}

	[Token(Token = "0x17000101")]
	public byte useImageSources
	{
		[Token(Token = "0x6001574")]
		[Address(RVA = "0x142326C", Offset = "0x142326C", VA = "0x142326C")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001573")]
		[Address(RVA = "0x14231F0", Offset = "0x14231F0", VA = "0x14231F0")]
		set
		{
		}
	}

	[Token(Token = "0x600155B")]
	[Address(RVA = "0x14226D4", Offset = "0x14226D4", VA = "0x14226D4")]
	internal AkEmitterSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600155C")]
	[Address(RVA = "0x1422714", Offset = "0x1422714", VA = "0x1422714")]
	internal static IntPtr getCPtr(AkEmitterSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600155D")]
	[Address(RVA = "0x1422764", Offset = "0x1422764", VA = "0x1422764", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600155E")]
	[Address(RVA = "0x1422798", Offset = "0x1422798", VA = "0x1422798", Slot = "1")]
	~AkEmitterSettings()
	{
	}

	[Token(Token = "0x600155F")]
	[Address(RVA = "0x1422808", Offset = "0x1422808", VA = "0x1422808", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001560")]
	[Address(RVA = "0x1422944", Offset = "0x1422944", VA = "0x1422944")]
	public AkEmitterSettings()
	{
	}
}
[Token(Token = "0x20002F1")]
public class AkEventCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x40013DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000102")]
	public uint playingID
	{
		[Token(Token = "0x600157A")]
		[Address(RVA = "0x18C4BF0", Offset = "0x18C4BF0", VA = "0x18C4BF0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000103")]
	public uint eventID
	{
		[Token(Token = "0x600157B")]
		[Address(RVA = "0x18C4C5C", Offset = "0x18C4C5C", VA = "0x18C4C5C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x6001575")]
	[Address(RVA = "0x18C48C8", Offset = "0x18C48C8", VA = "0x18C48C8")]
	internal AkEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001576")]
	[Address(RVA = "0x18C495C", Offset = "0x18C495C", VA = "0x18C495C")]
	internal static IntPtr getCPtr(AkEventCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001577")]
	[Address(RVA = "0x18C49AC", Offset = "0x18C49AC", VA = "0x18C49AC", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001578")]
	[Address(RVA = "0x18C4A38", Offset = "0x18C4A38", VA = "0x18C4A38", Slot = "1")]
	~AkEventCallbackInfo()
	{
	}

	[Token(Token = "0x6001579")]
	[Address(RVA = "0x18C4AA8", Offset = "0x18C4AA8", VA = "0x18C4AA8", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x600157C")]
	[Address(RVA = "0x18C4CC8", Offset = "0x18C4CC8", VA = "0x18C4CC8")]
	public AkEventCallbackInfo()
	{
	}
}
[Token(Token = "0x20002F2")]
public class AkExternalSourceInfo : IDisposable
{
	[Token(Token = "0x40013DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40013DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000104")]
	public uint iExternalSrcCookie
	{
		[Token(Token = "0x600158A")]
		[Address(RVA = "0x18C6914", Offset = "0x18C6914", VA = "0x18C6914")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001589")]
		[Address(RVA = "0x18C6898", Offset = "0x18C6898", VA = "0x18C6898")]
		set
		{
		}
	}

	[Token(Token = "0x17000105")]
	public uint idCodec
	{
		[Token(Token = "0x600158C")]
		[Address(RVA = "0x18C69FC", Offset = "0x18C69FC", VA = "0x18C69FC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600158B")]
		[Address(RVA = "0x18C6980", Offset = "0x18C6980", VA = "0x18C6980")]
		set
		{
		}
	}

	[Token(Token = "0x17000106")]
	public string szFile
	{
		[Token(Token = "0x600158E")]
		[Address(RVA = "0x18C6AE4", Offset = "0x18C6AE4", VA = "0x18C6AE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600158D")]
		[Address(RVA = "0x18C6A68", Offset = "0x18C6A68", VA = "0x18C6A68")]
		set
		{
		}
	}

	[Token(Token = "0x17000107")]
	public IntPtr pInMemory
	{
		[Token(Token = "0x6001590")]
		[Address(RVA = "0x18C6C00", Offset = "0x18C6C00", VA = "0x18C6C00")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x600158F")]
		[Address(RVA = "0x18C6B84", Offset = "0x18C6B84", VA = "0x18C6B84")]
		set
		{
		}
	}

	[Token(Token = "0x17000108")]
	public uint uiMemorySize
	{
		[Token(Token = "0x6001592")]
		[Address(RVA = "0x18C6CE8", Offset = "0x18C6CE8", VA = "0x18C6CE8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001591")]
		[Address(RVA = "0x18C6C6C", Offset = "0x18C6C6C", VA = "0x18C6C6C")]
		set
		{
		}
	}

	[Token(Token = "0x17000109")]
	public uint idFile
	{
		[Token(Token = "0x6001594")]
		[Address(RVA = "0x18C6DD0", Offset = "0x18C6DD0", VA = "0x18C6DD0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001593")]
		[Address(RVA = "0x18C6D54", Offset = "0x18C6D54", VA = "0x18C6D54")]
		set
		{
		}
	}

	[Token(Token = "0x600157D")]
	[Address(RVA = "0x18C6224", Offset = "0x18C6224", VA = "0x18C6224")]
	internal AkExternalSourceInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600157E")]
	[Address(RVA = "0x18C6264", Offset = "0x18C6264", VA = "0x18C6264")]
	internal static IntPtr getCPtr(AkExternalSourceInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600157F")]
	[Address(RVA = "0x18C62B4", Offset = "0x18C62B4", VA = "0x18C62B4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001580")]
	[Address(RVA = "0x18C62E8", Offset = "0x18C62E8", VA = "0x18C62E8", Slot = "1")]
	~AkExternalSourceInfo()
	{
	}

	[Token(Token = "0x6001581")]
	[Address(RVA = "0x18C6358", Offset = "0x18C6358", VA = "0x18C6358", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001582")]
	[Address(RVA = "0x18C6494", Offset = "0x18C6494", VA = "0x18C6494")]
	public AkExternalSourceInfo()
	{
	}

	[Token(Token = "0x6001583")]
	[Address(RVA = "0x18C6518", Offset = "0x18C6518", VA = "0x18C6518")]
	public AkExternalSourceInfo(IntPtr in_pInMemory, uint in_uiMemorySize, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x6001584")]
	[Address(RVA = "0x18C65CC", Offset = "0x18C65CC", VA = "0x18C65CC")]
	public AkExternalSourceInfo(string in_pszFileName, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x6001585")]
	[Address(RVA = "0x18C6678", Offset = "0x18C6678", VA = "0x18C6678")]
	public AkExternalSourceInfo(uint in_idFile, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x6001586")]
	[Address(RVA = "0x18C6724", Offset = "0x18C6724", VA = "0x18C6724")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001587")]
	[Address(RVA = "0x18C6790", Offset = "0x18C6790", VA = "0x18C6790")]
	public void Clone(AkExternalSourceInfo other)
	{
	}

	[Token(Token = "0x6001588")]
	[Address(RVA = "0x18C6838", Offset = "0x18C6838", VA = "0x18C6838")]
	public static int GetSizeOf()
	{
		return default(int);
	}
}
[Token(Token = "0x20002F3")]
public enum AkFloorPlane
{
	[Token(Token = "0x40013DE")]
	AkFloorPlane_XZ = 0,
	[Token(Token = "0x40013DF")]
	AkFloorPlane_XY = 1,
	[Token(Token = "0x40013E0")]
	AkFloorPlane_YZ = 2,
	[Token(Token = "0x40013E1")]
	AkFloorPlane_Default = 0
}
[Token(Token = "0x20002F4")]
public enum AkGlobalCallbackLocation
{
	[Token(Token = "0x40013E3")]
	AkGlobalCallbackLocation_Register = 1,
	[Token(Token = "0x40013E4")]
	AkGlobalCallbackLocation_Begin = 2,
	[Token(Token = "0x40013E5")]
	AkGlobalCallbackLocation_PreProcessMessageQueueForRender = 4,
	[Token(Token = "0x40013E6")]
	AkGlobalCallbackLocation_PostMessagesProcessed = 8,
	[Token(Token = "0x40013E7")]
	AkGlobalCallbackLocation_BeginRender = 16,
	[Token(Token = "0x40013E8")]
	AkGlobalCallbackLocation_EndRender = 32,
	[Token(Token = "0x40013E9")]
	AkGlobalCallbackLocation_End = 64,
	[Token(Token = "0x40013EA")]
	AkGlobalCallbackLocation_Term = 128,
	[Token(Token = "0x40013EB")]
	AkGlobalCallbackLocation_Monitor = 256,
	[Token(Token = "0x40013EC")]
	AkGlobalCallbackLocation_MonitorRecap = 512,
	[Token(Token = "0x40013ED")]
	AkGlobalCallbackLocation_Num = 10
}
[Token(Token = "0x20002F5")]
public enum AkGroupType
{
	[Token(Token = "0x40013EF")]
	AkGroupType_Switch,
	[Token(Token = "0x40013F0")]
	AkGroupType_State
}
[Token(Token = "0x20002F6")]
public class AkImageSourceParams : IDisposable
{
	[Token(Token = "0x40013F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40013F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700010A")]
	public AkVector sourcePosition
	{
		[Token(Token = "0x600159D")]
		[Address(RVA = "0x18C914C", Offset = "0x18C914C", VA = "0x18C914C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600159C")]
		[Address(RVA = "0x18C90BC", Offset = "0x18C90BC", VA = "0x18C90BC")]
		set
		{
		}
	}

	[Token(Token = "0x1700010B")]
	public float fDistanceScalingFactor
	{
		[Token(Token = "0x600159F")]
		[Address(RVA = "0x18C9278", Offset = "0x18C9278", VA = "0x18C9278")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600159E")]
		[Address(RVA = "0x18C91FC", Offset = "0x18C91FC", VA = "0x18C91FC")]
		set
		{
		}
	}

	[Token(Token = "0x1700010C")]
	public float fLevel
	{
		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x18C9360", Offset = "0x18C9360", VA = "0x18C9360")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x18C92E4", Offset = "0x18C92E4", VA = "0x18C92E4")]
		set
		{
		}
	}

	[Token(Token = "0x1700010D")]
	public float fDiffraction
	{
		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x18C9448", Offset = "0x18C9448", VA = "0x18C9448")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x18C93CC", Offset = "0x18C93CC", VA = "0x18C93CC")]
		set
		{
		}
	}

	[Token(Token = "0x1700010E")]
	public byte uDiffractionEmitterSide
	{
		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x18C9530", Offset = "0x18C9530", VA = "0x18C9530")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x18C94B4", Offset = "0x18C94B4", VA = "0x18C94B4")]
		set
		{
		}
	}

	[Token(Token = "0x1700010F")]
	public byte uDiffractionListenerSide
	{
		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x18C9618", Offset = "0x18C9618", VA = "0x18C9618")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x18C959C", Offset = "0x18C959C", VA = "0x18C959C")]
		set
		{
		}
	}

	[Token(Token = "0x6001595")]
	[Address(RVA = "0x18C8D08", Offset = "0x18C8D08", VA = "0x18C8D08")]
	internal AkImageSourceParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001596")]
	[Address(RVA = "0x18C8D48", Offset = "0x18C8D48", VA = "0x18C8D48")]
	internal static IntPtr getCPtr(AkImageSourceParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001597")]
	[Address(RVA = "0x18C8D98", Offset = "0x18C8D98", VA = "0x18C8D98", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001598")]
	[Address(RVA = "0x18C8DCC", Offset = "0x18C8DCC", VA = "0x18C8DCC", Slot = "1")]
	~AkImageSourceParams()
	{
	}

	[Token(Token = "0x6001599")]
	[Address(RVA = "0x18C8E3C", Offset = "0x18C8E3C", VA = "0x18C8E3C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600159A")]
	[Address(RVA = "0x18C8F78", Offset = "0x18C8F78", VA = "0x18C8F78")]
	public AkImageSourceParams()
	{
	}

	[Token(Token = "0x600159B")]
	[Address(RVA = "0x18C8FFC", Offset = "0x18C8FFC", VA = "0x18C8FFC")]
	public AkImageSourceParams(AkVector in_sourcePosition, float in_fDistanceScalingFactor, float in_fLevel)
	{
	}
}
[Token(Token = "0x20002F7")]
public class AkImageSourceSettings : IDisposable
{
	[Token(Token = "0x40013F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40013F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000110")]
	public AkImageSourceParams params_
	{
		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x18C9BD8", Offset = "0x18C9BD8", VA = "0x18C9BD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x18C9B30", Offset = "0x18C9B30", VA = "0x18C9B30")]
		set
		{
		}
	}

	[Token(Token = "0x60015A8")]
	[Address(RVA = "0x18C9684", Offset = "0x18C9684", VA = "0x18C9684")]
	internal AkImageSourceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60015A9")]
	[Address(RVA = "0x18C96C4", Offset = "0x18C96C4", VA = "0x18C96C4")]
	internal static IntPtr getCPtr(AkImageSourceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60015AA")]
	[Address(RVA = "0x18C9714", Offset = "0x18C9714", VA = "0x18C9714", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60015AB")]
	[Address(RVA = "0x18C9748", Offset = "0x18C9748", VA = "0x18C9748", Slot = "1")]
	~AkImageSourceSettings()
	{
	}

	[Token(Token = "0x60015AC")]
	[Address(RVA = "0x18C97B8", Offset = "0x18C97B8", VA = "0x18C97B8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60015AD")]
	[Address(RVA = "0x18C98F4", Offset = "0x18C98F4", VA = "0x18C98F4")]
	public AkImageSourceSettings()
	{
	}

	[Token(Token = "0x60015AE")]
	[Address(RVA = "0x18C9978", Offset = "0x18C9978", VA = "0x18C9978")]
	public AkImageSourceSettings(AkVector in_sourcePosition, float in_fDistanceScalingFactor, float in_fLevel)
	{
	}

	[Token(Token = "0x60015AF")]
	[Address(RVA = "0x18C9A38", Offset = "0x18C9A38", VA = "0x18C9A38")]
	public void SetOneTexture(uint in_texture)
	{
	}

	[Token(Token = "0x60015B0")]
	[Address(RVA = "0x18C9AB4", Offset = "0x18C9AB4", VA = "0x18C9AB4")]
	public void SetName(string in_pName)
	{
	}
}
[Token(Token = "0x20002F8")]
public class AkInitSettings : IDisposable
{
	[Token(Token = "0x40013F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40013F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000111")]
	public uint uMaxNumPaths
	{
		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x18C9F74", Offset = "0x18C9F74", VA = "0x18C9F74")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x18C9EF8", Offset = "0x18C9EF8", VA = "0x18C9EF8")]
		set
		{
		}
	}

	[Token(Token = "0x17000112")]
	public uint uDefaultPoolSize
	{
		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x18CA05C", Offset = "0x18CA05C", VA = "0x18CA05C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x18C9FE0", Offset = "0x18C9FE0", VA = "0x18C9FE0")]
		set
		{
		}
	}

	[Token(Token = "0x17000113")]
	public float fDefaultPoolRatioThreshold
	{
		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x18CA144", Offset = "0x18CA144", VA = "0x18CA144")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x18CA0C8", Offset = "0x18CA0C8", VA = "0x18CA0C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000114")]
	public uint uCommandQueueSize
	{
		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x18CA22C", Offset = "0x18CA22C", VA = "0x18CA22C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x18CA1B0", Offset = "0x18CA1B0", VA = "0x18CA1B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000115")]
	public int uPrepareEventMemoryPoolID
	{
		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x18CA314", Offset = "0x18CA314", VA = "0x18CA314")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x18CA298", Offset = "0x18CA298", VA = "0x18CA298")]
		set
		{
		}
	}

	[Token(Token = "0x17000116")]
	public bool bEnableGameSyncPreparation
	{
		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x18CA3FC", Offset = "0x18CA3FC", VA = "0x18CA3FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x18CA380", Offset = "0x18CA380", VA = "0x18CA380")]
		set
		{
		}
	}

	[Token(Token = "0x17000117")]
	public uint uContinuousPlaybackLookAhead
	{
		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x18CA4E4", Offset = "0x18CA4E4", VA = "0x18CA4E4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x18CA468", Offset = "0x18CA468", VA = "0x18CA468")]
		set
		{
		}
	}

	[Token(Token = "0x17000118")]
	public uint uNumSamplesPerFrame
	{
		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x18CA5CC", Offset = "0x18CA5CC", VA = "0x18CA5CC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x18CA550", Offset = "0x18CA550", VA = "0x18CA550")]
		set
		{
		}
	}

	[Token(Token = "0x17000119")]
	public uint uMonitorPoolSize
	{
		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x18CA6B4", Offset = "0x18CA6B4", VA = "0x18CA6B4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x18CA638", Offset = "0x18CA638", VA = "0x18CA638")]
		set
		{
		}
	}

	[Token(Token = "0x1700011A")]
	public uint uMonitorQueuePoolSize
	{
		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x18CA79C", Offset = "0x18CA79C", VA = "0x18CA79C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x18CA720", Offset = "0x18CA720", VA = "0x18CA720")]
		set
		{
		}
	}

	[Token(Token = "0x1700011B")]
	public AkOutputSettings settingsMainOutput
	{
		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x18CA900", Offset = "0x18CA900", VA = "0x18CA900")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x18CA808", Offset = "0x18CA808", VA = "0x18CA808")]
		set
		{
		}
	}

	[Token(Token = "0x1700011C")]
	public uint uMaxHardwareTimeoutMs
	{
		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x18CAA6C", Offset = "0x18CAA6C", VA = "0x18CAA6C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x18CA9F0", Offset = "0x18CA9F0", VA = "0x18CA9F0")]
		set
		{
		}
	}

	[Token(Token = "0x1700011D")]
	public bool bUseSoundBankMgrThread
	{
		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x18CAB54", Offset = "0x18CAB54", VA = "0x18CAB54")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x18CAAD8", Offset = "0x18CAAD8", VA = "0x18CAAD8")]
		set
		{
		}
	}

	[Token(Token = "0x1700011E")]
	public bool bUseLEngineThread
	{
		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x18CAC3C", Offset = "0x18CAC3C", VA = "0x18CAC3C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x18CABC0", Offset = "0x18CABC0", VA = "0x18CABC0")]
		set
		{
		}
	}

	[Token(Token = "0x1700011F")]
	public string szPluginDLLPath
	{
		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x18CAD24", Offset = "0x18CAD24", VA = "0x18CAD24")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x18CACA8", Offset = "0x18CACA8", VA = "0x18CACA8")]
		set
		{
		}
	}

	[Token(Token = "0x17000120")]
	public AkFloorPlane eFloorPlane
	{
		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x18CAE40", Offset = "0x18CAE40", VA = "0x18CAE40")]
		get
		{
			return default(AkFloorPlane);
		}
		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x18CADC4", Offset = "0x18CADC4", VA = "0x18CADC4")]
		set
		{
		}
	}

	[Token(Token = "0x60015B3")]
	[Address(RVA = "0x18C9C88", Offset = "0x18C9C88", VA = "0x18C9C88")]
	internal AkInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60015B4")]
	[Address(RVA = "0x18C9CC8", Offset = "0x18C9CC8", VA = "0x18C9CC8")]
	internal static IntPtr getCPtr(AkInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60015B5")]
	[Address(RVA = "0x18C9D18", Offset = "0x18C9D18", VA = "0x18C9D18", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60015B6")]
	[Address(RVA = "0x18C9D4C", Offset = "0x18C9D4C", VA = "0x18C9D4C", Slot = "1")]
	~AkInitSettings()
	{
	}

	[Token(Token = "0x60015B7")]
	[Address(RVA = "0x18C9DBC", Offset = "0x18C9DBC", VA = "0x18C9DBC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60015D8")]
	[Address(RVA = "0x18CAEAC", Offset = "0x18CAEAC", VA = "0x18CAEAC")]
	public AkInitSettings()
	{
	}
}
[Token(Token = "0x20002F9")]
public class AkInitializationSettings : IDisposable
{
	[Token(Token = "0x40013F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40013F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000121")]
	public AkMemSettings memSettings
	{
		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x18CB31C", Offset = "0x18CB31C", VA = "0x18CB31C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x18CB224", Offset = "0x18CB224", VA = "0x18CB224")]
		set
		{
		}
	}

	[Token(Token = "0x17000122")]
	public AkStreamMgrSettings streamMgrSettings
	{
		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x18CB49C", Offset = "0x18CB49C", VA = "0x18CB49C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x18CB40C", Offset = "0x18CB40C", VA = "0x18CB40C")]
		set
		{
		}
	}

	[Token(Token = "0x17000123")]
	public AkDeviceSettings deviceSettings
	{
		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x18CB5DC", Offset = "0x18CB5DC", VA = "0x18CB5DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x18CB54C", Offset = "0x18CB54C", VA = "0x18CB54C")]
		set
		{
		}
	}

	[Token(Token = "0x17000124")]
	public AkInitSettings initSettings
	{
		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x18CB734", Offset = "0x18CB734", VA = "0x18CB734")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x18CB68C", Offset = "0x18CB68C", VA = "0x18CB68C")]
		set
		{
		}
	}

	[Token(Token = "0x17000125")]
	public AkPlatformInitSettings platformSettings
	{
		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x18CB8DC", Offset = "0x18CB8DC", VA = "0x18CB8DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x18CB7E4", Offset = "0x18CB7E4", VA = "0x18CB7E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000126")]
	public AkMusicSettings musicSettings
	{
		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x18CBAC4", Offset = "0x18CBAC4", VA = "0x18CBAC4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x18CB9CC", Offset = "0x18CB9CC", VA = "0x18CB9CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000127")]
	public uint preparePoolSize
	{
		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x18CBC30", Offset = "0x18CBC30", VA = "0x18CBC30")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x18CBBB4", Offset = "0x18CBBB4", VA = "0x18CBBB4")]
		set
		{
		}
	}

	[Token(Token = "0x17000128")]
	public AkUnityPlatformSpecificSettings unityPlatformSpecificSettings
	{
		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x18CBD2C", Offset = "0x18CBD2C", VA = "0x18CBD2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x18CBC9C", Offset = "0x18CBC9C", VA = "0x18CBC9C")]
		set
		{
		}
	}

	[Token(Token = "0x60015D9")]
	[Address(RVA = "0x18CAF30", Offset = "0x18CAF30", VA = "0x18CAF30")]
	internal AkInitializationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60015DA")]
	[Address(RVA = "0x18CAF70", Offset = "0x18CAF70", VA = "0x18CAF70")]
	internal static IntPtr getCPtr(AkInitializationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60015DB")]
	[Address(RVA = "0x18CAFC0", Offset = "0x18CAFC0", VA = "0x18CAFC0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60015DC")]
	[Address(RVA = "0x18CAFF4", Offset = "0x18CAFF4", VA = "0x18CAFF4", Slot = "1")]
	~AkInitializationSettings()
	{
	}

	[Token(Token = "0x60015DD")]
	[Address(RVA = "0x18CB064", Offset = "0x18CB064", VA = "0x18CB064", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60015DE")]
	[Address(RVA = "0x18CB1A0", Offset = "0x18CB1A0", VA = "0x18CB1A0")]
	public AkInitializationSettings()
	{
	}
}
[Token(Token = "0x20002FA")]
public class AkIterator : IDisposable
{
	[Token(Token = "0x40013F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40013FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000129")]
	public AkPlaylistItem pItem
	{
		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x18CC740", Offset = "0x18CC740", VA = "0x18CC740")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x18CC648", Offset = "0x18CC648", VA = "0x18CC648")]
		set
		{
		}
	}

	[Token(Token = "0x60015EF")]
	[Address(RVA = "0x18CC3D8", Offset = "0x18CC3D8", VA = "0x18CC3D8")]
	internal AkIterator(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60015F0")]
	[Address(RVA = "0x18CC418", Offset = "0x18CC418", VA = "0x18CC418")]
	internal static IntPtr getCPtr(AkIterator obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60015F1")]
	[Address(RVA = "0x18CC468", Offset = "0x18CC468", VA = "0x18CC468", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60015F2")]
	[Address(RVA = "0x18CC49C", Offset = "0x18CC49C", VA = "0x18CC49C", Slot = "1")]
	~AkIterator()
	{
	}

	[Token(Token = "0x60015F3")]
	[Address(RVA = "0x18CC50C", Offset = "0x18CC50C", VA = "0x18CC50C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60015F6")]
	[Address(RVA = "0x18CC830", Offset = "0x18CC830", VA = "0x18CC830")]
	public AkIterator NextIter()
	{
		return null;
	}

	[Token(Token = "0x60015F7")]
	[Address(RVA = "0x18CC8D0", Offset = "0x18CC8D0", VA = "0x18CC8D0")]
	public AkIterator PrevIter()
	{
		return null;
	}

	[Token(Token = "0x60015F8")]
	[Address(RVA = "0x18CC970", Offset = "0x18CC970", VA = "0x18CC970")]
	public AkPlaylistItem GetItem()
	{
		return null;
	}

	[Token(Token = "0x60015F9")]
	[Address(RVA = "0x18CCA10", Offset = "0x18CCA10", VA = "0x18CCA10")]
	public bool IsEqualTo(AkIterator in_rOp)
	{
		return default(bool);
	}

	[Token(Token = "0x60015FA")]
	[Address(RVA = "0x18CCAB8", Offset = "0x18CCAB8", VA = "0x18CCAB8")]
	public bool IsDifferentFrom(AkIterator in_rOp)
	{
		return default(bool);
	}

	[Token(Token = "0x60015FB")]
	[Address(RVA = "0x18CCB60", Offset = "0x18CCB60", VA = "0x18CCB60")]
	public AkIterator()
	{
	}
}
[Token(Token = "0x20002FB")]
public enum AkMIDICcTypes
{
	[Token(Token = "0x40013FC")]
	BANK_SELECT_COARSE = 0,
	[Token(Token = "0x40013FD")]
	MOD_WHEEL_COARSE = 1,
	[Token(Token = "0x40013FE")]
	BREATH_CTRL_COARSE = 2,
	[Token(Token = "0x40013FF")]
	CTRL_3_COARSE = 3,
	[Token(Token = "0x4001400")]
	FOOT_PEDAL_COARSE = 4,
	[Token(Token = "0x4001401")]
	PORTAMENTO_COARSE = 5,
	[Token(Token = "0x4001402")]
	DATA_ENTRY_COARSE = 6,
	[Token(Token = "0x4001403")]
	VOLUME_COARSE = 7,
	[Token(Token = "0x4001404")]
	BALANCE_COARSE = 8,
	[Token(Token = "0x4001405")]
	CTRL_9_COARSE = 9,
	[Token(Token = "0x4001406")]
	PAN_POSITION_COARSE = 10,
	[Token(Token = "0x4001407")]
	EXPRESSION_COARSE = 11,
	[Token(Token = "0x4001408")]
	EFFECT_CTRL_1_COARSE = 12,
	[Token(Token = "0x4001409")]
	EFFECT_CTRL_2_COARSE = 13,
	[Token(Token = "0x400140A")]
	CTRL_14_COARSE = 14,
	[Token(Token = "0x400140B")]
	CTRL_15_COARSE = 15,
	[Token(Token = "0x400140C")]
	GEN_SLIDER_1 = 16,
	[Token(Token = "0x400140D")]
	GEN_SLIDER_2 = 17,
	[Token(Token = "0x400140E")]
	GEN_SLIDER_3 = 18,
	[Token(Token = "0x400140F")]
	GEN_SLIDER_4 = 19,
	[Token(Token = "0x4001410")]
	CTRL_20_COARSE = 20,
	[Token(Token = "0x4001411")]
	CTRL_21_COARSE = 21,
	[Token(Token = "0x4001412")]
	CTRL_22_COARSE = 22,
	[Token(Token = "0x4001413")]
	CTRL_23_COARSE = 23,
	[Token(Token = "0x4001414")]
	CTRL_24_COARSE = 24,
	[Token(Token = "0x4001415")]
	CTRL_25_COARSE = 25,
	[Token(Token = "0x4001416")]
	CTRL_26_COARSE = 26,
	[Token(Token = "0x4001417")]
	CTRL_27_COARSE = 27,
	[Token(Token = "0x4001418")]
	CTRL_28_COARSE = 28,
	[Token(Token = "0x4001419")]
	CTRL_29_COARSE = 29,
	[Token(Token = "0x400141A")]
	CTRL_30_COARSE = 30,
	[Token(Token = "0x400141B")]
	CTRL_31_COARSE = 31,
	[Token(Token = "0x400141C")]
	BANK_SELECT_FINE = 32,
	[Token(Token = "0x400141D")]
	MOD_WHEEL_FINE = 33,
	[Token(Token = "0x400141E")]
	BREATH_CTRL_FINE = 34,
	[Token(Token = "0x400141F")]
	CTRL_3_FINE = 35,
	[Token(Token = "0x4001420")]
	FOOT_PEDAL_FINE = 36,
	[Token(Token = "0x4001421")]
	PORTAMENTO_FINE = 37,
	[Token(Token = "0x4001422")]
	DATA_ENTRY_FINE = 38,
	[Token(Token = "0x4001423")]
	VOLUME_FINE = 39,
	[Token(Token = "0x4001424")]
	BALANCE_FINE = 40,
	[Token(Token = "0x4001425")]
	CTRL_9_FINE = 41,
	[Token(Token = "0x4001426")]
	PAN_POSITION_FINE = 42,
	[Token(Token = "0x4001427")]
	EXPRESSION_FINE = 43,
	[Token(Token = "0x4001428")]
	EFFECT_CTRL_1_FINE = 44,
	[Token(Token = "0x4001429")]
	EFFECT_CTRL_2_FINE = 45,
	[Token(Token = "0x400142A")]
	CTRL_14_FINE = 46,
	[Token(Token = "0x400142B")]
	CTRL_15_FINE = 47,
	[Token(Token = "0x400142C")]
	CTRL_20_FINE = 52,
	[Token(Token = "0x400142D")]
	CTRL_21_FINE = 53,
	[Token(Token = "0x400142E")]
	CTRL_22_FINE = 54,
	[Token(Token = "0x400142F")]
	CTRL_23_FINE = 55,
	[Token(Token = "0x4001430")]
	CTRL_24_FINE = 56,
	[Token(Token = "0x4001431")]
	CTRL_25_FINE = 57,
	[Token(Token = "0x4001432")]
	CTRL_26_FINE = 58,
	[Token(Token = "0x4001433")]
	CTRL_27_FINE = 59,
	[Token(Token = "0x4001434")]
	CTRL_28_FINE = 60,
	[Token(Token = "0x4001435")]
	CTRL_29_FINE = 61,
	[Token(Token = "0x4001436")]
	CTRL_30_FINE = 62,
	[Token(Token = "0x4001437")]
	CTRL_31_FINE = 63,
	[Token(Token = "0x4001438")]
	HOLD_PEDAL = 64,
	[Token(Token = "0x4001439")]
	PORTAMENTO_ON_OFF = 65,
	[Token(Token = "0x400143A")]
	SUSTENUTO_PEDAL = 66,
	[Token(Token = "0x400143B")]
	SOFT_PEDAL = 67,
	[Token(Token = "0x400143C")]
	LEGATO_PEDAL = 68,
	[Token(Token = "0x400143D")]
	HOLD_PEDAL_2 = 69,
	[Token(Token = "0x400143E")]
	SOUND_VARIATION = 70,
	[Token(Token = "0x400143F")]
	SOUND_TIMBRE = 71,
	[Token(Token = "0x4001440")]
	SOUND_RELEASE_TIME = 72,
	[Token(Token = "0x4001441")]
	SOUND_ATTACK_TIME = 73,
	[Token(Token = "0x4001442")]
	SOUND_BRIGHTNESS = 74,
	[Token(Token = "0x4001443")]
	SOUND_CTRL_6 = 75,
	[Token(Token = "0x4001444")]
	SOUND_CTRL_7 = 76,
	[Token(Token = "0x4001445")]
	SOUND_CTRL_8 = 77,
	[Token(Token = "0x4001446")]
	SOUND_CTRL_9 = 78,
	[Token(Token = "0x4001447")]
	SOUND_CTRL_10 = 79,
	[Token(Token = "0x4001448")]
	GENERAL_BUTTON_1 = 80,
	[Token(Token = "0x4001449")]
	GENERAL_BUTTON_2 = 81,
	[Token(Token = "0x400144A")]
	GENERAL_BUTTON_3 = 82,
	[Token(Token = "0x400144B")]
	GENERAL_BUTTON_4 = 83,
	[Token(Token = "0x400144C")]
	REVERB_LEVEL = 91,
	[Token(Token = "0x400144D")]
	TREMOLO_LEVEL = 92,
	[Token(Token = "0x400144E")]
	CHORUS_LEVEL = 93,
	[Token(Token = "0x400144F")]
	CELESTE_LEVEL = 94,
	[Token(Token = "0x4001450")]
	PHASER_LEVEL = 95,
	[Token(Token = "0x4001451")]
	DATA_BUTTON_P1 = 96,
	[Token(Token = "0x4001452")]
	DATA_BUTTON_M1 = 97,
	[Token(Token = "0x4001453")]
	NON_REGISTER_COARSE = 98,
	[Token(Token = "0x4001454")]
	NON_REGISTER_FINE = 99,
	[Token(Token = "0x4001455")]
	ALL_SOUND_OFF = 120,
	[Token(Token = "0x4001456")]
	ALL_CONTROLLERS_OFF = 121,
	[Token(Token = "0x4001457")]
	LOCAL_KEYBOARD = 122,
	[Token(Token = "0x4001458")]
	ALL_NOTES_OFF = 123,
	[Token(Token = "0x4001459")]
	OMNI_MODE_OFF = 124,
	[Token(Token = "0x400145A")]
	OMNI_MODE_ON = 125,
	[Token(Token = "0x400145B")]
	OMNI_MONOPHONIC_ON = 126,
	[Token(Token = "0x400145C")]
	OMNI_POLYPHONIC_ON = 127
}
[Token(Token = "0x20002FC")]
public class AkMIDIEvent : IDisposable
{
	[Token(Token = "0x2000696")]
	public class tGen : IDisposable
	{
		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x170003A1")]
		public byte byParam1
		{
			[Token(Token = "0x600261B")]
			[Address(RVA = "0x18CFA20", Offset = "0x18CFA20", VA = "0x18CFA20")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x600261A")]
			[Address(RVA = "0x18CF9A4", Offset = "0x18CF9A4", VA = "0x18CF9A4")]
			set
			{
			}
		}

		[Token(Token = "0x170003A2")]
		public byte byParam2
		{
			[Token(Token = "0x600261D")]
			[Address(RVA = "0x18CFB08", Offset = "0x18CFB08", VA = "0x18CFB08")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x600261C")]
			[Address(RVA = "0x18CFA8C", Offset = "0x18CFA8C", VA = "0x18CFA8C")]
			set
			{
			}
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0x18CDA18", Offset = "0x18CDA18", VA = "0x18CDA18")]
		internal tGen(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0x18CD918", Offset = "0x18CD918", VA = "0x18CD918")]
		internal static IntPtr getCPtr(tGen obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0x18CF7C4", Offset = "0x18CF7C4", VA = "0x18CF7C4", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0x18CF7F8", Offset = "0x18CF7F8", VA = "0x18CF7F8", Slot = "1")]
		~tGen()
		{
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0x18CF868", Offset = "0x18CF868", VA = "0x18CF868", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0x18CFB74", Offset = "0x18CFB74", VA = "0x18CFB74")]
		public tGen()
		{
		}
	}

	[Token(Token = "0x2000697")]
	public class tNoteOnOff : IDisposable
	{
		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x170003A3")]
		public byte byNote
		{
			[Token(Token = "0x6002625")]
			[Address(RVA = "0x18D0288", Offset = "0x18D0288", VA = "0x18D0288")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002624")]
			[Address(RVA = "0x18D020C", Offset = "0x18D020C", VA = "0x18D020C")]
			set
			{
			}
		}

		[Token(Token = "0x170003A4")]
		public byte byVelocity
		{
			[Token(Token = "0x6002627")]
			[Address(RVA = "0x18D0370", Offset = "0x18D0370", VA = "0x18D0370")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002626")]
			[Address(RVA = "0x18D02F4", Offset = "0x18D02F4", VA = "0x18D02F4")]
			set
			{
			}
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0x18CDDE8", Offset = "0x18CDDE8", VA = "0x18CDDE8")]
		internal tNoteOnOff(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6002620")]
		[Address(RVA = "0x18CDCE8", Offset = "0x18CDCE8", VA = "0x18CDCE8")]
		internal static IntPtr getCPtr(tNoteOnOff obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002621")]
		[Address(RVA = "0x18D002C", Offset = "0x18D002C", VA = "0x18D002C", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6002622")]
		[Address(RVA = "0x18D0060", Offset = "0x18D0060", VA = "0x18D0060", Slot = "1")]
		~tNoteOnOff()
		{
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0x18D00D0", Offset = "0x18D00D0", VA = "0x18D00D0", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0x18D03DC", Offset = "0x18D03DC", VA = "0x18D03DC")]
		public tNoteOnOff()
		{
		}
	}

	[Token(Token = "0x2000698")]
	public class tCc : IDisposable
	{
		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x170003A5")]
		public byte byCc
		{
			[Token(Token = "0x600262F")]
			[Address(RVA = "0x18CF2A0", Offset = "0x18CF2A0", VA = "0x18CF2A0")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x600262E")]
			[Address(RVA = "0x18CF224", Offset = "0x18CF224", VA = "0x18CF224")]
			set
			{
			}
		}

		[Token(Token = "0x170003A6")]
		public byte byValue
		{
			[Token(Token = "0x6002631")]
			[Address(RVA = "0x18CF388", Offset = "0x18CF388", VA = "0x18CF388")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002630")]
			[Address(RVA = "0x18CF30C", Offset = "0x18CF30C", VA = "0x18CF30C")]
			set
			{
			}
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0x18CDC00", Offset = "0x18CDC00", VA = "0x18CDC00")]
		internal tCc(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0x18CDB00", Offset = "0x18CDB00", VA = "0x18CDB00")]
		internal static IntPtr getCPtr(tCc obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0x18CF044", Offset = "0x18CF044", VA = "0x18CF044", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0x18CF078", Offset = "0x18CF078", VA = "0x18CF078", Slot = "1")]
		~tCc()
		{
		}

		[Token(Token = "0x600262D")]
		[Address(RVA = "0x18CF0E8", Offset = "0x18CF0E8", VA = "0x18CF0E8", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0x18CF3F4", Offset = "0x18CF3F4", VA = "0x18CF3F4")]
		public tCc()
		{
		}
	}

	[Token(Token = "0x2000699")]
	public class tPitchBend : IDisposable
	{
		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x170003A7")]
		public byte byValueLsb
		{
			[Token(Token = "0x6002639")]
			[Address(RVA = "0x18D06BC", Offset = "0x18D06BC", VA = "0x18D06BC")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002638")]
			[Address(RVA = "0x18D0640", Offset = "0x18D0640", VA = "0x18D0640")]
			set
			{
			}
		}

		[Token(Token = "0x170003A8")]
		public byte byValueMsb
		{
			[Token(Token = "0x600263B")]
			[Address(RVA = "0x18D07A4", Offset = "0x18D07A4", VA = "0x18D07A4")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x600263A")]
			[Address(RVA = "0x18D0728", Offset = "0x18D0728", VA = "0x18D0728")]
			set
			{
			}
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0x18CDFD0", Offset = "0x18CDFD0", VA = "0x18CDFD0")]
		internal tPitchBend(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0x18CDED0", Offset = "0x18CDED0", VA = "0x18CDED0")]
		internal static IntPtr getCPtr(tPitchBend obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0x18D0460", Offset = "0x18D0460", VA = "0x18D0460", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0x18D0494", Offset = "0x18D0494", VA = "0x18D0494", Slot = "1")]
		~tPitchBend()
		{
		}

		[Token(Token = "0x6002637")]
		[Address(RVA = "0x18D0504", Offset = "0x18D0504", VA = "0x18D0504", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x600263C")]
		[Address(RVA = "0x18D0810", Offset = "0x18D0810", VA = "0x18D0810")]
		public tPitchBend()
		{
		}
	}

	[Token(Token = "0x200069A")]
	public class tNoteAftertouch : IDisposable
	{
		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x170003A9")]
		public byte byNote
		{
			[Token(Token = "0x6002643")]
			[Address(RVA = "0x18CFE54", Offset = "0x18CFE54", VA = "0x18CFE54")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002642")]
			[Address(RVA = "0x18CFDD8", Offset = "0x18CFDD8", VA = "0x18CFDD8")]
			set
			{
			}
		}

		[Token(Token = "0x170003AA")]
		public byte byValue
		{
			[Token(Token = "0x6002645")]
			[Address(RVA = "0x18CFF3C", Offset = "0x18CFF3C", VA = "0x18CFF3C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002644")]
			[Address(RVA = "0x18CFEC0", Offset = "0x18CFEC0", VA = "0x18CFEC0")]
			set
			{
			}
		}

		[Token(Token = "0x600263D")]
		[Address(RVA = "0x18CE1B8", Offset = "0x18CE1B8", VA = "0x18CE1B8")]
		internal tNoteAftertouch(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x600263E")]
		[Address(RVA = "0x18CE0B8", Offset = "0x18CE0B8", VA = "0x18CE0B8")]
		internal static IntPtr getCPtr(tNoteAftertouch obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600263F")]
		[Address(RVA = "0x18CFBF8", Offset = "0x18CFBF8", VA = "0x18CFBF8", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0x18CFC2C", Offset = "0x18CFC2C", VA = "0x18CFC2C", Slot = "1")]
		~tNoteAftertouch()
		{
		}

		[Token(Token = "0x6002641")]
		[Address(RVA = "0x18CFC9C", Offset = "0x18CFC9C", VA = "0x18CFC9C", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6002646")]
		[Address(RVA = "0x18CFFA8", Offset = "0x18CFFA8", VA = "0x18CFFA8")]
		public tNoteAftertouch()
		{
		}
	}

	[Token(Token = "0x200069B")]
	public class tChanAftertouch : IDisposable
	{
		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x170003AB")]
		public byte byValue
		{
			[Token(Token = "0x600264D")]
			[Address(RVA = "0x18CF6D4", Offset = "0x18CF6D4", VA = "0x18CF6D4")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x600264C")]
			[Address(RVA = "0x18CF658", Offset = "0x18CF658", VA = "0x18CF658")]
			set
			{
			}
		}

		[Token(Token = "0x6002647")]
		[Address(RVA = "0x18CE3A0", Offset = "0x18CE3A0", VA = "0x18CE3A0")]
		internal tChanAftertouch(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0x18CE2A0", Offset = "0x18CE2A0", VA = "0x18CE2A0")]
		internal static IntPtr getCPtr(tChanAftertouch obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0x18CF478", Offset = "0x18CF478", VA = "0x18CF478", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0x18CF4AC", Offset = "0x18CF4AC", VA = "0x18CF4AC", Slot = "1")]
		~tChanAftertouch()
		{
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0x18CF51C", Offset = "0x18CF51C", VA = "0x18CF51C", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x600264E")]
		[Address(RVA = "0x18CF740", Offset = "0x18CF740", VA = "0x18CF740")]
		public tChanAftertouch()
		{
		}
	}

	[Token(Token = "0x200069C")]
	public class tProgramChange : IDisposable
	{
		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x170003AC")]
		public byte byProgramNum
		{
			[Token(Token = "0x6002655")]
			[Address(RVA = "0x18D0AF0", Offset = "0x18D0AF0", VA = "0x18D0AF0")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002654")]
			[Address(RVA = "0x18D0A74", Offset = "0x18D0A74", VA = "0x18D0A74")]
			set
			{
			}
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0x18CE588", Offset = "0x18CE588", VA = "0x18CE588")]
		internal tProgramChange(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0x18CE488", Offset = "0x18CE488", VA = "0x18CE488")]
		internal static IntPtr getCPtr(tProgramChange obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0x18D0894", Offset = "0x18D0894", VA = "0x18D0894", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6002652")]
		[Address(RVA = "0x18D08C8", Offset = "0x18D08C8", VA = "0x18D08C8", Slot = "1")]
		~tProgramChange()
		{
		}

		[Token(Token = "0x6002653")]
		[Address(RVA = "0x18D0938", Offset = "0x18D0938", VA = "0x18D0938", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6002656")]
		[Address(RVA = "0x18D0B5C", Offset = "0x18D0B5C", VA = "0x18D0B5C")]
		public tProgramChange()
		{
		}
	}

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700012A")]
	public byte byChan
	{
		[Token(Token = "0x6001602")]
		[Address(RVA = "0x18CD804", Offset = "0x18CD804", VA = "0x18CD804")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001601")]
		[Address(RVA = "0x18CD788", Offset = "0x18CD788", VA = "0x18CD788")]
		set
		{
		}
	}

	[Token(Token = "0x1700012B")]
	public tGen Gen
	{
		[Token(Token = "0x6001604")]
		[Address(RVA = "0x18CD968", Offset = "0x18CD968", VA = "0x18CD968")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001603")]
		[Address(RVA = "0x18CD870", Offset = "0x18CD870", VA = "0x18CD870")]
		set
		{
		}
	}

	[Token(Token = "0x1700012C")]
	public tCc Cc
	{
		[Token(Token = "0x6001606")]
		[Address(RVA = "0x18CDB50", Offset = "0x18CDB50", VA = "0x18CDB50")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001605")]
		[Address(RVA = "0x18CDA58", Offset = "0x18CDA58", VA = "0x18CDA58")]
		set
		{
		}
	}

	[Token(Token = "0x1700012D")]
	public tNoteOnOff NoteOnOff
	{
		[Token(Token = "0x6001608")]
		[Address(RVA = "0x18CDD38", Offset = "0x18CDD38", VA = "0x18CDD38")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001607")]
		[Address(RVA = "0x18CDC40", Offset = "0x18CDC40", VA = "0x18CDC40")]
		set
		{
		}
	}

	[Token(Token = "0x1700012E")]
	public tPitchBend PitchBend
	{
		[Token(Token = "0x600160A")]
		[Address(RVA = "0x18CDF20", Offset = "0x18CDF20", VA = "0x18CDF20")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001609")]
		[Address(RVA = "0x18CDE28", Offset = "0x18CDE28", VA = "0x18CDE28")]
		set
		{
		}
	}

	[Token(Token = "0x1700012F")]
	public tNoteAftertouch NoteAftertouch
	{
		[Token(Token = "0x600160C")]
		[Address(RVA = "0x18CE108", Offset = "0x18CE108", VA = "0x18CE108")]
		get
		{
			return null;
		}
		[Token(Token = "0x600160B")]
		[Address(RVA = "0x18CE010", Offset = "0x18CE010", VA = "0x18CE010")]
		set
		{
		}
	}

	[Token(Token = "0x17000130")]
	public tChanAftertouch ChanAftertouch
	{
		[Token(Token = "0x600160E")]
		[Address(RVA = "0x18CE2F0", Offset = "0x18CE2F0", VA = "0x18CE2F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600160D")]
		[Address(RVA = "0x18CE1F8", Offset = "0x18CE1F8", VA = "0x18CE1F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000131")]
	public tProgramChange ProgramChange
	{
		[Token(Token = "0x6001610")]
		[Address(RVA = "0x18CE4D8", Offset = "0x18CE4D8", VA = "0x18CE4D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600160F")]
		[Address(RVA = "0x18CE3E0", Offset = "0x18CE3E0", VA = "0x18CE3E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000132")]
	public AkMIDIEventTypes byType
	{
		[Token(Token = "0x6001612")]
		[Address(RVA = "0x18CE644", Offset = "0x18CE644", VA = "0x18CE644")]
		get
		{
			return default(AkMIDIEventTypes);
		}
		[Token(Token = "0x6001611")]
		[Address(RVA = "0x18CE5C8", Offset = "0x18CE5C8", VA = "0x18CE5C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000133")]
	public byte byOnOffNote
	{
		[Token(Token = "0x6001614")]
		[Address(RVA = "0x18CE72C", Offset = "0x18CE72C", VA = "0x18CE72C")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001613")]
		[Address(RVA = "0x18CE6B0", Offset = "0x18CE6B0", VA = "0x18CE6B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000134")]
	public byte byVelocity
	{
		[Token(Token = "0x6001616")]
		[Address(RVA = "0x18CE814", Offset = "0x18CE814", VA = "0x18CE814")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001615")]
		[Address(RVA = "0x18CE798", Offset = "0x18CE798", VA = "0x18CE798")]
		set
		{
		}
	}

	[Token(Token = "0x17000135")]
	public AkMIDICcTypes byCc
	{
		[Token(Token = "0x6001618")]
		[Address(RVA = "0x18CE8FC", Offset = "0x18CE8FC", VA = "0x18CE8FC")]
		get
		{
			return default(AkMIDICcTypes);
		}
		[Token(Token = "0x6001617")]
		[Address(RVA = "0x18CE880", Offset = "0x18CE880", VA = "0x18CE880")]
		set
		{
		}
	}

	[Token(Token = "0x17000136")]
	public byte byCcValue
	{
		[Token(Token = "0x600161A")]
		[Address(RVA = "0x18CE9E4", Offset = "0x18CE9E4", VA = "0x18CE9E4")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001619")]
		[Address(RVA = "0x18CE968", Offset = "0x18CE968", VA = "0x18CE968")]
		set
		{
		}
	}

	[Token(Token = "0x17000137")]
	public byte byValueLsb
	{
		[Token(Token = "0x600161C")]
		[Address(RVA = "0x18CEACC", Offset = "0x18CEACC", VA = "0x18CEACC")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600161B")]
		[Address(RVA = "0x18CEA50", Offset = "0x18CEA50", VA = "0x18CEA50")]
		set
		{
		}
	}

	[Token(Token = "0x17000138")]
	public byte byValueMsb
	{
		[Token(Token = "0x600161E")]
		[Address(RVA = "0x18CEBB4", Offset = "0x18CEBB4", VA = "0x18CEBB4")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600161D")]
		[Address(RVA = "0x18CEB38", Offset = "0x18CEB38", VA = "0x18CEB38")]
		set
		{
		}
	}

	[Token(Token = "0x17000139")]
	public byte byAftertouchNote
	{
		[Token(Token = "0x6001620")]
		[Address(RVA = "0x18CEC9C", Offset = "0x18CEC9C", VA = "0x18CEC9C")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600161F")]
		[Address(RVA = "0x18CEC20", Offset = "0x18CEC20", VA = "0x18CEC20")]
		set
		{
		}
	}

	[Token(Token = "0x1700013A")]
	public byte byNoteAftertouchValue
	{
		[Token(Token = "0x6001622")]
		[Address(RVA = "0x18CED84", Offset = "0x18CED84", VA = "0x18CED84")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001621")]
		[Address(RVA = "0x18CED08", Offset = "0x18CED08", VA = "0x18CED08")]
		set
		{
		}
	}

	[Token(Token = "0x1700013B")]
	public byte byChanAftertouchValue
	{
		[Token(Token = "0x6001624")]
		[Address(RVA = "0x18CEE6C", Offset = "0x18CEE6C", VA = "0x18CEE6C")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001623")]
		[Address(RVA = "0x18CEDF0", Offset = "0x18CEDF0", VA = "0x18CEDF0")]
		set
		{
		}
	}

	[Token(Token = "0x1700013C")]
	public byte byProgramNum
	{
		[Token(Token = "0x6001626")]
		[Address(RVA = "0x18CEF54", Offset = "0x18CEF54", VA = "0x18CEF54")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001625")]
		[Address(RVA = "0x18CEED8", Offset = "0x18CEED8", VA = "0x18CEED8")]
		set
		{
		}
	}

	[Token(Token = "0x60015FC")]
	[Address(RVA = "0x18CD518", Offset = "0x18CD518", VA = "0x18CD518")]
	internal AkMIDIEvent(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60015FD")]
	[Address(RVA = "0x18CD558", Offset = "0x18CD558", VA = "0x18CD558")]
	internal static IntPtr getCPtr(AkMIDIEvent obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60015FE")]
	[Address(RVA = "0x18CD5A8", Offset = "0x18CD5A8", VA = "0x18CD5A8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60015FF")]
	[Address(RVA = "0x18CD5DC", Offset = "0x18CD5DC", VA = "0x18CD5DC", Slot = "1")]
	~AkMIDIEvent()
	{
	}

	[Token(Token = "0x6001600")]
	[Address(RVA = "0x18CD64C", Offset = "0x18CD64C", VA = "0x18CD64C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001627")]
	[Address(RVA = "0x18CEFC0", Offset = "0x18CEFC0", VA = "0x18CEFC0")]
	public AkMIDIEvent()
	{
	}
}
[Token(Token = "0x20002FD")]
public class AkMIDIEventCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x400145F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700013D")]
	public byte byChan
	{
		[Token(Token = "0x600162D")]
		[Address(RVA = "0x18D0EF4", Offset = "0x18D0EF4", VA = "0x18D0EF4")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700013E")]
	public byte byParam1
	{
		[Token(Token = "0x600162E")]
		[Address(RVA = "0x18D0F60", Offset = "0x18D0F60", VA = "0x18D0F60")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700013F")]
	public byte byParam2
	{
		[Token(Token = "0x600162F")]
		[Address(RVA = "0x18D0FCC", Offset = "0x18D0FCC", VA = "0x18D0FCC")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000140")]
	public AkMIDIEventTypes byType
	{
		[Token(Token = "0x6001630")]
		[Address(RVA = "0x18D1038", Offset = "0x18D1038", VA = "0x18D1038")]
		get
		{
			return default(AkMIDIEventTypes);
		}
	}

	[Token(Token = "0x17000141")]
	public byte byOnOffNote
	{
		[Token(Token = "0x6001631")]
		[Address(RVA = "0x18D10A4", Offset = "0x18D10A4", VA = "0x18D10A4")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000142")]
	public byte byVelocity
	{
		[Token(Token = "0x6001632")]
		[Address(RVA = "0x18D1110", Offset = "0x18D1110", VA = "0x18D1110")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000143")]
	public AkMIDICcTypes byCc
	{
		[Token(Token = "0x6001633")]
		[Address(RVA = "0x18D117C", Offset = "0x18D117C", VA = "0x18D117C")]
		get
		{
			return default(AkMIDICcTypes);
		}
	}

	[Token(Token = "0x17000144")]
	public byte byCcValue
	{
		[Token(Token = "0x6001634")]
		[Address(RVA = "0x18D11E8", Offset = "0x18D11E8", VA = "0x18D11E8")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000145")]
	public byte byValueLsb
	{
		[Token(Token = "0x6001635")]
		[Address(RVA = "0x18D1254", Offset = "0x18D1254", VA = "0x18D1254")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000146")]
	public byte byValueMsb
	{
		[Token(Token = "0x6001636")]
		[Address(RVA = "0x18D12C0", Offset = "0x18D12C0", VA = "0x18D12C0")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000147")]
	public byte byAftertouchNote
	{
		[Token(Token = "0x6001637")]
		[Address(RVA = "0x18D132C", Offset = "0x18D132C", VA = "0x18D132C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000148")]
	public byte byNoteAftertouchValue
	{
		[Token(Token = "0x6001638")]
		[Address(RVA = "0x18D1398", Offset = "0x18D1398", VA = "0x18D1398")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000149")]
	public byte byChanAftertouchValue
	{
		[Token(Token = "0x6001639")]
		[Address(RVA = "0x18D1404", Offset = "0x18D1404", VA = "0x18D1404")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700014A")]
	public byte byProgramNum
	{
		[Token(Token = "0x600163A")]
		[Address(RVA = "0x18D1470", Offset = "0x18D1470", VA = "0x18D1470")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x6001628")]
	[Address(RVA = "0x18D0BE0", Offset = "0x18D0BE0", VA = "0x18D0BE0")]
	internal AkMIDIEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001629")]
	[Address(RVA = "0x18D0C70", Offset = "0x18D0C70", VA = "0x18D0C70")]
	internal static IntPtr getCPtr(AkMIDIEventCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600162A")]
	[Address(RVA = "0x18D0CC0", Offset = "0x18D0CC0", VA = "0x18D0CC0", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600162B")]
	[Address(RVA = "0x18D0D48", Offset = "0x18D0D48", VA = "0x18D0D48", Slot = "1")]
	~AkMIDIEventCallbackInfo()
	{
	}

	[Token(Token = "0x600162C")]
	[Address(RVA = "0x18D0DB0", Offset = "0x18D0DB0", VA = "0x18D0DB0", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x600163B")]
	[Address(RVA = "0x18D14DC", Offset = "0x18D14DC", VA = "0x18D14DC")]
	public AkMIDIEventCallbackInfo()
	{
	}
}
[Token(Token = "0x20002FE")]
public enum AkMIDIEventTypes
{
	[Token(Token = "0x4001461")]
	NOTE_OFF = 128,
	[Token(Token = "0x4001462")]
	NOTE_ON = 144,
	[Token(Token = "0x4001463")]
	NOTE_AFTERTOUCH = 160,
	[Token(Token = "0x4001464")]
	CONTROLLER = 176,
	[Token(Token = "0x4001465")]
	PROGRAM_CHANGE = 192,
	[Token(Token = "0x4001466")]
	CHANNEL_AFTERTOUCH = 208,
	[Token(Token = "0x4001467")]
	PITCH_BEND = 224,
	[Token(Token = "0x4001468")]
	SYSEX = 240,
	[Token(Token = "0x4001469")]
	ESCAPE = 247,
	[Token(Token = "0x400146A")]
	META = 255
}
[Token(Token = "0x20002FF")]
public class AkMIDIPost : AkMIDIEvent
{
	[Token(Token = "0x400146B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700014B")]
	public uint uOffset
	{
		[Token(Token = "0x6001642")]
		[Address(RVA = "0x18D18F8", Offset = "0x18D18F8", VA = "0x18D18F8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001641")]
		[Address(RVA = "0x18D187C", Offset = "0x18D187C", VA = "0x18D187C")]
		set
		{
		}
	}

	[Token(Token = "0x600163C")]
	[Address(RVA = "0x18D1550", Offset = "0x18D1550", VA = "0x18D1550")]
	internal AkMIDIPost(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600163D")]
	[Address(RVA = "0x18D15EC", Offset = "0x18D15EC", VA = "0x18D15EC")]
	internal static IntPtr getCPtr(AkMIDIPost obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600163E")]
	[Address(RVA = "0x18D163C", Offset = "0x18D163C", VA = "0x18D163C", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600163F")]
	[Address(RVA = "0x18D16D0", Offset = "0x18D16D0", VA = "0x18D16D0", Slot = "1")]
	~AkMIDIPost()
	{
	}

	[Token(Token = "0x6001640")]
	[Address(RVA = "0x18D1738", Offset = "0x18D1738", VA = "0x18D1738", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001643")]
	[Address(RVA = "0x18D1964", Offset = "0x18D1964", VA = "0x18D1964")]
	public AKRESULT PostOnEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uNumPosts)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001644")]
	[Address(RVA = "0x18D1A38", Offset = "0x18D1A38", VA = "0x18D1A38")]
	public void Clone(AkMIDIPost other)
	{
	}

	[Token(Token = "0x6001645")]
	[Address(RVA = "0x18D1AE0", Offset = "0x18D1AE0", VA = "0x18D1AE0")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001646")]
	[Address(RVA = "0x18D1B40", Offset = "0x18D1B40", VA = "0x18D1B40")]
	public AkMIDIPost()
	{
	}
}
[Token(Token = "0x2000300")]
public class AkMarkerCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x400146C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700014C")]
	public uint uIdentifier
	{
		[Token(Token = "0x600164C")]
		[Address(RVA = "0x18D2474", Offset = "0x18D2474", VA = "0x18D2474")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700014D")]
	public uint uPosition
	{
		[Token(Token = "0x600164D")]
		[Address(RVA = "0x18D24E0", Offset = "0x18D24E0", VA = "0x18D24E0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700014E")]
	public string strLabel
	{
		[Token(Token = "0x600164E")]
		[Address(RVA = "0x18D254C", Offset = "0x18D254C", VA = "0x18D254C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001647")]
	[Address(RVA = "0x18D2160", Offset = "0x18D2160", VA = "0x18D2160")]
	internal AkMarkerCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001648")]
	[Address(RVA = "0x18D21F0", Offset = "0x18D21F0", VA = "0x18D21F0")]
	internal static IntPtr getCPtr(AkMarkerCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001649")]
	[Address(RVA = "0x18D2240", Offset = "0x18D2240", VA = "0x18D2240", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600164A")]
	[Address(RVA = "0x18D22C8", Offset = "0x18D22C8", VA = "0x18D22C8", Slot = "1")]
	~AkMarkerCallbackInfo()
	{
	}

	[Token(Token = "0x600164B")]
	[Address(RVA = "0x18D2330", Offset = "0x18D2330", VA = "0x18D2330", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x600164F")]
	[Address(RVA = "0x18D25EC", Offset = "0x18D25EC", VA = "0x18D25EC")]
	public AkMarkerCallbackInfo()
	{
	}
}
[Token(Token = "0x2000301")]
public class AkMemSettings : IDisposable
{
	[Token(Token = "0x400146D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400146E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700014F")]
	public uint uMaxNumPools
	{
		[Token(Token = "0x6001657")]
		[Address(RVA = "0x18D3168", Offset = "0x18D3168", VA = "0x18D3168")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001656")]
		[Address(RVA = "0x18D30EC", Offset = "0x18D30EC", VA = "0x18D30EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000150")]
	public uint uDebugFlags
	{
		[Token(Token = "0x6001659")]
		[Address(RVA = "0x18D3250", Offset = "0x18D3250", VA = "0x18D3250")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001658")]
		[Address(RVA = "0x18D31D4", Offset = "0x18D31D4", VA = "0x18D31D4")]
		set
		{
		}
	}

	[Token(Token = "0x6001650")]
	[Address(RVA = "0x18CB3CC", Offset = "0x18CB3CC", VA = "0x18CB3CC")]
	internal AkMemSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001651")]
	[Address(RVA = "0x18CB2CC", Offset = "0x18CB2CC", VA = "0x18CB2CC")]
	internal static IntPtr getCPtr(AkMemSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001652")]
	[Address(RVA = "0x18D2E88", Offset = "0x18D2E88", VA = "0x18D2E88", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001653")]
	[Address(RVA = "0x18D2EBC", Offset = "0x18D2EBC", VA = "0x18D2EBC", Slot = "1")]
	~AkMemSettings()
	{
	}

	[Token(Token = "0x6001654")]
	[Address(RVA = "0x18D2F2C", Offset = "0x18D2F2C", VA = "0x18D2F2C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001655")]
	[Address(RVA = "0x18D3068", Offset = "0x18D3068", VA = "0x18D3068")]
	public AkMemSettings()
	{
	}
}
[Token(Token = "0x2000302")]
public enum AkMeteringFlags
{
	[Token(Token = "0x4001470")]
	AK_NoMetering = 0,
	[Token(Token = "0x4001471")]
	AK_EnableBusMeter_Peak = 1,
	[Token(Token = "0x4001472")]
	AK_EnableBusMeter_TruePeak = 2,
	[Token(Token = "0x4001473")]
	AK_EnableBusMeter_RMS = 4,
	[Token(Token = "0x4001474")]
	AK_EnableBusMeter_KPower = 0x10,
	[Token(Token = "0x4001475")]
	AK_EnableBusMeter_3DMeter = 0x20
}
[Token(Token = "0x2000303")]
public enum AkMonitorErrorCode
{
	[Token(Token = "0x4001477")]
	ErrorCode_NoError,
	[Token(Token = "0x4001478")]
	ErrorCode_FileNotFound,
	[Token(Token = "0x4001479")]
	ErrorCode_CannotOpenFile,
	[Token(Token = "0x400147A")]
	ErrorCode_CannotStartStreamNoMemory,
	[Token(Token = "0x400147B")]
	ErrorCode_IODevice,
	[Token(Token = "0x400147C")]
	ErrorCode_IncompatibleIOSettings,
	[Token(Token = "0x400147D")]
	ErrorCode_PluginUnsupportedChannelConfiguration,
	[Token(Token = "0x400147E")]
	ErrorCode_PluginMediaUnavailable,
	[Token(Token = "0x400147F")]
	ErrorCode_PluginInitialisationFailed,
	[Token(Token = "0x4001480")]
	ErrorCode_PluginProcessingFailed,
	[Token(Token = "0x4001481")]
	ErrorCode_PluginExecutionInvalid,
	[Token(Token = "0x4001482")]
	ErrorCode_PluginAllocationFailed,
	[Token(Token = "0x4001483")]
	ErrorCode_VorbisRequireSeekTable,
	[Token(Token = "0x4001484")]
	ErrorCode_VorbisDecodeError,
	[Token(Token = "0x4001485")]
	ErrorCode_AACDecodeError,
	[Token(Token = "0x4001486")]
	ErrorCode_xWMACreateDecoderFailed,
	[Token(Token = "0x4001487")]
	ErrorCode_ATRAC9CreateDecoderFailed,
	[Token(Token = "0x4001488")]
	ErrorCode_ATRAC9CreateDecoderFailedChShortage,
	[Token(Token = "0x4001489")]
	ErrorCode_ATRAC9DecodeFailed,
	[Token(Token = "0x400148A")]
	ErrorCode_ATRAC9ClearContextFailed,
	[Token(Token = "0x400148B")]
	ErrorCode_ATRAC9LoopSectionTooSmall,
	[Token(Token = "0x400148C")]
	ErrorCode_InvalidAudioFileHeader,
	[Token(Token = "0x400148D")]
	ErrorCode_AudioFileHeaderTooLarge,
	[Token(Token = "0x400148E")]
	ErrorCode_FileTooSmall,
	[Token(Token = "0x400148F")]
	ErrorCode_TransitionNotAccurateChannel,
	[Token(Token = "0x4001490")]
	ErrorCode_TransitionNotAccurateStarvation,
	[Token(Token = "0x4001491")]
	ErrorCode_NothingToPlay,
	[Token(Token = "0x4001492")]
	ErrorCode_PlayFailed,
	[Token(Token = "0x4001493")]
	ErrorCode_StingerCouldNotBeScheduled,
	[Token(Token = "0x4001494")]
	ErrorCode_TooLongSegmentLookAhead,
	[Token(Token = "0x4001495")]
	ErrorCode_CannotScheduleMusicSwitch,
	[Token(Token = "0x4001496")]
	ErrorCode_TooManySimultaneousMusicSegments,
	[Token(Token = "0x4001497")]
	ErrorCode_PlaylistStoppedForEditing,
	[Token(Token = "0x4001498")]
	ErrorCode_MusicClipsRescheduledAfterTrackEdit,
	[Token(Token = "0x4001499")]
	ErrorCode_CannotPlaySource_Create,
	[Token(Token = "0x400149A")]
	ErrorCode_CannotPlaySource_VirtualOff,
	[Token(Token = "0x400149B")]
	ErrorCode_CannotPlaySource_TimeSkip,
	[Token(Token = "0x400149C")]
	ErrorCode_CannotPlaySource_InconsistentState,
	[Token(Token = "0x400149D")]
	ErrorCode_MediaNotLoaded,
	[Token(Token = "0x400149E")]
	ErrorCode_VoiceStarving,
	[Token(Token = "0x400149F")]
	ErrorCode_StreamingSourceStarving,
	[Token(Token = "0x40014A0")]
	ErrorCode_XMADecoderSourceStarving,
	[Token(Token = "0x40014A1")]
	ErrorCode_XMADecodingError,
	[Token(Token = "0x40014A2")]
	ErrorCode_InvalidXMAData,
	[Token(Token = "0x40014A3")]
	ErrorCode_PluginNotRegistered,
	[Token(Token = "0x40014A4")]
	ErrorCode_CodecNotRegistered,
	[Token(Token = "0x40014A5")]
	ErrorCode_PluginVersionMismatch,
	[Token(Token = "0x40014A6")]
	ErrorCode_EventIDNotFound,
	[Token(Token = "0x40014A7")]
	ErrorCode_InvalidGroupID,
	[Token(Token = "0x40014A8")]
	ErrorCode_SelectedChildNotAvailable,
	[Token(Token = "0x40014A9")]
	ErrorCode_SelectedNodeNotAvailable,
	[Token(Token = "0x40014AA")]
	ErrorCode_SelectedMediaNotAvailable,
	[Token(Token = "0x40014AB")]
	ErrorCode_NoValidSwitch,
	[Token(Token = "0x40014AC")]
	ErrorCode_SelectedNodeNotAvailablePlay,
	[Token(Token = "0x40014AD")]
	ErrorCode_FeedbackVoiceStarving,
	[Token(Token = "0x40014AE")]
	ErrorCode_BankLoadFailed,
	[Token(Token = "0x40014AF")]
	ErrorCode_BankUnloadFailed,
	[Token(Token = "0x40014B0")]
	ErrorCode_ErrorWhileLoadingBank,
	[Token(Token = "0x40014B1")]
	ErrorCode_InsufficientSpaceToLoadBank,
	[Token(Token = "0x40014B2")]
	ErrorCode_LowerEngineCommandListFull,
	[Token(Token = "0x40014B3")]
	ErrorCode_SeekNoMarker,
	[Token(Token = "0x40014B4")]
	ErrorCode_CannotSeekContinuous,
	[Token(Token = "0x40014B5")]
	ErrorCode_SeekAfterEof,
	[Token(Token = "0x40014B6")]
	ErrorCode_UnknownGameObject,
	[Token(Token = "0x40014B7")]
	ErrorCode_UnknownEmitter,
	[Token(Token = "0x40014B8")]
	ErrorCode_UnknownListener,
	[Token(Token = "0x40014B9")]
	ErrorCode_GameObjectIsNotListener,
	[Token(Token = "0x40014BA")]
	ErrorCode_GameObjectIsNotEmitter,
	[Token(Token = "0x40014BB")]
	ErrorCode_UnknownGameObjectEvent,
	[Token(Token = "0x40014BC")]
	ErrorCode_GameObjectIsNotEmitterEvent,
	[Token(Token = "0x40014BD")]
	ErrorCode_ExternalSourceNotResolved,
	[Token(Token = "0x40014BE")]
	ErrorCode_FileFormatMismatch,
	[Token(Token = "0x40014BF")]
	ErrorCode_CommandQueueFull,
	[Token(Token = "0x40014C0")]
	ErrorCode_CommandTooLarge,
	[Token(Token = "0x40014C1")]
	ErrorCode_XMACreateDecoderLimitReached,
	[Token(Token = "0x40014C2")]
	ErrorCode_XMAStreamBufferTooSmall,
	[Token(Token = "0x40014C3")]
	ErrorCode_ModulatorScopeError_Inst,
	[Token(Token = "0x40014C4")]
	ErrorCode_ModulatorScopeError_Obj,
	[Token(Token = "0x40014C5")]
	ErrorCode_SeekAfterEndOfPlaylist,
	[Token(Token = "0x40014C6")]
	ErrorCode_OpusRequireSeekTable,
	[Token(Token = "0x40014C7")]
	ErrorCode_OpusDecodeError,
	[Token(Token = "0x40014C8")]
	ErrorCode_OpusCreateDecoderFailed,
	[Token(Token = "0x40014C9")]
	ErrorCode_SourcePluginNotFound,
	[Token(Token = "0x40014CA")]
	ErrorCode_VirtualVoiceLimit,
	[Token(Token = "0x40014CB")]
	ErrorCode_AudioDeviceShareSetNotFound,
	[Token(Token = "0x40014CC")]
	ErrorCode_NotEnoughMemoryToStart,
	[Token(Token = "0x40014CD")]
	ErrorCode_UnkownOpusError,
	[Token(Token = "0x40014CE")]
	ErrorCode_AudioDeviceInitFailure,
	[Token(Token = "0x40014CF")]
	ErrorCode_AudioDeviceRemoveFailure,
	[Token(Token = "0x40014D0")]
	ErrorCode_AudioDeviceNotFound,
	[Token(Token = "0x40014D1")]
	ErrorCode_AudioDeviceNotValid,
	[Token(Token = "0x40014D2")]
	Num_ErrorCodes
}
[Token(Token = "0x2000304")]
public enum AkMonitorErrorLevel
{
	[Token(Token = "0x40014D4")]
	ErrorLevel_Message = 1,
	[Token(Token = "0x40014D5")]
	ErrorLevel_Error,
	[Token(Token = "0x40014D6")]
	ErrorLevel_All
}
[Token(Token = "0x2000305")]
public class AkMonitoringCallbackInfo : IDisposable
{
	[Token(Token = "0x40014D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40014D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000151")]
	public AkMonitorErrorCode errorCode
	{
		[Token(Token = "0x600165F")]
		[Address(RVA = "0x18D352C", Offset = "0x18D352C", VA = "0x18D352C")]
		get
		{
			return default(AkMonitorErrorCode);
		}
	}

	[Token(Token = "0x17000152")]
	public AkMonitorErrorLevel errorLevel
	{
		[Token(Token = "0x6001660")]
		[Address(RVA = "0x18D3598", Offset = "0x18D3598", VA = "0x18D3598")]
		get
		{
			return default(AkMonitorErrorLevel);
		}
	}

	[Token(Token = "0x17000153")]
	public uint playingID
	{
		[Token(Token = "0x6001661")]
		[Address(RVA = "0x18D3604", Offset = "0x18D3604", VA = "0x18D3604")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000154")]
	public ulong gameObjID
	{
		[Token(Token = "0x6001662")]
		[Address(RVA = "0x18D3670", Offset = "0x18D3670", VA = "0x18D3670")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000155")]
	public string message
	{
		[Token(Token = "0x6001663")]
		[Address(RVA = "0x18D36DC", Offset = "0x18D36DC", VA = "0x18D36DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600165A")]
	[Address(RVA = "0x18D32BC", Offset = "0x18D32BC", VA = "0x18D32BC")]
	internal AkMonitoringCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600165B")]
	[Address(RVA = "0x18D32FC", Offset = "0x18D32FC", VA = "0x18D32FC")]
	internal static IntPtr getCPtr(AkMonitoringCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600165C")]
	[Address(RVA = "0x18D334C", Offset = "0x18D334C", VA = "0x18D334C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600165D")]
	[Address(RVA = "0x18D3380", Offset = "0x18D3380", VA = "0x18D3380", Slot = "1")]
	~AkMonitoringCallbackInfo()
	{
	}

	[Token(Token = "0x600165E")]
	[Address(RVA = "0x18D33F0", Offset = "0x18D33F0", VA = "0x18D33F0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001664")]
	[Address(RVA = "0x18D377C", Offset = "0x18D377C", VA = "0x18D377C")]
	public AkMonitoringCallbackInfo()
	{
	}
}
[Token(Token = "0x2000306")]
public enum AkMultiPositionType
{
	[Token(Token = "0x40014DA")]
	MultiPositionType_SingleSource,
	[Token(Token = "0x40014DB")]
	MultiPositionType_MultiSources,
	[Token(Token = "0x40014DC")]
	MultiPositionType_MultiDirections
}
[Token(Token = "0x2000307")]
public class AkMusicPlaylistCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x40014DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000156")]
	public uint playlistID
	{
		[Token(Token = "0x600166A")]
		[Address(RVA = "0x18D3B98", Offset = "0x18D3B98", VA = "0x18D3B98")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000157")]
	public uint uNumPlaylistItems
	{
		[Token(Token = "0x600166B")]
		[Address(RVA = "0x18D3C04", Offset = "0x18D3C04", VA = "0x18D3C04")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000158")]
	public uint uPlaylistSelection
	{
		[Token(Token = "0x600166C")]
		[Address(RVA = "0x18D3C70", Offset = "0x18D3C70", VA = "0x18D3C70")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000159")]
	public uint uPlaylistItemDone
	{
		[Token(Token = "0x600166D")]
		[Address(RVA = "0x18D3CDC", Offset = "0x18D3CDC", VA = "0x18D3CDC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x6001665")]
	[Address(RVA = "0x18D3884", Offset = "0x18D3884", VA = "0x18D3884")]
	internal AkMusicPlaylistCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001666")]
	[Address(RVA = "0x18D3914", Offset = "0x18D3914", VA = "0x18D3914")]
	internal static IntPtr getCPtr(AkMusicPlaylistCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001667")]
	[Address(RVA = "0x18D3964", Offset = "0x18D3964", VA = "0x18D3964", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001668")]
	[Address(RVA = "0x18D39EC", Offset = "0x18D39EC", VA = "0x18D39EC", Slot = "1")]
	~AkMusicPlaylistCallbackInfo()
	{
	}

	[Token(Token = "0x6001669")]
	[Address(RVA = "0x18D3A54", Offset = "0x18D3A54", VA = "0x18D3A54", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x600166E")]
	[Address(RVA = "0x18D3D48", Offset = "0x18D3D48", VA = "0x18D3D48")]
	public AkMusicPlaylistCallbackInfo()
	{
	}
}
[Token(Token = "0x2000308")]
public class AkMusicSettings : IDisposable
{
	[Token(Token = "0x40014DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40014DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700015A")]
	public float fStreamingLookAheadRatio
	{
		[Token(Token = "0x6001675")]
		[Address(RVA = "0x18D4018", Offset = "0x18D4018", VA = "0x18D4018")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001674")]
		[Address(RVA = "0x18D3F9C", Offset = "0x18D3F9C", VA = "0x18D3F9C")]
		set
		{
		}
	}

	[Token(Token = "0x600166F")]
	[Address(RVA = "0x18CBB74", Offset = "0x18CBB74", VA = "0x18CBB74")]
	internal AkMusicSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001670")]
	[Address(RVA = "0x18CBA74", Offset = "0x18CBA74", VA = "0x18CBA74")]
	internal static IntPtr getCPtr(AkMusicSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001671")]
	[Address(RVA = "0x18D3DBC", Offset = "0x18D3DBC", VA = "0x18D3DBC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001672")]
	[Address(RVA = "0x18D3DF0", Offset = "0x18D3DF0", VA = "0x18D3DF0", Slot = "1")]
	~AkMusicSettings()
	{
	}

	[Token(Token = "0x6001673")]
	[Address(RVA = "0x18D3E60", Offset = "0x18D3E60", VA = "0x18D3E60", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001676")]
	[Address(RVA = "0x18D4084", Offset = "0x18D4084", VA = "0x18D4084")]
	public AkMusicSettings()
	{
	}
}
[Token(Token = "0x2000309")]
public class AkMusicSyncCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x40014E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700015B")]
	public uint playingID
	{
		[Token(Token = "0x600167C")]
		[Address(RVA = "0x18D4430", Offset = "0x18D4430", VA = "0x18D4430")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700015C")]
	public int segmentInfo_iCurrentPosition
	{
		[Token(Token = "0x600167D")]
		[Address(RVA = "0x18D449C", Offset = "0x18D449C", VA = "0x18D449C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700015D")]
	public int segmentInfo_iPreEntryDuration
	{
		[Token(Token = "0x600167E")]
		[Address(RVA = "0x18D4508", Offset = "0x18D4508", VA = "0x18D4508")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700015E")]
	public int segmentInfo_iActiveDuration
	{
		[Token(Token = "0x600167F")]
		[Address(RVA = "0x18D4574", Offset = "0x18D4574", VA = "0x18D4574")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700015F")]
	public int segmentInfo_iPostExitDuration
	{
		[Token(Token = "0x6001680")]
		[Address(RVA = "0x18D45E0", Offset = "0x18D45E0", VA = "0x18D45E0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000160")]
	public int segmentInfo_iRemainingLookAheadTime
	{
		[Token(Token = "0x6001681")]
		[Address(RVA = "0x18D464C", Offset = "0x18D464C", VA = "0x18D464C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000161")]
	public float segmentInfo_fBeatDuration
	{
		[Token(Token = "0x6001682")]
		[Address(RVA = "0x18D46B8", Offset = "0x18D46B8", VA = "0x18D46B8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000162")]
	public float segmentInfo_fBarDuration
	{
		[Token(Token = "0x6001683")]
		[Address(RVA = "0x18D4724", Offset = "0x18D4724", VA = "0x18D4724")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000163")]
	public float segmentInfo_fGridDuration
	{
		[Token(Token = "0x6001684")]
		[Address(RVA = "0x18D4790", Offset = "0x18D4790", VA = "0x18D4790")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000164")]
	public float segmentInfo_fGridOffset
	{
		[Token(Token = "0x6001685")]
		[Address(RVA = "0x18D47FC", Offset = "0x18D47FC", VA = "0x18D47FC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000165")]
	public AkCallbackType musicSyncType
	{
		[Token(Token = "0x6001686")]
		[Address(RVA = "0x18D4868", Offset = "0x18D4868", VA = "0x18D4868")]
		get
		{
			return default(AkCallbackType);
		}
	}

	[Token(Token = "0x17000166")]
	public string userCueName
	{
		[Token(Token = "0x6001687")]
		[Address(RVA = "0x18D48D4", Offset = "0x18D48D4", VA = "0x18D48D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001677")]
	[Address(RVA = "0x18D4108", Offset = "0x18D4108", VA = "0x18D4108")]
	internal AkMusicSyncCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001678")]
	[Address(RVA = "0x18D419C", Offset = "0x18D419C", VA = "0x18D419C")]
	internal static IntPtr getCPtr(AkMusicSyncCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001679")]
	[Address(RVA = "0x18D41EC", Offset = "0x18D41EC", VA = "0x18D41EC", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600167A")]
	[Address(RVA = "0x18D4278", Offset = "0x18D4278", VA = "0x18D4278", Slot = "1")]
	~AkMusicSyncCallbackInfo()
	{
	}

	[Token(Token = "0x600167B")]
	[Address(RVA = "0x18D42E8", Offset = "0x18D42E8", VA = "0x18D42E8", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001688")]
	[Address(RVA = "0x18D4974", Offset = "0x18D4974", VA = "0x18D4974")]
	public AkMusicSyncCallbackInfo()
	{
	}
}
[Token(Token = "0x200030A")]
public class AkObjectInfo : IDisposable
{
	[Token(Token = "0x40014E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40014E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000167")]
	public uint objID
	{
		[Token(Token = "0x600168F")]
		[Address(RVA = "0x18D4CD4", Offset = "0x18D4CD4", VA = "0x18D4CD4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600168E")]
		[Address(RVA = "0x18D4C58", Offset = "0x18D4C58", VA = "0x18D4C58")]
		set
		{
		}
	}

	[Token(Token = "0x17000168")]
	public uint parentID
	{
		[Token(Token = "0x6001691")]
		[Address(RVA = "0x18D4DBC", Offset = "0x18D4DBC", VA = "0x18D4DBC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001690")]
		[Address(RVA = "0x18D4D40", Offset = "0x18D4D40", VA = "0x18D4D40")]
		set
		{
		}
	}

	[Token(Token = "0x17000169")]
	public int iDepth
	{
		[Token(Token = "0x6001693")]
		[Address(RVA = "0x18D4EA4", Offset = "0x18D4EA4", VA = "0x18D4EA4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001692")]
		[Address(RVA = "0x18D4E28", Offset = "0x18D4E28", VA = "0x18D4E28")]
		set
		{
		}
	}

	[Token(Token = "0x6001689")]
	[Address(RVA = "0x18D49E8", Offset = "0x18D49E8", VA = "0x18D49E8")]
	internal AkObjectInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600168A")]
	[Address(RVA = "0x18D4A28", Offset = "0x18D4A28", VA = "0x18D4A28")]
	internal static IntPtr getCPtr(AkObjectInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600168B")]
	[Address(RVA = "0x18D4A78", Offset = "0x18D4A78", VA = "0x18D4A78", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600168C")]
	[Address(RVA = "0x18D4AAC", Offset = "0x18D4AAC", VA = "0x18D4AAC", Slot = "1")]
	~AkObjectInfo()
	{
	}

	[Token(Token = "0x600168D")]
	[Address(RVA = "0x18D4B1C", Offset = "0x18D4B1C", VA = "0x18D4B1C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001694")]
	[Address(RVA = "0x18D4F10", Offset = "0x18D4F10", VA = "0x18D4F10")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001695")]
	[Address(RVA = "0x18D4F7C", Offset = "0x18D4F7C", VA = "0x18D4F7C")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001696")]
	[Address(RVA = "0x18D4FDC", Offset = "0x18D4FDC", VA = "0x18D4FDC")]
	public void Clone(AkObjectInfo other)
	{
	}

	[Token(Token = "0x6001697")]
	[Address(RVA = "0x18D5084", Offset = "0x18D5084", VA = "0x18D5084")]
	public AkObjectInfo()
	{
	}
}
[Token(Token = "0x200030B")]
public class AkObstructionOcclusionValues : IDisposable
{
	[Token(Token = "0x40014E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40014E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700016A")]
	public float occlusion
	{
		[Token(Token = "0x600169E")]
		[Address(RVA = "0x18D6180", Offset = "0x18D6180", VA = "0x18D6180")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600169D")]
		[Address(RVA = "0x18D6104", Offset = "0x18D6104", VA = "0x18D6104")]
		set
		{
		}
	}

	[Token(Token = "0x1700016B")]
	public float obstruction
	{
		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x18D6268", Offset = "0x18D6268", VA = "0x18D6268")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600169F")]
		[Address(RVA = "0x18D61EC", Offset = "0x18D61EC", VA = "0x18D61EC")]
		set
		{
		}
	}

	[Token(Token = "0x6001698")]
	[Address(RVA = "0x18D5E94", Offset = "0x18D5E94", VA = "0x18D5E94")]
	internal AkObstructionOcclusionValues(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001699")]
	[Address(RVA = "0x18D5ED4", Offset = "0x18D5ED4", VA = "0x18D5ED4")]
	internal static IntPtr getCPtr(AkObstructionOcclusionValues obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600169A")]
	[Address(RVA = "0x18D5F24", Offset = "0x18D5F24", VA = "0x18D5F24", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600169B")]
	[Address(RVA = "0x18D5F58", Offset = "0x18D5F58", VA = "0x18D5F58", Slot = "1")]
	~AkObstructionOcclusionValues()
	{
	}

	[Token(Token = "0x600169C")]
	[Address(RVA = "0x18D5FC8", Offset = "0x18D5FC8", VA = "0x18D5FC8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60016A1")]
	[Address(RVA = "0x18D62D4", Offset = "0x18D62D4", VA = "0x18D62D4")]
	public void Clear()
	{
	}

	[Token(Token = "0x60016A2")]
	[Address(RVA = "0x18D6340", Offset = "0x18D6340", VA = "0x18D6340")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x60016A3")]
	[Address(RVA = "0x18D63A0", Offset = "0x18D63A0", VA = "0x18D63A0")]
	public void Clone(AkObstructionOcclusionValues other)
	{
	}

	[Token(Token = "0x60016A4")]
	[Address(RVA = "0x18D6448", Offset = "0x18D6448", VA = "0x18D6448")]
	public AkObstructionOcclusionValues()
	{
	}
}
[Token(Token = "0x200030C")]
public class AkOutputSettings : IDisposable
{
	[Token(Token = "0x40014E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40014E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700016C")]
	public uint audioDeviceShareset
	{
		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x18D6C98", Offset = "0x18D6C98", VA = "0x18D6C98")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x18D6C1C", Offset = "0x18D6C1C", VA = "0x18D6C1C")]
		set
		{
		}
	}

	[Token(Token = "0x1700016D")]
	public uint idDevice
	{
		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x18D6D80", Offset = "0x18D6D80", VA = "0x18D6D80")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x18D6D04", Offset = "0x18D6D04", VA = "0x18D6D04")]
		set
		{
		}
	}

	[Token(Token = "0x1700016E")]
	public AkPanningRule ePanningRule
	{
		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x18D6E68", Offset = "0x18D6E68", VA = "0x18D6E68")]
		get
		{
			return default(AkPanningRule);
		}
		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x18D6DEC", Offset = "0x18D6DEC", VA = "0x18D6DEC")]
		set
		{
		}
	}

	[Token(Token = "0x1700016F")]
	public AkChannelConfig channelConfig
	{
		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x18D6F64", Offset = "0x18D6F64", VA = "0x18D6F64")]
		get
		{
			return null;
		}
		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x18D6ED4", Offset = "0x18D6ED4", VA = "0x18D6ED4")]
		set
		{
		}
	}

	[Token(Token = "0x60016A5")]
	[Address(RVA = "0x18CA9B0", Offset = "0x18CA9B0", VA = "0x18CA9B0")]
	internal AkOutputSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60016A6")]
	[Address(RVA = "0x18CA8B0", Offset = "0x18CA8B0", VA = "0x18CA8B0")]
	internal static IntPtr getCPtr(AkOutputSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60016A7")]
	[Address(RVA = "0x18D6700", Offset = "0x18D6700", VA = "0x18D6700", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60016A8")]
	[Address(RVA = "0x18D6734", Offset = "0x18D6734", VA = "0x18D6734", Slot = "1")]
	~AkOutputSettings()
	{
	}

	[Token(Token = "0x60016A9")]
	[Address(RVA = "0x18D67A4", Offset = "0x18D67A4", VA = "0x18D67A4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60016AA")]
	[Address(RVA = "0x18D68E0", Offset = "0x18D68E0", VA = "0x18D68E0")]
	public AkOutputSettings()
	{
	}

	[Token(Token = "0x60016AB")]
	[Address(RVA = "0x18D6964", Offset = "0x18D6964", VA = "0x18D6964")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice, AkChannelConfig in_channelConfig, AkPanningRule in_ePanning)
	{
	}

	[Token(Token = "0x60016AC")]
	[Address(RVA = "0x18D6A2C", Offset = "0x18D6A2C", VA = "0x18D6A2C")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice, AkChannelConfig in_channelConfig)
	{
	}

	[Token(Token = "0x60016AD")]
	[Address(RVA = "0x18D6AEC", Offset = "0x18D6AEC", VA = "0x18D6AEC")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice)
	{
	}

	[Token(Token = "0x60016AE")]
	[Address(RVA = "0x18D6B88", Offset = "0x18D6B88", VA = "0x18D6B88")]
	public AkOutputSettings(string in_szDeviceShareSet)
	{
	}
}
[Token(Token = "0x200030D")]
public enum AkPanningRule
{
	[Token(Token = "0x40014E8")]
	AkPanningRule_Speakers,
	[Token(Token = "0x40014E9")]
	AkPanningRule_Headphones
}
[Token(Token = "0x200030E")]
public class AkPathParams : IDisposable
{
	[Token(Token = "0x40014EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40014EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000170")]
	public AkVector listenerPos
	{
		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x18D7314", Offset = "0x18D7314", VA = "0x18D7314")]
		get
		{
			return null;
		}
		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x18D7284", Offset = "0x18D7284", VA = "0x18D7284")]
		set
		{
		}
	}

	[Token(Token = "0x17000171")]
	public AkVector emitterPos
	{
		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x18D7454", Offset = "0x18D7454", VA = "0x18D7454")]
		get
		{
			return null;
		}
		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x18D73C4", Offset = "0x18D73C4", VA = "0x18D73C4")]
		set
		{
		}
	}

	[Token(Token = "0x17000172")]
	public uint numValidPaths
	{
		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x18D7580", Offset = "0x18D7580", VA = "0x18D7580")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x18D7504", Offset = "0x18D7504", VA = "0x18D7504")]
		set
		{
		}
	}

	[Token(Token = "0x60016B7")]
	[Address(RVA = "0x18D7014", Offset = "0x18D7014", VA = "0x18D7014")]
	internal AkPathParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60016B8")]
	[Address(RVA = "0x18D7054", Offset = "0x18D7054", VA = "0x18D7054")]
	internal static IntPtr getCPtr(AkPathParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60016B9")]
	[Address(RVA = "0x18D70A4", Offset = "0x18D70A4", VA = "0x18D70A4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60016BA")]
	[Address(RVA = "0x18D70D8", Offset = "0x18D70D8", VA = "0x18D70D8", Slot = "1")]
	~AkPathParams()
	{
	}

	[Token(Token = "0x60016BB")]
	[Address(RVA = "0x18D7148", Offset = "0x18D7148", VA = "0x18D7148", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60016C2")]
	[Address(RVA = "0x18D75EC", Offset = "0x18D75EC", VA = "0x18D75EC")]
	public AkPathParams()
	{
	}
}
[Token(Token = "0x200030F")]
public class AkPlaylist : AkPlaylistArray
{
	[Token(Token = "0x40014EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x60016C3")]
	[Address(RVA = "0x18D8344", Offset = "0x18D8344", VA = "0x18D8344")]
	internal AkPlaylist(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60016C4")]
	[Address(RVA = "0x18D8420", Offset = "0x18D8420", VA = "0x18D8420")]
	internal static IntPtr getCPtr(AkPlaylist obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60016C5")]
	[Address(RVA = "0x18D8470", Offset = "0x18D8470", VA = "0x18D8470", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60016C6")]
	[Address(RVA = "0x18D8538", Offset = "0x18D8538", VA = "0x18D8538", Slot = "1")]
	~AkPlaylist()
	{
	}

	[Token(Token = "0x60016C7")]
	[Address(RVA = "0x18D8610", Offset = "0x18D8610", VA = "0x18D8610", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x60016C8")]
	[Address(RVA = "0x18D8890", Offset = "0x18D8890", VA = "0x18D8890")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016C9")]
	[Address(RVA = "0x18D8948", Offset = "0x18D8948", VA = "0x18D8948")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo, uint in_cExternals)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016CA")]
	[Address(RVA = "0x18D89E4", Offset = "0x18D89E4", VA = "0x18D89E4")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016CB")]
	[Address(RVA = "0x18D8A78", Offset = "0x18D8A78", VA = "0x18D8A78")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016CC")]
	[Address(RVA = "0x18D8AFC", Offset = "0x18D8AFC", VA = "0x18D8AFC")]
	public AKRESULT Enqueue(uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016CD")]
	[Address(RVA = "0x18D8B78", Offset = "0x18D8B78", VA = "0x18D8B78")]
	public AkPlaylist()
	{
	}
}
[Token(Token = "0x2000310")]
public class AkPlaylistArray : IDisposable
{
	[Token(Token = "0x40014ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40014EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x60016CE")]
	[Address(RVA = "0x18D83E0", Offset = "0x18D83E0", VA = "0x18D83E0")]
	internal AkPlaylistArray(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60016CF")]
	[Address(RVA = "0x18D8BEC", Offset = "0x18D8BEC", VA = "0x18D8BEC")]
	internal static IntPtr getCPtr(AkPlaylistArray obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60016D0")]
	[Address(RVA = "0x18D8504", Offset = "0x18D8504", VA = "0x18D8504", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60016D1")]
	[Address(RVA = "0x18D85A0", Offset = "0x18D85A0", VA = "0x18D85A0", Slot = "1")]
	~AkPlaylistArray()
	{
	}

	[Token(Token = "0x60016D2")]
	[Address(RVA = "0x18D8754", Offset = "0x18D8754", VA = "0x18D8754", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60016D3")]
	[Address(RVA = "0x18D8C3C", Offset = "0x18D8C3C", VA = "0x18D8C3C")]
	public AkPlaylistArray()
	{
	}

	[Token(Token = "0x60016D4")]
	[Address(RVA = "0x18D8CC0", Offset = "0x18D8CC0", VA = "0x18D8CC0")]
	public AkIterator Begin()
	{
		return null;
	}

	[Token(Token = "0x60016D5")]
	[Address(RVA = "0x18D8D64", Offset = "0x18D8D64", VA = "0x18D8D64")]
	public AkIterator End()
	{
		return null;
	}

	[Token(Token = "0x60016D6")]
	[Address(RVA = "0x18D8E08", Offset = "0x18D8E08", VA = "0x18D8E08")]
	public AkIterator FindEx(AkPlaylistItem in_Item)
	{
		return null;
	}

	[Token(Token = "0x60016D7")]
	[Address(RVA = "0x18D8EE8", Offset = "0x18D8EE8", VA = "0x18D8EE8")]
	public AkIterator Erase(AkIterator in_rIter)
	{
		return null;
	}

	[Token(Token = "0x60016D8")]
	[Address(RVA = "0x18D8FC8", Offset = "0x18D8FC8", VA = "0x18D8FC8")]
	public void Erase(uint in_uIndex)
	{
	}

	[Token(Token = "0x60016D9")]
	[Address(RVA = "0x18D9044", Offset = "0x18D9044", VA = "0x18D9044")]
	public AkIterator EraseSwap(AkIterator in_rIter)
	{
		return null;
	}

	[Token(Token = "0x60016DA")]
	[Address(RVA = "0x18D9124", Offset = "0x18D9124", VA = "0x18D9124")]
	public AKRESULT Reserve(uint in_ulReserve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016DB")]
	[Address(RVA = "0x18D91A0", Offset = "0x18D91A0", VA = "0x18D91A0")]
	public uint Reserved()
	{
		return default(uint);
	}

	[Token(Token = "0x60016DC")]
	[Address(RVA = "0x18D920C", Offset = "0x18D920C", VA = "0x18D920C")]
	public void Term()
	{
	}

	[Token(Token = "0x60016DD")]
	[Address(RVA = "0x18D9278", Offset = "0x18D9278", VA = "0x18D9278")]
	public uint Length()
	{
		return default(uint);
	}

	[Token(Token = "0x60016DE")]
	[Address(RVA = "0x18D92E4", Offset = "0x18D92E4", VA = "0x18D92E4")]
	public AkPlaylistItem Data()
	{
		return null;
	}

	[Token(Token = "0x60016DF")]
	[Address(RVA = "0x18D9394", Offset = "0x18D9394", VA = "0x18D9394")]
	public bool IsEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x60016E0")]
	[Address(RVA = "0x18D9400", Offset = "0x18D9400", VA = "0x18D9400")]
	public AkPlaylistItem Exists(AkPlaylistItem in_Item)
	{
		return null;
	}

	[Token(Token = "0x60016E1")]
	[Address(RVA = "0x18D94EC", Offset = "0x18D94EC", VA = "0x18D94EC")]
	public AkPlaylistItem AddLast()
	{
		return null;
	}

	[Token(Token = "0x60016E2")]
	[Address(RVA = "0x18D959C", Offset = "0x18D959C", VA = "0x18D959C")]
	public AkPlaylistItem AddLast(AkPlaylistItem in_rItem)
	{
		return null;
	}

	[Token(Token = "0x60016E3")]
	[Address(RVA = "0x18D9688", Offset = "0x18D9688", VA = "0x18D9688")]
	public AkPlaylistItem Last()
	{
		return null;
	}

	[Token(Token = "0x60016E4")]
	[Address(RVA = "0x18D9728", Offset = "0x18D9728", VA = "0x18D9728")]
	public void RemoveLast()
	{
	}

	[Token(Token = "0x60016E5")]
	[Address(RVA = "0x18D9794", Offset = "0x18D9794", VA = "0x18D9794")]
	public AKRESULT Remove(AkPlaylistItem in_rItem)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016E6")]
	[Address(RVA = "0x18D983C", Offset = "0x18D983C", VA = "0x18D983C")]
	public AKRESULT RemoveSwap(AkPlaylistItem in_rItem)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016E7")]
	[Address(RVA = "0x18D98E4", Offset = "0x18D98E4", VA = "0x18D98E4")]
	public void RemoveAll()
	{
	}

	[Token(Token = "0x60016E8")]
	[Address(RVA = "0x18D9950", Offset = "0x18D9950", VA = "0x18D9950")]
	public AkPlaylistItem ItemAtIndex(uint uiIndex)
	{
		return null;
	}

	[Token(Token = "0x60016E9")]
	[Address(RVA = "0x18D9A00", Offset = "0x18D9A00", VA = "0x18D9A00")]
	public AkPlaylistItem Insert(uint in_uIndex)
	{
		return null;
	}

	[Token(Token = "0x60016EA")]
	[Address(RVA = "0x18D9AC0", Offset = "0x18D9AC0", VA = "0x18D9AC0")]
	public bool GrowArray(uint in_uGrowBy)
	{
		return default(bool);
	}

	[Token(Token = "0x60016EB")]
	[Address(RVA = "0x18D9B3C", Offset = "0x18D9B3C", VA = "0x18D9B3C")]
	public bool GrowArray()
	{
		return default(bool);
	}

	[Token(Token = "0x60016EC")]
	[Address(RVA = "0x18D9BA8", Offset = "0x18D9BA8", VA = "0x18D9BA8")]
	public bool Resize(uint in_uiSize)
	{
		return default(bool);
	}

	[Token(Token = "0x60016ED")]
	[Address(RVA = "0x18D9C24", Offset = "0x18D9C24", VA = "0x18D9C24")]
	public void Transfer(AkPlaylistArray in_rSource)
	{
	}

	[Token(Token = "0x60016EE")]
	[Address(RVA = "0x18D9CCC", Offset = "0x18D9CCC", VA = "0x18D9CCC")]
	public AKRESULT Copy(AkPlaylistArray in_rSource)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x2000311")]
public class AkPlaylistItem : IDisposable
{
	[Token(Token = "0x40014EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40014F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000173")]
	public uint audioNodeID
	{
		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x18DA328", Offset = "0x18DA328", VA = "0x18DA328")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x18DA2AC", Offset = "0x18DA2AC", VA = "0x18DA2AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000174")]
	public int msDelay
	{
		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x18DA410", Offset = "0x18DA410", VA = "0x18DA410")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x18DA394", Offset = "0x18DA394", VA = "0x18DA394")]
		set
		{
		}
	}

	[Token(Token = "0x17000175")]
	public IntPtr pCustomInfo
	{
		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x18DA4F8", Offset = "0x18DA4F8", VA = "0x18DA4F8")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x18DA47C", Offset = "0x18DA47C", VA = "0x18DA47C")]
		set
		{
		}
	}

	[Token(Token = "0x60016EF")]
	[Address(RVA = "0x18CC7F0", Offset = "0x18CC7F0", VA = "0x18CC7F0")]
	internal AkPlaylistItem(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60016F0")]
	[Address(RVA = "0x18CC6F0", Offset = "0x18CC6F0", VA = "0x18CC6F0")]
	internal static IntPtr getCPtr(AkPlaylistItem obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60016F1")]
	[Address(RVA = "0x18D9D74", Offset = "0x18D9D74", VA = "0x18D9D74", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60016F2")]
	[Address(RVA = "0x18D9DA8", Offset = "0x18D9DA8", VA = "0x18D9DA8", Slot = "1")]
	~AkPlaylistItem()
	{
	}

	[Token(Token = "0x60016F3")]
	[Address(RVA = "0x18D9E18", Offset = "0x18D9E18", VA = "0x18D9E18", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60016F4")]
	[Address(RVA = "0x18D9F54", Offset = "0x18D9F54", VA = "0x18D9F54")]
	public AkPlaylistItem()
	{
	}

	[Token(Token = "0x60016F5")]
	[Address(RVA = "0x18D9FD8", Offset = "0x18D9FD8", VA = "0x18D9FD8")]
	public AkPlaylistItem(AkPlaylistItem in_rCopy)
	{
	}

	[Token(Token = "0x60016F6")]
	[Address(RVA = "0x18DA098", Offset = "0x18DA098", VA = "0x18DA098")]
	public AkPlaylistItem Assign(AkPlaylistItem in_rCopy)
	{
		return null;
	}

	[Token(Token = "0x60016F7")]
	[Address(RVA = "0x18DA174", Offset = "0x18DA174", VA = "0x18DA174")]
	public bool IsEqualTo(AkPlaylistItem in_rCopy)
	{
		return default(bool);
	}

	[Token(Token = "0x60016F8")]
	[Address(RVA = "0x18DA21C", Offset = "0x18DA21C", VA = "0x18DA21C")]
	public AKRESULT SetExternalSources(uint in_nExternalSrc, AkExternalSourceInfoArray in_pExternalSrc)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x2000312")]
public enum AkPluginType
{
	[Token(Token = "0x40014F2")]
	AkPluginTypeNone = 0,
	[Token(Token = "0x40014F3")]
	AkPluginTypeCodec = 1,
	[Token(Token = "0x40014F4")]
	AkPluginTypeSource = 2,
	[Token(Token = "0x40014F5")]
	AkPluginTypeEffect = 3,
	[Token(Token = "0x40014F6")]
	AkPluginTypeMixer = 6,
	[Token(Token = "0x40014F7")]
	AkPluginTypeSink = 7,
	[Token(Token = "0x40014F8")]
	AkPluginTypeGlobalExtension = 8,
	[Token(Token = "0x40014F9")]
	AkPluginTypeMask = 15
}
[Token(Token = "0x2000313")]
public class AkPositioningInfo : IDisposable
{
	[Token(Token = "0x40014FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40014FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000176")]
	public float fCenterPct
	{
		[Token(Token = "0x6001705")]
		[Address(RVA = "0x18DADB0", Offset = "0x18DADB0", VA = "0x18DADB0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001704")]
		[Address(RVA = "0x18DAD34", Offset = "0x18DAD34", VA = "0x18DAD34")]
		set
		{
		}
	}

	[Token(Token = "0x17000177")]
	public AkSpeakerPanningType pannerType
	{
		[Token(Token = "0x6001707")]
		[Address(RVA = "0x18DAE98", Offset = "0x18DAE98", VA = "0x18DAE98")]
		get
		{
			return default(AkSpeakerPanningType);
		}
		[Token(Token = "0x6001706")]
		[Address(RVA = "0x18DAE1C", Offset = "0x18DAE1C", VA = "0x18DAE1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000178")]
	public Ak3DPositionType e3dPositioningType
	{
		[Token(Token = "0x6001709")]
		[Address(RVA = "0x18DAF80", Offset = "0x18DAF80", VA = "0x18DAF80")]
		get
		{
			return default(Ak3DPositionType);
		}
		[Token(Token = "0x6001708")]
		[Address(RVA = "0x18DAF04", Offset = "0x18DAF04", VA = "0x18DAF04")]
		set
		{
		}
	}

	[Token(Token = "0x17000179")]
	public bool bHoldEmitterPosAndOrient
	{
		[Token(Token = "0x600170B")]
		[Address(RVA = "0x18DB068", Offset = "0x18DB068", VA = "0x18DB068")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600170A")]
		[Address(RVA = "0x18DAFEC", Offset = "0x18DAFEC", VA = "0x18DAFEC")]
		set
		{
		}
	}

	[Token(Token = "0x1700017A")]
	public Ak3DSpatializationMode e3DSpatializationMode
	{
		[Token(Token = "0x600170D")]
		[Address(RVA = "0x18DB150", Offset = "0x18DB150", VA = "0x18DB150")]
		get
		{
			return default(Ak3DSpatializationMode);
		}
		[Token(Token = "0x600170C")]
		[Address(RVA = "0x18DB0D4", Offset = "0x18DB0D4", VA = "0x18DB0D4")]
		set
		{
		}
	}

	[Token(Token = "0x1700017B")]
	public bool bEnableAttenuation
	{
		[Token(Token = "0x600170F")]
		[Address(RVA = "0x18DB238", Offset = "0x18DB238", VA = "0x18DB238")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600170E")]
		[Address(RVA = "0x18DB1BC", Offset = "0x18DB1BC", VA = "0x18DB1BC")]
		set
		{
		}
	}

	[Token(Token = "0x1700017C")]
	public bool bUseConeAttenuation
	{
		[Token(Token = "0x6001711")]
		[Address(RVA = "0x18DB320", Offset = "0x18DB320", VA = "0x18DB320")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001710")]
		[Address(RVA = "0x18DB2A4", Offset = "0x18DB2A4", VA = "0x18DB2A4")]
		set
		{
		}
	}

	[Token(Token = "0x1700017D")]
	public float fInnerAngle
	{
		[Token(Token = "0x6001713")]
		[Address(RVA = "0x18DB408", Offset = "0x18DB408", VA = "0x18DB408")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001712")]
		[Address(RVA = "0x18DB38C", Offset = "0x18DB38C", VA = "0x18DB38C")]
		set
		{
		}
	}

	[Token(Token = "0x1700017E")]
	public float fOuterAngle
	{
		[Token(Token = "0x6001715")]
		[Address(RVA = "0x18DB4F0", Offset = "0x18DB4F0", VA = "0x18DB4F0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001714")]
		[Address(RVA = "0x18DB474", Offset = "0x18DB474", VA = "0x18DB474")]
		set
		{
		}
	}

	[Token(Token = "0x1700017F")]
	public float fConeMaxAttenuation
	{
		[Token(Token = "0x6001717")]
		[Address(RVA = "0x18DB5D8", Offset = "0x18DB5D8", VA = "0x18DB5D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001716")]
		[Address(RVA = "0x18DB55C", Offset = "0x18DB55C", VA = "0x18DB55C")]
		set
		{
		}
	}

	[Token(Token = "0x17000180")]
	public float LPFCone
	{
		[Token(Token = "0x6001719")]
		[Address(RVA = "0x18DB6C0", Offset = "0x18DB6C0", VA = "0x18DB6C0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001718")]
		[Address(RVA = "0x18DB644", Offset = "0x18DB644", VA = "0x18DB644")]
		set
		{
		}
	}

	[Token(Token = "0x17000181")]
	public float HPFCone
	{
		[Token(Token = "0x600171B")]
		[Address(RVA = "0x18DB7A8", Offset = "0x18DB7A8", VA = "0x18DB7A8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600171A")]
		[Address(RVA = "0x18DB72C", Offset = "0x18DB72C", VA = "0x18DB72C")]
		set
		{
		}
	}

	[Token(Token = "0x17000182")]
	public float fMaxDistance
	{
		[Token(Token = "0x600171D")]
		[Address(RVA = "0x18DB890", Offset = "0x18DB890", VA = "0x18DB890")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600171C")]
		[Address(RVA = "0x18DB814", Offset = "0x18DB814", VA = "0x18DB814")]
		set
		{
		}
	}

	[Token(Token = "0x17000183")]
	public float fVolDryAtMaxDist
	{
		[Token(Token = "0x600171F")]
		[Address(RVA = "0x18DB978", Offset = "0x18DB978", VA = "0x18DB978")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600171E")]
		[Address(RVA = "0x18DB8FC", Offset = "0x18DB8FC", VA = "0x18DB8FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000184")]
	public float fVolAuxGameDefAtMaxDist
	{
		[Token(Token = "0x6001721")]
		[Address(RVA = "0x18DBA60", Offset = "0x18DBA60", VA = "0x18DBA60")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001720")]
		[Address(RVA = "0x18DB9E4", Offset = "0x18DB9E4", VA = "0x18DB9E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000185")]
	public float fVolAuxUserDefAtMaxDist
	{
		[Token(Token = "0x6001723")]
		[Address(RVA = "0x18DBB48", Offset = "0x18DBB48", VA = "0x18DBB48")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001722")]
		[Address(RVA = "0x18DBACC", Offset = "0x18DBACC", VA = "0x18DBACC")]
		set
		{
		}
	}

	[Token(Token = "0x17000186")]
	public float LPFValueAtMaxDist
	{
		[Token(Token = "0x6001725")]
		[Address(RVA = "0x18DBC30", Offset = "0x18DBC30", VA = "0x18DBC30")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001724")]
		[Address(RVA = "0x18DBBB4", Offset = "0x18DBBB4", VA = "0x18DBBB4")]
		set
		{
		}
	}

	[Token(Token = "0x17000187")]
	public float HPFValueAtMaxDist
	{
		[Token(Token = "0x6001727")]
		[Address(RVA = "0x18DBD18", Offset = "0x18DBD18", VA = "0x18DBD18")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001726")]
		[Address(RVA = "0x18DBC9C", Offset = "0x18DBC9C", VA = "0x18DBC9C")]
		set
		{
		}
	}

	[Token(Token = "0x60016FF")]
	[Address(RVA = "0x18DAAC4", Offset = "0x18DAAC4", VA = "0x18DAAC4")]
	internal AkPositioningInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001700")]
	[Address(RVA = "0x18DAB04", Offset = "0x18DAB04", VA = "0x18DAB04")]
	internal static IntPtr getCPtr(AkPositioningInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001701")]
	[Address(RVA = "0x18DAB54", Offset = "0x18DAB54", VA = "0x18DAB54", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001702")]
	[Address(RVA = "0x18DAB88", Offset = "0x18DAB88", VA = "0x18DAB88", Slot = "1")]
	~AkPositioningInfo()
	{
	}

	[Token(Token = "0x6001703")]
	[Address(RVA = "0x18DABF8", Offset = "0x18DABF8", VA = "0x18DABF8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001728")]
	[Address(RVA = "0x18DBD84", Offset = "0x18DBD84", VA = "0x18DBD84")]
	public AkPositioningInfo()
	{
	}
}
[Token(Token = "0x2000314")]
public enum AkPreparationType
{
	[Token(Token = "0x40014FD")]
	Preparation_Load,
	[Token(Token = "0x40014FE")]
	Preparation_Unload,
	[Token(Token = "0x40014FF")]
	Preparation_LoadAndDecode
}
[Token(Token = "0x2000315")]
public enum AkQueryRTPCValue
{
	[Token(Token = "0x4001501")]
	RTPCValue_Default,
	[Token(Token = "0x4001502")]
	RTPCValue_Global,
	[Token(Token = "0x4001503")]
	RTPCValue_GameObject,
	[Token(Token = "0x4001504")]
	RTPCValue_PlayingID,
	[Token(Token = "0x4001505")]
	RTPCValue_Unavailable
}
[Token(Token = "0x2000316")]
public class AkRamp : IDisposable
{
	[Token(Token = "0x4001506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000188")]
	public float fPrev
	{
		[Token(Token = "0x6001731")]
		[Address(RVA = "0xFDE91C", Offset = "0xFDE91C", VA = "0xFDE91C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001730")]
		[Address(RVA = "0xFDE814", Offset = "0xFDE814", VA = "0xFDE814")]
		set
		{
		}
	}

	[Token(Token = "0x17000189")]
	public float fNext
	{
		[Token(Token = "0x6001733")]
		[Address(RVA = "0xFDEB0C", Offset = "0xFDEB0C", VA = "0xFDEB0C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001732")]
		[Address(RVA = "0xFDEA04", Offset = "0xFDEA04", VA = "0xFDEA04")]
		set
		{
		}
	}

	[Token(Token = "0x6001729")]
	[Address(RVA = "0xFDE30C", Offset = "0xFDE30C", VA = "0xFDE30C")]
	internal AkRamp(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600172A")]
	[Address(RVA = "0xFDE34C", Offset = "0xFDE34C", VA = "0xFDE34C")]
	internal static IntPtr getCPtr(AkRamp obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600172B")]
	[Address(RVA = "0xFDE39C", Offset = "0xFDE39C", VA = "0xFDE39C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600172C")]
	[Address(RVA = "0xFDE3D0", Offset = "0xFDE3D0", VA = "0xFDE3D0", Slot = "1")]
	~AkRamp()
	{
	}

	[Token(Token = "0x600172D")]
	[Address(RVA = "0xFDE440", Offset = "0xFDE440", VA = "0xFDE440", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600172E")]
	[Address(RVA = "0xFDE5F8", Offset = "0xFDE5F8", VA = "0xFDE5F8")]
	public AkRamp()
	{
	}

	[Token(Token = "0x600172F")]
	[Address(RVA = "0xFDE6EC", Offset = "0xFDE6EC", VA = "0xFDE6EC")]
	public AkRamp(float in_fPrev, float in_fNext)
	{
	}
}
[Token(Token = "0x2000317")]
public class AkReflectionPathInfo : IDisposable
{
	[Token(Token = "0x4001508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700018A")]
	public AkVector imageSource
	{
		[Token(Token = "0x600173A")]
		[Address(RVA = "0xFDEFFC", Offset = "0xFDEFFC", VA = "0xFDEFFC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001739")]
		[Address(RVA = "0xFDEEE0", Offset = "0xFDEEE0", VA = "0xFDEEE0")]
		set
		{
		}
	}

	[Token(Token = "0x1700018B")]
	public uint numPathPoints
	{
		[Token(Token = "0x600173C")]
		[Address(RVA = "0xFDF230", Offset = "0xFDF230", VA = "0xFDF230")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600173B")]
		[Address(RVA = "0xFDF128", Offset = "0xFDF128", VA = "0xFDF128")]
		set
		{
		}
	}

	[Token(Token = "0x1700018C")]
	public uint numReflections
	{
		[Token(Token = "0x600173E")]
		[Address(RVA = "0xFDF420", Offset = "0xFDF420", VA = "0xFDF420")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600173D")]
		[Address(RVA = "0xFDF318", Offset = "0xFDF318", VA = "0xFDF318")]
		set
		{
		}
	}

	[Token(Token = "0x1700018D")]
	public float level
	{
		[Token(Token = "0x6001740")]
		[Address(RVA = "0xFDF610", Offset = "0xFDF610", VA = "0xFDF610")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600173F")]
		[Address(RVA = "0xFDF508", Offset = "0xFDF508", VA = "0xFDF508")]
		set
		{
		}
	}

	[Token(Token = "0x1700018E")]
	public bool isOccluded
	{
		[Token(Token = "0x6001742")]
		[Address(RVA = "0xFDF800", Offset = "0xFDF800", VA = "0xFDF800")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001741")]
		[Address(RVA = "0xFDF6F8", Offset = "0xFDF6F8", VA = "0xFDF6F8")]
		set
		{
		}
	}

	[Token(Token = "0x6001734")]
	[Address(RVA = "0xFDEBF4", Offset = "0xFDEBF4", VA = "0xFDEBF4")]
	internal AkReflectionPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001735")]
	[Address(RVA = "0xFDEC34", Offset = "0xFDEC34", VA = "0xFDEC34")]
	internal static IntPtr getCPtr(AkReflectionPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001736")]
	[Address(RVA = "0xFDEC84", Offset = "0xFDEC84", VA = "0xFDEC84", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001737")]
	[Address(RVA = "0xFDECB8", Offset = "0xFDECB8", VA = "0xFDECB8", Slot = "1")]
	~AkReflectionPathInfo()
	{
	}

	[Token(Token = "0x6001738")]
	[Address(RVA = "0xFDED28", Offset = "0xFDED28", VA = "0xFDED28", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001743")]
	[Address(RVA = "0xFDF8F0", Offset = "0xFDF8F0", VA = "0xFDF8F0")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001744")]
	[Address(RVA = "0xFDF9C0", Offset = "0xFDF9C0", VA = "0xFDF9C0")]
	public AkVector GetPathPoint(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6001745")]
	[Address(RVA = "0xFDFB0C", Offset = "0xFDFB0C", VA = "0xFDFB0C")]
	public AkAcousticSurface GetAcousticSurface(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6001746")]
	[Address(RVA = "0xFDFC48", Offset = "0xFDFC48", VA = "0xFDFC48")]
	public float GetDiffraction(uint idx)
	{
		return default(float);
	}

	[Token(Token = "0x6001747")]
	[Address(RVA = "0xFDFD50", Offset = "0xFDFD50", VA = "0xFDFD50")]
	public void Clone(AkReflectionPathInfo other)
	{
	}

	[Token(Token = "0x6001748")]
	[Address(RVA = "0xFDFE84", Offset = "0xFDFE84", VA = "0xFDFE84")]
	public AkReflectionPathInfo()
	{
	}
}
[Token(Token = "0x2000318")]
public class AkRoomParams : IDisposable
{
	[Token(Token = "0x400150A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400150B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700018F")]
	public AkVector Up
	{
		[Token(Token = "0x6001750")]
		[Address(RVA = "0xFE0640", Offset = "0xFE0640", VA = "0xFE0640")]
		get
		{
			return null;
		}
		[Token(Token = "0x600174F")]
		[Address(RVA = "0xFE1988", Offset = "0xFE1988", VA = "0xFE1988")]
		set
		{
		}
	}

	[Token(Token = "0x17000190")]
	public AkVector Front
	{
		[Token(Token = "0x6001752")]
		[Address(RVA = "0xFE06EC", Offset = "0xFE06EC", VA = "0xFE06EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001751")]
		[Address(RVA = "0xFE1B24", Offset = "0xFE1B24", VA = "0xFE1B24")]
		set
		{
		}
	}

	[Token(Token = "0x17000191")]
	public uint ReverbAuxBus
	{
		[Token(Token = "0x6001754")]
		[Address(RVA = "0xFE1D50", Offset = "0xFE1D50", VA = "0xFE1D50")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001753")]
		[Address(RVA = "0xFE0798", Offset = "0xFE0798", VA = "0xFE0798")]
		set
		{
		}
	}

	[Token(Token = "0x17000192")]
	public float ReverbLevel
	{
		[Token(Token = "0x6001756")]
		[Address(RVA = "0xFE1EC8", Offset = "0xFE1EC8", VA = "0xFE1EC8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001755")]
		[Address(RVA = "0xFE0810", Offset = "0xFE0810", VA = "0xFE0810")]
		set
		{
		}
	}

	[Token(Token = "0x17000193")]
	public float WallOcclusion
	{
		[Token(Token = "0x6001758")]
		[Address(RVA = "0xFE2040", Offset = "0xFE2040", VA = "0xFE2040")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001757")]
		[Address(RVA = "0xFE0888", Offset = "0xFE0888", VA = "0xFE0888")]
		set
		{
		}
	}

	[Token(Token = "0x17000194")]
	public float RoomGameObj_AuxSendLevelToSelf
	{
		[Token(Token = "0x600175A")]
		[Address(RVA = "0xFE21B8", Offset = "0xFE21B8", VA = "0xFE21B8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001759")]
		[Address(RVA = "0xFE0900", Offset = "0xFE0900", VA = "0xFE0900")]
		set
		{
		}
	}

	[Token(Token = "0x17000195")]
	public bool RoomGameObj_KeepRegistered
	{
		[Token(Token = "0x600175C")]
		[Address(RVA = "0xFE2330", Offset = "0xFE2330", VA = "0xFE2330")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600175B")]
		[Address(RVA = "0xFE0978", Offset = "0xFE0978", VA = "0xFE0978")]
		set
		{
		}
	}

	[Token(Token = "0x6001749")]
	[Address(RVA = "0xFE1628", Offset = "0xFE1628", VA = "0xFE1628")]
	internal AkRoomParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600174A")]
	[Address(RVA = "0xFE1668", Offset = "0xFE1668", VA = "0xFE1668")]
	internal static IntPtr getCPtr(AkRoomParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600174B")]
	[Address(RVA = "0xFE16B8", Offset = "0xFE16B8", VA = "0xFE16B8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600174C")]
	[Address(RVA = "0xFE16EC", Offset = "0xFE16EC", VA = "0xFE16EC", Slot = "1")]
	~AkRoomParams()
	{
	}

	[Token(Token = "0x600174D")]
	[Address(RVA = "0xFE175C", Offset = "0xFE175C", VA = "0xFE175C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600174E")]
	[Address(RVA = "0xFE05C0", Offset = "0xFE05C0", VA = "0xFE05C0")]
	public AkRoomParams()
	{
	}
}
[Token(Token = "0x2000319")]
public class AkSegmentInfo : IDisposable
{
	[Token(Token = "0x400150C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400150D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000196")]
	public int iCurrentPosition
	{
		[Token(Token = "0x6001763")]
		[Address(RVA = "0xFE421C", Offset = "0xFE421C", VA = "0xFE421C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001762")]
		[Address(RVA = "0xFE4114", Offset = "0xFE4114", VA = "0xFE4114")]
		set
		{
		}
	}

	[Token(Token = "0x17000197")]
	public int iPreEntryDuration
	{
		[Token(Token = "0x6001765")]
		[Address(RVA = "0xFE440C", Offset = "0xFE440C", VA = "0xFE440C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001764")]
		[Address(RVA = "0xFE4304", Offset = "0xFE4304", VA = "0xFE4304")]
		set
		{
		}
	}

	[Token(Token = "0x17000198")]
	public int iActiveDuration
	{
		[Token(Token = "0x6001767")]
		[Address(RVA = "0xFE45FC", Offset = "0xFE45FC", VA = "0xFE45FC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001766")]
		[Address(RVA = "0xFE44F4", Offset = "0xFE44F4", VA = "0xFE44F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000199")]
	public int iPostExitDuration
	{
		[Token(Token = "0x6001769")]
		[Address(RVA = "0xFE47EC", Offset = "0xFE47EC", VA = "0xFE47EC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001768")]
		[Address(RVA = "0xFE46E4", Offset = "0xFE46E4", VA = "0xFE46E4")]
		set
		{
		}
	}

	[Token(Token = "0x1700019A")]
	public int iRemainingLookAheadTime
	{
		[Token(Token = "0x600176B")]
		[Address(RVA = "0xFE49DC", Offset = "0xFE49DC", VA = "0xFE49DC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600176A")]
		[Address(RVA = "0xFE48D4", Offset = "0xFE48D4", VA = "0xFE48D4")]
		set
		{
		}
	}

	[Token(Token = "0x1700019B")]
	public float fBeatDuration
	{
		[Token(Token = "0x600176D")]
		[Address(RVA = "0xFE4BCC", Offset = "0xFE4BCC", VA = "0xFE4BCC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600176C")]
		[Address(RVA = "0xFE4AC4", Offset = "0xFE4AC4", VA = "0xFE4AC4")]
		set
		{
		}
	}

	[Token(Token = "0x1700019C")]
	public float fBarDuration
	{
		[Token(Token = "0x600176F")]
		[Address(RVA = "0xFE4DBC", Offset = "0xFE4DBC", VA = "0xFE4DBC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600176E")]
		[Address(RVA = "0xFE4CB4", Offset = "0xFE4CB4", VA = "0xFE4CB4")]
		set
		{
		}
	}

	[Token(Token = "0x1700019D")]
	public float fGridDuration
	{
		[Token(Token = "0x6001771")]
		[Address(RVA = "0xFE4FAC", Offset = "0xFE4FAC", VA = "0xFE4FAC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001770")]
		[Address(RVA = "0xFE4EA4", Offset = "0xFE4EA4", VA = "0xFE4EA4")]
		set
		{
		}
	}

	[Token(Token = "0x1700019E")]
	public float fGridOffset
	{
		[Token(Token = "0x6001773")]
		[Address(RVA = "0xFE519C", Offset = "0xFE519C", VA = "0xFE519C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001772")]
		[Address(RVA = "0xFE5094", Offset = "0xFE5094", VA = "0xFE5094")]
		set
		{
		}
	}

	[Token(Token = "0x600175D")]
	[Address(RVA = "0xFE3E28", Offset = "0xFE3E28", VA = "0xFE3E28")]
	internal AkSegmentInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600175E")]
	[Address(RVA = "0xFE3E68", Offset = "0xFE3E68", VA = "0xFE3E68")]
	internal static IntPtr getCPtr(AkSegmentInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600175F")]
	[Address(RVA = "0xFE3EB8", Offset = "0xFE3EB8", VA = "0xFE3EB8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001760")]
	[Address(RVA = "0xFE3EEC", Offset = "0xFE3EEC", VA = "0xFE3EEC", Slot = "1")]
	~AkSegmentInfo()
	{
	}

	[Token(Token = "0x6001761")]
	[Address(RVA = "0xFE3F5C", Offset = "0xFE3F5C", VA = "0xFE3F5C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001774")]
	[Address(RVA = "0xFE5284", Offset = "0xFE5284", VA = "0xFE5284")]
	public AkSegmentInfo()
	{
	}
}
[Token(Token = "0x200031A")]
public class AkSerializedCallbackHeader : IDisposable
{
	[Token(Token = "0x400150E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400150F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700019F")]
	public IntPtr pPackage
	{
		[Token(Token = "0x600177A")]
		[Address(RVA = "0xFE5664", Offset = "0xFE5664", VA = "0xFE5664")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170001A0")]
	public AkSerializedCallbackHeader pNext
	{
		[Token(Token = "0x600177B")]
		[Address(RVA = "0xFE574C", Offset = "0xFE574C", VA = "0xFE574C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A1")]
	public AkCallbackType eType
	{
		[Token(Token = "0x600177C")]
		[Address(RVA = "0xFE5878", Offset = "0xFE5878", VA = "0xFE5878")]
		get
		{
			return default(AkCallbackType);
		}
	}

	[Token(Token = "0x6001775")]
	[Address(RVA = "0xFE5378", Offset = "0xFE5378", VA = "0xFE5378")]
	internal AkSerializedCallbackHeader(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001776")]
	[Address(RVA = "0xFE53B8", Offset = "0xFE53B8", VA = "0xFE53B8")]
	internal static IntPtr getCPtr(AkSerializedCallbackHeader obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001777")]
	[Address(RVA = "0xFE5408", Offset = "0xFE5408", VA = "0xFE5408", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001778")]
	[Address(RVA = "0xFE543C", Offset = "0xFE543C", VA = "0xFE543C", Slot = "1")]
	~AkSerializedCallbackHeader()
	{
	}

	[Token(Token = "0x6001779")]
	[Address(RVA = "0xFE54AC", Offset = "0xFE54AC", VA = "0xFE54AC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600177D")]
	[Address(RVA = "0xFE5960", Offset = "0xFE5960", VA = "0xFE5960")]
	public IntPtr GetData()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600177E")]
	[Address(RVA = "0xFE5A48", Offset = "0xFE5A48", VA = "0xFE5A48")]
	public AkSerializedCallbackHeader()
	{
	}
}
[Token(Token = "0x200031B")]
public enum AkSourceChannelOrdering
{
	[Token(Token = "0x4001511")]
	SourceChannelOrdering_Standard,
	[Token(Token = "0x4001512")]
	SourceChannelOrdering_Film,
	[Token(Token = "0x4001513")]
	SourceChannelOrdering_FuMa
}
[Token(Token = "0x200031C")]
public class AkSourceSettings : IDisposable
{
	[Token(Token = "0x4001514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001A2")]
	public uint sourceID
	{
		[Token(Token = "0x6001785")]
		[Address(RVA = "0x110FBF8", Offset = "0x110FBF8", VA = "0x110FBF8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001784")]
		[Address(RVA = "0x110FB7C", Offset = "0x110FB7C", VA = "0x110FB7C")]
		set
		{
		}
	}

	[Token(Token = "0x170001A3")]
	public IntPtr pMediaMemory
	{
		[Token(Token = "0x6001787")]
		[Address(RVA = "0x110FCE0", Offset = "0x110FCE0", VA = "0x110FCE0")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6001786")]
		[Address(RVA = "0x110FC64", Offset = "0x110FC64", VA = "0x110FC64")]
		set
		{
		}
	}

	[Token(Token = "0x170001A4")]
	public uint uMediaSize
	{
		[Token(Token = "0x6001789")]
		[Address(RVA = "0x110FDC8", Offset = "0x110FDC8", VA = "0x110FDC8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001788")]
		[Address(RVA = "0x110FD4C", Offset = "0x110FD4C", VA = "0x110FD4C")]
		set
		{
		}
	}

	[Token(Token = "0x600177F")]
	[Address(RVA = "0x110F90C", Offset = "0x110F90C", VA = "0x110F90C")]
	internal AkSourceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001780")]
	[Address(RVA = "0x110F94C", Offset = "0x110F94C", VA = "0x110F94C")]
	internal static IntPtr getCPtr(AkSourceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001781")]
	[Address(RVA = "0x110F99C", Offset = "0x110F99C", VA = "0x110F99C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001782")]
	[Address(RVA = "0x110F9D0", Offset = "0x110F9D0", VA = "0x110F9D0", Slot = "1")]
	~AkSourceSettings()
	{
	}

	[Token(Token = "0x6001783")]
	[Address(RVA = "0x110FA40", Offset = "0x110FA40", VA = "0x110FA40", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600178A")]
	[Address(RVA = "0x110FE34", Offset = "0x110FE34", VA = "0x110FE34")]
	public void Clear()
	{
	}

	[Token(Token = "0x600178B")]
	[Address(RVA = "0x110FEA0", Offset = "0x110FEA0", VA = "0x110FEA0")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x600178C")]
	[Address(RVA = "0x110FF00", Offset = "0x110FF00", VA = "0x110FF00")]
	public void Clone(AkSourceSettings other)
	{
	}

	[Token(Token = "0x600178D")]
	[Address(RVA = "0x110FFA8", Offset = "0x110FFA8", VA = "0x110FFA8")]
	public AkSourceSettings()
	{
	}
}
[Token(Token = "0x200031D")]
public class AkSpatialAudioInitSettings : IDisposable
{
	[Token(Token = "0x4001516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001A5")]
	public int uPoolID
	{
		[Token(Token = "0x6001795")]
		[Address(RVA = "0x1110AFC", Offset = "0x1110AFC", VA = "0x1110AFC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001794")]
		[Address(RVA = "0x1110A80", Offset = "0x1110A80", VA = "0x1110A80")]
		set
		{
		}
	}

	[Token(Token = "0x170001A6")]
	public uint uPoolSize
	{
		[Token(Token = "0x6001797")]
		[Address(RVA = "0x1110BE4", Offset = "0x1110BE4", VA = "0x1110BE4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001796")]
		[Address(RVA = "0x1110B68", Offset = "0x1110B68", VA = "0x1110B68")]
		set
		{
		}
	}

	[Token(Token = "0x170001A7")]
	public uint uMaxSoundPropagationDepth
	{
		[Token(Token = "0x6001799")]
		[Address(RVA = "0x1110CCC", Offset = "0x1110CCC", VA = "0x1110CCC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001798")]
		[Address(RVA = "0x1110C50", Offset = "0x1110C50", VA = "0x1110C50")]
		set
		{
		}
	}

	[Token(Token = "0x170001A8")]
	public uint uDiffractionFlags
	{
		[Token(Token = "0x600179B")]
		[Address(RVA = "0x1110DB4", Offset = "0x1110DB4", VA = "0x1110DB4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600179A")]
		[Address(RVA = "0x1110D38", Offset = "0x1110D38", VA = "0x1110D38")]
		set
		{
		}
	}

	[Token(Token = "0x170001A9")]
	public float fDiffractionShadowAttenFactor
	{
		[Token(Token = "0x600179D")]
		[Address(RVA = "0x1110E9C", Offset = "0x1110E9C", VA = "0x1110E9C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600179C")]
		[Address(RVA = "0x1110E20", Offset = "0x1110E20", VA = "0x1110E20")]
		set
		{
		}
	}

	[Token(Token = "0x170001AA")]
	public float fDiffractionShadowDegrees
	{
		[Token(Token = "0x600179F")]
		[Address(RVA = "0x1110F84", Offset = "0x1110F84", VA = "0x1110F84")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600179E")]
		[Address(RVA = "0x1110F08", Offset = "0x1110F08", VA = "0x1110F08")]
		set
		{
		}
	}

	[Token(Token = "0x170001AB")]
	public float fMovementThreshold
	{
		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x111106C", Offset = "0x111106C", VA = "0x111106C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x1110FF0", Offset = "0x1110FF0", VA = "0x1110FF0")]
		set
		{
		}
	}

	[Token(Token = "0x600178E")]
	[Address(RVA = "0x111078C", Offset = "0x111078C", VA = "0x111078C")]
	internal AkSpatialAudioInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600178F")]
	[Address(RVA = "0x11107CC", Offset = "0x11107CC", VA = "0x11107CC")]
	internal static IntPtr getCPtr(AkSpatialAudioInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001790")]
	[Address(RVA = "0x111081C", Offset = "0x111081C", VA = "0x111081C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001791")]
	[Address(RVA = "0x1110850", Offset = "0x1110850", VA = "0x1110850", Slot = "1")]
	~AkSpatialAudioInitSettings()
	{
	}

	[Token(Token = "0x6001792")]
	[Address(RVA = "0x11108C0", Offset = "0x11108C0", VA = "0x11108C0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001793")]
	[Address(RVA = "0x11109FC", Offset = "0x11109FC", VA = "0x11109FC")]
	public AkSpatialAudioInitSettings()
	{
	}
}
[Token(Token = "0x200031E")]
public enum AkSpeakerPanningType
{
	[Token(Token = "0x4001519")]
	AK_DirectSpeakerAssignment,
	[Token(Token = "0x400151A")]
	AK_BalanceFadeHeight
}
[Token(Token = "0x200031F")]
public class AkStreamMgrSettings : IDisposable
{
	[Token(Token = "0x400151B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400151C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001AC")]
	public uint uMemorySize
	{
		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x1111E20", Offset = "0x1111E20", VA = "0x1111E20")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x1111DA4", Offset = "0x1111DA4", VA = "0x1111DA4")]
		set
		{
		}
	}

	[Token(Token = "0x60017A2")]
	[Address(RVA = "0x1111B34", Offset = "0x1111B34", VA = "0x1111B34")]
	internal AkStreamMgrSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60017A3")]
	[Address(RVA = "0x1111B74", Offset = "0x1111B74", VA = "0x1111B74")]
	internal static IntPtr getCPtr(AkStreamMgrSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60017A4")]
	[Address(RVA = "0x1111BC4", Offset = "0x1111BC4", VA = "0x1111BC4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60017A5")]
	[Address(RVA = "0x1111BF8", Offset = "0x1111BF8", VA = "0x1111BF8", Slot = "1")]
	~AkStreamMgrSettings()
	{
	}

	[Token(Token = "0x60017A6")]
	[Address(RVA = "0x1111C68", Offset = "0x1111C68", VA = "0x1111C68", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60017A9")]
	[Address(RVA = "0x1111E8C", Offset = "0x1111E8C", VA = "0x1111E8C")]
	public AkStreamMgrSettings()
	{
	}
}
[Token(Token = "0x2000320")]
public class AkTaskContext : IDisposable
{
	[Token(Token = "0x400151D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400151E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001AD")]
	public uint uIdxThread
	{
		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x11137C8", Offset = "0x11137C8", VA = "0x11137C8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x111374C", Offset = "0x111374C", VA = "0x111374C")]
		set
		{
		}
	}

	[Token(Token = "0x60017AA")]
	[Address(RVA = "0x11134DC", Offset = "0x11134DC", VA = "0x11134DC")]
	internal AkTaskContext(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60017AB")]
	[Address(RVA = "0x111351C", Offset = "0x111351C", VA = "0x111351C")]
	internal static IntPtr getCPtr(AkTaskContext obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60017AC")]
	[Address(RVA = "0x111356C", Offset = "0x111356C", VA = "0x111356C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60017AD")]
	[Address(RVA = "0x11135A0", Offset = "0x11135A0", VA = "0x11135A0", Slot = "1")]
	~AkTaskContext()
	{
	}

	[Token(Token = "0x60017AE")]
	[Address(RVA = "0x1113610", Offset = "0x1113610", VA = "0x1113610", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60017B1")]
	[Address(RVA = "0x1113834", Offset = "0x1113834", VA = "0x1113834")]
	public AkTaskContext()
	{
	}
}
[Token(Token = "0x2000321")]
public class AkTransform : IDisposable
{
	[Token(Token = "0x400151F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x60017B2")]
	[Address(RVA = "0x1113F54", Offset = "0x1113F54", VA = "0x1113F54")]
	internal AkTransform(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60017B3")]
	[Address(RVA = "0x1113F94", Offset = "0x1113F94", VA = "0x1113F94")]
	internal static IntPtr getCPtr(AkTransform obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60017B4")]
	[Address(RVA = "0x1113FE4", Offset = "0x1113FE4", VA = "0x1113FE4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60017B5")]
	[Address(RVA = "0x1114018", Offset = "0x1114018", VA = "0x1114018", Slot = "1")]
	~AkTransform()
	{
	}

	[Token(Token = "0x60017B6")]
	[Address(RVA = "0x1114088", Offset = "0x1114088", VA = "0x1114088", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60017B7")]
	[Address(RVA = "0x11141C4", Offset = "0x11141C4", VA = "0x11141C4")]
	public AkVector Position()
	{
		return null;
	}

	[Token(Token = "0x60017B8")]
	[Address(RVA = "0x11142A4", Offset = "0x11142A4", VA = "0x11142A4")]
	public AkVector OrientationFront()
	{
		return null;
	}

	[Token(Token = "0x60017B9")]
	[Address(RVA = "0x1114344", Offset = "0x1114344", VA = "0x1114344")]
	public AkVector OrientationTop()
	{
		return null;
	}

	[Token(Token = "0x60017BA")]
	[Address(RVA = "0x11143E4", Offset = "0x11143E4", VA = "0x11143E4")]
	public void Set(AkVector in_position, AkVector in_orientationFront, AkVector in_orientationTop)
	{
	}

	[Token(Token = "0x60017BB")]
	[Address(RVA = "0x1114504", Offset = "0x1114504", VA = "0x1114504")]
	public void Set(float in_positionX, float in_positionY, float in_positionZ, float in_orientFrontX, float in_orientFrontY, float in_orientFrontZ, float in_orientTopX, float in_orientTopY, float in_orientTopZ)
	{
	}

	[Token(Token = "0x60017BC")]
	[Address(RVA = "0x1114630", Offset = "0x1114630", VA = "0x1114630")]
	public void SetPosition(AkVector in_position)
	{
	}

	[Token(Token = "0x60017BD")]
	[Address(RVA = "0x11146D8", Offset = "0x11146D8", VA = "0x11146D8")]
	public void SetPosition(float in_x, float in_y, float in_z)
	{
	}

	[Token(Token = "0x60017BE")]
	[Address(RVA = "0x111476C", Offset = "0x111476C", VA = "0x111476C")]
	public void SetOrientation(AkVector in_orientationFront, AkVector in_orientationTop)
	{
	}

	[Token(Token = "0x60017BF")]
	[Address(RVA = "0x1114824", Offset = "0x1114824", VA = "0x1114824")]
	public void SetOrientation(float in_orientFrontX, float in_orientFrontY, float in_orientFrontZ, float in_orientTopX, float in_orientTopY, float in_orientTopZ)
	{
	}

	[Token(Token = "0x60017C0")]
	[Address(RVA = "0x11148D8", Offset = "0x11148D8", VA = "0x11148D8")]
	public AkTransform()
	{
	}
}
[Token(Token = "0x2000322")]
public class AkTriangle : IDisposable
{
	[Token(Token = "0x4001521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001AE")]
	public ushort point0
	{
		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x1114D04", Offset = "0x1114D04", VA = "0x1114D04")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x1112D9C", Offset = "0x1112D9C", VA = "0x1112D9C")]
		set
		{
		}
	}

	[Token(Token = "0x170001AF")]
	public ushort point1
	{
		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x1114D70", Offset = "0x1114D70", VA = "0x1114D70")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x1112E18", Offset = "0x1112E18", VA = "0x1112E18")]
		set
		{
		}
	}

	[Token(Token = "0x170001B0")]
	public ushort point2
	{
		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x1114DDC", Offset = "0x1114DDC", VA = "0x1114DDC")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x1112E94", Offset = "0x1112E94", VA = "0x1112E94")]
		set
		{
		}
	}

	[Token(Token = "0x170001B1")]
	public ushort surface
	{
		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x1114E48", Offset = "0x1114E48", VA = "0x1114E48")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x1112F10", Offset = "0x1112F10", VA = "0x1112F10")]
		set
		{
		}
	}

	[Token(Token = "0x60017C1")]
	[Address(RVA = "0x111495C", Offset = "0x111495C", VA = "0x111495C")]
	internal AkTriangle(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60017C2")]
	[Address(RVA = "0x111499C", Offset = "0x111499C", VA = "0x111499C")]
	internal static IntPtr getCPtr(AkTriangle obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60017C3")]
	[Address(RVA = "0x11149EC", Offset = "0x11149EC", VA = "0x11149EC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60017C4")]
	[Address(RVA = "0x1114A20", Offset = "0x1114A20", VA = "0x1114A20", Slot = "1")]
	~AkTriangle()
	{
	}

	[Token(Token = "0x60017C5")]
	[Address(RVA = "0x1114A90", Offset = "0x1114A90", VA = "0x1114A90", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60017C6")]
	[Address(RVA = "0x1114BCC", Offset = "0x1114BCC", VA = "0x1114BCC")]
	public AkTriangle()
	{
	}

	[Token(Token = "0x60017C7")]
	[Address(RVA = "0x1114C50", Offset = "0x1114C50", VA = "0x1114C50")]
	public AkTriangle(ushort in_pt0, ushort in_pt1, ushort in_pt2, ushort in_surfaceInfo)
	{
	}

	[Token(Token = "0x60017D0")]
	[Address(RVA = "0x1114EB4", Offset = "0x1114EB4", VA = "0x1114EB4")]
	public void Clear()
	{
	}

	[Token(Token = "0x60017D1")]
	[Address(RVA = "0x1114F20", Offset = "0x1114F20", VA = "0x1114F20")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x60017D2")]
	[Address(RVA = "0x1114F80", Offset = "0x1114F80", VA = "0x1114F80")]
	public void Clone(AkTriangle other)
	{
	}
}
[Token(Token = "0x2000323")]
public class AkVector : IDisposable
{
	[Token(Token = "0x4001523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001B2")]
	public float X
	{
		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x11171F8", Offset = "0x11171F8", VA = "0x11171F8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x111717C", Offset = "0x111717C", VA = "0x111717C")]
		set
		{
		}
	}

	[Token(Token = "0x170001B3")]
	public float Y
	{
		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x11172E0", Offset = "0x11172E0", VA = "0x11172E0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x1117264", Offset = "0x1117264", VA = "0x1117264")]
		set
		{
		}
	}

	[Token(Token = "0x170001B4")]
	public float Z
	{
		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x11173C8", Offset = "0x11173C8", VA = "0x11173C8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x111734C", Offset = "0x111734C", VA = "0x111734C")]
		set
		{
		}
	}

	[Token(Token = "0x60017D3")]
	[Address(RVA = "0x1114264", Offset = "0x1114264", VA = "0x1114264")]
	internal AkVector(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60017D4")]
	[Address(RVA = "0x11144B4", Offset = "0x11144B4", VA = "0x11144B4")]
	internal static IntPtr getCPtr(AkVector obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60017D5")]
	[Address(RVA = "0x1116F30", Offset = "0x1116F30", VA = "0x1116F30", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60017D6")]
	[Address(RVA = "0x1116F64", Offset = "0x1116F64", VA = "0x1116F64", Slot = "1")]
	~AkVector()
	{
	}

	[Token(Token = "0x60017D7")]
	[Address(RVA = "0x1116FD4", Offset = "0x1116FD4", VA = "0x1116FD4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60017D8")]
	[Address(RVA = "0x1117110", Offset = "0x1117110", VA = "0x1117110")]
	public void Zero()
	{
	}

	[Token(Token = "0x60017DF")]
	[Address(RVA = "0x1117434", Offset = "0x1117434", VA = "0x1117434")]
	public AkVector()
	{
	}
}
[Token(Token = "0x2000324")]
public class AkVertex : IDisposable
{
	[Token(Token = "0x4001525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001B5")]
	public float X
	{
		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x1117858", Offset = "0x1117858", VA = "0x1117858")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x1112BC8", Offset = "0x1112BC8", VA = "0x1112BC8")]
		set
		{
		}
	}

	[Token(Token = "0x170001B6")]
	public float Y
	{
		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x11178C4", Offset = "0x11178C4", VA = "0x11178C4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x1112C44", Offset = "0x1112C44", VA = "0x1112C44")]
		set
		{
		}
	}

	[Token(Token = "0x170001B7")]
	public float Z
	{
		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x1117930", Offset = "0x1117930", VA = "0x1117930")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x1112CC0", Offset = "0x1112CC0", VA = "0x1112CC0")]
		set
		{
		}
	}

	[Token(Token = "0x60017E0")]
	[Address(RVA = "0x11174B8", Offset = "0x11174B8", VA = "0x11174B8")]
	internal AkVertex(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60017E1")]
	[Address(RVA = "0x11174F8", Offset = "0x11174F8", VA = "0x11174F8")]
	internal static IntPtr getCPtr(AkVertex obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60017E2")]
	[Address(RVA = "0x1117548", Offset = "0x1117548", VA = "0x1117548", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60017E3")]
	[Address(RVA = "0x111757C", Offset = "0x111757C", VA = "0x111757C", Slot = "1")]
	~AkVertex()
	{
	}

	[Token(Token = "0x60017E4")]
	[Address(RVA = "0x11175EC", Offset = "0x11175EC", VA = "0x11175EC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60017E5")]
	[Address(RVA = "0x1117728", Offset = "0x1117728", VA = "0x1117728")]
	public AkVertex()
	{
	}

	[Token(Token = "0x60017E6")]
	[Address(RVA = "0x11177AC", Offset = "0x11177AC", VA = "0x11177AC")]
	public AkVertex(float in_X, float in_Y, float in_Z)
	{
	}

	[Token(Token = "0x60017ED")]
	[Address(RVA = "0x111799C", Offset = "0x111799C", VA = "0x111799C")]
	public void Clear()
	{
	}

	[Token(Token = "0x60017EE")]
	[Address(RVA = "0x1117A08", Offset = "0x1117A08", VA = "0x1117A08")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x60017EF")]
	[Address(RVA = "0x1117A68", Offset = "0x1117A68", VA = "0x1117A68")]
	public void Clone(AkVertex other)
	{
	}
}
[Token(Token = "0x2000325")]
public class _ArrayPoolDefault : IDisposable
{
	[Token(Token = "0x4001527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x60017F0")]
	[Address(RVA = "0x2441B88", Offset = "0x2441B88", VA = "0x2441B88")]
	internal _ArrayPoolDefault(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60017F1")]
	[Address(RVA = "0x2441BC8", Offset = "0x2441BC8", VA = "0x2441BC8")]
	internal static IntPtr getCPtr(_ArrayPoolDefault obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60017F2")]
	[Address(RVA = "0x2441C18", Offset = "0x2441C18", VA = "0x2441C18", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60017F3")]
	[Address(RVA = "0x2441C4C", Offset = "0x2441C4C", VA = "0x2441C4C", Slot = "1")]
	~_ArrayPoolDefault()
	{
	}

	[Token(Token = "0x60017F4")]
	[Address(RVA = "0x2441CBC", Offset = "0x2441CBC", VA = "0x2441CBC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60017F5")]
	[Address(RVA = "0x2441DF8", Offset = "0x2441DF8", VA = "0x2441DF8")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x60017F6")]
	[Address(RVA = "0x2441E58", Offset = "0x2441E58", VA = "0x2441E58")]
	public _ArrayPoolDefault()
	{
	}
}
[Token(Token = "0x2000326")]
public class _ArrayPoolLEngineDefault : IDisposable
{
	[Token(Token = "0x4001529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400152A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x60017F7")]
	[Address(RVA = "0x2441EDC", Offset = "0x2441EDC", VA = "0x2441EDC")]
	internal _ArrayPoolLEngineDefault(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60017F8")]
	[Address(RVA = "0x2441F1C", Offset = "0x2441F1C", VA = "0x2441F1C")]
	internal static IntPtr getCPtr(_ArrayPoolLEngineDefault obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60017F9")]
	[Address(RVA = "0x2441F6C", Offset = "0x2441F6C", VA = "0x2441F6C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60017FA")]
	[Address(RVA = "0x2441FA0", Offset = "0x2441FA0", VA = "0x2441FA0", Slot = "1")]
	~_ArrayPoolLEngineDefault()
	{
	}

	[Token(Token = "0x60017FB")]
	[Address(RVA = "0x2442010", Offset = "0x2442010", VA = "0x2442010", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60017FC")]
	[Address(RVA = "0x244214C", Offset = "0x244214C", VA = "0x244214C")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x60017FD")]
	[Address(RVA = "0x24421AC", Offset = "0x24421AC", VA = "0x24421AC")]
	public _ArrayPoolLEngineDefault()
	{
	}
}
[Token(Token = "0x2000327")]
public class _ArrayPoolSpatialAudio : IDisposable
{
	[Token(Token = "0x400152B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400152C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x60017FE")]
	[Address(RVA = "0x2442230", Offset = "0x2442230", VA = "0x2442230")]
	internal _ArrayPoolSpatialAudio(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60017FF")]
	[Address(RVA = "0x2442270", Offset = "0x2442270", VA = "0x2442270")]
	internal static IntPtr getCPtr(_ArrayPoolSpatialAudio obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001800")]
	[Address(RVA = "0x24422C0", Offset = "0x24422C0", VA = "0x24422C0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001801")]
	[Address(RVA = "0x24422F4", Offset = "0x24422F4", VA = "0x24422F4", Slot = "1")]
	~_ArrayPoolSpatialAudio()
	{
	}

	[Token(Token = "0x6001802")]
	[Address(RVA = "0x2442364", Offset = "0x2442364", VA = "0x2442364", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001803")]
	[Address(RVA = "0x24424A0", Offset = "0x24424A0", VA = "0x24424A0")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x6001804")]
	[Address(RVA = "0x2442500", Offset = "0x2442500", VA = "0x2442500")]
	public _ArrayPoolSpatialAudio()
	{
	}
}
[Token(Token = "0x2000328")]
public class AkAndroidSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x200069D")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE7848", Offset = "0xBE7848")]
		public bool m_RoundFrameSizeToHardwareSize;

		[Token(Token = "0x6002657")]
		[Address(RVA = "0x1412E28", Offset = "0x1412E28", VA = "0x1412E28", Slot = "7")]
		public override void CopyTo(AkPlatformInitSettings settings)
		{
		}

		[Token(Token = "0x6002658")]
		[Address(RVA = "0x1412E4C", Offset = "0x1412E4C", VA = "0x1412E4C")]
		public PlatformAdvancedSettings()
		{
		}
	}

	[Token(Token = "0x400152D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x400152E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x400152F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x6001805")]
	[Address(RVA = "0x1412B14", Offset = "0x1412B14", VA = "0x1412B14")]
	public AkAndroidSettings()
	{
	}

	[Token(Token = "0x6001806")]
	[Address(RVA = "0x1412E10", Offset = "0x1412E10", VA = "0x1412E10", Slot = "11")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6001807")]
	[Address(RVA = "0x1412E18", Offset = "0x1412E18", VA = "0x1412E18", Slot = "12")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6001808")]
	[Address(RVA = "0x1412E20", Offset = "0x1412E20", VA = "0x1412E20", Slot = "13")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}
}
[Token(Token = "0x2000329")]
public static class AkAudioInputManager
{
	[Token(Token = "0x200069E")]
	public delegate void AudioFormatDelegate(uint playingID, AkAudioFormat format);

	[Token(Token = "0x200069F")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBD87D8", Offset = "0xBD87D8")]
	public delegate void AudioFormatInteropDelegate(uint playingID, IntPtr format);

	[Token(Token = "0x20006A0")]
	public delegate bool AudioSamplesDelegate(uint playingID, uint channelIndex, float[] samples);

	[Token(Token = "0x20006A1")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBD87EC", Offset = "0xBD87EC")]
	public delegate bool AudioSamplesInteropDelegate(uint playingID, [In][Out] float[] samples, uint channelIndex, uint frames);

	[Token(Token = "0x4001530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool initialized;

	[Token(Token = "0x4001531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<uint, AudioSamplesDelegate> audioSamplesDelegates;

	[Token(Token = "0x4001532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Dictionary<uint, AudioFormatDelegate> audioFormatDelegates;

	[Token(Token = "0x4001533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly AkAudioFormat audioFormat;

	[Token(Token = "0x4001534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly AudioSamplesInteropDelegate audioSamplesDelegate;

	[Token(Token = "0x4001535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly AudioFormatInteropDelegate audioFormatDelegate;

	[Token(Token = "0x6001809")]
	[Address(RVA = "0x1413D84", Offset = "0x1413D84", VA = "0x1413D84")]
	public static uint PostAudioInputEvent(Event akEvent, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x600180A")]
	[Address(RVA = "0x1414038", Offset = "0x1414038", VA = "0x1414038")]
	public static uint PostAudioInputEvent(uint akEventID, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x600180B")]
	[Address(RVA = "0x1414140", Offset = "0x1414140", VA = "0x1414140")]
	public static uint PostAudioInputEvent(string akEventName, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x600180C")]
	[Address(RVA = "0x1413B70", Offset = "0x1413B70", VA = "0x1413B70")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBEAAFC", Offset = "0xBEAAFC")]
	private static bool InternalAudioSamplesDelegate(uint playingID, float[] samples, uint channelIndex, uint frames)
	{
		return default(bool);
	}

	[Token(Token = "0x600180D")]
	[Address(RVA = "0x1413C6C", Offset = "0x1413C6C", VA = "0x1413C6C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBEAB60", Offset = "0xBEAB60")]
	private static void InternalAudioFormatDelegate(uint playingID, IntPtr format)
	{
	}

	[Token(Token = "0x600180E")]
	[Address(RVA = "0x1413E70", Offset = "0x1413E70", VA = "0x1413E70")]
	private static void TryInitialize()
	{
	}

	[Token(Token = "0x600180F")]
	[Address(RVA = "0x1413F44", Offset = "0x1413F44", VA = "0x1413F44")]
	private static void AddPlayingID(uint playingID, AudioSamplesDelegate sampleDelegate, AudioFormatDelegate formatDelegate)
	{
	}

	[Token(Token = "0x6001810")]
	[Address(RVA = "0x1414780", Offset = "0x1414780", VA = "0x1414780")]
	private static void EventCallback(object cookie, AkCallbackType type, AkCallbackInfo callbackInfo)
	{
	}
}
[Token(Token = "0x200032A")]
public static class AkBankManager
{
	[Token(Token = "0x20006A2")]
	private class BankHandle
	{
		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected readonly string bankName;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected uint m_BankID;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE7880", Offset = "0xBE7880")]
		private int <RefCount>k__BackingField;

		[Token(Token = "0x170003AD")]
		public int RefCount
		{
			[Token(Token = "0x600266A")]
			[Address(RVA = "0x14195AC", Offset = "0x14195AC", VA = "0x14195AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBED294", Offset = "0xBED294")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600266B")]
			[Address(RVA = "0x14195B4", Offset = "0x14195B4", VA = "0x14195B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBED2A4", Offset = "0xBED2A4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002669")]
		[Address(RVA = "0x1418830", Offset = "0x1418830", VA = "0x1418830")]
		public BankHandle(string name)
		{
		}

		[Token(Token = "0x600266C")]
		[Address(RVA = "0x14195BC", Offset = "0x14195BC", VA = "0x14195BC", Slot = "4")]
		public virtual AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x600266D")]
		[Address(RVA = "0x1418B30", Offset = "0x1418B30", VA = "0x1418B30")]
		public void LoadBank()
		{
		}

		[Token(Token = "0x600266E")]
		[Address(RVA = "0x1419634", Offset = "0x1419634", VA = "0x1419634", Slot = "5")]
		public virtual void UnloadBank()
		{
		}

		[Token(Token = "0x600266F")]
		[Address(RVA = "0x1418C2C", Offset = "0x1418C2C", VA = "0x1418C2C")]
		public void IncRef()
		{
		}

		[Token(Token = "0x6002670")]
		[Address(RVA = "0x1418C8C", Offset = "0x1418C8C", VA = "0x1418C8C")]
		public void DecRef()
		{
		}

		[Token(Token = "0x6002671")]
		[Address(RVA = "0x1418FAC", Offset = "0x1418FAC", VA = "0x1418FAC")]
		protected void LogLoadResult(AKRESULT result)
		{
		}
	}

	[Token(Token = "0x20006A3")]
	private class AsyncBankHandle : BankHandle
	{
		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly AkCallbackManager.BankCallback bankCallback;

		[Token(Token = "0x6002672")]
		[Address(RVA = "0x1418C3C", Offset = "0x1418C3C", VA = "0x1418C3C")]
		public AsyncBankHandle(string name, AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0x1418E0C", Offset = "0x1418E0C", VA = "0x1418E0C")]
		private static void GlobalBankCallback(uint in_bankID, IntPtr in_pInMemoryBankPtr, AKRESULT in_eLoadResult, uint in_memPoolId, object in_Cookie)
		{
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0x14194D8", Offset = "0x14194D8", VA = "0x14194D8", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x20006A4")]
	private class DecodableBankHandle : BankHandle
	{
		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly bool decodeBank;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly string decodedBankPath;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly bool saveDecodedBank;

		[Token(Token = "0x6002675")]
		[Address(RVA = "0x1418864", Offset = "0x1418864", VA = "0x1418864")]
		public DecodableBankHandle(string name, bool save)
		{
		}

		[Token(Token = "0x6002676")]
		[Address(RVA = "0x1419794", Offset = "0x1419794", VA = "0x1419794", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x6002677")]
		[Address(RVA = "0x1419928", Offset = "0x1419928", VA = "0x1419928", Slot = "5")]
		public override void UnloadBank()
		{
		}
	}

	[Token(Token = "0x4001536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, BankHandle> m_BankHandles;

	[Token(Token = "0x4001537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly List<BankHandle> BanksToUnload;

	[Token(Token = "0x4001538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Mutex m_Mutex;

	[Token(Token = "0x6001812")]
	[Address(RVA = "0x14184DC", Offset = "0x14184DC", VA = "0x14184DC")]
	internal static void DoUnloadBanks()
	{
	}

	[Token(Token = "0x6001813")]
	[Address(RVA = "0x1418600", Offset = "0x1418600", VA = "0x1418600")]
	internal static void Reset()
	{
	}

	[Token(Token = "0x6001814")]
	[Address(RVA = "0x141869C", Offset = "0x141869C", VA = "0x141869C")]
	public static void LoadInitBank(bool doReset = true)
	{
	}

	[Token(Token = "0x6001815")]
	[Address(RVA = "0x14187C0", Offset = "0x14187C0", VA = "0x14187C0")]
	public static void UnloadInitBank()
	{
	}

	[Token(Token = "0x6001816")]
	[Address(RVA = "0x140A4A4", Offset = "0x140A4A4", VA = "0x140A4A4")]
	public static void LoadBank(string name, bool decodeBank, bool saveDecodedBank)
	{
	}

	[Token(Token = "0x6001817")]
	[Address(RVA = "0x140A724", Offset = "0x140A724", VA = "0x140A724")]
	public static void LoadBankAsync(string name, [Optional] AkCallbackManager.BankCallback callback)
	{
	}

	[Token(Token = "0x6001818")]
	[Address(RVA = "0x140A954", Offset = "0x140A954", VA = "0x140A954")]
	public static void UnloadBank(string name)
	{
	}
}
[Token(Token = "0x200032B")]
public class AkBasePathGetter
{
	[Token(Token = "0x4001539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string DefaultBasePath;

	[Token(Token = "0x600181A")]
	[Address(RVA = "0x14199B8", Offset = "0x14199B8", VA = "0x14199B8")]
	public static string GetPlatformName()
	{
		return null;
	}

	[Token(Token = "0x600181B")]
	[Address(RVA = "0x1419A28", Offset = "0x1419A28", VA = "0x1419A28")]
	public static string GetPlatformBasePath()
	{
		return null;
	}

	[Token(Token = "0x600181C")]
	[Address(RVA = "0x1419AE4", Offset = "0x1419AE4", VA = "0x1419AE4")]
	public static string GetFullSoundBankPath()
	{
		return null;
	}

	[Token(Token = "0x600181D")]
	[Address(RVA = "0x1419C68", Offset = "0x1419C68", VA = "0x1419C68")]
	public static void FixSlashes(ref string path, char separatorChar, char badChar, bool addTrailingSlash)
	{
	}

	[Token(Token = "0x600181E")]
	[Address(RVA = "0x1419BB4", Offset = "0x1419BB4", VA = "0x1419BB4")]
	public static void FixSlashes(ref string path)
	{
	}

	[Token(Token = "0x600181F")]
	[Address(RVA = "0x14196AC", Offset = "0x14196AC", VA = "0x14196AC")]
	public static string GetSoundbankBasePath()
	{
		return null;
	}

	[Token(Token = "0x6001820")]
	[Address(RVA = "0x1419DBC", Offset = "0x1419DBC", VA = "0x1419DBC")]
	public AkBasePathGetter()
	{
	}
}
[Token(Token = "0x200032C")]
public static class AkCallbackManager
{
	[Token(Token = "0x20006A5")]
	public delegate void EventCallback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info);

	[Token(Token = "0x20006A6")]
	public delegate void MonitoringCallback(AkMonitorErrorCode in_errorCode, AkMonitorErrorLevel in_errorLevel, uint in_playingID, ulong in_gameObjID, string in_msg);

	[Token(Token = "0x20006A7")]
	public delegate void BankCallback(uint in_bankID, IntPtr in_InMemoryBankPtr, AKRESULT in_eLoadResult, uint in_memPoolId, object in_Cookie);

	[Token(Token = "0x20006A8")]
	public class EventCallbackPackage
	{
		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_bNotifyEndOfEvent;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EventCallback m_Callback;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public object m_Cookie;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_playingID;

		[Token(Token = "0x6002684")]
		[Address(RVA = "0x141D06C", Offset = "0x141D06C", VA = "0x141D06C")]
		public static EventCallbackPackage Create(EventCallback in_cb, object in_cookie, ref uint io_Flags)
		{
			return null;
		}

		[Token(Token = "0x6002685")]
		[Address(RVA = "0x141D1B0", Offset = "0x141D1B0", VA = "0x141D1B0", Slot = "1")]
		~EventCallbackPackage()
		{
		}

		[Token(Token = "0x6002686")]
		[Address(RVA = "0x141D1A8", Offset = "0x141D1A8", VA = "0x141D1A8")]
		public EventCallbackPackage()
		{
		}
	}

	[Token(Token = "0x20006A9")]
	public class BankCallbackPackage
	{
		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BankCallback m_Callback;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object m_Cookie;

		[Token(Token = "0x6002687")]
		[Address(RVA = "0x141CEE8", Offset = "0x141CEE8", VA = "0x141CEE8")]
		public BankCallbackPackage(BankCallback in_cb, object in_cookie)
		{
		}
	}

	[Token(Token = "0x20006AA")]
	public delegate AKRESULT BGMCallback(bool in_bOtherAudioPlaying, object in_Cookie);

	[Token(Token = "0x20006AB")]
	public class BGMCallbackPackage
	{
		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BGMCallback m_Callback;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object m_Cookie;

		[Token(Token = "0x600268C")]
		[Address(RVA = "0x141B288", Offset = "0x141B288", VA = "0x141B288")]
		public BGMCallbackPackage()
		{
		}
	}

	[Token(Token = "0x20006AC")]
	public class InitializationSettings
	{
		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DefaultBufferSize;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static bool DefaultIsLoggingEnabled;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int BufferSize;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsLoggingEnabled;

		[Token(Token = "0x600268D")]
		[Address(RVA = "0x1419F6C", Offset = "0x1419F6C", VA = "0x1419F6C")]
		public InitializationSettings()
		{
		}
	}

	[Token(Token = "0x400153A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE25EC", Offset = "0xBE25EC")]
	private static bool <IsLoggingEnabled>k__BackingField;

	[Token(Token = "0x400153B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly AkEventCallbackInfo AkEventCallbackInfo;

	[Token(Token = "0x400153C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly AkDynamicSequenceItemCallbackInfo AkDynamicSequenceItemCallbackInfo;

	[Token(Token = "0x400153D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly AkMIDIEventCallbackInfo AkMIDIEventCallbackInfo;

	[Token(Token = "0x400153E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly AkMarkerCallbackInfo AkMarkerCallbackInfo;

	[Token(Token = "0x400153F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly AkDurationCallbackInfo AkDurationCallbackInfo;

	[Token(Token = "0x4001540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly AkMusicSyncCallbackInfo AkMusicSyncCallbackInfo;

	[Token(Token = "0x4001541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly AkMusicPlaylistCallbackInfo AkMusicPlaylistCallbackInfo;

	[Token(Token = "0x4001542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly AkAudioSourceChangeCallbackInfo AkAudioSourceChangeCallbackInfo;

	[Token(Token = "0x4001543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly AkMonitoringCallbackInfo AkMonitoringCallbackInfo;

	[Token(Token = "0x4001544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static readonly AkBankCallbackInfo AkBankCallbackInfo;

	[Token(Token = "0x4001545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static readonly Dictionary<int, EventCallbackPackage> m_mapEventCallbacks;

	[Token(Token = "0x4001546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Dictionary<int, BankCallbackPackage> m_mapBankCallbacks;

	[Token(Token = "0x4001547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static EventCallbackPackage m_LastAddedEventPackage;

	[Token(Token = "0x4001548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr m_pNotifMem;

	[Token(Token = "0x4001549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static MonitoringCallback m_MonitoringCB;

	[Token(Token = "0x400154A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static BGMCallbackPackage ms_sourceChangeCallbackPkg;

	[Token(Token = "0x170001B8")]
	private static bool IsLoggingEnabled
	{
		[Token(Token = "0x6001822")]
		[Address(RVA = "0x141A558", Offset = "0x141A558", VA = "0x141A558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEABC4", Offset = "0xBEABC4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001823")]
		[Address(RVA = "0x141A5C0", Offset = "0x141A5C0", VA = "0x141A5C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEABD4", Offset = "0xBEABD4")]
		set
		{
		}
	}

	[Token(Token = "0x6001824")]
	[Address(RVA = "0x141A630", Offset = "0x141A630", VA = "0x141A630")]
	public static void RemoveEventCallback(uint in_playingID)
	{
	}

	[Token(Token = "0x6001825")]
	[Address(RVA = "0x141A86C", Offset = "0x141A86C", VA = "0x141A86C")]
	public static void RemoveEventCallbackCookie(object in_cookie)
	{
	}

	[Token(Token = "0x6001826")]
	[Address(RVA = "0x141AACC", Offset = "0x141AACC", VA = "0x141AACC")]
	public static void RemoveBankCallback(object in_cookie)
	{
	}

	[Token(Token = "0x6001827")]
	[Address(RVA = "0x141AD2C", Offset = "0x141AD2C", VA = "0x141AD2C")]
	public static void SetLastAddedPlayingID(uint in_playingID)
	{
	}

	[Token(Token = "0x6001828")]
	[Address(RVA = "0x141ADF4", Offset = "0x141ADF4", VA = "0x141ADF4")]
	public static AKRESULT Init(InitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001829")]
	[Address(RVA = "0x141AF9C", Offset = "0x141AF9C", VA = "0x141AF9C")]
	public static void Term()
	{
	}

	[Token(Token = "0x600182A")]
	[Address(RVA = "0x141B0D8", Offset = "0x141B0D8", VA = "0x141B0D8")]
	public static void SetMonitoringCallback(AkMonitorErrorLevel in_Level, MonitoringCallback in_CB)
	{
	}

	[Token(Token = "0x600182B")]
	[Address(RVA = "0x141B1C8", Offset = "0x141B1C8", VA = "0x141B1C8")]
	public static void SetBGMCallback(BGMCallback in_CB, object in_cookie)
	{
	}

	[Token(Token = "0x600182C")]
	[Address(RVA = "0x141B290", Offset = "0x141B290", VA = "0x141B290")]
	public static int PostCallbacks()
	{
		return default(int);
	}
}
[Token(Token = "0x200032D")]
public class AkBasePlatformSettings : ScriptableObject
{
	[Token(Token = "0x170001B9")]
	public virtual AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x600182E")]
		[Address(RVA = "0x1419E5C", Offset = "0x1419E5C", VA = "0x1419E5C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BA")]
	public virtual AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x600182F")]
		[Address(RVA = "0x1419EB8", Offset = "0x1419EB8", VA = "0x1419EB8", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BB")]
	public virtual AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x6001830")]
		[Address(RVA = "0x1419F14", Offset = "0x1419F14", VA = "0x1419F14", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BC")]
	public virtual string InitialLanguage
	{
		[Token(Token = "0x6001831")]
		[Address(RVA = "0x1419FF0", Offset = "0x1419FF0", VA = "0x1419FF0", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BD")]
	public virtual bool RenderDuringFocusLoss
	{
		[Token(Token = "0x6001832")]
		[Address(RVA = "0x141A038", Offset = "0x141A038", VA = "0x141A038", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001BE")]
	public virtual string SoundbankPath
	{
		[Token(Token = "0x6001833")]
		[Address(RVA = "0x141A040", Offset = "0x141A040", VA = "0x141A040", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BF")]
	public virtual AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x6001834")]
		[Address(RVA = "0x141A0A8", Offset = "0x141A0A8", VA = "0x141A0A8", Slot = "10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001835")]
	[Address(RVA = "0x141A184", Offset = "0x141A184", VA = "0x141A184")]
	public AkBasePlatformSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x200032E")]
public class AkCommonOutputSettings
{
	[Token(Token = "0x20006AD")]
	public enum PanningRule
	{
		[Token(Token = "0x40020C3")]
		Speakers,
		[Token(Token = "0x40020C4")]
		Headphones
	}

	[Serializable]
	[Token(Token = "0x20006AE")]
	public class ChannelConfiguration
	{
		[Token(Token = "0x2000714")]
		public enum ChannelConfigType
		{
			[Token(Token = "0x4002239")]
			Anonymous,
			[Token(Token = "0x400223A")]
			Standard,
			[Token(Token = "0x400223B")]
			Ambisonic
		}

		[Token(Token = "0x2000715")]
		public enum ChannelMask
		{
			[Token(Token = "0x400223D")]
			NONE = 0,
			[Token(Token = "0x400223E")]
			FRONT_LEFT = 1,
			[Token(Token = "0x400223F")]
			FRONT_RIGHT = 2,
			[Token(Token = "0x4002240")]
			FRONT_CENTER = 4,
			[Token(Token = "0x4002241")]
			LOW_FREQUENCY = 8,
			[Token(Token = "0x4002242")]
			BACK_LEFT = 16,
			[Token(Token = "0x4002243")]
			BACK_RIGHT = 32,
			[Token(Token = "0x4002244")]
			BACK_CENTER = 256,
			[Token(Token = "0x4002245")]
			SIDE_LEFT = 512,
			[Token(Token = "0x4002246")]
			SIDE_RIGHT = 1024,
			[Token(Token = "0x4002247")]
			TOP = 2048,
			[Token(Token = "0x4002248")]
			HEIGHT_FRONT_LEFT = 4096,
			[Token(Token = "0x4002249")]
			HEIGHT_FRONT_CENTER = 8192,
			[Token(Token = "0x400224A")]
			HEIGHT_FRONT_RIGHT = 16384,
			[Token(Token = "0x400224B")]
			HEIGHT_BACK_LEFT = 32768,
			[Token(Token = "0x400224C")]
			HEIGHT_BACK_CENTER = 65536,
			[Token(Token = "0x400224D")]
			HEIGHT_BACK_RIGHT = 131072,
			[Token(Token = "0x400224E")]
			SETUP_MONO = 4,
			[Token(Token = "0x400224F")]
			SETUP_0POINT1 = 8,
			[Token(Token = "0x4002250")]
			SETUP_1POINT1 = 12,
			[Token(Token = "0x4002251")]
			SETUP_STEREO = 3,
			[Token(Token = "0x4002252")]
			SETUP_2POINT1 = 11,
			[Token(Token = "0x4002253")]
			SETUP_3STEREO = 7,
			[Token(Token = "0x4002254")]
			SETUP_3POINT1 = 15,
			[Token(Token = "0x4002255")]
			SETUP_4 = 1539,
			[Token(Token = "0x4002256")]
			SETUP_4POINT1 = 1547,
			[Token(Token = "0x4002257")]
			SETUP_5 = 1543,
			[Token(Token = "0x4002258")]
			SETUP_5POINT1 = 1551,
			[Token(Token = "0x4002259")]
			SETUP_6 = 1587,
			[Token(Token = "0x400225A")]
			SETUP_6POINT1 = 1595,
			[Token(Token = "0x400225B")]
			SETUP_7 = 1591,
			[Token(Token = "0x400225C")]
			SETUP_7POINT1 = 1599,
			[Token(Token = "0x400225D")]
			SETUP_SURROUND = 259,
			[Token(Token = "0x400225E")]
			SETUP_DPL2 = 1539,
			[Token(Token = "0x400225F")]
			SETUP_HEIGHT_4 = 184320,
			[Token(Token = "0x4002260")]
			SETUP_HEIGHT_5 = 192512,
			[Token(Token = "0x4002261")]
			SETUP_HEIGHT_ALL = 258048,
			[Token(Token = "0x4002262")]
			SETUP_AURO_222 = 22019,
			[Token(Token = "0x4002263")]
			SETUP_AURO_8 = 185859,
			[Token(Token = "0x4002264")]
			SETUP_AURO_9 = 185863,
			[Token(Token = "0x4002265")]
			SETUP_AURO_9POINT1 = 185871,
			[Token(Token = "0x4002266")]
			SETUP_AURO_10 = 187911,
			[Token(Token = "0x4002267")]
			SETUP_AURO_10POINT1 = 187919,
			[Token(Token = "0x4002268")]
			SETUP_AURO_11 = 196103,
			[Token(Token = "0x4002269")]
			SETUP_AURO_11POINT1 = 196111,
			[Token(Token = "0x400226A")]
			SETUP_AURO_11_740 = 185911,
			[Token(Token = "0x400226B")]
			SETUP_AURO_11POINT1_740 = 185919,
			[Token(Token = "0x400226C")]
			SETUP_AURO_13_751 = 196151,
			[Token(Token = "0x400226D")]
			SETUP_AURO_13POINT1_751 = 196159,
			[Token(Token = "0x400226E")]
			SETUP_DOLBY_5_0_2 = 22023,
			[Token(Token = "0x400226F")]
			SETUP_DOLBY_5_1_2 = 22031,
			[Token(Token = "0x4002270")]
			SETUP_DOLBY_6_0_2 = 22067,
			[Token(Token = "0x4002271")]
			SETUP_DOLBY_6_1_2 = 22075,
			[Token(Token = "0x4002272")]
			SETUP_DOLBY_6_0_4 = 185907,
			[Token(Token = "0x4002273")]
			SETUP_DOLBY_6_1_4 = 185915,
			[Token(Token = "0x4002274")]
			SETUP_DOLBY_7_0_2 = 22071,
			[Token(Token = "0x4002275")]
			SETUP_DOLBY_7_1_2 = 22079,
			[Token(Token = "0x4002276")]
			SETUP_DOLBY_7_0_4 = 185911,
			[Token(Token = "0x4002277")]
			SETUP_DOLBY_7_1_4 = 185919,
			[Token(Token = "0x4002278")]
			SETUP_ALL_SPEAKERS = 261951
		}

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE7890", Offset = "0xBE7890")]
		public ChannelConfigType m_ChannelConfigType;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE78C8", Offset = "0xBE78C8")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0xBE78C8", Offset = "0xBE78C8")]
		public ChannelMask m_ChannelMask;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE7950", Offset = "0xBE7950")]
		public uint m_NumberOfChannels;

		[Token(Token = "0x600268F")]
		[Address(RVA = "0x141F61C", Offset = "0x141F61C", VA = "0x141F61C")]
		public void CopyTo(AkChannelConfig config)
		{
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0x1412E08", Offset = "0x1412E08", VA = "0x1412E08")]
		public ChannelConfiguration()
		{
		}
	}

	[Token(Token = "0x400154B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE25FC", Offset = "0xBE25FC")]
	public string m_AudioDeviceShareset;

	[Token(Token = "0x400154C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2634", Offset = "0xBE2634")]
	public uint m_DeviceID;

	[Token(Token = "0x400154D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE266C", Offset = "0xBE266C")]
	public PanningRule m_PanningRule;

	[Token(Token = "0x400154E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE26A4", Offset = "0xBE26A4")]
	public ChannelConfiguration m_ChannelConfig;

	[Token(Token = "0x6001836")]
	[Address(RVA = "0x141F530", Offset = "0x141F530", VA = "0x141F530")]
	public void CopyTo(AkOutputSettings settings)
	{
	}

	[Token(Token = "0x6001837")]
	[Address(RVA = "0x1412D74", Offset = "0x1412D74", VA = "0x1412D74")]
	public AkCommonOutputSettings()
	{
	}
}
[Token(Token = "0x200032F")]
public class AkSettingsValidationHandler
{
	[Token(Token = "0x6001838")]
	[Address(RVA = "0xFE5B3C", Offset = "0xFE5B3C", VA = "0xFE5B3C", Slot = "4")]
	public virtual void Validate()
	{
	}

	[Token(Token = "0x6001839")]
	[Address(RVA = "0xFE5B40", Offset = "0xFE5B40", VA = "0xFE5B40")]
	public AkSettingsValidationHandler()
	{
	}
}
[Serializable]
[Token(Token = "0x2000330")]
public class AkCommonUserSettings : AkSettingsValidationHandler
{
	[Serializable]
	[Token(Token = "0x20006AF")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x2000716")]
		public enum DiffractionFlags
		{
			[Token(Token = "0x400227A")]
			UseBuiltInParam = 1,
			[Token(Token = "0x400227B")]
			UseObstruction = 2,
			[Token(Token = "0x400227C")]
			CalcEmitterVirtualPosition = 8
		}

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE7988", Offset = "0xBE7988")]
		public uint m_PoolSize;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE79C0", Offset = "0xBE79C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE79C0", Offset = "0xBE79C0")]
		public uint m_MaxSoundPropagationDepth;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE7A14", Offset = "0xBE7A14")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0xBE7A14", Offset = "0xBE7A14")]
		public DiffractionFlags m_DiffractionFlags;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE7A9C", Offset = "0xBE7A9C")]
		public float m_MovementThreshold;

		[Token(Token = "0x6002691")]
		[Address(RVA = "0x141FC58", Offset = "0x141FC58", VA = "0x141FC58")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x400154F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE26DC", Offset = "0xBE26DC")]
	public string m_BasePath;

	[Token(Token = "0x4001550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2714", Offset = "0xBE2714")]
	public string m_StartupLanguage;

	[Token(Token = "0x4001551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE274C", Offset = "0xBE274C")]
	public uint m_PreparePoolSize;

	[Token(Token = "0x4001552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2784", Offset = "0xBE2784")]
	public int m_CallbackManagerBufferSize;

	[Token(Token = "0x4001553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE27BC", Offset = "0xBE27BC")]
	public bool m_EngineLogging;

	[Token(Token = "0x4001554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE27F4", Offset = "0xBE27F4")]
	public uint m_MaximumNumberOfMemoryPools;

	[Token(Token = "0x4001555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE282C", Offset = "0xBE282C")]
	public uint m_MaximumNumberOfPositioningPaths;

	[Token(Token = "0x4001556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2864", Offset = "0xBE2864")]
	public uint m_DefaultPoolSize;

	[Token(Token = "0x4001557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE289C", Offset = "0xBE289C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE289C", Offset = "0xBE289C")]
	public float m_MemoryCutoffThreshold;

	[Token(Token = "0x4001558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE28F0", Offset = "0xBE28F0")]
	public uint m_CommandQueueSize;

	[Token(Token = "0x4001559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2928", Offset = "0xBE2928")]
	public uint m_SamplesPerFrame;

	[Token(Token = "0x400155A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2960", Offset = "0xBE2960")]
	public AkCommonOutputSettings m_MainOutputSettings;

	[Token(Token = "0x400155B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2998", Offset = "0xBE2998")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE2998", Offset = "0xBE2998")]
	public float m_StreamingLookAheadRatio;

	[Token(Token = "0x400155C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE29EC", Offset = "0xBE29EC")]
	public uint m_StreamManagerPoolSize;

	[Token(Token = "0x400155D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2A24", Offset = "0xBE2A24")]
	public uint m_SampleRate;

	[Token(Token = "0x400155E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2A5C", Offset = "0xBE2A5C")]
	public uint m_LowerEnginePoolSize;

	[Token(Token = "0x400155F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2A94", Offset = "0xBE2A94")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE2A94", Offset = "0xBE2A94")]
	public float m_LowerEngineMemoryCutoffThreshold;

	[Token(Token = "0x4001560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2AE8", Offset = "0xBE2AE8")]
	public ushort m_NumberOfRefillsInVoice;

	[Token(Token = "0x4001561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2B20", Offset = "0xBE2B20")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x600183A")]
	[Address(RVA = "0x141F85C", Offset = "0x141F85C", VA = "0x141F85C")]
	public void CopyTo(AkMemSettings settings)
	{
	}

	[Token(Token = "0x600183B")]
	[Address(RVA = "0x141FA9C", Offset = "0x141FA9C", VA = "0x141FA9C")]
	protected static string GetPluginPath()
	{
		return null;
	}

	[Token(Token = "0x600183C")]
	[Address(RVA = "0x141FAA4", Offset = "0x141FAA4", VA = "0x141FAA4", Slot = "5")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x600183D")]
	[Address(RVA = "0x141F8A4", Offset = "0x141F8A4", VA = "0x141F8A4")]
	public void CopyTo(AkMusicSettings settings)
	{
	}

	[Token(Token = "0x600183E")]
	[Address(RVA = "0x141F880", Offset = "0x141F880", VA = "0x141F880")]
	public void CopyTo(AkStreamMgrSettings settings)
	{
	}

	[Token(Token = "0x600183F")]
	[Address(RVA = "0x141FB48", Offset = "0x141FB48", VA = "0x141FB48", Slot = "6")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x6001840")]
	[Address(RVA = "0x141FB4C", Offset = "0x141FB4C", VA = "0x141FB4C", Slot = "7")]
	public virtual void CopyTo(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x6001841")]
	[Address(RVA = "0x141FBB0", Offset = "0x141FBB0", VA = "0x141FBB0", Slot = "8")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}

	[Token(Token = "0x6001842")]
	[Address(RVA = "0x141FC34", Offset = "0x141FC34", VA = "0x141FC34", Slot = "9")]
	public virtual void CopyTo(AkUnityPlatformSpecificSettings settings)
	{
	}

	[Token(Token = "0x6001843")]
	[Address(RVA = "0x141FC38", Offset = "0x141FC38", VA = "0x141FC38", Slot = "4")]
	public override void Validate()
	{
	}

	[Token(Token = "0x6001844")]
	[Address(RVA = "0x1412C58", Offset = "0x1412C58", VA = "0x1412C58")]
	public AkCommonUserSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000331")]
public class AkCommonAdvancedSettings : AkSettingsValidationHandler
{
	[Serializable]
	[Token(Token = "0x20006B0")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE7AD4", Offset = "0xBE7AD4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE7AD4", Offset = "0xBE7AD4")]
		public float m_DiffractionShadowAttenuationFactor;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE7B28", Offset = "0xBE7B28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE7B28", Offset = "0xBE7B28")]
		public float m_DiffractionShadowDegrees;

		[Token(Token = "0x6002692")]
		[Address(RVA = "0x141F0CC", Offset = "0x141F0CC", VA = "0x141F0CC")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x4001562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2B58", Offset = "0xBE2B58")]
	public uint m_IOMemorySize;

	[Token(Token = "0x4001563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2B90", Offset = "0xBE2B90")]
	public float m_TargetAutoStreamBufferLengthMs;

	[Token(Token = "0x4001564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2BC8", Offset = "0xBE2BC8")]
	public bool m_UseStreamCache;

	[Token(Token = "0x4001565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2C00", Offset = "0xBE2C00")]
	public uint m_MaximumPinnedBytesInCache;

	[Token(Token = "0x4001566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2C38", Offset = "0xBE2C38")]
	public int m_PrepareEventMemoryPoolID;

	[Token(Token = "0x4001567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2C70", Offset = "0xBE2C70")]
	public bool m_EnableGameSyncPreparation;

	[Token(Token = "0x4001568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2CA8", Offset = "0xBE2CA8")]
	public uint m_ContinuousPlaybackLookAhead;

	[Token(Token = "0x4001569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2CE0", Offset = "0xBE2CE0")]
	public uint m_MonitorPoolSize;

	[Token(Token = "0x400156A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2D18", Offset = "0xBE2D18")]
	public uint m_MonitorQueuePoolSize;

	[Token(Token = "0x400156B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2D50", Offset = "0xBE2D50")]
	public uint m_MaximumHardwareTimeoutMs;

	[Token(Token = "0x400156C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2D88", Offset = "0xBE2D88")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x400156D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2DC0", Offset = "0xBE2DC0")]
	public bool m_RenderDuringFocusLoss;

	[Token(Token = "0x6001845")]
	[Address(RVA = "0x141ECB4", Offset = "0x141ECB4", VA = "0x141ECB4", Slot = "5")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x6001846")]
	[Address(RVA = "0x141EEF8", Offset = "0x141EEF8", VA = "0x141EEF8", Slot = "6")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x6001847")]
	[Address(RVA = "0x141EF7C", Offset = "0x141EF7C", VA = "0x141EF7C", Slot = "7")]
	public virtual void CopyTo(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x6001848")]
	[Address(RVA = "0x141EF80", Offset = "0x141EF80", VA = "0x141EF80", Slot = "8")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}

	[Token(Token = "0x6001849")]
	[Address(RVA = "0x141EFD4", Offset = "0x141EFD4", VA = "0x141EFD4", Slot = "9")]
	public virtual void CopyTo(AkUnityPlatformSpecificSettings settings)
	{
	}

	[Token(Token = "0x600184A")]
	[Address(RVA = "0x141EFD8", Offset = "0x141EFD8", VA = "0x141EFD8", Slot = "4")]
	public override void Validate()
	{
	}

	[Token(Token = "0x600184B")]
	[Address(RVA = "0x1412E7C", Offset = "0x1412E7C", VA = "0x1412E7C")]
	public AkCommonAdvancedSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000332")]
public class AkCommonCommSettings : AkSettingsValidationHandler
{
	[Token(Token = "0x400156E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2DF8", Offset = "0xBE2DF8")]
	public uint m_PoolSize;

	[Token(Token = "0x400156F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ushort DefaultDiscoveryBroadcastPort;

	[Token(Token = "0x4001570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2E30", Offset = "0xBE2E30")]
	public ushort m_DiscoveryBroadcastPort;

	[Token(Token = "0x4001571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2E68", Offset = "0xBE2E68")]
	public ushort m_CommandPort;

	[Token(Token = "0x4001572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2EA0", Offset = "0xBE2EA0")]
	public ushort m_NotificationPort;

	[Token(Token = "0x4001573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2ED8", Offset = "0xBE2ED8")]
	public bool m_InitializeSystemComms;

	[Token(Token = "0x4001574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE2F10", Offset = "0xBE2F10")]
	public string m_NetworkName;

	[Token(Token = "0x600184C")]
	[Address(RVA = "0x141F0E0", Offset = "0x141F0E0", VA = "0x141F0E0", Slot = "5")]
	public virtual void CopyTo(AkCommunicationSettings settings)
	{
	}

	[Token(Token = "0x600184D")]
	[Address(RVA = "0x141F454", Offset = "0x141F454", VA = "0x141F454")]
	public AkCommonCommSettings()
	{
	}
}
[Token(Token = "0x2000333")]
public abstract class AkCommonPlatformSettings : AkBasePlatformSettings
{
	[Token(Token = "0x170001C0")]
	public override AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x6001852")]
		[Address(RVA = "0x141F690", Offset = "0x141F690", VA = "0x141F690", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C1")]
	public override AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x6001853")]
		[Address(RVA = "0x141F8C4", Offset = "0x141F8C4", VA = "0x141F8C4", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C2")]
	public override AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x6001854")]
		[Address(RVA = "0x141F938", Offset = "0x141F938", VA = "0x141F938", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C3")]
	public override string InitialLanguage
	{
		[Token(Token = "0x6001855")]
		[Address(RVA = "0x141F9C8", Offset = "0x141F9C8", VA = "0x141F9C8", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C4")]
	public override bool RenderDuringFocusLoss
	{
		[Token(Token = "0x6001856")]
		[Address(RVA = "0x141F9F0", Offset = "0x141F9F0", VA = "0x141F9F0", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C5")]
	public override string SoundbankPath
	{
		[Token(Token = "0x6001857")]
		[Address(RVA = "0x141FA18", Offset = "0x141FA18", VA = "0x141FA18", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C6")]
	public override AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x6001858")]
		[Address(RVA = "0x141FA40", Offset = "0x141FA40", VA = "0x141FA40", Slot = "10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600184F")]
	protected abstract AkCommonUserSettings GetUserSettings();

	[Token(Token = "0x6001850")]
	protected abstract AkCommonAdvancedSettings GetAdvancedSettings();

	[Token(Token = "0x6001851")]
	protected abstract AkCommonCommSettings GetCommsSettings();

	[Token(Token = "0x6001859")]
	[Address(RVA = "0x141FA94", Offset = "0x141FA94", VA = "0x141FA94")]
	protected AkCommonPlatformSettings()
	{
	}
}
[Token(Token = "0x2000334")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xBD2C90", Offset = "0xBD2C90")]
public class AkEnumFlagAttribute : PropertyAttribute
{
	[Token(Token = "0x4001575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Type Type;

	[Token(Token = "0x600185A")]
	[Address(RVA = "0x18C3AA4", Offset = "0x18C3AA4", VA = "0x18C3AA4")]
	public AkEnumFlagAttribute(Type type)
	{
	}
}
[Token(Token = "0x2000335")]
public class AkLogger
{
	[Token(Token = "0x20006B1")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBD8800", Offset = "0xBD8800")]
	public delegate void ErrorLoggerInteropDelegate(string message);

	[Token(Token = "0x4001576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkLogger ms_Instance;

	[Token(Token = "0x4001577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ErrorLoggerInteropDelegate errorLoggerDelegate;

	[Token(Token = "0x170001C7")]
	public static AkLogger Instance
	{
		[Token(Token = "0x600185C")]
		[Address(RVA = "0x18CCDA8", Offset = "0x18CCDA8", VA = "0x18CCDA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600185B")]
	[Address(RVA = "0x18CCC6C", Offset = "0x18CCC6C", VA = "0x18CCC6C")]
	private AkLogger()
	{
	}

	[Token(Token = "0x600185D")]
	[Address(RVA = "0x18CCE10", Offset = "0x18CCE10", VA = "0x18CCE10", Slot = "1")]
	~AkLogger()
	{
	}

	[Token(Token = "0x600185E")]
	[Address(RVA = "0x18CCF30", Offset = "0x18CCF30", VA = "0x18CCF30")]
	public void Init()
	{
	}

	[Token(Token = "0x600185F")]
	[Address(RVA = "0x18CCBE4", Offset = "0x18CCBE4", VA = "0x18CCBE4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBEABE4", Offset = "0xBEABE4")]
	public static void WwiseInternalLogError(string message)
	{
	}

	[Token(Token = "0x6001860")]
	[Address(RVA = "0x18CCF34", Offset = "0x18CCF34", VA = "0x18CCF34")]
	public static void Message(string message)
	{
	}

	[Token(Token = "0x6001861")]
	[Address(RVA = "0x18CCFBC", Offset = "0x18CCFBC", VA = "0x18CCFBC")]
	public static void Warning(string message)
	{
	}

	[Token(Token = "0x6001862")]
	[Address(RVA = "0x18CD044", Offset = "0x18CD044", VA = "0x18CD044")]
	public static void Error(string message)
	{
	}
}
[Token(Token = "0x2000336")]
public static class AkRoomPortalManager
{
	[Token(Token = "0x4001578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<AkRoom> m_UpdatedRooms;

	[Token(Token = "0x4001579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly List<AkRoomPortal> m_Portals;

	[Token(Token = "0x400157A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly List<AkRoomPortal> m_PortalsToUpdate;

	[Token(Token = "0x6001864")]
	[Address(RVA = "0xFE3120", Offset = "0xFE3120", VA = "0xFE3120")]
	public static void RegisterPortal(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x6001865")]
	[Address(RVA = "0xFE3388", Offset = "0xFE3388", VA = "0xFE3388")]
	public static void UnregisterPortal(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x6001866")]
	[Address(RVA = "0xFE24A0", Offset = "0xFE24A0", VA = "0xFE24A0")]
	public static void RegisterPortalUpdate(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x6001867")]
	[Address(RVA = "0xFE0A98", Offset = "0xFE0A98", VA = "0xFE0A98")]
	public static void RegisterRoomUpdate(AkRoom room)
	{
	}

	[Token(Token = "0x6001868")]
	[Address(RVA = "0xFE3998", Offset = "0xFE3998", VA = "0xFE3998")]
	public static void UpdatePortals()
	{
	}
}
[Token(Token = "0x2000337")]
public class AkShowOnlyAttribute : PropertyAttribute
{
	[Token(Token = "0x600186A")]
	[Address(RVA = "0xFE5B48", Offset = "0xFE5B48", VA = "0xFE5B48")]
	public AkShowOnlyAttribute()
	{
	}
}
[Token(Token = "0x2000338")]
public class AkUtilities
{
	[Token(Token = "0x20006B2")]
	public class ShortIDGenerator
	{
		[Token(Token = "0x40020CE")]
		private const uint s_prime32 = 16777619u;

		[Token(Token = "0x40020CF")]
		private const uint s_offsetBasis32 = 2166136261u;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte s_hashSize;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static uint s_mask;

		[Token(Token = "0x170003AE")]
		public static byte HashSize
		{
			[Token(Token = "0x6002698")]
			[Address(RVA = "0x1116EC0", Offset = "0x1116EC0", VA = "0x1116EC0")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002699")]
			[Address(RVA = "0x1116E38", Offset = "0x1116E38", VA = "0x1116E38")]
			set
			{
			}
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0x1116E30", Offset = "0x1116E30", VA = "0x1116E30")]
		static ShortIDGenerator()
		{
		}

		[Token(Token = "0x600269A")]
		[Address(RVA = "0x11154D8", Offset = "0x11154D8", VA = "0x11154D8")]
		public static uint Compute(string in_name)
		{
			return default(uint);
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0x1116F28", Offset = "0x1116F28", VA = "0x1116F28")]
		public ShortIDGenerator()
		{
		}
	}

	[Token(Token = "0x600186B")]
	[Address(RVA = "0x1116E28", Offset = "0x1116E28", VA = "0x1116E28")]
	public AkUtilities()
	{
	}
}
[Token(Token = "0x2000339")]
public class AkWwiseInitializationSettings : AkCommonPlatformSettings
{
	[Token(Token = "0x20006B3")]
	public abstract class PlatformSettings : AkCommonPlatformSettings
	{
		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private List<string> IgnorePropertyNameList;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private List<string> GlobalPropertyNameList;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<string> _GlobalPropertyHashSet;

		[Token(Token = "0x170003AF")]
		public HashSet<string> GlobalPropertyHashSet
		{
			[Token(Token = "0x60026A2")]
			[Address(RVA = "0x111A034", Offset = "0x111A034", VA = "0x111A034")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026A3")]
			[Address(RVA = "0x111A0C8", Offset = "0x111A0C8", VA = "0x111A0C8")]
			set
			{
			}
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0x1119B48", Offset = "0x1119B48", VA = "0x1119B48")]
		public void IgnorePropertyValue(string propertyPath)
		{
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0x1119BE0", Offset = "0x1119BE0", VA = "0x1119BE0")]
		public bool IsPropertyIgnored(string propertyPath)
		{
			return default(bool);
		}

		[Token(Token = "0x600269E")]
		[Address(RVA = "0x1117D00", Offset = "0x1117D00", VA = "0x1117D00")]
		protected PlatformSettings()
		{
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0x1119C48", Offset = "0x1119C48", VA = "0x1119C48")]
		public void SetUseGlobalPropertyValue(string propertyPath, bool use)
		{
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0x1119D04", Offset = "0x1119D04", VA = "0x1119D04")]
		public void SetGlobalPropertyValues(IEnumerable enumerable)
		{
		}

		[Token(Token = "0x60026A1")]
		[Address(RVA = "0x1119FCC", Offset = "0x1119FCC", VA = "0x1119FCC")]
		private bool IsUsingGlobalPropertyValue(string propertyPath)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20006B4")]
	public class CommonPlatformSettings : PlatformSettings
	{
		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public AkCommonUserSettings UserSettings;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public AkCommonAdvancedSettings AdvancedSettings;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public AkCommonCommSettings CommsSettings;

		[Token(Token = "0x60026A4")]
		[Address(RVA = "0x1119B2C", Offset = "0x1119B2C", VA = "0x1119B2C", Slot = "11")]
		protected override AkCommonUserSettings GetUserSettings()
		{
			return null;
		}

		[Token(Token = "0x60026A5")]
		[Address(RVA = "0x1119B34", Offset = "0x1119B34", VA = "0x1119B34", Slot = "12")]
		protected override AkCommonAdvancedSettings GetAdvancedSettings()
		{
			return null;
		}

		[Token(Token = "0x60026A6")]
		[Address(RVA = "0x1119B3C", Offset = "0x1119B3C", VA = "0x1119B3C", Slot = "13")]
		protected override AkCommonCommSettings GetCommsSettings()
		{
			return null;
		}

		[Token(Token = "0x60026A7")]
		[Address(RVA = "0x1119B44", Offset = "0x1119B44", VA = "0x1119B44")]
		public CommonPlatformSettings()
		{
		}
	}

	[Token(Token = "0x400157B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public List<string> PlatformSettingsNameList;

	[Token(Token = "0x400157C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<PlatformSettings> PlatformSettingsList;

	[Token(Token = "0x400157D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public List<string> InvalidReferencePlatforms;

	[Token(Token = "0x400157E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x400157F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public AkCommonAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4001580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x4001581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] AllGlobalValues;

	[Token(Token = "0x4001582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AkWwiseInitializationSettings m_Instance;

	[Token(Token = "0x4001583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static AkBasePlatformSettings m_ActivePlatformSettings;

	[Token(Token = "0x170001C8")]
	public bool IsValid
	{
		[Token(Token = "0x600186C")]
		[Address(RVA = "0x1117DF8", Offset = "0x1117DF8", VA = "0x1117DF8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C9")]
	public int Count
	{
		[Token(Token = "0x600186D")]
		[Address(RVA = "0x1117E5C", Offset = "0x1117E5C", VA = "0x1117E5C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001CA")]
	public static AkWwiseInitializationSettings Instance
	{
		[Token(Token = "0x6001871")]
		[Address(RVA = "0x1117EC4", Offset = "0x1117EC4", VA = "0x1117EC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CB")]
	public static AkBasePlatformSettings ActivePlatformSettings
	{
		[Token(Token = "0x6001873")]
		[Address(RVA = "0x11181B0", Offset = "0x11181B0", VA = "0x11181B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600186E")]
	[Address(RVA = "0x1117EAC", Offset = "0x1117EAC", VA = "0x1117EAC", Slot = "11")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x600186F")]
	[Address(RVA = "0x1117EB4", Offset = "0x1117EB4", VA = "0x1117EB4", Slot = "12")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6001870")]
	[Address(RVA = "0x1117EBC", Offset = "0x1117EBC", VA = "0x1117EBC", Slot = "13")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}

	[Token(Token = "0x6001872")]
	[Address(RVA = "0x1118000", Offset = "0x1118000", VA = "0x1118000")]
	private static AkBasePlatformSettings GetPlatformSettings(string platformName)
	{
		return null;
	}

	[Token(Token = "0x6001874")]
	[Address(RVA = "0x11182DC", Offset = "0x11182DC", VA = "0x11182DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001875")]
	[Address(RVA = "0x1118450", Offset = "0x1118450", VA = "0x1118450")]
	public static bool InitializeSoundEngine()
	{
		return default(bool);
	}

	[Token(Token = "0x6001876")]
	[Address(RVA = "0x1118934", Offset = "0x1118934", VA = "0x1118934")]
	public static bool ResetSoundEngine(bool isPlaying)
	{
		return default(bool);
	}

	[Token(Token = "0x6001877")]
	[Address(RVA = "0x1118A3C", Offset = "0x1118A3C", VA = "0x1118A3C")]
	public static void TerminateSoundEngine()
	{
	}

	[Token(Token = "0x6001878")]
	[Address(RVA = "0x1118BF0", Offset = "0x1118BF0", VA = "0x1118BF0")]
	private static void SleepForMilliseconds(double milliseconds)
	{
	}

	[Token(Token = "0x6001879")]
	[Address(RVA = "0x1118D5C", Offset = "0x1118D5C", VA = "0x1118D5C")]
	public AkWwiseInitializationSettings()
	{
	}
}
[Token(Token = "0x200033A")]
public class AkAcousticSurfaceArray : AkBaseArray<AkAcousticSurface>
{
	[Token(Token = "0x170001CC")]
	protected override int StructureSize
	{
		[Token(Token = "0x600187C")]
		[Address(RVA = "0x1411B94", Offset = "0x1411B94", VA = "0x1411B94", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600187B")]
	[Address(RVA = "0x1411B34", Offset = "0x1411B34", VA = "0x1411B34")]
	public AkAcousticSurfaceArray(int count)
	{
	}

	[Token(Token = "0x600187D")]
	[Address(RVA = "0x1411BF4", Offset = "0x1411BF4", VA = "0x1411BF4", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x600187E")]
	[Address(RVA = "0x1411C5C", Offset = "0x1411C5C", VA = "0x1411C5C", Slot = "9")]
	protected override AkAcousticSurface CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x600187F")]
	[Address(RVA = "0x1411CC4", Offset = "0x1411CC4", VA = "0x1411CC4", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkAcousticSurface other)
	{
	}
}
[Token(Token = "0x200033B")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBD2CC8", Offset = "0xBD2CC8")]
public class AkAuxSendArray : IDisposable
{
	[Token(Token = "0x4001584")]
	private const int MAX_COUNT = 4;

	[Token(Token = "0x4001585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly int SIZE_OF_AKAUXSENDVALUE;

	[Token(Token = "0x4001586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Buffer;

	[Token(Token = "0x4001587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_Count;

	[Token(Token = "0x170001CD")]
	public AkAuxSendValue Item
	{
		[Token(Token = "0x6001881")]
		[Address(RVA = "0x1416C24", Offset = "0x1416C24", VA = "0x1416C24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CE")]
	public bool isFull
	{
		[Token(Token = "0x6001882")]
		[Address(RVA = "0x1416D84", Offset = "0x1416D84", VA = "0x1416D84")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001880")]
	[Address(RVA = "0x1416B74", Offset = "0x1416B74", VA = "0x1416B74")]
	public AkAuxSendArray()
	{
	}

	[Token(Token = "0x6001883")]
	[Address(RVA = "0x1416DEC", Offset = "0x1416DEC", VA = "0x1416DEC", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001884")]
	[Address(RVA = "0x1416E78", Offset = "0x1416E78", VA = "0x1416E78", Slot = "1")]
	~AkAuxSendArray()
	{
	}

	[Token(Token = "0x6001885")]
	[Address(RVA = "0x1416EE0", Offset = "0x1416EE0", VA = "0x1416EE0")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001886")]
	[Address(RVA = "0x1416EE8", Offset = "0x1416EE8", VA = "0x1416EE8")]
	public bool Add(GameObject in_listenerGameObj, uint in_AuxBusID, float in_fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6001887")]
	[Address(RVA = "0x1417000", Offset = "0x1417000", VA = "0x1417000")]
	public bool Add(uint in_AuxBusID, float in_fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6001888")]
	[Address(RVA = "0x14170E0", Offset = "0x14170E0", VA = "0x14170E0")]
	public bool Contains(GameObject in_listenerGameObj, uint in_AuxBusID)
	{
		return default(bool);
	}

	[Token(Token = "0x6001889")]
	[Address(RVA = "0x1417220", Offset = "0x1417220", VA = "0x1417220")]
	public bool Contains(uint in_AuxBusID)
	{
		return default(bool);
	}

	[Token(Token = "0x600188A")]
	[Address(RVA = "0x1417318", Offset = "0x1417318", VA = "0x1417318")]
	public AKRESULT SetValues(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600188B")]
	[Address(RVA = "0x14173D0", Offset = "0x14173D0", VA = "0x14173D0")]
	public AKRESULT GetValues(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600188C")]
	[Address(RVA = "0x1417498", Offset = "0x1417498", VA = "0x1417498")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600188D")]
	[Address(RVA = "0x14174A0", Offset = "0x14174A0", VA = "0x14174A0")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x600188E")]
	[Address(RVA = "0x1416D08", Offset = "0x1416D08", VA = "0x1416D08")]
	private IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x200033C")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBD2D00", Offset = "0xBD2D00")]
public abstract class AkBaseArray<T> : IDisposable
{
	[Token(Token = "0x4001588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2FA8", Offset = "0xBE2FA8")]
	private int <Capacity>k__BackingField;

	[Token(Token = "0x4001589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private IntPtr m_Buffer;

	[Token(Token = "0x170001CF")]
	public int Capacity
	{
		[Token(Token = "0x6001892")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEAC48", Offset = "0xBEAC48")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001893")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEAC58", Offset = "0xBEAC58")]
		private set
		{
		}
	}

	[Token(Token = "0x170001D0")]
	protected abstract int StructureSize
	{
		[Token(Token = "0x6001895")]
		get;
	}

	[Token(Token = "0x170001D1")]
	public T Item
	{
		[Token(Token = "0x600189A")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x600189B")]
		set
		{
		}
	}

	[Token(Token = "0x600188F")]
	public AkBaseArray(int capacity)
	{
	}

	[Token(Token = "0x6001890")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001891")]
	~AkBaseArray()
	{
	}

	[Token(Token = "0x6001894")]
	public virtual int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6001896")]
	protected virtual void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001897")]
	protected virtual void ReleaseAllocatedMemoryFromReferenceAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001898")]
	protected abstract T CreateNewReferenceFromIntPtr(IntPtr address);

	[Token(Token = "0x6001899")]
	protected abstract void CloneIntoReferenceFromIntPtr(IntPtr address, T other);

	[Token(Token = "0x600189C")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600189D")]
	protected IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x200033D")]
public class AkChannelEmitterArray : IDisposable
{
	[Token(Token = "0x400158A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr m_Buffer;

	[Token(Token = "0x400158B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Current;

	[Token(Token = "0x400158C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private uint m_MaxCount;

	[Token(Token = "0x400158D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2FB8", Offset = "0xBE2FB8")]
	private uint <Count>k__BackingField;

	[Token(Token = "0x170001D2")]
	public uint Count
	{
		[Token(Token = "0x600189F")]
		[Address(RVA = "0x141E7B8", Offset = "0x141E7B8", VA = "0x141E7B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEAC68", Offset = "0xBEAC68")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x141E7C0", Offset = "0x141E7C0", VA = "0x141E7C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEAC78", Offset = "0xBEAC78")]
		private set
		{
		}
	}

	[Token(Token = "0x600189E")]
	[Address(RVA = "0x141E728", Offset = "0x141E728", VA = "0x141E728")]
	public AkChannelEmitterArray(uint in_Count)
	{
	}

	[Token(Token = "0x60018A1")]
	[Address(RVA = "0x141E7C8", Offset = "0x141E7C8", VA = "0x141E7C8", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60018A2")]
	[Address(RVA = "0x141E854", Offset = "0x141E854", VA = "0x141E854", Slot = "1")]
	~AkChannelEmitterArray()
	{
	}

	[Token(Token = "0x60018A3")]
	[Address(RVA = "0x141E8BC", Offset = "0x141E8BC", VA = "0x141E8BC")]
	public void Reset()
	{
	}

	[Token(Token = "0x60018A4")]
	[Address(RVA = "0x141E8CC", Offset = "0x141E8CC", VA = "0x141E8CC")]
	public void Add(Vector3 in_Pos, Vector3 in_Forward, Vector3 in_Top, uint in_ChannelMask)
	{
	}
}
[Token(Token = "0x200033E")]
public class AkDiffractionPathInfoArray : AkBaseArray<AkDiffractionPathInfo>
{
	[Token(Token = "0x170001D3")]
	protected override int StructureSize
	{
		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x1421868", Offset = "0x1421868", VA = "0x1421868", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60018A5")]
	[Address(RVA = "0x1421808", Offset = "0x1421808", VA = "0x1421808")]
	public AkDiffractionPathInfoArray(int count)
	{
	}

	[Token(Token = "0x60018A7")]
	[Address(RVA = "0x14218C8", Offset = "0x14218C8", VA = "0x14218C8", Slot = "9")]
	protected override AkDiffractionPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60018A8")]
	[Address(RVA = "0x1421930", Offset = "0x1421930", VA = "0x1421930", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkDiffractionPathInfo other)
	{
	}
}
[Token(Token = "0x200033F")]
public class AkExternalSourceInfoArray : AkBaseArray<AkExternalSourceInfo>
{
	[Token(Token = "0x170001D4")]
	protected override int StructureSize
	{
		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x18C6E9C", Offset = "0x18C6E9C", VA = "0x18C6E9C", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60018A9")]
	[Address(RVA = "0x18C6E3C", Offset = "0x18C6E3C", VA = "0x18C6E3C")]
	public AkExternalSourceInfoArray(int count)
	{
	}

	[Token(Token = "0x60018AB")]
	[Address(RVA = "0x18C6EFC", Offset = "0x18C6EFC", VA = "0x18C6EFC", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x60018AC")]
	[Address(RVA = "0x18C6F64", Offset = "0x18C6F64", VA = "0x18C6F64", Slot = "8")]
	protected override void ReleaseAllocatedMemoryFromReferenceAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x60018AD")]
	[Address(RVA = "0x18C6FD0", Offset = "0x18C6FD0", VA = "0x18C6FD0", Slot = "9")]
	protected override AkExternalSourceInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60018AE")]
	[Address(RVA = "0x18C7038", Offset = "0x18C7038", VA = "0x18C7038", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkExternalSourceInfo other)
	{
	}
}
[Token(Token = "0x2000340")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBD2D38", Offset = "0xBD2D38")]
public class AkMIDIPostArray
{
	[Token(Token = "0x400158E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly int m_Count;

	[Token(Token = "0x400158F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private readonly int SIZE_OF;

	[Token(Token = "0x4001590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Buffer;

	[Token(Token = "0x170001D5")]
	public AkMIDIPost Item
	{
		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x18D1C74", Offset = "0x18D1C74", VA = "0x18D1C74")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x18D1D90", Offset = "0x18D1D90", VA = "0x18D1D90")]
		set
		{
		}
	}

	[Token(Token = "0x60018AF")]
	[Address(RVA = "0x18D1BB4", Offset = "0x18D1BB4", VA = "0x18D1BB4")]
	public AkMIDIPostArray(int size)
	{
	}

	[Token(Token = "0x60018B2")]
	[Address(RVA = "0x18D1EA4", Offset = "0x18D1EA4", VA = "0x18D1EA4", Slot = "1")]
	~AkMIDIPostArray()
	{
	}

	[Token(Token = "0x60018B3")]
	[Address(RVA = "0x18D1F60", Offset = "0x18D1F60", VA = "0x18D1F60")]
	public void PostOnEvent(uint in_eventID, GameObject gameObject)
	{
	}

	[Token(Token = "0x60018B4")]
	[Address(RVA = "0x18D202C", Offset = "0x18D202C", VA = "0x18D202C")]
	public void PostOnEvent(uint in_eventID, GameObject gameObject, int count)
	{
	}

	[Token(Token = "0x60018B5")]
	[Address(RVA = "0x18D2148", Offset = "0x18D2148", VA = "0x18D2148")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60018B6")]
	[Address(RVA = "0x18D2150", Offset = "0x18D2150", VA = "0x18D2150")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x60018B7")]
	[Address(RVA = "0x18D1D54", Offset = "0x18D1D54", VA = "0x18D1D54")]
	private IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x2000341")]
public class AkObjectInfoArray : AkBaseArray<AkObjectInfo>
{
	[Token(Token = "0x170001D6")]
	protected override int StructureSize
	{
		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x18D5168", Offset = "0x18D5168", VA = "0x18D5168", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60018B8")]
	[Address(RVA = "0x18D5108", Offset = "0x18D5108", VA = "0x18D5108")]
	public AkObjectInfoArray(int count)
	{
	}

	[Token(Token = "0x60018BA")]
	[Address(RVA = "0x18D51C8", Offset = "0x18D51C8", VA = "0x18D51C8", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x60018BB")]
	[Address(RVA = "0x18D5230", Offset = "0x18D5230", VA = "0x18D5230", Slot = "9")]
	protected override AkObjectInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60018BC")]
	[Address(RVA = "0x18D5298", Offset = "0x18D5298", VA = "0x18D5298", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkObjectInfo other)
	{
	}
}
[Token(Token = "0x2000342")]
public class AkObstructionOcclusionValuesArray : AkBaseArray<AkObstructionOcclusionValues>
{
	[Token(Token = "0x170001D7")]
	protected override int StructureSize
	{
		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x18D652C", Offset = "0x18D652C", VA = "0x18D652C", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60018BD")]
	[Address(RVA = "0x18D64CC", Offset = "0x18D64CC", VA = "0x18D64CC")]
	public AkObstructionOcclusionValuesArray(int count)
	{
	}

	[Token(Token = "0x60018BF")]
	[Address(RVA = "0x18D658C", Offset = "0x18D658C", VA = "0x18D658C", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x60018C0")]
	[Address(RVA = "0x18D65F4", Offset = "0x18D65F4", VA = "0x18D65F4", Slot = "9")]
	protected override AkObstructionOcclusionValues CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60018C1")]
	[Address(RVA = "0x18D665C", Offset = "0x18D665C", VA = "0x18D665C", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkObstructionOcclusionValues other)
	{
	}
}
[Token(Token = "0x2000343")]
public class AkPositionArray : IDisposable
{
	[Token(Token = "0x4001591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr m_Buffer;

	[Token(Token = "0x4001592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Current;

	[Token(Token = "0x4001593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private uint m_MaxCount;

	[Token(Token = "0x4001594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2FC8", Offset = "0xBE2FC8")]
	private uint <Count>k__BackingField;

	[Token(Token = "0x170001D8")]
	public uint Count
	{
		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x18DA5F4", Offset = "0x18DA5F4", VA = "0x18DA5F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEAC88", Offset = "0xBEAC88")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x18DA5FC", Offset = "0x18DA5FC", VA = "0x18DA5FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEAC98", Offset = "0xBEAC98")]
		private set
		{
		}
	}

	[Token(Token = "0x60018C2")]
	[Address(RVA = "0x18DA564", Offset = "0x18DA564", VA = "0x18DA564")]
	public AkPositionArray(uint in_Count)
	{
	}

	[Token(Token = "0x60018C5")]
	[Address(RVA = "0x18DA604", Offset = "0x18DA604", VA = "0x18DA604", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60018C6")]
	[Address(RVA = "0x18DA690", Offset = "0x18DA690", VA = "0x18DA690", Slot = "1")]
	~AkPositionArray()
	{
	}

	[Token(Token = "0x60018C7")]
	[Address(RVA = "0x18DA6F8", Offset = "0x18DA6F8", VA = "0x18DA6F8")]
	public void Reset()
	{
	}

	[Token(Token = "0x60018C8")]
	[Address(RVA = "0x18DA708", Offset = "0x18DA708", VA = "0x18DA708")]
	public void Add(Vector3 in_Pos, Vector3 in_Forward, Vector3 in_Top)
	{
	}
}
[Token(Token = "0x2000344")]
public class AkReflectionPathInfoArray : AkBaseArray<AkReflectionPathInfo>
{
	[Token(Token = "0x170001D9")]
	protected override int StructureSize
	{
		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xFDFFD8", Offset = "0xFDFFD8", VA = "0xFDFFD8", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60018C9")]
	[Address(RVA = "0xFDFF78", Offset = "0xFDFF78", VA = "0xFDFF78")]
	public AkReflectionPathInfoArray(int count)
	{
	}

	[Token(Token = "0x60018CB")]
	[Address(RVA = "0xFE0034", Offset = "0xFE0034", VA = "0xFE0034", Slot = "9")]
	protected override AkReflectionPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60018CC")]
	[Address(RVA = "0xFE009C", Offset = "0xFE009C", VA = "0xFE009C", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkReflectionPathInfo other)
	{
	}
}
[Token(Token = "0x2000345")]
public class AkSourceSettingsArray : AkBaseArray<AkSourceSettings>
{
	[Token(Token = "0x170001DA")]
	protected override int StructureSize
	{
		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x111008C", Offset = "0x111008C", VA = "0x111008C", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60018CD")]
	[Address(RVA = "0x111002C", Offset = "0x111002C", VA = "0x111002C")]
	public AkSourceSettingsArray(int count)
	{
	}

	[Token(Token = "0x60018CF")]
	[Address(RVA = "0x11100EC", Offset = "0x11100EC", VA = "0x11100EC", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x60018D0")]
	[Address(RVA = "0x1110154", Offset = "0x1110154", VA = "0x1110154", Slot = "9")]
	protected override AkSourceSettings CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60018D1")]
	[Address(RVA = "0x11101BC", Offset = "0x11101BC", VA = "0x11101BC", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkSourceSettings other)
	{
	}
}
[Token(Token = "0x2000346")]
public class AkTriangleArray : AkBaseArray<AkTriangle>
{
	[Token(Token = "0x170001DB")]
	protected override int StructureSize
	{
		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x1115028", Offset = "0x1115028", VA = "0x1115028", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60018D2")]
	[Address(RVA = "0x1112D3C", Offset = "0x1112D3C", VA = "0x1112D3C")]
	public AkTriangleArray(int count)
	{
	}

	[Token(Token = "0x60018D4")]
	[Address(RVA = "0x1115088", Offset = "0x1115088", VA = "0x1115088", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x60018D5")]
	[Address(RVA = "0x11150F0", Offset = "0x11150F0", VA = "0x11150F0", Slot = "9")]
	protected override AkTriangle CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60018D6")]
	[Address(RVA = "0x1115158", Offset = "0x1115158", VA = "0x1115158", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkTriangle other)
	{
	}
}
[Token(Token = "0x2000347")]
public class AkVertexArray : AkBaseArray<AkVertex>
{
	[Token(Token = "0x170001DC")]
	protected override int StructureSize
	{
		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x1117B10", Offset = "0x1117B10", VA = "0x1117B10", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60018D7")]
	[Address(RVA = "0x1112B68", Offset = "0x1112B68", VA = "0x1112B68")]
	public AkVertexArray(int count)
	{
	}

	[Token(Token = "0x60018D9")]
	[Address(RVA = "0x1117B70", Offset = "0x1117B70", VA = "0x1117B70", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x60018DA")]
	[Address(RVA = "0x1117BD8", Offset = "0x1117BD8", VA = "0x1117BD8", Slot = "9")]
	protected override AkVertex CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60018DB")]
	[Address(RVA = "0x1117C40", Offset = "0x1117C40", VA = "0x1117C40", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkVertex other)
	{
	}
}
[Token(Token = "0x2000348")]
public class WwiseAcousticTextureReference : WwiseObjectReference
{
	[Token(Token = "0x4001595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x170001DD")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xF7B4C8", Offset = "0xF7B4C8", VA = "0xF7B4C8", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x60018DD")]
	[Address(RVA = "0xF7B530", Offset = "0xF7B530", VA = "0xF7B530")]
	public WwiseAcousticTextureReference()
	{
	}
}
[Token(Token = "0x2000349")]
public class WwiseAuxBusReference : WwiseObjectReference
{
	[Token(Token = "0x4001596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x170001DE")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xF7B594", Offset = "0xF7B594", VA = "0xF7B594", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x60018E0")]
	[Address(RVA = "0xF7B5FC", Offset = "0xF7B5FC", VA = "0xF7B5FC")]
	public WwiseAuxBusReference()
	{
	}
}
[Token(Token = "0x200034A")]
public class WwiseBankReference : WwiseObjectReference
{
	[Token(Token = "0x4001597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x170001DF")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xF7B658", Offset = "0xF7B658", VA = "0xF7B658", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x60018E3")]
	[Address(RVA = "0xF7B6C0", Offset = "0xF7B6C0", VA = "0xF7B6C0")]
	public WwiseBankReference()
	{
	}
}
[Token(Token = "0x200034B")]
public class WwiseEventReference : WwiseObjectReference
{
	[Token(Token = "0x4001598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x170001E0")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xF7B71C", Offset = "0xF7B71C", VA = "0xF7B71C", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x60018E6")]
	[Address(RVA = "0xF7B784", Offset = "0xF7B784", VA = "0xF7B784")]
	public WwiseEventReference()
	{
	}
}
[Token(Token = "0x200034C")]
public abstract class WwiseObjectReference : ScriptableObject
{
	[Token(Token = "0x4001599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AkShowOnly]
	[SerializeField]
	private string objectName;

	[Token(Token = "0x400159A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AkShowOnly]
	[SerializeField]
	private uint id;

	[Token(Token = "0x400159B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AkShowOnly]
	[SerializeField]
	private string guid;

	[Token(Token = "0x170001E1")]
	public Guid Guid
	{
		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xF7B8A0", Offset = "0xF7B8A0", VA = "0xF7B8A0")]
		get
		{
			return default(Guid);
		}
	}

	[Token(Token = "0x170001E2")]
	public string ObjectName
	{
		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xF7B944", Offset = "0xF7B944", VA = "0xF7B944")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001E3")]
	public virtual string DisplayName
	{
		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xF7B94C", Offset = "0xF7B94C", VA = "0xF7B94C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001E4")]
	public uint Id
	{
		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xF7B954", Offset = "0xF7B954", VA = "0xF7B954")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170001E5")]
	public abstract WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x60018EC")]
		get;
	}

	[Token(Token = "0x60018ED")]
	[Address(RVA = "0xF7B538", Offset = "0xF7B538", VA = "0xF7B538")]
	protected WwiseObjectReference()
	{
	}
}
[Token(Token = "0x200034D")]
public abstract class WwiseGroupValueObjectReference : WwiseObjectReference
{
	[Token(Token = "0x170001E6")]
	public abstract WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x60018EE")]
		get;
		[Token(Token = "0x60018EF")]
		set;
	}

	[Token(Token = "0x170001E7")]
	public abstract WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x60018F0")]
		get;
	}

	[Token(Token = "0x170001E8")]
	public override string DisplayName
	{
		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xF7B7E0", Offset = "0xF7B7E0", VA = "0xF7B7E0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60018F2")]
	[Address(RVA = "0xF7B898", Offset = "0xF7B898", VA = "0xF7B898")]
	protected WwiseGroupValueObjectReference()
	{
	}
}
[Token(Token = "0x200034E")]
public enum WwiseObjectType
{
	[Token(Token = "0x400159D")]
	None,
	[Token(Token = "0x400159E")]
	AuxBus,
	[Token(Token = "0x400159F")]
	Bus,
	[Token(Token = "0x40015A0")]
	Event,
	[Token(Token = "0x40015A1")]
	Folder,
	[Token(Token = "0x40015A2")]
	PhysicalFolder,
	[Token(Token = "0x40015A3")]
	Project,
	[Token(Token = "0x40015A4")]
	Soundbank,
	[Token(Token = "0x40015A5")]
	State,
	[Token(Token = "0x40015A6")]
	StateGroup,
	[Token(Token = "0x40015A7")]
	Switch,
	[Token(Token = "0x40015A8")]
	SwitchGroup,
	[Token(Token = "0x40015A9")]
	WorkUnit,
	[Token(Token = "0x40015AA")]
	GameParameter,
	[Token(Token = "0x40015AB")]
	Trigger,
	[Token(Token = "0x40015AC")]
	AcousticTexture
}
[Token(Token = "0x200034F")]
public class WwiseRtpcReference : WwiseObjectReference
{
	[Token(Token = "0x40015AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x170001E9")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xF7B95C", Offset = "0xF7B95C", VA = "0xF7B95C", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x60018F4")]
	[Address(RVA = "0xF7B9C4", Offset = "0xF7B9C4", VA = "0xF7B9C4")]
	public WwiseRtpcReference()
	{
	}
}
[Token(Token = "0x2000350")]
public class WwiseStateGroupReference : WwiseObjectReference
{
	[Token(Token = "0x40015AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x170001EA")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xF7BA20", Offset = "0xF7BA20", VA = "0xF7BA20", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x60018F7")]
	[Address(RVA = "0xF7BA88", Offset = "0xF7BA88", VA = "0xF7BA88")]
	public WwiseStateGroupReference()
	{
	}
}
[Token(Token = "0x2000351")]
public class WwiseStateReference : WwiseGroupValueObjectReference
{
	[Token(Token = "0x40015AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x40015B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly WwiseObjectType MyGroupWwiseObjectType;

	[Token(Token = "0x40015B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AkShowOnly]
	[SerializeField]
	private WwiseStateGroupReference WwiseStateGroupReference;

	[Token(Token = "0x170001EB")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xF7BAE4", Offset = "0xF7BAE4", VA = "0xF7BAE4", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x170001EC")]
	public override WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xF7BB4C", Offset = "0xF7BB4C", VA = "0xF7BB4C", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xF7BB54", Offset = "0xF7BB54", VA = "0xF7BB54", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x170001ED")]
	public override WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xF7BBE8", Offset = "0xF7BBE8", VA = "0xF7BBE8", Slot = "8")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x60018FD")]
	[Address(RVA = "0xF7BC50", Offset = "0xF7BC50", VA = "0xF7BC50")]
	public WwiseStateReference()
	{
	}
}
[Token(Token = "0x2000352")]
public class WwiseSwitchGroupReference : WwiseObjectReference
{
	[Token(Token = "0x40015B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x170001EE")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xF7BCBC", Offset = "0xF7BCBC", VA = "0xF7BCBC", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001900")]
	[Address(RVA = "0xF7BD24", Offset = "0xF7BD24", VA = "0xF7BD24")]
	public WwiseSwitchGroupReference()
	{
	}
}
[Token(Token = "0x2000353")]
public class WwiseSwitchReference : WwiseGroupValueObjectReference
{
	[Token(Token = "0x40015B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x40015B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly WwiseObjectType MyGroupWwiseObjectType;

	[Token(Token = "0x40015B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AkShowOnly]
	[SerializeField]
	private WwiseSwitchGroupReference WwiseSwitchGroupReference;

	[Token(Token = "0x170001EF")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001902")]
		[Address(RVA = "0xF7BD80", Offset = "0xF7BD80", VA = "0xF7BD80", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x170001F0")]
	public override WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x6001903")]
		[Address(RVA = "0xF7BDE8", Offset = "0xF7BDE8", VA = "0xF7BDE8", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001904")]
		[Address(RVA = "0xF7BDF0", Offset = "0xF7BDF0", VA = "0xF7BDF0", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x170001F1")]
	public override WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x6001905")]
		[Address(RVA = "0xF7BE84", Offset = "0xF7BE84", VA = "0xF7BE84", Slot = "8")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001906")]
	[Address(RVA = "0xF7BEEC", Offset = "0xF7BEEC", VA = "0xF7BEEC")]
	public WwiseSwitchReference()
	{
	}
}
[Token(Token = "0x2000354")]
public class WwiseTriggerReference : WwiseObjectReference
{
	[Token(Token = "0x40015B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x170001F2")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001908")]
		[Address(RVA = "0xF7BF58", Offset = "0xF7BF58", VA = "0xF7BF58", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001909")]
	[Address(RVA = "0xF7BFC0", Offset = "0xF7BFC0", VA = "0xF7BFC0")]
	public WwiseTriggerReference()
	{
	}
}
[Token(Token = "0x2000355")]
public class AkMacSettings : AkWwiseInitializationSettings.CommonPlatformSettings
{
	[Token(Token = "0x600190B")]
	[Address(RVA = "0x18D2158", Offset = "0x18D2158", VA = "0x18D2158")]
	public AkMacSettings()
	{
	}
}
[Token(Token = "0x2000356")]
public class AkWindowsSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x20006B5")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x2000717")]
		public enum AudioAPI
		{
			[Token(Token = "0x400227E")]
			None = 0,
			[Token(Token = "0x400227F")]
			Wasapi = 1,
			[Token(Token = "0x4002280")]
			XAudio2 = 2,
			[Token(Token = "0x4002281")]
			DirectSound = 4,
			[Token(Token = "0x4002282")]
			Default = -1
		}

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE7C24", Offset = "0xBE7C24")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0xBE7C24", Offset = "0xBE7C24")]
		public AudioAPI m_AudioAPI;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE7CAC", Offset = "0xBE7CAC")]
		public bool m_GlobalFocus;

		[Token(Token = "0x60026A8")]
		[Address(RVA = "0x1117DDC", Offset = "0x1117DDC", VA = "0x1117DDC", Slot = "7")]
		public override void CopyTo(AkPlatformInitSettings settings)
		{
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0x1117DE0", Offset = "0x1117DE0", VA = "0x1117DE0")]
		public PlatformAdvancedSettings()
		{
		}
	}

	[Token(Token = "0x40015B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x40015B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x40015B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x600190C")]
	[Address(RVA = "0x1117CE4", Offset = "0x1117CE4", VA = "0x1117CE4", Slot = "11")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x600190D")]
	[Address(RVA = "0x1117CEC", Offset = "0x1117CEC", VA = "0x1117CEC", Slot = "12")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x600190E")]
	[Address(RVA = "0x1117CF4", Offset = "0x1117CF4", VA = "0x1117CF4", Slot = "13")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}

	[Token(Token = "0x600190F")]
	[Address(RVA = "0x1117CFC", Offset = "0x1117CFC", VA = "0x1117CFC")]
	public AkWindowsSettings()
	{
	}
}
[Token(Token = "0x2000357")]
public enum MultiPositionTypeLabel
{
	[Token(Token = "0x40015BB")]
	Simple_Mode,
	[Token(Token = "0x40015BC")]
	Large_Mode,
	[Token(Token = "0x40015BD")]
	MultiPosition_Mode
}
[Token(Token = "0x2000358")]
public class AkMultiPosEvent
{
	[Token(Token = "0x40015BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool eventIsPlaying;

	[Token(Token = "0x40015BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AkAmbient> list;

	[Token(Token = "0x6001910")]
	[Address(RVA = "0x18D3800", Offset = "0x18D3800", VA = "0x18D3800")]
	public void FinishedPlaying(object in_cookie, AkCallbackType in_type, object in_info)
	{
	}

	[Token(Token = "0x6001911")]
	[Address(RVA = "0x18D3808", Offset = "0x18D3808", VA = "0x18D3808")]
	public AkMultiPosEvent()
	{
	}
}
[Token(Token = "0x2000359")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD2D70", Offset = "0xBD2D70")]
public class AkAmbient : AkEvent
{
	[Token(Token = "0x40015C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<uint, AkMultiPosEvent> multiPosEventTree;

	[Token(Token = "0x40015C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AkMultiPositionType MultiPositionType;

	[Token(Token = "0x40015C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public MultiPositionTypeLabel multiPositionTypeLabel;

	[Token(Token = "0x40015C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AkAmbientLargeModePositioner[] LargeModePositions;

	[Token(Token = "0x40015C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	[SerializeField]
	public List<Vector3> multiPositionArray;

	[Token(Token = "0x6001912")]
	[Address(RVA = "0x1411D68", Offset = "0x1411D68", VA = "0x1411D68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001913")]
	[Address(RVA = "0x14121CC", Offset = "0x14121CC", VA = "0x14121CC", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001914")]
	[Address(RVA = "0x14125F8", Offset = "0x14125F8", VA = "0x14125F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001915")]
	[Address(RVA = "0x14127C0", Offset = "0x14127C0", VA = "0x14127C0", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001916")]
	[Address(RVA = "0x14129A8", Offset = "0x14129A8", VA = "0x14129A8")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001917")]
	[Address(RVA = "0x141200C", Offset = "0x141200C", VA = "0x141200C")]
	public AkPositionArray BuildMultiDirectionArray(AkMultiPosEvent eventPosList)
	{
		return null;
	}

	[Token(Token = "0x6001918")]
	[Address(RVA = "0x141237C", Offset = "0x141237C", VA = "0x141237C")]
	private AkPositionArray BuildAkPositionArray()
	{
		return null;
	}

	[Token(Token = "0x6001919")]
	[Address(RVA = "0x1412A84", Offset = "0x1412A84", VA = "0x1412A84")]
	public AkAmbient()
	{
	}
}
[Token(Token = "0x200035A")]
public class AkAmbientLargeModePositioner : MonoBehaviour
{
	[Token(Token = "0x170001F3")]
	public Vector3 Position
	{
		[Token(Token = "0x600191B")]
		[Address(RVA = "0x1412A18", Offset = "0x1412A18", VA = "0x1412A18")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001F4")]
	public Vector3 Forward
	{
		[Token(Token = "0x600191C")]
		[Address(RVA = "0x1412A3C", Offset = "0x1412A3C", VA = "0x1412A3C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001F5")]
	public Vector3 Up
	{
		[Token(Token = "0x600191D")]
		[Address(RVA = "0x1412A60", Offset = "0x1412A60", VA = "0x1412A60")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x600191E")]
	[Address(RVA = "0x1412B0C", Offset = "0x1412B0C", VA = "0x1412B0C")]
	public AkAmbientLargeModePositioner()
	{
	}
}
[Token(Token = "0x200035B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD2DA8", Offset = "0xBD2DA8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD2DA8", Offset = "0xBD2DA8")]
[DisallowMultipleComponent]
public class AkAudioListener : MonoBehaviour
{
	[Token(Token = "0x20006B6")]
	public class BaseListenerList
	{
		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<ulong> listenerIdList;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<AkAudioListener> listenerList;

		[Token(Token = "0x170003B0")]
		public List<AkAudioListener> ListenerList
		{
			[Token(Token = "0x60026AA")]
			[Address(RVA = "0x1415EB8", Offset = "0x1415EB8", VA = "0x1415EB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026AB")]
		[Address(RVA = "0x1415EC0", Offset = "0x1415EC0", VA = "0x1415EC0", Slot = "4")]
		public virtual bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x60026AC")]
		[Address(RVA = "0x1415FB0", Offset = "0x1415FB0", VA = "0x1415FB0", Slot = "5")]
		public virtual bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x60026AD")]
		[Address(RVA = "0x14160A0", Offset = "0x14160A0", VA = "0x14160A0")]
		public ulong[] GetListenerIds()
		{
			return null;
		}

		[Token(Token = "0x60026AE")]
		[Address(RVA = "0x14160F8", Offset = "0x14160F8", VA = "0x14160F8")]
		public BaseListenerList()
		{
		}
	}

	[Token(Token = "0x20006B7")]
	public class DefaultListenerList : BaseListenerList
	{
		[Token(Token = "0x60026AF")]
		[Address(RVA = "0x14161A8", Offset = "0x14161A8", VA = "0x14161A8", Slot = "4")]
		public override bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B0")]
		[Address(RVA = "0x141627C", Offset = "0x141627C", VA = "0x141627C", Slot = "5")]
		public override bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B1")]
		[Address(RVA = "0x1415EB4", Offset = "0x1415EB4", VA = "0x1415EB4")]
		public DefaultListenerList()
		{
		}
	}

	[Token(Token = "0x40015C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly DefaultListenerList defaultListeners;

	[Token(Token = "0x40015C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong akGameObjectID;

	[Token(Token = "0x40015C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<AkGameObj> EmittersToStartListeningTo;

	[Token(Token = "0x40015C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<AkGameObj> EmittersToStopListeningTo;

	[Token(Token = "0x40015C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isDefaultListener;

	[Token(Token = "0x40015CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	public int listenerId;

	[Token(Token = "0x170001F6")]
	public static DefaultListenerList DefaultListeners
	{
		[Token(Token = "0x600191F")]
		[Address(RVA = "0x141564C", Offset = "0x141564C", VA = "0x141564C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001920")]
	[Address(RVA = "0x14156B4", Offset = "0x14156B4", VA = "0x14156B4")]
	public void StartListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x6001921")]
	[Address(RVA = "0x1415738", Offset = "0x1415738", VA = "0x1415738")]
	public void StopListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x6001922")]
	[Address(RVA = "0x14157BC", Offset = "0x14157BC", VA = "0x14157BC")]
	public void SetIsDefaultListener(bool isDefault)
	{
	}

	[Token(Token = "0x6001923")]
	[Address(RVA = "0x141591C", Offset = "0x141591C", VA = "0x141591C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001924")]
	[Address(RVA = "0x1415A00", Offset = "0x1415A00", VA = "0x1415A00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001925")]
	[Address(RVA = "0x1415ADC", Offset = "0x1415ADC", VA = "0x1415ADC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001926")]
	[Address(RVA = "0x1415BB8", Offset = "0x1415BB8", VA = "0x1415BB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001927")]
	[Address(RVA = "0x1415CC4", Offset = "0x1415CC4", VA = "0x1415CC4")]
	public ulong GetAkGameObjectID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6001928")]
	[Address(RVA = "0x1415CCC", Offset = "0x1415CCC", VA = "0x1415CCC")]
	public void Migrate14()
	{
	}

	[Token(Token = "0x6001929")]
	[Address(RVA = "0x1415D90", Offset = "0x1415D90", VA = "0x1415D90")]
	public AkAudioListener()
	{
	}
}
[Token(Token = "0x200035C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD2E40", Offset = "0xBD2E40")]
[ExecuteInEditMode]
public class AkBank : AkTriggerHandler
{
	[Token(Token = "0x40015CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Bank data;

	[Token(Token = "0x40015CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool decodeBank;

	[Token(Token = "0x40015CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool loadAsynchronous;

	[Token(Token = "0x40015CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool saveDecodedBank;

	[Token(Token = "0x40015CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<int> unloadTriggerList;

	[Token(Token = "0x40015D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBE3168", Offset = "0xBE3168")]
	private string bankNameInternal;

	[Token(Token = "0x40015D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBE31C4", Offset = "0xBE31C4")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x170001F7")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBED8F4", Offset = "0xBED8F4")]
	public string bankName
	{
		[Token(Token = "0x6001930")]
		[Address(RVA = "0x1417E18", Offset = "0x1417E18", VA = "0x1417E18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBED92C", Offset = "0xBED92C")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6001931")]
		[Address(RVA = "0x1417E88", Offset = "0x1417E88", VA = "0x1417E88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600192B")]
	[Address(RVA = "0x1417B88", Offset = "0x1417B88", VA = "0x1417B88", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600192C")]
	[Address(RVA = "0x1417C78", Offset = "0x1417C78", VA = "0x1417C78", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600192D")]
	[Address(RVA = "0x1417D00", Offset = "0x1417D00", VA = "0x1417D00", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x600192E")]
	[Address(RVA = "0x1417C60", Offset = "0x1417C60", VA = "0x1417C60")]
	public void UnloadBank(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x600192F")]
	[Address(RVA = "0x1417D40", Offset = "0x1417D40", VA = "0x1417D40", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6001932")]
	[Address(RVA = "0x1417F4C", Offset = "0x1417F4C", VA = "0x1417F4C")]
	public AkBank()
	{
	}
}
[Token(Token = "0x200035D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD2E8C", Offset = "0xBD2E8C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD2E8C", Offset = "0xBD2E8C")]
public class AkEmitterObstructionOcclusion : AkObstructionOcclusion
{
	[Token(Token = "0x40015D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AkGameObj m_gameObj;

	[Token(Token = "0x6001933")]
	[Address(RVA = "0x14223C0", Offset = "0x14223C0", VA = "0x14223C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001934")]
	[Address(RVA = "0x142242C", Offset = "0x142242C", VA = "0x142242C", Slot = "4")]
	protected override void UpdateObstructionOcclusionValuesForListeners()
	{
	}

	[Token(Token = "0x6001935")]
	[Address(RVA = "0x1422594", Offset = "0x1422594", VA = "0x1422594", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}

	[Token(Token = "0x6001936")]
	[Address(RVA = "0x14226CC", Offset = "0x14226CC", VA = "0x14226CC")]
	public AkEmitterObstructionOcclusion()
	{
	}
}
[Token(Token = "0x200035E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD2F14", Offset = "0xBD2F14")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD2F14", Offset = "0xBD2F14")]
[ExecuteInEditMode]
public class AkEnvironment : MonoBehaviour
{
	[Token(Token = "0x20006B8")]
	public class AkEnvironment_CompareByPriority : IComparer<AkEnvironment>
	{
		[Token(Token = "0x60026B2")]
		[Address(RVA = "0x18C3D70", Offset = "0x18C3D70", VA = "0x18C3D70", Slot = "5")]
		public virtual int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}

		[Token(Token = "0x60026B3")]
		[Address(RVA = "0x18C3D60", Offset = "0x18C3D60", VA = "0x18C3D60")]
		public AkEnvironment_CompareByPriority()
		{
		}
	}

	[Token(Token = "0x20006B9")]
	public class AkEnvironment_CompareBySelectionAlgorithm : AkEnvironment_CompareByPriority
	{
		[Token(Token = "0x60026B4")]
		[Address(RVA = "0x18C3E10", Offset = "0x18C3E10", VA = "0x18C3E10", Slot = "5")]
		public override int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}

		[Token(Token = "0x60026B5")]
		[Address(RVA = "0x18C3D68", Offset = "0x18C3D68", VA = "0x18C3D68")]
		public AkEnvironment_CompareBySelectionAlgorithm()
		{
		}
	}

	[Token(Token = "0x40015D3")]
	public const int MAX_NB_ENVIRONMENTS = 4;

	[Token(Token = "0x40015D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AkEnvironment_CompareByPriority s_compareByPriority;

	[Token(Token = "0x40015D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AkEnvironment_CompareBySelectionAlgorithm s_compareBySelectionAlgorithm;

	[Token(Token = "0x40015D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool excludeOthers;

	[Token(Token = "0x40015D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isDefault;

	[Token(Token = "0x40015D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AuxBus data;

	[Token(Token = "0x40015D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE3220", Offset = "0xBE3220")]
	private Collider <Collider>k__BackingField;

	[Token(Token = "0x40015DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int priority;

	[Token(Token = "0x40015DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBE3230", Offset = "0xBE3230")]
	private int auxBusIdInternal;

	[Token(Token = "0x40015DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBE328C", Offset = "0xBE328C")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x170001F9")]
	public Collider Collider
	{
		[Token(Token = "0x6001937")]
		[Address(RVA = "0x18C3AD8", Offset = "0x18C3AD8", VA = "0x18C3AD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEACA8", Offset = "0xBEACA8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001938")]
		[Address(RVA = "0x18C3AE0", Offset = "0x18C3AE0", VA = "0x18C3AE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEACB8", Offset = "0xBEACB8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001FA")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBED964", Offset = "0xBED964")]
	public int m_auxBusID
	{
		[Token(Token = "0x600193B")]
		[Address(RVA = "0x18C3B50", Offset = "0x18C3B50", VA = "0x18C3B50")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001FB")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBED99C", Offset = "0xBED99C")]
	public byte[] valueGuid
	{
		[Token(Token = "0x600193C")]
		[Address(RVA = "0x18C3B64", Offset = "0x18C3B64", VA = "0x18C3B64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001939")]
	[Address(RVA = "0x18C3AE8", Offset = "0x18C3AE8", VA = "0x18C3AE8")]
	public float GetAuxSendValueForPosition(Vector3 in_position)
	{
		return default(float);
	}

	[Token(Token = "0x600193A")]
	[Address(RVA = "0x18C3AF0", Offset = "0x18C3AF0", VA = "0x18C3AF0")]
	public void Awake()
	{
	}

	[Token(Token = "0x600193D")]
	[Address(RVA = "0x18C3C28", Offset = "0x18C3C28", VA = "0x18C3C28")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBEACC8", Offset = "0xBEACC8")]
	public uint GetAuxBusID()
	{
		return default(uint);
	}

	[Token(Token = "0x600193E")]
	[Address(RVA = "0x18C3C44", Offset = "0x18C3C44", VA = "0x18C3C44")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBEAD00", Offset = "0xBEAD00")]
	public Collider GetCollider()
	{
		return null;
	}

	[Token(Token = "0x600193F")]
	[Address(RVA = "0x18C3C4C", Offset = "0x18C3C4C", VA = "0x18C3C4C")]
	public AkEnvironment()
	{
	}
}
[Token(Token = "0x200035F")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD2FAC", Offset = "0xBD2FAC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD2FAC", Offset = "0xBD2FAC")]
[ExecuteInEditMode]
public class AkEnvironmentPortal : MonoBehaviour
{
	[Token(Token = "0x40015DD")]
	public const int MAX_ENVIRONMENTS_PER_PORTAL = 2;

	[Token(Token = "0x40015DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 axis;

	[Token(Token = "0x40015DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AkEnvironment[] environments;

	[Token(Token = "0x6001941")]
	[Address(RVA = "0x18C3E6C", Offset = "0x18C3E6C", VA = "0x18C3E6C")]
	public float GetAuxSendValueForPosition(Vector3 in_position, int index)
	{
		return default(float);
	}

	[Token(Token = "0x6001942")]
	[Address(RVA = "0x18C40D0", Offset = "0x18C40D0", VA = "0x18C40D0")]
	public AkEnvironmentPortal()
	{
	}
}
[Token(Token = "0x2000360")]
public class AkEventCallbackMsg
{
	[Token(Token = "0x40015E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AkCallbackInfo info;

	[Token(Token = "0x40015E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sender;

	[Token(Token = "0x40015E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AkCallbackType type;

	[Token(Token = "0x6001943")]
	[Address(RVA = "0x18C4220", Offset = "0x18C4220", VA = "0x18C4220")]
	public AkEventCallbackMsg()
	{
	}
}
[Token(Token = "0x2000361")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD3044", Offset = "0xBD3044")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD3044", Offset = "0xBD3044")]
public class AkEvent : AkDragDropTriggerHandler
{
	[Serializable]
	[Token(Token = "0x20006BA")]
	public class CallbackData
	{
		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CallbackFlags Flags;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string FunctionName;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject GameObject;

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0x18C42E8", Offset = "0x18C42E8", VA = "0x18C42E8")]
		public void CallFunction(AkEventCallbackMsg eventCallbackMsg)
		{
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0x18C47DC", Offset = "0x18C47DC", VA = "0x18C47DC")]
		public CallbackData()
		{
		}
	}

	[Token(Token = "0x40015E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AkActionOnEventType actionOnEventType;

	[Token(Token = "0x40015E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AkCurveInterpolation curveInterpolation;

	[Token(Token = "0x40015E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool enableActionOnEvent;

	[Token(Token = "0x40015E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Event data;

	[Token(Token = "0x40015E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool useCallbacks;

	[Token(Token = "0x40015E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<CallbackData> Callbacks;

	[Token(Token = "0x40015E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public uint playingId;

	[Token(Token = "0x40015EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject soundEmitterObject;

	[Token(Token = "0x40015EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float transitionDuration;

	[Token(Token = "0x40015EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AkEventCallbackMsg EventCallbackMsg;

	[Token(Token = "0x40015ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBE32E8", Offset = "0xBE32E8")]
	private int eventIdInternal;

	[Token(Token = "0x40015EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBE3344", Offset = "0xBE3344")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x40015EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBE33A0", Offset = "0xBE33A0")]
	private AkEventCallbackData m_callbackDataInternal;

	[Token(Token = "0x170001FC")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x6001944")]
		[Address(RVA = "0x18C4178", Offset = "0x18C4178", VA = "0x18C4178", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FD")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBED9D4", Offset = "0xBED9D4")]
	public int eventID
	{
		[Token(Token = "0x600194A")]
		[Address(RVA = "0x18C464C", Offset = "0x18C464C", VA = "0x18C464C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001FE")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBEDA0C", Offset = "0xBEDA0C")]
	public byte[] valueGuid
	{
		[Token(Token = "0x600194B")]
		[Address(RVA = "0x18C4660", Offset = "0x18C4660", VA = "0x18C4660")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FF")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBEDA44", Offset = "0xBEDA44")]
	public AkEventCallbackData m_callbackData
	{
		[Token(Token = "0x600194C")]
		[Address(RVA = "0x18C4724", Offset = "0x18C4724", VA = "0x18C4724")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001945")]
	[Address(RVA = "0x18C4180", Offset = "0x18C4180", VA = "0x18C4180", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001946")]
	[Address(RVA = "0x18C4228", Offset = "0x18C4228", VA = "0x18C4228")]
	private void Callback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x6001947")]
	[Address(RVA = "0x18C43AC", Offset = "0x18C43AC", VA = "0x18C43AC", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001948")]
	[Address(RVA = "0x18C4618", Offset = "0x18C4618", VA = "0x18C4618")]
	public void Stop(int _transitionDuration)
	{
	}

	[Token(Token = "0x6001949")]
	[Address(RVA = "0x18C4620", Offset = "0x18C4620", VA = "0x18C4620")]
	public void Stop(int _transitionDuration, AkCurveInterpolation _curveInterpolation)
	{
	}

	[Token(Token = "0x600194D")]
	[Address(RVA = "0x18C472C", Offset = "0x18C472C", VA = "0x18C472C")]
	public AkEvent()
	{
	}
}
[Token(Token = "0x2000362")]
public class AkEventCallbackData : ScriptableObject
{
	[Token(Token = "0x40015F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<int> callbackFlags;

	[Token(Token = "0x40015F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> callbackFunc;

	[Token(Token = "0x40015F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> callbackGameObj;

	[Token(Token = "0x40015F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int uFlags;

	[Token(Token = "0x600194E")]
	[Address(RVA = "0x18C47E4", Offset = "0x18C47E4", VA = "0x18C47E4")]
	public AkEventCallbackData()
	{
	}
}
[Token(Token = "0x2000363")]
public class AkEventPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40015F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Event akEvent;

	[Token(Token = "0x40015F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AkCurveInterpolation blendInCurve;

	[Token(Token = "0x40015F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x40015F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ExposedReference<GameObject> emitterObjectRef;

	[Token(Token = "0x40015F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float eventDurationMax;

	[Token(Token = "0x40015F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float eventDurationMin;

	[NonSerialized]
	[Token(Token = "0x40015FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TimelineClip owningClip;

	[Token(Token = "0x40015FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool retriggerEvent;

	[Token(Token = "0x40015FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool UseWwiseEventDuration;

	[Token(Token = "0x40015FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	private bool StopEventAtClipEnd;

	[Token(Token = "0x17000200")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x600194F")]
		[Address(RVA = "0x18C4D3C", Offset = "0x18C4D3C", VA = "0x18C4D3C", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6001950")]
	[Address(RVA = "0x18C4D44", Offset = "0x18C4D44", VA = "0x18C4D44", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001951")]
	[Address(RVA = "0x18C4FD0", Offset = "0x18C4FD0", VA = "0x18C4FD0")]
	public AkEventPlayable()
	{
	}
}
[Token(Token = "0x2000364")]
public class AkEventPlayableBehavior : PlayableBehaviour
{
	[Token(Token = "0x20006BB")]
	[Flags]
	private enum Actions
	{
		[Token(Token = "0x40020E0")]
		None = 0,
		[Token(Token = "0x40020E1")]
		Playback = 1,
		[Token(Token = "0x40020E2")]
		Retrigger = 2,
		[Token(Token = "0x40020E3")]
		DelayedStop = 8,
		[Token(Token = "0x40020E4")]
		Seek = 0x10,
		[Token(Token = "0x40020E5")]
		FadeIn = 0x20,
		[Token(Token = "0x40020E6")]
		FadeOut = 0x40
	}

	[Token(Token = "0x40015FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float currentDuration;

	[Token(Token = "0x40015FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float currentDurationProportion;

	[Token(Token = "0x4001600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool eventIsPlaying;

	[Token(Token = "0x4001601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool fadeinTriggered;

	[Token(Token = "0x4001602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool fadeoutTriggered;

	[Token(Token = "0x4001603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float previousEventStartTime;

	[Token(Token = "0x4001604")]
	private const uint CallbackFlags = 9u;

	[Token(Token = "0x4001605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Actions requiredActions;

	[Token(Token = "0x4001606")]
	private const int scrubPlaybackLengthMs = 100;

	[Token(Token = "0x4001607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Event akEvent;

	[Token(Token = "0x4001608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float eventDurationMax;

	[Token(Token = "0x4001609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float eventDurationMin;

	[Token(Token = "0x400160A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float blendInDuration;

	[Token(Token = "0x400160B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float blendOutDuration;

	[Token(Token = "0x400160C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float easeInDuration;

	[Token(Token = "0x400160D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float easeOutDuration;

	[Token(Token = "0x400160E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AkCurveInterpolation blendInCurve;

	[Token(Token = "0x400160F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x4001610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject eventObject;

	[Token(Token = "0x4001611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool retriggerEvent;

	[Token(Token = "0x4001612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool StopEventAtClipEnd;

	[Token(Token = "0x4001613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool overrideTrackEmitterObject;

	[Token(Token = "0x4001614")]
	private const float alph = 0.05f;

	[Token(Token = "0x6001952")]
	[Address(RVA = "0x18C505C", Offset = "0x18C505C", VA = "0x18C505C")]
	private void CallbackHandler(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x6001953")]
	[Address(RVA = "0x18C5128", Offset = "0x18C5128", VA = "0x18C5128")]
	private bool IsScrubbing(FrameData info)
	{
		return default(bool);
	}

	[Token(Token = "0x6001954")]
	[Address(RVA = "0x18C514C", Offset = "0x18C514C", VA = "0x18C514C", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001955")]
	[Address(RVA = "0x18C550C", Offset = "0x18C550C", VA = "0x18C550C", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001956")]
	[Address(RVA = "0x18C56CC", Offset = "0x18C56CC", VA = "0x18C56CC", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001957")]
	[Address(RVA = "0x18C57E4", Offset = "0x18C57E4", VA = "0x18C57E4", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6001958")]
	[Address(RVA = "0x18C528C", Offset = "0x18C528C", VA = "0x18C528C")]
	private bool ShouldPlay(Playable playable)
	{
		return default(bool);
	}

	[Token(Token = "0x6001959")]
	[Address(RVA = "0x18C53C8", Offset = "0x18C53C8", VA = "0x18C53C8")]
	private void CheckForFadeInFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x600195A")]
	[Address(RVA = "0x18C5468", Offset = "0x18C5468", VA = "0x18C5468")]
	private void CheckForFadeOut(Playable playable, double currentClipTime)
	{
	}

	[Token(Token = "0x600195B")]
	[Address(RVA = "0x18C5B70", Offset = "0x18C5B70", VA = "0x18C5B70")]
	private void TriggerFadeIn(Playable playable)
	{
	}

	[Token(Token = "0x600195C")]
	[Address(RVA = "0x18C5CA0", Offset = "0x18C5CA0", VA = "0x18C5CA0")]
	private void TriggerFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x600195D")]
	[Address(RVA = "0x18C57AC", Offset = "0x18C57AC", VA = "0x18C57AC")]
	private void StopEvent(int transition = 0)
	{
	}

	[Token(Token = "0x600195E")]
	[Address(RVA = "0x18C5D64", Offset = "0x18C5D64", VA = "0x18C5D64")]
	private bool PostEvent()
	{
		return default(bool);
	}

	[Token(Token = "0x600195F")]
	[Address(RVA = "0x18C59D0", Offset = "0x18C59D0", VA = "0x18C59D0")]
	private void PlayEvent()
	{
	}

	[Token(Token = "0x6001960")]
	[Address(RVA = "0x18C5AD8", Offset = "0x18C5AD8", VA = "0x18C5AD8")]
	private void RetriggerEvent(Playable playable)
	{
	}

	[Token(Token = "0x6001961")]
	[Address(RVA = "0x18C55F0", Offset = "0x18C55F0", VA = "0x18C55F0")]
	private float GetProportionalTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x6001962")]
	[Address(RVA = "0x18C5A00", Offset = "0x18C5A00", VA = "0x18C5A00")]
	private float SeekToTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x6001963")]
	[Address(RVA = "0x18C5E14", Offset = "0x18C5E14", VA = "0x18C5E14")]
	public AkEventPlayableBehavior()
	{
	}
}
[Token(Token = "0x2000365")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xBD30CC", Offset = "0xBD30CC")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xBD30CC", Offset = "0xBD30CC")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xBD30CC", Offset = "0xBD30CC")]
public class AkEventTrack : TrackAsset
{
	[Token(Token = "0x6001964")]
	[Address(RVA = "0x18C5E28", Offset = "0x18C5E28", VA = "0x18C5E28", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001965")]
	[Address(RVA = "0x18C61BC", Offset = "0x18C61BC", VA = "0x18C61BC")]
	public AkEventTrack()
	{
	}
}
[Token(Token = "0x2000366")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD3180", Offset = "0xBD3180")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AkGameObj : MonoBehaviour
{
	[Token(Token = "0x4001615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AkGameObjListenerList m_listeners;

	[Token(Token = "0x4001616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isEnvironmentAware;

	[Token(Token = "0x4001617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool isStaticObject;

	[Token(Token = "0x4001618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider m_Collider;

	[Token(Token = "0x4001619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AkGameObjEnvironmentData m_envData;

	[Token(Token = "0x400161A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AkGameObjPositionData m_posData;

	[Token(Token = "0x400161B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AkGameObjPositionOffsetData m_positionOffsetData;

	[Token(Token = "0x400161C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isRegistered;

	[Token(Token = "0x400161D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	private AkGameObjPosOffsetData m_posOffsetData;

	[Token(Token = "0x400161E")]
	private const int AK_NUM_LISTENERS = 8;

	[Token(Token = "0x400161F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	[SerializeField]
	private int listenerMask;

	[Token(Token = "0x17000201")]
	public bool IsUsingDefaultListeners
	{
		[Token(Token = "0x6001966")]
		[Address(RVA = "0x18C70DC", Offset = "0x18C70DC", VA = "0x18C70DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000202")]
	public List<AkAudioListener> ListenerList
	{
		[Token(Token = "0x6001967")]
		[Address(RVA = "0x18C70F8", Offset = "0x18C70F8", VA = "0x18C70F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001968")]
	[Address(RVA = "0x18C7114", Offset = "0x18C7114", VA = "0x18C7114")]
	internal void AddListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x6001969")]
	[Address(RVA = "0x18C7134", Offset = "0x18C7134", VA = "0x18C7134")]
	internal void RemoveListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x600196A")]
	[Address(RVA = "0x18C7154", Offset = "0x18C7154", VA = "0x18C7154")]
	public AKRESULT Register()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600196B")]
	[Address(RVA = "0x18C7214", Offset = "0x18C7214", VA = "0x18C7214")]
	private void Awake()
	{
	}

	[Token(Token = "0x600196C")]
	[Address(RVA = "0x18C7980", Offset = "0x18C7980", VA = "0x18C7980")]
	private void CheckStaticStatus()
	{
	}

	[Token(Token = "0x600196D")]
	[Address(RVA = "0x18C7984", Offset = "0x18C7984", VA = "0x18C7984")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600196E")]
	[Address(RVA = "0x18C7998", Offset = "0x18C7998", VA = "0x18C7998")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600196F")]
	[Address(RVA = "0x18C7AF8", Offset = "0x18C7AF8", VA = "0x18C7AF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001970")]
	[Address(RVA = "0x18C7D94", Offset = "0x18C7D94", VA = "0x18C7D94", Slot = "4")]
	public virtual Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001971")]
	[Address(RVA = "0x18C7F04", Offset = "0x18C7F04", VA = "0x18C7F04", Slot = "5")]
	public virtual Vector3 GetForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001972")]
	[Address(RVA = "0x18C7F28", Offset = "0x18C7F28", VA = "0x18C7F28", Slot = "6")]
	public virtual Vector3 GetUpward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001973")]
	[Address(RVA = "0x18C7F4C", Offset = "0x18C7F4C", VA = "0x18C7F4C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001974")]
	[Address(RVA = "0x18C7F64", Offset = "0x18C7F64", VA = "0x18C7F64")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001975")]
	[Address(RVA = "0x18C81A4", Offset = "0x18C81A4", VA = "0x18C81A4")]
	public AkGameObj()
	{
	}
}
[Token(Token = "0x2000367")]
public class AkGameObjEnvironmentData
{
	[Token(Token = "0x4001620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly List<AkEnvironment> activeEnvironments;

	[Token(Token = "0x4001621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<AkEnvironment> activeEnvironmentsFromPortals;

	[Token(Token = "0x4001622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly List<AkEnvironmentPortal> activePortals;

	[Token(Token = "0x4001623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly AkAuxSendArray auxSendValues;

	[Token(Token = "0x4001624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 lastPosition;

	[Token(Token = "0x4001625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool hasEnvironmentListChanged;

	[Token(Token = "0x4001626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool hasActivePortalListChanged;

	[Token(Token = "0x4001627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool hasSentZero;

	[Token(Token = "0x6001976")]
	[Address(RVA = "0x18C82A4", Offset = "0x18C82A4", VA = "0x18C82A4")]
	private void AddHighestPriorityEnvironmentsFromPortals(Vector3 position)
	{
	}

	[Token(Token = "0x6001977")]
	[Address(RVA = "0x18C84C0", Offset = "0x18C84C0", VA = "0x18C84C0")]
	private void AddHighestPriorityEnvironments(Vector3 position)
	{
	}

	[Token(Token = "0x6001978")]
	[Address(RVA = "0x18C770C", Offset = "0x18C770C", VA = "0x18C770C")]
	public void UpdateAuxSend(GameObject gameObject, Vector3 position)
	{
	}

	[Token(Token = "0x6001979")]
	[Address(RVA = "0x18C85FC", Offset = "0x18C85FC", VA = "0x18C85FC")]
	private void TryAddEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x600197A")]
	[Address(RVA = "0x18C8760", Offset = "0x18C8760", VA = "0x18C8760")]
	private void RemoveEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x600197B")]
	[Address(RVA = "0x18C75D4", Offset = "0x18C75D4", VA = "0x18C75D4")]
	public void AddAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}

	[Token(Token = "0x600197C")]
	[Address(RVA = "0x18C87E8", Offset = "0x18C87E8", VA = "0x18C87E8")]
	private bool AkEnvironmentBelongsToActivePortals(AkEnvironment env)
	{
		return default(bool);
	}

	[Token(Token = "0x600197D")]
	[Address(RVA = "0x18C7F84", Offset = "0x18C7F84", VA = "0x18C7F84")]
	public void RemoveAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}

	[Token(Token = "0x600197E")]
	[Address(RVA = "0x18C7488", Offset = "0x18C7488", VA = "0x18C7488")]
	public AkGameObjEnvironmentData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000368")]
public class AkGameObjListenerList : AkAudioListener.BaseListenerList
{
	[NonSerialized]
	[Token(Token = "0x4001628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AkGameObj akGameObj;

	[Token(Token = "0x4001629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public List<AkAudioListener> initialListenerList;

	[Token(Token = "0x400162A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public bool useDefaultListeners;

	[Token(Token = "0x600197F")]
	[Address(RVA = "0x18C8918", Offset = "0x18C8918", VA = "0x18C8918")]
	public void SetUseDefaultListeners(bool useDefault)
	{
	}

	[Token(Token = "0x6001980")]
	[Address(RVA = "0x18C7878", Offset = "0x18C7878", VA = "0x18C7878")]
	public void Init(AkGameObj akGameObj)
	{
	}

	[Token(Token = "0x6001981")]
	[Address(RVA = "0x18C8AF0", Offset = "0x18C8AF0", VA = "0x18C8AF0", Slot = "4")]
	public override bool Add(AkAudioListener listener)
	{
		return default(bool);
	}

	[Token(Token = "0x6001982")]
	[Address(RVA = "0x18C8BE0", Offset = "0x18C8BE0", VA = "0x18C8BE0", Slot = "5")]
	public override bool Remove(AkAudioListener listener)
	{
		return default(bool);
	}

	[Token(Token = "0x6001983")]
	[Address(RVA = "0x18C8220", Offset = "0x18C8220", VA = "0x18C8220")]
	public AkGameObjListenerList()
	{
	}
}
[Token(Token = "0x2000369")]
public class AkGameObjPosOffsetData : ScriptableObject
{
	[Token(Token = "0x400162B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 positionOffset;

	[Token(Token = "0x6001984")]
	[Address(RVA = "0x18C8CD0", Offset = "0x18C8CD0", VA = "0x18C8CD0")]
	public AkGameObjPosOffsetData()
	{
	}
}
[Token(Token = "0x200036A")]
public class AkGameObjPositionData
{
	[Token(Token = "0x400162C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 forward;

	[Token(Token = "0x400162D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 position;

	[Token(Token = "0x400162E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 up;

	[Token(Token = "0x6001985")]
	[Address(RVA = "0x18C7480", Offset = "0x18C7480", VA = "0x18C7480")]
	public AkGameObjPositionData()
	{
	}
}
[Serializable]
[Token(Token = "0x200036B")]
public class AkGameObjPositionOffsetData
{
	[Token(Token = "0x400162F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool KeepMe;

	[Token(Token = "0x4001630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 positionOffset;

	[Token(Token = "0x6001986")]
	[Address(RVA = "0x18C8CD8", Offset = "0x18C8CD8", VA = "0x18C8CD8")]
	public AkGameObjPositionOffsetData(bool IReallyWantToBeConstructed = false)
	{
	}
}
[Token(Token = "0x200036C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD31DC", Offset = "0xBD31DC")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AkInitializer : MonoBehaviour
{
	[Token(Token = "0x4001631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkInitializer ms_Instance;

	[Token(Token = "0x4001632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AkWwiseInitializationSettings InitializationSettings;

	[Token(Token = "0x6001987")]
	[Address(RVA = "0x18CBDDC", Offset = "0x18CBDDC", VA = "0x18CBDDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001988")]
	[Address(RVA = "0x18CBECC", Offset = "0x18CBECC", VA = "0x18CBECC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001989")]
	[Address(RVA = "0x18CBFB0", Offset = "0x18CBFB0", VA = "0x18CBFB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600198A")]
	[Address(RVA = "0x18CC058", Offset = "0x18CC058", VA = "0x18CC058")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600198B")]
	[Address(RVA = "0x18CC108", Offset = "0x18CC108", VA = "0x18CC108")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600198C")]
	[Address(RVA = "0x18CC1C4", Offset = "0x18CC1C4", VA = "0x18CC1C4")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x600198D")]
	[Address(RVA = "0x18CC280", Offset = "0x18CC280", VA = "0x18CC280")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600198E")]
	[Address(RVA = "0x18CC328", Offset = "0x18CC328", VA = "0x18CC328")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600198F")]
	[Address(RVA = "0x18CC3D0", Offset = "0x18CC3D0", VA = "0x18CC3D0")]
	public AkInitializer()
	{
	}
}
[Token(Token = "0x200036D")]
public class AkMemBankLoader : MonoBehaviour
{
	[Token(Token = "0x20006BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8824", Offset = "0xBD8824")]
	private sealed class <LoadFile>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AkMemBankLoader <>4__this;

		[Token(Token = "0x170003B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026BB")]
			[Address(RVA = "0x18D2E18", Offset = "0x18D2E18", VA = "0x18D2E18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026BD")]
			[Address(RVA = "0x18D2E80", Offset = "0x18D2E80", VA = "0x18D2E80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0x18D2B30", Offset = "0x18D2B30", VA = "0x18D2B30")]
		[DebuggerHidden]
		public <LoadFile>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0x18D2C74", Offset = "0x18D2C74", VA = "0x18D2C74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0x18D2C78", Offset = "0x18D2C78", VA = "0x18D2C78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0x18D2E20", Offset = "0x18D2E20", VA = "0x18D2E20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001633")]
	private const int WaitMs = 50;

	[Token(Token = "0x4001634")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT = 16L;

	[Token(Token = "0x4001635")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT_MASK = 15L;

	[Token(Token = "0x4001636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string bankName;

	[Token(Token = "0x4001637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isLocalizedBank;

	[Token(Token = "0x4001638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_bankPath;

	[Token(Token = "0x4001639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public uint ms_bankID;

	[Token(Token = "0x400163A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IntPtr ms_pInMemoryBankPtr;

	[Token(Token = "0x400163B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GCHandle ms_pinnedArray;

	[Token(Token = "0x400163C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UnityWebRequest ms_www;

	[Token(Token = "0x6001990")]
	[Address(RVA = "0x18D2660", Offset = "0x18D2660", VA = "0x18D2660")]
	private void Start()
	{
	}

	[Token(Token = "0x6001991")]
	[Address(RVA = "0x18D2780", Offset = "0x18D2780", VA = "0x18D2780")]
	public void LoadNonLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x6001992")]
	[Address(RVA = "0x18D2674", Offset = "0x18D2674", VA = "0x18D2674")]
	public void LoadLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x6001993")]
	[Address(RVA = "0x18D2888", Offset = "0x18D2888", VA = "0x18D2888")]
	private uint AllocateAlignedBuffer(byte[] data)
	{
		return default(uint);
	}

	[Token(Token = "0x6001994")]
	[Address(RVA = "0x18D2AB4", Offset = "0x18D2AB4", VA = "0x18D2AB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEAD38", Offset = "0xBEAD38")]
	private IEnumerator LoadFile()
	{
		return null;
	}

	[Token(Token = "0x6001995")]
	[Address(RVA = "0x18D2850", Offset = "0x18D2850", VA = "0x18D2850")]
	private void DoLoadBank(string in_bankPath)
	{
	}

	[Token(Token = "0x6001996")]
	[Address(RVA = "0x18D2B5C", Offset = "0x18D2B5C", VA = "0x18D2B5C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001997")]
	[Address(RVA = "0x18D2C10", Offset = "0x18D2C10", VA = "0x18D2C10")]
	public AkMemBankLoader()
	{
	}
}
[Token(Token = "0x200036E")]
public abstract class AkObstructionOcclusion : MonoBehaviour
{
	[Token(Token = "0x20006BD")]
	protected class ObstructionOcclusionValue
	{
		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float currentValue;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float targetValue;

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0x18D5CD0", Offset = "0x18D5CD0", VA = "0x18D5CD0")]
		public bool Update(float fadeRate)
		{
			return default(bool);
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0x18D55F4", Offset = "0x18D55F4", VA = "0x18D55F4")]
		public ObstructionOcclusionValue()
		{
		}
	}

	[Token(Token = "0x400163D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<AkAudioListener> listenersToRemove;

	[Token(Token = "0x400163E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Dictionary<AkAudioListener, ObstructionOcclusionValue> ObstructionOcclusionValues;

	[Token(Token = "0x400163F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected float fadeRate;

	[Token(Token = "0x4001640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE350C", Offset = "0xBE350C")]
	public float fadeTime;

	[Token(Token = "0x4001641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE3544", Offset = "0xBE3544")]
	public LayerMask LayerMask;

	[Token(Token = "0x4001642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE357C", Offset = "0xBE357C")]
	public float maxDistance;

	[Token(Token = "0x4001643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE35B4", Offset = "0xBE35B4")]
	public float refreshInterval;

	[Token(Token = "0x4001644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float refreshTime;

	[Token(Token = "0x6001998")]
	[Address(RVA = "0x18D533C", Offset = "0x18D533C", VA = "0x18D533C")]
	protected void InitIntervalsAndFadeRates()
	{
	}

	[Token(Token = "0x6001999")]
	[Address(RVA = "0x18D537C", Offset = "0x18D537C", VA = "0x18D537C")]
	protected void UpdateObstructionOcclusionValues(List<AkAudioListener> listenerList)
	{
	}

	[Token(Token = "0x600199A")]
	[Address(RVA = "0x18D55FC", Offset = "0x18D55FC", VA = "0x18D55FC")]
	protected void UpdateObstructionOcclusionValues(AkAudioListener listener)
	{
	}

	[Token(Token = "0x600199B")]
	[Address(RVA = "0x18D5854", Offset = "0x18D5854", VA = "0x18D5854")]
	private void CastRays()
	{
	}

	[Token(Token = "0x600199C")]
	protected abstract void UpdateObstructionOcclusionValuesForListeners();

	[Token(Token = "0x600199D")]
	protected abstract void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair);

	[Token(Token = "0x600199E")]
	[Address(RVA = "0x18D5B88", Offset = "0x18D5B88", VA = "0x18D5B88")]
	private void Update()
	{
	}

	[Token(Token = "0x600199F")]
	[Address(RVA = "0x18D5DC0", Offset = "0x18D5DC0", VA = "0x18D5DC0")]
	protected AkObstructionOcclusion()
	{
	}
}
[Serializable]
[Token(Token = "0x200036F")]
public class AkRTPCPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4001645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool overrideTrackObject;

	[Token(Token = "0x4001646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExposedReference<GameObject> RTPCObject;

	[Token(Token = "0x4001647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool setRTPCGlobally;

	[Token(Token = "0x4001648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AkRTPCPlayableBehaviour template;

	[Token(Token = "0x4001649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE35EC", Offset = "0xBE35EC")]
	private RTPC <Parameter>k__BackingField;

	[Token(Token = "0x400164A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE35FC", Offset = "0xBE35FC")]
	private TimelineClip <OwningClip>k__BackingField;

	[Token(Token = "0x17000203")]
	public RTPC Parameter
	{
		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x18DBE08", Offset = "0x18DBE08", VA = "0x18DBE08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEAD9C", Offset = "0xBEAD9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60019A1")]
		[Address(RVA = "0x18DBE10", Offset = "0x18DBE10", VA = "0x18DBE10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEADAC", Offset = "0xBEADAC")]
		set
		{
		}
	}

	[Token(Token = "0x17000204")]
	public TimelineClip OwningClip
	{
		[Token(Token = "0x60019A2")]
		[Address(RVA = "0x18DBE18", Offset = "0x18DBE18", VA = "0x18DBE18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEADBC", Offset = "0xBEADBC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x18DBE20", Offset = "0x18DBE20", VA = "0x18DBE20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEADCC", Offset = "0xBEADCC")]
		set
		{
		}
	}

	[Token(Token = "0x17000205")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x60019A4")]
		[Address(RVA = "0x18DBE28", Offset = "0x18DBE28", VA = "0x18DBE28", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60019A5")]
	[Address(RVA = "0x18DBE30", Offset = "0x18DBE30", VA = "0x18DBE30", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x60019A6")]
	[Address(RVA = "0x18DBF2C", Offset = "0x18DBF2C", VA = "0x18DBF2C")]
	public void InitializeBehavior(PlayableGraph graph, ref AkRTPCPlayableBehaviour b, GameObject owner)
	{
	}

	[Token(Token = "0x60019A7")]
	[Address(RVA = "0x18DC00C", Offset = "0x18DC00C", VA = "0x18DC00C")]
	public AkRTPCPlayable()
	{
	}
}
[Serializable]
[Token(Token = "0x2000370")]
public class AkRTPCPlayableBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400164B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float RTPCValue;

	[Token(Token = "0x400164C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE361C", Offset = "0xBE361C")]
	private bool <setRTPCGlobally>k__BackingField;

	[Token(Token = "0x400164D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE362C", Offset = "0xBE362C")]
	private bool <overrideTrackObject>k__BackingField;

	[Token(Token = "0x400164E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE363C", Offset = "0xBE363C")]
	private GameObject <rtpcObject>k__BackingField;

	[Token(Token = "0x400164F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE364C", Offset = "0xBE364C")]
	private RTPC <parameter>k__BackingField;

	[Token(Token = "0x17000206")]
	public bool setRTPCGlobally
	{
		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x18DC094", Offset = "0x18DC094", VA = "0x18DC094")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEADEC", Offset = "0xBEADEC")]
		private get
		{
			return default(bool);
		}
		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x18DC088", Offset = "0x18DC088", VA = "0x18DC088")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEADDC", Offset = "0xBEADDC")]
		set
		{
		}
	}

	[Token(Token = "0x17000207")]
	public bool overrideTrackObject
	{
		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x18DC0A8", Offset = "0x18DC0A8", VA = "0x18DC0A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEAE0C", Offset = "0xBEAE0C")]
		private get
		{
			return default(bool);
		}
		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x18DC09C", Offset = "0x18DC09C", VA = "0x18DC09C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEADFC", Offset = "0xBEADFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000208")]
	public GameObject rtpcObject
	{
		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x18DC0B8", Offset = "0x18DC0B8", VA = "0x18DC0B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEAE2C", Offset = "0xBEAE2C")]
		private get
		{
			return null;
		}
		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x18DC0B0", Offset = "0x18DC0B0", VA = "0x18DC0B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEAE1C", Offset = "0xBEAE1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000209")]
	public RTPC parameter
	{
		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x18DC0C8", Offset = "0x18DC0C8", VA = "0x18DC0C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEAE4C", Offset = "0xBEAE4C")]
		private get
		{
			return null;
		}
		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x18DC0C0", Offset = "0x18DC0C0", VA = "0x18DC0C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEAE3C", Offset = "0xBEAE3C")]
		set
		{
		}
	}

	[Token(Token = "0x60019B0")]
	[Address(RVA = "0x18DC0D0", Offset = "0x18DC0D0", VA = "0x18DC0D0", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60019B1")]
	[Address(RVA = "0x18DC080", Offset = "0x18DC080", VA = "0x18DC080")]
	public AkRTPCPlayableBehaviour()
	{
	}
}
[Token(Token = "0x2000371")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xBD3238", Offset = "0xBD3238")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xBD3238", Offset = "0xBD3238")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xBD3238", Offset = "0xBD3238")]
public class AkRTPCTrack : TrackAsset
{
	[Token(Token = "0x4001650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public RTPC Parameter;

	[Token(Token = "0x60019B2")]
	[Address(RVA = "0x18DC250", Offset = "0x18DC250", VA = "0x18DC250", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x60019B3")]
	[Address(RVA = "0x18DC30C", Offset = "0x18DC30C", VA = "0x18DC30C")]
	public void setPlayableProperties()
	{
	}

	[Token(Token = "0x60019B4")]
	[Address(RVA = "0x18DC608", Offset = "0x18DC608", VA = "0x18DC608")]
	public void OnValidate()
	{
	}

	[Token(Token = "0x60019B5")]
	[Address(RVA = "0x18DC8D8", Offset = "0x18DC8D8", VA = "0x18DC8D8")]
	public AkRTPCTrack()
	{
	}
}
[Token(Token = "0x2000372")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD32E8", Offset = "0xBD32E8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD32E8", Offset = "0xBD32E8")]
[DisallowMultipleComponent]
public class AkRoom : AkTriggerHandler
{
	[Token(Token = "0x20006BE")]
	public class PriorityList
	{
		[Token(Token = "0x2000718")]
		private class CompareByPriority : IComparer<AkRoom>
		{
			[Token(Token = "0x6002781")]
			[Address(RVA = "0xFE1578", Offset = "0xFE1578", VA = "0xFE1578", Slot = "5")]
			public virtual int Compare(AkRoom a, AkRoom b)
			{
				return default(int);
			}

			[Token(Token = "0x6002782")]
			[Address(RVA = "0xFE1570", Offset = "0xFE1570", VA = "0xFE1570")]
			public CompareByPriority()
			{
			}
		}

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly CompareByPriority s_compareByPriority;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<AkRoom> rooms;

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0xFE1168", Offset = "0xFE1168", VA = "0xFE1168")]
		public ulong GetHighestPriorityRoomID()
		{
			return default(ulong);
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0xFE1230", Offset = "0xFE1230", VA = "0xFE1230")]
		public AkRoom GetHighestPriorityRoom()
		{
			return null;
		}

		[Token(Token = "0x60026C2")]
		[Address(RVA = "0xFE1294", Offset = "0xFE1294", VA = "0xFE1294")]
		public void Add(AkRoom room)
		{
		}

		[Token(Token = "0x60026C3")]
		[Address(RVA = "0xFE1400", Offset = "0xFE1400", VA = "0xFE1400")]
		public void Remove(AkRoom room)
		{
		}

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0xFE1468", Offset = "0xFE1468", VA = "0xFE1468")]
		public bool Contains(AkRoom room)
		{
			return default(bool);
		}

		[Token(Token = "0x60026C5")]
		[Address(RVA = "0xFE1324", Offset = "0xFE1324", VA = "0xFE1324")]
		public int BinarySearch(AkRoom room)
		{
			return default(int);
		}

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0xFE1484", Offset = "0xFE1484", VA = "0xFE1484")]
		public PriorityList()
		{
		}
	}

	[Token(Token = "0x4001651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ulong INVALID_ROOM_ID;

	[Token(Token = "0x4001652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int RoomCount;

	[Token(Token = "0x4001653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE365C", Offset = "0xBE365C")]
	public int priority;

	[Token(Token = "0x4001654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AuxBus reverbAuxBus;

	[Token(Token = "0x4001655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE3694", Offset = "0xBE3694")]
	public float reverbLevel;

	[Token(Token = "0x4001656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE36AC", Offset = "0xBE36AC")]
	public float wallOcclusion;

	[Token(Token = "0x4001657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Event roomToneEvent;

	[Token(Token = "0x4001658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE36C4", Offset = "0xBE36C4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE36C4", Offset = "0xBE36C4")]
	public float roomToneAuxSend;

	[Token(Token = "0x1700020A")]
	public static bool IsSpatialAudioEnabled
	{
		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xFE013C", Offset = "0xFE013C", VA = "0xFE013C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60019B7")]
	[Address(RVA = "0xFE0218", Offset = "0xFE0218", VA = "0xFE0218")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x60019B8")]
	[Address(RVA = "0xFE0308", Offset = "0xFE0308", VA = "0xFE0308")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60019B9")]
	[Address(RVA = "0xFE0D1C", Offset = "0xFE0D1C", VA = "0xFE0D1C", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x60019BA")]
	[Address(RVA = "0xFE0D54", Offset = "0xFE0D54", VA = "0xFE0D54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60019BB")]
	[Address(RVA = "0xFE0E88", Offset = "0xFE0E88", VA = "0xFE0E88")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x60019BC")]
	[Address(RVA = "0xFE0F64", Offset = "0xFE0F64", VA = "0xFE0F64")]
	private void OnTriggerExit(Collider in_other)
	{
	}

	[Token(Token = "0x60019BD")]
	[Address(RVA = "0xFE1040", Offset = "0xFE1040", VA = "0xFE1040")]
	public AkRoom()
	{
	}
}
[Token(Token = "0x2000373")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD3380", Offset = "0xBD3380")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD3380", Offset = "0xBD3380")]
[DisallowMultipleComponent]
public class AkRoomPortal : AkTriggerHandler
{
	[Token(Token = "0x20006BF")]
	public enum State
	{
		[Token(Token = "0x40020EF")]
		Closed,
		[Token(Token = "0x40020F0")]
		Open
	}

	[Token(Token = "0x4001659")]
	public const int MAX_ROOMS_PER_PORTAL = 2;

	[Token(Token = "0x400165A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public State initialState;

	[Token(Token = "0x400165B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AkVector extent;

	[Token(Token = "0x400165C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AkTransform portalTransform;

	[Token(Token = "0x400165D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool active;

	[Token(Token = "0x400165E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<int> closePortalTriggerList;

	[Token(Token = "0x400165F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AkRoom[] rooms;

	[Token(Token = "0x1700020B")]
	public bool portalActive
	{
		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xFE2420", Offset = "0xFE2420", VA = "0xFE2420")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xFE2428", Offset = "0xFE2428", VA = "0xFE2428")]
		set
		{
		}
	}

	[Token(Token = "0x1700020C")]
	private ulong frontRoomID
	{
		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xFE2570", Offset = "0xFE2570", VA = "0xFE2570")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x1700020D")]
	private ulong backRoomID
	{
		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xFE26D8", Offset = "0xFE26D8", VA = "0xFE26D8")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x1700020E")]
	public AkRoom frontRoom
	{
		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xFE260C", Offset = "0xFE260C", VA = "0xFE260C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700020F")]
	public AkRoom backRoom
	{
		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xFE2774", Offset = "0xFE2774", VA = "0xFE2774")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000210")]
	public bool IsValid
	{
		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xFE2B58", Offset = "0xFE2B58", VA = "0xFE2B58")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60019C3")]
	[Address(RVA = "0xFE27A8", Offset = "0xFE27A8", VA = "0xFE27A8")]
	public void SetRoom(int in_roomIndex, AkRoom in_room)
	{
	}

	[Token(Token = "0x60019C4")]
	[Address(RVA = "0xFE28BC", Offset = "0xFE28BC", VA = "0xFE28BC")]
	public void SetFrontRoom(AkRoom room)
	{
	}

	[Token(Token = "0x60019C5")]
	[Address(RVA = "0xFE28C8", Offset = "0xFE28C8", VA = "0xFE28C8")]
	public void SetBackRoom(AkRoom room)
	{
	}

	[Token(Token = "0x60019C6")]
	[Address(RVA = "0xFE28D4", Offset = "0xFE28D4", VA = "0xFE28D4")]
	public AkRoom GetRoom(int index)
	{
		return null;
	}

	[Token(Token = "0x60019C9")]
	[Address(RVA = "0xFE2910", Offset = "0xFE2910", VA = "0xFE2910")]
	public void UpdateSoundEngineRoomIDs()
	{
	}

	[Token(Token = "0x60019CB")]
	[Address(RVA = "0xFE2A74", Offset = "0xFE2A74", VA = "0xFE2A74")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x60019CC")]
	[Address(RVA = "0xFE2B8C", Offset = "0xFE2B8C", VA = "0xFE2B8C", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60019CD")]
	[Address(RVA = "0xFE31F8", Offset = "0xFE31F8", VA = "0xFE31F8", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60019CE")]
	[Address(RVA = "0xFE3280", Offset = "0xFE3280", VA = "0xFE3280", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x60019CF")]
	[Address(RVA = "0xFE31F0", Offset = "0xFE31F0", VA = "0xFE31F0")]
	public void ClosePortal(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x60019D0")]
	[Address(RVA = "0xFE3298", Offset = "0xFE3298", VA = "0xFE3298", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60019D1")]
	[Address(RVA = "0xFE2644", Offset = "0xFE2644", VA = "0xFE2644")]
	private bool IsRoomActive(AkRoom in_room)
	{
		return default(bool);
	}

	[Token(Token = "0x60019D2")]
	[Address(RVA = "0xFE3288", Offset = "0xFE3288", VA = "0xFE3288")]
	public void Open()
	{
	}

	[Token(Token = "0x60019D3")]
	[Address(RVA = "0xFE3290", Offset = "0xFE3290", VA = "0xFE3290")]
	public void Close()
	{
	}

	[Token(Token = "0x60019D4")]
	[Address(RVA = "0xFE34D8", Offset = "0xFE34D8", VA = "0xFE34D8")]
	public void FindOverlappingRooms(AkRoom.PriorityList[] roomList)
	{
	}

	[Token(Token = "0x60019D5")]
	[Address(RVA = "0xFE36F0", Offset = "0xFE36F0", VA = "0xFE36F0")]
	private void FillRoomList(Vector3 center, Vector3 halfExtents, AkRoom.PriorityList list)
	{
	}

	[Token(Token = "0x60019D6")]
	[Address(RVA = "0xFE2F90", Offset = "0xFE2F90", VA = "0xFE2F90")]
	public void UpdateOverlappingRooms()
	{
	}

	[Token(Token = "0x60019D7")]
	[Address(RVA = "0xFE38D0", Offset = "0xFE38D0", VA = "0xFE38D0")]
	public AkRoomPortal()
	{
	}
}
[Token(Token = "0x2000374")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD3418", Offset = "0xBD3418")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD3418", Offset = "0xBD3418")]
public class AkRoomPortalObstruction : AkObstructionOcclusion
{
	[Token(Token = "0x4001660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AkRoomPortal m_portal;

	[Token(Token = "0x60019D8")]
	[Address(RVA = "0xFE3BE8", Offset = "0xFE3BE8", VA = "0xFE3BE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60019D9")]
	[Address(RVA = "0xFE3C54", Offset = "0xFE3C54", VA = "0xFE3C54", Slot = "4")]
	protected override void UpdateObstructionOcclusionValuesForListeners()
	{
	}

	[Token(Token = "0x60019DA")]
	[Address(RVA = "0xFE3CC8", Offset = "0xFE3CC8", VA = "0xFE3CC8", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}

	[Token(Token = "0x60019DB")]
	[Address(RVA = "0xFE3E20", Offset = "0xFE3E20", VA = "0xFE3E20")]
	public AkRoomPortalObstruction()
	{
	}
}
[Token(Token = "0x2000375")]
public class AkSoundEngineController
{
	[Token(Token = "0x4001661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSoundEngineController ms_Instance;

	[Token(Token = "0x17000211")]
	public static AkSoundEngineController Instance
	{
		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x10007D8", Offset = "0x10007D8", VA = "0x10007D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60019DD")]
	[Address(RVA = "0x1000860", Offset = "0x1000860", VA = "0x1000860")]
	private AkSoundEngineController()
	{
	}

	[Token(Token = "0x60019DE")]
	[Address(RVA = "0x1000868", Offset = "0x1000868", VA = "0x1000868", Slot = "1")]
	~AkSoundEngineController()
	{
	}

	[Token(Token = "0x60019DF")]
	[Address(RVA = "0x1000918", Offset = "0x1000918", VA = "0x1000918")]
	public static string GetDecodedBankFolder()
	{
		return null;
	}

	[Token(Token = "0x60019E0")]
	[Address(RVA = "0x1000960", Offset = "0x1000960", VA = "0x1000960")]
	public static string GetDecodedBankFullPath()
	{
		return null;
	}

	[Token(Token = "0x60019E1")]
	[Address(RVA = "0x1000A04", Offset = "0x1000A04", VA = "0x1000A04")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60019E2")]
	[Address(RVA = "0x1000AD4", Offset = "0x1000AD4", VA = "0x1000AD4")]
	public void Init(AkInitializer akInitializer)
	{
	}

	[Token(Token = "0x60019E3")]
	[Address(RVA = "0x1000C88", Offset = "0x1000C88", VA = "0x1000C88")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60019E4")]
	[Address(RVA = "0x1000C8C", Offset = "0x1000C8C", VA = "0x1000C8C")]
	public void Terminate()
	{
	}

	[Token(Token = "0x60019E5")]
	[Address(RVA = "0x1000CEC", Offset = "0x1000CEC", VA = "0x1000CEC")]
	public void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x60019E6")]
	[Address(RVA = "0x1000DD4", Offset = "0x1000DD4", VA = "0x1000DD4")]
	public void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60019E7")]
	[Address(RVA = "0x1000CFC", Offset = "0x1000CFC", VA = "0x1000CFC")]
	private void ActivateAudio(bool activate, bool renderAnyway = false)
	{
	}
}
[Token(Token = "0x2000376")]
public abstract class AkSpatialAudioBase : MonoBehaviour
{
	[Token(Token = "0x4001662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly AkRoom.PriorityList roomPriorityList;

	[Token(Token = "0x60019E8")]
	[Address(RVA = "0x1110260", Offset = "0x1110260", VA = "0x1110260")]
	protected void SetGameObjectInHighestPriorityRoom()
	{
	}

	[Token(Token = "0x60019E9")]
	[Address(RVA = "0x11102F8", Offset = "0x11102F8", VA = "0x11102F8")]
	public void EnteredRoom(AkRoom room)
	{
	}

	[Token(Token = "0x60019EA")]
	[Address(RVA = "0x111032C", Offset = "0x111032C", VA = "0x111032C")]
	public void ExitedRoom(AkRoom room)
	{
	}

	[Token(Token = "0x60019EB")]
	[Address(RVA = "0x1110360", Offset = "0x1110360", VA = "0x1110360")]
	public void SetGameObjectInRoom()
	{
	}

	[Token(Token = "0x60019EC")]
	[Address(RVA = "0x1110490", Offset = "0x1110490", VA = "0x1110490")]
	protected AkSpatialAudioBase()
	{
	}
}
[Token(Token = "0x2000377")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD34A0", Offset = "0xBD34A0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD34A0", Offset = "0xBD34A0")]
public class AkSpatialAudioEmitter : AkSpatialAudioBase
{
	[Token(Token = "0x4001663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE3728", Offset = "0xBE3728")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE3728", Offset = "0xBE3728")]
	public AuxBus reflectAuxBus;

	[Token(Token = "0x4001664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE3788", Offset = "0xBE3788")]
	public float reflectionMaxPathLength;

	[Token(Token = "0x4001665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE37C0", Offset = "0xBE37C0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE37C0", Offset = "0xBE37C0")]
	public float reflectionsAuxBusGain;

	[Token(Token = "0x4001666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE3814", Offset = "0xBE3814")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE3814", Offset = "0xBE3814")]
	public uint reflectionsOrder;

	[Token(Token = "0x4001667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE3868", Offset = "0xBE3868")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE3868", Offset = "0xBE3868")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE3868", Offset = "0xBE3868")]
	public float roomReverbAuxBusGain;

	[Token(Token = "0x4001668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE38E0", Offset = "0xBE38E0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE38E0", Offset = "0xBE38E0")]
	public uint diffractionMaxEdges;

	[Token(Token = "0x4001669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE3940", Offset = "0xBE3940")]
	public uint diffractionMaxPaths;

	[Token(Token = "0x400166A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE3978", Offset = "0xBE3978")]
	public uint diffractionMaxPathLength;

	[Token(Token = "0x60019ED")]
	[Address(RVA = "0x1110504", Offset = "0x1110504", VA = "0x1110504")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60019EE")]
	[Address(RVA = "0x1110688", Offset = "0x1110688", VA = "0x1110688")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60019EF")]
	[Address(RVA = "0x1110704", Offset = "0x1110704", VA = "0x1110704")]
	public AkSpatialAudioEmitter()
	{
	}
}
[Token(Token = "0x2000378")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD3528", Offset = "0xBD3528")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD3528", Offset = "0xBD3528")]
[DisallowMultipleComponent]
public class AkSpatialAudioListener : AkSpatialAudioBase
{
	[Token(Token = "0x20006C0")]
	public class SpatialAudioListenerList
	{
		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<AkSpatialAudioListener> listenerList;

		[Token(Token = "0x170003B3")]
		public List<AkSpatialAudioListener> ListenerList
		{
			[Token(Token = "0x60026C8")]
			[Address(RVA = "0x11115FC", Offset = "0x11115FC", VA = "0x11115FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0x11112F0", Offset = "0x11112F0", VA = "0x11112F0")]
		public bool Add(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0x111143C", Offset = "0x111143C", VA = "0x111143C")]
		public bool Remove(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0x1111604", Offset = "0x1111604", VA = "0x1111604")]
		private void Refresh()
		{
		}

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0x1111580", Offset = "0x1111580", VA = "0x1111580")]
		public SpatialAudioListenerList()
		{
		}
	}

	[Token(Token = "0x400166B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSpatialAudioListener s_SpatialAudioListener;

	[Token(Token = "0x400166C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly SpatialAudioListenerList spatialAudioListeners;

	[Token(Token = "0x400166D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AkAudioListener AkAudioListener;

	[Token(Token = "0x17000212")]
	public static AkAudioListener TheSpatialAudioListener
	{
		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x11110D8", Offset = "0x11110D8", VA = "0x11110D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000213")]
	public static SpatialAudioListenerList SpatialAudioListeners
	{
		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x11111B0", Offset = "0x11111B0", VA = "0x11111B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60019F2")]
	[Address(RVA = "0x1111218", Offset = "0x1111218", VA = "0x1111218")]
	private void Awake()
	{
	}

	[Token(Token = "0x60019F3")]
	[Address(RVA = "0x1111278", Offset = "0x1111278", VA = "0x1111278")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60019F4")]
	[Address(RVA = "0x11113C4", Offset = "0x11113C4", VA = "0x11113C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60019F5")]
	[Address(RVA = "0x1111510", Offset = "0x1111510", VA = "0x1111510")]
	public AkSpatialAudioListener()
	{
	}
}
[Token(Token = "0x2000379")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD35C0", Offset = "0xBD35C0")]
public class AkState : AkDragDropTriggerHandler
{
	[Token(Token = "0x400166E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public State data;

	[Token(Token = "0x400166F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBE39B0", Offset = "0xBE39B0")]
	private int valueIdInternal;

	[Token(Token = "0x4001670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBE3A0C", Offset = "0xBE3A0C")]
	private int groupIdInternal;

	[Token(Token = "0x4001671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBE3A68", Offset = "0xBE3A68")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x4001672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBE3AC4", Offset = "0xBE3AC4")]
	private byte[] groupGuidInternal;

	[Token(Token = "0x17000214")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x11118F0", Offset = "0x11118F0", VA = "0x11118F0", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000215")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBEDA7C", Offset = "0xBEDA7C")]
	public int valueID
	{
		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x1111914", Offset = "0x1111914", VA = "0x1111914")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000216")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBEDAB4", Offset = "0xBEDAB4")]
	public int groupID
	{
		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x1111928", Offset = "0x1111928", VA = "0x1111928")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000217")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBEDAEC", Offset = "0xBEDAEC")]
	public byte[] valueGuid
	{
		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x111193C", Offset = "0x111193C", VA = "0x111193C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000218")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBEDB24", Offset = "0xBEDB24")]
	public byte[] groupGuid
	{
		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x1111A00", Offset = "0x1111A00", VA = "0x1111A00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60019F8")]
	[Address(RVA = "0x11118F8", Offset = "0x11118F8", VA = "0x11118F8", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x60019FD")]
	[Address(RVA = "0x1111AC0", Offset = "0x1111AC0", VA = "0x1111AC0")]
	public AkState()
	{
	}
}
[Token(Token = "0x200037A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD35F8", Offset = "0xBD35F8")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD35F8", Offset = "0xBD35F8")]
[ExecuteInEditMode]
public class AkSurfaceReflector : MonoBehaviour
{
	[Token(Token = "0x4001673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE3B20", Offset = "0xBE3B20")]
	public AcousticTexture AcousticTexture;

	[Token(Token = "0x4001674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE3B58", Offset = "0xBE3B58")]
	public bool EnableDiffraction;

	[Token(Token = "0x4001675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE3B90", Offset = "0xBE3B90")]
	public bool EnableDiffractionOnBoundaryEdges;

	[Token(Token = "0x4001676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE3BC8", Offset = "0xBE3BC8")]
	public AkRoom AssociatedRoom;

	[Token(Token = "0x4001677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshFilter MeshFilter;

	[Token(Token = "0x60019FE")]
	[Address(RVA = "0x1111F10", Offset = "0x1111F10", VA = "0x1111F10")]
	public static ulong GetAkGeometrySetID(MeshFilter meshFilter)
	{
		return default(ulong);
	}

	[Token(Token = "0x60019FF")]
	[Address(RVA = "0x1111F34", Offset = "0x1111F34", VA = "0x1111F34")]
	public static void AddGeometrySet(AcousticTexture acousticTexture, MeshFilter meshFilter, ulong roomID, bool enableDiffraction, bool enableDiffractionOnBoundaryEdges)
	{
	}

	[Token(Token = "0x6001A00")]
	[Address(RVA = "0x1112F8C", Offset = "0x1112F8C", VA = "0x1112F8C")]
	public static void RemoveGeometrySet(MeshFilter meshFilter)
	{
	}

	[Token(Token = "0x6001A01")]
	[Address(RVA = "0x1113050", Offset = "0x1113050", VA = "0x1113050")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A02")]
	[Address(RVA = "0x11130B0", Offset = "0x11130B0", VA = "0x11130B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001A03")]
	[Address(RVA = "0x1113188", Offset = "0x1113188", VA = "0x1113188")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001A04")]
	[Address(RVA = "0x1113190", Offset = "0x1113190", VA = "0x1113190")]
	public AkSurfaceReflector()
	{
	}
}
[Token(Token = "0x200037B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD36A0", Offset = "0xBD36A0")]
public class AkSwitch : AkDragDropTriggerHandler
{
	[Token(Token = "0x4001678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Switch data;

	[Token(Token = "0x4001679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBE3C00", Offset = "0xBE3C00")]
	private int valueIdInternal;

	[Token(Token = "0x400167A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBE3C5C", Offset = "0xBE3C5C")]
	private int groupIdInternal;

	[Token(Token = "0x400167B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBE3CB8", Offset = "0xBE3CB8")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x400167C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBE3D14", Offset = "0xBE3D14")]
	private byte[] groupGuidInternal;

	[Token(Token = "0x17000219")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x1113204", Offset = "0x1113204", VA = "0x1113204", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700021A")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBEDB5C", Offset = "0xBEDB5C")]
	public int valueID
	{
		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x11132BC", Offset = "0x11132BC", VA = "0x11132BC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700021B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBEDB94", Offset = "0xBEDB94")]
	public int groupID
	{
		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x11132D0", Offset = "0x11132D0", VA = "0x11132D0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700021C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBEDBCC", Offset = "0xBEDBCC")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x11132E4", Offset = "0x11132E4", VA = "0x11132E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700021D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBEDC04", Offset = "0xBEDC04")]
	public byte[] groupGuid
	{
		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x11133A8", Offset = "0x11133A8", VA = "0x11133A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001A06")]
	[Address(RVA = "0x111320C", Offset = "0x111320C", VA = "0x111320C", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001A0B")]
	[Address(RVA = "0x1113468", Offset = "0x1113468", VA = "0x1113468")]
	public AkSwitch()
	{
	}
}
[Token(Token = "0x200037C")]
[DisallowMultipleComponent]
public class AkTerminator : MonoBehaviour
{
	[Token(Token = "0x6001A0C")]
	[Address(RVA = "0x11138B8", Offset = "0x11138B8", VA = "0x11138B8")]
	public AkTerminator()
	{
	}
}
[Token(Token = "0x200037D")]
public abstract class AkTriggerBase : MonoBehaviour
{
	[Token(Token = "0x20006C1")]
	public delegate void Trigger(GameObject in_gameObject);

	[Token(Token = "0x400167D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Trigger triggerDelegate;

	[Token(Token = "0x6001A0D")]
	[Address(RVA = "0x11151FC", Offset = "0x11151FC", VA = "0x11151FC")]
	public static Dictionary<uint, string> GetAllDerivedTypes()
	{
		return null;
	}

	[Token(Token = "0x6001A0E")]
	[Address(RVA = "0x1115618", Offset = "0x1115618", VA = "0x1115618")]
	protected AkTriggerBase()
	{
	}
}
[Token(Token = "0x200037E")]
public class AkTriggerCollisionEnter : AkTriggerBase
{
	[Token(Token = "0x400167E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6001A0F")]
	[Address(RVA = "0x1115A1C", Offset = "0x1115A1C", VA = "0x1115A1C")]
	private void OnCollisionEnter(Collision in_other)
	{
	}

	[Token(Token = "0x6001A10")]
	[Address(RVA = "0x1115B28", Offset = "0x1115B28", VA = "0x1115B28")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6001A11")]
	[Address(RVA = "0x1115C34", Offset = "0x1115C34", VA = "0x1115C34")]
	public AkTriggerCollisionEnter()
	{
	}
}
[Token(Token = "0x200037F")]
public class AkTriggerCollisionExit : AkTriggerBase
{
	[Token(Token = "0x400167F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6001A12")]
	[Address(RVA = "0x1115C3C", Offset = "0x1115C3C", VA = "0x1115C3C")]
	private void OnCollisionExit(Collision in_other)
	{
	}

	[Token(Token = "0x6001A13")]
	[Address(RVA = "0x1115D48", Offset = "0x1115D48", VA = "0x1115D48")]
	public AkTriggerCollisionExit()
	{
	}
}
[Token(Token = "0x2000380")]
public class AkTriggerDisable : AkTriggerBase
{
	[Token(Token = "0x6001A14")]
	[Address(RVA = "0x1115D50", Offset = "0x1115D50", VA = "0x1115D50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001A15")]
	[Address(RVA = "0x1115D64", Offset = "0x1115D64", VA = "0x1115D64")]
	public AkTriggerDisable()
	{
	}
}
[Token(Token = "0x2000381")]
public class AkTriggerEnable : AkTriggerBase
{
	[Token(Token = "0x6001A16")]
	[Address(RVA = "0x1115D6C", Offset = "0x1115D6C", VA = "0x1115D6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001A17")]
	[Address(RVA = "0x1115D80", Offset = "0x1115D80", VA = "0x1115D80")]
	public AkTriggerEnable()
	{
	}
}
[Token(Token = "0x2000382")]
public class AkTriggerEnter : AkTriggerBase
{
	[Token(Token = "0x4001680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6001A18")]
	[Address(RVA = "0x1115D88", Offset = "0x1115D88", VA = "0x1115D88")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6001A19")]
	[Address(RVA = "0x1115E94", Offset = "0x1115E94", VA = "0x1115E94")]
	public AkTriggerEnter()
	{
	}
}
[Token(Token = "0x2000383")]
public class AkTriggerExit : AkTriggerBase
{
	[Token(Token = "0x4001681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6001A1A")]
	[Address(RVA = "0x1115E9C", Offset = "0x1115E9C", VA = "0x1115E9C")]
	private void OnTriggerExit(Collider in_other)
	{
	}

	[Token(Token = "0x6001A1B")]
	[Address(RVA = "0x1115FA8", Offset = "0x1115FA8", VA = "0x1115FA8")]
	public AkTriggerExit()
	{
	}
}
[Token(Token = "0x2000384")]
public abstract class AkTriggerHandler : MonoBehaviour
{
	[Token(Token = "0x4001682")]
	public const int AWAKE_TRIGGER_ID = 1151176110;

	[Token(Token = "0x4001683")]
	public const int START_TRIGGER_ID = 1281810935;

	[Token(Token = "0x4001684")]
	public const int DESTROY_TRIGGER_ID = -358577003;

	[Token(Token = "0x4001685")]
	public const int MAX_NB_TRIGGERS = 32;

	[Token(Token = "0x4001686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<uint, string> triggerTypes;

	[Token(Token = "0x4001687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool didDestroy;

	[Token(Token = "0x4001688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> triggerList;

	[Token(Token = "0x4001689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useOtherObject;

	[Token(Token = "0x6001A1C")]
	public abstract void HandleEvent(GameObject in_gameObject);

	[Token(Token = "0x6001A1D")]
	[Address(RVA = "0x1115FB0", Offset = "0x1115FB0", VA = "0x1115FB0", Slot = "5")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001A1E")]
	[Address(RVA = "0x1116498", Offset = "0x1116498", VA = "0x1116498", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6001A1F")]
	[Address(RVA = "0x111651C", Offset = "0x111651C", VA = "0x111651C", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6001A20")]
	[Address(RVA = "0x111652C", Offset = "0x111652C", VA = "0x111652C")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6001A21")]
	[Address(RVA = "0x111608C", Offset = "0x111608C", VA = "0x111608C")]
	protected void RegisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}

	[Token(Token = "0x6001A22")]
	[Address(RVA = "0x1116610", Offset = "0x1116610", VA = "0x1116610")]
	protected void UnregisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}

	[Token(Token = "0x6001A23")]
	[Address(RVA = "0x11169C8", Offset = "0x11169C8", VA = "0x11169C8")]
	protected AkTriggerHandler()
	{
	}
}
[Token(Token = "0x2000385")]
[ExecuteInEditMode]
public abstract class AkDragDropTriggerHandler : AkTriggerHandler
{
	[Token(Token = "0x1700021E")]
	protected abstract BaseType WwiseType
	{
		[Token(Token = "0x6001A25")]
		get;
	}

	[Token(Token = "0x6001A26")]
	[Address(RVA = "0x14219D4", Offset = "0x14219D4", VA = "0x14219D4", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001A27")]
	[Address(RVA = "0x14219DC", Offset = "0x14219DC", VA = "0x14219DC", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001A28")]
	[Address(RVA = "0x14219E4", Offset = "0x14219E4", VA = "0x14219E4", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6001A29")]
	[Address(RVA = "0x14219EC", Offset = "0x14219EC", VA = "0x14219EC")]
	protected AkDragDropTriggerHandler()
	{
	}
}
[Token(Token = "0x2000386")]
public class AkTriggerMouseDown : AkTriggerBase
{
	[Token(Token = "0x6001A2A")]
	[Address(RVA = "0x1116AC4", Offset = "0x1116AC4", VA = "0x1116AC4")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6001A2B")]
	[Address(RVA = "0x1116AD8", Offset = "0x1116AD8", VA = "0x1116AD8")]
	public AkTriggerMouseDown()
	{
	}
}
[Token(Token = "0x2000387")]
public class AkTriggerMouseEnter : AkTriggerBase
{
	[Token(Token = "0x6001A2C")]
	[Address(RVA = "0x1116AE0", Offset = "0x1116AE0", VA = "0x1116AE0")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x6001A2D")]
	[Address(RVA = "0x1116AF4", Offset = "0x1116AF4", VA = "0x1116AF4")]
	public AkTriggerMouseEnter()
	{
	}
}
[Token(Token = "0x2000388")]
public class AkTriggerMouseExit : AkTriggerBase
{
	[Token(Token = "0x6001A2E")]
	[Address(RVA = "0x1116AFC", Offset = "0x1116AFC", VA = "0x1116AFC")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x6001A2F")]
	[Address(RVA = "0x1116B10", Offset = "0x1116B10", VA = "0x1116B10")]
	public AkTriggerMouseExit()
	{
	}
}
[Token(Token = "0x2000389")]
public class AkTriggerMouseUp : AkTriggerBase
{
	[Token(Token = "0x6001A30")]
	[Address(RVA = "0x1116B18", Offset = "0x1116B18", VA = "0x1116B18")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x6001A31")]
	[Address(RVA = "0x1116B2C", Offset = "0x1116B2C", VA = "0x1116B2C")]
	public AkTriggerMouseUp()
	{
	}
}
namespace AK.Wwise
{
	[Serializable]
	[Token(Token = "0x200038A")]
	public class AcousticTexture : BaseType
	{
		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseAcousticTextureReference WwiseObjectReference;

		[Token(Token = "0x1700021F")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6001A32")]
			[Address(RVA = "0x140A1E8", Offset = "0x140A1E8", VA = "0x140A1E8", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A33")]
			[Address(RVA = "0x140A1F0", Offset = "0x140A1F0", VA = "0x140A1F0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000220")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6001A34")]
			[Address(RVA = "0x140A284", Offset = "0x140A284", VA = "0x140A284", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x140A28C", Offset = "0x140A28C", VA = "0x140A28C")]
		public AcousticTexture()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038B")]
	public class AuxBus : BaseType
	{
		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseAuxBusReference WwiseObjectReference;

		[Token(Token = "0x17000221")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6001A36")]
			[Address(RVA = "0x140A29C", Offset = "0x140A29C", VA = "0x140A29C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A37")]
			[Address(RVA = "0x140A2A4", Offset = "0x140A2A4", VA = "0x140A2A4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6001A38")]
			[Address(RVA = "0x140A338", Offset = "0x140A338", VA = "0x140A338", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x140A340", Offset = "0x140A340", VA = "0x140A340")]
		public AuxBus()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038C")]
	public class Bank : BaseType
	{
		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseBankReference WwiseObjectReference;

		[Token(Token = "0x17000223")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6001A3A")]
			[Address(RVA = "0x140A348", Offset = "0x140A348", VA = "0x140A348", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0x140A350", Offset = "0x140A350", VA = "0x140A350", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000224")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6001A3C")]
			[Address(RVA = "0x140A3E4", Offset = "0x140A3E4", VA = "0x140A3E4", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x140A3EC", Offset = "0x140A3EC", VA = "0x140A3EC")]
		public void Load(bool decodeBank = false, bool saveDecodedBank = false)
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x140A674", Offset = "0x140A674", VA = "0x140A674")]
		public void LoadAsync([Optional] AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x140A8B8", Offset = "0x140A8B8", VA = "0x140A8B8")]
		public void Unload()
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x140AA98", Offset = "0x140AA98", VA = "0x140AA98")]
		public Bank()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038D")]
	public abstract class BaseGroupType : BaseType
	{
		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBE3D70", Offset = "0xBE3D70")]
		private int groupIdInternal;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBE3DCC", Offset = "0xBE3DCC")]
		private byte[] groupGuidInternal;

		[Token(Token = "0x17000225")]
		public WwiseObjectReference GroupWwiseObjectReference
		{
			[Token(Token = "0x6001A41")]
			[Address(RVA = "0x140AAA0", Offset = "0x140AAA0", VA = "0x140AAA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000226")]
		public abstract WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x6001A42")]
			get;
		}

		[Token(Token = "0x17000227")]
		public uint GroupId
		{
			[Token(Token = "0x6001A43")]
			[Address(RVA = "0x140AB84", Offset = "0x140AB84", VA = "0x140AB84")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000228")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBEDC3C", Offset = "0xBEDC3C")]
		public int groupID
		{
			[Token(Token = "0x6001A45")]
			[Address(RVA = "0x140AD3C", Offset = "0x140AD3C", VA = "0x140AD3C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000229")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBEDC74", Offset = "0xBEDC74")]
		public byte[] groupGuid
		{
			[Token(Token = "0x6001A46")]
			[Address(RVA = "0x140AD40", Offset = "0x140AD40", VA = "0x140AD40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x140AC20", Offset = "0x140AC20", VA = "0x140AC20", Slot = "8")]
		public override bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x140AE00", Offset = "0x140AE00", VA = "0x140AE00")]
		protected BaseGroupType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038E")]
	public abstract class BaseType
	{
		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBE3E28", Offset = "0xBE3E28")]
		private int idInternal;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBE3E84", Offset = "0xBE3E84")]
		private byte[] valueGuidInternal;

		[Token(Token = "0x1700022A")]
		public abstract WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6001A48")]
			get;
			[Token(Token = "0x6001A49")]
			set;
		}

		[Token(Token = "0x1700022B")]
		public abstract WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6001A4A")]
			get;
		}

		[Token(Token = "0x1700022C")]
		public virtual string Name
		{
			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0x140AE08", Offset = "0x140AE08", VA = "0x140AE08", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022D")]
		public uint Id
		{
			[Token(Token = "0x6001A4C")]
			[Address(RVA = "0x140AE9C", Offset = "0x140AE9C", VA = "0x140AE9C")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700022E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBEDCAC", Offset = "0xBEDCAC")]
		public int ID
		{
			[Token(Token = "0x6001A51")]
			[Address(RVA = "0x140B07C", Offset = "0x140B07C", VA = "0x140B07C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700022F")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBEDCE4", Offset = "0xBEDCE4")]
		public byte[] valueGuid
		{
			[Token(Token = "0x6001A52")]
			[Address(RVA = "0x140B080", Offset = "0x140B080", VA = "0x140B080")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x140ACB8", Offset = "0x140ACB8", VA = "0x140ACB8", Slot = "8")]
		public virtual bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x140AEEC", Offset = "0x140AEEC", VA = "0x140AEEC")]
		public bool Validate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x140AFC8", Offset = "0x140AFC8", VA = "0x140AFC8")]
		protected void Verify(AKRESULT result)
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x140AFCC", Offset = "0x140AFCC", VA = "0x140AFCC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x140A294", Offset = "0x140A294", VA = "0x140A294")]
		protected BaseType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038F")]
	public class CallbackFlags
	{
		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint value;

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x140B140", Offset = "0x140B140", VA = "0x140B140")]
		public CallbackFlags()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000390")]
	public class Event : BaseType
	{
		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseEventReference WwiseObjectReference;

		[Token(Token = "0x17000230")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6001A55")]
			[Address(RVA = "0x140B148", Offset = "0x140B148", VA = "0x140B148", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A56")]
			[Address(RVA = "0x140B150", Offset = "0x140B150", VA = "0x140B150", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000231")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6001A57")]
			[Address(RVA = "0x140B1E4", Offset = "0x140B1E4", VA = "0x140B1E4", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x140B1EC", Offset = "0x140B1EC", VA = "0x140B1EC")]
		private void VerifyPlayingID(uint playingId)
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x140B1F0", Offset = "0x140B1F0", VA = "0x140B1F0")]
		public uint Post(GameObject gameObject)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x140B2A0", Offset = "0x140B2A0", VA = "0x140B2A0")]
		public uint Post(GameObject gameObject, CallbackFlags flags, AkCallbackManager.EventCallback callback, [Optional] object cookie)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x140B37C", Offset = "0x140B37C", VA = "0x140B37C")]
		public uint Post(GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, [Optional] object cookie)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x140B450", Offset = "0x140B450", VA = "0x140B450")]
		public void Stop(GameObject gameObject, int transitionDuration = 0, AkCurveInterpolation curveInterpolation = AkCurveInterpolation.AkCurveInterpolation_Linear)
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x140B460", Offset = "0x140B460", VA = "0x140B460")]
		public void ExecuteAction(GameObject gameObject, AkActionOnEventType actionOnEventType, int transitionDuration, AkCurveInterpolation curveInterpolation)
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x140B530", Offset = "0x140B530", VA = "0x140B530")]
		public void PostMIDI(GameObject gameObject, AkMIDIPostArray array)
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x140B5A0", Offset = "0x140B5A0", VA = "0x140B5A0")]
		public void PostMIDI(GameObject gameObject, AkMIDIPostArray array, int count)
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x140B618", Offset = "0x140B618", VA = "0x140B618")]
		public void StopMIDI(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x140B6C4", Offset = "0x140B6C4", VA = "0x140B6C4")]
		public void StopMIDI()
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x140B75C", Offset = "0x140B75C", VA = "0x140B75C")]
		public Event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000391")]
	public class RTPC : BaseType
	{
		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseRtpcReference WwiseObjectReference;

		[Token(Token = "0x17000232")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6001A63")]
			[Address(RVA = "0x140B764", Offset = "0x140B764", VA = "0x140B764", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A64")]
			[Address(RVA = "0x140B76C", Offset = "0x140B76C", VA = "0x140B76C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000233")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6001A65")]
			[Address(RVA = "0x140B800", Offset = "0x140B800", VA = "0x140B800", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x140B808", Offset = "0x140B808", VA = "0x140B808")]
		public void SetValue(GameObject gameObject, float value)
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x140B8C8", Offset = "0x140B8C8", VA = "0x140B8C8")]
		public float GetValue(GameObject gameObject)
		{
			return default(float);
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x140B9BC", Offset = "0x140B9BC", VA = "0x140B9BC")]
		public void SetGlobalValue(float value)
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x140BA68", Offset = "0x140BA68", VA = "0x140BA68")]
		public float GetGlobalValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x140BA70", Offset = "0x140BA70", VA = "0x140BA70")]
		public RTPC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000392")]
	public class State : BaseGroupType
	{
		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WwiseStateReference WwiseObjectReference;

		[Token(Token = "0x17000234")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6001A6B")]
			[Address(RVA = "0x140BA78", Offset = "0x140BA78", VA = "0x140BA78", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A6C")]
			[Address(RVA = "0x140BA80", Offset = "0x140BA80", VA = "0x140BA80", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6001A6D")]
			[Address(RVA = "0x140BB14", Offset = "0x140BB14", VA = "0x140BB14", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x17000236")]
		public override WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x6001A6E")]
			[Address(RVA = "0x140BB1C", Offset = "0x140BB1C", VA = "0x140BB1C", Slot = "9")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x140BB24", Offset = "0x140BB24", VA = "0x140BB24")]
		public void SetValue()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x140BBCC", Offset = "0x140BBCC", VA = "0x140BBCC")]
		public State()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000393")]
	public class Switch : BaseGroupType
	{
		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WwiseSwitchReference WwiseObjectReference;

		[Token(Token = "0x17000237")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6001A71")]
			[Address(RVA = "0x140BBD4", Offset = "0x140BBD4", VA = "0x140BBD4", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A72")]
			[Address(RVA = "0x140BBDC", Offset = "0x140BBDC", VA = "0x140BBDC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6001A73")]
			[Address(RVA = "0x140BC70", Offset = "0x140BC70", VA = "0x140BC70", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x17000239")]
		public override WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x6001A74")]
			[Address(RVA = "0x140BC78", Offset = "0x140BC78", VA = "0x140BC78", Slot = "9")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x140BC80", Offset = "0x140BC80", VA = "0x140BC80")]
		public void SetValue(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x140BD3C", Offset = "0x140BD3C", VA = "0x140BD3C")]
		public Switch()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000394")]
	public class Trigger : BaseType
	{
		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseTriggerReference WwiseObjectReference;

		[Token(Token = "0x1700023A")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6001A77")]
			[Address(RVA = "0x140BD44", Offset = "0x140BD44", VA = "0x140BD44", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A78")]
			[Address(RVA = "0x140BD4C", Offset = "0x140BD4C", VA = "0x140BD4C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700023B")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6001A79")]
			[Address(RVA = "0x140BDE0", Offset = "0x140BDE0", VA = "0x140BDE0", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x140BDE8", Offset = "0x140BDE8", VA = "0x140BDE8")]
		public void Post(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x140BE94", Offset = "0x140BE94", VA = "0x140BE94")]
		public Trigger()
		{
		}
	}
}
namespace Cinemachine
{
	[Token(Token = "0x2000395")]
	public static class CinemachineBasePathExtension
	{
		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xED9C1C", Offset = "0xED9C1C", VA = "0xED9C1C")]
		public static float3[] BakePositionsWithGranularity(this CinemachinePathBase path, float granularity)
		{
			return null;
		}
	}
}
namespace Samples.Common
{
	[Token(Token = "0x2000396")]
	[AttributeAttribute(Name = "UpdateInGroupAttribute", RVA = "0xBD3708", Offset = "0xBD3708")]
	[AttributeAttribute(Name = "UpdateAfterAttribute", RVA = "0xBD3708", Offset = "0xBD3708")]
	public class SpawnRandomInSphereSystem : ComponentSystem
	{
		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xE40A10", Offset = "0xE40A10", VA = "0xE40A10", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xE40ADC", Offset = "0xE40ADC", VA = "0xE40ADC")]
		public SpawnRandomInSphereSystem()
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xE40AE4", Offset = "0xE40AE4", VA = "0xE40AE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEAE6C", Offset = "0xBEAE6C")]
		private void <OnUpdate>b__0_0(Entity e, SpawnRandomInSphere spawner, ref LocalToWorld localToWorld)
		{
		}
	}
}
namespace Samples.Boids
{
	[Serializable]
	[Token(Token = "0x2000397")]
	[AttributeAttribute(Name = "WriteGroupAttribute", RVA = "0xBD3794", Offset = "0xBD3794")]
	public struct Boid : ISharedComponentData
	{
		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float CellRadius;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float SeparationWeight;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float AlignmentWeight;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float TargetWeight;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ObstacleAversionDistance;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float MoveSpeed;
	}
	[Token(Token = "0x2000398")]
	public struct BoidObstacle : IComponentData
	{
	}
	[Token(Token = "0x2000399")]
	[DisallowMultipleComponent]
	public class BoidObstacleProxy : ComponentDataProxy<BoidObstacle>
	{
		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xE40970", Offset = "0xE40970", VA = "0xE40970")]
		public BoidObstacleProxy()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public struct BoidTarget : IComponentData
	{
	}
	[Token(Token = "0x200039B")]
	[DisallowMultipleComponent]
	public class BoidTargetProxy : ComponentDataProxy<BoidTarget>
	{
		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xE409C0", Offset = "0xE409C0", VA = "0xE409C0")]
		public BoidTargetProxy()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200039C")]
	public struct SpawnRandomInSphere : ISharedComponentData
	{
		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Entity Prefab;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float Radius;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int Count;
	}
}
namespace Samples.Boids.Authoring
{
	[Token(Token = "0x200039D")]
	[RequiresEntityConversion]
	public class Boid : MonoBehaviour, IConvertGameObjectToEntity
	{
		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoidData m_boidData;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CellRadius;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float SeparationWeight;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AlignmentWeight;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float TargetWeight;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float ObstacleAversionDistance;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MoveSpeed;

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xE407C4", Offset = "0xE407C4", VA = "0xE407C4", Slot = "4")]
		public void Convert(Entity entity, EntityManager dstManager, GameObjectConversionSystem conversionSystem)
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xE40864", Offset = "0xE40864", VA = "0xE40864")]
		public Boid()
		{
		}
	}
	[Token(Token = "0x200039E")]
	[RequiresEntityConversion]
	public class SpawnRandomInSphere : MonoBehaviour, IDeclareReferencedPrefabs, IConvertGameObjectToEntity
	{
		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Prefab;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Radius;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Count;

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xE4086C", Offset = "0xE4086C", VA = "0xE4086C", Slot = "4")]
		public void Convert(Entity entity, EntityManager dstManager, GameObjectConversionSystem conversionSystem)
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xE40900", Offset = "0xE40900", VA = "0xE40900", Slot = "5")]
		public void DeclareReferencedPrefabs(List<GameObject> referencedPrefabs)
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xE40968", Offset = "0xE40968", VA = "0xE40968")]
		public SpawnRandomInSphere()
		{
		}
	}
}
namespace Analytics
{
	[Token(Token = "0x200039F")]
	public class AnalyticsManager : CacheBehaviour
	{
		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AnalyticsSDKWrapper m_analyticsSDK;

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x111C9E4", Offset = "0x111C9E4", VA = "0x111C9E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x111CA9C", Offset = "0x111CA9C", VA = "0x111CA9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x111CABC", Offset = "0x111CABC", VA = "0x111CABC")]
		private void ConnectToProvider()
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x111CADC", Offset = "0x111CADC", VA = "0x111CADC")]
		public void SendToCloud(AnalyticsEventData analyticsEvent)
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x111C9EC", Offset = "0x111C9EC", VA = "0x111C9EC")]
		private void Validate(UnityEngine.Object objectMember)
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x111CAFC", Offset = "0x111CAFC", VA = "0x111CAFC")]
		private void LogFailedValidationAndDisableComponent(string problematicMember)
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x111CBA4", Offset = "0x111CBA4", VA = "0x111CBA4")]
		public AnalyticsManager()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD3838", Offset = "0xBD3838")]
	public class AnalyticsEventData : ScriptableObject
	{
		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_name;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AnalyticsParameterData> m_stringParameters;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<AnalyticsParameterData> m_intParameters;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<AnalyticsParameterData> m_floatParameters;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<AnalyticsParameterData> m_boolParameters;

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x111C9DC", Offset = "0x111C9DC", VA = "0x111C9DC")]
		public AnalyticsEventData()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public abstract class AnalyticsParameterData : ScriptableObject
	{
		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_name;

		[Token(Token = "0x40016B1")]
		public const string m_errorMessage = "AnalyticsManager> the value is null here";

		[Token(Token = "0x6001A8F")]
		public abstract object GetValue();

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x111CBAC", Offset = "0x111CBAC", VA = "0x111CBAC")]
		protected AnalyticsParameterData()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD3898", Offset = "0xBD3898")]
	public class BoolAnalyticsParameterData : AnalyticsParameterData
	{
		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoolVariable m_value;

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x111CBBC", Offset = "0x111CBBC", VA = "0x111CBBC", Slot = "4")]
		public override object GetValue()
		{
			return null;
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x111CCA8", Offset = "0x111CCA8", VA = "0x111CCA8")]
		public BoolAnalyticsParameterData()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD38F8", Offset = "0xBD38F8")]
	public class FloatVariableAnalyticsParameterData : AnalyticsParameterData
	{
		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FloatVariable m_value;

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x111CCB0", Offset = "0x111CCB0", VA = "0x111CCB0", Slot = "4")]
		public override object GetValue()
		{
			return null;
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x111CDB8", Offset = "0x111CDB8", VA = "0x111CDB8")]
		public FloatVariableAnalyticsParameterData()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD3958", Offset = "0xBD3958")]
	public class IntAnalyticsParameterData : AnalyticsParameterData
	{
		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntVariable m_value;

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x111CDC0", Offset = "0x111CDC0", VA = "0x111CDC0", Slot = "4")]
		public override object GetValue()
		{
			return null;
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x111CEF4", Offset = "0x111CEF4", VA = "0x111CEF4")]
		public IntAnalyticsParameterData()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD39B8", Offset = "0xBD39B8")]
	public class StringAnalyticsParameterData : AnalyticsParameterData
	{
		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StringVariable m_value;

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x111CEFC", Offset = "0x111CEFC", VA = "0x111CEFC", Slot = "4")]
		public override object GetValue()
		{
			return null;
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x111D000", Offset = "0x111D000", VA = "0x111D000")]
		public StringAnalyticsParameterData()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public abstract class AnalyticsSDKWrapper : CacheBehaviour
	{
		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AnalyticsSDKWrapper m_wrappedSDK;

		[Token(Token = "0x6001A99")]
		public abstract void InitializeSDK();

		[Token(Token = "0x6001A9A")]
		public abstract void SendingData(AnalyticsEventData m_analyticsEvent);

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x111CBB4", Offset = "0x111CBB4", VA = "0x111CBB4")]
		protected AnalyticsSDKWrapper()
		{
		}
	}
}
namespace Ikimasho.Tools.Debug
{
	[Token(Token = "0x20003A7")]
	public static class DebugManager
	{
		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xF2E4D4", Offset = "0xF2E4D4", VA = "0xF2E4D4")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x6001A9D")]
		public static void Log<T>(string message, T val)
		{
		}

		[Token(Token = "0x6001A9E")]
		public static void Log<T>(string message, List<T> values)
		{
		}

		[Token(Token = "0x6001A9F")]
		public static void Log<T>(string message, T[] values)
		{
		}

		[Token(Token = "0x6001AA0")]
		public static void Log<T>(string message, Dictionary<T, T> values)
		{
		}
	}
}
namespace Ikimasho.System.Boids
{
	[Token(Token = "0x20003A8")]
	public class BoidHordSpawnManager : CacheBehaviour
	{
		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Expandable]
		public BoidHordSpawnData m_boidHordSpawnData;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int[] _distributionQuantity;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float _deltaBetweenSpawns;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float _lastSpawn;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float _elapsedCurveDistance;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int[] _spawnedQuantity;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private List<CinemachinePath> _spawnedPath;

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xF2D5D4", Offset = "0xF2D5D4", VA = "0xF2D5D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xF2D728", Offset = "0xF2D728", VA = "0xF2D728")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xF2DE1C", Offset = "0xF2DE1C", VA = "0xF2DE1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xF2DEFC", Offset = "0xF2DEFC", VA = "0xF2DEFC")]
		private void SpawnOneShot()
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xF2DA84", Offset = "0xF2DA84", VA = "0xF2DA84")]
		private void SpawnSection()
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xF2E1D4", Offset = "0xF2E1D4", VA = "0xF2E1D4")]
		private void PutObjectOnCart(GameObject target)
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xF2D678", Offset = "0xF2D678", VA = "0xF2D678")]
		private void CheckParameters()
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xF2D948", Offset = "0xF2D948", VA = "0xF2D948")]
		private int[] GetQuantityDistributionOfSpawn()
		{
			return null;
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xF2E3A8", Offset = "0xF2E3A8", VA = "0xF2E3A8")]
		private Vector3 GetRandomPositionOnSphereSurface()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xF2E470", Offset = "0xF2E470", VA = "0xF2E470")]
		private CinemachinePath GetRandomCurve()
		{
			return null;
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xF2E4CC", Offset = "0xF2E4CC", VA = "0xF2E4CC")]
		public BoidHordSpawnManager()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public class BoidHordSpawnData : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20006C2")]
		public struct BoidHordWeighted
		{
			[Token(Token = "0x40020F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string m_name;

			[Token(Token = "0x40020F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject m_prefab;

			[Token(Token = "0x40020F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int m_weight;
		}

		[Token(Token = "0x20006C3")]
		public enum EBoidHordSpawnShape
		{
			[Token(Token = "0x40020F6")]
			INVALID = -1,
			[Token(Token = "0x40020F7")]
			POINT,
			[Token(Token = "0x40020F8")]
			SPHERE,
			[Token(Token = "0x40020F9")]
			MAX
		}

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE3EF0", Offset = "0xBE3EF0")]
		public BoidHordWeighted[] m_boidsWeighted;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE3F28", Offset = "0xBE3F28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE3F28", Offset = "0xBE3F28")]
		public int m_spawnNumber;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool m_isOneShot;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_overTime;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE3F78", Offset = "0xBE3F78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE3F78", Offset = "0xBE3F78")]
		public bool m_destroySpawnerWhenComplete;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE3FC8", Offset = "0xBE3FC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE3FC8", Offset = "0xBE3FC8")]
		public EBoidHordSpawnShape m_boidHordSpawnShape;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4018", Offset = "0xBE4018")]
		public float m_sphereRadius;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4050", Offset = "0xBE4050")]
		public bool m_useCurves;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CinemachineDollyCart m_cart;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_cartSpeed;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public CinemachinePath[] m_curves;

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xF2D5CC", Offset = "0xF2D5CC", VA = "0xF2D5CC")]
		public BoidHordSpawnData()
		{
		}
	}
}
namespace Ikimasho.Game.Shop
{
	[Token(Token = "0x20003AA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD3A18", Offset = "0xBD3A18")]
	public class PerkData : ScriptableObject
	{
		[Token(Token = "0x20006C4")]
		public enum Statistics
		{
			[Token(Token = "0x40020FB")]
			None,
			[Token(Token = "0x40020FC")]
			Size,
			[Token(Token = "0x40020FD")]
			Charge,
			[Token(Token = "0x40020FE")]
			Damage,
			[Token(Token = "0x40020FF")]
			ManaCost
		}

		[Token(Token = "0x20006C5")]
		public enum Wand
		{
			[Token(Token = "0x4002101")]
			Left,
			[Token(Token = "0x4002102")]
			Right
		}

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4088", Offset = "0xBE4088")]
		public GameObject m_crystal;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE40C0", Offset = "0xBE40C0")]
		public GameObject m_purchasedPlayerPerk;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE40F8", Offset = "0xBE40F8")]
		public StringVariable m_displayedName;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4130", Offset = "0xBE4130")]
		public StringVariable m_description;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4168", Offset = "0xBE4168")]
		public StringVariable m_stats;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE41A0", Offset = "0xBE41A0")]
		public StringVariable m_lore;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE41D8", Offset = "0xBE41D8")]
		public StringVariable m_category;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4210", Offset = "0xBE4210")]
		public Sprite m_icon;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4248", Offset = "0xBE4248")]
		public Color m_perkColor;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4280", Offset = "0xBE4280")]
		public int m_cost;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE42B8", Offset = "0xBE42B8")]
		public int m_defaultCost;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE42F0", Offset = "0xBE42F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE42F0", Offset = "0xBE42F0")]
		public int m_rarityStar;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4344", Offset = "0xBE4344")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE4344", Offset = "0xBE4344")]
		public int m_rarity;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4398", Offset = "0xBE4398")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE4398", Offset = "0xBE4398")]
		public int m_defaultRarity;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE43EC", Offset = "0xBE43EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE43EC", Offset = "0xBE43EC")]
		public int m_rarityIncreased;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4440", Offset = "0xBE4440")]
		public int m_costIncreased;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4478", Offset = "0xBE4478")]
		public int m_minimumShopTierUpgrade;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE44B0", Offset = "0xBE44B0")]
		public bool[] m_solarSystemRestrictions;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE44E8", Offset = "0xBE44E8")]
		public bool m_spellPerk;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4520", Offset = "0xBE4520")]
		public bool m_attackPerk;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4558", Offset = "0xBE4558")]
		public bool m_defensePerk;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4590", Offset = "0xBE4590")]
		public Statistics m_statistics;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE45C8", Offset = "0xBE45C8")]
		public bool m_inPercent;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4600", Offset = "0xBE4600")]
		public int m_additionalStatValue;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4638", Offset = "0xBE4638")]
		public GestureData.SpellType m_spellType;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4670", Offset = "0xBE4670")]
		public bool m_spellModifier;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE46A8", Offset = "0xBE46A8")]
		public GestureData m_gestureToAdd;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE46E0", Offset = "0xBE46E0")]
		public GestureData m_gestureDependency;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4718", Offset = "0xBE4718")]
		public List<GestureData> m_gestureDependencies;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4750", Offset = "0xBE4750")]
		public Wand m_wandUsed;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4788", Offset = "0xBE4788")]
		public bool m_playerPerk;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE47C0", Offset = "0xBE47C0")]
		public UnityEvent OnPlayerPerk;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE47F8", Offset = "0xBE47F8")]
		public bool m_oncePurchased;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4830", Offset = "0xBE4830")]
		public bool m_limitConditions;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4868", Offset = "0xBE4868")]
		public IntVariable m_variable;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE48A0", Offset = "0xBE48A0")]
		public int m_valueLimit;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[HideInInspector]
		public bool m_purchased;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public string m_perkId;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public int m_currentPurchaseValue;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public GestureData m_replacement;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public int m_slotNumber;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4908", Offset = "0xBE4908")]
		public Event m_audioEventOnPerkGranted;

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xF2D530", Offset = "0xF2D530", VA = "0xF2D530")]
		public PerkData()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD3A78", Offset = "0xBD3A78")]
	public class ShopData : ScriptableObject
	{
		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4940", Offset = "0xBE4940")]
		public List<PerkData> m_perks;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4978", Offset = "0xBE4978")]
		public int m_shopLevel;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE49B0", Offset = "0xBE49B0")]
		public int m_perkBubble;

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xF2D5BC", Offset = "0xF2D5BC", VA = "0xF2D5BC")]
		public ShopData()
		{
		}
	}
}
namespace Ikimasho.Game.SolarSystem
{
	[Token(Token = "0x20003AC")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD3AD8", Offset = "0xBD3AD8")]
	public class GalaxyData : ScriptableObject
	{
		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE49E8", Offset = "0xBE49E8")]
		public GameObject m_galaxyPrefab;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4A20", Offset = "0xBE4A20")]
		public LevelData m_levelToLoad;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4A58", Offset = "0xBE4A58")]
		public Label m_galaxyPositionInSolarSystem;

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xF2D5C4", Offset = "0xF2D5C4", VA = "0xF2D5C4")]
		public GalaxyData()
		{
		}
	}
}
namespace Ikimasho.Game.Projectile
{
	[Token(Token = "0x20003AD")]
	public class AmmoData : ScriptableObject
	{
		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xF2D528", Offset = "0xF2D528", VA = "0xF2D528")]
		public AmmoData()
		{
		}
	}
}
namespace Ikimasho.Game.Gesture
{
	[Token(Token = "0x20003AE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD3B38", Offset = "0xBD3B38")]
	public class DotData : ScriptableObject
	{
		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_dotPrefab;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_hp;

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xF25D18", Offset = "0xF25D18", VA = "0xF25D18")]
		public DotData()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public class GestureManager : CacheBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8834", Offset = "0xBD8834")]
		private sealed class <>c
		{
			[Token(Token = "0x4002103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Transform, bool> <>9__68_0;

			[Token(Token = "0x4002105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Transform, bool> <>9__75_2;

			[Token(Token = "0x4002106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Transform, bool> <>9__75_4;

			[Token(Token = "0x4002107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Transform, bool> <>9__75_7;

			[Token(Token = "0x4002108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<Transform, bool> <>9__75_9;

			[Token(Token = "0x4002109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<Transform, bool> <>9__78_1;

			[Token(Token = "0x400210A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<Transform, bool> <>9__78_3;

			[Token(Token = "0x60026D2")]
			[Address(RVA = "0xF2C538", Offset = "0xF2C538", VA = "0xF2C538")]
			public <>c()
			{
			}

			[Token(Token = "0x60026D3")]
			[Address(RVA = "0xF2C540", Offset = "0xF2C540", VA = "0xF2C540")]
			internal bool <DeactivateCrystals>b__68_0(Transform x)
			{
				return default(bool);
			}

			[Token(Token = "0x60026D4")]
			[Address(RVA = "0xF2C5CC", Offset = "0xF2C5CC", VA = "0xF2C5CC")]
			internal bool <CheckMana>b__75_2(Transform x)
			{
				return default(bool);
			}

			[Token(Token = "0x60026D5")]
			[Address(RVA = "0xF2C630", Offset = "0xF2C630", VA = "0xF2C630")]
			internal bool <CheckMana>b__75_4(Transform x)
			{
				return default(bool);
			}

			[Token(Token = "0x60026D6")]
			[Address(RVA = "0xF2C694", Offset = "0xF2C694", VA = "0xF2C694")]
			internal bool <CheckMana>b__75_7(Transform x)
			{
				return default(bool);
			}

			[Token(Token = "0x60026D7")]
			[Address(RVA = "0xF2C6F8", Offset = "0xF2C6F8", VA = "0xF2C6F8")]
			internal bool <CheckMana>b__75_9(Transform x)
			{
				return default(bool);
			}

			[Token(Token = "0x60026D8")]
			[Address(RVA = "0xF2C75C", Offset = "0xF2C75C", VA = "0xF2C75C")]
			internal bool <OnGestureOneHandFinished>b__78_1(Transform x)
			{
				return default(bool);
			}

			[Token(Token = "0x60026D9")]
			[Address(RVA = "0xF2C7E8", Offset = "0xF2C7E8", VA = "0xF2C7E8")]
			internal bool <OnGestureOneHandFinished>b__78_3(Transform x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8844", Offset = "0xBD8844")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x400210B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x60026DA")]
			[Address(RVA = "0xF29D60", Offset = "0xF29D60", VA = "0xF29D60")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x60026DB")]
			[Address(RVA = "0xF2C874", Offset = "0xF2C874", VA = "0xF2C874")]
			internal bool <CheckMana>b__1(GameObject x)
			{
				return default(bool);
			}

			[Token(Token = "0x60026DC")]
			[Address(RVA = "0xF2C918", Offset = "0xF2C918", VA = "0xF2C918")]
			internal bool <CheckMana>b__3(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8854", Offset = "0xBD8854")]
		private sealed class <>c__DisplayClass75_1
		{
			[Token(Token = "0x400210C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GestureData gdata;

			[Token(Token = "0x60026DD")]
			[Address(RVA = "0xF29D68", Offset = "0xF29D68", VA = "0xF29D68")]
			public <>c__DisplayClass75_1()
			{
			}

			[Token(Token = "0x60026DE")]
			[Address(RVA = "0xF2C9BC", Offset = "0xF2C9BC", VA = "0xF2C9BC")]
			internal bool <CheckMana>b__0(FloatVariable x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8864", Offset = "0xBD8864")]
		private sealed class <>c__DisplayClass75_2
		{
			[Token(Token = "0x400210D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x60026DF")]
			[Address(RVA = "0xF29F78", Offset = "0xF29F78", VA = "0xF29F78")]
			public <>c__DisplayClass75_2()
			{
			}

			[Token(Token = "0x60026E0")]
			[Address(RVA = "0xF2CA98", Offset = "0xF2CA98", VA = "0xF2CA98")]
			internal bool <CheckMana>b__6(GameObject x)
			{
				return default(bool);
			}

			[Token(Token = "0x60026E1")]
			[Address(RVA = "0xF2CB3C", Offset = "0xF2CB3C", VA = "0xF2CB3C")]
			internal bool <CheckMana>b__8(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8874", Offset = "0xBD8874")]
		private sealed class <>c__DisplayClass75_3
		{
			[Token(Token = "0x400210E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GestureData gdata;

			[Token(Token = "0x60026E2")]
			[Address(RVA = "0xF29F80", Offset = "0xF29F80", VA = "0xF29F80")]
			public <>c__DisplayClass75_3()
			{
			}

			[Token(Token = "0x60026E3")]
			[Address(RVA = "0xF2CBE0", Offset = "0xF2CBE0", VA = "0xF2CBE0")]
			internal bool <CheckMana>b__5(FloatVariable x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8884", Offset = "0xBD8884")]
		private sealed class <OnSpellChosenRoutine>d__77 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400210F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4002111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GestureManager <>4__this;

			[Token(Token = "0x4002112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject arrow;

			[Token(Token = "0x4002113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject <curve>5__2;

			[Token(Token = "0x4002114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CinemachinePath <curvePath>5__3;

			[Token(Token = "0x4002115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__4;

			[Token(Token = "0x4002116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <length>5__5;

			[Token(Token = "0x170003B4")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60026E7")]
				[Address(RVA = "0xF2D45C", Offset = "0xF2D45C", VA = "0xF2D45C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170003B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026E9")]
				[Address(RVA = "0xF2D4C4", Offset = "0xF2D4C4", VA = "0xF2D4C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026E4")]
			[Address(RVA = "0xF2A0A8", Offset = "0xF2A0A8", VA = "0xF2A0A8")]
			[DebuggerHidden]
			public <OnSpellChosenRoutine>d__77(int <>1__state)
			{
			}

			[Token(Token = "0x60026E5")]
			[Address(RVA = "0xF2CE74", Offset = "0xF2CE74", VA = "0xF2CE74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026E6")]
			[Address(RVA = "0xF2CE78", Offset = "0xF2CE78", VA = "0xF2CE78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026E8")]
			[Address(RVA = "0xF2D464", Offset = "0xF2D464", VA = "0xF2D464", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8894", Offset = "0xBD8894")]
		private sealed class <>c__DisplayClass78_0
		{
			[Token(Token = "0x4002117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GestureData gesture;

			[Token(Token = "0x60026EA")]
			[Address(RVA = "0xF2BF68", Offset = "0xF2BF68", VA = "0xF2BF68")]
			public <>c__DisplayClass78_0()
			{
			}

			[Token(Token = "0x60026EB")]
			[Address(RVA = "0xF2CCBC", Offset = "0xF2CCBC", VA = "0xF2CCBC")]
			internal bool <OnGestureOneHandFinished>b__0(FloatVariable x)
			{
				return default(bool);
			}

			[Token(Token = "0x60026EC")]
			[Address(RVA = "0xF2CD98", Offset = "0xF2CD98", VA = "0xF2CD98")]
			internal bool <OnGestureOneHandFinished>b__2(FloatVariable x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE4A90", Offset = "0xBE4A90")]
		[Expandable]
		public GestureGeneralData m_gestureGeneralData;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public TrailRendererVariable m_currentTrailRight;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public TrailRendererVariable m_currentTrailLeft;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public CinemachinePathVariable m_currentPathRight;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public CinemachinePathVariable m_currentPathLeft;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public CinemachineDollyCartVariable m_currentDollyCartPlayerRight;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public CinemachineDollyCartVariable m_currentDollyCartPlayerLeft;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public BoolVariable m_leftHandInChoice;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public BoolVariable m_rightHandInChoice;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public BoolVariable m_leftHandInGesture;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public BoolVariable m_rightHandInGesture;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public FloatVariable m_mana;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public GameObject m_handRight;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject m_handLeft;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public GameObject m_projector;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public BoolVariable m_useDotSystem;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE4ADC", Offset = "0xBE4ADC")]
		public int m_section;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public LayerMask m_layerMaskProjector;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public GameObjectVariable m_rightHandSpellPrefabLoaded;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public GameObjectVariable m_leftHandSpellPrefabLoaded;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public SpellDataVariable m_rightHandSpellData;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public SpellDataVariable m_leftHandSpellData;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public IntVariable m_numberOfChargeLeft;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public IntVariable m_numberOfChargeRight;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public IntVariable m_numberOfAddedCharges;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public IntVariable m_numberOfAddedChargesInterRun;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public GameObject m_sphere;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public GameObject[] m_waypointInteractors;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public GameObject m_dot;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public GameObject m_leftHand;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public GameObject m_rightHand;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public WandDataVariable m_leftWand;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public WandDataVariable m_rightWand;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE4AF8", Offset = "0xBE4AF8")]
		public List<FloatVariable> m_cooldownsLeft;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public List<FloatVariable> m_cooldownsRight;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public IntVariable m_cooldownReduction;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public IntVariable m_cooldownReductionInterRun;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public GameObject m_gestureArrow;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public GameObject m_leftSpellHolder;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public Transform[] m_holders;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public UnityEvent OnGestureLeftHandFinished;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public UnityEvent OnGestureRightHandFinished;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public ObjectArrayUnityEvent OnCooldownStarted;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public GameObjectUnityEvent OnWhichHandGesture;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public IntUnityEvent OnPathDotsInstantiated;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public List<GameObject> m_elements;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public GameObject m_wandHolderLeft;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public GameObject m_wandHolderRight;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public GameObject m_shooterLeft;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public GameObject m_shooterRight;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public GameObject m_spellInHandLeft;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public GameObject m_spellInHandRight;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public GameObject m_handPositionLeft;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public GameObject m_handPositionRight;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public StringUnityEvent OnGrabLeft;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public StringUnityEvent OnGrabRight;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public GameObject m_shamanSphere;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public float m_timeBetweenBubbleSpawn;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		public Vector3 m_offsetRotation;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public GameObjectVariable m_headset;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public string m_leftGripAxisName;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public string m_rightGripAxisName;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public List<GameObject> _leftHandGeneratedCurves;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public List<GameObject> _rightHandGeneratedCurves;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private SpellData _spellPreloaded;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private float _offsetRot;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private float _offsetPos;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private GameObject _currentRightCurve;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private GameObject _currentLeftCurve;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private GestureData _currentLeftGestureData;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private GestureData _currentRightGestureData;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private Color _currentRuneColor;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private GameObject _currentHand;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private GameObject _currentLeftWand;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private GameObject _currentRightWand;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private GameObject _currentFxLeft;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private GameObject _currentFxRight;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private List<GameObject> m_leftCrystals;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private List<GameObject> m_rightCrystals;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private List<GameObject> m_leftCurves;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private List<GameObject> m_rightCurves;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private MaterialPropertyBlock _overrideMaterialPropertyBlock;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private MaterialPropertyBlock _cleanMaterialPropertyBlock;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private Vector3 _currentChosenSpellInitialPosition;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
		private Quaternion _currentLeftCurveRotation;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
		private Quaternion _currentRightCurveRotation;

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xF25DB4", Offset = "0xF25DB4", VA = "0xF25DB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xF26304", Offset = "0xF26304", VA = "0xF26304")]
		public void OnInstanciedGestures(string tag)
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xF279F0", Offset = "0xF279F0", VA = "0xF279F0")]
		public void OnAbortGesture(GameObject hand)
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xF281D8", Offset = "0xF281D8", VA = "0xF281D8")]
		public void OnWandShamanSphereInteractedTest(object[] parameters)
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xF28494", Offset = "0xF28494", VA = "0xF28494")]
		public void OnWandShamanSphereLeave(object[] parameters)
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xF287C4", Offset = "0xF287C4", VA = "0xF287C4")]
		public void DeactivateAllCrystals()
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xF27D64", Offset = "0xF27D64", VA = "0xF27D64")]
		public void DeactivateCrystals(List<GameObject> m_crystals)
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xF285DC", Offset = "0xF285DC", VA = "0xF285DC")]
		public void DeactivateCrystalsWithException(List<GameObject> m_crystals, GameObject _currentCurve)
		{
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xF2830C", Offset = "0xF2830C", VA = "0xF2830C")]
		public void ActivateCrystals(List<GameObject> m_crystals)
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xF28868", Offset = "0xF28868", VA = "0xF28868")]
		public void LoadCurrentGestureData(GameObject gesture)
		{
		}

		[Token(Token = "0x6001ABC")]
		private T GetComponentInChildByTag<T>(Transform parent, string tag) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xF26718", Offset = "0xF26718", VA = "0xF26718")]
		private void SpawnCurvesSphereTest(List<GestureData> gestures, GameObject hand, bool firstInstance = false)
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xF28914", Offset = "0xF28914", VA = "0xF28914")]
		private void GenerateCurveDataTest(CinemachinePath curve, Transform spawnPoint, GestureData gestureData, [Optional] Label slot, [Optional] string tag, [Optional] TextMeshPro gestureDisplay)
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xF28DE4", Offset = "0xF28DE4", VA = "0xF28DE4")]
		public void CheckMana()
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xF29F88", Offset = "0xF29F88", VA = "0xF29F88")]
		public void OnSpellChosen(GameObject arrow)
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xF2A010", Offset = "0xF2A010", VA = "0xF2A010")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEAE7C", Offset = "0xBEAE7C")]
		public IEnumerator<float> OnSpellChosenRoutine(GameObject arrow)
		{
			return null;
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xF2A0D4", Offset = "0xF2A0D4", VA = "0xF2A0D4")]
		public void OnGestureOneHandFinished(GameObject curve)
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xF2BF70", Offset = "0xF2BF70", VA = "0xF2BF70")]
		public void DestroyWand(string tag)
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xF29D70", Offset = "0xF29D70", VA = "0xF29D70")]
		private GestureData FindGestureByCurveGameObject(GestureData[] gestures, GameObject curve)
		{
			return null;
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xF25FD0", Offset = "0xF25FD0", VA = "0xF25FD0")]
		private bool ValidateParameters()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xF2C340", Offset = "0xF2C340", VA = "0xF2C340")]
		public GestureManager()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD3B98", Offset = "0xBD3B98")]
	public class GestureData : ScriptableObject
	{
		[Token(Token = "0x20006CD")]
		public enum CardinalSpawn
		{
			[Token(Token = "0x4002119")]
			INVALID = -1,
			[Token(Token = "0x400211A")]
			N,
			[Token(Token = "0x400211B")]
			E,
			[Token(Token = "0x400211C")]
			S,
			[Token(Token = "0x400211D")]
			O,
			[Token(Token = "0x400211E")]
			NE,
			[Token(Token = "0x400211F")]
			NO,
			[Token(Token = "0x4002120")]
			SE,
			[Token(Token = "0x4002121")]
			SO,
			[Token(Token = "0x4002122")]
			MAX
		}

		[Token(Token = "0x20006CE")]
		public enum SpellType
		{
			[Token(Token = "0x4002124")]
			Offensive,
			[Token(Token = "0x4002125")]
			Defensive,
			[Token(Token = "0x4002126")]
			Support,
			[Token(Token = "0x4002127")]
			Super,
			[Token(Token = "0x4002128")]
			Ultime,
			[Token(Token = "0x4002129")]
			Katana,
			[Token(Token = "0x400212A")]
			Stun,
			[Token(Token = "0x400212B")]
			Explosion
		}

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4B30", Offset = "0xBE4B30")]
		public GameObject gesturePrefab;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4B68", Offset = "0xBE4B68")]
		public int m_damages;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int m_defaultDamages;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4BA0", Offset = "0xBE4BA0")]
		[Expandable]
		public SpellData m_spellToLoad;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE4BEC", Offset = "0xBE4BEC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4BEC", Offset = "0xBE4BEC")]
		public bool m_useBranch;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_distanceBeforeShowingBranch;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Expandable]
		public GestureData[] m_branches;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<GestureData> m_modifiers;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4C4C", Offset = "0xBE4C4C")]
		public bool m_isModifier;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ModifierData m_modifier;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBE4C84", Offset = "0xBE4C84")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4C84", Offset = "0xBE4C84")]
		public CardinalSpawn cardinalSpawnPoint;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4CD4", Offset = "0xBE4CD4")]
		public Label m_cardinalSpawnTransform;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4D0C", Offset = "0xBE4D0C")]
		public Label m_cardinalSpawnTransformRight;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4D44", Offset = "0xBE4D44")]
		public Color m_runeColor;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4D7C", Offset = "0xBE4D7C")]
		public string m_name;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4DB4", Offset = "0xBE4DB4")]
		public bool m_isUltimateSpell;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<string> m_moonElementTypes;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public bool m_ultimateSpellActivated;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4DFC", Offset = "0xBE4DFC")]
		public float m_manaCost;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float m_defaultManaCost;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4E34", Offset = "0xBE4E34")]
		public GameObject m_fxSpawnWand;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4E6C", Offset = "0xBE4E6C")]
		public GameObject m_fxVanishWand;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4EA4", Offset = "0xBE4EA4")]
		public GameObject m_wandToUse;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4EDC", Offset = "0xBE4EDC")]
		public string m_handTag;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4F14", Offset = "0xBE4F14")]
		public SpellType m_spellType;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4F4C", Offset = "0xBE4F4C")]
		public bool m_inOrder;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<DotData> m_dotDatas;

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xF25D20", Offset = "0xF25D20", VA = "0xF25D20")]
		public GestureData()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD3BF8", Offset = "0xBD3BF8")]
	public class GestureGeneralData : ScriptableObject
	{
		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Expandable]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4F84", Offset = "0xBE4F84")]
		public GestureData[] m_gestureDatas;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Expandable]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE4FD0", Offset = "0xBE4FD0")]
		public GestureData[] m_gesturesLeftHandEntryPoint;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Expandable]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE501C", Offset = "0xBE501C")]
		public GestureData[] m_gesturesRightHandEntryPoint;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Expandable]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE5068", Offset = "0xBE5068")]
		public GestureData[] m_gesturesBothHands;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Expandable]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE50B4", Offset = "0xBE50B4")]
		public GestureData[] m_gesturesOneHandBranch;

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xF25DAC", Offset = "0xF25DAC", VA = "0xF25DAC")]
		public GestureGeneralData()
		{
		}
	}
}
namespace Universe.LevelDesign
{
	[Token(Token = "0x20003B2")]
	public class AsteroidFieldGenerator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006CF")]
		public struct SpawnElement
		{
			[Token(Token = "0x400212C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform m_objectToSpawn;

			[Token(Token = "0x400212D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE7CE4", Offset = "0xBE7CE4")]
			public float m_ratioOfSpawn;

			[Token(Token = "0x400212E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE7CFC", Offset = "0xBE7CFC")]
			public bool m_enableRandomRotation;

			[Token(Token = "0x400212F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			public bool m_enableRandomScale;

			[Token(Token = "0x4002130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE7D34", Offset = "0xBE7D34")]
			public float m_minimumScaleX;

			[Token(Token = "0x4002131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE7D50", Offset = "0xBE7D50")]
			public float m_maximumScaleX;

			[Token(Token = "0x4002132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE7D6C", Offset = "0xBE7D6C")]
			public float m_minimumScaleY;

			[Token(Token = "0x4002133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE7D88", Offset = "0xBE7D88")]
			public float m_maximumScaleY;

			[Token(Token = "0x4002134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE7DA4", Offset = "0xBE7DA4")]
			public float m_minimumScaleZ;

			[Token(Token = "0x4002135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE7DC0", Offset = "0xBE7DC0")]
			public float m_maximumScaleZ;
		}

		[StructLayout(3)]
		[Token(Token = "0x20006D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD88A4", Offset = "0xBD88A4")]
		private struct <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SpawnElement? elementToSpawn;
		}

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE5100", Offset = "0xBE5100")]
		public List<SpawnElement> m_elementToSpawn;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE5138", Offset = "0xBE5138")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE5138", Offset = "0xBE5138")]
		public float m_innerDiameter;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE5190", Offset = "0xBE5190")]
		public float m_outerDiameter;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE51AC", Offset = "0xBE51AC")]
		public float m_heightMirrored;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE51C8", Offset = "0xBE51C8")]
		public Color m_validColor;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color m_invalidColor;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int m_quantityToGenerate;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform _transform;

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xF779D8", Offset = "0xF779D8", VA = "0xF779D8")]
		public void Generate()
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xF77D94", Offset = "0xF77D94", VA = "0xF77D94")]
		private SpawnElement? GetCumulativeRandomizedObjectFromSpawnList()
		{
			return null;
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xF781C8", Offset = "0xF781C8", VA = "0xF781C8")]
		private float GetSpawnRange()
		{
			return default(float);
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xF77F98", Offset = "0xF77F98", VA = "0xF77F98")]
		private Vector3 GetValidRandomPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xF78278", Offset = "0xF78278", VA = "0xF78278")]
		public AsteroidFieldGenerator()
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xF780B0", Offset = "0xF780B0", VA = "0xF780B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEAEE0", Offset = "0xBEAEE0")]
		internal static Vector3 <Generate>g__GetRandomScale|8_0(ref <>c__DisplayClass8_0 P_0)
		{
			return default(Vector3);
		}
	}
}
namespace ScriptableObjectArchitecture
{
	[Token(Token = "0x20003B3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD3C58", Offset = "0xBD3C58")]
	public class ConversationCollection : Collection<ConversationData>
	{
		[Token(Token = "0x20006D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD88B4", Offset = "0xBD88B4")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public System.Random rnd;

			[Token(Token = "0x60026ED")]
			[Address(RVA = "0xE47284", Offset = "0xE47284", VA = "0xE47284")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60026EE")]
			[Address(RVA = "0xE472DC", Offset = "0xE472DC", VA = "0xE472DC")]
			internal int <GenerateShuffle>b__0(int item)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<int> m_history;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<int> _shuffleOrder;

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xE4708C", Offset = "0xE4708C", VA = "0xE4708C")]
		public ConversationData GetRandomConversationWithoutRepetition()
		{
			return null;
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xE4712C", Offset = "0xE4712C", VA = "0xE4712C")]
		private List<int> GenerateShuffle()
		{
			return null;
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xE4728C", Offset = "0xE4728C", VA = "0xE4728C")]
		public ConversationCollection()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD3CC4", Offset = "0xBD3CC4")]
	public sealed class CurveHapticsDataGameEvent : GameEventBase<CurveHapticsData>
	{
		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xE472FC", Offset = "0xE472FC", VA = "0xE472FC")]
		public CurveHapticsDataGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD3D30", Offset = "0xBD3D30")]
	public sealed class FloatVariableHapticsDataGameEvent : GameEventBase<FloatVariableHapticsData>
	{
		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xE4832C", Offset = "0xE4832C", VA = "0xE4832C")]
		public FloatVariableHapticsDataGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD3D9C", Offset = "0xBD3D9C")]
	public sealed class SimpleHapticsDataGameEvent : GameEventBase<SimpleHapticsData>
	{
		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xE4B3F0", Offset = "0xE4B3F0", VA = "0xE4B3F0")]
		public SimpleHapticsDataGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD3E08", Offset = "0xBD3E08")]
	public sealed class SpectrumHapticsDataGameEvent : GameEventBase<SpectrumHapticsData>
	{
		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xE4B630", Offset = "0xE4B630", VA = "0xE4B630")]
		public SpectrumHapticsDataGameEvent()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD3E74", Offset = "0xBD3E74")]
	public sealed class CurveHapticsDataGameEventListener : BaseGameEventListener<CurveHapticsData, CurveHapticsDataGameEvent, CurveHapticsDataUnityEvent>
	{
		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xE4734C", Offset = "0xE4734C", VA = "0xE4734C")]
		public CurveHapticsDataGameEventListener()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD3EAC", Offset = "0xBD3EAC")]
	public sealed class FloatVariableHapticsDataGameEventListener : BaseGameEventListener<FloatVariableHapticsData, FloatVariableHapticsDataGameEvent, FloatVariableHapticsDataUnityEvent>
	{
		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xE4837C", Offset = "0xE4837C", VA = "0xE4837C")]
		public FloatVariableHapticsDataGameEventListener()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD3EE4", Offset = "0xBD3EE4")]
	public sealed class SimpleHapticsDataGameEventListener : BaseGameEventListener<SimpleHapticsData, SimpleHapticsDataGameEvent, SimpleHapticsDataUnityEvent>
	{
		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xE4B440", Offset = "0xE4B440", VA = "0xE4B440")]
		public SimpleHapticsDataGameEventListener()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD3F1C", Offset = "0xBD3F1C")]
	public sealed class SpectrumHapticsDataGameEventListener : BaseGameEventListener<SpectrumHapticsData, SpectrumHapticsDataGameEvent, SpectrumHapticsDataUnityEvent>
	{
		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xE4B680", Offset = "0xE4B680", VA = "0xE4B680")]
		public SpectrumHapticsDataGameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003BC")]
	public sealed class CurveHapticsDataUnityEvent : UnityEvent<CurveHapticsData>
	{
		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xE4744C", Offset = "0xE4744C", VA = "0xE4744C")]
		public CurveHapticsDataUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003BD")]
	public sealed class FloatVariableHapticsDataUnityEvent : UnityEvent<FloatVariableHapticsData>
	{
		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xE4847C", Offset = "0xE4847C", VA = "0xE4847C")]
		public FloatVariableHapticsDataUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003BE")]
	public sealed class SimpleHapticsDataUnityEvent : UnityEvent<SimpleHapticsData>
	{
		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xE4B540", Offset = "0xE4B540", VA = "0xE4B540")]
		public SimpleHapticsDataUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003BF")]
	public sealed class SpectrumHapticsDataUnityEvent : UnityEvent<SpectrumHapticsData>
	{
		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xE4B780", Offset = "0xE4B780", VA = "0xE4B780")]
		public SpectrumHapticsDataUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C0")]
	public sealed class CurveHapticsDataReference : BaseReference<CurveHapticsData, CurveHapticsDataVariable>
	{
		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xE4739C", Offset = "0xE4739C", VA = "0xE4739C")]
		public CurveHapticsDataReference()
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xE473EC", Offset = "0xE473EC", VA = "0xE473EC")]
		public CurveHapticsDataReference(CurveHapticsData value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C1")]
	public sealed class FloatVariableHapticsDataReference : BaseReference<FloatVariableHapticsData, FloatVariableHapticsDataVariable>
	{
		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xE483CC", Offset = "0xE483CC", VA = "0xE483CC")]
		public FloatVariableHapticsDataReference()
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xE4841C", Offset = "0xE4841C", VA = "0xE4841C")]
		public FloatVariableHapticsDataReference(FloatVariableHapticsData value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C2")]
	public sealed class SimpleHapticsDataReference : BaseReference<SimpleHapticsData, SimpleHapticsDataVariable>
	{
		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xE4B490", Offset = "0xE4B490", VA = "0xE4B490")]
		public SimpleHapticsDataReference()
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xE4B4E0", Offset = "0xE4B4E0", VA = "0xE4B4E0")]
		public SimpleHapticsDataReference(SimpleHapticsData value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C3")]
	public sealed class SpectrumHapticsDataReference : BaseReference<SpectrumHapticsData, SpectrumHapticsDataVariable>
	{
		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xE4B6D0", Offset = "0xE4B6D0", VA = "0xE4B6D0")]
		public SpectrumHapticsDataReference()
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xE4B720", Offset = "0xE4B720", VA = "0xE4B720")]
		public SpectrumHapticsDataReference(SpectrumHapticsData value)
		{
		}
	}
	[Token(Token = "0x20003C4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD3F54", Offset = "0xBD3F54")]
	public class CurveHapticsDataVariable : BaseVariable<CurveHapticsData>
	{
		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0xE4749C", Offset = "0xE4749C", VA = "0xE4749C")]
		public CurveHapticsDataVariable()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD3FC0", Offset = "0xBD3FC0")]
	public class FloatVariableHapticsDataVariable : BaseVariable<FloatVariableHapticsData>
	{
		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0xE484CC", Offset = "0xE484CC", VA = "0xE484CC")]
		public FloatVariableHapticsDataVariable()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD402C", Offset = "0xBD402C")]
	public class SimpleHapticsDataVariable : BaseVariable<SimpleHapticsData>
	{
		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xE4B590", Offset = "0xE4B590", VA = "0xE4B590")]
		public SimpleHapticsDataVariable()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD4098", Offset = "0xBD4098")]
	public class SpectrumHapticsDataVariable : BaseVariable<SpectrumHapticsData>
	{
		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xE4B7D0", Offset = "0xE4B7D0", VA = "0xE4B7D0")]
		public SpectrumHapticsDataVariable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD4104", Offset = "0xBD4104")]
	public sealed class IntIntGameEvent : GameEventBase<IntIntGameEventStruct>
	{
		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xE496DC", Offset = "0xE496DC", VA = "0xE496DC")]
		public IntIntGameEvent()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD4170", Offset = "0xBD4170")]
	public sealed class IntIntGameEventListener : BaseGameEventListener<IntIntGameEventStruct, IntIntGameEvent, IntIntUnityEvent>
	{
		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xE4972C", Offset = "0xE4972C", VA = "0xE4972C")]
		public IntIntGameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CA")]
	public sealed class IntIntUnityEvent : UnityEvent<IntIntGameEventStruct>
	{
		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xE4977C", Offset = "0xE4977C", VA = "0xE4977C")]
		public IntIntUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD41A8", Offset = "0xBD41A8")]
	public class LabelVector3GameEvent : GameEventBase<LabelVector3GameEventStruct>
	{
		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xE49C98", Offset = "0xE49C98", VA = "0xE49C98")]
		public LabelVector3GameEvent()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD4214", Offset = "0xBD4214")]
	public sealed class LabelVector3GameEventListener : BaseGameEventListener<LabelVector3GameEventStruct, LabelVector3GameEvent, LabelVector3UnityEvent>
	{
		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xE49CE8", Offset = "0xE49CE8", VA = "0xE49CE8")]
		public LabelVector3GameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CD")]
	public class LabelVector3UnityEvent : UnityEvent<LabelVector3GameEventStruct>
	{
		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xE49D38", Offset = "0xE49D38", VA = "0xE49D38")]
		public LabelVector3UnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD424C", Offset = "0xBD424C")]
	public sealed class CustomActionGameEvent : GameEventBase<CustomActionGameEventStruct>
	{
		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xE474EC", Offset = "0xE474EC", VA = "0xE474EC")]
		public CustomActionGameEvent()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD42B8", Offset = "0xBD42B8")]
	public sealed class CustomActionGameEventListener : BaseGameEventListener<CustomActionGameEventStruct, CustomActionGameEvent, CustomActionUnityEvent>
	{
		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xE4753C", Offset = "0xE4753C", VA = "0xE4753C")]
		public CustomActionGameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D0")]
	public sealed class CustomActionUnityEvent : UnityEvent<CustomActionGameEventStruct>
	{
		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xE4758C", Offset = "0xE4758C", VA = "0xE4758C")]
		public CustomActionUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD42F0", Offset = "0xBD42F0")]
	public sealed class EffectGameEvent : GameEventBase<Effect>
	{
		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xE47BAC", Offset = "0xE47BAC", VA = "0xE47BAC")]
		public EffectGameEvent()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD435C", Offset = "0xBD435C")]
	public sealed class EffectGameEventListener : BaseGameEventListener<Effect, EffectGameEvent, EffectUnityEvent>
	{
		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xE47BFC", Offset = "0xE47BFC", VA = "0xE47BFC")]
		public EffectGameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D3")]
	public sealed class EffectUnityEvent : UnityEvent<Effect>
	{
		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xE47C4C", Offset = "0xE47C4C", VA = "0xE47C4C")]
		public EffectUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD4394", Offset = "0xBD4394")]
	public class GameModeTypeVariable : BaseVariable<GameModeType>
	{
		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xE489D0", Offset = "0xE489D0", VA = "0xE489D0")]
		public void SetGameModeToClassic()
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xE48A84", Offset = "0xE48A84", VA = "0xE48A84")]
		public void SetGameModeToCheckpoint()
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xE48B3C", Offset = "0xE48B3C", VA = "0xE48B3C")]
		public void SetDefaultGameModeToClassic()
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xE48BF0", Offset = "0xE48BF0", VA = "0xE48BF0")]
		public void SetDefaultGameModeToCheckpoint()
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xE48CA8", Offset = "0xE48CA8", VA = "0xE48CA8")]
		public void SetValueFromVariable(GameModeTypeVariable value)
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xE48ED0", Offset = "0xE48ED0", VA = "0xE48ED0")]
		public void SetDefaultValueFromVariable(GameModeTypeVariable value)
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xE490F8", Offset = "0xE490F8", VA = "0xE490F8")]
		public GameModeTypeVariable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD4400", Offset = "0xBD4400")]
	public sealed class PerkListUpgradeGameEvent : GameEventBase<PerkListWrapper>
	{
		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xE4A64C", Offset = "0xE4A64C", VA = "0xE4A64C")]
		public PerkListUpgradeGameEvent()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD446C", Offset = "0xBD446C")]
	public sealed class PerkListUpgradeGameEventListener : BaseGameEventListener<PerkListWrapper, PerkListUpgradeGameEvent, PerkListUpgradeUnityEvent>
	{
		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xE4A69C", Offset = "0xE4A69C", VA = "0xE4A69C")]
		public PerkListUpgradeGameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D7")]
	public sealed class PerkListUpgradeUnityEvent : UnityEvent<PerkListWrapper>
	{
		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xE4A6EC", Offset = "0xE4A6EC", VA = "0xE4A6EC")]
		public PerkListUpgradeUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD44A4", Offset = "0xBD44A4")]
	public sealed class ActorDataTransformGameEvent : GameEventBase<ActorDataTransformGameEventStruct>
	{
		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xE45D78", Offset = "0xE45D78", VA = "0xE45D78")]
		public ActorDataTransformGameEvent()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD4510", Offset = "0xBD4510")]
	public sealed class ActorDataTransformGameEventListener : BaseGameEventListener<ActorDataTransformGameEventStruct, ActorDataTransformGameEvent, ActorDataTransformUnityEvent>
	{
		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xE45DC8", Offset = "0xE45DC8", VA = "0xE45DC8")]
		public ActorDataTransformGameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DA")]
	public sealed class ActorDataTransformUnityEvent : UnityEvent<ActorDataTransformGameEventStruct>
	{
		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xE45E18", Offset = "0xE45E18", VA = "0xE45E18")]
		public ActorDataTransformUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD4548", Offset = "0xBD4548")]
	public sealed class GameObjectIntGameEvent : GameEventBase<GameObjectGameEventStruct>
	{
		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xE4935C", Offset = "0xE4935C", VA = "0xE4935C")]
		public GameObjectIntGameEvent()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD45B4", Offset = "0xBD45B4")]
	public sealed class GameObjectIntGameEventListener : BaseGameEventListener<GameObjectGameEventStruct, GameObjectIntGameEvent, GameObjectIntUnityEvent>
	{
		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xE493AC", Offset = "0xE493AC", VA = "0xE493AC")]
		public GameObjectIntGameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DD")]
	public sealed class GameObjectIntUnityEvent : UnityEvent<GameObjectGameEventStruct>
	{
		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xE493FC", Offset = "0xE493FC", VA = "0xE493FC")]
		public GameObjectIntUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD45EC", Offset = "0xBD45EC")]
	public sealed class ObjectArrayGameEvent : GameEventBase<object[]>
	{
		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xE4A2CC", Offset = "0xE4A2CC", VA = "0xE4A2CC")]
		public ObjectArrayGameEvent()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD4658", Offset = "0xBD4658")]
	public sealed class ObjectArrayGameEventListener : BaseGameEventListener<object[], ObjectArrayGameEvent, ObjectArrayUnityEvent>
	{
		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xE4A31C", Offset = "0xE4A31C", VA = "0xE4A31C")]
		public ObjectArrayGameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E0")]
	public sealed class ObjectArrayUnityEvent : UnityEvent<object[]>
	{
		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xE4A36C", Offset = "0xE4A36C", VA = "0xE4A36C")]
		public ObjectArrayUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD4690", Offset = "0xBD4690")]
	public sealed class StringTextAssetListGameEvent : GameEventBase<StringTextAssetListStruct>
	{
		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xE4BD78", Offset = "0xE4BD78", VA = "0xE4BD78")]
		public StringTextAssetListGameEvent()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD46FC", Offset = "0xBD46FC")]
	public sealed class StringTextAssetListGameEventListener : BaseGameEventListener<StringTextAssetListStruct, StringTextAssetListGameEvent, StringTextAssetListUnityEvent>
	{
		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xE4BDC8", Offset = "0xE4BDC8", VA = "0xE4BDC8")]
		public StringTextAssetListGameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E3")]
	public sealed class StringTextAssetListUnityEvent : UnityEvent<StringTextAssetListStruct>
	{
		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xE4BE18", Offset = "0xE4BE18", VA = "0xE4BE18")]
		public StringTextAssetListUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD4734", Offset = "0xBD4734")]
	public sealed class Vector3IntGameEvent : GameEventBase<Vector3IntGameEventStruct>
	{
		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xE4CAE0", Offset = "0xE4CAE0", VA = "0xE4CAE0")]
		public Vector3IntGameEvent()
		{
		}
	}
	[Token(Token = "0x20003E5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD47A0", Offset = "0xBD47A0")]
	public sealed class Vector3IntGameEventListener : BaseGameEventListener<Vector3IntGameEventStruct, Vector3IntGameEvent, Vector3IntUnityEvent>
	{
		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xE4CB30", Offset = "0xE4CB30", VA = "0xE4CB30")]
		public Vector3IntGameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E6")]
	public sealed class Vector3IntUnityEvent : UnityEvent<Vector3IntGameEventStruct>
	{
		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xE4CB80", Offset = "0xE4CB80", VA = "0xE4CB80")]
		public Vector3IntUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD47D8", Offset = "0xBD47D8")]
	public sealed class EventDataEvent : GameEventBase<ObjectPointer.EventData>
	{
		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xE47C9C", Offset = "0xE47C9C", VA = "0xE47C9C")]
		public EventDataEvent()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD4844", Offset = "0xBD4844")]
	public sealed class EventDataEventListener : BaseGameEventListener<ObjectPointer.EventData, EventDataEvent, EventDataUnityEvent>
	{
		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xE47CEC", Offset = "0xE47CEC", VA = "0xE47CEC")]
		public EventDataEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E9")]
	public sealed class EventDataUnityEvent : UnityEvent<ObjectPointer.EventData>
	{
		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xE47D3C", Offset = "0xE47D3C", VA = "0xE47D3C")]
		public EventDataUnityEvent()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD487C", Offset = "0xBD487C")]
	public class AnimationCurveCollection : Collection<AnimationCurve>
	{
		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xE45E68", Offset = "0xE45E68", VA = "0xE45E68")]
		public AnimationCurveCollection()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD48E8", Offset = "0xBD48E8")]
	public class AudioClipCollection : Collection<AudioClip>
	{
		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xE45FB8", Offset = "0xE45FB8", VA = "0xE45FB8")]
		public AudioClipCollection()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBD4954", Offset = "0xBD4954")]
	public abstract class BaseCollection : SOArchitectureBaseObject, IEnumerable
	{
		[Token(Token = "0x1700023C")]
		public object Item
		{
			[Token(Token = "0x6001B14")]
			[Address(RVA = "0xE46108", Offset = "0xE46108", VA = "0xE46108")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B15")]
			[Address(RVA = "0xE461D8", Offset = "0xE461D8", VA = "0xE461D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		public int Count
		{
			[Token(Token = "0x6001B16")]
			[Address(RVA = "0xE462B4", Offset = "0xE462B4", VA = "0xE462B4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700023E")]
		public abstract IList List
		{
			[Token(Token = "0x6001B17")]
			get;
		}

		[Token(Token = "0x1700023F")]
		public abstract Type Type
		{
			[Token(Token = "0x6001B18")]
			get;
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xE46378", Offset = "0xE46378", VA = "0xE46378", Slot = "4")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0xE46438", Offset = "0xE46438", VA = "0xE46438")]
		public bool Contains(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0xE4650C", Offset = "0xE4650C", VA = "0xE4650C")]
		protected BaseCollection()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD498C", Offset = "0xBD498C")]
	public class BoolCollection : Collection<bool>
	{
		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xE4666C", Offset = "0xE4666C", VA = "0xE4666C")]
		public BoolCollection()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD49F8", Offset = "0xBD49F8")]
	public class ByteCollection : Collection<byte>
	{
		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xE468AC", Offset = "0xE468AC", VA = "0xE468AC")]
		public ByteCollection()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD4A64", Offset = "0xBD4A64")]
	public class CharCollection : Collection<char>
	{
		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xE46B8C", Offset = "0xE46B8C", VA = "0xE46B8C")]
		public CharCollection()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBD4AD0", Offset = "0xBD4AD0")]
	public class Collection<T> : BaseCollection, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<T> _list;

		[Token(Token = "0x17000240")]
		public new T Item
		{
			[Token(Token = "0x6001B1F")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001B20")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public override IList List
		{
			[Token(Token = "0x6001B21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000242")]
		public override Type Type
		{
			[Token(Token = "0x6001B22")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B23")]
		public void Add(T obj)
		{
		}

		[Token(Token = "0x6001B24")]
		public void Remove(T obj)
		{
		}

		[Token(Token = "0x6001B25")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001B26")]
		public bool Contains(T value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B27")]
		public int IndexOf(T value)
		{
			return default(int);
		}

		[Token(Token = "0x6001B28")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6001B29")]
		public void Insert(int index, T value)
		{
		}

		[Token(Token = "0x6001B2A")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001B2B")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001B2C")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001B2D")]
		public T[] ToArray()
		{
			return null;
		}

		[Token(Token = "0x6001B2E")]
		public Collection()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD4B08", Offset = "0xBD4B08")]
	public class Color32Collection : Collection<Color32>
	{
		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xE46DCC", Offset = "0xE46DCC", VA = "0xE46DCC")]
		public Color32Collection()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD4B74", Offset = "0xBD4B74")]
	public class ColorCollection : Collection<Color>
	{
		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xE46F1C", Offset = "0xE46F1C", VA = "0xE46F1C")]
		public ColorCollection()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD4BE0", Offset = "0xBD4BE0")]
	public class DoubleCollection : Collection<double>
	{
		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xE478D4", Offset = "0xE478D4", VA = "0xE478D4")]
		public DoubleCollection()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD4C4C", Offset = "0xBD4C4C")]
	public class FloatCollection : Collection<float>
	{
		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xE47D8C", Offset = "0xE47D8C", VA = "0xE47D8C")]
		public FloatCollection()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD4CB8", Offset = "0xBD4CB8")]
	public class GameObjectCollection : Collection<GameObject>
	{
		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		private Dictionary<string, GameObject> _gameObjectsDico;

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xE49148", Offset = "0xE49148", VA = "0xE49148")]
		public Dictionary<string, GameObject> ToDictionary()
		{
			return null;
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xE4926C", Offset = "0xE4926C", VA = "0xE4926C")]
		public GameObjectCollection()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD4D24", Offset = "0xBD4D24")]
	public class IntCollection : Collection<int>
	{
		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xE495EC", Offset = "0xE495EC", VA = "0xE495EC")]
		public IntCollection()
		{
		}
	}
	[Token(Token = "0x20003F7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD4D90", Offset = "0xBD4D90")]
	public class LongCollection : Collection<long>
	{
		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xE49E78", Offset = "0xE49E78", VA = "0xE49E78")]
		public LongCollection()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD4DFC", Offset = "0xBD4DFC")]
	public class ObjectCollection : Collection<UnityEngine.Object>
	{
		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xE4A3BC", Offset = "0xE4A3BC", VA = "0xE4A3BC")]
		public ObjectCollection()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD4E68", Offset = "0xBD4E68")]
	public class QuaternionCollection : Collection<Quaternion>
	{
		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xE4A78C", Offset = "0xE4A78C", VA = "0xE4A78C")]
		public QuaternionCollection()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD4ED4", Offset = "0xBD4ED4")]
	public class SByteCollection : Collection<sbyte>
	{
		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xE4AA1C", Offset = "0xE4AA1C", VA = "0xE4AA1C")]
		public SByteCollection()
		{
		}
	}
	[Token(Token = "0x20003FB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD4F40", Offset = "0xBD4F40")]
	public class SceneCollection : Collection<SceneVariable>
	{
		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xE4AF40", Offset = "0xE4AF40", VA = "0xE4AF40")]
		public SceneCollection()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD4FAC", Offset = "0xBD4FAC")]
	public class ShortCollection : Collection<short>
	{
		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xE4B110", Offset = "0xE4B110", VA = "0xE4B110")]
		public ShortCollection()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD5018", Offset = "0xBD5018")]
	public class StringCollection : Collection<string>
	{
		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xE4BBD8", Offset = "0xE4BBD8", VA = "0xE4BBD8")]
		public StringCollection()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD5084", Offset = "0xBD5084")]
	public class UIntCollection : Collection<uint>
	{
		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xE4BF08", Offset = "0xE4BF08", VA = "0xE4BF08")]
		public UIntCollection()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD50F0", Offset = "0xBD50F0")]
	public class ULongCollection : Collection<ulong>
	{
		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xE4C1E8", Offset = "0xE4C1E8", VA = "0xE4C1E8")]
		public ULongCollection()
		{
		}
	}
	[Token(Token = "0x2000400")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD515C", Offset = "0xBD515C")]
	public class UShortCollection : Collection<ushort>
	{
		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xE4C4C8", Offset = "0xE4C4C8", VA = "0xE4C4C8")]
		public UShortCollection()
		{
		}
	}
	[Token(Token = "0x2000401")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD51C8", Offset = "0xBD51C8")]
	public class Vector2Collection : Collection<Vector2>
	{
		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xE4C7A8", Offset = "0xE4C7A8", VA = "0xE4C7A8")]
		public Vector2Collection()
		{
		}
	}
	[Token(Token = "0x2000402")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD5234", Offset = "0xBD5234")]
	public class Vector3Collection : Collection<Vector3>
	{
		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xE4C9F0", Offset = "0xE4C9F0", VA = "0xE4C9F0")]
		public Vector3Collection()
		{
		}
	}
	[Token(Token = "0x2000403")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD52A0", Offset = "0xBD52A0")]
	public class Vector4Collection : Collection<Vector4>
	{
		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xE4CD38", Offset = "0xE4CD38", VA = "0xE4CD38")]
		public Vector4Collection()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000404")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD530C", Offset = "0xBD530C")]
	public sealed class BoolGameEvent : GameEventBase<bool>
	{
		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xE466BC", Offset = "0xE466BC", VA = "0xE466BC")]
		public BoolGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000405")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD5378", Offset = "0xBD5378")]
	public sealed class ByteGameEvent : GameEventBase<byte>
	{
		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xE468FC", Offset = "0xE468FC", VA = "0xE468FC")]
		public ByteGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000406")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD53E4", Offset = "0xBD53E4")]
	public sealed class CharGameEvent : GameEventBase<char>
	{
		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xE46BDC", Offset = "0xE46BDC", VA = "0xE46BDC")]
		public CharGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000407")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD5450", Offset = "0xBD5450")]
	public sealed class DoubleGameEvent : GameEventBase<double>
	{
		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xE47924", Offset = "0xE47924", VA = "0xE47924")]
		public DoubleGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000408")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD54BC", Offset = "0xBD54BC")]
	public sealed class FloatGameEvent : GameEventBase<float>
	{
		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xE47DDC", Offset = "0xE47DDC", VA = "0xE47DDC")]
		public FloatGameEvent()
		{
		}
	}
	[Token(Token = "0x2000409")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD5528", Offset = "0xBD5528")]
	public sealed class GameEvent : GameEventBase
	{
		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xE4851C", Offset = "0xE4851C", VA = "0xE4851C")]
		public GameEvent()
		{
		}
	}
	[Token(Token = "0x200040A")]
	public abstract class GameEventBase<T> : GameEventBase, IGameEvent<T>, IStackTraceObject
	{
		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<IGameEventListener<T>> _typedListeners;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<Action<T>> _typedActions;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected T _debugValue;

		[Token(Token = "0x6001B49")]
		[SerializeField]
		public void Raise(T value)
		{
		}

		[Token(Token = "0x6001B4A")]
		public void AddListener(IGameEventListener<T> listener)
		{
		}

		[Token(Token = "0x6001B4B")]
		public void RemoveListener(IGameEventListener<T> listener)
		{
		}

		[Token(Token = "0x6001B4C")]
		public void AddListener(Action<T> action)
		{
		}

		[Token(Token = "0x6001B4D")]
		public void RemoveListener(Action<T> action)
		{
		}

		[Token(Token = "0x6001B4E")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001B4F")]
		protected GameEventBase()
		{
		}
	}
	[Token(Token = "0x200040B")]
	public abstract class GameEventBase : SOArchitectureBaseObject, IGameEvent, IStackTraceObject
	{
		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected readonly List<IGameEventListener> _listeners;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected readonly List<System.Action> _actions;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<StackTraceEntry> _stackTraces;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool _consumed;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		public bool m_once;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[SerializeField]
		public bool m_verboseLog;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		[SerializeField]
		public bool m_analyticsEnabled;

		[Token(Token = "0x17000243")]
		public List<StackTraceEntry> StackTraces
		{
			[Token(Token = "0x6001B50")]
			[Address(RVA = "0xE48520", Offset = "0xE48520", VA = "0xE48520", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xE48528", Offset = "0xE48528", VA = "0xE48528", Slot = "9")]
		public void AddStackTrace()
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xE4852C", Offset = "0xE4852C", VA = "0xE4852C", Slot = "10")]
		public void AddStackTrace(object value)
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xE48530", Offset = "0xE48530", VA = "0xE48530", Slot = "4")]
		public void Raise()
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xE48698", Offset = "0xE48698", VA = "0xE48698", Slot = "5")]
		public void AddListener(IGameEventListener listener)
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0xE48730", Offset = "0xE48730", VA = "0xE48730", Slot = "6")]
		public void RemoveListener(IGameEventListener listener)
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xE487C8", Offset = "0xE487C8", VA = "0xE487C8")]
		public void AddListener(System.Action action)
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xE48860", Offset = "0xE48860", VA = "0xE48860")]
		public void RemoveListener(System.Action action)
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xE488F8", Offset = "0xE488F8", VA = "0xE488F8", Slot = "7")]
		public void RemoveAll()
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xE4658C", Offset = "0xE4658C", VA = "0xE4658C")]
		protected GameEventBase()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public class StackTraceEntry : IEquatable<StackTraceEntry>
	{
		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly int _id;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly int _frameCount;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string _stackTrace;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly object _value;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly bool _constructedWithValue;

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xE4B820", Offset = "0xE4B820", VA = "0xE4B820")]
		private StackTraceEntry(string trace)
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xE4B888", Offset = "0xE4B888", VA = "0xE4B888")]
		private StackTraceEntry(string trace, object value)
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xE4B914", Offset = "0xE4B914", VA = "0xE4B914")]
		public static StackTraceEntry Create(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xE4B990", Offset = "0xE4B990", VA = "0xE4B990")]
		public static StackTraceEntry Create()
		{
			return null;
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xE4B9FC", Offset = "0xE4B9FC", VA = "0xE4B9FC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xE4BA98", Offset = "0xE4BA98", VA = "0xE4BA98", Slot = "4")]
		public bool Equals(StackTraceEntry other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xE4BABC", Offset = "0xE4BABC", VA = "0xE4BABC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xE4BAC4", Offset = "0xE4BAC4", VA = "0xE4BAC4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xE4BBBC", Offset = "0xE4BBBC", VA = "0xE4BBBC")]
		public static implicit operator string(StackTraceEntry trace)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200040D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD5594", Offset = "0xBD5594")]
	public sealed class GameObjectGameEvent : GameEventBase<GameObject>
	{
		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xE492BC", Offset = "0xE492BC", VA = "0xE492BC")]
		public GameObjectGameEvent()
		{
		}
	}
	[Token(Token = "0x200040E")]
	public interface IGameEvent<T>
	{
		[Token(Token = "0x6001B64")]
		void Raise(T value);

		[Token(Token = "0x6001B65")]
		void AddListener(IGameEventListener<T> listener);

		[Token(Token = "0x6001B66")]
		void RemoveListener(IGameEventListener<T> listener);

		[Token(Token = "0x6001B67")]
		void RemoveAll();
	}
	[Token(Token = "0x200040F")]
	public interface IGameEvent
	{
		[Token(Token = "0x6001B68")]
		void Raise();

		[Token(Token = "0x6001B69")]
		void AddListener(IGameEventListener listener);

		[Token(Token = "0x6001B6A")]
		void RemoveListener(IGameEventListener listener);

		[Token(Token = "0x6001B6B")]
		void RemoveAll();
	}
	[Serializable]
	[Token(Token = "0x2000410")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD5600", Offset = "0xBD5600")]
	public sealed class IntGameEvent : GameEventBase<int>
	{
		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xE4963C", Offset = "0xE4963C", VA = "0xE4963C")]
		public IntGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000411")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD566C", Offset = "0xBD566C")]
	public class LanguageDataEvent : GameEventBase<LanguageData>
	{
		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xE49D88", Offset = "0xE49D88", VA = "0xE49D88")]
		public LanguageDataEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000412")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD56D8", Offset = "0xBD56D8")]
	public sealed class LongGameEvent : GameEventBase<long>
	{
		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xE49EC8", Offset = "0xE49EC8", VA = "0xE49EC8")]
		public LongGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000413")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD5744", Offset = "0xBD5744")]
	public class ObjectGameEvent : GameEventBase<UnityEngine.Object>
	{
		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xE4A40C", Offset = "0xE4A40C", VA = "0xE4A40C")]
		public ObjectGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000414")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD57B0", Offset = "0xBD57B0")]
	public sealed class QuaternionGameEvent : GameEventBase<Quaternion>
	{
		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xE4A80C", Offset = "0xE4A80C", VA = "0xE4A80C")]
		public QuaternionGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000415")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD581C", Offset = "0xBD581C")]
	public sealed class SByteGameEvent : GameEventBase<sbyte>
	{
		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xE4AA6C", Offset = "0xE4AA6C", VA = "0xE4AA6C")]
		public SByteGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000416")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD5888", Offset = "0xBD5888")]
	public sealed class ShortGameEvent : GameEventBase<short>
	{
		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xE4B160", Offset = "0xE4B160", VA = "0xE4B160")]
		public ShortGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000417")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD58F4", Offset = "0xBD58F4")]
	public sealed class StringGameEvent : GameEventBase<string>
	{
		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xE4BC28", Offset = "0xE4BC28", VA = "0xE4BC28")]
		public StringGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000418")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD5960", Offset = "0xBD5960")]
	public sealed class UIntGameEvent : GameEventBase<uint>
	{
		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xE4BF58", Offset = "0xE4BF58", VA = "0xE4BF58")]
		public UIntGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000419")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD59CC", Offset = "0xBD59CC")]
	public sealed class ULongGameEvent : GameEventBase<ulong>
	{
		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xE4C238", Offset = "0xE4C238", VA = "0xE4C238")]
		public ULongGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD5A38", Offset = "0xBD5A38")]
	public sealed class UShortGameEvent : GameEventBase<ushort>
	{
		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xE4C518", Offset = "0xE4C518", VA = "0xE4C518")]
		public UShortGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD5AA4", Offset = "0xBD5AA4")]
	public sealed class Vector2GameEvent : GameEventBase<Vector2>
	{
		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xE4C7F8", Offset = "0xE4C7F8", VA = "0xE4C7F8")]
		public Vector2GameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD5B10", Offset = "0xBD5B10")]
	public sealed class Vector3GameEvent : GameEventBase<Vector3>
	{
		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xE4CA40", Offset = "0xE4CA40", VA = "0xE4CA40")]
		public Vector3GameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD5B7C", Offset = "0xBD5B7C")]
	public sealed class Vector4GameEvent : GameEventBase<Vector4>
	{
		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xE4CDB8", Offset = "0xE4CDB8", VA = "0xE4CDB8")]
		public Vector4GameEvent()
		{
		}
	}
	[Token(Token = "0x200041E")]
	public interface IScriptableObjectArchitectureDebuggable
	{
	}
	[Token(Token = "0x200041F")]
	public abstract class BaseGameEventListener<TType, TEvent, TResponse> : DebuggableGameEventListener, IGameEventListener<TType>, IScriptableObjectArchitectureDebuggable where TEvent : GameEventBase<TType> where TResponse : UnityEvent<TType>
	{
		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TEvent _previouslyRegisteredEvent;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TEvent _event;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TResponse _response;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected TType _debugValue;

		[Token(Token = "0x17000244")]
		protected override ScriptableObject GameEvent
		{
			[Token(Token = "0x6001B7A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000245")]
		protected override UnityEventBase Response
		{
			[Token(Token = "0x6001B7B")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B7C")]
		public void OnEventRaised(TType value)
		{
		}

		[Token(Token = "0x6001B7D")]
		private void RaiseResponse(TType value)
		{
		}

		[Token(Token = "0x6001B7E")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B7F")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B80")]
		private void Register()
		{
		}

		[Token(Token = "0x6001B81")]
		protected BaseGameEventListener()
		{
		}
	}
	[Token(Token = "0x2000420")]
	public abstract class BaseGameEventListener<TEvent, TResponse> : DebuggableGameEventListener, IGameEventListener where TEvent : GameEventBase where TResponse : UnityEvent
	{
		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TEvent _previouslyRegisteredEvent;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TEvent _event;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TResponse _response;

		[Token(Token = "0x17000246")]
		public ScriptableObject GameEventFile
		{
			[Token(Token = "0x6001B82")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000247")]
		protected override ScriptableObject GameEvent
		{
			[Token(Token = "0x6001B83")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000248")]
		protected override UnityEventBase Response
		{
			[Token(Token = "0x6001B84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B85")]
		public void OnEventRaised()
		{
		}

		[Token(Token = "0x6001B86")]
		protected void RaiseResponse()
		{
		}

		[Token(Token = "0x6001B87")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B88")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B89")]
		private void Register()
		{
		}

		[Token(Token = "0x6001B8A")]
		protected BaseGameEventListener()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public abstract class DebuggableGameEventListener : SOArchitectureBaseMonobehaviour, IStackTraceObject
	{
		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _showDebugFields;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool _enableGizmoDebugging;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color _debugColor;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<StackTraceEntry> _stackTraces;

		[Token(Token = "0x17000249")]
		public List<StackTraceEntry> StackTraces
		{
			[Token(Token = "0x6001B8B")]
			[Address(RVA = "0xE475DC", Offset = "0xE475DC", VA = "0xE475DC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024A")]
		protected abstract ScriptableObject GameEvent
		{
			[Token(Token = "0x6001B8C")]
			get;
		}

		[Token(Token = "0x1700024B")]
		protected abstract UnityEventBase Response
		{
			[Token(Token = "0x6001B8D")]
			get;
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xE475E4", Offset = "0xE475E4", VA = "0xE475E4", Slot = "6")]
		public void AddStackTrace(object obj)
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xE475E8", Offset = "0xE475E8", VA = "0xE475E8", Slot = "5")]
		public void AddStackTrace()
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xE475EC", Offset = "0xE475EC", VA = "0xE475EC")]
		protected void CreateDebugEntry(UnityEventBase response)
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xE475F0", Offset = "0xE475F0", VA = "0xE475F0")]
		protected DebuggableGameEventListener()
		{
		}
	}
	[Token(Token = "0x2000422")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5BE8", Offset = "0xBD5BE8")]
	public sealed class BoolGameEventListener : BaseGameEventListener<bool, BoolGameEvent, BoolUnityEvent>
	{
		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xE4670C", Offset = "0xE4670C", VA = "0xE4670C")]
		public BoolGameEventListener()
		{
		}
	}
	[Token(Token = "0x2000423")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5C20", Offset = "0xBD5C20")]
	public sealed class ByteGameEventListener : BaseGameEventListener<byte, ByteGameEvent, ByteUnityEvent>
	{
		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xE4694C", Offset = "0xE4694C", VA = "0xE4694C")]
		public ByteGameEventListener()
		{
		}
	}
	[Token(Token = "0x2000424")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5C58", Offset = "0xBD5C58")]
	public sealed class CharGameEventListener : BaseGameEventListener<char, CharGameEvent, CharUnityEvent>
	{
		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xE46C2C", Offset = "0xE46C2C", VA = "0xE46C2C")]
		public CharGameEventListener()
		{
		}
	}
	[Token(Token = "0x2000425")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5C90", Offset = "0xBD5C90")]
	public sealed class DoubleGameEventListener : BaseGameEventListener<double, DoubleGameEvent, DoubleUnityEvent>
	{
		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xE47974", Offset = "0xE47974", VA = "0xE47974")]
		public DoubleGameEventListener()
		{
		}
	}
	[Token(Token = "0x2000426")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5CC8", Offset = "0xBD5CC8")]
	public sealed class FloatGameEventListener : BaseGameEventListener<float, FloatGameEvent, FloatUnityEvent>
	{
		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xE47E2C", Offset = "0xE47E2C", VA = "0xE47E2C")]
		public FloatGameEventListener()
		{
		}
	}
	[Token(Token = "0x2000427")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5D00", Offset = "0xBD5D00")]
	[ExecuteInEditMode]
	public sealed class GameEventListener : BaseGameEventListener<GameEventBase, UnityEvent>
	{
		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xE48980", Offset = "0xE48980", VA = "0xE48980")]
		public GameEventListener()
		{
		}
	}
	[Token(Token = "0x2000428")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5D4C", Offset = "0xBD5D4C")]
	public sealed class GameObjectGameEventListener : BaseGameEventListener<GameObject, GameObjectGameEvent, GameObjectUnityEvent>
	{
		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xE4930C", Offset = "0xE4930C", VA = "0xE4930C")]
		public GameObjectGameEventListener()
		{
		}
	}
	[Token(Token = "0x2000429")]
	public interface IGameEventListener<T>
	{
		[Token(Token = "0x6001B99")]
		void OnEventRaised(T value);
	}
	[Token(Token = "0x200042A")]
	public interface IGameEventListener
	{
		[Token(Token = "0x6001B9A")]
		void OnEventRaised();
	}
	[Token(Token = "0x200042B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5D84", Offset = "0xBD5D84")]
	public sealed class IntGameEventListener : BaseGameEventListener<int, IntGameEvent, IntUnityEvent>
	{
		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xE4968C", Offset = "0xE4968C", VA = "0xE4968C")]
		public IntGameEventListener()
		{
		}
	}
	[Token(Token = "0x200042C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5DBC", Offset = "0xBD5DBC")]
	public class LanguageDataEventListener : BaseGameEventListener<LanguageData, LanguageDataEvent, LanguageDataUnityEvent>
	{
		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xE49DD8", Offset = "0xE49DD8", VA = "0xE49DD8")]
		public LanguageDataEventListener()
		{
		}
	}
	[Token(Token = "0x200042D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5DF4", Offset = "0xBD5DF4")]
	public sealed class LongGameEventListener : BaseGameEventListener<long, LongGameEvent, LongUnityEvent>
	{
		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xE49F18", Offset = "0xE49F18", VA = "0xE49F18")]
		public LongGameEventListener()
		{
		}
	}
	[Token(Token = "0x200042E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5E2C", Offset = "0xBD5E2C")]
	public class ObjectGameEventListener : BaseGameEventListener<UnityEngine.Object, ObjectGameEvent, ObjectUnityEvent>
	{
		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xE4A45C", Offset = "0xE4A45C", VA = "0xE4A45C")]
		public ObjectGameEventListener()
		{
		}
	}
	[Token(Token = "0x200042F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5E64", Offset = "0xBD5E64")]
	public sealed class QuaternionGameEventListener : BaseGameEventListener<Quaternion, QuaternionGameEvent, QuaternionUnityEvent>
	{
		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xE4A85C", Offset = "0xE4A85C", VA = "0xE4A85C")]
		public QuaternionGameEventListener()
		{
		}
	}
	[Token(Token = "0x2000430")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5E9C", Offset = "0xBD5E9C")]
	public sealed class SByteGameEventListener : BaseGameEventListener<sbyte, SByteGameEvent, SByteUnityEvent>
	{
		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xE4AABC", Offset = "0xE4AABC", VA = "0xE4AABC")]
		public SByteGameEventListener()
		{
		}
	}
	[Token(Token = "0x2000431")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5ED4", Offset = "0xBD5ED4")]
	public sealed class ShortGameEventListener : BaseGameEventListener<short, ShortGameEvent, ShortUnityEvent>
	{
		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xE4B1B0", Offset = "0xE4B1B0", VA = "0xE4B1B0")]
		public ShortGameEventListener()
		{
		}
	}
	[Token(Token = "0x2000432")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5F0C", Offset = "0xBD5F0C")]
	public sealed class StringGameEventListener : BaseGameEventListener<string, StringGameEvent, StringUnityEvent>
	{
		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xE4BC78", Offset = "0xE4BC78", VA = "0xE4BC78")]
		public StringGameEventListener()
		{
		}
	}
	[Token(Token = "0x2000433")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5F44", Offset = "0xBD5F44")]
	public sealed class UIntGameEventListener : BaseGameEventListener<uint, UIntGameEvent, UIntUnityEvent>
	{
		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xE4BFA8", Offset = "0xE4BFA8", VA = "0xE4BFA8")]
		public UIntGameEventListener()
		{
		}
	}
	[Token(Token = "0x2000434")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5F7C", Offset = "0xBD5F7C")]
	public sealed class ULongGameEventListener : BaseGameEventListener<ulong, ULongGameEvent, ULongUnityEvent>
	{
		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xE4C288", Offset = "0xE4C288", VA = "0xE4C288")]
		public ULongGameEventListener()
		{
		}
	}
	[Token(Token = "0x2000435")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5FB4", Offset = "0xBD5FB4")]
	public sealed class UShortGameEventListener : BaseGameEventListener<ushort, UShortGameEvent, UShortUnityEvent>
	{
		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xE4C568", Offset = "0xE4C568", VA = "0xE4C568")]
		public UShortGameEventListener()
		{
		}
	}
	[Token(Token = "0x2000436")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD5FEC", Offset = "0xBD5FEC")]
	public sealed class Vector2GameEventListener : BaseGameEventListener<Vector2, Vector2GameEvent, Vector2UnityEvent>
	{
		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xE4C848", Offset = "0xE4C848", VA = "0xE4C848")]
		public Vector2GameEventListener()
		{
		}
	}
	[Token(Token = "0x2000437")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD6024", Offset = "0xBD6024")]
	public sealed class Vector3GameEventListener : BaseGameEventListener<Vector3, Vector3GameEvent, Vector3UnityEvent>
	{
		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xE4CA90", Offset = "0xE4CA90", VA = "0xE4CA90")]
		public Vector3GameEventListener()
		{
		}
	}
	[Token(Token = "0x2000438")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD605C", Offset = "0xBD605C")]
	public sealed class Vector4GameEventListener : BaseGameEventListener<Vector4, Vector4GameEvent, Vector4UnityEvent>
	{
		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xE4CE08", Offset = "0xE4CE08", VA = "0xE4CE08")]
		public Vector4GameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000439")]
	public sealed class BoolUnityEvent : UnityEvent<bool>
	{
		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xE4680C", Offset = "0xE4680C", VA = "0xE4680C")]
		public BoolUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200043A")]
	public sealed class ByteUnityEvent : UnityEvent<byte>
	{
		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xE46A4C", Offset = "0xE46A4C", VA = "0xE46A4C")]
		public ByteUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200043B")]
	public sealed class CharUnityEvent : UnityEvent<char>
	{
		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xE46D2C", Offset = "0xE46D2C", VA = "0xE46D2C")]
		public CharUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200043C")]
	public sealed class DoubleUnityEvent : UnityEvent<double>
	{
		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xE47A74", Offset = "0xE47A74", VA = "0xE47A74")]
		public DoubleUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200043D")]
	public sealed class FloatUnityEvent : UnityEvent<float>
	{
		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xE47F2C", Offset = "0xE47F2C", VA = "0xE47F2C")]
		public FloatUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200043E")]
	public sealed class GameObjectUnityEvent : UnityEvent<GameObject>
	{
		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xE494FC", Offset = "0xE494FC", VA = "0xE494FC")]
		public GameObjectUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200043F")]
	public sealed class IntUnityEvent : UnityEvent<int>
	{
		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xE4987C", Offset = "0xE4987C", VA = "0xE4987C")]
		public IntUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000440")]
	public class LanguageDataUnityEvent : UnityEvent<LanguageData>
	{
		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xE49E28", Offset = "0xE49E28", VA = "0xE49E28")]
		public LanguageDataUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000441")]
	public sealed class LongUnityEvent : UnityEvent<long>
	{
		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xE4A018", Offset = "0xE4A018", VA = "0xE4A018")]
		public LongUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000442")]
	public class ObjectUnityEvent : UnityEvent<UnityEngine.Object>
	{
		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xE4A55C", Offset = "0xE4A55C", VA = "0xE4A55C")]
		public ObjectUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000443")]
	public sealed class QuaternionUnityEvent : UnityEvent<Quaternion>
	{
		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xE4A97C", Offset = "0xE4A97C", VA = "0xE4A97C")]
		public QuaternionUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000444")]
	public sealed class SByteUnityEvent : UnityEvent<sbyte>
	{
		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xE4ABBC", Offset = "0xE4ABBC", VA = "0xE4ABBC")]
		public SByteUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000445")]
	public sealed class ShortUnityEvent : UnityEvent<short>
	{
		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xE4B2B0", Offset = "0xE4B2B0", VA = "0xE4B2B0")]
		public ShortUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000446")]
	public sealed class StringUnityEvent : UnityEvent<string>
	{
		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xE4BE68", Offset = "0xE4BE68", VA = "0xE4BE68")]
		public StringUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000447")]
	public sealed class UIntUnityEvent : UnityEvent<uint>
	{
		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xE4C0A8", Offset = "0xE4C0A8", VA = "0xE4C0A8")]
		public UIntUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000448")]
	public sealed class ULongUnityEvent : UnityEvent<ulong>
	{
		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xE4C388", Offset = "0xE4C388", VA = "0xE4C388")]
		public ULongUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000449")]
	public sealed class UShortUnityEvent : UnityEvent<ushort>
	{
		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xE4C668", Offset = "0xE4C668", VA = "0xE4C668")]
		public UShortUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200044A")]
	public sealed class Vector2UnityEvent : UnityEvent<Vector2>
	{
		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xE4C950", Offset = "0xE4C950", VA = "0xE4C950")]
		public Vector2UnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200044B")]
	public sealed class Vector3UnityEvent : UnityEvent<Vector3>
	{
		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xE4CC98", Offset = "0xE4CC98", VA = "0xE4CC98")]
		public Vector3UnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200044C")]
	public sealed class Vector4UnityEvent : UnityEvent<Vector4>
	{
		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xE4CF28", Offset = "0xE4CF28", VA = "0xE4CF28")]
		public Vector4UnityEvent()
		{
		}
	}
	[Token(Token = "0x200044D")]
	internal static class QuaternionExtensions
	{
		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xE4A7DC", Offset = "0xE4A7DC", VA = "0xE4A7DC")]
		public static Vector4 ToVector4(this Quaternion quaternion)
		{
			return default(Vector4);
		}
	}
	[Token(Token = "0x200044E")]
	internal static class Vector4Extensions
	{
		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xE4CD88", Offset = "0xE4CD88", VA = "0xE4CD88")]
		public static Quaternion ToQuaternion(this Vector4 vector4)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x200044F")]
	public sealed class AnimationCurveReference : BaseReference<AnimationCurve, AnimationCurveVariable>
	{
		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xE45EB8", Offset = "0xE45EB8", VA = "0xE45EB8")]
		public AnimationCurveReference()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xE45F08", Offset = "0xE45F08", VA = "0xE45F08")]
		public AnimationCurveReference(AnimationCurve value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000450")]
	public sealed class AudioClipReference : BaseReference<AudioClip, AudioClipVariable>
	{
		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xE46008", Offset = "0xE46008", VA = "0xE46008")]
		public AudioClipReference()
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xE46058", Offset = "0xE46058", VA = "0xE46058")]
		public AudioClipReference(AudioClip value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000451")]
	public class BaseReference<TBase, TVariable> : BaseReference where TVariable : BaseVariable<TBase>
	{
		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected bool _useConstant;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected TBase _constantValue;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected TVariable _variable;

		[Token(Token = "0x1700024C")]
		public TBase Value
		{
			[Token(Token = "0x6001BC5")]
			get
			{
				return (TBase)null;
			}
			[Token(Token = "0x6001BC6")]
			set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public bool IsValueDefined
		{
			[Token(Token = "0x6001BC7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BC3")]
		public BaseReference()
		{
		}

		[Token(Token = "0x6001BC4")]
		public BaseReference(TBase baseValue)
		{
		}

		[Token(Token = "0x6001BC8")]
		public BaseReference CreateCopy()
		{
			return null;
		}

		[Token(Token = "0x6001BC9")]
		public void AddListener(IGameEventListener listener)
		{
		}

		[Token(Token = "0x6001BCA")]
		public void RemoveListener(IGameEventListener listener)
		{
		}

		[Token(Token = "0x6001BCB")]
		public void AddListener(System.Action action)
		{
		}

		[Token(Token = "0x6001BCC")]
		public void RemoveListener(System.Action action)
		{
		}

		[Token(Token = "0x6001BCD")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000452")]
	public abstract class BaseReference
	{
		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xE46580", Offset = "0xE46580", VA = "0xE46580")]
		protected BaseReference()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000453")]
	public sealed class BoolReference : BaseReference<bool, BoolVariable>
	{
		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xE4675C", Offset = "0xE4675C", VA = "0xE4675C")]
		public BoolReference()
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xE467AC", Offset = "0xE467AC", VA = "0xE467AC")]
		public BoolReference(bool value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000454")]
	public sealed class ByteReference : BaseReference<byte, ByteVariable>
	{
		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xE4699C", Offset = "0xE4699C", VA = "0xE4699C")]
		public ByteReference()
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xE469EC", Offset = "0xE469EC", VA = "0xE469EC")]
		public ByteReference(byte value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000455")]
	public sealed class CharReference : BaseReference<char, CharVariable>
	{
		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xE46C7C", Offset = "0xE46C7C", VA = "0xE46C7C")]
		public CharReference()
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xE46CCC", Offset = "0xE46CCC", VA = "0xE46CCC")]
		public CharReference(char value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000456")]
	public sealed class Color32Reference : BaseReference<Color32, Color32Variable>
	{
		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xE46E1C", Offset = "0xE46E1C", VA = "0xE46E1C")]
		public Color32Reference()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xE46E6C", Offset = "0xE46E6C", VA = "0xE46E6C")]
		public Color32Reference(Color32 value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000457")]
	public sealed class ColorReference : BaseReference<Color, ColorVariable>
	{
		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xE46F6C", Offset = "0xE46F6C", VA = "0xE46F6C")]
		public ColorReference()
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xE46FBC", Offset = "0xE46FBC", VA = "0xE46FBC")]
		public ColorReference(Color value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000458")]
	public sealed class DoubleReference : BaseReference<double, DoubleVariable>
	{
		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xE479C4", Offset = "0xE479C4", VA = "0xE479C4")]
		public DoubleReference()
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xE47A14", Offset = "0xE47A14", VA = "0xE47A14")]
		public DoubleReference(double value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000459")]
	public sealed class FloatReference : BaseReference<float, FloatVariable>
	{
		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xE47E7C", Offset = "0xE47E7C", VA = "0xE47E7C")]
		public FloatReference()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xE47ECC", Offset = "0xE47ECC", VA = "0xE47ECC")]
		public FloatReference(float value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045A")]
	public sealed class GameObjectReference : BaseReference<GameObject, GameObjectVariable>
	{
		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xE4944C", Offset = "0xE4944C", VA = "0xE4944C")]
		public GameObjectReference()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xE4949C", Offset = "0xE4949C", VA = "0xE4949C")]
		public GameObjectReference(GameObject value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045B")]
	public sealed class IntReference : BaseReference<int, IntVariable>
	{
		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xE497CC", Offset = "0xE497CC", VA = "0xE497CC")]
		public IntReference()
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xE4981C", Offset = "0xE4981C", VA = "0xE4981C")]
		public IntReference(int value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045C")]
	public sealed class LongReference : BaseReference<long, LongVariable>
	{
		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xE49F68", Offset = "0xE49F68", VA = "0xE49F68")]
		public LongReference()
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xE49FB8", Offset = "0xE49FB8", VA = "0xE49FB8")]
		public LongReference(long value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045D")]
	public class ObjectReference : BaseReference<UnityEngine.Object, ObjectVariable>
	{
		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xE4A4AC", Offset = "0xE4A4AC", VA = "0xE4A4AC")]
		public ObjectReference()
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xE4A4FC", Offset = "0xE4A4FC", VA = "0xE4A4FC")]
		public ObjectReference(UnityEngine.Object value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045E")]
	public sealed class QuaternionReference : BaseReference<Quaternion, QuaternionVariable>
	{
		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xE4A8AC", Offset = "0xE4A8AC", VA = "0xE4A8AC")]
		public QuaternionReference()
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xE4A8FC", Offset = "0xE4A8FC", VA = "0xE4A8FC")]
		public QuaternionReference(Quaternion value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045F")]
	public sealed class SByteReference : BaseReference<sbyte, SByteVariable>
	{
		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xE4AB0C", Offset = "0xE4AB0C", VA = "0xE4AB0C")]
		public SByteReference()
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xE4AB5C", Offset = "0xE4AB5C", VA = "0xE4AB5C")]
		public SByteReference(sbyte value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000460")]
	public sealed class SceneReference : BaseReference<SceneInfo, SceneVariable>
	{
		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xE4B000", Offset = "0xE4B000", VA = "0xE4B000")]
		public SceneReference()
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xE4B050", Offset = "0xE4B050", VA = "0xE4B050")]
		public SceneReference(SceneInfo value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000461")]
	public sealed class ShortReference : BaseReference<short, ShortVariable>
	{
		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xE4B200", Offset = "0xE4B200", VA = "0xE4B200")]
		public ShortReference()
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xE4B250", Offset = "0xE4B250", VA = "0xE4B250")]
		public ShortReference(short value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000462")]
	public sealed class StringReference : BaseReference<string, StringVariable>
	{
		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xE4BCC8", Offset = "0xE4BCC8", VA = "0xE4BCC8")]
		public StringReference()
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xE4BD18", Offset = "0xE4BD18", VA = "0xE4BD18")]
		public StringReference(string value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000463")]
	public sealed class UIntReference : BaseReference<uint, UIntVariable>
	{
		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xE4BFF8", Offset = "0xE4BFF8", VA = "0xE4BFF8")]
		public UIntReference()
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xE4C048", Offset = "0xE4C048", VA = "0xE4C048")]
		public UIntReference(uint value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000464")]
	public sealed class ULongReference : BaseReference<ulong, ULongVariable>
	{
		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xE4C2D8", Offset = "0xE4C2D8", VA = "0xE4C2D8")]
		public ULongReference()
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xE4C328", Offset = "0xE4C328", VA = "0xE4C328")]
		public ULongReference(ulong value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000465")]
	public sealed class UShortReference : BaseReference<ushort, UShortVariable>
	{
		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xE4C5B8", Offset = "0xE4C5B8", VA = "0xE4C5B8")]
		public UShortReference()
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xE4C608", Offset = "0xE4C608", VA = "0xE4C608")]
		public UShortReference(ushort value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000466")]
	public sealed class Vector2Reference : BaseReference<Vector2, Vector2Variable>
	{
		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xE4C898", Offset = "0xE4C898", VA = "0xE4C898")]
		public Vector2Reference()
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xE4C8E8", Offset = "0xE4C8E8", VA = "0xE4C8E8")]
		public Vector2Reference(Vector2 value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000467")]
	public sealed class Vector3Reference : BaseReference<Vector3, Vector3Variable>
	{
		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xE4CBD0", Offset = "0xE4CBD0", VA = "0xE4CBD0")]
		public Vector3Reference()
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xE4CC20", Offset = "0xE4CC20", VA = "0xE4CC20")]
		public Vector3Reference(Vector3 value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000468")]
	public sealed class Vector4Reference : BaseReference<Vector4, Vector4Variable>
	{
		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xE4CE58", Offset = "0xE4CE58", VA = "0xE4CE58")]
		public Vector4Reference()
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xE4CEA8", Offset = "0xE4CEA8", VA = "0xE4CEA8")]
		public Vector4Reference(Vector4 value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000469")]
	public class DeveloperDescription : IEquatable<DeveloperDescription>, IEquatable<string>
	{
		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _value;

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xE476F0", Offset = "0xE476F0", VA = "0xE476F0")]
		public DeveloperDescription()
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xE47758", Offset = "0xE47758", VA = "0xE47758")]
		public DeveloperDescription(string value)
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xE477E0", Offset = "0xE477E0", VA = "0xE477E0")]
		public static implicit operator string(DeveloperDescription description)
		{
			return null;
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xE477F8", Offset = "0xE477F8", VA = "0xE477F8")]
		public static implicit operator DeveloperDescription(string value)
		{
			return null;
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xE47858", Offset = "0xE47858", VA = "0xE47858", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xE47878", Offset = "0xE47878", VA = "0xE47878", Slot = "4")]
		public bool Equals(DeveloperDescription other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xE47894", Offset = "0xE47894", VA = "0xE47894", Slot = "5")]
		public bool Equals(string other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xE478AC", Offset = "0xE478AC", VA = "0xE478AC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xE478CC", Offset = "0xE478CC", VA = "0xE478CC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200046A")]
	public interface IStackTraceObject
	{
		[Token(Token = "0x1700024E")]
		List<StackTraceEntry> StackTraces
		{
			[Token(Token = "0x6001C04")]
			get;
		}

		[Token(Token = "0x6001C05")]
		void AddStackTrace();

		[Token(Token = "0x6001C06")]
		void AddStackTrace(object value);
	}
	[Token(Token = "0x200046B")]
	public abstract class SOArchitectureBaseMonobehaviour : MonoBehaviour
	{
		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DeveloperDescription DeveloperDescription;

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xE47680", Offset = "0xE47680", VA = "0xE47680")]
		protected SOArchitectureBaseMonobehaviour()
		{
		}
	}
	[Token(Token = "0x200046C")]
	public abstract class SOArchitectureBaseObject : ScriptableObject
	{
		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DeveloperDescription DeveloperDescription;

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0xE46510", Offset = "0xE46510", VA = "0xE46510")]
		protected SOArchitectureBaseObject()
		{
		}
	}
	[Token(Token = "0x200046D")]
	public class SOArchitecture_Settings : ScriptableObject
	{
		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SOArchitecture_Settings _instance;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _drawEventGizmos;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _codeGenerationTargetDirectory;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE5370", Offset = "0xBE5370")]
		private bool _codeGenerationAllowOverwrite;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int _defualtCreateAssetMenuOrder;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE53CC", Offset = "0xBE53CC")]
		private bool _enableDebug;

		[Token(Token = "0x1700024F")]
		public static SOArchitecture_Settings Instance
		{
			[Token(Token = "0x6001C09")]
			[Address(RVA = "0xE4ACFC", Offset = "0xE4ACFC", VA = "0xE4ACFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000250")]
		public bool DrawEventGizmos
		{
			[Token(Token = "0x6001C0C")]
			[Address(RVA = "0xE4AEA4", Offset = "0xE4AEA4", VA = "0xE4AEA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000251")]
		public string CodeGenerationTargetDirectory
		{
			[Token(Token = "0x6001C0D")]
			[Address(RVA = "0xE4AEAC", Offset = "0xE4AEAC", VA = "0xE4AEAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000252")]
		public bool CodeGenerationAllowOverwrite
		{
			[Token(Token = "0x6001C0E")]
			[Address(RVA = "0xE4AEB4", Offset = "0xE4AEB4", VA = "0xE4AEB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000253")]
		public int DefaultCreateAssetMenuOrder
		{
			[Token(Token = "0x6001C0F")]
			[Address(RVA = "0xE4AEBC", Offset = "0xE4AEBC", VA = "0xE4AEBC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000254")]
		public bool EnableDebug
		{
			[Token(Token = "0x6001C10")]
			[Address(RVA = "0xE4AEC4", Offset = "0xE4AEC4", VA = "0xE4AEC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xE4ADA8", Offset = "0xE4ADA8", VA = "0xE4ADA8")]
		private static SOArchitecture_Settings GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xE4AE44", Offset = "0xE4AE44", VA = "0xE4AE44")]
		private static SOArchitecture_Settings CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xE4AECC", Offset = "0xE4AECC", VA = "0xE4AECC")]
		public SOArchitecture_Settings()
		{
		}
	}
	[Token(Token = "0x200046E")]
	public static class SOArchitecture_Utility
	{
		[Token(Token = "0x40017A3")]
		public const int ASSET_MENU_ORDER_VARIABLES = 121;

		[Token(Token = "0x40017A4")]
		public const int ASSET_MENU_ORDER_EVENTS = 122;

		[Token(Token = "0x40017A5")]
		public const int ASSET_MENU_ORDER_COLLECTIONS = 123;

		[Token(Token = "0x40017A6")]
		public const string VARIABLE_SUBMENU = "Variables/";

		[Token(Token = "0x40017A7")]
		public const string COLLECTION_SUBMENU = "Collections/";

		[Token(Token = "0x40017A8")]
		public const string GAME_EVENT = "Game Events/";

		[Token(Token = "0x40017A9")]
		public const string ADVANCED_GAME_EVENT = "Game Events/Advanced/";

		[Token(Token = "0x40017AA")]
		public const string ADVANCED_VARIABLE_SUBMENU = "Variables/Advanced/";

		[Token(Token = "0x40017AB")]
		public const string ADVANCED_VARIABLE_COLLECTION = "Collections/Advanced/";

		[Token(Token = "0x40017AC")]
		public const string ADD_COMPONENT_ROOT_MENU = "SO Architecture/";

		[Token(Token = "0x40017AD")]
		public const string EVENT_LISTENER_SUBMENU = "SO Architecture/Event Listeners/";
	}
	[Token(Token = "0x200046F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD60B4", Offset = "0xBD60B4")]
	public class AnimationCurveVariable : BaseVariable<AnimationCurve>
	{
		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xE45F68", Offset = "0xE45F68", VA = "0xE45F68")]
		public AnimationCurveVariable()
		{
		}
	}
	[Token(Token = "0x2000470")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD6120", Offset = "0xBD6120")]
	public class AudioClipVariable : BaseVariable<AudioClip>
	{
		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xE460B8", Offset = "0xE460B8", VA = "0xE460B8")]
		public AudioClipVariable()
		{
		}
	}
	[Token(Token = "0x2000471")]
	public abstract class BaseVariable : GameEventBase
	{
		[Token(Token = "0x17000255")]
		public abstract bool IsClamped
		{
			[Token(Token = "0x6001C14")]
			get;
		}

		[Token(Token = "0x17000256")]
		public abstract bool Clampable
		{
			[Token(Token = "0x6001C15")]
			get;
		}

		[Token(Token = "0x17000257")]
		public abstract bool ReadOnly
		{
			[Token(Token = "0x6001C16")]
			get;
		}

		[Token(Token = "0x17000258")]
		public abstract Type Type
		{
			[Token(Token = "0x6001C17")]
			get;
		}

		[Token(Token = "0x17000259")]
		public abstract object BaseValue
		{
			[Token(Token = "0x6001C18")]
			get;
			[Token(Token = "0x6001C19")]
			set;
		}

		[Token(Token = "0x6001C1A")]
		public abstract void Wash();

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xE46588", Offset = "0xE46588", VA = "0xE46588")]
		protected BaseVariable()
		{
		}
	}
	[Token(Token = "0x2000472")]
	public abstract class BaseVariable<T> : BaseVariable
	{
		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public T _value;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public T _defaultValue;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _readOnly;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _raiseWarning;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected bool _isClamped;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected T _minClampedValue;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected T _maxClampedValue;

		[Token(Token = "0x1700025A")]
		public virtual T Value
		{
			[Token(Token = "0x6001C1C")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001C1D")]
			set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public virtual T MinClampValue
		{
			[Token(Token = "0x6001C1E")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700025C")]
		public virtual T MaxClampValue
		{
			[Token(Token = "0x6001C1F")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700025D")]
		public override bool Clampable
		{
			[Token(Token = "0x6001C20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025E")]
		public override bool ReadOnly
		{
			[Token(Token = "0x6001C21")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025F")]
		public override bool IsClamped
		{
			[Token(Token = "0x6001C22")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000260")]
		public override Type Type
		{
			[Token(Token = "0x6001C23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000261")]
		public override object BaseValue
		{
			[Token(Token = "0x6001C24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C25")]
			set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public T DefaultValue
		{
			[Token(Token = "0x6001C26")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001C27")]
			set
			{
			}
		}

		[Token(Token = "0x6001C28")]
		public override void Wash()
		{
		}

		[Token(Token = "0x6001C29")]
		public virtual T SetValue(T value)
		{
			return (T)null;
		}

		[Token(Token = "0x6001C2A")]
		public virtual T SetValue(BaseVariable<T> value)
		{
			return (T)null;
		}

		[Token(Token = "0x6001C2B")]
		protected virtual T ClampValue(T value)
		{
			return (T)null;
		}

		[Token(Token = "0x6001C2C")]
		private void RaiseReadonlyWarning()
		{
		}

		[Token(Token = "0x6001C2D")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001C2E")]
		public static implicit operator T(BaseVariable<T> variable)
		{
			return (T)null;
		}

		[Token(Token = "0x6001C2F")]
		protected BaseVariable()
		{
		}
	}
	[Token(Token = "0x2000473")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD618C", Offset = "0xBD618C")]
	public sealed class BoolVariable : BaseVariable<bool>
	{
		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xE4685C", Offset = "0xE4685C", VA = "0xE4685C")]
		public BoolVariable()
		{
		}
	}
	[Token(Token = "0x2000474")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD61F8", Offset = "0xBD61F8")]
	public class ByteVariable : BaseVariable<byte>
	{
		[Token(Token = "0x17000263")]
		public override bool Clampable
		{
			[Token(Token = "0x6001C31")]
			[Address(RVA = "0xE46A9C", Offset = "0xE46A9C", VA = "0xE46A9C", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xE46AA4", Offset = "0xE46AA4", VA = "0xE46AA4", Slot = "24")]
		protected override byte ClampValue(byte value)
		{
			return default(byte);
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xE46B3C", Offset = "0xE46B3C", VA = "0xE46B3C")]
		public ByteVariable()
		{
		}
	}
	[Token(Token = "0x2000475")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD6264", Offset = "0xBD6264")]
	public sealed class CharVariable : BaseVariable<char>
	{
		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xE46D7C", Offset = "0xE46D7C", VA = "0xE46D7C")]
		public CharVariable()
		{
		}
	}
	[Token(Token = "0x2000476")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD62D0", Offset = "0xBD62D0")]
	public class Color32Variable : BaseVariable<Color32>
	{
		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xE46ECC", Offset = "0xE46ECC", VA = "0xE46ECC")]
		public Color32Variable()
		{
		}
	}
	[Token(Token = "0x2000477")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD633C", Offset = "0xBD633C")]
	public class ColorVariable : BaseVariable<Color>
	{
		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xE4703C", Offset = "0xE4703C", VA = "0xE4703C")]
		public ColorVariable()
		{
		}
	}
	[Token(Token = "0x2000478")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD63A8", Offset = "0xBD63A8")]
	public class DoubleVariable : BaseVariable<double>
	{
		[Token(Token = "0x17000264")]
		public override bool Clampable
		{
			[Token(Token = "0x6001C37")]
			[Address(RVA = "0xE47AC4", Offset = "0xE47AC4", VA = "0xE47AC4", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xE47ACC", Offset = "0xE47ACC", VA = "0xE47ACC", Slot = "24")]
		protected override double ClampValue(double value)
		{
			return default(double);
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xE47B5C", Offset = "0xE47B5C", VA = "0xE47B5C")]
		public DoubleVariable()
		{
		}
	}
	[Token(Token = "0x2000479")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD6414", Offset = "0xBD6414")]
	public class FloatVariable : BaseVariable<float>
	{
		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent OnValueAdd;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent OnValueSubstract;

		[Token(Token = "0x17000265")]
		public override bool Clampable
		{
			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0xE47F7C", Offset = "0xE47F7C", VA = "0xE47F7C", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0xE47F84", Offset = "0xE47F84", VA = "0xE47F84", Slot = "24")]
		protected override float ClampValue(float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xE48014", Offset = "0xE48014", VA = "0xE48014")]
		public void AddToDefaultValue(float value)
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0xE4801C", Offset = "0xE4801C", VA = "0xE4801C")]
		public void AddToDefaultValue(FloatVariable variable)
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0xE4805C", Offset = "0xE4805C", VA = "0xE4805C")]
		public void AddToValue(float value)
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0xE480AC", Offset = "0xE480AC", VA = "0xE480AC")]
		public void AddToValue(FloatVariable value)
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xE48154", Offset = "0xE48154", VA = "0xE48154")]
		public void SubstractToValue(float value)
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xE481A4", Offset = "0xE481A4", VA = "0xE481A4")]
		public void SubstractToValue(FloatVariable value)
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xE4824C", Offset = "0xE4824C", VA = "0xE4824C")]
		public void SetMinClamped(float value)
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xE48254", Offset = "0xE48254", VA = "0xE48254")]
		public void SetMaxClamped(float value)
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xE4825C", Offset = "0xE4825C", VA = "0xE4825C")]
		public void SetMinClamped(FloatVariable value)
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xE4829C", Offset = "0xE4829C", VA = "0xE4829C")]
		public void SetMaxClamped(FloatVariable value)
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xE482DC", Offset = "0xE482DC", VA = "0xE482DC")]
		public FloatVariable()
		{
		}
	}
	[Token(Token = "0x200047A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD6480", Offset = "0xBD6480")]
	public sealed class GameObjectVariable : BaseVariable<GameObject>
	{
		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xE4954C", Offset = "0xE4954C", VA = "0xE4954C")]
		public GameObjectVariable()
		{
		}
	}
	[Token(Token = "0x200047B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD64EC", Offset = "0xBD64EC")]
	public class IntVariable : BaseVariable<int>
	{
		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent OnValueAdd;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent OnValueSubstract;

		[Token(Token = "0x17000266")]
		public override bool Clampable
		{
			[Token(Token = "0x6001C48")]
			[Address(RVA = "0xE498CC", Offset = "0xE498CC", VA = "0xE498CC", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xE498D4", Offset = "0xE498D4", VA = "0xE498D4", Slot = "24")]
		protected override int ClampValue(int value)
		{
			return default(int);
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xE4996C", Offset = "0xE4996C", VA = "0xE4996C")]
		public void SetValue(IntVariable variable)
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xE499C4", Offset = "0xE499C4", VA = "0xE499C4")]
		public void SetDefaultValue(IntVariable variable)
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xE3B7C4", Offset = "0xE3B7C4", VA = "0xE3B7C4")]
		public void AddToValue(int value)
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xE49A04", Offset = "0xE49A04", VA = "0xE49A04")]
		public void AddToValue(IntVariable value)
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xE49AB4", Offset = "0xE49AB4", VA = "0xE49AB4")]
		public void SubstractToValue(int value)
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xE49B08", Offset = "0xE49B08", VA = "0xE49B08")]
		public void SubstractToValue(IntVariable value)
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xE49BB8", Offset = "0xE49BB8", VA = "0xE49BB8")]
		public void SetMinClamped(int value)
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xE49BC0", Offset = "0xE49BC0", VA = "0xE49BC0")]
		public void SetMaxClamped(int value)
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xE49BC8", Offset = "0xE49BC8", VA = "0xE49BC8")]
		public void SetMinClamped(IntVariable value)
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xE49C08", Offset = "0xE49C08", VA = "0xE49C08")]
		public void SetMaxClamped(IntVariable value)
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xE49C48", Offset = "0xE49C48", VA = "0xE49C48")]
		public IntVariable()
		{
		}
	}
	[Token(Token = "0x200047C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD6558", Offset = "0xBD6558")]
	public class LongVariable : BaseVariable<long>
	{
		[Token(Token = "0x17000267")]
		public override bool Clampable
		{
			[Token(Token = "0x6001C55")]
			[Address(RVA = "0xE4A068", Offset = "0xE4A068", VA = "0xE4A068", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xE4A070", Offset = "0xE4A070", VA = "0xE4A070", Slot = "24")]
		protected override long ClampValue(long value)
		{
			return default(long);
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xE4A108", Offset = "0xE4A108", VA = "0xE4A108")]
		public LongVariable()
		{
		}
	}
	[Token(Token = "0x200047D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD65C4", Offset = "0xBD65C4")]
	public class ObjectVariable : BaseVariable<UnityEngine.Object>
	{
		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xE4A5AC", Offset = "0xE4A5AC", VA = "0xE4A5AC")]
		public ObjectVariable()
		{
		}
	}
	[Token(Token = "0x200047E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD6630", Offset = "0xBD6630")]
	public sealed class QuaternionVariable : BaseVariable<Quaternion>
	{
		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xE4A9CC", Offset = "0xE4A9CC", VA = "0xE4A9CC")]
		public QuaternionVariable()
		{
		}
	}
	[Token(Token = "0x200047F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD669C", Offset = "0xBD669C")]
	public class SByteVariable : BaseVariable<sbyte>
	{
		[Token(Token = "0x17000268")]
		public override bool Clampable
		{
			[Token(Token = "0x6001C5A")]
			[Address(RVA = "0xE4AC0C", Offset = "0xE4AC0C", VA = "0xE4AC0C", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xE4AC14", Offset = "0xE4AC14", VA = "0xE4AC14", Slot = "24")]
		protected override sbyte ClampValue(sbyte value)
		{
			return default(sbyte);
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xE4ACAC", Offset = "0xE4ACAC", VA = "0xE4ACAC")]
		public SByteVariable()
		{
		}
	}
	[Token(Token = "0x2000480")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD6708", Offset = "0xBD6708")]
	public sealed class SceneVariable : BaseVariable<SceneInfo>
	{
		[Token(Token = "0x17000269")]
		public override SceneInfo Value
		{
			[Token(Token = "0x6001C5D")]
			[Address(RVA = "0xE4B0B0", Offset = "0xE4B0B0", VA = "0xE4B0B0", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026A")]
		public override bool ReadOnly
		{
			[Token(Token = "0x6001C5E")]
			[Address(RVA = "0xE4B0B8", Offset = "0xE4B0B8", VA = "0xE4B0B8", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0xE4B0C0", Offset = "0xE4B0C0", VA = "0xE4B0C0")]
		public SceneVariable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000481")]
	[MultiLine]
	public sealed class SceneInfo : ISerializationCallbackReceiver
	{
		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _sceneName;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _sceneIndex;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool _isSceneEnabled;

		[Token(Token = "0x1700026B")]
		public string SceneName
		{
			[Token(Token = "0x6001C60")]
			[Address(RVA = "0xE4AF90", Offset = "0xE4AF90", VA = "0xE4AF90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026C")]
		public int SceneIndex
		{
			[Token(Token = "0x6001C61")]
			[Address(RVA = "0xE4AF98", Offset = "0xE4AF98", VA = "0xE4AF98")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C62")]
			[Address(RVA = "0xE4AFA0", Offset = "0xE4AFA0", VA = "0xE4AFA0")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public bool IsSceneInBuildSettings
		{
			[Token(Token = "0x6001C63")]
			[Address(RVA = "0xE4AFA8", Offset = "0xE4AFA8", VA = "0xE4AFA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026E")]
		public bool IsSceneEnabled
		{
			[Token(Token = "0x6001C64")]
			[Address(RVA = "0xE4AFB8", Offset = "0xE4AFB8", VA = "0xE4AFB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C65")]
			[Address(RVA = "0xE4AFC0", Offset = "0xE4AFC0", VA = "0xE4AFC0")]
			internal set
			{
			}
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0xE4AFCC", Offset = "0xE4AFCC", VA = "0xE4AFCC")]
		public SceneInfo()
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xE4AFF8", Offset = "0xE4AFF8", VA = "0xE4AFF8", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xE4AFFC", Offset = "0xE4AFFC", VA = "0xE4AFFC", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}
	}
	[Token(Token = "0x2000482")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD6784", Offset = "0xBD6784")]
	public class ShortVariable : BaseVariable<short>
	{
		[Token(Token = "0x1700026F")]
		public override bool Clampable
		{
			[Token(Token = "0x6001C69")]
			[Address(RVA = "0xE4B300", Offset = "0xE4B300", VA = "0xE4B300", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xE4B308", Offset = "0xE4B308", VA = "0xE4B308", Slot = "24")]
		protected override short ClampValue(short value)
		{
			return default(short);
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xE4B3A0", Offset = "0xE4B3A0", VA = "0xE4B3A0")]
		public ShortVariable()
		{
		}
	}
	[Token(Token = "0x2000483")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD67F0", Offset = "0xBD67F0")]
	public sealed class StringVariable : BaseVariable<string>
	{
		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0xE4BEB8", Offset = "0xE4BEB8", VA = "0xE4BEB8")]
		public StringVariable()
		{
		}
	}
	[Token(Token = "0x2000484")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD685C", Offset = "0xBD685C")]
	public class UIntVariable : BaseVariable<uint>
	{
		[Token(Token = "0x17000270")]
		public override bool Clampable
		{
			[Token(Token = "0x6001C6D")]
			[Address(RVA = "0xE4C0F8", Offset = "0xE4C0F8", VA = "0xE4C0F8", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0xE4C100", Offset = "0xE4C100", VA = "0xE4C100", Slot = "24")]
		protected override uint ClampValue(uint value)
		{
			return default(uint);
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0xE4C198", Offset = "0xE4C198", VA = "0xE4C198")]
		public UIntVariable()
		{
		}
	}
	[Token(Token = "0x2000485")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD68C8", Offset = "0xBD68C8")]
	public class ULongVariable : BaseVariable<ulong>
	{
		[Token(Token = "0x17000271")]
		public override bool Clampable
		{
			[Token(Token = "0x6001C70")]
			[Address(RVA = "0xE4C3D8", Offset = "0xE4C3D8", VA = "0xE4C3D8", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0xE4C3E0", Offset = "0xE4C3E0", VA = "0xE4C3E0", Slot = "24")]
		protected override ulong ClampValue(ulong value)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0xE4C478", Offset = "0xE4C478", VA = "0xE4C478")]
		public ULongVariable()
		{
		}
	}
	[Token(Token = "0x2000486")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD6934", Offset = "0xBD6934")]
	public class UShortVariable : BaseVariable<ushort>
	{
		[Token(Token = "0x17000272")]
		public override bool Clampable
		{
			[Token(Token = "0x6001C73")]
			[Address(RVA = "0xE4C6B8", Offset = "0xE4C6B8", VA = "0xE4C6B8", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0xE4C6C0", Offset = "0xE4C6C0", VA = "0xE4C6C0", Slot = "24")]
		protected override ushort ClampValue(ushort value)
		{
			return default(ushort);
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0xE4C758", Offset = "0xE4C758", VA = "0xE4C758")]
		public UShortVariable()
		{
		}
	}
	[Token(Token = "0x2000487")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD69A0", Offset = "0xBD69A0")]
	public sealed class Vector2Variable : BaseVariable<Vector2>
	{
		[Token(Token = "0x6001C76")]
		[Address(RVA = "0xE4C9A0", Offset = "0xE4C9A0", VA = "0xE4C9A0")]
		public Vector2Variable()
		{
		}
	}
	[Token(Token = "0x2000488")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD6A0C", Offset = "0xBD6A0C")]
	public sealed class Vector3Variable : BaseVariable<Vector3>
	{
		[Token(Token = "0x6001C77")]
		[Address(RVA = "0xE4CCE8", Offset = "0xE4CCE8", VA = "0xE4CCE8")]
		public Vector3Variable()
		{
		}
	}
	[Token(Token = "0x2000489")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD6A78", Offset = "0xBD6A78")]
	public sealed class Vector4Variable : BaseVariable<Vector4>
	{
		[Token(Token = "0x6001C78")]
		[Address(RVA = "0xE4CF78", Offset = "0xE4CF78", VA = "0xE4CF78")]
		public Vector4Variable()
		{
		}
	}
	[Token(Token = "0x200048A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD6AE4", Offset = "0xBD6AE4")]
	public class ActorCollection : Collection<ActorData>
	{
		[Token(Token = "0x6001C79")]
		[Address(RVA = "0xE45D28", Offset = "0xE45D28", VA = "0xE45D28")]
		public ActorCollection()
		{
		}
	}
	[Token(Token = "0x200048B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD6B50", Offset = "0xBD6B50")]
	public sealed class GestureVariable : BaseVariable<GestureData>
	{
		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool m_dominant;

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0xE4959C", Offset = "0xE4959C", VA = "0xE4959C")]
		public GestureVariable()
		{
		}
	}
	[Token(Token = "0x200048C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD6BBC", Offset = "0xBD6BBC")]
	public class MoonDataCollection : Collection<MoonData>
	{
		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		private Dictionary<string, MoonData> _moonDatasDico;

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0xE4A158", Offset = "0xE4A158", VA = "0xE4A158")]
		public Dictionary<string, MoonData> ToDictionary()
		{
			return null;
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xE4A27C", Offset = "0xE4A27C", VA = "0xE4A27C")]
		public MoonDataCollection()
		{
		}
	}
	[Token(Token = "0x200048D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD6C28", Offset = "0xBD6C28")]
	public class PerkDataCollection : Collection<PerkData>
	{
		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xE4A5FC", Offset = "0xE4A5FC", VA = "0xE4A5FC")]
		public PerkDataCollection()
		{
		}
	}
	[Token(Token = "0x200048E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD6C94", Offset = "0xBD6C94")]
	public class PlanetCollection : Collection<PlanetData>
	{
		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0xE4A73C", Offset = "0xE4A73C", VA = "0xE4A73C")]
		public PlanetCollection()
		{
		}
	}
	[Token(Token = "0x200048F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD6D00", Offset = "0xBD6D00")]
	public class SolarSystemCollection : Collection<SolarSystemData>
	{
		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xE4B5E0", Offset = "0xE4B5E0", VA = "0xE4B5E0")]
		public SolarSystemCollection()
		{
		}
	}
}
namespace BoundarySystem_Ext
{
	[Token(Token = "0x2000490")]
	internal static class Pvr_BoundaryAPI
	{
		[Token(Token = "0x40017BE")]
		private const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6001C80")]
		[Address(RVA = "0xED2C50", Offset = "0xED2C50", VA = "0xED2C50")]
		public static extern void Pvr_StartSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x6001C81")]
		[Address(RVA = "0xED2CC0", Offset = "0xED2CC0", VA = "0xED2CC0")]
		public static extern void Pvr_ShutdownSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x6001C82")]
		[Address(RVA = "0xED2D30", Offset = "0xED2D30", VA = "0xED2D30")]
		private static extern int Pvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x6001C83")]
		[Address(RVA = "0xED2E14", Offset = "0xED2E14", VA = "0xED2E14")]
		private static extern IntPtr Pvr_GetCameraData_Ext();

		[PreserveSig]
		[Token(Token = "0x6001C84")]
		[Address(RVA = "0xED2E88", Offset = "0xED2E88", VA = "0xED2E88")]
		public static extern void Pvr_ResetVrModebyForce();

		[PreserveSig]
		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xED2EF8", Offset = "0xED2EF8", VA = "0xED2EF8")]
		private static extern bool Pvr_ResumeBoundaryForSTS();

		[PreserveSig]
		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xED2F74", Offset = "0xED2F74", VA = "0xED2F74")]
		private static extern void Pvr_PauseBoundaryForSTS();

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xED2FE4", Offset = "0xED2FE4", VA = "0xED2FE4")]
		public static int UPvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xED2FF0", Offset = "0xED2FF0", VA = "0xED2FF0")]
		public static IntPtr UPvr_GetCameraData_Ext()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xED302C", Offset = "0xED302C", VA = "0xED302C")]
		public static bool UPvr_ResumeBoundaryForSTS()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xED3030", Offset = "0xED3030", VA = "0xED3030")]
		public static void UPvr_PauseBoundaryForSTS()
		{
		}

		[Token(Token = "0x6001C8B")]
		public static IntPtr StructToIntPtr<T>(T info)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001C8C")]
		public static T IntPtrToStruct<T>(IntPtr info)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000491")]
	internal static class Pvr_SafeAreaAlgoAPI
	{
		[Token(Token = "0x20006D2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBD88C4", Offset = "0xBD88C4")]
		public delegate void SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr);

		[Token(Token = "0x20006D3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBD88D8", Offset = "0xBD88D8")]
		public delegate void SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr);

		[Token(Token = "0x20006D4")]
		public struct GSAPoint3i
		{
			[Token(Token = "0x4002138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int x;

			[Token(Token = "0x4002139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int y;

			[Token(Token = "0x400213A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int z;
		}

		[Token(Token = "0x20006D5")]
		public struct GSALine
		{
			[Token(Token = "0x400213B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr pointArray;

			[Token(Token = "0x400213C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pointCount;
		}

		[Token(Token = "0x20006D6")]
		public struct GSALineCollection
		{
			[Token(Token = "0x400213D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr lineArray;

			[Token(Token = "0x400213E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int lineCount;
		}

		[Token(Token = "0x20006D7")]
		public struct GSALegalData
		{
			[Token(Token = "0x400213F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int overMaxRange;

			[Token(Token = "0x4002140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int includeBigGrap;

			[Token(Token = "0x4002141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int bigGapNum;

			[Token(Token = "0x4002142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int centerOut;

			[Token(Token = "0x4002143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int removeNarrow;

			[Token(Token = "0x4002144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int overMaxRange_more;

			[Token(Token = "0x4002145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int validShrinkArea;
		}

		[Token(Token = "0x20006D8")]
		public struct GSARect
		{
			[Token(Token = "0x4002146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GSAPoint3i leftup;

			[Token(Token = "0x4002147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public GSAPoint3i leftdown;

			[Token(Token = "0x4002148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GSAPoint3i rightup;

			[Token(Token = "0x4002149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public GSAPoint3i rightdown;

			[Token(Token = "0x400214A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GSAPoint3i center;

			[Token(Token = "0x400214B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x400214C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x400214D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int isLegal;

			[Token(Token = "0x400214E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GSALegalData legalData;
		}

		[Token(Token = "0x40017BF")]
		private const string LibFileName = "SafetyArea";

		[PreserveSig]
		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0xED32DC", Offset = "0xED32DC", VA = "0xED32DC")]
		private static extern int GSAInit(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xED336C", Offset = "0xED336C", VA = "0xED336C")]
		private static extern int GSAShutDown();

		[PreserveSig]
		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0xED33E0", Offset = "0xED33E0", VA = "0xED33E0")]
		private static extern int GSASetCallback(SafeAreaCallback cb);

		[PreserveSig]
		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xED3464", Offset = "0xED3464", VA = "0xED3464")]
		private static extern int GSASetCallbackShrink(SafeAreaCallbackShrink cb);

		[PreserveSig]
		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xED34E8", Offset = "0xED34E8", VA = "0xED34E8")]
		private static extern int GSAUpDateData(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x6001C92")]
		[Address(RVA = "0xED3568", Offset = "0xED3568", VA = "0xED3568")]
		private static extern int GSASetConfigFilePath(IntPtr configPath);

		[PreserveSig]
		[Token(Token = "0x6001C93")]
		[Address(RVA = "0xED35E8", Offset = "0xED35E8", VA = "0xED35E8")]
		private static extern bool GSAGetClosedAreaUpdateFlag();

		[PreserveSig]
		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xED3664", Offset = "0xED3664", VA = "0xED3664")]
		private static extern int GSALoadSafetyArea(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x6001C95")]
		[Address(RVA = "0xED36E4", Offset = "0xED36E4", VA = "0xED36E4")]
		private static extern double GSABoundaryDetector(ref GSAPoint3i pointPtr);

		[PreserveSig]
		[Token(Token = "0x6001C96")]
		[Address(RVA = "0xED3764", Offset = "0xED3764", VA = "0xED3764")]
		private static extern int GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xED37F4", Offset = "0xED37F4", VA = "0xED37F4")]
		private static extern double GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir);

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xED389C", Offset = "0xED389C", VA = "0xED389C")]
		public static int Pvr_GSAInit(int width, int height)
		{
			return default(int);
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0xED38A0", Offset = "0xED38A0", VA = "0xED38A0")]
		public static int Pvr_GSASetCallback(SafeAreaCallback cb)
		{
			return default(int);
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xED38A4", Offset = "0xED38A4", VA = "0xED38A4")]
		public static int Pvr_GSASetCallbackShrink(SafeAreaCallbackShrink cb)
		{
			return default(int);
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0xED38A8", Offset = "0xED38A8", VA = "0xED38A8")]
		public static int Pvr_GSAUpDateData(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xED38AC", Offset = "0xED38AC", VA = "0xED38AC")]
		public static bool Pvr_GSAGetClosedAreaUpdateFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xED38B0", Offset = "0xED38B0", VA = "0xED38B0")]
		public static int Pvr_GSASetConfigFilePath(string configPath)
		{
			return default(int);
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xED3938", Offset = "0xED3938", VA = "0xED3938")]
		public static int Pvr_GSALoadSafetyArea(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xED393C", Offset = "0xED393C", VA = "0xED393C")]
		public static double Pvr_GSABoundaryDetector(ref GSAPoint3i point)
		{
			return default(double);
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xED3940", Offset = "0xED3940", VA = "0xED3940")]
		public static int Pvr_GSAShutDown()
		{
			return default(int);
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0xED3944", Offset = "0xED3944", VA = "0xED3944")]
		public static int Pvr_GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea)
		{
			return default(int);
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xED394C", Offset = "0xED394C", VA = "0xED394C")]
		public static double Pvr_GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000492")]
	public class Pvr_BoundarySystem
	{
		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_BoundarySystem instance;

		[Token(Token = "0x40017C1")]
		public const int CameraImageWidth = 1280;

		[Token(Token = "0x40017C2")]
		public const int CameraImageHeight = 400;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr CameraFramePtr;

		[Token(Token = "0x17000273")]
		public static Pvr_BoundarySystem Instance
		{
			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0xED3034", Offset = "0xED3034", VA = "0xED3034")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xED3104", Offset = "0xED3104", VA = "0xED3104")]
		public void OpenBoundary()
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xED3108", Offset = "0xED3108", VA = "0xED3108")]
		public void CloseBoundary()
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xED310C", Offset = "0xED310C", VA = "0xED310C")]
		public void Reset6Dof()
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xED3110", Offset = "0xED3110", VA = "0xED3110")]
		public float[] GetControllerFixedPoseData(int hand)
		{
			return null;
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xED30B8", Offset = "0xED30B8", VA = "0xED30B8")]
		public Pvr_BoundarySystem()
		{
		}
	}
	[Token(Token = "0x2000493")]
	public class Pvr_SafeAreaAlgoModule
	{
		[Token(Token = "0x20006D9")]
		public struct ExtraInfo
		{
			[Token(Token = "0x400214F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool overMaxRange;

			[Token(Token = "0x4002150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeBigGap;

			[Token(Token = "0x4002151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int bigGapNum;

			[Token(Token = "0x4002152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool centerOut;

			[Token(Token = "0x4002153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool removeNarrow;

			[Token(Token = "0x4002154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public bool overMaxRange_more;

			[Token(Token = "0x4002155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int validShrinkArea;
		}

		[Token(Token = "0x20006DA")]
		public struct BoundaryPlayerArea
		{
			[Token(Token = "0x4002156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 lowerleft;

			[Token(Token = "0x4002157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 upperleft;

			[Token(Token = "0x4002158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 upperRight;

			[Token(Token = "0x4002159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 lowerRight;

			[Token(Token = "0x400215A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 center;

			[Token(Token = "0x400215B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x400215C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x400215D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool isLegal;

			[Token(Token = "0x400215E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ExtraInfo extraInfo;
		}

		[Token(Token = "0x20006DB")]
		public delegate void BoundarySystemCallback(BoundaryPlayerArea playAreaInfo, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x20006DC")]
		public delegate void BoundarySystemCallbackShrink(List<Vector3> rectPoints, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_SafeAreaAlgoModule instance;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BoundarySystemCallback boundarySystemCallback;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BoundarySystemCallbackShrink boundarySystemCallbackShrink;

		[Token(Token = "0x17000274")]
		public static Pvr_SafeAreaAlgoModule Instance
		{
			[Token(Token = "0x6001CA9")]
			[Address(RVA = "0xED4D9C", Offset = "0xED4D9C", VA = "0xED4D9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xED4E2C", Offset = "0xED4E2C", VA = "0xED4E2C")]
		public void RegisterCallBack(BoundarySystemCallback callback)
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xED4E34", Offset = "0xED4E34", VA = "0xED4E34")]
		public void RegisterCallBackShrink(BoundarySystemCallbackShrink callback)
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xED4E3C", Offset = "0xED4E3C", VA = "0xED4E3C")]
		public bool Start()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xED4F84", Offset = "0xED4F84", VA = "0xED4F84")]
		public bool CommitNewLineData(bool isFistLine, Vector3[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xED5204", Offset = "0xED5204", VA = "0xED5204")]
		public bool Shutdown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xED5288", Offset = "0xED5288", VA = "0xED5288")]
		public double QueryDistanceOfPoint(Vector3 point)
		{
			return default(double);
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xED52E0", Offset = "0xED52E0", VA = "0xED52E0")]
		public double QueryDistanceOfPoint(Vector3 point, bool isPlayArea, ref Vector3 closestPoint, ref Vector3 normalDir)
		{
			return default(double);
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xED3FCC", Offset = "0xED3FCC", VA = "0xED3FCC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBEAF20", Offset = "0xBEAF20")]
		private static void _SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr)
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xED46E4", Offset = "0xED46E4", VA = "0xED46E4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBEAF84", Offset = "0xBEAF84")]
		private static void _SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr)
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0xED4E24", Offset = "0xED4E24", VA = "0xED4E24")]
		public Pvr_SafeAreaAlgoModule()
		{
		}
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x2000494")]
	public class PvrControllerKey
	{
		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool State;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool PressedDown;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool PressedUp;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool LongPressed;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool Click;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool Touch;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool TouchDown;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool TouchUp;

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x19FFB20", Offset = "0x19FFB20", VA = "0x19FFB20")]
		public PvrControllerKey()
		{
		}
	}
	[Token(Token = "0x2000495")]
	public class ControllerHand
	{
		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PvrControllerKey App;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PvrControllerKey Touch;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PvrControllerKey Home;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PvrControllerKey VolumeDown;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PvrControllerKey VolumeUp;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PvrControllerKey Trigger;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PvrControllerKey X;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PvrControllerKey Y;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PvrControllerKey A;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PvrControllerKey B;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PvrControllerKey Left;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PvrControllerKey Right;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PvrControllerKey Thumbrest;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector2 TouchPadPosition;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int TriggerNum;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int GripValue;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Quaternion Rotation;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 Position;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int Battery;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ControllerState ConnectState;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public SwipeDirection SwipeDirection;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public TouchPadClick TouchPadClick;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool isShowBoundary;

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x19FF89C", Offset = "0x19FF89C", VA = "0x19FF89C")]
		public ControllerHand()
		{
		}
	}
	[Token(Token = "0x2000496")]
	public enum ControllerState
	{
		[Token(Token = "0x40017E7")]
		Error = -1,
		[Token(Token = "0x40017E8")]
		DisConnected,
		[Token(Token = "0x40017E9")]
		Connected
	}
	[Token(Token = "0x2000497")]
	public enum Pvr_KeyCode
	{
		[Token(Token = "0x40017EB")]
		APP = 1,
		[Token(Token = "0x40017EC")]
		TOUCHPAD,
		[Token(Token = "0x40017ED")]
		HOME,
		[Token(Token = "0x40017EE")]
		VOLUMEUP,
		[Token(Token = "0x40017EF")]
		VOLUMEDOWN,
		[Token(Token = "0x40017F0")]
		TRIGGER,
		[Token(Token = "0x40017F1")]
		A,
		[Token(Token = "0x40017F2")]
		B,
		[Token(Token = "0x40017F3")]
		X,
		[Token(Token = "0x40017F4")]
		Y,
		[Token(Token = "0x40017F5")]
		Left,
		[Token(Token = "0x40017F6")]
		Right,
		[Token(Token = "0x40017F7")]
		Thumbrest
	}
	[Token(Token = "0x2000498")]
	public enum SwipeDirection
	{
		[Token(Token = "0x40017F9")]
		No,
		[Token(Token = "0x40017FA")]
		SwipeUp,
		[Token(Token = "0x40017FB")]
		SwipeDown,
		[Token(Token = "0x40017FC")]
		SwipeLeft,
		[Token(Token = "0x40017FD")]
		SwipeRight
	}
	[Token(Token = "0x2000499")]
	public enum TouchPadClick
	{
		[Token(Token = "0x40017FF")]
		No,
		[Token(Token = "0x4001800")]
		ClickUp,
		[Token(Token = "0x4001801")]
		ClickDown,
		[Token(Token = "0x4001802")]
		ClickLeft,
		[Token(Token = "0x4001803")]
		ClickRight
	}
	[Token(Token = "0x200049A")]
	public struct Controller
	{
		[Token(Token = "0x4001804")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x19FB078", Offset = "0x19FB078", VA = "0x19FB078")]
		public static Vector2 UPvr_GetTouchPadPosition(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x19FB174", Offset = "0x19FB174", VA = "0x19FB174")]
		public static float UPvr_GetAxis1D(int hand, Pvr_KeyCode key)
		{
			return default(float);
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x19FB2F8", Offset = "0x19FB2F8", VA = "0x19FB2F8")]
		public static Vector2 UPvr_GetAxis2D(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x19FB528", Offset = "0x19FB528", VA = "0x19FB528")]
		public static ControllerState UPvr_GetControllerState(int hand)
		{
			return default(ControllerState);
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x19FB62C", Offset = "0x19FB62C", VA = "0x19FB62C")]
		public static Quaternion UPvr_GetControllerQUA(int hand)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x19FB744", Offset = "0x19FB744", VA = "0x19FB744")]
		public static Vector3 UPvr_GetControllerPOS(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x19FB858", Offset = "0x19FB858", VA = "0x19FB858")]
		public static int UPvr_GetControllerTriggerValue(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x19FB928", Offset = "0x19FB928", VA = "0x19FB928")]
		public static int UPvr_GetControllerPower(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x19FB9F8", Offset = "0x19FB9F8", VA = "0x19FB9F8")]
		public static SwipeDirection UPvr_GetSwipeDirection(int hand)
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x19FBAC8", Offset = "0x19FBAC8", VA = "0x19FBAC8")]
		public static TouchPadClick UPvr_GetTouchPadClick(int hand)
		{
			return default(TouchPadClick);
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x19FBB98", Offset = "0x19FBB98", VA = "0x19FBB98")]
		public static bool UPvr_GetKey(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x19FC0E4", Offset = "0x19FC0E4", VA = "0x19FC0E4")]
		public static bool UPvr_GetKeyDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x19FC630", Offset = "0x19FC630", VA = "0x19FC630")]
		public static bool UPvr_GetKeyUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x19FCB7C", Offset = "0x19FCB7C", VA = "0x19FCB7C")]
		public static bool UPvr_GetTouch(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x19FCEC0", Offset = "0x19FCEC0", VA = "0x19FCEC0")]
		public static bool UPvr_GetTouchDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x19FD204", Offset = "0x19FD204", VA = "0x19FD204")]
		public static bool UPvr_GetTouchUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x19FD548", Offset = "0x19FD548", VA = "0x19FD548")]
		public static bool UPvr_GetKeyClick(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x19FDA94", Offset = "0x19FDA94", VA = "0x19FDA94")]
		public static bool UPvr_GetKeyLongPressed(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x19FDFE0", Offset = "0x19FDFE0", VA = "0x19FDFE0")]
		public static bool UPvr_IsTouching(int hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x19FE1AC", Offset = "0x19FE1AC", VA = "0x19FE1AC")]
		public static void UPvr_SetHandNess(Pvr_Controller.UserHandNess hand)
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x19FE26C", Offset = "0x19FE26C", VA = "0x19FE26C")]
		public static Pvr_Controller.UserHandNess UPvr_GetHandNess()
		{
			return default(Pvr_Controller.UserHandNess);
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x19FE2E0", Offset = "0x19FE2E0", VA = "0x19FE2E0")]
		public static int UPvr_GetPreferenceDevice()
		{
			return default(int);
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x19FE39C", Offset = "0x19FE39C", VA = "0x19FE39C")]
		public static bool UPvr_IsEnbleTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x19FE410", Offset = "0x19FE410", VA = "0x19FE410")]
		public static int UPvr_GetDeviceType()
		{
			return default(int);
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x19FE484", Offset = "0x19FE484", VA = "0x19FE484")]
		public static int UPvr_GetMainHandNess()
		{
			return default(int);
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x19FE4F8", Offset = "0x19FE4F8", VA = "0x19FE4F8")]
		public static void UPvr_SetMainHandNess(int hand)
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x19FE574", Offset = "0x19FE574", VA = "0x19FE574")]
		public static int UPvr_GetControllerAbility(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x19FE5F0", Offset = "0x19FE5F0", VA = "0x19FE5F0")]
		public static void UPvr_VibrateNeo2Controller(float strength, int time, int hand)
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x19FE68C", Offset = "0x19FE68C", VA = "0x19FE68C")]
		public static int UPvr_GetControllerBindingState(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x19FE708", Offset = "0x19FE708", VA = "0x19FE708")]
		public static Vector3 UPvr_GetVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x19FE784", Offset = "0x19FE784", VA = "0x19FE784")]
		public static Vector3 UPvr_GetAngularVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x19FE800", Offset = "0x19FE800", VA = "0x19FE800")]
		public static Vector3 UPvr_GetAcceleration(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x19FE87C", Offset = "0x19FE87C", VA = "0x19FE87C")]
		public static void UPvr_ScanController()
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x19FE8F0", Offset = "0x19FE8F0", VA = "0x19FE8F0")]
		public static void UPvr_StopScanController()
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x19FE964", Offset = "0x19FE964", VA = "0x19FE964")]
		public static void UPvr_ConnectController(string mac)
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x19FEA34", Offset = "0x19FEA34", VA = "0x19FEA34")]
		public static void UPvr_DisConnectController()
		{
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x19FEAA8", Offset = "0x19FEAA8", VA = "0x19FEAA8")]
		public static void UPvr_ResetController(int hand)
		{
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x19FEB24", Offset = "0x19FEB24", VA = "0x19FEB24")]
		public static string UPvr_GetControllerVersion()
		{
			return null;
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x19FEB98", Offset = "0x19FEB98", VA = "0x19FEB98")]
		public static void UPvr_GetDeviceVersion(int deviceType)
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x19FEC14", Offset = "0x19FEC14", VA = "0x19FEC14")]
		public static void UPvr_GetControllerSnCode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x19FEC90", Offset = "0x19FEC90", VA = "0x19FEC90")]
		public static void UPvr_SetControllerUnbind(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x19FED0C", Offset = "0x19FED0C", VA = "0x19FED0C")]
		public static void UPvr_SetStationRestart()
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x19FED80", Offset = "0x19FED80", VA = "0x19FED80")]
		public static void UPvr_StartStationOtaUpdate()
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x19FEDF4", Offset = "0x19FEDF4", VA = "0x19FEDF4")]
		public static void UPvr_StartControllerOtaUpdate(int mode, int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x19FEE80", Offset = "0x19FEE80", VA = "0x19FEE80")]
		public static void UPvr_EnterPairMode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x19FEEFC", Offset = "0x19FEEFC", VA = "0x19FEEFC")]
		public static void UPvr_SetControllerShutdown(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0x19FEF78", Offset = "0x19FEF78", VA = "0x19FEF78")]
		public static int UPvr_GetStationPairState()
		{
			return default(int);
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0x19FEFEC", Offset = "0x19FEFEC", VA = "0x19FEFEC")]
		public static int UPvr_GetStationOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0x19FF060", Offset = "0x19FF060", VA = "0x19FF060")]
		public static int UPvr_GetControllerOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x19FF0D4", Offset = "0x19FF0D4", VA = "0x19FF0D4")]
		public static void UPvr_GetControllerVersionAndSN(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x19FF150", Offset = "0x19FF150", VA = "0x19FF150")]
		public static void UPvr_GetControllerUniqueID()
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xD0EF6C", Offset = "0xD0EF6C", VA = "0xD0EF6C")]
		public void UPvr_InterruptStationPairMode()
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xD0EF70", Offset = "0xD0EF70", VA = "0xD0EF70")]
		public void UPvr_StartCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xD0EF74", Offset = "0xD0EF74", VA = "0xD0EF74")]
		public void UPvr_StopCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x19FF330", Offset = "0x19FF330", VA = "0x19FF330")]
		public static void UPvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x19FF3EC", Offset = "0x19FF3EC", VA = "0x19FF3EC")]
		public static void UPvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] controllerPrimary)
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x19FF4A0", Offset = "0x19FF4A0", VA = "0x19FF4A0")]
		public static void UPvr_GetPointerPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0x19FF544", Offset = "0x19FF544", VA = "0x19FF544")]
		public static void UPvr_GetElbowPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x19FF5E4", Offset = "0x19FF5E4", VA = "0x19FF5E4")]
		public static void UPvr_GetWristPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x19FF684", Offset = "0x19FF684", VA = "0x19FF684")]
		public static void UPvr_GetShoulderPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x19FF728", Offset = "0x19FF728", VA = "0x19FF728")]
		public static void UPvr_IsEnbleHomeKey(bool state)
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x19FF7A4", Offset = "0x19FF7A4", VA = "0x19FF7A4")]
		public static void UPvr_SwitchHomeKey(bool state)
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x19FF820", Offset = "0x19FF820", VA = "0x19FF820")]
		public static int UPvr_GetControllerSensorStatus(int id)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x19FF3F0", Offset = "0x19FF3F0", VA = "0x19FF3F0")]
		private static extern void Pvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] gyro);

		[PreserveSig]
		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0x19FF4A4", Offset = "0x19FF4A4", VA = "0x19FF4A4")]
		private static extern void Pvr_GetPointerPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x19FF548", Offset = "0x19FF548", VA = "0x19FF548")]
		private static extern void Pvr_GetElbowPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x19FF5E8", Offset = "0x19FF5E8", VA = "0x19FF5E8")]
		private static extern void Pvr_GetWristPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x19FF688", Offset = "0x19FF688", VA = "0x19FF688")]
		private static extern void Pvr_GetShoulderPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x19FF334", Offset = "0x19FF334", VA = "0x19FF334")]
		private static extern void Pvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle);
	}
	[Token(Token = "0x200049B")]
	public enum ControllerVariety
	{
		[Token(Token = "0x4001806")]
		Controller0,
		[Token(Token = "0x4001807")]
		Controller1
	}
	[Token(Token = "0x200049C")]
	public enum ControllerDevice
	{
		[Token(Token = "0x4001809")]
		Goblin,
		[Token(Token = "0x400180A")]
		Neo,
		[Token(Token = "0x400180B")]
		G2,
		[Token(Token = "0x400180C")]
		Neo2,
		[Token(Token = "0x400180D")]
		Neo3,
		[Token(Token = "0x400180E")]
		NewController
	}
	[Token(Token = "0x200049D")]
	public enum PBS_SystemInfoEnum
	{
		[Token(Token = "0x4001810")]
		ELECTRIC_QUANTITY,
		[Token(Token = "0x4001811")]
		PUI_VERSION,
		[Token(Token = "0x4001812")]
		EQUIPMENT_MODEL,
		[Token(Token = "0x4001813")]
		EQUIPMENT_SN,
		[Token(Token = "0x4001814")]
		CUSTOMER_SN,
		[Token(Token = "0x4001815")]
		INTERNAL_STORAGE_SPACE_OF_THE_DEVICE,
		[Token(Token = "0x4001816")]
		DEVICE_BLUETOOTH_STATUS,
		[Token(Token = "0x4001817")]
		BLUETOOTH_NAME_CONNECTED,
		[Token(Token = "0x4001818")]
		BLUETOOTH_MAC_ADDRESS,
		[Token(Token = "0x4001819")]
		DEVICE_WIFI_STATUS,
		[Token(Token = "0x400181A")]
		WIFI_NAME_CONNECTED,
		[Token(Token = "0x400181B")]
		WLAN_MAC_ADDRESS,
		[Token(Token = "0x400181C")]
		DEVICE_IP
	}
	[Token(Token = "0x200049E")]
	public enum PBS_DeviceControlEnum
	{
		[Token(Token = "0x400181E")]
		DEVICE_CONTROL_REBOOT,
		[Token(Token = "0x400181F")]
		DEVICE_CONTROL_SHUTDOWN
	}
	[Token(Token = "0x200049F")]
	public enum PBS_PackageControlEnum
	{
		[Token(Token = "0x4001821")]
		PACKAGE_SILENCE_INSTALL,
		[Token(Token = "0x4001822")]
		PACKAGE_SILENCE_UNINSTALL
	}
	[Token(Token = "0x20004A0")]
	public enum PBS_SwitchEnum
	{
		[Token(Token = "0x4001824")]
		S_ON,
		[Token(Token = "0x4001825")]
		S_OFF
	}
	[Token(Token = "0x20004A1")]
	public enum PBS_HomeEventEnum
	{
		[Token(Token = "0x4001827")]
		SINGLE_CLICK,
		[Token(Token = "0x4001828")]
		DOUBLE_CLICK,
		[Token(Token = "0x4001829")]
		LONG_PRESS
	}
	[Token(Token = "0x20004A2")]
	public enum PBS_HomeFunctionEnum
	{
		[Token(Token = "0x400182B")]
		VALUE_HOME_GO_TO_SETTING,
		[Token(Token = "0x400182C")]
		VALUE_HOME_BACK,
		[Token(Token = "0x400182D")]
		VALUE_HOME_RECENTER,
		[Token(Token = "0x400182E")]
		VALUE_HOME_OPEN_APP,
		[Token(Token = "0x400182F")]
		VALUE_HOME_DISABLE,
		[Token(Token = "0x4001830")]
		VALUE_HOME_GO_TO_HOME,
		[Token(Token = "0x4001831")]
		VALUE_HOME_SEND_BROADCAST,
		[Token(Token = "0x4001832")]
		VALUE_HOME_CLEAN_MEMORY
	}
	[Token(Token = "0x20004A3")]
	public enum PBS_ScreenOffDelayTimeEnum
	{
		[Token(Token = "0x4001834")]
		THREE = 3,
		[Token(Token = "0x4001835")]
		TEN = 10,
		[Token(Token = "0x4001836")]
		THIRTY = 30,
		[Token(Token = "0x4001837")]
		SIXTY = 60,
		[Token(Token = "0x4001838")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x4001839")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x400183A")]
		NEVER = -1
	}
	[Token(Token = "0x20004A4")]
	public enum PBS_SleepDelayTimeEnum
	{
		[Token(Token = "0x400183C")]
		FIFTEEN = 15,
		[Token(Token = "0x400183D")]
		THIRTY = 30,
		[Token(Token = "0x400183E")]
		SIXTY = 60,
		[Token(Token = "0x400183F")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x4001840")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x4001841")]
		ONE_THOUSAND_AND_EIGHT_HUNDRED = 1800,
		[Token(Token = "0x4001842")]
		NEVER = -1
	}
	[Token(Token = "0x20004A5")]
	public enum PBS_SystemFunctionSwitchEnum
	{
		[Token(Token = "0x4001844")]
		SFS_USB,
		[Token(Token = "0x4001845")]
		SFS_AUTOSLEEP,
		[Token(Token = "0x4001846")]
		SFS_SCREENON_CHARGING,
		[Token(Token = "0x4001847")]
		SFS_OTG_CHARGING,
		[Token(Token = "0x4001848")]
		SFS_RETURN_MENU_IN_2DMODE,
		[Token(Token = "0x4001849")]
		SFS_COMBINATION_KEY,
		[Token(Token = "0x400184A")]
		SFS_CALIBRATION_WITH_POWER_ON,
		[Token(Token = "0x400184B")]
		SFS_SYSTEM_UPDATE,
		[Token(Token = "0x400184C")]
		SFS_CAST_SERVICE,
		[Token(Token = "0x400184D")]
		SFS_EYE_PROTECTION,
		[Token(Token = "0x400184E")]
		SFS_SECURITY_ZONE_PERMANENTLY,
		[Token(Token = "0x400184F")]
		SFS_GLOBAL_CALIBRATION,
		[Token(Token = "0x4001850")]
		SFS_Auto_Calibration,
		[Token(Token = "0x4001851")]
		SFS_USB_BOOT
	}
	[Token(Token = "0x20004A6")]
	public enum PBS_USBConfigModeEnum
	{
		[Token(Token = "0x4001853")]
		MTP,
		[Token(Token = "0x4001854")]
		CHARGE
	}
	[Token(Token = "0x20004A7")]
	public struct ToBService
	{
		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<bool> BoolCallback;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<int> IntCallback;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<long> LongCallback;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass unityPlayer;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject currentActivity;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject tobHelper;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaClass tobHelperClass;

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x1A08860", Offset = "0x1A08860", VA = "0x1A08860")]
		public static void UPvr_InitToBService()
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x1A08A3C", Offset = "0x1A08A3C", VA = "0x1A08A3C")]
		public static void UPvr_SetUnityObjectName(string obj)
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x1A08B14", Offset = "0x1A08B14", VA = "0x1A08B14")]
		public static void UPvr_BindToBService()
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x1A08BF4", Offset = "0x1A08BF4", VA = "0x1A08BF4")]
		public static void UPvr_UnBindToBService()
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x1A08CD4", Offset = "0x1A08CD4", VA = "0x1A08CD4")]
		private static AndroidJavaObject GetEnumType(Enum enumType)
		{
			return null;
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x1A08DD0", Offset = "0x1A08DD0", VA = "0x1A08DD0")]
		public static string UPvr_StateGetDeviceInfo(PBS_SystemInfoEnum type)
		{
			return null;
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x1A08F44", Offset = "0x1A08F44", VA = "0x1A08F44")]
		public static void UPvr_ControlSetDeviceAction(PBS_DeviceControlEnum deviceControl, Action<int> callback)
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x1A09064", Offset = "0x1A09064", VA = "0x1A09064")]
		public static void UPvr_ControlAPPManger(PBS_PackageControlEnum packageControl, string path, Action<int> callback)
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x1A09214", Offset = "0x1A09214", VA = "0x1A09214")]
		public static void UPvr_ControlSetAutoConnectWIFI(string ssid, string pwd, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x1A093A4", Offset = "0x1A093A4", VA = "0x1A093A4")]
		public static void UPvr_ControlClearAutoConnectWIFI(Action<bool> callback)
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x1A09428", Offset = "0x1A09428", VA = "0x1A09428")]
		public static void UPvr_PropertySetHomeKey(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x1A095A8", Offset = "0x1A095A8", VA = "0x1A095A8")]
		public static void UPvr_PropertySetHomeKeyAll(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, int timesetup, string pkg, string className, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x1A097FC", Offset = "0x1A097FC", VA = "0x1A097FC")]
		public static void UPvr_PropertyDisablePowerKey(bool isSingleTap, bool enable, Action<int> callback)
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x1A09970", Offset = "0x1A09970", VA = "0x1A09970")]
		public static void UPvr_PropertySetScreenOffDelay(PBS_ScreenOffDelayTimeEnum timeEnum, Action<int> callback)
		{
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x1A09A90", Offset = "0x1A09A90", VA = "0x1A09A90")]
		public static void UPvr_PropertySetSleepDelay(PBS_SleepDelayTimeEnum timeEnum)
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x1A09B8C", Offset = "0x1A09B8C", VA = "0x1A09B8C")]
		public static void UPvr_SwitchSystemFunction(PBS_SystemFunctionSwitchEnum systemFunction, PBS_SwitchEnum switchEnum)
		{
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x1A09D38", Offset = "0x1A09D38", VA = "0x1A09D38")]
		public static void UPvr_SwitchSetUsbConfigurationOption(PBS_USBConfigModeEnum uSBConfigModeEnum)
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x1A09E84", Offset = "0x1A09E84", VA = "0x1A09E84")]
		public static void UPvr_ScreenOn()
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x1A09F78", Offset = "0x1A09F78", VA = "0x1A09F78")]
		public static void UPvr_ScreenOff()
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x1A0A06C", Offset = "0x1A0A06C", VA = "0x1A0A06C")]
		public static void UPvr_AcquireWakeLock()
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x1A0A160", Offset = "0x1A0A160", VA = "0x1A0A160")]
		public static void UPvr_ReleaseWakeLock()
		{
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x1A0A254", Offset = "0x1A0A254", VA = "0x1A0A254")]
		public static void UPvr_EnableEnterKey()
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x1A0A348", Offset = "0x1A0A348", VA = "0x1A0A348")]
		public static void UPvr_DisableEnterKey()
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x1A0A43C", Offset = "0x1A0A43C", VA = "0x1A0A43C")]
		public static void UPvr_EnableVolumeKey()
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x1A0A530", Offset = "0x1A0A530", VA = "0x1A0A530")]
		public static void UPvr_DisableVolumeKey()
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x1A0A624", Offset = "0x1A0A624", VA = "0x1A0A624")]
		public static void UPvr_EnableBackKey()
		{
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x1A0A718", Offset = "0x1A0A718", VA = "0x1A0A718")]
		public static void UPvr_DisableBackKey()
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x1A0A80C", Offset = "0x1A0A80C", VA = "0x1A0A80C")]
		public static void UPvr_WriteConfigFileToDataLocal(string path, string content, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x1A0A940", Offset = "0x1A0A940", VA = "0x1A0A940")]
		public static void UPvr_ResetAllKeyToDefault(Action<bool> callback)
		{
		}
	}
	[Token(Token = "0x20004A8")]
	public enum GlobalIntConfigs
	{
		[Token(Token = "0x400185D")]
		EYE_TEXTURE_RESOLUTION0,
		[Token(Token = "0x400185E")]
		EYE_TEXTURE_RESOLUTION1,
		[Token(Token = "0x400185F")]
		SEENSOR_COUNT,
		[Token(Token = "0x4001860")]
		ABILITY6DOF,
		[Token(Token = "0x4001861")]
		PLATFORM_TYPE,
		[Token(Token = "0x4001862")]
		TRACKING_MODE,
		[Token(Token = "0x4001863")]
		LOG_LEVEL,
		[Token(Token = "0x4001864")]
		ENBLE_HAND6DOF_BY_HEAD,
		[Token(Token = "0x4001865")]
		ENBLE_6DOF_GLOBAL_TRACKING,
		[Token(Token = "0x4001866")]
		TARGET_FRAME_RATE,
		[Token(Token = "0x4001867")]
		iShowFPS,
		[Token(Token = "0x4001868")]
		SensorMode,
		[Token(Token = "0x4001869")]
		LOGICFLOW,
		[Token(Token = "0x400186A")]
		EYE_TEXTURE_RES_HIGH,
		[Token(Token = "0x400186B")]
		EYE_TEXTURE_RES_NORMAL,
		[Token(Token = "0x400186C")]
		iCtrlModelLoadingPri,
		[Token(Token = "0x400186D")]
		iPhoneHMDModeEnabled,
		[Token(Token = "0x400186E")]
		isEnableBoundary,
		[Token(Token = "0x400186F")]
		Enable_Activity_Rotation,
		[Token(Token = "0x4001870")]
		GetDisplay_Orientation,
		[Token(Token = "0x4001871")]
		GetWaitFrameNum,
		[Token(Token = "0x4001872")]
		GetResetFrameNum,
		[Token(Token = "0x4001873")]
		EnableFFRBYSYS,
		[Token(Token = "0x4001874")]
		RotControllerMode
	}
	[Token(Token = "0x20004A9")]
	public enum GlobalFloatConfigs
	{
		[Token(Token = "0x4001876")]
		IPD,
		[Token(Token = "0x4001877")]
		VFOV,
		[Token(Token = "0x4001878")]
		HFOV,
		[Token(Token = "0x4001879")]
		NECK_MODEL_X,
		[Token(Token = "0x400187A")]
		NECK_MODEL_Y,
		[Token(Token = "0x400187B")]
		NECK_MODEL_Z,
		[Token(Token = "0x400187C")]
		DISPLAY_REFRESH_RATE
	}
	[Token(Token = "0x20004AA")]
	public enum RenderTextureAntiAliasing
	{
		[Token(Token = "0x400187E")]
		X_1 = 1,
		[Token(Token = "0x400187F")]
		X_2 = 2,
		[Token(Token = "0x4001880")]
		X_4 = 4,
		[Token(Token = "0x4001881")]
		X_8 = 8
	}
	[Token(Token = "0x20004AB")]
	public enum PlatForm
	{
		[Token(Token = "0x4001883")]
		Android = 1,
		[Token(Token = "0x4001884")]
		IOS,
		[Token(Token = "0x4001885")]
		Win,
		[Token(Token = "0x4001886")]
		Notsupport
	}
	[Token(Token = "0x20004AC")]
	public enum RenderTextureDepth
	{
		[Token(Token = "0x4001888")]
		BD_0 = 0,
		[Token(Token = "0x4001889")]
		BD_16 = 16,
		[Token(Token = "0x400188A")]
		BD_24 = 24
	}
	[Token(Token = "0x20004AD")]
	public enum RenderTextureLevel
	{
		[Token(Token = "0x400188C")]
		Normal,
		[Token(Token = "0x400188D")]
		High
	}
	[Token(Token = "0x20004AE")]
	public enum Sensorindex
	{
		[Token(Token = "0x400188F")]
		Default,
		[Token(Token = "0x4001890")]
		FirstSensor,
		[Token(Token = "0x4001891")]
		SecondSensor
	}
	[Token(Token = "0x20004AF")]
	public enum Eye
	{
		[Token(Token = "0x4001893")]
		LeftEye,
		[Token(Token = "0x4001894")]
		RightEye,
		[Token(Token = "0x4001895")]
		BothEye
	}
	[Token(Token = "0x20004B0")]
	public enum ResUtilsType
	{
		[Token(Token = "0x4001897")]
		TYPE_TEXTSIZE,
		[Token(Token = "0x4001898")]
		TYPE_COLOR,
		[Token(Token = "0x4001899")]
		TYPE_TEXT,
		[Token(Token = "0x400189A")]
		TYPE_FONT,
		[Token(Token = "0x400189B")]
		TYPE_VALUE,
		[Token(Token = "0x400189C")]
		TYPE_DRAWABLE,
		[Token(Token = "0x400189D")]
		TYPE_OBJECT,
		[Token(Token = "0x400189E")]
		TYPR_OBJECTARRAY
	}
	[Token(Token = "0x20004B1")]
	public enum TrackingOrigin
	{
		[Token(Token = "0x40018A0")]
		EyeLevel,
		[Token(Token = "0x40018A1")]
		FloorLevel,
		[Token(Token = "0x40018A2")]
		StageLevel
	}
	[Token(Token = "0x20004B2")]
	public enum EFoveationLevel
	{
		[Token(Token = "0x40018A4")]
		Low,
		[Token(Token = "0x40018A5")]
		Med,
		[Token(Token = "0x40018A6")]
		High,
		[Token(Token = "0x40018A7")]
		Top_High
	}
	[Token(Token = "0x20004B3")]
	public enum StereoRenderingPathPico
	{
		[Token(Token = "0x40018A9")]
		MultiPass,
		[Token(Token = "0x40018AA")]
		SinglePass
	}
	[Token(Token = "0x20004B4")]
	public enum pvrEyePoseStatus
	{
		[Token(Token = "0x40018AC")]
		kGazePointValid = 1,
		[Token(Token = "0x40018AD")]
		kGazeVectorValid = 2,
		[Token(Token = "0x40018AE")]
		kEyeOpennessValid = 4,
		[Token(Token = "0x40018AF")]
		kEyePupilDilationValid = 8,
		[Token(Token = "0x40018B0")]
		kEyePositionGuideValid = 0x10
	}
	[Token(Token = "0x20004B5")]
	public enum TrackingMode
	{
		[Token(Token = "0x40018B2")]
		PVR_TRACKING_MODE_ROTATION = 1,
		[Token(Token = "0x40018B3")]
		PVR_TRACKING_MODE_POSITION = 2,
		[Token(Token = "0x40018B4")]
		PVR_TRACKING_MODE_EYE = 4
	}
	[Token(Token = "0x20004B6")]
	public struct EyeTrackingData
	{
		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leftEyePoseStatus;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rightEyePoseStatus;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int combinedEyePoseStatus;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 leftEyeGazePoint;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rightEyeGazePoint;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 combinedEyeGazePoint;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 leftEyeGazeVector;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rightEyeGazeVector;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 combinedEyeGazeVector;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float leftEyeOpenness;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rightEyeOpenness;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float leftEyePupilDilation;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float rightEyePupilDilation;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 leftEyePositionGuide;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 rightEyePositionGuide;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 foveatedGazeDirection;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int foveatedGazeTrackingState;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public byte[] reserved;
	}
	[Token(Token = "0x20004B7")]
	public struct EyeTrackingGazeRay
	{
		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Direction;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsValid;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Origin;
	}
	[Token(Token = "0x20004B8")]
	public struct EyeDeviceInfo
	{
		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ViewFrustum targetFrustumLeft;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ViewFrustum targetFrustumRight;
	}
	[Token(Token = "0x20004B9")]
	public struct ViewFrustum
	{
		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float left;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float right;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float top;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float bottom;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float near;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float far;
	}
	[Token(Token = "0x20004BA")]
	public struct EyeSetting
	{
		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform eyelocalPosition;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Rect eyeRect;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float eyeFov;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float eyeAspect;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Matrix4x4 eyeProjectionMatrix;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader eyeShader;
	}
	[Token(Token = "0x20004BB")]
	public struct Sensor
	{
		[Token(Token = "0x40018D8")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x1A023F0", Offset = "0x1A023F0", VA = "0x1A023F0")]
		private static extern int Pvr_Enable6DofModule(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x1A02470", Offset = "0x1A02470", VA = "0x1A02470")]
		private static extern int Pvr_OptionalResetSensor(int index, int resetRot, int resetPos);

		[PreserveSig]
		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x1A02504", Offset = "0x1A02504", VA = "0x1A02504")]
		private static extern int Pvr_Init(int index);

		[PreserveSig]
		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x1A02584", Offset = "0x1A02584", VA = "0x1A02584")]
		private static extern int Pvr_StartSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x1A02604", Offset = "0x1A02604", VA = "0x1A02604")]
		private static extern int Pvr_StopSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x1A02684", Offset = "0x1A02684", VA = "0x1A02684")]
		private static extern int Pvr_ResetSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x1A02704", Offset = "0x1A02704", VA = "0x1A02704")]
		private static extern int Pvr_ResetSensorAll(int index);

		[PreserveSig]
		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x1A02784", Offset = "0x1A02784", VA = "0x1A02784")]
		private static extern int Pvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz);

		[PreserveSig]
		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x1A0285C", Offset = "0x1A0285C", VA = "0x1A0285C")]
		private static extern int Pvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x1A02940", Offset = "0x1A02940", VA = "0x1A02940")]
		private static extern int Pvr_GetPsensorState();

		[PreserveSig]
		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x1A029B4", Offset = "0x1A029B4", VA = "0x1A029B4")]
		private static extern int Pvr_GetHmdPSensorStatus();

		[PreserveSig]
		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x1A02A28", Offset = "0x1A02A28", VA = "0x1A02A28")]
		private static extern int Pvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x1A02AD0", Offset = "0x1A02AD0", VA = "0x1A02AD0")]
		private static extern int Pvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x1A02B78", Offset = "0x1A02B78", VA = "0x1A02B78")]
		private static extern int Pvr_Get6DofSensorQualityStatus();

		[PreserveSig]
		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x1A02BEC", Offset = "0x1A02BEC", VA = "0x1A02BEC")]
		private static extern bool Pvr_Get6DofSafePanelFlag();

		[PreserveSig]
		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x1A02C68", Offset = "0x1A02C68", VA = "0x1A02C68")]
		private static extern void Pvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key);

		[PreserveSig]
		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x1A02D58", Offset = "0x1A02D58", VA = "0x1A02D58")]
		private static extern bool Pvr_SetTrackingOriginType(TrackingOrigin trackingOriginType);

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x1A02DE0", Offset = "0x1A02DE0", VA = "0x1A02DE0")]
		public static bool UPvr_Pvr_Get6DofSafePanelFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x1A02DE4", Offset = "0x1A02DE4", VA = "0x1A02DE4")]
		public static int UPvr_Init(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x1A02DE8", Offset = "0x1A02DE8", VA = "0x1A02DE8")]
		public static void UPvr_InitPsensor()
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x1A02FDC", Offset = "0x1A02FDC", VA = "0x1A02FDC")]
		public static int UPvr_GetPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x1A03238", Offset = "0x1A03238", VA = "0x1A03238")]
		public static int UPvr_GetPSensorStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x1A0323C", Offset = "0x1A0323C", VA = "0x1A0323C")]
		public static void UPvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x1A03434", Offset = "0x1A03434", VA = "0x1A03434")]
		public static int UPvr_StartSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x1A03438", Offset = "0x1A03438", VA = "0x1A03438")]
		public static int UPvr_StopSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x1A0343C", Offset = "0x1A0343C", VA = "0x1A0343C")]
		public static int UPvr_ResetSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x1A034B8", Offset = "0x1A034B8", VA = "0x1A034B8")]
		public static int UPvr_OptionalResetSensor(int index, int resetRot, int resetPos)
		{
			return default(int);
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x1A034BC", Offset = "0x1A034BC", VA = "0x1A034BC")]
		public static int UPvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz)
		{
			return default(int);
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x1A034C0", Offset = "0x1A034C0", VA = "0x1A034C0")]
		public static int UPvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x1A034CC", Offset = "0x1A034CC", VA = "0x1A034CC")]
		public static int UPvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x1A034D0", Offset = "0x1A034D0", VA = "0x1A034D0")]
		public static int UPvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x1A034D4", Offset = "0x1A034D4", VA = "0x1A034D4")]
		public static int UPvr_Get6DofSensorQualityStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x1A034D8", Offset = "0x1A034D8", VA = "0x1A034D8")]
		public static int UPvr_Enable6DofModule(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x1A02DEC", Offset = "0x1A02DEC", VA = "0x1A02DEC")]
		public static void Pvr_InitPsensor()
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x1A03738", Offset = "0x1A03738", VA = "0x1A03738")]
		public static bool Pvr_IsHead6dofReset()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x1A03030", Offset = "0x1A03030", VA = "0x1A03030")]
		public static int Pvr_GetAndroidPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x1A03240", Offset = "0x1A03240", VA = "0x1A03240")]
		public static void Pvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x1A03964", Offset = "0x1A03964", VA = "0x1A03964")]
		public static int UPvr_ResetSensorAll(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x1A03968", Offset = "0x1A03968", VA = "0x1A03968")]
		public static void UPvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key)
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x1A03DFC", Offset = "0x1A03DFC", VA = "0x1A03DFC")]
		public static bool UPvr_SetTrackingOriginType(TrackingOrigin trackingOriginType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004BC")]
	public struct Render
	{
		[Token(Token = "0x40018D9")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x1A00BAC", Offset = "0x1A00BAC", VA = "0x1A00BAC")]
		private static extern void Pvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi);

		[PreserveSig]
		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x1A00C7C", Offset = "0x1A00C7C", VA = "0x1A00C7C")]
		private static extern int Pvr_SetRatio(float midH, float midV);

		[PreserveSig]
		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x1A00D08", Offset = "0x1A00D08", VA = "0x1A00D08")]
		private static extern int Pvr_SetPupillaryPoint(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001D43")]
		[Address(RVA = "0x1A00D88", Offset = "0x1A00D88", VA = "0x1A00D88")]
		private static extern IntPtr Pvr_GetSupportHMDTypes();

		[PreserveSig]
		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x1A00DFC", Offset = "0x1A00DFC", VA = "0x1A00DFC")]
		private static extern void Pvr_SetCurrentHMDType(string type);

		[PreserveSig]
		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x1A00E8C", Offset = "0x1A00E8C", VA = "0x1A00E8C")]
		private static extern int Pvr_GetIntConfig(int configsenum, ref int res);

		[PreserveSig]
		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x1A00F18", Offset = "0x1A00F18", VA = "0x1A00F18")]
		private static extern int Pvr_GetFloatConfig(int configsenum, ref float res);

		[PreserveSig]
		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x1A00FA4", Offset = "0x1A00FA4", VA = "0x1A00FA4")]
		private static extern void Pvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x1A0106C", Offset = "0x1A0106C", VA = "0x1A0106C")]
		private static extern void Pvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight);

		[PreserveSig]
		[Token(Token = "0x6001D49")]
		[Address(RVA = "0x1A0114C", Offset = "0x1A0114C", VA = "0x1A0114C")]
		private static extern void Pvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, float[] mvMatrix, float[] modelS, float[] modelR, float[] modelT, float[] cameraR, float[] cameraT, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x1A01288", Offset = "0x1A01288", VA = "0x1A01288")]
		private static extern bool Pvr_EnableFoveation(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0x1A01310", Offset = "0x1A01310", VA = "0x1A01310")]
		private static extern void Pvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0x1A013E8", Offset = "0x1A013E8", VA = "0x1A013E8")]
		private static extern void Pvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY);

		[PreserveSig]
		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0x1A01490", Offset = "0x1A01490", VA = "0x1A01490")]
		private static extern void Pvr_SetFoveationParameters2(float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0x1A01534", Offset = "0x1A01534", VA = "0x1A01534")]
		private static extern void Pvr_SetFoveationLevel(EFoveationLevel level);

		[PreserveSig]
		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0x1A015B4", Offset = "0x1A015B4", VA = "0x1A015B4")]
		private static extern EFoveationLevel Pvr_GetFoveationLevel();

		[PreserveSig]
		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x1A01628", Offset = "0x1A01628", VA = "0x1A01628")]
		private static extern bool Pvr_GetIntSysProc(string property, ref int res);

		[PreserveSig]
		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x1A016D4", Offset = "0x1A016D4", VA = "0x1A016D4")]
		private static extern void Pvr_SetColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x1A01754", Offset = "0x1A01754", VA = "0x1A01754")]
		private static extern void Pvr_SetCastingColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x1A017D4", Offset = "0x1A017D4", VA = "0x1A017D4")]
		private static extern IntPtr Pvr_CreateLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x1A01864", Offset = "0x1A01864", VA = "0x1A01864")]
		private static extern IntPtr Pvr_GetLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x1A018F4", Offset = "0x1A018F4", VA = "0x1A018F4")]
		private static extern void Pvr_SetMonoMode(bool openMono);

		[PreserveSig]
		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x1A01974", Offset = "0x1A01974", VA = "0x1A01974")]
		private static extern void Pvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexData, ref IntPtr indexData);

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x1A01A24", Offset = "0x1A01A24", VA = "0x1A01A24")]
		public static void UPvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi)
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x1A01A28", Offset = "0x1A01A28", VA = "0x1A01A28")]
		public static int UPvr_SetRatio(float midH, float midV)
		{
			return default(int);
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x1A01A2C", Offset = "0x1A01A2C", VA = "0x1A01A2C")]
		public static void UPvr_EnableFoveation(bool enable)
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x1A01AE0", Offset = "0x1A01AE0", VA = "0x1A01AE0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBEAFE8", Offset = "0xBEAFE8")]
		public static void UPvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum)
		{
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0x1A01AE4", Offset = "0x1A01AE4", VA = "0x1A01AE4")]
		public static void UPvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY)
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x1A01AE8", Offset = "0x1A01AE8", VA = "0x1A01AE8")]
		public static void SetFoveatedRenderingLevel(EFoveationLevel level)
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x1A01BEC", Offset = "0x1A01BEC", VA = "0x1A01BEC")]
		public static EFoveationLevel GetFoveatedRenderingLevel()
		{
			return default(EFoveationLevel);
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0x1A01BF0", Offset = "0x1A01BF0", VA = "0x1A01BF0")]
		public static void SetFoveatedRenderingParameters(Vector2 ffrGainValue, float ffrAreaValue, float ffrMinimumValue)
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0x1A01D2C", Offset = "0x1A01D2C", VA = "0x1A01D2C")]
		public static bool UPvr_GetIntSysProc(string property, ref int res)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x1A01D30", Offset = "0x1A01D30", VA = "0x1A01D30")]
		public static int UPvr_GetIntConfig(int configsenum, ref int res)
		{
			return default(int);
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x1A01D34", Offset = "0x1A01D34", VA = "0x1A01D34")]
		public static int UPvr_GetFloatConfig(int configsenum, ref float res)
		{
			return default(int);
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x1A01D38", Offset = "0x1A01D38", VA = "0x1A01D38")]
		public static string UPvr_GetSupportHMDTypes()
		{
			return null;
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x1A01DC4", Offset = "0x1A01DC4", VA = "0x1A01DC4")]
		public static void UPvr_SetCurrentHMDType(string type)
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x1A01DC8", Offset = "0x1A01DC8", VA = "0x1A01DC8")]
		public static void UPvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x1A01F08", Offset = "0x1A01F08", VA = "0x1A01F08")]
		public static void UPvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight)
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x1A01F0C", Offset = "0x1A01F0C", VA = "0x1A01F0C")]
		public static void UPvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, Matrix4x4 mvMatrix, Vector3 modelS, Quaternion modelR, Vector3 modelT, Quaternion cameraR, Vector3 cameraT, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x1A023D8", Offset = "0x1A023D8", VA = "0x1A023D8")]
		public static void UPvr_SetColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x1A023DC", Offset = "0x1A023DC", VA = "0x1A023DC")]
		public static void UPvr_SetCastingColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x1A023E0", Offset = "0x1A023E0", VA = "0x1A023E0")]
		public static IntPtr UPvr_CreateLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x1A023E4", Offset = "0x1A023E4", VA = "0x1A023E4")]
		public static IntPtr UPvr_GetLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x1A023E8", Offset = "0x1A023E8", VA = "0x1A023E8")]
		public static void UPvr_SetMonoMode(bool openMono)
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0x19F2FA4", Offset = "0x19F2FA4", VA = "0x19F2FA4")]
		public static void UPvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexDataPtr, ref IntPtr indexDataPtr)
		{
		}
	}
	[Token(Token = "0x20004BD")]
	public struct System
	{
		[Token(Token = "0x40018DA")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x40018DB")]
		public const string UnitySDKVersion = "2.8.9.12";

		[PreserveSig]
		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x1A03E00", Offset = "0x1A03E00", VA = "0x1A03E00")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0x1A03E90", Offset = "0x1A03E90", VA = "0x1A03E90")]
		private static extern IntPtr Pvr_GetSDKVersion();

		[PreserveSig]
		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0x1A03F04", Offset = "0x1A03F04", VA = "0x1A03F04")]
		public static extern int Pvr_GetHmdHardwareVersion();

		[PreserveSig]
		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x1A03F78", Offset = "0x1A03F78", VA = "0x1A03F78")]
		public static extern IntPtr Pvr_GetHmdFirmwareVersion();

		[PreserveSig]
		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x1A03FEC", Offset = "0x1A03FEC", VA = "0x1A03FEC")]
		public static extern IntPtr Pvr_GetHmdSerialNumber();

		[PreserveSig]
		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x1A04060", Offset = "0x1A04060", VA = "0x1A04060")]
		public static extern int PVR_GetHmdBatteryStatus();

		[PreserveSig]
		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x1A040D4", Offset = "0x1A040D4", VA = "0x1A040D4")]
		public static extern float PVR_GetHmdBatteryTemperature();

		[PreserveSig]
		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x1A04144", Offset = "0x1A04144", VA = "0x1A04144")]
		public static extern int PVR_SetHmdAudioStatus(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001D75")]
		[Address(RVA = "0x1A041C4", Offset = "0x1A041C4", VA = "0x1A041C4")]
		public static extern bool Pvr_GetEyeTrackingData(ref int leftEyePoseStatus, ref int rightEyePoseStatus, ref int combinedEyePoseStatus, ref float leftEyeGazePointX, ref float leftEyeGazePointY, ref float leftEyeGazePointZ, ref float rightEyeGazePointX, ref float rightEyeGazePointY, ref float rightEyeGazePointZ, ref float combinedEyeGazePointX, ref float combinedEyeGazePointY, ref float combinedEyeGazePointZ, ref float leftEyeGazeVectorX, ref float leftEyeGazeVectorY, ref float leftEyeGazeVectorZ, ref float rightEyeGazeVectorX, ref float rightEyeGazeVectorY, ref float rightEyeGazeVectorZ, ref float combinedEyeGazeVectorX, ref float combinedEyeGazeVectorY, ref float combinedEyeGazeVectorZ, ref float leftEyeOpenness, ref float rightEyeOpenness, ref float leftEyePupilDilation, ref float rightEyePupilDilation, ref float leftEyePositionGuideX, ref float leftEyePositionGuideY, ref float leftEyePositionGuideZ, ref float rightEyePositionGuideX, ref float rightEyePositionGuideY, ref float rightEyePositionGuideZ, ref float foveatedGazeDirectionX, ref float foveatedGazeDirectionY, ref float foveatedGazeDirectionZ, ref int foveatedGazeTrackingState);

		[PreserveSig]
		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x1A043B4", Offset = "0x1A043B4", VA = "0x1A043B4")]
		public static extern bool Pvr_SetTrackingMode(int trackingMode);

		[PreserveSig]
		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x1A0443C", Offset = "0x1A0443C", VA = "0x1A0443C")]
		public static extern int Pvr_GetTrackingMode();

		[PreserveSig]
		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x1A044B0", Offset = "0x1A044B0", VA = "0x1A044B0")]
		public static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x1A04524", Offset = "0x1A04524", VA = "0x1A04524")]
		public static extern void UnityEventData(long data);

		[PreserveSig]
		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x1A045A4", Offset = "0x1A045A4", VA = "0x1A045A4")]
		public static extern bool Pvr_EnableSinglePass(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0x1A0462C", Offset = "0x1A0462C", VA = "0x1A0462C")]
		public static extern void Pvr_SetAntiAliasing(int antiAliasing);

		[PreserveSig]
		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x1A046AC", Offset = "0x1A046AC", VA = "0x1A046AC")]
		public static extern void Pvr_SinglePassBeforeForwardOpaque();

		[PreserveSig]
		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0x1A0471C", Offset = "0x1A0471C", VA = "0x1A0471C")]
		public static extern void Pvr_SetCurrentRenderTexture(uint textureId);

		[PreserveSig]
		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0x1A0479C", Offset = "0x1A0479C", VA = "0x1A0479C")]
		public static extern bool Pvr_SetSinglePassDepthBufferWidthHeight(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0x1A04834", Offset = "0x1A04834", VA = "0x1A04834")]
		public static extern int PVR_setPerformanceLevels(int cpuLevel, int gpuLevel);

		[PreserveSig]
		[Token(Token = "0x6001D80")]
		[Address(RVA = "0x1A048C4", Offset = "0x1A048C4", VA = "0x1A048C4")]
		public static extern bool Pvr_SetIPD(float distance);

		[PreserveSig]
		[Token(Token = "0x6001D81")]
		[Address(RVA = "0x1A04954", Offset = "0x1A04954", VA = "0x1A04954")]
		public static extern float Pvr_GetIPD();

		[PreserveSig]
		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x1A049C4", Offset = "0x1A049C4", VA = "0x1A049C4")]
		public static extern bool Pvr_SetTrackingIPDEnabled(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001D83")]
		[Address(RVA = "0x1A04A4C", Offset = "0x1A04A4C", VA = "0x1A04A4C")]
		public static extern bool Pvr_GetTrackingIPDEnabled();

		[PreserveSig]
		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x1A04AC8", Offset = "0x1A04AC8", VA = "0x1A04AC8")]
		public static extern bool Pvr_GetEyeTrackingAutoIPD(ref float autoIPD);

		[PreserveSig]
		[Token(Token = "0x6001D85")]
		[Address(RVA = "0x1A00B38", Offset = "0x1A00B38", VA = "0x1A00B38")]
		public static extern int PVR_GetHmdAudioStatus();

		[Token(Token = "0x6001D86")]
		public static bool UPvr_CallStaticMethod<T>(ref T result, AndroidJavaClass jclass, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0x1A034E0", Offset = "0x1A034E0", VA = "0x1A034E0")]
		public static bool UPvr_CallStaticMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D88")]
		public static bool UPvr_CallMethod<T>(ref T result, AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0x1A04B50", Offset = "0x1A04B50", VA = "0x1A04B50")]
		public static bool UPvr_CallMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0x1A04DA8", Offset = "0x1A04DA8", VA = "0x1A04DA8")]
		public static string UPvr_GetSDKVersion()
		{
			return null;
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x1A04E3C", Offset = "0x1A04E3C", VA = "0x1A04E3C")]
		public static string UPvr_GetUnitySDKVersion()
		{
			return null;
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0x1A04E84", Offset = "0x1A04E84", VA = "0x1A04E84")]
		public static string UPvr_GetDeviceMode()
		{
			return null;
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0x1A04E8C", Offset = "0x1A04E8C", VA = "0x1A04E8C")]
		public static string UPvr_GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0x19FFD30", Offset = "0x19FFD30", VA = "0x19FFD30")]
		public static string UPvr_GetDeviceSN()
		{
			return null;
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0x1A0016C", Offset = "0x1A0016C", VA = "0x1A0016C")]
		public static AndroidJavaObject UPvr_GetCurrentActivity()
		{
			return null;
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0x1A04E94", Offset = "0x1A04E94", VA = "0x1A04E94")]
		public static bool UPvr_SetMonoPresentation()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0x1A04F7C", Offset = "0x1A04F7C", VA = "0x1A04F7C")]
		public static bool UPvr_IsPresentationExisted()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0x1A05088", Offset = "0x1A05088", VA = "0x1A05088")]
		public static bool UPvr_GetMainActivityPauseStatus()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0x1A05194", Offset = "0x1A05194", VA = "0x1A05194")]
		public static void UPvr_Sleep()
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0x1A052A0", Offset = "0x1A052A0", VA = "0x1A052A0")]
		public static bool UPvr_StartHomeKeyReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0x1A05540", Offset = "0x1A05540", VA = "0x1A05540")]
		public static bool UPvr_StopHomeKeyReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0x1A0578C", Offset = "0x1A0578C", VA = "0x1A0578C")]
		public static void UPvr_StartVRModel()
		{
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0x1A05898", Offset = "0x1A05898", VA = "0x1A05898")]
		public static void UPvr_RemovePlatformLogo()
		{
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0x1A059A4", Offset = "0x1A059A4", VA = "0x1A059A4")]
		public static void UPvr_ShowPlatformLogo()
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0x1A05AB0", Offset = "0x1A05AB0", VA = "0x1A05AB0")]
		public static bool UPvr_IsPicoActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0x1A05BC8", Offset = "0x1A05BC8", VA = "0x1A05BC8")]
		public static void UPvr_StopVRModel()
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0x1A05CD4", Offset = "0x1A05CD4", VA = "0x1A05CD4")]
		public static string UPvr_GetCountryCode()
		{
			return null;
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0x1A05DF0", Offset = "0x1A05DF0", VA = "0x1A05DF0")]
		public static bool UPvr_SetIPD(float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0x1A05F08", Offset = "0x1A05F08", VA = "0x1A05F08")]
		public static float UPvr_GetIPD()
		{
			return default(float);
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x1A05FC8", Offset = "0x1A05FC8", VA = "0x1A05FC8")]
		public static bool UPvr_SetTrackingIPDEnabled(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x1A05FD0", Offset = "0x1A05FD0", VA = "0x1A05FD0")]
		public static bool UPvr_GetTrackingIPDEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x1A05FD4", Offset = "0x1A05FD4", VA = "0x1A05FD4")]
		public static bool UPvr_GetEyeTrackingAutoIPD(ref float autoipd)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x19FABD8", Offset = "0x19FABD8", VA = "0x19FABD8")]
		public static void UPvr_UnityEventData(long data)
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x1A05FD8", Offset = "0x1A05FD8", VA = "0x1A05FD8")]
		public static long UPvr_GetEyeBufferData(int id)
		{
			return default(long);
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x1A06054", Offset = "0x1A06054", VA = "0x1A06054")]
		public static bool UPvr_checkDevice(string packagename)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x1A0619C", Offset = "0x1A0619C", VA = "0x1A0619C")]
		public static int UPvr_GetHmdHardwareVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0x1A061A0", Offset = "0x1A061A0", VA = "0x1A061A0")]
		public static string UPvr_GetHmdFirmwareVersion()
		{
			return null;
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0x1A06234", Offset = "0x1A06234", VA = "0x1A06234")]
		public static string UPvr_GetHmdSerialNumber()
		{
			return null;
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0x1A062C8", Offset = "0x1A062C8", VA = "0x1A062C8")]
		public static int UPvr_GetHmdBatteryStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0x1A062CC", Offset = "0x1A062CC", VA = "0x1A062CC")]
		public static float UPvr_GetHmdBatteryTemperature()
		{
			return default(float);
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0x1A062D0", Offset = "0x1A062D0", VA = "0x1A062D0")]
		public static int UPvr_SetHmdAudioStatus(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0x1A062D8", Offset = "0x1A062D8", VA = "0x1A062D8")]
		public static int UPvr_GetTrackingMode()
		{
			return default(int);
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0x1A062DC", Offset = "0x1A062DC", VA = "0x1A062DC")]
		public static bool UPvr_setTrackingMode(int trackingMode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x1A062E0", Offset = "0x1A062E0", VA = "0x1A062E0")]
		public static bool UPvr_getEyeTrackingData(ref EyeTrackingData trackingData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x1A0654C", Offset = "0x1A0654C", VA = "0x1A0654C")]
		public static bool UPvr_getEyeTrackingGazeRay(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0x1A0677C", Offset = "0x1A0677C", VA = "0x1A0677C")]
		public static bool UPvr_getEyeTrackingGazeRayWorld(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x1A06A54", Offset = "0x1A06A54", VA = "0x1A06A54")]
		public static Vector3 UPvr_getEyeTrackingPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0x1A06BA4", Offset = "0x1A06BA4", VA = "0x1A06BA4")]
		public static int UPvr_GetPhoneScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x1A06CB4", Offset = "0x1A06CB4", VA = "0x1A06CB4")]
		public static void UPvr_SetPhoneScreenBrightness(int level)
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x1A06E08", Offset = "0x1A06E08", VA = "0x1A06E08")]
		public static bool UPvr_IsPicoDefaultActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x1A07164", Offset = "0x1A07164", VA = "0x1A07164")]
		public static bool UPvr_EnableSinglePass(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x1A0716C", Offset = "0x1A0716C", VA = "0x1A0716C")]
		public static void UPvr_SetAntiAliasing(int antiAliasing)
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x1A07170", Offset = "0x1A07170", VA = "0x1A07170")]
		public static void UPvr_SinglePassBeforeForwardOpaque()
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x1A07174", Offset = "0x1A07174", VA = "0x1A07174")]
		public static void UPvr_SetCurrentRenderTexture(uint textureId)
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x1A07178", Offset = "0x1A07178", VA = "0x1A07178")]
		public static bool UPvr_SetSinglePassDepthBufferWidthHeight(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x1A0717C", Offset = "0x1A0717C", VA = "0x1A0717C")]
		public static int UPVR_setPerformanceLevels(int cpuLevel, int gpuLevel)
		{
			return default(int);
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x1A07180", Offset = "0x1A07180", VA = "0x1A07180")]
		public static int UPvr_GetColorRes(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0x1A07370", Offset = "0x1A07370", VA = "0x1A07370")]
		public static int UPvr_GetConfigInt(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x1A07560", Offset = "0x1A07560", VA = "0x1A07560")]
		public static string UPvr_GetConfigString(string name)
		{
			return null;
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x1A07758", Offset = "0x1A07758", VA = "0x1A07758")]
		public static string UPvr_GetDrawableLocation(string name)
		{
			return null;
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0x1A07950", Offset = "0x1A07950", VA = "0x1A07950")]
		public static int UPvr_GetTextSize(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0x1A07B40", Offset = "0x1A07B40", VA = "0x1A07B40")]
		public static string UPvr_GetLangString(string name)
		{
			return null;
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0x1A07D38", Offset = "0x1A07D38", VA = "0x1A07D38")]
		public static string UPvr_GetStringValue(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0x1A07FA8", Offset = "0x1A07FA8", VA = "0x1A07FA8")]
		public static int UPvr_GetIntValue(string id, int type)
		{
			return default(int);
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0x1A08210", Offset = "0x1A08210", VA = "0x1A08210")]
		public static float UPvr_GetFloatValue(string id)
		{
			return default(float);
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0x1A08400", Offset = "0x1A08400", VA = "0x1A08400")]
		public static string UPvr_GetObjectOrArray(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0x1A08670", Offset = "0x1A08670", VA = "0x1A08670")]
		public static int UPvr_GetCharSpace(string id)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20004BE")]
	public struct BoundarySystem
	{
		[Token(Token = "0x20006DD")]
		public enum BoundaryType
		{
			[Token(Token = "0x4002160")]
			OuterBoundary,
			[Token(Token = "0x4002161")]
			PlayArea
		}

		[Token(Token = "0x20006DE")]
		public struct BoundaryTestResult
		{
			[Token(Token = "0x4002162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsTriggering;

			[Token(Token = "0x4002163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float ClosestDistance;

			[Token(Token = "0x4002164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 ClosestPoint;

			[Token(Token = "0x4002165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 ClosestPointNormal;
		}

		[Token(Token = "0x20006DF")]
		public enum BoundaryTrackingNode
		{
			[Token(Token = "0x4002167")]
			HandLeft,
			[Token(Token = "0x4002168")]
			HandRight,
			[Token(Token = "0x4002169")]
			Head
		}

		[Token(Token = "0x20006E0")]
		public enum BoundaryTrackingState
		{
			[Token(Token = "0x400216B")]
			PVR_NOREASON,
			[Token(Token = "0x400216C")]
			PVRRELOCATION_IN_PROGRESS,
			[Token(Token = "0x400216D")]
			PVRLOW_FEATURE_COUNT_ERROR,
			[Token(Token = "0x400216E")]
			PVRLOW_LIGHT_ERROR,
			[Token(Token = "0x400216F")]
			PVRBRIGHT_LIGHT_ERROR,
			[Token(Token = "0x4002170")]
			PVRSTEREO_CAMERA_CALIBRATION_ERROR
		}

		[Token(Token = "0x40018DC")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0x19F9724", Offset = "0x19F9724", VA = "0x19F9724")]
		private static extern float Pvr_GetFloorHeight();

		[PreserveSig]
		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0x19F9794", Offset = "0x19F9794", VA = "0x19F9794")]
		private static extern int Pvr_GetSeeThroughState();

		[PreserveSig]
		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0x19F9808", Offset = "0x19F9808", VA = "0x19F9808")]
		private static extern void Pvr_BoundarySetSTBackground(bool value);

		[PreserveSig]
		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x19F9888", Offset = "0x19F9888", VA = "0x19F9888")]
		private static extern int Pvr_GetTrackingState();

		[PreserveSig]
		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x19F98FC", Offset = "0x19F98FC", VA = "0x19F98FC")]
		private static extern bool Pvr_GetFrameRateLimit();

		[PreserveSig]
		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x19F9978", Offset = "0x19F9978", VA = "0x19F9978")]
		private static extern bool Pvr_IsBoundaryEnable();

		[PreserveSig]
		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x19F99F4", Offset = "0x19F99F4", VA = "0x19F99F4")]
		private static extern bool Pvr_BoundaryGetConfigured();

		[PreserveSig]
		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x19F9A70", Offset = "0x19F9A70", VA = "0x19F9A70")]
		private static extern bool Pvr_BoundaryTestNode(int node, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x19F9B74", Offset = "0x19F9B74", VA = "0x19F9B74")]
		private static extern bool Pvr_BoundaryTestPoint(float x, float y, float z, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x19F9C9C", Offset = "0x19F9C9C", VA = "0x19F9C9C")]
		private static extern int Pvr_BoundaryGetGeometry(out IntPtr handle, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x19F9D28", Offset = "0x19F9D28", VA = "0x19F9D28")]
		private static extern int Pvr_BoundaryGetDimensions(ref float x, ref float y, ref float z, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x19F9DD0", Offset = "0x19F9DD0", VA = "0x19F9DD0")]
		private static extern bool Pvr_BoundaryGetEnabled();

		[PreserveSig]
		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x19F9E4C", Offset = "0x19F9E4C", VA = "0x19F9E4C")]
		private static extern void Pvr_BoundarySetVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x19F9ECC", Offset = "0x19F9ECC", VA = "0x19F9ECC")]
		private static extern bool Pvr_BoundaryGetVisible();

		[PreserveSig]
		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x19F9F48", Offset = "0x19F9F48", VA = "0x19F9F48")]
		private static extern bool Pvr_EnableLWRP(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x19F9FD0", Offset = "0x19F9FD0", VA = "0x19F9FD0")]
		private static extern bool Pvr_SetViewportSize(int w, int h);

		[PreserveSig]
		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x19FA068", Offset = "0x19FA068", VA = "0x19FA068")]
		private static extern void Pvr_BoundarySetSeeThroughVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x19FA0E8", Offset = "0x19FA0E8", VA = "0x19FA0E8")]
		private static extern void PVR_SetCameraImageRect(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x19FA178", Offset = "0x19FA178", VA = "0x19FA178")]
		private static extern void Pvr_SetGuardianSystemDisable(bool value);

		[PreserveSig]
		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x19FA1F8", Offset = "0x19FA1F8", VA = "0x19FA1F8")]
		private static extern int Pvr_GetDialogState();

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x19FA26C", Offset = "0x19FA26C", VA = "0x19FA26C")]
		public static float UPvr_GetFloorHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x19FA270", Offset = "0x19FA270", VA = "0x19FA270")]
		public static int UPvr_GetSeeThroughState()
		{
			return default(int);
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x19FA274", Offset = "0x19FA274", VA = "0x19FA274")]
		public static void UPvr_EnableSeeThroughManual(bool enable)
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x19FA27C", Offset = "0x19FA27C", VA = "0x19FA27C")]
		public static BoundaryTrackingState UPvr_GetTrackingState()
		{
			return default(BoundaryTrackingState);
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x19FA280", Offset = "0x19FA280", VA = "0x19FA280")]
		public static bool UPvr_GetFrameRateLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x19FA284", Offset = "0x19FA284", VA = "0x19FA284")]
		public static bool UPvr_IsBoundaryEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x19FA288", Offset = "0x19FA288", VA = "0x19FA288")]
		public static bool UPvr_BoundaryGetConfigured()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x19FA28C", Offset = "0x19FA28C", VA = "0x19FA28C")]
		public static BoundaryTestResult UPvr_BoundaryTestNode(BoundaryTrackingNode node, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x19FA3D0", Offset = "0x19FA3D0", VA = "0x19FA3D0")]
		public static BoundaryTestResult UPvr_BoundaryTestPoint(Vector3 point, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x19FA520", Offset = "0x19FA520", VA = "0x19FA520")]
		public static Vector3[] UPvr_BoundaryGetGeometry(BoundaryType boundaryType)
		{
			return null;
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x19FA6FC", Offset = "0x19FA6FC", VA = "0x19FA6FC")]
		public static Vector3 UPvr_BoundaryGetDimensions(BoundaryType boundaryType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x19FA758", Offset = "0x19FA758", VA = "0x19FA758")]
		public static bool UPvr_BoundaryGetEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x19FA75C", Offset = "0x19FA75C", VA = "0x19FA75C")]
		public static void UPvr_BoundarySetVisible(bool value)
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x19FA764", Offset = "0x19FA764", VA = "0x19FA764")]
		public static bool UPvr_BoundaryGetVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x19FA768", Offset = "0x19FA768", VA = "0x19FA768")]
		public static bool UPvr_EnableLWRP(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x19FA770", Offset = "0x19FA770", VA = "0x19FA770")]
		public static bool UPvr_SetViewportSize(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x19FA774", Offset = "0x19FA774", VA = "0x19FA774")]
		public static void UPvr_StartCameraFrame()
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x19FA8B8", Offset = "0x19FA8B8", VA = "0x19FA8B8")]
		public static void UPvr_StopCameraFrame()
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x19FA9FC", Offset = "0x19FA9FC", VA = "0x19FA9FC")]
		public static void UPvr_BoundaryGetSeeThroughData(int cameraIndex, RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x19FABDC", Offset = "0x19FABDC", VA = "0x19FABDC")]
		public static void UPvr_BoundarySetCameraImageRect(int width, int height)
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x19FAD14", Offset = "0x19FAD14", VA = "0x19FAD14")]
		public static void UPvr_BoundarySetSeeThroughVisible(bool value)
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x19FAE38", Offset = "0x19FAE38", VA = "0x19FAE38")]
		public static void UPvr_SetGuardianSystemDisable(bool value)
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x19FAF5C", Offset = "0x19FAF5C", VA = "0x19FAF5C")]
		public static int UPvr_GetDialogState()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20004BF")]
	public struct PlatformSettings
	{
		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x19FFB48", Offset = "0x19FFB48", VA = "0x19FFB48")]
		public static Pvr_UnitySDKPlatformSetting.simulationType UPvr_IsCurrentDeviceValid()
		{
			return default(Pvr_UnitySDKPlatformSetting.simulationType);
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x19FFE64", Offset = "0x19FFE64", VA = "0x19FFE64")]
		public static bool UPvr_AppEntitlementCheck(string appid)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x1A001F4", Offset = "0x1A001F4", VA = "0x1A001F4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBEB020", Offset = "0xBEB020")]
		public static bool UPvr_KeyEntitlementCheck(string publicKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x1A004FC", Offset = "0x1A004FC", VA = "0x1A004FC")]
		public static int UPvr_AppEntitlementCheckExtra(string appid)
		{
			return default(int);
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0x1A00818", Offset = "0x1A00818", VA = "0x1A00818")]
		public static int UPvr_KeyEntitlementCheckExtra(string publicKey)
		{
			return default(int);
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x1A00B34", Offset = "0x1A00B34", VA = "0x1A00B34")]
		public static int UPvr_GetHmdAudioStatus()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20004C0")]
	public enum DeviceCommand
	{
		[Token(Token = "0x40018DE")]
		SET_PICO_NEO_HMD_BRIGHTNESS = 12,
		[Token(Token = "0x40018DF")]
		SET_PICO_NEO_HMD_SLEEPDELAY
	}
	[Token(Token = "0x20004C1")]
	public enum BrightnessLevel
	{
		[Token(Token = "0x40018E1")]
		VR_BRIGHTNESS_LEVEL_MIN = 1,
		[Token(Token = "0x40018E2")]
		VR_BRIGHTNESS_LEVEL_MAX = 100,
		[Token(Token = "0x40018E3")]
		VR_BRIGHTNESS_LEVEL_DOWN = 1000,
		[Token(Token = "0x40018E4")]
		VR_BRIGHTNESS_LEVEL_UP = 1001,
		[Token(Token = "0x40018E5")]
		VR_BRIGHTNESS_LEVEL_SCREEN_OFF = -100
	}
	[Token(Token = "0x20004C2")]
	public struct VolumePowerBrightness
	{
		[Token(Token = "0x40018E6")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AndroidJavaObject activity;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidJavaClass javaSysActivityClass;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass batteryjavaVrActivityClass;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass volumejavaVrActivityClass;

		[PreserveSig]
		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x1A0A9C4", Offset = "0x1A0A9C4", VA = "0x1A0A9C4")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x1A0AA54", Offset = "0x1A0AA54", VA = "0x1A0AA54")]
		private static extern bool Pvr_IsHmdExist();

		[PreserveSig]
		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x1A0AAD0", Offset = "0x1A0AAD0", VA = "0x1A0AAD0")]
		private static extern int Pvr_GetHmdScreenBrightness();

		[PreserveSig]
		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x1A0AB44", Offset = "0x1A0AB44", VA = "0x1A0AB44")]
		private static extern bool Pvr_SetHmdScreenBrightness(int brightness);

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x1A0ABCC", Offset = "0x1A0ABCC", VA = "0x1A0ABCC")]
		public static bool UPvr_IsHmdExist()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x1A0ABD0", Offset = "0x1A0ABD0", VA = "0x1A0ABD0")]
		public static int UPvr_GetHmdScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0x1A0ABD4", Offset = "0x1A0ABD4", VA = "0x1A0ABD4")]
		public static bool UPvr_SetHmdScreenBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0x1A0ABD8", Offset = "0x1A0ABD8", VA = "0x1A0ABD8")]
		public static bool UPvr_SetCommonBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x1A0AE78", Offset = "0x1A0AE78", VA = "0x1A0AE78")]
		public static int UPvr_GetCommonBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0x1A0B0A0", Offset = "0x1A0B0A0", VA = "0x1A0B0A0")]
		public static int[] UPvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0x1A0B2A0", Offset = "0x1A0B2A0", VA = "0x1A0B2A0")]
		public static void UPvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0x1A0B4E8", Offset = "0x1A0B4E8", VA = "0x1A0B4E8")]
		public static bool UPvr_SetDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0x1A0B654", Offset = "0x1A0B654", VA = "0x1A0B654")]
		public static string UPvr_GetDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0x1A0B790", Offset = "0x1A0B790", VA = "0x1A0B790")]
		public static bool UPvr_InitBatteryClass()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x1A0B9A0", Offset = "0x1A0B9A0", VA = "0x1A0B9A0")]
		public static bool UPvr_InitBatteryVolClass()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0x1A0BC90", Offset = "0x1A0BC90", VA = "0x1A0BC90")]
		public static bool UPvr_StartBatteryReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0x1A0BEDC", Offset = "0x1A0BEDC", VA = "0x1A0BEDC")]
		public static bool UPvr_StopBatteryReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0x1A0AC10", Offset = "0x1A0AC10", VA = "0x1A0AC10")]
		public static bool UPvr_SetBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0x1A0AE98", Offset = "0x1A0AE98", VA = "0x1A0AE98")]
		public static int UPvr_GetCurrentBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0x1A0B0A4", Offset = "0x1A0B0A4", VA = "0x1A0B0A4")]
		public static int[] Pvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0x1A0B2A4", Offset = "0x1A0B2A4", VA = "0x1A0B2A4")]
		public static void Pvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0x1A0C0D4", Offset = "0x1A0C0D4", VA = "0x1A0C0D4")]
		public static bool UPvr_StartAudioReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x1A0C320", Offset = "0x1A0C320", VA = "0x1A0C320")]
		public static bool UPvr_StopAudioReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x1A0C518", Offset = "0x1A0C518", VA = "0x1A0C518")]
		public static int UPvr_GetMaxVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0x1A0C700", Offset = "0x1A0C700", VA = "0x1A0C700")]
		public static int UPvr_GetCurrentVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0x1A0C8E8", Offset = "0x1A0C8E8", VA = "0x1A0C8E8")]
		public static bool UPvr_VolumeUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x1A0CAC0", Offset = "0x1A0CAC0", VA = "0x1A0CAC0")]
		public static bool UPvr_VolumeDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0x1A0CC98", Offset = "0x1A0CC98", VA = "0x1A0CC98")]
		public static bool UPvr_SetVolumeNum(int volume)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x1A0CE74", Offset = "0x1A0CE74", VA = "0x1A0CE74")]
		public static bool UPvr_SetAudio(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x1A0CE7C", Offset = "0x1A0CE7C", VA = "0x1A0CE7C")]
		public static bool UPvr_SetBattery(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0x1A0B658", Offset = "0x1A0B658", VA = "0x1A0B658")]
		private static string getDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0x1A0B4EC", Offset = "0x1A0B4EC", VA = "0x1A0B4EC")]
		private static bool setDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}
	}
}
namespace Pvr_UnitySDKAPI.Achievement
{
	[Token(Token = "0x20004C3")]
	public sealed class AchievementCore
	{
		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0x19F3044", Offset = "0x19F3044", VA = "0x19F3044")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0x19F30AC", Offset = "0x19F30AC", VA = "0x19F30AC")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0x19F30B0", Offset = "0x19F30B0", VA = "0x19F30B0")]
		public static void RegisterNetwork()
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0x19F3254", Offset = "0x19F3254", VA = "0x19F3254")]
		public static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0x19F33C8", Offset = "0x19F33C8", VA = "0x19F33C8")]
		public AchievementCore()
		{
		}
	}
	[Token(Token = "0x20004C4")]
	public static class Achievements
	{
		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0x19F3430", Offset = "0x19F3430", VA = "0x19F3430")]
		public static Pvr_Request<Pvr_AchievementUpdate> Init()
		{
			return null;
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0x19F3A40", Offset = "0x19F3A40", VA = "0x19F3A40")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddCount(string name, long count)
		{
			return null;
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0x19F3D00", Offset = "0x19F3D00", VA = "0x19F3D00")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0x19F3FA0", Offset = "0x19F3FA0", VA = "0x19F3FA0")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0x19F4238", Offset = "0x19F4238", VA = "0x19F4238")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0x19F4448", Offset = "0x19F4448", VA = "0x19F4448")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0x19F46E8", Offset = "0x19F46E8", VA = "0x19F46E8")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0x19F4940", Offset = "0x19F4940", VA = "0x19F4940")]
		public static Pvr_Request<Pvr_AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0x19F4B98", Offset = "0x19F4B98", VA = "0x19F4B98")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetNextAchievementDefinitionListPage(Pvr_AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0x19F4F58", Offset = "0x19F4F58", VA = "0x19F4F58")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetNextAchievementProgressListPage(Pvr_AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20004C5")]
	public enum AchievementType
	{
		[Token(Token = "0x40018EE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBE54C8", Offset = "0xBE54C8")]
		Unknown,
		[Token(Token = "0x40018EF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBE5500", Offset = "0xBE5500")]
		Simple,
		[Token(Token = "0x40018F0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBE5538", Offset = "0xBE5538")]
		Bitfield,
		[Token(Token = "0x40018F1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBE5570", Offset = "0xBE5570")]
		Count
	}
	[Token(Token = "0x20004C6")]
	public class Pvr_AchievementAPI
	{
		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaClass achievementAPI;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass definitionArrayHandle;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass definitionHandle;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass progressArrayHandle;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaClass progressHandle;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaClass updateHandle;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject errorHandle;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static AndroidJavaObject unityInterface;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string openId;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string accessToken;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string appId;

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0x19F3538", Offset = "0x19F3538", VA = "0x19F3538")]
		internal static long Init()
		{
			return default(long);
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0x19F310C", Offset = "0x19F310C", VA = "0x19F310C")]
		internal static void RegisterNetwork()
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0x19F32B0", Offset = "0x19F32B0", VA = "0x19F32B0")]
		internal static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0x19F59FC", Offset = "0x19F59FC", VA = "0x19F59FC")]
		internal static AndroidJavaObject PopMessage()
		{
			return null;
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0x19F5B1C", Offset = "0x19F5B1C", VA = "0x19F5B1C")]
		internal static string pvr_Error_GetMessage(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0x19F5C1C", Offset = "0x19F5C1C", VA = "0x19F5C1C")]
		internal static int pvr_Error_GetHttpCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0x19F5D1C", Offset = "0x19F5D1C", VA = "0x19F5D1C")]
		internal static int pvr_Error_GetCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0x19F3B60", Offset = "0x19F3B60", VA = "0x19F3B60")]
		internal static long pvr_Achievements_AddCount(string name, long count)
		{
			return default(long);
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x19F3E20", Offset = "0x19F3E20", VA = "0x19F3E20")]
		internal static long pvr_Achievements_AddFields(string name, string fields)
		{
			return default(long);
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0x19F40A8", Offset = "0x19F40A8", VA = "0x19F40A8")]
		internal static long pvr_Achievements_GetAllDefinitions()
		{
			return default(long);
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0x19F4340", Offset = "0x19F4340", VA = "0x19F4340")]
		internal static long pvr_Achievements_GetAllProgress()
		{
			return default(long);
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x19F4560", Offset = "0x19F4560", VA = "0x19F4560")]
		internal static long pvr_Achievements_GetDefinitionsByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x19F4800", Offset = "0x19F4800", VA = "0x19F4800")]
		internal static long pvr_Achievements_GetProgressByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0x19F4A58", Offset = "0x19F4A58", VA = "0x19F4A58")]
		internal static long pvr_Achievements_Unlock(string name)
		{
			return default(long);
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0x19F4D10", Offset = "0x19F4D10", VA = "0x19F4D10")]
		internal static long pvr_HTTP_GetWithMessageType(string nextUrl, Pvr_Message.MessageType messageType)
		{
			return default(long);
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0x19F5E1C", Offset = "0x19F5E1C", VA = "0x19F5E1C")]
		internal static long pvr_Message_GetType(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0x19F5FC0", Offset = "0x19F5FC0", VA = "0x19F5FC0")]
		internal static bool pvr_Message_IsError(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0x19F60B8", Offset = "0x19F60B8", VA = "0x19F60B8")]
		internal static long pvr_Message_GetRequestID(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0x19F5904", Offset = "0x19F5904", VA = "0x19F5904")]
		internal static string pvr_Message_GetString(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0x19F61B0", Offset = "0x19F61B0", VA = "0x19F61B0")]
		internal static bool pvr_AchievementUpdate_GetJustUnlocked(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0x19F62B0", Offset = "0x19F62B0", VA = "0x19F62B0")]
		internal static string pvr_AchievementUpdate_GetName(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0x19F63B0", Offset = "0x19F63B0", VA = "0x19F63B0")]
		internal static int pvr_AchievementProgressArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0x19F64B0", Offset = "0x19F64B0", VA = "0x19F64B0")]
		internal static AndroidJavaObject pvr_AchievementProgressArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0x19F6610", Offset = "0x19F6610", VA = "0x19F6610")]
		internal static string pvr_AchievementProgressArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0x19F6710", Offset = "0x19F6710", VA = "0x19F6710")]
		internal static string pvr_AchievementProgress_GetBitfield(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0x19F6810", Offset = "0x19F6810", VA = "0x19F6810")]
		internal static long pvr_AchievementProgress_GetCount(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0x19F6910", Offset = "0x19F6910", VA = "0x19F6910")]
		internal static bool pvr_AchievementProgress_GetIsUnlocked(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0x19F6A10", Offset = "0x19F6A10", VA = "0x19F6A10")]
		internal static string pvr_AchievementProgress_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0x19F6B10", Offset = "0x19F6B10", VA = "0x19F6B10")]
		internal static DateTime pvr_AchievementProgress_GetUnlockTime(AndroidJavaObject msg)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0x19F6C4C", Offset = "0x19F6C4C", VA = "0x19F6C4C")]
		internal static DateTime DateTimeFromNative(long seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0x19F6CBC", Offset = "0x19F6CBC", VA = "0x19F6CBC")]
		internal static int pvr_AchievementDefinitionArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0x19F6DBC", Offset = "0x19F6DBC", VA = "0x19F6DBC")]
		internal static AndroidJavaObject pvr_AchievementDefinitionArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0x19F6F1C", Offset = "0x19F6F1C", VA = "0x19F6F1C")]
		internal static string pvr_AchievementDefinitionArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x19F701C", Offset = "0x19F701C", VA = "0x19F701C")]
		internal static AchievementType pvr_AchievementDefinition_GetType(AndroidJavaObject msg)
		{
			return default(AchievementType);
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x19F71D0", Offset = "0x19F71D0", VA = "0x19F71D0")]
		internal static string pvr_AchievementDefinition_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0x19F72D0", Offset = "0x19F72D0", VA = "0x19F72D0")]
		internal static int pvr_AchievementDefinition_GetBitfieldLength(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x19F73D0", Offset = "0x19F73D0", VA = "0x19F73D0")]
		internal static long pvr_AchievementDefinition_GetTarget(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0x19F74D0", Offset = "0x19F74D0", VA = "0x19F74D0")]
		internal static string pvr_AchievementDefinition_GetTitle(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0x19F75D0", Offset = "0x19F75D0", VA = "0x19F75D0")]
		internal static string pvr_AchievementDefinition_GetUnlockedDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0x19F76D0", Offset = "0x19F76D0", VA = "0x19F76D0")]
		internal static string pvr_AchievementDefinition_GetLockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0x19F77D0", Offset = "0x19F77D0", VA = "0x19F77D0")]
		internal static bool pvr_AchievementDefinition_GetIsSecrect(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0x19F78D0", Offset = "0x19F78D0", VA = "0x19F78D0")]
		internal static string pvr_AchievementDefinition_GetUnlockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0x19F79D0", Offset = "0x19F79D0", VA = "0x19F79D0")]
		internal static string pvr_AchievementDefinition_GetDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0x19F7AD0", Offset = "0x19F7AD0", VA = "0x19F7AD0")]
		public Pvr_AchievementAPI()
		{
		}
	}
	[Token(Token = "0x20004C7")]
	public class Pvr_AchievementDefinition
	{
		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int BitfieldLength;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly long Target;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Title;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string Description;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UnlockedDescription;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string UnlockedIcon;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly string LockedIcon;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly bool IsSecrect;

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0x19F7E14", Offset = "0x19F7E14", VA = "0x19F7E14")]
		public Pvr_AchievementDefinition(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20004C8")]
	public class Pvr_AchievementDefinitionList : Pvr_DeserializableList<Pvr_AchievementDefinition>
	{
		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x19F5220", Offset = "0x19F5220", VA = "0x19F5220")]
		public Pvr_AchievementDefinitionList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20004C9")]
	public class Pvr_AchievementProgress
	{
		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Count;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x19F7F50", Offset = "0x19F7F50", VA = "0x19F7F50")]
		public Pvr_AchievementProgress(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20004CA")]
	public class Pvr_AchievementProgressList : Pvr_DeserializableList<Pvr_AchievementProgress>
	{
		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x19F54C0", Offset = "0x19F54C0", VA = "0x19F54C0")]
		public Pvr_AchievementProgressList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20004CB")]
	public class Pvr_AchievementUpdate
	{
		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0x19F5760", Offset = "0x19F5760", VA = "0x19F5760")]
		public Pvr_AchievementUpdate(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20004CC")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBD6D6C", Offset = "0xBD6D6C")]
	public class Pvr_DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> data;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string nextUrl;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string previousUrl;

		[Token(Token = "0x17000275")]
		public int Count
		{
			[Token(Token = "0x6001E57")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000276")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6001E58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000277")]
		public T Item
		{
			[Token(Token = "0x6001E5A")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001E5B")]
			set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public bool HasNextPage
		{
			[Token(Token = "0x6001E66")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000279")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x6001E67")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700027A")]
		public string NextUrl
		{
			[Token(Token = "0x6001E68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027B")]
		public string PreviousUrl
		{
			[Token(Token = "0x6001E69")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E59")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001E5C")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6001E5D")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001E5E")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E5F")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001E60")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001E61")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6001E62")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E63")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6001E64")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x6001E65")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001E6A")]
		public Pvr_DeserializableList()
		{
		}
	}
	[Token(Token = "0x20004CD")]
	public static class Pvr_Callback
	{
		[Token(Token = "0x20006E1")]
		private class RequestCallback
		{
			[Token(Token = "0x4002171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Pvr_Message.Callback messageCallback;

			[Token(Token = "0x60026FF")]
			[Address(RVA = "0x19F85FC", Offset = "0x19F85FC", VA = "0x19F85FC")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x6002700")]
			[Address(RVA = "0x19F8604", Offset = "0x19F8604", VA = "0x19F8604")]
			public RequestCallback(Pvr_Message.Callback callback)
			{
			}

			[Token(Token = "0x6002701")]
			[Address(RVA = "0x19F8638", Offset = "0x19F8638", VA = "0x19F8638", Slot = "4")]
			public virtual void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x20006E2")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4002172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Pvr_Message<T>.Callback callback;

			[Token(Token = "0x6002702")]
			public RequestCallback(Pvr_Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6002703")]
			public override void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<long, Request> requestIDsToRequests;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Pvr_Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x19F8020", Offset = "0x19F8020", VA = "0x19F8020")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0x19F8190", Offset = "0x19F8190", VA = "0x19F8190")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0x19F8418", Offset = "0x19F8418", VA = "0x19F8418")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x19F84B0", Offset = "0x19F84B0", VA = "0x19F84B0")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x19F826C", Offset = "0x19F826C", VA = "0x19F826C")]
		internal static void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x20004CE")]
	public class Pvr_CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x19F8A00", Offset = "0x19F8A00", VA = "0x19F8A00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x19F8AFC", Offset = "0x19F8AFC", VA = "0x19F8AFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x19F8B88", Offset = "0x19F8B88", VA = "0x19F8B88")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x19F8BE4", Offset = "0x19F8BE4", VA = "0x19F8BE4")]
		public Pvr_CallbackRunner()
		{
		}
	}
	[Token(Token = "0x20004CF")]
	public abstract class Pvr_Message<T> : Pvr_Message
	{
		[Token(Token = "0x20006E3")]
		public new delegate void Callback(Pvr_Message<T> message);

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x1700027C")]
		public T Data
		{
			[Token(Token = "0x6001E76")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001E75")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001E77")]
		protected abstract T GetDataFromMessage(AndroidJavaObject msg);
	}
	[Token(Token = "0x20004D0")]
	public class Pvr_Message
	{
		[Token(Token = "0x20006E4")]
		public delegate void Callback(Pvr_Message message);

		[Token(Token = "0x20006E5")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4002174")]
			Unknown = 0u,
			[Token(Token = "0x4002175")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x4002176")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x4002177")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x4002178")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x4002179")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x400217A")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x400217B")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x400217C")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x400217D")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x400217E")]
			Achievements_WriteAchievementProgress = 121027549u,
			[Token(Token = "0x400217F")]
			Achievements_VerifyAccessToken = 53284924u
		}

		[Token(Token = "0x20006E6")]
		internal delegate Pvr_Message ExtraMessageTypesHandler(AndroidJavaObject messageHandle, MessageType message_type);

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long requestID;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Error error;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE55A8", Offset = "0xBE55A8")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x1700027D")]
		public MessageType Type
		{
			[Token(Token = "0x6001E79")]
			[Address(RVA = "0x19F8E08", Offset = "0x19F8E08", VA = "0x19F8E08")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x1700027E")]
		public bool IsError
		{
			[Token(Token = "0x6001E7A")]
			[Address(RVA = "0x19F8E10", Offset = "0x19F8E10", VA = "0x19F8E10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700027F")]
		public long RequestID
		{
			[Token(Token = "0x6001E7B")]
			[Address(RVA = "0x19F8E20", Offset = "0x19F8E20", VA = "0x19F8E20")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000280")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x6001E84")]
			[Address(RVA = "0x19F9048", Offset = "0x19F9048", VA = "0x19F9048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB068", Offset = "0xBEB068")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001E83")]
			[Address(RVA = "0x19F8FF0", Offset = "0x19F8FF0", VA = "0x19F8FF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB058", Offset = "0xBEB058")]
			set
			{
			}
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x19F8BF4", Offset = "0x19F8BF4", VA = "0x19F8BF4")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0x19F8E28", Offset = "0x19F8E28", VA = "0x19F8E28", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0x19F8E30", Offset = "0x19F8E30", VA = "0x19F8E30", Slot = "5")]
		public virtual Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0x19F8E38", Offset = "0x19F8E38", VA = "0x19F8E38", Slot = "6")]
		public virtual Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0x19F8E40", Offset = "0x19F8E40", VA = "0x19F8E40", Slot = "7")]
		public virtual Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0x19F8E48", Offset = "0x19F8E48", VA = "0x19F8E48", Slot = "8")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0x19F8E50", Offset = "0x19F8E50", VA = "0x19F8E50")]
		internal static Pvr_Message ParseMessageHandle(AndroidJavaObject messageHandle)
		{
			return null;
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0x19F820C", Offset = "0x19F820C", VA = "0x19F820C")]
		public static Pvr_Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x20004D1")]
	public class MessageWithAchievementDefinitions : Pvr_Message<Pvr_AchievementDefinitionList>
	{
		[Token(Token = "0x6001E85")]
		[Address(RVA = "0x19F511C", Offset = "0x19F511C", VA = "0x19F511C")]
		public MessageWithAchievementDefinitions(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0x19F517C", Offset = "0x19F517C", VA = "0x19F517C", Slot = "5")]
		public override Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0x19F51C0", Offset = "0x19F51C0", VA = "0x19F51C0", Slot = "9")]
		protected override Pvr_AchievementDefinitionList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20004D2")]
	public class MessageWithAchievementProgressList : Pvr_Message<Pvr_AchievementProgressList>
	{
		[Token(Token = "0x6001E88")]
		[Address(RVA = "0x19F53BC", Offset = "0x19F53BC", VA = "0x19F53BC")]
		public MessageWithAchievementProgressList(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x19F541C", Offset = "0x19F541C", VA = "0x19F541C", Slot = "6")]
		public override Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0x19F5460", Offset = "0x19F5460", VA = "0x19F5460", Slot = "9")]
		protected override Pvr_AchievementProgressList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20004D3")]
	public class MessageWithAchievementUpdate : Pvr_Message<Pvr_AchievementUpdate>
	{
		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x19F565C", Offset = "0x19F565C", VA = "0x19F565C")]
		public MessageWithAchievementUpdate(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0x19F56BC", Offset = "0x19F56BC", VA = "0x19F56BC", Slot = "7")]
		public override Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x19F5700", Offset = "0x19F5700", VA = "0x19F5700", Slot = "9")]
		protected override Pvr_AchievementUpdate GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20004D4")]
	public class MessageWithString : Pvr_Message<string>
	{
		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0x19F57FC", Offset = "0x19F57FC", VA = "0x19F57FC")]
		public MessageWithString(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0x19F585C", Offset = "0x19F585C", VA = "0x19F585C", Slot = "8")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0x19F58A0", Offset = "0x19F58A0", VA = "0x19F58A0", Slot = "9")]
		protected override string GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20004D5")]
	public class Error
	{
		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x19F50D0", Offset = "0x19F50D0", VA = "0x19F50D0")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x20004D6")]
	public sealed class Pvr_Request<T> : Request
	{
		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Pvr_Message<T>.Callback callback_;

		[Token(Token = "0x6001E92")]
		public Pvr_Request(long requestID)
		{
		}

		[Token(Token = "0x6001E93")]
		public Pvr_Request<T> OnComplete(Pvr_Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6001E94")]
		public override void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public class Request
	{
		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Pvr_Message.Callback callback_;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE55B8", Offset = "0xBE55B8")]
		private long <RequestID>k__BackingField;

		[Token(Token = "0x17000281")]
		public long RequestID
		{
			[Token(Token = "0x6001E96")]
			[Address(RVA = "0x19F95F8", Offset = "0x19F95F8", VA = "0x19F95F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB078", Offset = "0xBEB078")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001E97")]
			[Address(RVA = "0x19F9600", Offset = "0x19F9600", VA = "0x19F9600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB088", Offset = "0xBEB088")]
			set
			{
			}
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x19F95CC", Offset = "0x19F95CC", VA = "0x19F95CC")]
		public Request(long requestID)
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0x19F9608", Offset = "0x19F9608", VA = "0x19F9608")]
		public Request OnComplete(Pvr_Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0x19F9690", Offset = "0x19F9690", VA = "0x19F9690", Slot = "4")]
		public virtual void HandleMessage(Pvr_Message msg)
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0x19F8B04", Offset = "0x19F8B04", VA = "0x19F8B04")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20004D8")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000282")]
		public bool Highlight
		{
			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0x10C2668", Offset = "0x10C2668", VA = "0x10C2668")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0x10C2670", Offset = "0x10C2670", VA = "0x10C2670")]
			set
			{
			}
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0x10C267C", Offset = "0x10C267C", VA = "0x10C267C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0x10C2848", Offset = "0x10C2848", VA = "0x10C2848", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x10C2870", Offset = "0x10C2870", VA = "0x10C2870", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0x10C2898", Offset = "0x10C2898", VA = "0x10C2898")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x10C2748", Offset = "0x10C2748", VA = "0x10C2748")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x10C2B28", Offset = "0x10C2B28", VA = "0x10C2B28")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000283")]
		public bool InRange
		{
			[Token(Token = "0x6001EA4")]
			[Address(RVA = "0x10C32A4", Offset = "0x10C32A4", VA = "0x10C32A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EA5")]
			[Address(RVA = "0x10C32AC", Offset = "0x10C32AC", VA = "0x10C32AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000284")]
		public bool Targeted
		{
			[Token(Token = "0x6001EA6")]
			[Address(RVA = "0x10C3428", Offset = "0x10C3428", VA = "0x10C3428")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0x10C3430", Offset = "0x10C3430", VA = "0x10C3430")]
			set
			{
			}
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x10C343C", Offset = "0x10C343C", VA = "0x10C343C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x10C32B8", Offset = "0x10C32B8", VA = "0x10C32B8")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0x10C3618", Offset = "0x10C3618", VA = "0x10C3618")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20004DA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD6DA4", Offset = "0xBD6DA4")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000285")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001EAB")]
			[Address(RVA = "0x10C3620", Offset = "0x10C3620", VA = "0x10C3620")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0x10C3628", Offset = "0x10C3628", VA = "0x10C3628")]
			set
			{
			}
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0x10C3644", Offset = "0x10C3644", VA = "0x10C3644", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0x10C385C", Offset = "0x10C385C", VA = "0x10C385C", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0x10C41D0", Offset = "0x10C41D0", VA = "0x10C41D0", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0x10C47A8", Offset = "0x10C47A8", VA = "0x10C47A8", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0x10C4B88", Offset = "0x10C4B88", VA = "0x10C4B88")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0x10C3AC8", Offset = "0x10C3AC8", VA = "0x10C3AC8")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0x10C4C64", Offset = "0x10C4C64", VA = "0x10C4C64")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0x10C5100", Offset = "0x10C5100", VA = "0x10C5100", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0x10C5118", Offset = "0x10C5118", VA = "0x10C5118", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0x10C5120", Offset = "0x10C5120", VA = "0x10C5120")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0x10C6D14", Offset = "0x10C6D14", VA = "0x10C6D14")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0x10C6DC4", Offset = "0x10C6DC4", VA = "0x10C6DC4")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0x10C6E70", Offset = "0x10C6E70", VA = "0x10C6E70")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20004DC")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20006E7")]
		public enum CrosshairState
		{
			[Token(Token = "0x4002181")]
			Disabled,
			[Token(Token = "0x4002182")]
			Enabled,
			[Token(Token = "0x4002183")]
			Targeted
		}

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0x10C6E78", Offset = "0x10C6E78", VA = "0x10C6E78")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0x10C357C", Offset = "0x10C357C", VA = "0x10C357C")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0x10C6EE8", Offset = "0x10C6EE8", VA = "0x10C6EE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0x10C6F30", Offset = "0x10C6F30", VA = "0x10C6F30")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20004DD")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0x10CBFA8", Offset = "0x10CBFA8", VA = "0x10CBFA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0x10CC074", Offset = "0x10CC074", VA = "0x10CC074")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x10CC080", Offset = "0x10CC080", VA = "0x10CC080")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x10CC08C", Offset = "0x10CC08C", VA = "0x10CC08C")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20004DE")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x10C1250", Offset = "0x10C1250", VA = "0x10C1250")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x10C12A8", Offset = "0x10C12A8", VA = "0x10C12A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x10C154C", Offset = "0x10C154C", VA = "0x10C154C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x10C163C", Offset = "0x10C163C", VA = "0x10C163C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x10C12AC", Offset = "0x10C12AC", VA = "0x10C12AC")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x10C172C", Offset = "0x10C172C", VA = "0x10C172C")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20004DF")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20006E8")]
		public enum ContactTest
		{
			[Token(Token = "0x4002185")]
			PerpenTest,
			[Token(Token = "0x4002186")]
			BackwardsPress
		}

		[Token(Token = "0x4001943")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4001944")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000286")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0x10C17DC", Offset = "0x10C17DC", VA = "0x10C17DC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000287")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6001EC9")]
			[Address(RVA = "0x10C17E4", Offset = "0x10C17E4", VA = "0x10C17E4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x10C17F0", Offset = "0x10C17F0", VA = "0x10C17F0", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0x10C1968", Offset = "0x10C1968", VA = "0x10C1968")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0x10C1B88", Offset = "0x10C1B88", VA = "0x10C1B88", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0x10C20CC", Offset = "0x10C20CC", VA = "0x10C20CC")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0x10C1FE4", Offset = "0x10C1FE4", VA = "0x10C1FE4")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0x10C2240", Offset = "0x10C2240", VA = "0x10C2240")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0x10C2334", Offset = "0x10C2334", VA = "0x10C2334")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0x10C2460", Offset = "0x10C2460", VA = "0x10C2460")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20004E0")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE56F8", Offset = "0xBE56F8")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE5708", Offset = "0xBE5708")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000288")]
		public Collider Collider
		{
			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0x10C2564", Offset = "0x10C2564", VA = "0x10C2564", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB098", Offset = "0xBEB098")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001ED3")]
			[Address(RVA = "0x10C256C", Offset = "0x10C256C", VA = "0x10C256C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB0A8", Offset = "0xBEB0A8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000289")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6001ED4")]
			[Address(RVA = "0x10C2574", Offset = "0x10C2574", VA = "0x10C2574", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB0B8", Offset = "0xBEB0B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001ED5")]
			[Address(RVA = "0x10C257C", Offset = "0x10C257C", VA = "0x10C257C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB0C8", Offset = "0xBEB0C8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700028A")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001ED6")]
			[Address(RVA = "0x10C2584", Offset = "0x10C2584", VA = "0x10C2584", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0x10C25D4", Offset = "0x10C25D4", VA = "0x10C25D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0x10C2660", Offset = "0x10C2660", VA = "0x10C2660")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20004E1")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700028B")]
		Collider Collider
		{
			[Token(Token = "0x6001ED9")]
			get;
		}

		[Token(Token = "0x1700028C")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6001EDA")]
			get;
		}

		[Token(Token = "0x1700028D")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001EDB")]
			get;
		}
	}
	[Token(Token = "0x20004E2")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0x10C1ACC", Offset = "0x10C1ACC", VA = "0x10C1ACC")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20004E3")]
	public enum InteractionType
	{
		[Token(Token = "0x4001958")]
		Enter,
		[Token(Token = "0x4001959")]
		Stay,
		[Token(Token = "0x400195A")]
		Exit
	}
	[Token(Token = "0x20004E4")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20006E9")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4002188")]
			Mesh,
			[Token(Token = "0x4002189")]
			Skeleton,
			[Token(Token = "0x400218A")]
			Both
		}

		[Token(Token = "0x20006EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD88EC", Offset = "0xBD88EC")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400218B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400218C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400218D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170003B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002713")]
				[Address(RVA = "0x10C7F14", Offset = "0x10C7F14", VA = "0x10C7F14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002715")]
				[Address(RVA = "0x10C7F7C", Offset = "0x10C7F7C", VA = "0x10C7F7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002710")]
			[Address(RVA = "0x10C7998", Offset = "0x10C7998", VA = "0x10C7998")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6002711")]
			[Address(RVA = "0x10C7CC0", Offset = "0x10C7CC0", VA = "0x10C7CC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002712")]
			[Address(RVA = "0x10C7CC4", Offset = "0x10C7CC4", VA = "0x10C7CC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002714")]
			[Address(RVA = "0x10C7F1C", Offset = "0x10C7F1C", VA = "0x10C7F1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400195B")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE5738", Offset = "0xBE5738")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x1700028E")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6001EDD")]
			[Address(RVA = "0x10C5D9C", Offset = "0x10C5D9C", VA = "0x10C5D9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EDE")]
			[Address(RVA = "0x10C6F38", Offset = "0x10C6F38", VA = "0x10C6F38")]
			private set
			{
			}
		}

		[Token(Token = "0x1700028F")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6001EDF")]
			[Address(RVA = "0x10C6998", Offset = "0x10C6998", VA = "0x10C6998")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EE0")]
			[Address(RVA = "0x10C6FA8", Offset = "0x10C6FA8", VA = "0x10C6FA8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000290")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6001EE1")]
			[Address(RVA = "0x10C7018", Offset = "0x10C7018", VA = "0x10C7018")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EE2")]
			[Address(RVA = "0x10C7050", Offset = "0x10C7050", VA = "0x10C7050")]
			private set
			{
			}
		}

		[Token(Token = "0x17000291")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0x10C70C0", Offset = "0x10C70C0", VA = "0x10C70C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0x10C70F8", Offset = "0x10C70F8", VA = "0x10C70F8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000292")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0x10C7168", Offset = "0x10C7168", VA = "0x10C7168")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EE6")]
			[Address(RVA = "0x10C71A0", Offset = "0x10C71A0", VA = "0x10C71A0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000293")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6001EE7")]
			[Address(RVA = "0x10C5D68", Offset = "0x10C5D68", VA = "0x10C5D68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EE8")]
			[Address(RVA = "0x10C7210", Offset = "0x10C7210", VA = "0x10C7210")]
			private set
			{
			}
		}

		[Token(Token = "0x17000294")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6001EE9")]
			[Address(RVA = "0x10C6964", Offset = "0x10C6964", VA = "0x10C6964")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EEA")]
			[Address(RVA = "0x10C727C", Offset = "0x10C727C", VA = "0x10C727C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6001EEB")]
			[Address(RVA = "0x10C72E8", Offset = "0x10C72E8", VA = "0x10C72E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0x10C731C", Offset = "0x10C731C", VA = "0x10C731C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6001EED")]
			[Address(RVA = "0x10C7388", Offset = "0x10C7388", VA = "0x10C7388")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EEE")]
			[Address(RVA = "0x10C73BC", Offset = "0x10C73BC", VA = "0x10C73BC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000297")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0x10C7428", Offset = "0x10C7428", VA = "0x10C7428")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EF0")]
			[Address(RVA = "0x10C745C", Offset = "0x10C745C", VA = "0x10C745C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000298")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0x10C74C8", Offset = "0x10C74C8", VA = "0x10C74C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB0D8", Offset = "0xBEB0D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EF2")]
			[Address(RVA = "0x10C7518", Offset = "0x10C7518", VA = "0x10C7518")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB0E8", Offset = "0xBEB0E8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0x10C7570", Offset = "0x10C7570", VA = "0x10C7570")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0x10C7910", Offset = "0x10C7910", VA = "0x10C7910")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0x10C7894", Offset = "0x10C7894", VA = "0x10C7894")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEB0F8", Offset = "0xBEB0F8")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0x10C30F8", Offset = "0x10C30F8", VA = "0x10C30F8")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x10C79C4", Offset = "0x10C79C4", VA = "0x10C79C4")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x10C69D0", Offset = "0x10C69D0", VA = "0x10C69D0")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0x10C5BD8", Offset = "0x10C5BD8", VA = "0x10C5BD8")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x10C7BA4", Offset = "0x10C7BA4", VA = "0x10C7BA4")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20004E5")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006EB")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6002716")]
			[Address(RVA = "0x10C86CC", Offset = "0x10C86CC", VA = "0x10C86CC")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000299")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6001EFB")]
			[Address(RVA = "0x10C7F84", Offset = "0x10C7F84", VA = "0x10C7F84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029A")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6001EFC")]
			[Address(RVA = "0x10C7F8C", Offset = "0x10C7F8C", VA = "0x10C7F8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029B")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6001EFD")]
			[Address(RVA = "0x10C7F94", Offset = "0x10C7F94", VA = "0x10C7F94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029C")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6001EFE")]
			[Address(RVA = "0x10C7F9C", Offset = "0x10C7F9C", VA = "0x10C7F9C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400002F")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6001EFF")]
			[Address(RVA = "0x10C7FA4", Offset = "0x10C7FA4", VA = "0x10C7FA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB15C", Offset = "0xBEB15C")]
			add
			{
			}
			[Token(Token = "0x6001F00")]
			[Address(RVA = "0x10C8048", Offset = "0x10C8048", VA = "0x10C8048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB16C", Offset = "0xBEB16C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6001F02")]
			[Address(RVA = "0x10C8160", Offset = "0x10C8160", VA = "0x10C8160")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB17C", Offset = "0xBEB17C")]
			add
			{
			}
			[Token(Token = "0x6001F03")]
			[Address(RVA = "0x10C8204", Offset = "0x10C8204", VA = "0x10C8204")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB18C", Offset = "0xBEB18C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6001F05")]
			[Address(RVA = "0x10C831C", Offset = "0x10C831C", VA = "0x10C831C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB19C", Offset = "0xBEB19C")]
			add
			{
			}
			[Token(Token = "0x6001F06")]
			[Address(RVA = "0x10C83C0", Offset = "0x10C83C0", VA = "0x10C83C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB1AC", Offset = "0xBEB1AC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x10C80EC", Offset = "0x10C80EC", VA = "0x10C80EC", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x10C82A8", Offset = "0x10C82A8", VA = "0x10C82A8", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x10C8464", Offset = "0x10C8464", VA = "0x10C8464", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001F08")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x10C1904", Offset = "0x10C1904", VA = "0x10C1904", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x10C85A0", Offset = "0x10C85A0", VA = "0x10C85A0", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0x10C255C", Offset = "0x10C255C", VA = "0x10C255C")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20004E6")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4001973")]
		None,
		[Token(Token = "0x4001974")]
		Proximity,
		[Token(Token = "0x4001975")]
		Contact,
		[Token(Token = "0x4001976")]
		Action
	}
	[Token(Token = "0x20004E7")]
	public enum InteractableState
	{
		[Token(Token = "0x4001978")]
		Default,
		[Token(Token = "0x4001979")]
		ProximityState,
		[Token(Token = "0x400197A")]
		ContactState,
		[Token(Token = "0x400197B")]
		ActionState
	}
	[Token(Token = "0x20004E8")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x10C2178", Offset = "0x10C2178", VA = "0x10C2178")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20004E9")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x1700029D")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0x10C871C", Offset = "0x10C871C", VA = "0x10C871C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0x10C84D8", Offset = "0x10C84D8", VA = "0x10C84D8")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0x10C8604", Offset = "0x10C8604", VA = "0x10C8604")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0x10C8784", Offset = "0x10C8784", VA = "0x10C8784")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20006EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD88FC", Offset = "0xBD88FC")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400218E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400218F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4002191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4002192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4002193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4002194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4002195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4002196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170003B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600271B")]
				[Address(RVA = "0x10C9844", Offset = "0x10C9844", VA = "0x10C9844", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600271D")]
				[Address(RVA = "0x10C98AC", Offset = "0x10C98AC", VA = "0x10C98AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002717")]
			[Address(RVA = "0x10C9290", Offset = "0x10C9290", VA = "0x10C9290")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002718")]
			[Address(RVA = "0x10C93BC", Offset = "0x10C93BC", VA = "0x10C93BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002719")]
			[Address(RVA = "0x10C9430", Offset = "0x10C9430", VA = "0x10C9430", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600271A")]
			[Address(RVA = "0x10C93D8", Offset = "0x10C93D8", VA = "0x10C93D8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600271C")]
			[Address(RVA = "0x10C984C", Offset = "0x10C984C", VA = "0x10C984C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0x10C9170", Offset = "0x10C9170", VA = "0x10C9170")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0x10C91EC", Offset = "0x10C91EC", VA = "0x10C91EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEB1BC", Offset = "0xBEB1BC")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0x10C92BC", Offset = "0x10C92BC", VA = "0x10C92BC")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0x10C93B4", Offset = "0x10C93B4", VA = "0x10C93B4")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20004EB")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x1700029E")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6001F16")]
			[Address(RVA = "0x10C5604", Offset = "0x10C5604", VA = "0x10C5604")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0x10C5770", Offset = "0x10C5770", VA = "0x10C5770")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0x10C98B4", Offset = "0x10C98B4", VA = "0x10C98B4")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0x10C9960", Offset = "0x10C9960", VA = "0x10C9960")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0x10C9C28", Offset = "0x10C9C28", VA = "0x10C9C28")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x10C9C70", Offset = "0x10C9C70", VA = "0x10C9C70")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0x10C9EDC", Offset = "0x10C9EDC", VA = "0x10C9EDC")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0x10CA008", Offset = "0x10CA008", VA = "0x10CA008")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20004EC")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20006ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD890C", Offset = "0xBD890C")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170003BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002721")]
				[Address(RVA = "0x10C6BE0", Offset = "0x10C6BE0", VA = "0x10C6BE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002723")]
				[Address(RVA = "0x10C6C48", Offset = "0x10C6C48", VA = "0x10C6C48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600271E")]
			[Address(RVA = "0x10C5898", Offset = "0x10C5898", VA = "0x10C5898")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600271F")]
			[Address(RVA = "0x10C65DC", Offset = "0x10C65DC", VA = "0x10C65DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002720")]
			[Address(RVA = "0x10C65E0", Offset = "0x10C65E0", VA = "0x10C65E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002722")]
			[Address(RVA = "0x10C6BE8", Offset = "0x10C6BE8", VA = "0x10C6BE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400198B")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x1700029F")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001F1E")]
			[Address(RVA = "0x10C54D0", Offset = "0x10C54D0", VA = "0x10C54D0", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170002A0")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001F1F")]
			[Address(RVA = "0x10C54D8", Offset = "0x10C54D8", VA = "0x10C54D8", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170002A1")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001F20")]
			[Address(RVA = "0x10C54E0", Offset = "0x10C54E0", VA = "0x10C54E0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A2")]
		public override bool EnableState
		{
			[Token(Token = "0x6001F21")]
			[Address(RVA = "0x10C54E8", Offset = "0x10C54E8", VA = "0x10C54E8", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F22")]
			[Address(RVA = "0x10C5514", Offset = "0x10C5514", VA = "0x10C5514", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0x10C5550", Offset = "0x10C5550", VA = "0x10C5550", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0x10C581C", Offset = "0x10C581C", VA = "0x10C581C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEB220", Offset = "0xBEB220")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0x10C58C4", Offset = "0x10C58C4", VA = "0x10C58C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0x10C5DD4", Offset = "0x10C5DD4", VA = "0x10C5DD4")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0x10C604C", Offset = "0x10C604C", VA = "0x10C604C")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0x10C618C", Offset = "0x10C618C", VA = "0x10C618C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0x10C6468", Offset = "0x10C6468", VA = "0x10C6468", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0x10C646C", Offset = "0x10C646C", VA = "0x10C646C", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0x10C6470", Offset = "0x10C6470", VA = "0x10C6470")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20004ED")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE57C8", Offset = "0xBE57C8")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE57D8", Offset = "0xBE57D8")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE57E8", Offset = "0xBE57E8")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x170002A3")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001F2C")]
			[Address(RVA = "0x10C6C50", Offset = "0x10C6C50", VA = "0x10C6C50", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB284", Offset = "0xBEB284")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0x10C6C58", Offset = "0x10C6C58", VA = "0x10C6C58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB294", Offset = "0xBEB294")]
			set
			{
			}
		}

		[Token(Token = "0x170002A4")]
		public bool EnableState
		{
			[Token(Token = "0x6001F2E")]
			[Address(RVA = "0x10C6C60", Offset = "0x10C6C60", VA = "0x10C6C60", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F2F")]
			[Address(RVA = "0x10C6C7C", Offset = "0x10C6C7C", VA = "0x10C6C7C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170002A5")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001F30")]
			[Address(RVA = "0x10C6C9C", Offset = "0x10C6C9C", VA = "0x10C6C9C", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB2A4", Offset = "0xBEB2A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F31")]
			[Address(RVA = "0x10C6CA4", Offset = "0x10C6CA4", VA = "0x10C6CA4", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB2B4", Offset = "0xBEB2B4")]
			set
			{
			}
		}

		[Token(Token = "0x170002A6")]
		public float SphereRadius
		{
			[Token(Token = "0x6001F32")]
			[Address(RVA = "0x10C6CB0", Offset = "0x10C6CB0", VA = "0x10C6CB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB2C4", Offset = "0xBEB2C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F33")]
			[Address(RVA = "0x10C6CB8", Offset = "0x10C6CB8", VA = "0x10C6CB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB2D4", Offset = "0xBEB2D4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x10C6CC0", Offset = "0x10C6CC0", VA = "0x10C6CC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x10C6D08", Offset = "0x10C6D08", VA = "0x10C6D08", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x10C6D0C", Offset = "0x10C6D0C", VA = "0x10C6D0C")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20004EE")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x400199B")]
		None = 0,
		[Token(Token = "0x400199C")]
		Ray = 1,
		[Token(Token = "0x400199D")]
		Poke = 4,
		[Token(Token = "0x400199E")]
		All = -1
	}
	[Token(Token = "0x20004EF")]
	public enum ToolInputState
	{
		[Token(Token = "0x40019A0")]
		Inactive,
		[Token(Token = "0x40019A1")]
		PrimaryInputDown,
		[Token(Token = "0x40019A2")]
		PrimaryInputDownStay,
		[Token(Token = "0x40019A3")]
		PrimaryInputUp
	}
	[Token(Token = "0x20004F0")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x10C6410", Offset = "0x10C6410", VA = "0x10C6410")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20004F1")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE57F8", Offset = "0xBE57F8")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE5808", Offset = "0xBE5808")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE5818", Offset = "0xBE5818")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170002A7")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001F38")]
			[Address(RVA = "0x10C2458", Offset = "0x10C2458", VA = "0x10C2458")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A8")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001F39")]
			[Address(RVA = "0x10C8804", Offset = "0x10C8804", VA = "0x10C8804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB2E4", Offset = "0xBEB2E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F3A")]
			[Address(RVA = "0x10C880C", Offset = "0x10C880C", VA = "0x10C880C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB2F4", Offset = "0xBEB2F4")]
			set
			{
			}
		}

		[Token(Token = "0x170002A9")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001F3B")]
			get;
		}

		[Token(Token = "0x170002AA")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6001F3C")]
			get;
		}

		[Token(Token = "0x170002AB")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6001F3D")]
			get;
		}

		[Token(Token = "0x170002AC")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001F3E")]
			[Address(RVA = "0x10C8818", Offset = "0x10C8818", VA = "0x10C8818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB304", Offset = "0xBEB304")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001F3F")]
			[Address(RVA = "0x10C8824", Offset = "0x10C8824", VA = "0x10C8824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB314", Offset = "0xBEB314")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002AD")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6001F40")]
			[Address(RVA = "0x10C8830", Offset = "0x10C8830", VA = "0x10C8830")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB324", Offset = "0xBEB324")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001F41")]
			[Address(RVA = "0x10C883C", Offset = "0x10C883C", VA = "0x10C883C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB334", Offset = "0xBEB334")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6001F46")]
			get;
			[Token(Token = "0x6001F47")]
			set;
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x10C8848", Offset = "0x10C8848", VA = "0x10C8848")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001F43")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6001F44")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6001F45")]
		public abstract void DeFocus();

		[Token(Token = "0x6001F48")]
		public abstract void Initialize();

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0x10C8850", Offset = "0x10C8850", VA = "0x10C8850")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x10C88A0", Offset = "0x10C88A0", VA = "0x10C88A0")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x10C88F8", Offset = "0x10C88F8", VA = "0x10C88F8", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x10C8B58", Offset = "0x10C8B58", VA = "0x10C8B58", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0x10C6484", Offset = "0x10C6484", VA = "0x10C6484")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	public interface InteractableToolView
	{
		[Token(Token = "0x170002AF")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6001F4E")]
			get;
		}

		[Token(Token = "0x170002B0")]
		bool EnableState
		{
			[Token(Token = "0x6001F50")]
			get;
			[Token(Token = "0x6001F51")]
			set;
		}

		[Token(Token = "0x170002B1")]
		bool ToolActivateState
		{
			[Token(Token = "0x6001F52")]
			get;
			[Token(Token = "0x6001F53")]
			set;
		}

		[Token(Token = "0x6001F4F")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20004F3")]
	public class PinchStateModule
	{
		[Token(Token = "0x20006EE")]
		private enum PinchState
		{
			[Token(Token = "0x400219B")]
			None,
			[Token(Token = "0x400219C")]
			PinchDown,
			[Token(Token = "0x400219D")]
			PinchStay,
			[Token(Token = "0x400219E")]
			PinchUp
		}

		[Token(Token = "0x40019B0")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x170002B2")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6001F54")]
			[Address(RVA = "0x10CC094", Offset = "0x10CC094", VA = "0x10CC094")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B3")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6001F55")]
			[Address(RVA = "0x10CC120", Offset = "0x10CC120", VA = "0x10CC120")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B4")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6001F56")]
			[Address(RVA = "0x10CC1AC", Offset = "0x10CC1AC", VA = "0x10CC1AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0x10CC238", Offset = "0x10CC238", VA = "0x10CC238")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x10CC26C", Offset = "0x10CC26C", VA = "0x10CC26C")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20004F4")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x40019B3")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40019B4")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40019B5")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40019B6")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40019B7")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE5838", Offset = "0xBE5838")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x170002B5")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001F59")]
			[Address(RVA = "0x10CC53C", Offset = "0x10CC53C", VA = "0x10CC53C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170002B6")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001F5A")]
			[Address(RVA = "0x10CC544", Offset = "0x10CC544", VA = "0x10CC544", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170002B7")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001F5B")]
			[Address(RVA = "0x10CC5AC", Offset = "0x10CC5AC", VA = "0x10CC5AC", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B8")]
		public override bool EnableState
		{
			[Token(Token = "0x6001F5C")]
			[Address(RVA = "0x10CC5B4", Offset = "0x10CC5B4", VA = "0x10CC5B4", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F5D")]
			[Address(RVA = "0x10CC5F8", Offset = "0x10CC5F8", VA = "0x10CC5F8", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x10CC66C", Offset = "0x10CC66C", VA = "0x10CC66C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x10CC6CC", Offset = "0x10CC6CC", VA = "0x10CC6CC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x10CC768", Offset = "0x10CC768", VA = "0x10CC768")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x10CCA68", Offset = "0x10CCA68", VA = "0x10CCA68")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x10CCB64", Offset = "0x10CCB64", VA = "0x10CCB64", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x10CCEEC", Offset = "0x10CCEEC", VA = "0x10CCEEC")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x10CD090", Offset = "0x10CD090", VA = "0x10CD090")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0x10CD1B8", Offset = "0x10CD1B8", VA = "0x10CD1B8")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x10CD4F0", Offset = "0x10CD4F0", VA = "0x10CD4F0")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0x10CD900", Offset = "0x10CD900", VA = "0x10CD900", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0x10CD9EC", Offset = "0x10CD9EC", VA = "0x10CD9EC", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0x10CDA28", Offset = "0x10CDA28", VA = "0x10CDA28")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20004F5")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40019C3")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40019C4")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE58AC", Offset = "0xBE58AC")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170002B9")]
		public bool EnableState
		{
			[Token(Token = "0x6001F6A")]
			[Address(RVA = "0x10CC5DC", Offset = "0x10CC5DC", VA = "0x10CC5DC", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F6B")]
			[Address(RVA = "0x10CC614", Offset = "0x10CC614", VA = "0x10CC614", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001F6C")]
			[Address(RVA = "0x10CDB1C", Offset = "0x10CDB1C", VA = "0x10CDB1C", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0x10CCA2C", Offset = "0x10CCA2C", VA = "0x10CCA2C", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170002BB")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0x10CDD68", Offset = "0x10CDD68", VA = "0x10CDD68", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB344", Offset = "0xBEB344")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F70")]
			[Address(RVA = "0x10CDD70", Offset = "0x10CDD70", VA = "0x10CDD70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB354", Offset = "0xBEB354")]
			set
			{
			}
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0x10CDB24", Offset = "0x10CDB24", VA = "0x10CDB24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x10CD93C", Offset = "0x10CD93C", VA = "0x10CD93C", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x10CDD78", Offset = "0x10CDD78", VA = "0x10CDD78")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x10CE0A4", Offset = "0x10CE0A4", VA = "0x10CE0A4")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x10CE294", Offset = "0x10CE294", VA = "0x10CE294")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20004F6")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x170002BC")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001F75")]
			[Address(RVA = "0x10C5140", Offset = "0x10C5140", VA = "0x10C5140")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F76")]
			[Address(RVA = "0x10C5148", Offset = "0x10C5148", VA = "0x10C5148")]
			set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6001F77")]
			[Address(RVA = "0x10C51D0", Offset = "0x10C51D0", VA = "0x10C51D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F78")]
			[Address(RVA = "0x10C51D8", Offset = "0x10C51D8", VA = "0x10C51D8")]
			set
			{
			}
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x10C5244", Offset = "0x10C5244", VA = "0x10C5244")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0x10C54A8", Offset = "0x10C54A8", VA = "0x10C54A8")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0x10C54B8", Offset = "0x10C54B8", VA = "0x10C54B8")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0x10C54C8", Offset = "0x10C54C8", VA = "0x10C54C8")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20004F7")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0x10C2C14", Offset = "0x10C2C14", VA = "0x10C2C14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0x10C2C18", Offset = "0x10C2C18", VA = "0x10C2C18")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x10C2CAC", Offset = "0x10C2CAC", VA = "0x10C2CAC")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x10C2D9C", Offset = "0x10C2D9C", VA = "0x10C2D9C")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0x10C2E8C", Offset = "0x10C2E8C", VA = "0x10C2E8C")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x10C2F4C", Offset = "0x10C2F4C", VA = "0x10C2F4C")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x10C303C", Offset = "0x10C303C", VA = "0x10C303C")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x10C3084", Offset = "0x10C3084", VA = "0x10C3084")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x10C31E0", Offset = "0x10C31E0", VA = "0x10C31E0")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x10C3250", Offset = "0x10C3250", VA = "0x10C3250")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20004F8")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x10C3258", Offset = "0x10C3258", VA = "0x10C3258")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0x10C325C", Offset = "0x10C325C", VA = "0x10C325C")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0x10C3214", Offset = "0x10C3214", VA = "0x10C3214")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0x10C329C", Offset = "0x10C329C", VA = "0x10C329C")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20004F9")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20006EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD891C", Offset = "0xBD891C")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400219F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x40021A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x40021A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x40021A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x170003BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002727")]
				[Address(RVA = "0x10CBF38", Offset = "0x10CBF38", VA = "0x10CBF38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002729")]
				[Address(RVA = "0x10CBFA0", Offset = "0x10CBFA0", VA = "0x10CBFA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002724")]
			[Address(RVA = "0x10CBC5C", Offset = "0x10CBC5C", VA = "0x10CBC5C")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002725")]
			[Address(RVA = "0x10CBD38", Offset = "0x10CBD38", VA = "0x10CBD38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002726")]
			[Address(RVA = "0x10CBD3C", Offset = "0x10CBD3C", VA = "0x10CBD3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002728")]
			[Address(RVA = "0x10CBF40", Offset = "0x10CBF40", VA = "0x10CBF40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019D4")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x40019D5")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x10CB84C", Offset = "0x10CB84C", VA = "0x10CB84C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0x10CB8F0", Offset = "0x10CB8F0", VA = "0x10CB8F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x10CBB98", Offset = "0x10CBB98", VA = "0x10CBB98")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0x10CBB1C", Offset = "0x10CBB1C", VA = "0x10CBB1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEB364", Offset = "0xBEB364")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x10CBC88", Offset = "0x10CBC88", VA = "0x10CBC88")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20004FA")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20006F0")]
		public enum SelectionState
		{
			[Token(Token = "0x40021A6")]
			Off,
			[Token(Token = "0x40021A7")]
			Selected,
			[Token(Token = "0x40021A8")]
			Highlighted
		}

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x170002BE")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6001F90")]
			[Address(RVA = "0x10CE300", Offset = "0x10CE300", VA = "0x10CE300")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6001F91")]
			[Address(RVA = "0x10CE308", Offset = "0x10CE308", VA = "0x10CE308")]
			set
			{
			}
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x10CE490", Offset = "0x10CE490", VA = "0x10CE490")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x10CE68C", Offset = "0x10CE68C", VA = "0x10CE68C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0x10CE390", Offset = "0x10CE390", VA = "0x10CE390")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x10CE77C", Offset = "0x10CE77C", VA = "0x10CE77C")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20006F1")]
		public enum SegmentType
		{
			[Token(Token = "0x40021AA")]
			Straight,
			[Token(Token = "0x40021AB")]
			LeftTurn,
			[Token(Token = "0x40021AC")]
			RightTurn,
			[Token(Token = "0x40021AD")]
			Switch
		}

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x40019EA")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x40019EB")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE598C", Offset = "0xBE598C")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x170002BF")]
		public float StartDistance
		{
			[Token(Token = "0x6001F97")]
			[Address(RVA = "0x10CE7E8", Offset = "0x10CE7E8", VA = "0x10CE7E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB3C8", Offset = "0xBEB3C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F98")]
			[Address(RVA = "0x10CE7F0", Offset = "0x10CE7F0", VA = "0x10CE7F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB3D8", Offset = "0xBEB3D8")]
			set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public float GridSize
		{
			[Token(Token = "0x6001F99")]
			[Address(RVA = "0x10CE7F8", Offset = "0x10CE7F8", VA = "0x10CE7F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F9A")]
			[Address(RVA = "0x10CE800", Offset = "0x10CE800", VA = "0x10CE800")]
			private set
			{
			}
		}

		[Token(Token = "0x170002C1")]
		public int SubDivCount
		{
			[Token(Token = "0x6001F9B")]
			[Address(RVA = "0x10CE808", Offset = "0x10CE808", VA = "0x10CE808")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F9C")]
			[Address(RVA = "0x10CE810", Offset = "0x10CE810", VA = "0x10CE810")]
			set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public SegmentType Type
		{
			[Token(Token = "0x6001F9D")]
			[Address(RVA = "0x10CE818", Offset = "0x10CE818", VA = "0x10CE818")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170002C3")]
		public Pose EndPose
		{
			[Token(Token = "0x6001F9E")]
			[Address(RVA = "0x10CE820", Offset = "0x10CE820", VA = "0x10CE820")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C4")]
		public float Radius
		{
			[Token(Token = "0x6001F9F")]
			[Address(RVA = "0x10CECB4", Offset = "0x10CECB4", VA = "0x10CECB4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002C5")]
		public float SegmentLength
		{
			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0x10CE888", Offset = "0x10CE888", VA = "0x10CE888")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x10CECC4", Offset = "0x10CECC4", VA = "0x10CECC4")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x10CECDC", Offset = "0x10CECDC", VA = "0x10CECDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x10CE8C8", Offset = "0x10CE8C8", VA = "0x10CE8C8")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x10CECE0", Offset = "0x10CECE0", VA = "0x10CECE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x10CECE4", Offset = "0x10CECE4", VA = "0x10CECE4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x10CED50", Offset = "0x10CED50", VA = "0x10CED50")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x10CF8D8", Offset = "0x10CF8D8", VA = "0x10CF8D8")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x10CFC04", Offset = "0x10CFC04", VA = "0x10CFC04")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20004FC")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20006F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD892C", Offset = "0xBD892C")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x40021B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x40021B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170003BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600272D")]
				[Address(RVA = "0x10D0870", Offset = "0x10D0870", VA = "0x10D0870", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600272F")]
				[Address(RVA = "0x10D08D8", Offset = "0x10D08D8", VA = "0x10D08D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600272A")]
			[Address(RVA = "0x10D05D8", Offset = "0x10D05D8", VA = "0x10D05D8")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600272B")]
			[Address(RVA = "0x10D06B4", Offset = "0x10D06B4", VA = "0x10D06B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600272C")]
			[Address(RVA = "0x10D06B8", Offset = "0x10D06B8", VA = "0x10D06B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600272E")]
			[Address(RVA = "0x10D0878", Offset = "0x10D0878", VA = "0x10D0878", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019F1")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x40019F2")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x10CFCCC", Offset = "0x10CFCCC", VA = "0x10CFCCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x10CFD8C", Offset = "0x10CFD8C", VA = "0x10CFD8C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0x10CFE40", Offset = "0x10CFE40", VA = "0x10CFE40")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0x10CFF6C", Offset = "0x10CFF6C", VA = "0x10CFF6C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0x10D00DC", Offset = "0x10D00DC", VA = "0x10D00DC")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0x10D0278", Offset = "0x10D0278", VA = "0x10D0278")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0x10D0504", Offset = "0x10D0504", VA = "0x10D0504")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0x10D038C", Offset = "0x10D038C", VA = "0x10D038C")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0x10D03A0", Offset = "0x10D03A0", VA = "0x10D03A0")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x10D055C", Offset = "0x10D055C", VA = "0x10D055C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEB3E8", Offset = "0xBEB3E8")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0x10D0604", Offset = "0x10D0604", VA = "0x10D0604")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170002C6")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6001FB4")]
			[Address(RVA = "0x10D08E0", Offset = "0x10D08E0", VA = "0x10D08E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x10D08F0", Offset = "0x10D08F0", VA = "0x10D08F0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x10D08F8", Offset = "0x10D08F8", VA = "0x10D08F8", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x10D0D64", Offset = "0x10D0D64", VA = "0x10D0D64")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20004FE")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4001A05")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4001A06")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE5A8C", Offset = "0xBE5A8C")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x170002C7")]
		public float Distance
		{
			[Token(Token = "0x6001FB8")]
			[Address(RVA = "0x10D0E74", Offset = "0x10D0E74", VA = "0x10D0E74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB44C", Offset = "0xBEB44C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FB9")]
			[Address(RVA = "0x10D0E7C", Offset = "0x10D0E7C", VA = "0x10D0E7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB45C", Offset = "0xBEB45C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002C8")]
		public float Scale
		{
			[Token(Token = "0x6001FBA")]
			[Address(RVA = "0x10D0E84", Offset = "0x10D0E84", VA = "0x10D0E84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FBB")]
			[Address(RVA = "0x10D0E8C", Offset = "0x10D0E8C", VA = "0x10D0E8C")]
			set
			{
			}
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x10D08F4", Offset = "0x10D08F4", VA = "0x10D08F4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x10D0E94", Offset = "0x10D0E94", VA = "0x10D0E94")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x10D0940", Offset = "0x10D0940", VA = "0x10D0940")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x10D0C18", Offset = "0x10D0C18", VA = "0x10D0C18")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6001FC0")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x10D0DD4", Offset = "0x10D0DD4", VA = "0x10D0DD4")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20004FF")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20006F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD893C", Offset = "0xBD893C")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x40021B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x40021B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x40021B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x40021B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x40021BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x40021BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x40021BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x40021BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x40021BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170003C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002733")]
				[Address(RVA = "0x10D188C", Offset = "0x10D188C", VA = "0x10D188C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002735")]
				[Address(RVA = "0x10D18F4", Offset = "0x10D18F4", VA = "0x10D18F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002730")]
			[Address(RVA = "0x10D1490", Offset = "0x10D1490", VA = "0x10D1490")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002731")]
			[Address(RVA = "0x10D1628", Offset = "0x10D1628", VA = "0x10D1628", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002732")]
			[Address(RVA = "0x10D162C", Offset = "0x10D162C", VA = "0x10D162C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002734")]
			[Address(RVA = "0x10D1894", Offset = "0x10D1894", VA = "0x10D1894", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x10D1064", Offset = "0x10D1064", VA = "0x10D1064")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x10D10C4", Offset = "0x10D10C4", VA = "0x10D10C4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x10D11D0", Offset = "0x10D11D0", VA = "0x10D11D0")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0x10D1328", Offset = "0x10D1328", VA = "0x10D1328")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x10D1230", Offset = "0x10D1230", VA = "0x10D1230")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x10D1404", Offset = "0x10D1404", VA = "0x10D1404")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEB46C", Offset = "0xBEB46C")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x10D14BC", Offset = "0x10D14BC", VA = "0x10D14BC")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x10D1568", Offset = "0x10D1568", VA = "0x10D1568")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0x10D15C8", Offset = "0x10D15C8", VA = "0x10D15C8")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000500")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20006F4")]
		private enum EngineSoundState
		{
			[Token(Token = "0x40021C0")]
			Start,
			[Token(Token = "0x40021C1")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x40021C2")]
			Stop
		}

		[Token(Token = "0x20006F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD894C", Offset = "0xBD894C")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x40021C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x40021C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x40021C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x40021C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40021CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x40021CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170003C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002739")]
				[Address(RVA = "0x10D224C", Offset = "0x10D224C", VA = "0x10D224C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600273B")]
				[Address(RVA = "0x10D22B4", Offset = "0x10D22B4", VA = "0x10D22B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002736")]
			[Address(RVA = "0x10D1BCC", Offset = "0x10D1BCC", VA = "0x10D1BCC")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6002737")]
			[Address(RVA = "0x10D2010", Offset = "0x10D2010", VA = "0x10D2010", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002738")]
			[Address(RVA = "0x10D2014", Offset = "0x10D2014", VA = "0x10D2014", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600273A")]
			[Address(RVA = "0x10D2254", Offset = "0x10D2254", VA = "0x10D2254", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A19")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4001A1A")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4001A1B")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4001A1C")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE5AEC", Offset = "0xBE5AEC")]
		protected float _initialSpeed;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x10D18FC", Offset = "0x10D18FC", VA = "0x10D18FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x10D1A6C", Offset = "0x10D1A6C", VA = "0x10D1A6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x10D1A78", Offset = "0x10D1A78", VA = "0x10D1A78", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x10C2C4C", Offset = "0x10C2C4C", VA = "0x10C2C4C")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x10D19DC", Offset = "0x10D19DC", VA = "0x10D19DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEB4D0", Offset = "0xBEB4D0")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x10D1BF8", Offset = "0x10D1BF8", VA = "0x10D1BF8")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x10D1B68", Offset = "0x10D1B68", VA = "0x10D1B68")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x10C2CE0", Offset = "0x10C2CE0", VA = "0x10C2CE0")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x10C2DD0", Offset = "0x10C2DD0", VA = "0x10C2DD0")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x10D1E2C", Offset = "0x10D1E2C", VA = "0x10D1E2C")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x10D1F1C", Offset = "0x10D1F1C", VA = "0x10D1F1C")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0x10C2EC0", Offset = "0x10C2EC0", VA = "0x10C2EC0")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x10C2F80", Offset = "0x10C2F80", VA = "0x10C2F80")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x10C3074", Offset = "0x10C3074", VA = "0x10C3074")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x10D1FA4", Offset = "0x10D1FA4", VA = "0x10D1FA4")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000501")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170002C9")]
		public float TrackLength
		{
			[Token(Token = "0x6001FDB")]
			[Address(RVA = "0x10D22BC", Offset = "0x10D22BC", VA = "0x10D22BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FDC")]
			[Address(RVA = "0x10D22C4", Offset = "0x10D22C4", VA = "0x10D22C4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x10D22CC", Offset = "0x10D22CC", VA = "0x10D22CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x10D0F14", Offset = "0x10D0F14", VA = "0x10D0F14")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x10D22D0", Offset = "0x10D22D0", VA = "0x10D22D0")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x10D24DC", Offset = "0x10D24DC", VA = "0x10D24DC")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x10D25F8", Offset = "0x10D25F8", VA = "0x10D25F8")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000502")]
	public class Pose
	{
		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x10CC420", Offset = "0x10CC420", VA = "0x10CC420")]
		public Pose()
		{
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x10CC4CC", Offset = "0x10CC4CC", VA = "0x10CC4CC")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000503")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20006F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD895C", Offset = "0xBD895C")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40021CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x40021D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x40021D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170003C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600273F")]
				[Address(RVA = "0x10D2C44", Offset = "0x10D2C44", VA = "0x10D2C44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002741")]
				[Address(RVA = "0x10D2CAC", Offset = "0x10D2CAC", VA = "0x10D2CAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600273C")]
			[Address(RVA = "0x10D28B8", Offset = "0x10D28B8", VA = "0x10D28B8")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600273D")]
			[Address(RVA = "0x10D2A40", Offset = "0x10D2A40", VA = "0x10D2A40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600273E")]
			[Address(RVA = "0x10D2A44", Offset = "0x10D2A44", VA = "0x10D2A44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002740")]
			[Address(RVA = "0x10D2C4C", Offset = "0x10D2C4C", VA = "0x10D2C4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD896C", Offset = "0xBD896C")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40021D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x40021D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x40021D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170003C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002745")]
				[Address(RVA = "0x10D2D8C", Offset = "0x10D2D8C", VA = "0x10D2D8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002747")]
				[Address(RVA = "0x10D2DF4", Offset = "0x10D2DF4", VA = "0x10D2DF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002742")]
			[Address(RVA = "0x10D29A0", Offset = "0x10D29A0", VA = "0x10D29A0")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002743")]
			[Address(RVA = "0x10D2CB4", Offset = "0x10D2CB4", VA = "0x10D2CB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002744")]
			[Address(RVA = "0x10D2CB8", Offset = "0x10D2CB8", VA = "0x10D2CB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002746")]
			[Address(RVA = "0x10D2D94", Offset = "0x10D2D94", VA = "0x10D2D94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A3F")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE5CD4", Offset = "0xBE5CD4")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x170002CA")]
		public bool IsMoving
		{
			[Token(Token = "0x6001FE4")]
			[Address(RVA = "0x10D2614", Offset = "0x10D2614", VA = "0x10D2614")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB534", Offset = "0xBEB534")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FE5")]
			[Address(RVA = "0x10D261C", Offset = "0x10D261C", VA = "0x10D261C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB544", Offset = "0xBEB544")]
			private set
			{
			}
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x10D2628", Offset = "0x10D2628", VA = "0x10D2628")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0x10D2664", Offset = "0x10D2664", VA = "0x10D2664")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0x10D27B8", Offset = "0x10D27B8", VA = "0x10D27B8")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0x10D282C", Offset = "0x10D282C", VA = "0x10D282C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEB554", Offset = "0xBEB554")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x10D28E4", Offset = "0x10D28E4", VA = "0x10D28E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEB5B8", Offset = "0xBEB5B8")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x10D29CC", Offset = "0x10D29CC", VA = "0x10D29CC")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x10D2A38", Offset = "0x10D2A38", VA = "0x10D2A38")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000504")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0x10D2DFC", Offset = "0x10D2DFC", VA = "0x10D2DFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x10D2E74", Offset = "0x10D2E74", VA = "0x10D2E74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x10D2F2C", Offset = "0x10D2F2C", VA = "0x10D2F2C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x10D302C", Offset = "0x10D302C", VA = "0x10D302C")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x10D30AC", Offset = "0x10D30AC", VA = "0x10D30AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0x10D3188", Offset = "0x10D3188", VA = "0x10D3188")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000505")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4001A50")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4001A51")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4001A52")]
		EUDT_None,
		[Token(Token = "0x4001A53")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000506")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20006F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD897C", Offset = "0xBD897C")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170003C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600274B")]
				[Address(RVA = "0x10CB7DC", Offset = "0x10CB7DC", VA = "0x10CB7DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600274D")]
				[Address(RVA = "0x10CB844", Offset = "0x10CB844", VA = "0x10CB844", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002748")]
			[Address(RVA = "0x10CAE30", Offset = "0x10CAE30", VA = "0x10CAE30")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6002749")]
			[Address(RVA = "0x10CB574", Offset = "0x10CB574", VA = "0x10CB574", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600274A")]
			[Address(RVA = "0x10CB578", Offset = "0x10CB578", VA = "0x10CB578", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600274C")]
			[Address(RVA = "0x10CB7E4", Offset = "0x10CB7E4", VA = "0x10CB7E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4001A55")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4001A56")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4001A57")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE5D14", Offset = "0xBE5D14")]
		public GameObject mainCamera;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE5D4C", Offset = "0xBE5D4C")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x10CA0F8", Offset = "0x10CA0F8", VA = "0x10CA0F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x10CA934", Offset = "0x10CA934", VA = "0x10CA934")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0x10CAA74", Offset = "0x10CAA74", VA = "0x10CAA74")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0x10CABA8", Offset = "0x10CABA8", VA = "0x10CABA8")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x10CACDC", Offset = "0x10CACDC", VA = "0x10CACDC")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x10CAA48", Offset = "0x10CAA48", VA = "0x10CAA48")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x10CADB4", Offset = "0x10CADB4", VA = "0x10CADB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEB61C", Offset = "0xBEB61C")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x10CAE5C", Offset = "0x10CAE5C", VA = "0x10CAE5C")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0x10CA47C", Offset = "0x10CA47C", VA = "0x10CA47C")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x10CAF84", Offset = "0x10CAF84", VA = "0x10CAF84")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x10CAE90", Offset = "0x10CAE90", VA = "0x10CAE90")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x10CB320", Offset = "0x10CB320", VA = "0x10CB320")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x10CB3FC", Offset = "0x10CB3FC", VA = "0x10CB3FC")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0x10CB484", Offset = "0x10CB484", VA = "0x10CB484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB680", Offset = "0xBEB680")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x10CB4D4", Offset = "0x10CB4D4", VA = "0x10CB4D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB690", Offset = "0xBEB690")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0x10CB524", Offset = "0x10CB524", VA = "0x10CB524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEB6A0", Offset = "0xBEB6A0")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000507")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD6E18", Offset = "0xBD6E18")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD898C", Offset = "0xBD898C")]
		private sealed class <>c
		{
			[Token(Token = "0x40021DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40021DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x600274F")]
			[Address(RVA = "0x1478444", Offset = "0x1478444", VA = "0x1478444")]
			public <>c()
			{
			}

			[Token(Token = "0x6002750")]
			[Address(RVA = "0x147844C", Offset = "0x147844C", VA = "0x147844C")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001A6C")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4001A6D")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001A6E")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4001A6F")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4001A70")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4001A71")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4001A72")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4001A73")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4001A74")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4001A75")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4001A76")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x147765C", Offset = "0x147765C", VA = "0x147765C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x14776BC", Offset = "0x14776BC", VA = "0x14776BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x1477AE4", Offset = "0x1477AE4", VA = "0x1477AE4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x1477BB0", Offset = "0x1477BB0", VA = "0x1477BB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x1477CBC", Offset = "0x1477CBC", VA = "0x1477CBC")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x1477FF4", Offset = "0x1477FF4", VA = "0x1477FF4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x147815C", Offset = "0x147815C", VA = "0x147815C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x14782A8", Offset = "0x14782A8", VA = "0x14782A8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x1477D58", Offset = "0x1477D58", VA = "0x1477D58")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x1477DF8", Offset = "0x1477DF8", VA = "0x1477DF8")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x1477938", Offset = "0x1477938", VA = "0x1477938")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x14783C4", Offset = "0x14783C4", VA = "0x14783C4")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000508")]
	public enum HandPoseId
	{
		[Token(Token = "0x4001A89")]
		Default,
		[Token(Token = "0x4001A8A")]
		Generic,
		[Token(Token = "0x4001A8B")]
		PingPongBall,
		[Token(Token = "0x4001A8C")]
		Controller
	}
	[Token(Token = "0x2000509")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170002CB")]
		public bool AllowPointing
		{
			[Token(Token = "0x600200F")]
			[Address(RVA = "0x1478478", Offset = "0x1478478", VA = "0x1478478")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CC")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6002010")]
			[Address(RVA = "0x1478480", Offset = "0x1478480", VA = "0x1478480")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CD")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6002011")]
			[Address(RVA = "0x1478488", Offset = "0x1478488", VA = "0x1478488")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0x1478490", Offset = "0x1478490", VA = "0x1478490")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x200050A")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6002013")]
		[Address(RVA = "0x1478498", Offset = "0x1478498", VA = "0x1478498")]
		private void Update()
		{
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0x147870C", Offset = "0x147870C", VA = "0x147870C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x1478768", Offset = "0x1478768", VA = "0x1478768")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0x14787AC", Offset = "0x14787AC", VA = "0x14787AC")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x200050B")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4001A94")]
		TRIANGLES,
		[Token(Token = "0x4001A95")]
		QUADS
	}
	[Token(Token = "0x200050C")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4001A97")]
		ABSORPTION,
		[Token(Token = "0x4001A98")]
		TRANSMISSION,
		[Token(Token = "0x4001A99")]
		SCATTERING
	}
	[Token(Token = "0x200050D")]
	public struct MeshGroup
	{
		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x200050E")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4001A9E")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4001A9F")]
		public const string Tab = "    ";

		[Token(Token = "0x6002017")]
		[Address(RVA = "0x1478D74", Offset = "0x1478D74", VA = "0x1478D74")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBEB6B0", Offset = "0xBEB6B0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBEB6B0", Offset = "0xBEB6B0")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0x1478DFC", Offset = "0x1478DFC", VA = "0x1478DFC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBEB710", Offset = "0xBEB710")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBEB710", Offset = "0xBEB710")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x1478E94", Offset = "0x1478E94", VA = "0x1478E94")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBEB770", Offset = "0xBEB770")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBEB770", Offset = "0xBEB770")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x1478F1C", Offset = "0x1478F1C", VA = "0x1478F1C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBEB7D0", Offset = "0xBEB7D0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBEB7D0", Offset = "0xBEB7D0")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x1478FA4", Offset = "0x1478FA4", VA = "0x1478FA4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBEB830", Offset = "0xBEB830")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBEB830", Offset = "0xBEB830")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x200050F")]
	public class CAPI
	{
		[Token(Token = "0x20006FA")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x20006FB")]
		public enum Result
		{
			[Token(Token = "0x40021DE")]
			Success = 0,
			[Token(Token = "0x40021DF")]
			Failure = -1000,
			[Token(Token = "0x40021E0")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x40021E1")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x40021E2")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x40021E3")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x40021E4")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x40021E5")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x40021E6")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x20006FC")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x40021E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6002755")]
			[Address(RVA = "0x10C10E8", Offset = "0x10C10E8", VA = "0x10C10E8")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4001AA0")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4001AA8")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x600201C")]
		[Address(RVA = "0x14790A4", Offset = "0x14790A4", VA = "0x14790A4")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x1479134", Offset = "0x1479134", VA = "0x1479134")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x14792FC", Offset = "0x14792FC", VA = "0x14792FC")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x600201F")]
		[Address(RVA = "0x14793E0", Offset = "0x14793E0", VA = "0x14793E0")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6002020")]
		[Address(RVA = "0x1479450", Offset = "0x1479450", VA = "0x1479450")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6002021")]
		[Address(RVA = "0x14794C4", Offset = "0x14794C4", VA = "0x14794C4")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x1479544", Offset = "0x1479544", VA = "0x1479544")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6002023")]
		[Address(RVA = "0x147965C", Offset = "0x147965C", VA = "0x147965C")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x14796DC", Offset = "0x14796DC", VA = "0x14796DC")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6002025")]
		[Address(RVA = "0x14797F4", Offset = "0x14797F4", VA = "0x14797F4")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6002026")]
		[Address(RVA = "0x1479874", Offset = "0x1479874", VA = "0x1479874")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6002027")]
		[Address(RVA = "0x14798F4", Offset = "0x14798F4", VA = "0x14798F4")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6002028")]
		[Address(RVA = "0x1479974", Offset = "0x1479974", VA = "0x1479974")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6002029")]
		[Address(RVA = "0x14799F4", Offset = "0x14799F4", VA = "0x14799F4")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x600202A")]
		[Address(RVA = "0x1479A84", Offset = "0x1479A84", VA = "0x1479A84")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x600202B")]
		[Address(RVA = "0x1479B14", Offset = "0x1479B14", VA = "0x1479B14")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x600202C")]
		[Address(RVA = "0x1479BA4", Offset = "0x1479BA4", VA = "0x1479BA4")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600202D")]
		[Address(RVA = "0x1479C24", Offset = "0x1479C24", VA = "0x1479C24")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x600202E")]
		[Address(RVA = "0x1479CA4", Offset = "0x1479CA4", VA = "0x1479CA4")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x600202F")]
		[Address(RVA = "0x1479D34", Offset = "0x1479D34", VA = "0x1479D34")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6002030")]
		[Address(RVA = "0x1479DC4", Offset = "0x1479DC4", VA = "0x1479DC4")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6002031")]
		[Address(RVA = "0x1479E54", Offset = "0x1479E54", VA = "0x1479E54")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6002032")]
		[Address(RVA = "0x1479ED4", Offset = "0x1479ED4", VA = "0x1479ED4")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x1479F74", Offset = "0x1479F74", VA = "0x1479F74")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002034")]
		[Address(RVA = "0x1479FF4", Offset = "0x1479FF4", VA = "0x1479FF4")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6002035")]
		[Address(RVA = "0x147A094", Offset = "0x147A094", VA = "0x147A094")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6002036")]
		[Address(RVA = "0x147A154", Offset = "0x147A154", VA = "0x147A154")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6002037")]
		[Address(RVA = "0x147A224", Offset = "0x147A224", VA = "0x147A224")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6002038")]
		[Address(RVA = "0x147A2B4", Offset = "0x147A2B4", VA = "0x147A2B4")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6002039")]
		[Address(RVA = "0x147A344", Offset = "0x147A344", VA = "0x147A344")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600203A")]
		[Address(RVA = "0x147A3D4", Offset = "0x147A3D4", VA = "0x147A3D4")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600203B")]
		[Address(RVA = "0x147A464", Offset = "0x147A464", VA = "0x147A464")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600203C")]
		[Address(RVA = "0x147A4F4", Offset = "0x147A4F4", VA = "0x147A4F4")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x600203D")]
		[Address(RVA = "0x147A574", Offset = "0x147A574", VA = "0x147A574")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0x147A694", Offset = "0x147A694", VA = "0x147A694")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600203F")]
		[Address(RVA = "0x147A604", Offset = "0x147A604", VA = "0x147A604")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6002040")]
		[Address(RVA = "0x147A894", Offset = "0x147A894", VA = "0x147A894")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6002041")]
		[Address(RVA = "0x147A9CC", Offset = "0x147A9CC", VA = "0x147A9CC")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6002042")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0x147AA4C", Offset = "0x147AA4C", VA = "0x147AA4C")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6002044")]
		[Address(RVA = "0x147ACBC", Offset = "0x147ACBC", VA = "0x147ACBC")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6002045")]
		[Address(RVA = "0x147AD3C", Offset = "0x147AD3C", VA = "0x147AD3C")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6002046")]
		[Address(RVA = "0x147AE74", Offset = "0x147AE74", VA = "0x147AE74")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6002047")]
		[Address(RVA = "0x147AEF4", Offset = "0x147AEF4", VA = "0x147AEF4")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6002048")]
		[Address(RVA = "0x147B02C", Offset = "0x147B02C", VA = "0x147B02C")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6002049")]
		[Address(RVA = "0x147B0AC", Offset = "0x147B0AC", VA = "0x147B0AC")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600204A")]
		[Address(RVA = "0x147B1E4", Offset = "0x147B1E4", VA = "0x147B1E4")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x147B264", Offset = "0x147B264", VA = "0x147B264")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600204C")]
		[Address(RVA = "0x147B39C", Offset = "0x147B39C", VA = "0x147B39C")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600204D")]
		[Address(RVA = "0x147B41C", Offset = "0x147B41C", VA = "0x147B41C")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x600204E")]
		[Address(RVA = "0x147B49C", Offset = "0x147B49C", VA = "0x147B49C")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x600204F")]
		[Address(RVA = "0x147B534", Offset = "0x147B534", VA = "0x147B534")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6002050")]
		[Address(RVA = "0x147B5B4", Offset = "0x147B5B4", VA = "0x147B5B4")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0x147B760", Offset = "0x147B760", VA = "0x147B760")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6002052")]
		[Address(RVA = "0x147B88C", Offset = "0x147B88C", VA = "0x147B88C")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6002053")]
		[Address(RVA = "0x147B6E0", Offset = "0x147B6E0", VA = "0x147B6E0")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6002054")]
		[Address(RVA = "0x147B90C", Offset = "0x147B90C", VA = "0x147B90C")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6002055")]
		[Address(RVA = "0x147B98C", Offset = "0x147B98C", VA = "0x147B98C")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6002056")]
		[Address(RVA = "0x147BA1C", Offset = "0x147BA1C", VA = "0x147BA1C")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6002057")]
		[Address(RVA = "0x147BA9C", Offset = "0x147BA9C", VA = "0x147BA9C")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6002058")]
		[Address(RVA = "0x147BB2C", Offset = "0x147BB2C", VA = "0x147BB2C")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6002059")]
		[Address(RVA = "0x147BBAC", Offset = "0x147BBAC", VA = "0x147BBAC")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x600205A")]
		[Address(RVA = "0x147BC2C", Offset = "0x147BC2C", VA = "0x147BC2C")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600205B")]
		[Address(RVA = "0x147BE68", Offset = "0x147BE68", VA = "0x147BE68")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x600205C")]
		[Address(RVA = "0x147BEF8", Offset = "0x147BEF8", VA = "0x147BEF8")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600205D")]
		[Address(RVA = "0x147C0E4", Offset = "0x147C0E4", VA = "0x147C0E4")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x600205E")]
		[Address(RVA = "0x147C17C", Offset = "0x147C17C", VA = "0x147C17C")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x600205F")]
		[Address(RVA = "0x147C2A0", Offset = "0x147C2A0", VA = "0x147C2A0")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6002060")]
		[Address(RVA = "0x147C320", Offset = "0x147C320", VA = "0x147C320")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6002061")]
		[Address(RVA = "0x147C3A0", Offset = "0x147C3A0", VA = "0x147C3A0")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6002062")]
		[Address(RVA = "0x147C4C8", Offset = "0x147C4C8", VA = "0x147C4C8")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6002063")]
		[Address(RVA = "0x147C548", Offset = "0x147C548", VA = "0x147C548")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6002064")]
		[Address(RVA = "0x147C670", Offset = "0x147C670", VA = "0x147C670")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002065")]
		[Address(RVA = "0x147C6F0", Offset = "0x147C6F0", VA = "0x147C6F0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002066")]
		[Address(RVA = "0x147C780", Offset = "0x147C780", VA = "0x147C780")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002067")]
		[Address(RVA = "0x147C810", Offset = "0x147C810", VA = "0x147C810")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002068")]
		[Address(RVA = "0x147C8A0", Offset = "0x147C8A0", VA = "0x147C8A0")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002069")]
		[Address(RVA = "0x147C920", Offset = "0x147C920", VA = "0x147C920")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600206A")]
		[Address(RVA = "0x147C9A8", Offset = "0x147C9A8", VA = "0x147C9A8")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600206B")]
		[Address(RVA = "0x147CA30", Offset = "0x147CA30", VA = "0x147CA30")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600206C")]
		[Address(RVA = "0x147CAB0", Offset = "0x147CAB0", VA = "0x147CAB0")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600206D")]
		[Address(RVA = "0x147CB30", Offset = "0x147CB30", VA = "0x147CB30")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600206E")]
		[Address(RVA = "0x147CBE4", Offset = "0x147CBE4", VA = "0x147CBE4")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600206F")]
		[Address(RVA = "0x147CC74", Offset = "0x147CC74", VA = "0x147CC74")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6002070")]
		[Address(RVA = "0x147CD04", Offset = "0x147CD04", VA = "0x147CD04")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002071")]
		[Address(RVA = "0x147CD84", Offset = "0x147CD84", VA = "0x147CD84")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002072")]
		[Address(RVA = "0x147CE04", Offset = "0x147CE04", VA = "0x147CE04")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002073")]
		[Address(RVA = "0x147CE84", Offset = "0x147CE84", VA = "0x147CE84")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6002074")]
		[Address(RVA = "0x147CF1C", Offset = "0x147CF1C", VA = "0x147CF1C")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6002075")]
		[Address(RVA = "0x147CFAC", Offset = "0x147CFAC", VA = "0x147CFAC")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6002076")]
		[Address(RVA = "0x147D03C", Offset = "0x147D03C", VA = "0x147D03C")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6002077")]
		[Address(RVA = "0x147D0CC", Offset = "0x147D0CC", VA = "0x147D0CC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6002078")]
		[Address(RVA = "0x147D164", Offset = "0x147D164", VA = "0x147D164")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6002079")]
		[Address(RVA = "0x147D1FC", Offset = "0x147D1FC", VA = "0x147D1FC")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600207A")]
		[Address(RVA = "0x147D27C", Offset = "0x147D27C", VA = "0x147D27C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x600207B")]
		[Address(RVA = "0x147D2FC", Offset = "0x147D2FC", VA = "0x147D2FC")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x600207C")]
		[Address(RVA = "0x147D424", Offset = "0x147D424", VA = "0x147D424")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x600207D")]
		[Address(RVA = "0x147D4A4", Offset = "0x147D4A4", VA = "0x147D4A4")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x600207E")]
		[Address(RVA = "0x147D5CC", Offset = "0x147D5CC", VA = "0x147D5CC")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x600207F")]
		[Address(RVA = "0x147D64C", Offset = "0x147D64C", VA = "0x147D64C")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002080")]
		[Address(RVA = "0x147D774", Offset = "0x147D774", VA = "0x147D774")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6002081")]
		[Address(RVA = "0x147D7F4", Offset = "0x147D7F4", VA = "0x147D7F4")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0x147D99C", Offset = "0x147D99C", VA = "0x147D99C")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002083")]
		[Address(RVA = "0x147DC38", Offset = "0x147DC38", VA = "0x147DC38")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6002084")]
		[Address(RVA = "0x147D91C", Offset = "0x147D91C", VA = "0x147D91C")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002085")]
		[Address(RVA = "0x147DCC8", Offset = "0x147DCC8", VA = "0x147DCC8")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6002086")]
		[Address(RVA = "0x147DD48", Offset = "0x147DD48", VA = "0x147DD48")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6002087")]
		[Address(RVA = "0x147DDD8", Offset = "0x147DDD8", VA = "0x147DDD8")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6002088")]
		[Address(RVA = "0x147DE68", Offset = "0x147DE68", VA = "0x147DE68")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6002089")]
		[Address(RVA = "0x147DEF8", Offset = "0x147DEF8", VA = "0x147DEF8")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x600208A")]
		[Address(RVA = "0x147DF98", Offset = "0x147DF98", VA = "0x147DF98")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x600208B")]
		[Address(RVA = "0x147E038", Offset = "0x147E038", VA = "0x147E038")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x600208C")]
		[Address(RVA = "0x147E0D8", Offset = "0x147E0D8", VA = "0x147E0D8")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600208D")]
		[Address(RVA = "0x147E158", Offset = "0x147E158", VA = "0x147E158")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600208E")]
		[Address(RVA = "0x147E1D8", Offset = "0x147E1D8", VA = "0x147E1D8")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600208F")]
		[Address(RVA = "0x147E258", Offset = "0x147E258", VA = "0x147E258")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6002090")]
		[Address(RVA = "0x147E2D8", Offset = "0x147E2D8", VA = "0x147E2D8")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6002091")]
		[Address(RVA = "0x147E358", Offset = "0x147E358", VA = "0x147E358")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6002092")]
		[Address(RVA = "0x147E480", Offset = "0x147E480", VA = "0x147E480")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6002093")]
		[Address(RVA = "0x147E518", Offset = "0x147E518", VA = "0x147E518")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6002094")]
		[Address(RVA = "0x147E598", Offset = "0x147E598", VA = "0x147E598")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0x147E5FC", Offset = "0x147E5FC", VA = "0x147E5FC")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002096")]
		[Address(RVA = "0x147E718", Offset = "0x147E718", VA = "0x147E718")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6002097")]
		[Address(RVA = "0x147E7A8", Offset = "0x147E7A8", VA = "0x147E7A8")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002098")]
		[Address(RVA = "0x147E8EC", Offset = "0x147E8EC", VA = "0x147E8EC")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6002099")]
		[Address(RVA = "0x147E97C", Offset = "0x147E97C", VA = "0x147E97C")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x600209A")]
		[Address(RVA = "0x147EA1C", Offset = "0x147EA1C", VA = "0x147EA1C")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600209B")]
		[Address(RVA = "0x147EDB4", Offset = "0x147EDB4", VA = "0x147EDB4")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x600209C")]
		[Address(RVA = "0x147EE34", Offset = "0x147EE34", VA = "0x147EE34")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x600209D")]
		[Address(RVA = "0x147EECC", Offset = "0x147EECC", VA = "0x147EECC")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600209E")]
		[Address(RVA = "0x147F694", Offset = "0x147F694", VA = "0x147F694")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x600209F")]
		[Address(RVA = "0x147F714", Offset = "0x147F714", VA = "0x147F714")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x147903C", Offset = "0x147903C", VA = "0x147903C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBEB890", Offset = "0xBEB890")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60020A1")]
		[Address(RVA = "0x147F7AC", Offset = "0x147F7AC", VA = "0x147F7AC")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x147F830", Offset = "0x147F830", VA = "0x147F830")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x60020A3")]
		[Address(RVA = "0x147F8B0", Offset = "0x147F8B0", VA = "0x147F8B0")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60020A4")]
		[Address(RVA = "0x147F930", Offset = "0x147F930", VA = "0x147F930")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x147F9B0", Offset = "0x147F9B0", VA = "0x147F9B0")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x1480390", Offset = "0x1480390", VA = "0x1480390")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x1480410", Offset = "0x1480410", VA = "0x1480410")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60020A8")]
		[Address(RVA = "0x1480818", Offset = "0x1480818", VA = "0x1480818")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0x1480788", Offset = "0x1480788", VA = "0x1480788")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0x148088C", Offset = "0x148088C", VA = "0x148088C")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x2000510")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0xBE5E04", Offset = "0xBE5E04")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0x146E45C", Offset = "0x146E45C", VA = "0x146E45C")]
		private void Start()
		{
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0x146E460", Offset = "0x146E460", VA = "0x146E460")]
		private void Update()
		{
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0x146E520", Offset = "0x146E520", VA = "0x146E520")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x2000511")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE5E50", Offset = "0xBE5E50")]
		public bool autoRetrigger;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xBE5E88", Offset = "0xBE5E88")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE5EAC", Offset = "0xBE5EAC")]
		public Transform[] playPositions;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0x14650F8", Offset = "0x14650F8", VA = "0x14650F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0x14652A8", Offset = "0x14652A8", VA = "0x14652A8")]
		private void Update()
		{
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0x1465484", Offset = "0x1465484", VA = "0x1465484")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0x1465308", Offset = "0x1465308", VA = "0x1465308")]
		public void Play()
		{
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0x14655C4", Offset = "0x14655C4", VA = "0x14655C4")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x1465738", Offset = "0x1465738", VA = "0x1465738")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x2000512")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4001AB7")]
		Default,
		[Token(Token = "0x4001AB8")]
		Preload,
		[Token(Token = "0x4001AB9")]
		ManualPreload
	}
	[Token(Token = "0x2000513")]
	public enum Fade
	{
		[Token(Token = "0x4001ABB")]
		In,
		[Token(Token = "0x4001ABC")]
		Out
	}
	[Serializable]
	[Token(Token = "0x2000514")]
	public class SoundGroup
	{
		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE5EE4", Offset = "0xBE5EE4")]
		public int maxPlayingSounds;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x146E2EC", Offset = "0x146E2EC", VA = "0x146E2EC")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x146E3A0", Offset = "0x146E3A0", VA = "0x146E3A0")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x146CCAC", Offset = "0x146CCAC", VA = "0x146CCAC")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x146CDEC", Offset = "0x146CDEC", VA = "0x146CDEC")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x146D908", Offset = "0x146D908", VA = "0x146D908")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000515")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20006FD")]
		public enum Fade
		{
			[Token(Token = "0x40021E9")]
			In,
			[Token(Token = "0x40021EA")]
			Out
		}

		[Token(Token = "0x20006FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD899C", Offset = "0xBD899C")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x40021EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6002757")]
			[Address(RVA = "0x1469AE8", Offset = "0x1469AE8", VA = "0x1469AE8")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x6002758")]
			[Address(RVA = "0x146C730", Offset = "0x146C730", VA = "0x146C730")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20006FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD89AC", Offset = "0xBD89AC")]
		private sealed class <>c
		{
			[Token(Token = "0x40021EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40021ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x600275A")]
			[Address(RVA = "0x146C698", Offset = "0x146C698", VA = "0x146C698")]
			public <>c()
			{
			}

			[Token(Token = "0x600275B")]
			[Address(RVA = "0x146C6A0", Offset = "0x146C6A0", VA = "0x146C6A0")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE5F10", Offset = "0xBE5F10")]
		public bool makePersistent;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE5F48", Offset = "0xBE5F48")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE5F80", Offset = "0xBE5F80")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE5FB8", Offset = "0xBE5FB8")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE5FF0", Offset = "0xBE5FF0")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6028", Offset = "0xBE6028")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6060", Offset = "0xBE6060")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6098", Offset = "0xBE6098")]
		public bool verboseLogging;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE60D0", Offset = "0xBE60D0")]
		public int maxSoundEmitters;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6108", Offset = "0xBE6108")]
		public float volumeSoundFX;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6140", Offset = "0xBE6140")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170002CE")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x60020BA")]
			[Address(RVA = "0x1465810", Offset = "0x1465810", VA = "0x1465810")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CF")]
		public static AudioManager Instance
		{
			[Token(Token = "0x60020BB")]
			[Address(RVA = "0x14658F0", Offset = "0x14658F0", VA = "0x14658F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D0")]
		public static float NearFallOff
		{
			[Token(Token = "0x60020BC")]
			[Address(RVA = "0x1465958", Offset = "0x1465958", VA = "0x1465958")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D1")]
		public static float FarFallOff
		{
			[Token(Token = "0x60020BD")]
			[Address(RVA = "0x14659CC", Offset = "0x14659CC", VA = "0x14659CC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D2")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x60020BE")]
			[Address(RVA = "0x1465A40", Offset = "0x1465A40", VA = "0x1465A40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D3")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x60020BF")]
			[Address(RVA = "0x1465AB4", Offset = "0x1465AB4", VA = "0x1465AB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D4")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x60020C0")]
			[Address(RVA = "0x1465B28", Offset = "0x1465B28", VA = "0x1465B28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D5")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x60020CB")]
			[Address(RVA = "0x14679CC", Offset = "0x14679CC", VA = "0x14679CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x1465B9C", Offset = "0x1465B9C", VA = "0x1465B9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x1465DD0", Offset = "0x1465DD0", VA = "0x1465DD0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x1465BA0", Offset = "0x1465BA0", VA = "0x1465BA0")]
		private void Init()
		{
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x1466AF0", Offset = "0x1466AF0", VA = "0x1466AF0")]
		private void Update()
		{
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x1465F28", Offset = "0x1465F28", VA = "0x1465F28")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x1467168", Offset = "0x1467168", VA = "0x1467168")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x14672E8", Offset = "0x14672E8", VA = "0x14672E8")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x1467484", Offset = "0x1467484", VA = "0x1467484")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x1467584", Offset = "0x1467584", VA = "0x1467584")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x1467614", Offset = "0x1467614", VA = "0x1467614")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x14663DC", Offset = "0x14663DC", VA = "0x14663DC")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x1466AF4", Offset = "0x1466AF4", VA = "0x1466AF4")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x1467C80", Offset = "0x1467C80", VA = "0x1467C80")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x1467D84", Offset = "0x1467D84", VA = "0x1467D84")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x1467E8C", Offset = "0x1467E8C", VA = "0x1467E8C")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x1467B48", Offset = "0x1467B48", VA = "0x1467B48")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x1468000", Offset = "0x1468000", VA = "0x1468000")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x1468154", Offset = "0x1468154", VA = "0x1468154")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x1468304", Offset = "0x1468304", VA = "0x1468304")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x1465514", Offset = "0x1465514", VA = "0x1465514")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x1465688", Offset = "0x1465688", VA = "0x1465688")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x14684B0", Offset = "0x14684B0", VA = "0x14684B0")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x146857C", Offset = "0x146857C", VA = "0x146857C")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x1468610", Offset = "0x1468610", VA = "0x1468610")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x14686D4", Offset = "0x14686D4", VA = "0x14686D4")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x1468778", Offset = "0x1468778", VA = "0x1468778")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x1468858", Offset = "0x1468858", VA = "0x1468858")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x14693F0", Offset = "0x14693F0", VA = "0x14693F0")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x1469AF0", Offset = "0x1469AF0", VA = "0x1469AF0")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x1469CD0", Offset = "0x1469CD0", VA = "0x1469CD0")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x146AADC", Offset = "0x146AADC", VA = "0x146AADC")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x1468A60", Offset = "0x1468A60", VA = "0x1468A60")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x146ABFC", Offset = "0x146ABFC", VA = "0x146ABFC")]
		public static void SetOnFinished(int emitterIdx, System.Action onFinished)
		{
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0x146ACF4", Offset = "0x146ACF4", VA = "0x146ACF4")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x146AE38", Offset = "0x146AE38", VA = "0x146AE38")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x146B238", Offset = "0x146B238", VA = "0x146B238")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x146B44C", Offset = "0x146B44C", VA = "0x146B44C")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x146B568", Offset = "0x146B568", VA = "0x146B568")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x146B730", Offset = "0x146B730", VA = "0x146B730")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x146B808", Offset = "0x146B808", VA = "0x146B808")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x146B950", Offset = "0x146B950", VA = "0x146B950")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x146BD54", Offset = "0x146BD54", VA = "0x146BD54")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000516")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4001AE4")]
		None = -1,
		[Token(Token = "0x4001AE5")]
		Reserved,
		[Token(Token = "0x4001AE6")]
		Any
	}
	[Serializable]
	[Token(Token = "0x2000517")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x146C82C", Offset = "0x146C82C", VA = "0x146C82C")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000518")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x146C7D0", Offset = "0x146C7D0", VA = "0x146C7D0")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x2000519")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x2000700")]
		public enum FadeState
		{
			[Token(Token = "0x40021EF")]
			Null,
			[Token(Token = "0x40021F0")]
			FadingIn,
			[Token(Token = "0x40021F1")]
			FadingOut,
			[Token(Token = "0x40021F2")]
			Ducking
		}

		[Token(Token = "0x2000701")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD89BC", Offset = "0xBD89BC")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40021F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x40021F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x40021F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170003CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600275F")]
				[Address(RVA = "0x146D2F0", Offset = "0x146D2F0", VA = "0x146D2F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002761")]
				[Address(RVA = "0x146D358", Offset = "0x146D358", VA = "0x146D358", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600275C")]
			[Address(RVA = "0x146CFAC", Offset = "0x146CFAC", VA = "0x146CFAC")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x600275D")]
			[Address(RVA = "0x146D1F4", Offset = "0x146D1F4", VA = "0x146D1F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600275E")]
			[Address(RVA = "0x146D1F8", Offset = "0x146D1F8", VA = "0x146D1F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002760")]
			[Address(RVA = "0x146D2F8", Offset = "0x146D2F8", VA = "0x146D2F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000702")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD89CC", Offset = "0xBD89CC")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40021FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x40021FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x40021FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x40021FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4002200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4002201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170003CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002765")]
				[Address(RVA = "0x146D7C8", Offset = "0x146D7C8", VA = "0x146D7C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002767")]
				[Address(RVA = "0x146D830", Offset = "0x146D830", VA = "0x146D830", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002762")]
			[Address(RVA = "0x146D184", Offset = "0x146D184", VA = "0x146D184")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6002763")]
			[Address(RVA = "0x146D650", Offset = "0x146D650", VA = "0x146D650", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002764")]
			[Address(RVA = "0x146D654", Offset = "0x146D654", VA = "0x146D654", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002766")]
			[Address(RVA = "0x146D7D0", Offset = "0x146D7D0", VA = "0x146D7D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000703")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD89DC", Offset = "0xBD89DC")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4002205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4002206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4002207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4002208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4002209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x400220A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x400220B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x400220C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x400220D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170003CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600276B")]
				[Address(RVA = "0x146D5E0", Offset = "0x146D5E0", VA = "0x146D5E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600276D")]
				[Address(RVA = "0x146D648", Offset = "0x146D648", VA = "0x146D648", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002768")]
			[Address(RVA = "0x146D1B0", Offset = "0x146D1B0", VA = "0x146D1B0")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6002769")]
			[Address(RVA = "0x146D360", Offset = "0x146D360", VA = "0x146D360", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600276A")]
			[Address(RVA = "0x146D364", Offset = "0x146D364", VA = "0x146D364", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600276C")]
			[Address(RVA = "0x146D5E8", Offset = "0x146D5E8", VA = "0x146D5E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public System.Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170002D6")]
		public float volume
		{
			[Token(Token = "0x60020EF")]
			[Address(RVA = "0x146AAC0", Offset = "0x146AAC0", VA = "0x146AAC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60020F0")]
			[Address(RVA = "0x146C8CC", Offset = "0x146C8CC", VA = "0x146C8CC")]
			set
			{
			}
		}

		[Token(Token = "0x170002D7")]
		public float pitch
		{
			[Token(Token = "0x60020F1")]
			[Address(RVA = "0x146C8E8", Offset = "0x146C8E8", VA = "0x146C8E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60020F2")]
			[Address(RVA = "0x146C904", Offset = "0x146C904", VA = "0x146C904")]
			set
			{
			}
		}

		[Token(Token = "0x170002D8")]
		public AudioClip clip
		{
			[Token(Token = "0x60020F3")]
			[Address(RVA = "0x146C920", Offset = "0x146C920", VA = "0x146C920")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020F4")]
			[Address(RVA = "0x146C93C", Offset = "0x146C93C", VA = "0x146C93C")]
			set
			{
			}
		}

		[Token(Token = "0x170002D9")]
		public float time
		{
			[Token(Token = "0x60020F5")]
			[Address(RVA = "0x146C958", Offset = "0x146C958", VA = "0x146C958")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60020F6")]
			[Address(RVA = "0x146883C", Offset = "0x146883C", VA = "0x146883C")]
			set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		public float length
		{
			[Token(Token = "0x60020F7")]
			[Address(RVA = "0x146C974", Offset = "0x146C974", VA = "0x146C974")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002DB")]
		public bool loop
		{
			[Token(Token = "0x60020F8")]
			[Address(RVA = "0x146CA2C", Offset = "0x146CA2C", VA = "0x146CA2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020F9")]
			[Address(RVA = "0x146CA48", Offset = "0x146CA48", VA = "0x146CA48")]
			set
			{
			}
		}

		[Token(Token = "0x170002DC")]
		public bool mute
		{
			[Token(Token = "0x60020FA")]
			[Address(RVA = "0x146CA68", Offset = "0x146CA68", VA = "0x146CA68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020FB")]
			[Address(RVA = "0x146CA84", Offset = "0x146CA84", VA = "0x146CA84")]
			set
			{
			}
		}

		[Token(Token = "0x170002DD")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x60020FC")]
			[Address(RVA = "0x146CAA4", Offset = "0x146CAA4", VA = "0x146CAA4")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x60020FD")]
			[Address(RVA = "0x146CAC0", Offset = "0x146CAC0", VA = "0x146CAC0")]
			set
			{
			}
		}

		[Token(Token = "0x170002DE")]
		public bool isPlaying
		{
			[Token(Token = "0x60020FE")]
			[Address(RVA = "0x146CADC", Offset = "0x146CADC", VA = "0x146CADC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0x146CAF8", Offset = "0x146CAF8", VA = "0x146CAF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0x146AA88", Offset = "0x146AA88", VA = "0x146AA88")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x146CD3C", Offset = "0x146CD3C", VA = "0x146CD3C")]
		public void SetOnFinished(System.Action onFinished)
		{
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0x146AE04", Offset = "0x146AE04", VA = "0x146AE04")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0x146CD44", Offset = "0x146CD44", VA = "0x146CD44")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0x146CD4C", Offset = "0x146CD4C", VA = "0x146CD4C")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0x146B688", Offset = "0x146B688", VA = "0x146B688")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0x1467C14", Offset = "0x1467C14", VA = "0x1467C14")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0x146CD54", Offset = "0x146CD54", VA = "0x146CD54")]
		public void Play()
		{
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0x146CDB4", Offset = "0x146CDB4", VA = "0x146CDB4")]
		public void Pause()
		{
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0x1467A34", Offset = "0x1467A34", VA = "0x1467A34")]
		public void Stop()
		{
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0x146CE7C", Offset = "0x146CE7C", VA = "0x146CE7C")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0x146B12C", Offset = "0x146B12C", VA = "0x146B12C")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0x146B37C", Offset = "0x146B37C", VA = "0x146B37C")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0x1467FB8", Offset = "0x1467FB8", VA = "0x1467FB8")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0x146CED4", Offset = "0x146CED4", VA = "0x146CED4")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0x146CF00", Offset = "0x146CF00", VA = "0x146CF00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEB8F4", Offset = "0xBEB8F4")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0x146CFD8", Offset = "0x146CFD8", VA = "0x146CFD8")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0x14683BC", Offset = "0x14683BC", VA = "0x14683BC")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0x1468438", Offset = "0x1468438", VA = "0x1468438")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0x146826C", Offset = "0x146826C", VA = "0x146826C")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0x14680B8", Offset = "0x14680B8", VA = "0x14680B8")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0x146D040", Offset = "0x146D040", VA = "0x146D040")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEB958", Offset = "0xBEB958")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0x146D0D0", Offset = "0x146D0D0", VA = "0x146D0D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEB9BC", Offset = "0xBEB9BC")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0x146D1DC", Offset = "0x146D1DC", VA = "0x146D1DC")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x200051A")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4001AFD")]
		Random,
		[Token(Token = "0x4001AFE")]
		Sequential
	}
	[Token(Token = "0x200051B")]
	public enum FreqHint
	{
		[Token(Token = "0x4001B00")]
		None,
		[Token(Token = "0x4001B01")]
		Wide,
		[Token(Token = "0x4001B02")]
		Narrow
	}
	[Token(Token = "0x200051C")]
	public enum SoundPriority
	{
		[Token(Token = "0x4001B04")]
		VeryLow = -2,
		[Token(Token = "0x4001B05")]
		Low,
		[Token(Token = "0x4001B06")]
		Default,
		[Token(Token = "0x4001B07")]
		High,
		[Token(Token = "0x4001B08")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x200051D")]
	public class OSPProps
	{
		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6228", Offset = "0xBE6228")]
		public bool enableSpatialization;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6260", Offset = "0xBE6260")]
		public bool useFastOverride;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6298", Offset = "0xBE6298")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE6298", Offset = "0xBE6298")]
		public float gain;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE62EC", Offset = "0xBE62EC")]
		public bool enableInvSquare;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6324", Offset = "0xBE6324")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE6324", Offset = "0xBE6324")]
		public float volumetric;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE637C", Offset = "0xBE637C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xBE637C", Offset = "0xBE637C")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6002118")]
		[Address(RVA = "0x146C83C", Offset = "0x146C83C", VA = "0x146C83C")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200051E")]
	public class SoundFX
	{
		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE63DC", Offset = "0xBE63DC")]
		public string name;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6414", Offset = "0xBE6414")]
		public SoundFXNext playback;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE644C", Offset = "0xBE644C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE644C", Offset = "0xBE644C")]
		public float volume;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE64A0", Offset = "0xBE64A0")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xBE64A0", Offset = "0xBE64A0")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE64FC", Offset = "0xBE64FC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xBE64FC", Offset = "0xBE64FC")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE655C", Offset = "0xBE655C")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6594", Offset = "0xBE6594")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE65CC", Offset = "0xBE65CC")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6604", Offset = "0xBE6604")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE6604", Offset = "0xBE6604")]
		public float spread;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE665C", Offset = "0xBE665C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE665C", Offset = "0xBE665C")]
		public float pctChanceToPlay;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE66B0", Offset = "0xBE66B0")]
		public SoundPriority priority;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE66E8", Offset = "0xBE66E8")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xBE66E8", Offset = "0xBE66E8")]
		public Vector2 delay;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6744", Offset = "0xBE6744")]
		public bool looping;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE677C", Offset = "0xBE677C")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170002DF")]
		public int Length
		{
			[Token(Token = "0x600211A")]
			[Address(RVA = "0x146D838", Offset = "0x146D838", VA = "0x146D838")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002E0")]
		public bool IsValid
		{
			[Token(Token = "0x600211B")]
			[Address(RVA = "0x146D854", Offset = "0x146D854", VA = "0x146D854")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E1")]
		public SoundGroup Group
		{
			[Token(Token = "0x600211C")]
			[Address(RVA = "0x146D8F8", Offset = "0x146D8F8", VA = "0x146D8F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600211D")]
			[Address(RVA = "0x146D900", Offset = "0x146D900", VA = "0x146D900")]
			set
			{
			}
		}

		[Token(Token = "0x170002E2")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x600211E")]
			[Address(RVA = "0x146A990", Offset = "0x146A990", VA = "0x146A990")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002E3")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x600211F")]
			[Address(RVA = "0x146A9C4", Offset = "0x146A9C4", VA = "0x146A9C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002119")]
		[Address(RVA = "0x146C0D4", Offset = "0x146C0D4", VA = "0x146C0D4")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0x146A8C0", Offset = "0x146A8C0", VA = "0x146A8C0")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0x146A9E8", Offset = "0x146A9E8", VA = "0x146A9E8")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0x146A99C", Offset = "0x146A99C", VA = "0x146A99C")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0x146D928", Offset = "0x146D928", VA = "0x146D928")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0x146A9DC", Offset = "0x146A9DC", VA = "0x146A9DC")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0x146DA24", Offset = "0x146DA24", VA = "0x146DA24")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0x146DB00", Offset = "0x146DB00", VA = "0x146DB00")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0x146DC14", Offset = "0x146DC14", VA = "0x146DC14")]
		public void SetOnFinished(System.Action onFinished)
		{
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0x146DCA0", Offset = "0x146DCA0", VA = "0x146DCA0")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0x146DD34", Offset = "0x146DD34", VA = "0x146DD34")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0x146DDC0", Offset = "0x146DDC0", VA = "0x146DDC0")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0x146DE4C", Offset = "0x146DE4C", VA = "0x146DE4C")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200051F")]
	public class SoundFXRef
	{
		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170002E4")]
		public SoundFX soundFX
		{
			[Token(Token = "0x600212C")]
			[Address(RVA = "0x146DEC4", Offset = "0x146DEC4", VA = "0x146DEC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E5")]
		public string name
		{
			[Token(Token = "0x600212D")]
			[Address(RVA = "0x146DFD8", Offset = "0x146DFD8", VA = "0x146DFD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600212E")]
			[Address(RVA = "0x146DFE0", Offset = "0x146DFE0", VA = "0x146DFE0")]
			set
			{
			}
		}

		[Token(Token = "0x170002E6")]
		public int Length
		{
			[Token(Token = "0x6002130")]
			[Address(RVA = "0x146E008", Offset = "0x146E008", VA = "0x146E008")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002E7")]
		public bool IsValid
		{
			[Token(Token = "0x6002131")]
			[Address(RVA = "0x146E04C", Offset = "0x146E04C", VA = "0x146E04C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0x146DEF4", Offset = "0x146DEF4", VA = "0x146DEF4")]
		private void Init()
		{
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x146E084", Offset = "0x146E084", VA = "0x146E084")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0x146E0BC", Offset = "0x146E0BC", VA = "0x146E0BC")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0x146E0FC", Offset = "0x146E0FC", VA = "0x146E0FC")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0x1465494", Offset = "0x1465494", VA = "0x1465494")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0x146E144", Offset = "0x146E144", VA = "0x146E144")]
		public void SetOnFinished(System.Action onFinished)
		{
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0x146E184", Offset = "0x146E184", VA = "0x146E184")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0x146E1D4", Offset = "0x146E1D4", VA = "0x146E1D4")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0x146E20C", Offset = "0x146E20C", VA = "0x146E20C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0x146E24C", Offset = "0x146E24C", VA = "0x146E24C")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0x146E284", Offset = "0x146E284", VA = "0x146E284")]
		public SoundFXRef()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x2000520")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD6E7C", Offset = "0xBD6E7C")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x600213C")]
		[Address(RVA = "0xF98BA4", Offset = "0xF98BA4", VA = "0xF98BA4")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x2000521")]
	internal static class SDKShaders
	{
		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int LIV_COLOR_MASK;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int LIV_TESSELLATION_PROPERTY;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY;

		[Token(Token = "0x4001B28")]
		public const string LIV_MR_FOREGROUND_KEYWORD = "LIV_MR_FOREGROUND";

		[Token(Token = "0x4001B29")]
		public const string LIV_MR_BACKGROUND_KEYWORD = "LIV_MR_BACKGROUND";

		[Token(Token = "0x4001B2A")]
		public const string LIV_MR_KEYWORD = "LIV_MR";

		[Token(Token = "0x4001B2B")]
		public const string LIV_CLIP_PLANE_SIMPLE_SHADER = "Hidden/LIV_ClipPlaneSimple";

		[Token(Token = "0x4001B2C")]
		public const string LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER = "Hidden/LIV_ClipPlaneSimpleDebug";

		[Token(Token = "0x4001B2D")]
		public const string LIV_CLIP_PLANE_COMPLEX_SHADER = "Hidden/LIV_ClipPlaneComplex";

		[Token(Token = "0x4001B2E")]
		public const string LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER = "Hidden/LIV_ClipPlaneComplexDebug";

		[Token(Token = "0x4001B2F")]
		public const string LIV_WRITE_OPAQUE_TO_ALPHA_SHADER = "Hidden/LIV_WriteOpaqueToAlpha";

		[Token(Token = "0x4001B30")]
		public const string LIV_COMBINE_ALPHA_SHADER = "Hidden/LIV_CombineAlpha";

		[Token(Token = "0x4001B31")]
		public const string LIV_WRITE_SHADER = "Hidden/LIV_Write";

		[Token(Token = "0x4001B32")]
		public const string LIV_FORCE_FORWARD_RENDERING_SHADER = "Hidden/LIV_ForceForwardRendering";

		[Token(Token = "0x600213D")]
		[Address(RVA = "0xF9B1E8", Offset = "0xF9B1E8", VA = "0xF9B1E8")]
		public static void StartRendering()
		{
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0xF9B234", Offset = "0xF9B234", VA = "0xF9B234")]
		public static void StopRendering()
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0xF9B280", Offset = "0xF9B280", VA = "0xF9B280")]
		public static void StartForegroundRendering()
		{
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0xF9B2CC", Offset = "0xF9B2CC", VA = "0xF9B2CC")]
		public static void StopForegroundRendering()
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0xF9B318", Offset = "0xF9B318", VA = "0xF9B318")]
		public static void StartBackgroundRendering()
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0xF9B364", Offset = "0xF9B364", VA = "0xF9B364")]
		public static void StopBackgroundRendering()
		{
		}
	}
	[Token(Token = "0x2000522")]
	public struct SDKConstants
	{
		[Token(Token = "0x4001B33")]
		public const string SDK_ID = "KWCSWUILKC0YPUVJ0AQKCISJWNOCGQ4I";

		[Token(Token = "0x4001B34")]
		public const string SDK_VERSION = "1.5.3";

		[Token(Token = "0x4001B35")]
		public const string ENGINE_NAME = "unity";
	}
	[Token(Token = "0x2000523")]
	public enum PRIORITY : sbyte
	{
		[Token(Token = "0x4001B37")]
		NONE = 0,
		[Token(Token = "0x4001B38")]
		GAME = 63
	}
	[Token(Token = "0x2000524")]
	[Flags]
	public enum FEATURES : ulong
	{
		[Token(Token = "0x4001B3A")]
		NONE = 0uL,
		[Token(Token = "0x4001B3B")]
		BACKGROUND_RENDER = 1uL,
		[Token(Token = "0x4001B3C")]
		FOREGROUND_RENDER = 2uL,
		[Token(Token = "0x4001B3D")]
		COMPLEX_CLIP_PLANE = 4uL,
		[Token(Token = "0x4001B3E")]
		BACKGROUND_DEPTH_RENDER = 8uL,
		[Token(Token = "0x4001B3F")]
		OVERRIDE_POST_PROCESSING = 0x10uL,
		[Token(Token = "0x4001B40")]
		FIX_FOREGROUND_ALPHA = 0x20uL,
		[Token(Token = "0x4001B41")]
		GROUND_CLIP_PLANE = 0x40uL,
		[Token(Token = "0x4001B42")]
		RELEASE_CONTROL = 0x8000uL,
		[Token(Token = "0x4001B43")]
		DEBUG_CLIP_PLANE = 0x1000000000000uL
	}
	[Token(Token = "0x2000525")]
	public enum TEXTURE_ID : uint
	{
		[Token(Token = "0x4001B45")]
		UNDEFINED = 0u,
		[Token(Token = "0x4001B46")]
		BACKGROUND_COLOR_BUFFER_ID = 10u,
		[Token(Token = "0x4001B47")]
		FOREGROUND_COLOR_BUFFER_ID = 20u
	}
	[Token(Token = "0x2000526")]
	public enum TEXTURE_TYPE : uint
	{
		[Token(Token = "0x4001B49")]
		UNDEFINED,
		[Token(Token = "0x4001B4A")]
		COLOR_BUFFER
	}
	[Token(Token = "0x2000527")]
	public enum TEXTURE_FORMAT : uint
	{
		[Token(Token = "0x4001B4C")]
		UNDEFINED = 0u,
		[Token(Token = "0x4001B4D")]
		ARGB32 = 10u
	}
	[Token(Token = "0x2000528")]
	public enum TEXTURE_DEVICE : uint
	{
		[Token(Token = "0x4001B4F")]
		UNDEFINED,
		[Token(Token = "0x4001B50")]
		RAW,
		[Token(Token = "0x4001B51")]
		DIRECTX,
		[Token(Token = "0x4001B52")]
		OPENGL,
		[Token(Token = "0x4001B53")]
		VULKAN,
		[Token(Token = "0x4001B54")]
		METAL
	}
	[Token(Token = "0x2000529")]
	public enum TEXTURE_COLOR_SPACE : uint
	{
		[Token(Token = "0x4001B56")]
		UNDEFINED,
		[Token(Token = "0x4001B57")]
		LINEAR,
		[Token(Token = "0x4001B58")]
		SRGB
	}
	[Token(Token = "0x200052A")]
	public enum RENDERING_PIPELINE : uint
	{
		[Token(Token = "0x4001B5A")]
		UNDEFINED,
		[Token(Token = "0x4001B5B")]
		FORWARD,
		[Token(Token = "0x4001B5C")]
		DEFERRED,
		[Token(Token = "0x4001B5D")]
		VERTEX_LIT,
		[Token(Token = "0x4001B5E")]
		UNIVERSAL,
		[Token(Token = "0x4001B5F")]
		HIGH_DEFINITION
	}
	[Token(Token = "0x200052B")]
	public struct SDKResolution
	{
		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int width;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int height;

		[Token(Token = "0x170002E8")]
		public static SDKResolution zero
		{
			[Token(Token = "0x6002144")]
			[Address(RVA = "0xF9B144", Offset = "0xF9B144", VA = "0xF9B144")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0xCE399C", Offset = "0xCE399C", VA = "0xCE399C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200052C")]
	public struct SDKVector3
	{
		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x170002E9")]
		public static SDKVector3 zero
		{
			[Token(Token = "0x6002146")]
			[Address(RVA = "0xF99228", Offset = "0xF99228", VA = "0xF99228")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x170002EA")]
		public static SDKVector3 one
		{
			[Token(Token = "0x6002147")]
			[Address(RVA = "0xF9BAD0", Offset = "0xF9BAD0", VA = "0xF9BAD0")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x170002EB")]
		public static SDKVector3 forward
		{
			[Token(Token = "0x6002148")]
			[Address(RVA = "0xF9BBB8", Offset = "0xF9BBB8", VA = "0xF9BBB8")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x170002EC")]
		public static SDKVector3 up
		{
			[Token(Token = "0x6002149")]
			[Address(RVA = "0xF9A708", Offset = "0xF9A708", VA = "0xF9A708")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x170002ED")]
		public static SDKVector3 right
		{
			[Token(Token = "0x600214A")]
			[Address(RVA = "0xF9BBC8", Offset = "0xF9BBC8", VA = "0xF9BBC8")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0xF9BBD8", Offset = "0xF9BBD8", VA = "0xF9BBD8")]
		public static implicit operator Vector3(SDKVector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0xF9A6F0", Offset = "0xF9A6F0", VA = "0xF9A6F0")]
		public static implicit operator SDKVector3(Vector3 v)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0xF9BC0C", Offset = "0xF9BC0C", VA = "0xF9BC0C")]
		public static SDKVector3 operator +(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0xF9BC1C", Offset = "0xF9BC1C", VA = "0xF9BC1C")]
		public static SDKVector3 operator -(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0xF9BC2C", Offset = "0xF9BC2C", VA = "0xF9BC2C")]
		public static SDKVector3 operator *(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0xF9BC3C", Offset = "0xF9BC3C", VA = "0xF9BC3C")]
		public static SDKVector3 operator *(SDKVector3 lhs, float rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0xCE39BC", Offset = "0xCE39BC", VA = "0xCE39BC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200052D")]
	public struct SDKQuaternion
	{
		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;

		[Token(Token = "0x170002EE")]
		public static SDKQuaternion identity
		{
			[Token(Token = "0x6002152")]
			[Address(RVA = "0xF99238", Offset = "0xF99238", VA = "0xF99238")]
			get
			{
				return default(SDKQuaternion);
			}
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0xF9AD10", Offset = "0xF9AD10", VA = "0xF9AD10")]
		public static implicit operator Quaternion(SDKQuaternion v)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0xF9AD40", Offset = "0xF9AD40", VA = "0xF9AD40")]
		public static implicit operator SDKQuaternion(Quaternion v)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0xF9AD44", Offset = "0xF9AD44", VA = "0xF9AD44")]
		public static SDKQuaternion Euler(float pitch, float yaw, float roll)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0xF9AE58", Offset = "0xF9AE58", VA = "0xF9AE58")]
		public static SDKQuaternion operator *(SDKQuaternion lhs, SDKQuaternion rhs)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0xF9AECC", Offset = "0xF9AECC", VA = "0xF9AECC")]
		public static SDKVector3 operator *(SDKQuaternion lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0xCE3994", Offset = "0xCE3994", VA = "0xCE3994", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200052E")]
	public struct SDKMatrix4x4
	{
		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m00;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m01;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m02;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m03;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m10;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m11;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m12;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m13;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m20;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m21;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m22;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m23;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m30;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m31;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m32;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m33;

		[Token(Token = "0x170002EF")]
		public static SDKMatrix4x4 identity
		{
			[Token(Token = "0x6002159")]
			[Address(RVA = "0xF98FC4", Offset = "0xF98FC4", VA = "0xF98FC4")]
			get
			{
				return default(SDKMatrix4x4);
			}
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0xF99B48", Offset = "0xF99B48", VA = "0xF99B48")]
		public static implicit operator Matrix4x4(SDKMatrix4x4 v)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0xF99B8C", Offset = "0xF99B8C", VA = "0xF99B8C")]
		public static implicit operator SDKMatrix4x4(Matrix4x4 v)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0xF99BD0", Offset = "0xF99BD0", VA = "0xF99BD0")]
		public static SDKMatrix4x4 Perspective(float vFov, float aspect, float zNear, float zFar)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0xF99CD8", Offset = "0xF99CD8", VA = "0xF99CD8")]
		public static SDKMatrix4x4 operator *(SDKMatrix4x4 lhs, SDKMatrix4x4 rhs)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0xF99D84", Offset = "0xF99D84", VA = "0xF99D84")]
		public static SDKVector3 operator *(SDKMatrix4x4 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0xF99DDC", Offset = "0xF99DDC", VA = "0xF99DDC")]
		public static SDKMatrix4x4 Translate(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0xF99E18", Offset = "0xF99E18", VA = "0xF99E18")]
		public static SDKMatrix4x4 Rotate(SDKQuaternion value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0xF99EAC", Offset = "0xF99EAC", VA = "0xF99EAC")]
		public static SDKMatrix4x4 Scale(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0xF99ED8", Offset = "0xF99ED8", VA = "0xF99ED8")]
		public static SDKMatrix4x4 TRS(SDKVector3 translation, SDKQuaternion rotation, SDKVector3 scale)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0xCE396C", Offset = "0xCE396C", VA = "0xCE396C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200052F")]
	public struct SDKPlane
	{
		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKVector3 normal;

		[Token(Token = "0x170002F0")]
		public static SDKPlane empty
		{
			[Token(Token = "0x6002165")]
			[Address(RVA = "0xF9A6F4", Offset = "0xF9A6F4", VA = "0xF9A6F4")]
			get
			{
				return default(SDKPlane);
			}
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0xF9A690", Offset = "0xF9A690", VA = "0xF9A690")]
		public static implicit operator SDKPlane(Plane v)
		{
			return default(SDKPlane);
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0xCE397C", Offset = "0xCE397C", VA = "0xCE397C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000530")]
	public struct SDKPriority
	{
		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public sbyte pose;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public sbyte clipPlane;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public sbyte stage;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public sbyte resolution;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public sbyte feature;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public sbyte nearFarAdjustment;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public sbyte groundPlane;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public sbyte reserved2;

		[Token(Token = "0x170002F1")]
		public static SDKPriority empty
		{
			[Token(Token = "0x6002167")]
			[Address(RVA = "0xF997C0", Offset = "0xF997C0", VA = "0xF997C0")]
			get
			{
				return default(SDKPriority);
			}
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0xCE398C", Offset = "0xCE398C", VA = "0xCE398C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000531")]
	public struct SDKApplicationOutput
	{
		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FEATURES supportedFeatures;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string engineName;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string engineVersion;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string applicationName;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string applicationVersion;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string xrDeviceName;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string graphicsAPI;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string sdkID;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string sdkVersion;

		[Token(Token = "0x170002F2")]
		public static SDKApplicationOutput empty
		{
			[Token(Token = "0x6002169")]
			[Address(RVA = "0xF98BAC", Offset = "0xF98BAC", VA = "0xF98BAC")]
			get
			{
				return default(SDKApplicationOutput);
			}
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0xCE3928", Offset = "0xCE3928", VA = "0xCE3928", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000532")]
	public struct SDKInputFrame
	{
		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKPose pose;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKClipPlane clipPlane;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public SDKTransform stageTransform;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public FEATURES features;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SDKClipPlane groundClipPlane;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public ulong frameid;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public ulong referenceframe;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public SDKPriority priority;

		[Token(Token = "0x170002F3")]
		public static SDKInputFrame empty
		{
			[Token(Token = "0x600216B")]
			[Address(RVA = "0xF99620", Offset = "0xF99620", VA = "0xF99620")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0xCE3940", Offset = "0xCE3940", VA = "0xCE3940")]
		public void ReleaseControl()
		{
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0xCE3950", Offset = "0xCE3950", VA = "0xCE3950")]
		public void ObtainControl()
		{
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0xCE3964", Offset = "0xCE3964", VA = "0xCE3964", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000533")]
	public struct SDKOutputFrame
	{
		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RENDERING_PIPELINE renderingPipeline;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKTrackedSpace trackedSpace;

		[Token(Token = "0x170002F4")]
		public static SDKOutputFrame empty
		{
			[Token(Token = "0x600216F")]
			[Address(RVA = "0xF9A528", Offset = "0xF9A528", VA = "0xF9A528")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0xCE3974", Offset = "0xCE3974", VA = "0xCE3974", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000534")]
	public struct SDKTrackedSpace
	{
		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 trackedSpaceWorldPosition;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion trackedSpaceWorldRotation;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 trackedSpaceLocalScale;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKMatrix4x4 trackedSpaceLocalToWorldMatrix;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SDKMatrix4x4 trackedSpaceWorldToLocalMatrix;

		[Token(Token = "0x170002F5")]
		public static SDKTrackedSpace empty
		{
			[Token(Token = "0x6002171")]
			[Address(RVA = "0xF9A588", Offset = "0xF9A588", VA = "0xF9A588")]
			get
			{
				return default(SDKTrackedSpace);
			}
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0xCE39AC", Offset = "0xCE39AC", VA = "0xCE39AC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000535")]
	public struct SDKTexture
	{
		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TEXTURE_ID id;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr texturePtr;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr SharedHandle;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TEXTURE_DEVICE device;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int dummy;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TEXTURE_TYPE type;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TEXTURE_FORMAT format;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TEXTURE_COLOR_SPACE colorSpace;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int width;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int height;

		[Token(Token = "0x170002F6")]
		public static SDKTexture empty
		{
			[Token(Token = "0x6002173")]
			[Address(RVA = "0xF9B454", Offset = "0xF9B454", VA = "0xF9B454")]
			get
			{
				return default(SDKTexture);
			}
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0xCE39A4", Offset = "0xCE39A4", VA = "0xCE39A4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000536")]
	public struct SDKTransform
	{
		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 localPosition;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 localScale;

		[Token(Token = "0x170002F7")]
		public static SDKTransform empty
		{
			[Token(Token = "0x6002175")]
			[Address(RVA = "0xF997AC", Offset = "0xF997AC", VA = "0xF997AC")]
			get
			{
				return default(SDKTransform);
			}
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0xCE39B4", Offset = "0xCE39B4", VA = "0xCE39B4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000537")]
	public struct SDKClipPlane
	{
		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 transform;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int width;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int height;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float tesselation;

		[Token(Token = "0x170002F8")]
		public static SDKClipPlane empty
		{
			[Token(Token = "0x6002177")]
			[Address(RVA = "0xF98F90", Offset = "0xF98F90", VA = "0xF98F90")]
			get
			{
				return default(SDKClipPlane);
			}
		}

		[Token(Token = "0x6002178")]
		[Address(RVA = "0xCE3930", Offset = "0xCE3930", VA = "0xCE3930", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000538")]
	public struct SDKControllerState
	{
		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 hmdposition;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion hmdrotation;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 calibrationcameraposition;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKQuaternion calibrationcamerarotation;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SDKVector3 cameraposition;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SDKQuaternion camerarotation;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public SDKVector3 leftposition;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SDKQuaternion leftrotation;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKVector3 rightposition;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public SDKQuaternion rightrotation;

		[Token(Token = "0x170002F9")]
		public static SDKControllerState empty
		{
			[Token(Token = "0x6002179")]
			[Address(RVA = "0xF991DC", Offset = "0xF991DC", VA = "0xF991DC")]
			get
			{
				return default(SDKControllerState);
			}
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0xCE3938", Offset = "0xCE3938", VA = "0xCE3938", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000539")]
	public struct SDKPose
	{
		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 projectionMatrix;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SDKVector3 localPosition;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float verticalFieldOfView;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float nearClipPlane;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float farClipPlane;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int unused0;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int unused1;

		[Token(Token = "0x170002FA")]
		public static SDKPose empty
		{
			[Token(Token = "0x600217B")]
			[Address(RVA = "0xF99730", Offset = "0xF99730", VA = "0xF99730")]
			get
			{
				return default(SDKPose);
			}
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0xCE3984", Offset = "0xCE3984", VA = "0xCE3984", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace ES3Types
{
	[Token(Token = "0x200053A")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBD6EC4", Offset = "0xBD6EC4")]
	public class ES3UserType_BoolVariable : ES3ScriptableObjectType
	{
		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600217D")]
		[Address(RVA = "0xF15440", Offset = "0xF15440", VA = "0xF15440")]
		public ES3UserType_BoolVariable()
		{
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0xF15504", Offset = "0xF15504", VA = "0xF15504", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600217F")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200053B")]
	public class ES3UserType_BoolVariableArray : ES3ArrayType
	{
		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6002181")]
		[Address(RVA = "0xF156CC", Offset = "0xF156CC", VA = "0xF156CC")]
		public ES3UserType_BoolVariableArray()
		{
		}
	}
	[Token(Token = "0x200053C")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBD7000", Offset = "0xBD7000")]
	public class ES3UserType_FloatVariable : ES3ScriptableObjectType
	{
		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6002182")]
		[Address(RVA = "0xF157A8", Offset = "0xF157A8", VA = "0xF157A8")]
		public ES3UserType_FloatVariable()
		{
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0xF1586C", Offset = "0xF1586C", VA = "0xF1586C", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6002184")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200053D")]
	public class ES3UserType_FloatVariableArray : ES3ArrayType
	{
		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6002186")]
		[Address(RVA = "0xF15BFC", Offset = "0xF15BFC", VA = "0xF15BFC")]
		public ES3UserType_FloatVariableArray()
		{
		}
	}
	[Token(Token = "0x200053E")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBD7200", Offset = "0xBD7200")]
	public class ES3UserType_GalaxyData : ES3ScriptableObjectType
	{
		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6002187")]
		[Address(RVA = "0xF15CD8", Offset = "0xF15CD8", VA = "0xF15CD8")]
		public ES3UserType_GalaxyData()
		{
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0xF15D9C", Offset = "0xF15D9C", VA = "0xF15D9C", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6002189")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200053F")]
	public class ES3UserType_GalaxyDataArray : ES3ArrayType
	{
		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600218B")]
		[Address(RVA = "0xF15F78", Offset = "0xF15F78", VA = "0xF15F78")]
		public ES3UserType_GalaxyDataArray()
		{
		}
	}
	[Token(Token = "0x2000540")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBD72CC", Offset = "0xBD72CC")]
	public class ES3UserType_GameModeTypeVariable : ES3ScriptableObjectType
	{
		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600218C")]
		[Address(RVA = "0xF16054", Offset = "0xF16054", VA = "0xF16054")]
		public ES3UserType_GameModeTypeVariable()
		{
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0xF16118", Offset = "0xF16118", VA = "0xF16118", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600218E")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000541")]
	public class ES3UserType_GameModeTypeVariableArray : ES3ArrayType
	{
		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6002190")]
		[Address(RVA = "0xF16280", Offset = "0xF16280", VA = "0xF16280")]
		public ES3UserType_GameModeTypeVariableArray()
		{
		}
	}
	[Token(Token = "0x2000542")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBD7398", Offset = "0xBD7398")]
	public class ES3UserType_GestureData : ES3ScriptableObjectType
	{
		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6002191")]
		[Address(RVA = "0xF1635C", Offset = "0xF1635C", VA = "0xF1635C")]
		public ES3UserType_GestureData()
		{
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0xF16420", Offset = "0xF16420", VA = "0xF16420", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6002193")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000543")]
	public class ES3UserType_GestureDataArray : ES3ArrayType
	{
		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6002195")]
		[Address(RVA = "0xF16518", Offset = "0xF16518", VA = "0xF16518")]
		public ES3UserType_GestureDataArray()
		{
		}
	}
	[Token(Token = "0x2000544")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBD742C", Offset = "0xBD742C")]
	public class ES3UserType_GestureVariable : ES3ScriptableObjectType
	{
		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6002196")]
		[Address(RVA = "0xF165F4", Offset = "0xF165F4", VA = "0xF165F4")]
		public ES3UserType_GestureVariable()
		{
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0xF166B8", Offset = "0xF166B8", VA = "0xF166B8", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6002198")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000545")]
	public class ES3UserType_GestureVariableArray : ES3ArrayType
	{
		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600219A")]
		[Address(RVA = "0xF16904", Offset = "0xF16904", VA = "0xF16904")]
		public ES3UserType_GestureVariableArray()
		{
		}
	}
	[Token(Token = "0x2000546")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBD7584", Offset = "0xBD7584")]
	public class ES3UserType_IntVariable : ES3ScriptableObjectType
	{
		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600219B")]
		[Address(RVA = "0xF169E0", Offset = "0xF169E0", VA = "0xF169E0")]
		public ES3UserType_IntVariable()
		{
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0xF16AA4", Offset = "0xF16AA4", VA = "0xF16AA4", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600219D")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000547")]
	public class ES3UserType_IntVariableArray : ES3ArrayType
	{
		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600219F")]
		[Address(RVA = "0xF16D00", Offset = "0xF16D00", VA = "0xF16D00")]
		public ES3UserType_IntVariableArray()
		{
		}
	}
	[Token(Token = "0x2000548")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBD76F8", Offset = "0xBD76F8")]
	public class ES3UserType_PlanetData : ES3ScriptableObjectType
	{
		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0xF16DDC", Offset = "0xF16DDC", VA = "0xF16DDC")]
		public ES3UserType_PlanetData()
		{
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0xF16EA0", Offset = "0xF16EA0", VA = "0xF16EA0", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60021A2")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000549")]
	public class ES3UserType_PlanetDataArray : ES3ArrayType
	{
		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0xF171E0", Offset = "0xF171E0", VA = "0xF171E0")]
		public ES3UserType_PlanetDataArray()
		{
		}
	}
	[Token(Token = "0x200054A")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBD7850", Offset = "0xBD7850")]
	public class ES3UserType_RecipeData : ES3ScriptableObjectType
	{
		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0xF172BC", Offset = "0xF172BC", VA = "0xF172BC")]
		public ES3UserType_RecipeData()
		{
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0xF17380", Offset = "0xF17380", VA = "0xF17380", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60021A7")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200054B")]
	public class ES3UserType_RecipeDataArray : ES3ArrayType
	{
		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0xF176E8", Offset = "0xF176E8", VA = "0xF176E8")]
		public ES3UserType_RecipeDataArray()
		{
		}
	}
	[Token(Token = "0x200054C")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBD7A18", Offset = "0xBD7A18")]
	public class ES3UserType_SolarSystemData : ES3ScriptableObjectType
	{
		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0xF177C4", Offset = "0xF177C4", VA = "0xF177C4")]
		public ES3UserType_SolarSystemData()
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0xF17888", Offset = "0xF17888", VA = "0xF17888", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60021AC")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200054D")]
	public class ES3UserType_SolarSystemDataArray : ES3ArrayType
	{
		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0xF17E34", Offset = "0xF17E34", VA = "0xF17E34")]
		public ES3UserType_SolarSystemDataArray()
		{
		}
	}
	[Token(Token = "0x200054E")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBD7C6C", Offset = "0xBD7C6C")]
	public class ES3UserType_WandData : ES3ScriptableObjectType
	{
		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0xF17F10", Offset = "0xF17F10", VA = "0xF17F10")]
		public ES3UserType_WandData()
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0xF17FD4", Offset = "0xF17FD4", VA = "0xF17FD4", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60021B1")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200054F")]
	public class ES3UserType_WandDataArray : ES3ArrayType
	{
		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0xF18160", Offset = "0xF18160", VA = "0xF18160")]
		public ES3UserType_WandDataArray()
		{
		}
	}
}
namespace CurvedUI
{
	[Token(Token = "0x2000550")]
	public class CUI_AnimateCurvedFillOnStart : MonoBehaviour
	{
		[Token(Token = "0x60021B4")]
		[Address(RVA = "0xEDDE2C", Offset = "0xEDDE2C", VA = "0xEDDE2C")]
		private void Update()
		{
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0xEDDFE0", Offset = "0xEDDFE0", VA = "0xEDDFE0")]
		public CUI_AnimateCurvedFillOnStart()
		{
		}
	}
	[Token(Token = "0x2000551")]
	public class CUI_CameraController : MonoBehaviour
	{
		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CUI_CameraController instance;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform CameraObject;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float rotationMargin;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool runInEditorOnly;

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0xEDDFE8", Offset = "0xEDDFE8", VA = "0xEDDFE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0xEDE040", Offset = "0xEDE040", VA = "0xEDE040")]
		public CUI_CameraController()
		{
		}
	}
	[Token(Token = "0x2000552")]
	public class CUI_ChangeColor : MonoBehaviour
	{
		[Token(Token = "0x60021B8")]
		[Address(RVA = "0xEDE058", Offset = "0xEDE058", VA = "0xEDE058")]
		public void ChangeColorToBlue()
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0xEDE0D4", Offset = "0xEDE0D4", VA = "0xEDE0D4")]
		public void ChangeColorToCyan()
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0xEDE150", Offset = "0xEDE150", VA = "0xEDE150")]
		public void ChangeColorToWhite()
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0xEDE1CC", Offset = "0xEDE1CC", VA = "0xEDE1CC")]
		public CUI_ChangeColor()
		{
		}
	}
	[Token(Token = "0x2000553")]
	public class CUI_ChangeValueOnHold : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool pressed;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool selected;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image bg;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color SelectedColor;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color NormalColor;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CanvasGroup IntroCG;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CanvasGroup MenuCG;

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0xEDE1D4", Offset = "0xEDE1D4", VA = "0xEDE1D4")]
		private void Update()
		{
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0xEDE258", Offset = "0xEDE258", VA = "0xEDE258")]
		private void ChangeVal()
		{
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0xEDE3C0", Offset = "0xEDE3C0", VA = "0xEDE3C0", Slot = "4")]
		public void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0xEDE454", Offset = "0xEDE454", VA = "0xEDE454", Slot = "5")]
		public void OnPointerExit(PointerEventData data)
		{
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0xEDE4E4", Offset = "0xEDE4E4", VA = "0xEDE4E4")]
		public CUI_ChangeValueOnHold()
		{
		}
	}
	[Token(Token = "0x2000554")]
	public class CUI_DragBetweenCanvases : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 dragPoint;

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0xEDE4EC", Offset = "0xEDE4EC", VA = "0xEDE4EC", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0xEDE830", Offset = "0xEDE830", VA = "0xEDE830", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0xEDEC90", Offset = "0xEDEC90", VA = "0xEDEC90", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0xEDE634", Offset = "0xEDE634", VA = "0xEDE634")]
		private void RaycastPosition(out Vector2 newPos)
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0xEDECFC", Offset = "0xEDECFC", VA = "0xEDECFC")]
		public CUI_DragBetweenCanvases()
		{
		}
	}
	[Token(Token = "0x2000555")]
	public class CUI_GunController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000704")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD89EC", Offset = "0xBD89EC")]
		private sealed class <>c
		{
			[Token(Token = "0x400220E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400220F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__2_0;

			[Token(Token = "0x600276F")]
			[Address(RVA = "0xEDF164", Offset = "0xEDF164", VA = "0xEDF164")]
			public <>c()
			{
			}

			[Token(Token = "0x6002770")]
			[Address(RVA = "0xEDF16C", Offset = "0xEDF16C", VA = "0xEDF16C")]
			internal bool <Update>b__2_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings ControlledCanvas;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0xEDED04", Offset = "0xEDED04", VA = "0xEDED04")]
		private void Update()
		{
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0xEDF0F4", Offset = "0xEDF0F4", VA = "0xEDF0F4")]
		public CUI_GunController()
		{
		}
	}
	[Token(Token = "0x2000556")]
	public class CUI_GunMovement : MonoBehaviour
	{
		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform pivot;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float sensitivity;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 lastMouse;

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0xEDF234", Offset = "0xEDF234", VA = "0xEDF234")]
		private void Start()
		{
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0xEDF260", Offset = "0xEDF260", VA = "0xEDF260")]
		private void Update()
		{
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0xEDF47C", Offset = "0xEDF47C", VA = "0xEDF47C")]
		public CUI_GunMovement()
		{
		}
	}
	[Token(Token = "0x2000557")]
	public class CUI_OrientOnCurvedSpace : MonoBehaviour
	{
		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CurvedUISettings mySettings;

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0xEDF490", Offset = "0xEDF490", VA = "0xEDF490")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0xEDF4F0", Offset = "0xEDF4F0", VA = "0xEDF4F0")]
		private void Update()
		{
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0xEDF6E8", Offset = "0xEDF6E8", VA = "0xEDF6E8")]
		public CUI_OrientOnCurvedSpace()
		{
		}
	}
	[Token(Token = "0x2000558")]
	public class CUI_PerlinNoisePosition : MonoBehaviour
	{
		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 Range;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform rectie;

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0xEDF6F0", Offset = "0xEDF6F0", VA = "0xEDF6F0")]
		private void Start()
		{
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0xEDF768", Offset = "0xEDF768", VA = "0xEDF768")]
		private void Update()
		{
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0xEDF8C0", Offset = "0xEDF8C0", VA = "0xEDF8C0")]
		public CUI_PerlinNoisePosition()
		{
		}
	}
	[Token(Token = "0x2000559")]
	public class CUI_PerlinNoiseRotation : MonoBehaviour
	{
		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxrotation;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform rectie;

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0xEDF8D0", Offset = "0xEDF8D0", VA = "0xEDF8D0")]
		private void Start()
		{
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0xEDF948", Offset = "0xEDF948", VA = "0xEDF948")]
		private void Update()
		{
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0xEDFA48", Offset = "0xEDFA48", VA = "0xEDFA48")]
		public CUI_PerlinNoiseRotation()
		{
		}
	}
	[Token(Token = "0x200055A")]
	public class CUI_PickImageFromSet : MonoBehaviour
	{
		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CUI_PickImageFromSet picked;

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0xEDFA5C", Offset = "0xEDFA5C", VA = "0xEDFA5C")]
		public void PickThis()
		{
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0xEDFC28", Offset = "0xEDFC28", VA = "0xEDFC28")]
		public CUI_PickImageFromSet()
		{
		}
	}
	[Token(Token = "0x200055B")]
	public class CUI_RaycastToCanvas : MonoBehaviour
	{
		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0xEDFC34", Offset = "0xEDFC34", VA = "0xEDFC34")]
		private void Start()
		{
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0xEDFC94", Offset = "0xEDFC94", VA = "0xEDFC94")]
		private void Update()
		{
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0xEDFD98", Offset = "0xEDFD98", VA = "0xEDFD98")]
		public CUI_RaycastToCanvas()
		{
		}
	}
	[Token(Token = "0x200055C")]
	public class CUI_RiseChildrenOverTime : MonoBehaviour
	{
		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float current;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Speed;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RiseBy;

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0xEDFDA0", Offset = "0xEDFDA0", VA = "0xEDFDA0")]
		private void Start()
		{
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0xEDFDA4", Offset = "0xEDFDA4", VA = "0xEDFDA4")]
		private void Update()
		{
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0xEDFFA0", Offset = "0xEDFFA0", VA = "0xEDFFA0")]
		public CUI_RiseChildrenOverTime()
		{
		}
	}
	[Token(Token = "0x200055D")]
	public class CUI_TMPChecker : MonoBehaviour
	{
		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject testMsg;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject enabledMsg;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject disabledMsg;

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0xF041C8", Offset = "0xF041C8", VA = "0xF041C8")]
		private void Start()
		{
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0xF04244", Offset = "0xF04244", VA = "0xF04244")]
		public CUI_TMPChecker()
		{
		}
	}
	[Token(Token = "0x200055E")]
	public class CUI_ViveButtonState : MonoBehaviour
	{
		[Token(Token = "0x2000705")]
		private enum ViveButton
		{
			[Token(Token = "0x4002211")]
			Trigger,
			[Token(Token = "0x4002212")]
			TouchpadTouch,
			[Token(Token = "0x4002213")]
			TouchpadPress,
			[Token(Token = "0x4002214")]
			Grip,
			[Token(Token = "0x4002215")]
			Menu
		}

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color ActiveColor;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color InActiveColor;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ViveButton ShowStateFor;

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0xF0424C", Offset = "0xF0424C", VA = "0xF0424C")]
		public CUI_ViveButtonState()
		{
		}
	}
	[Token(Token = "0x200055F")]
	public class CUI_ViveHapticPulse : MonoBehaviour
	{
		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float PulseStrength;

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0xF04290", Offset = "0xF04290", VA = "0xF04290")]
		private void Start()
		{
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0xF0429C", Offset = "0xF0429C", VA = "0xF0429C")]
		public void SetPulseStrength(float newStr)
		{
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0xF04320", Offset = "0xF04320", VA = "0xF04320")]
		public void TriggerPulse()
		{
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0xF04324", Offset = "0xF04324", VA = "0xF04324")]
		public CUI_ViveHapticPulse()
		{
		}
	}
	[Token(Token = "0x2000560")]
	public class CUI_WorldSpaceCursorFollow : MonoBehaviour
	{
		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0xF0432C", Offset = "0xF0432C", VA = "0xF0432C")]
		private void Start()
		{
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0xF04494", Offset = "0xF04494", VA = "0xF04494")]
		private void Update()
		{
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0xF04568", Offset = "0xF04568", VA = "0xF04568")]
		public CUI_WorldSpaceCursorFollow()
		{
		}
	}
	[Token(Token = "0x2000561")]
	public class CUI_WorldSpaceMouseMultipleCanvases : MonoBehaviour
	{
		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<CurvedUISettings> ControlledCanvases;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform WorldSpaceMouse;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CurvedUISettings MouseCanvas;

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0xF04570", Offset = "0xF04570", VA = "0xF04570")]
		private void Update()
		{
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0xF04910", Offset = "0xF04910", VA = "0xF04910")]
		public CUI_WorldSpaceMouseMultipleCanvases()
		{
		}
	}
	[Token(Token = "0x2000562")]
	public class CUI_draggable : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 savedVector;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isDragged;

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0xF04918", Offset = "0xF04918", VA = "0xF04918", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0xF04C64", Offset = "0xF04C64", VA = "0xF04C64", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0xF04C68", Offset = "0xF04C68", VA = "0xF04C68", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0xF04CE0", Offset = "0xF04CE0", VA = "0xF04CE0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0xF04A68", Offset = "0xF04A68", VA = "0xF04A68")]
		private void RaycastPosition(out Vector2 newPos)
		{
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0xF04DF4", Offset = "0xF04DF4", VA = "0xF04DF4")]
		public CUI_draggable()
		{
		}
	}
	[Token(Token = "0x2000563")]
	public class CUI_inventory_paralax : MonoBehaviour
	{
		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform front;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform back;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 initFG;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 initBG;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float change;

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0xF04DFC", Offset = "0xF04DFC", VA = "0xF04DFC")]
		private void Start()
		{
		}

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0xF04E4C", Offset = "0xF04E4C", VA = "0xF04E4C")]
		private void Update()
		{
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0xF050B0", Offset = "0xF050B0", VA = "0xF050B0")]
		public CUI_inventory_paralax()
		{
		}
	}
}
namespace UnityEditor.Rendering.Universal
{
	[Token(Token = "0x2000564")]
	internal class AssetVersion : ScriptableObject
	{
		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int version;

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0xF7779C", Offset = "0xF7779C", VA = "0xF7779C")]
		public AssetVersion()
		{
		}
	}
}
namespace AraSamples
{
	[Serializable]
	[Token(Token = "0x2000565")]
	public class AxleInfo
	{
		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool motor;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool steering;

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x11257B8", Offset = "0x11257B8", VA = "0x11257B8")]
		public AxleInfo()
		{
		}
	}
	[Token(Token = "0x2000566")]
	public class CarController : MonoBehaviour
	{
		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AxleInfo> axleInfos;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxMotorTorque;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxSteeringAngle;

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0x11257C0", Offset = "0x11257C0", VA = "0x11257C0")]
		public void ApplyLocalPositionToVisuals()
		{
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0x11257C4", Offset = "0x11257C4", VA = "0x11257C4")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0x11258D4", Offset = "0x11258D4", VA = "0x11258D4")]
		public CarController()
		{
		}
	}
	[Token(Token = "0x2000567")]
	public class ObjectDragger : MonoBehaviour
	{
		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 screenPoint;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 offset;

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0x11258DC", Offset = "0x11258DC", VA = "0x11258DC")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0x1125A60", Offset = "0x1125A60", VA = "0x1125A60")]
		private void OnMouseDrag()
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0x1125B84", Offset = "0x1125B84", VA = "0x1125B84")]
		public ObjectDragger()
		{
		}
	}
	[Token(Token = "0x2000568")]
	public class Rotation : MonoBehaviour
	{
		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 axis;

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0x1125B8C", Offset = "0x1125B8C", VA = "0x1125B8C")]
		private void Update()
		{
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0x1125BF4", Offset = "0x1125BF4", VA = "0x1125BF4")]
		public Rotation()
		{
		}
	}
}
namespace Ara
{
	[Token(Token = "0x2000569")]
	[ExecuteInEditMode]
	public class AraTrail : MonoBehaviour
	{
		[Token(Token = "0x2000706")]
		public enum TrailAlignment
		{
			[Token(Token = "0x4002217")]
			View,
			[Token(Token = "0x4002218")]
			Velocity,
			[Token(Token = "0x4002219")]
			Local
		}

		[Token(Token = "0x2000707")]
		public enum TrailSorting
		{
			[Token(Token = "0x400221B")]
			OlderOnTop,
			[Token(Token = "0x400221C")]
			NewerOnTop
		}

		[Token(Token = "0x2000708")]
		public enum Timescale
		{
			[Token(Token = "0x400221E")]
			Normal,
			[Token(Token = "0x400221F")]
			Unscaled
		}

		[Token(Token = "0x2000709")]
		public enum TextureMode
		{
			[Token(Token = "0x4002221")]
			Stretch,
			[Token(Token = "0x4002222")]
			Tile,
			[Token(Token = "0x4002223")]
			WorldTile
		}

		[Token(Token = "0x200070A")]
		public struct CurveFrame
		{
			[Token(Token = "0x4002224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4002225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 normal;

			[Token(Token = "0x4002226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 bitangent;

			[Token(Token = "0x4002227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 tangent;

			[Token(Token = "0x6002771")]
			[Address(RVA = "0xCE9228", Offset = "0xCE9228", VA = "0xCE9228")]
			public CurveFrame(Vector3 position, Vector3 normal, Vector3 bitangent, Vector3 tangent)
			{
			}

			[Token(Token = "0x6002772")]
			[Address(RVA = "0xCE9258", Offset = "0xCE9258", VA = "0xCE9258")]
			public Vector3 Transport(Vector3 newTangent, Vector3 newPosition)
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x200070B")]
		public struct Point
		{
			[Token(Token = "0x4002228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4002229")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 velocity;

			[Token(Token = "0x400222A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 tangent;

			[Token(Token = "0x400222B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 normal;

			[Token(Token = "0x400222C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Color color;

			[Token(Token = "0x400222D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float thickness;

			[Token(Token = "0x400222E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float life;

			[Token(Token = "0x400222F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float texcoord;

			[Token(Token = "0x4002230")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool discontinuous;

			[Token(Token = "0x6002773")]
			[Address(RVA = "0xCE9344", Offset = "0xCE9344", VA = "0xCE9344")]
			public Point(Vector3 position, Vector3 velocity, Vector3 tangent, Vector3 normal, Color color, float thickness, float texcoord, float lifetime)
			{
			}

			[Token(Token = "0x6002774")]
			[Address(RVA = "0x1121B88", Offset = "0x1121B88", VA = "0x1121B88")]
			public static float CatmullRom(float p0, float p1, float p2, float p3, float t)
			{
				return default(float);
			}

			[Token(Token = "0x6002775")]
			[Address(RVA = "0x1124500", Offset = "0x1124500", VA = "0x1124500")]
			public static Point operator +(Point p1, Point p2)
			{
				return default(Point);
			}

			[Token(Token = "0x6002776")]
			[Address(RVA = "0x11246F0", Offset = "0x11246F0", VA = "0x11246F0")]
			public static Point operator -(Point p1, Point p2)
			{
				return default(Point);
			}
		}

		[Token(Token = "0x4001C0E")]
		public const float epsilon = 1E-05f;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE6934", Offset = "0xBE6934")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6934", Offset = "0xBE6934")]
		public TrailSection section;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6994", Offset = "0xBE6994")]
		public Space space;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE69CC", Offset = "0xBE69CC")]
		public Timescale timescale;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6A04", Offset = "0xBE6A04")]
		public TrailAlignment alignment;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6A3C", Offset = "0xBE6A3C")]
		public TrailSorting sorting;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6A74", Offset = "0xBE6A74")]
		public float thickness;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6AAC", Offset = "0xBE6AAC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE6AAC", Offset = "0xBE6AAC")]
		public int smoothness;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6B00", Offset = "0xBE6B00")]
		public bool highQualityCorners;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE6B38", Offset = "0xBE6B38")]
		public int cornerRoundness;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE6B50", Offset = "0xBE6B50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6B50", Offset = "0xBE6B50")]
		public AnimationCurve thicknessOverLenght;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6BB0", Offset = "0xBE6BB0")]
		public Gradient colorOverLenght;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE6BE8", Offset = "0xBE6BE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6BE8", Offset = "0xBE6BE8")]
		public AnimationCurve thicknessOverTime;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6C48", Offset = "0xBE6C48")]
		public Gradient colorOverTime;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE6C80", Offset = "0xBE6C80")]
		public bool emit;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6CB8", Offset = "0xBE6CB8")]
		public float initialThickness;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6CF0", Offset = "0xBE6CF0")]
		public Color initialColor;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6D28", Offset = "0xBE6D28")]
		public Vector3 initialVelocity;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6D60", Offset = "0xBE6D60")]
		public float timeInterval;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6D98", Offset = "0xBE6D98")]
		public float minDistance;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6DD0", Offset = "0xBE6DD0")]
		public float time;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE6E08", Offset = "0xBE6E08")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6E08", Offset = "0xBE6E08")]
		public bool enablePhysics;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6E68", Offset = "0xBE6E68")]
		public float warmup;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6EA0", Offset = "0xBE6EA0")]
		public Vector3 gravity;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6ED8", Offset = "0xBE6ED8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE6ED8", Offset = "0xBE6ED8")]
		public float inertia;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6F2C", Offset = "0xBE6F2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE6F2C", Offset = "0xBE6F2C")]
		public float velocitySmoothing;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE6F80", Offset = "0xBE6F80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE6F80", Offset = "0xBE6F80")]
		public float damping;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE6FD4", Offset = "0xBE6FD4")]
		public Material[] materials;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public ShadowCastingMode castShadows;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool receiveShadows;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		public bool useLightProbes;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBE700C", Offset = "0xBE700C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE700C", Offset = "0xBE700C")]
		public bool quadMapping;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE706C", Offset = "0xBE706C")]
		public TextureMode textureMode;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE70A4", Offset = "0xBE70A4")]
		public float uvFactor;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE70DC", Offset = "0xBE70DC")]
		public float uvWidthFactor;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE7114", Offset = "0xBE7114")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBE7114", Offset = "0xBE7114")]
		public float tileAnchor;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public ElasticArray<Point> points;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private ElasticArray<Point> renderablePoints;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<int> discontinuities;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Mesh mesh_;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector3 velocity;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Vector3 prevPosition;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float accumTime;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<Vector3> vertices;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private List<Vector3> normals;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private List<Vector4> tangents;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private List<Vector4> uvs;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private List<Color> vertColors;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private List<int> tris;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector3 nextV;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Vector3 prevV;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector3 vertex;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private Vector3 normal;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Vector3 bitangent;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private Vector4 tangent;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private Vector4 texTangent;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private Vector4 uv;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private Color color;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Action<ScriptableRenderContext, Camera> renderCallback;

		[Token(Token = "0x170002FB")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60021FE")]
			[Address(RVA = "0x111EFE0", Offset = "0x111EFE0", VA = "0x111EFE0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002FC")]
		private float DeltaTime
		{
			[Token(Token = "0x60021FF")]
			[Address(RVA = "0x111EFEC", Offset = "0x111EFEC", VA = "0x111EFEC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002FD")]
		private float FixedDeltaTime
		{
			[Token(Token = "0x6002200")]
			[Address(RVA = "0x111F008", Offset = "0x111F008", VA = "0x111F008")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002FE")]
		public Mesh mesh
		{
			[Token(Token = "0x6002201")]
			[Address(RVA = "0x111F024", Offset = "0x111F024", VA = "0x111F024")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000032")]
		public event System.Action onUpdatePoints
		{
			[Token(Token = "0x60021FC")]
			[Address(RVA = "0x111EE98", Offset = "0x111EE98", VA = "0x111EE98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEBA20", Offset = "0xBEBA20")]
			add
			{
			}
			[Token(Token = "0x60021FD")]
			[Address(RVA = "0x111EF3C", Offset = "0x111EF3C", VA = "0x111EF3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEBA30", Offset = "0xBEBA30")]
			remove
			{
			}
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0x111F02C", Offset = "0x111F02C", VA = "0x111F02C")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0x111F0C4", Offset = "0x111F0C4", VA = "0x111F0C4")]
		public void Awake()
		{
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x111F1C4", Offset = "0x111F1C4", VA = "0x111F1C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0x111F40C", Offset = "0x111F40C", VA = "0x111F40C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0x111F2C4", Offset = "0x111F2C4", VA = "0x111F2C4")]
		private void AttachToCameraRendering()
		{
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0x111F480", Offset = "0x111F480", VA = "0x111F480")]
		private void DetachFromCameraRendering()
		{
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0x111F584", Offset = "0x111F584", VA = "0x111F584")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0x111F5DC", Offset = "0x111F5DC", VA = "0x111F5DC")]
		private void UpdateVelocity()
		{
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0x111F750", Offset = "0x111F750", VA = "0x111F750")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0x111F7C0", Offset = "0x111F7C0", VA = "0x111F7C0")]
		private void EmissionStep(float time)
		{
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0x111F0C8", Offset = "0x111F0C8", VA = "0x111F0C8")]
		private void Warmup()
		{
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x111FFE8", Offset = "0x111FFE8", VA = "0x111FFE8")]
		private void PhysicsStep(float timestep)
		{
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0x112023C", Offset = "0x112023C", VA = "0x112023C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0x111FD90", Offset = "0x111FD90", VA = "0x111FD90")]
		public void EmitPoint(Vector3 position)
		{
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0x111F91C", Offset = "0x111F91C", VA = "0x111F91C")]
		private void SnapLastPointToTransform()
		{
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0x111FB48", Offset = "0x111FB48", VA = "0x111FB48")]
		private void UpdatePointsLifecycle()
		{
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0x11202D8", Offset = "0x11202D8", VA = "0x11202D8")]
		private void ClearMeshData()
		{
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0x11203A8", Offset = "0x11203A8", VA = "0x11203A8")]
		private void CommitMeshData()
		{
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0x1120448", Offset = "0x1120448", VA = "0x1120448")]
		private void RenderMesh(Camera cam)
		{
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0x112067C", Offset = "0x112067C", VA = "0x112067C")]
		public float GetLenght(ElasticArray<Point> input)
		{
			return default(float);
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0x11207B8", Offset = "0x11207B8", VA = "0x11207B8")]
		private ElasticArray<Point> GetRenderablePoints(int start, int end)
		{
			return null;
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0x1121BF4", Offset = "0x1121BF4", VA = "0x1121BF4")]
		private CurveFrame InitializeCurveFrame(Vector3 point, Vector3 nextPoint)
		{
			return default(CurveFrame);
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0x1121E7C", Offset = "0x1121E7C", VA = "0x1121E7C")]
		private void UpdateTrailMesh(Camera cam)
		{
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0x1122144", Offset = "0x1122144", VA = "0x1122144")]
		private void UpdateSegmentMesh(int start, int end, Vector3 localCamPosition)
		{
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0x1122C9C", Offset = "0x1122C9C", VA = "0x1122C9C")]
		private void AppendSection(Point[] data, ref CurveFrame frame, int i, int count, float sectionThickness, float vCoord)
		{
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0x1123174", Offset = "0x1123174", VA = "0x1123174")]
		private void AppendFlatTrail(Point[] data, ref CurveFrame frame, int i, int count, float sectionThickness, float vCoord, ref int va, ref int vb)
		{
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0x1124084", Offset = "0x1124084", VA = "0x1124084")]
		public AraTrail()
		{
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0x11244F8", Offset = "0x11244F8", VA = "0x11244F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBEBA40", Offset = "0xBEBA40")]
		private void <AttachToCameraRendering>b__80_0(ScriptableRenderContext cntxt, Camera cam)
		{
		}
	}
	[Token(Token = "0x200056A")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBD7D48", Offset = "0xBD7D48")]
	public class ElasticArray<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x200070C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD89FC", Offset = "0xBD89FC")]
		private sealed class <GetEnumerator>d__2 : IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002231")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002232")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x4002233")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ElasticArray<T> <>4__this;

			[Token(Token = "0x4002234")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <i>5__2;

			[Token(Token = "0x170003D0")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x600277A")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x170003D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600277C")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002777")]
			[DebuggerHidden]
			public <GetEnumerator>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002778")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002779")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600277B")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] data;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int count;

		[Token(Token = "0x170002FF")]
		public int Count
		{
			[Token(Token = "0x6002225")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000300")]
		public bool IsReadOnly
		{
			[Token(Token = "0x6002226")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000301")]
		public T Item
		{
			[Token(Token = "0x600222A")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x600222B")]
			set
			{
			}
		}

		[Token(Token = "0x17000302")]
		public T[] Data
		{
			[Token(Token = "0x600222C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600221E")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBEBA50", Offset = "0xBEBA50")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600221F")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002220")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6002221")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002222")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6002223")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6002224")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6002227")]
		public int IndexOf(T item)
		{
			return default(int);
		}

		[Token(Token = "0x6002228")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6002229")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x600222D")]
		public void SetCount(int count)
		{
		}

		[Token(Token = "0x600222E")]
		public void EnsureCapacity(int capacity)
		{
		}

		[Token(Token = "0x600222F")]
		public void Reverse()
		{
		}

		[Token(Token = "0x6002230")]
		public ElasticArray()
		{
		}
	}
	[Token(Token = "0x200056B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD7D80", Offset = "0xBD7D80")]
	public class ColorFromSpeed : MonoBehaviour
	{
		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AraTrail trail;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE7188", Offset = "0xBE7188")]
		public Gradient colorFromSpeed;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE71C0", Offset = "0xBE71C0")]
		public float minSpeed;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBE71F8", Offset = "0xBE71F8")]
		public float maxSpeed;

		[Token(Token = "0x6002231")]
		[Address(RVA = "0x11248E0", Offset = "0x11248E0", VA = "0x11248E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0x112498C", Offset = "0x112498C", VA = "0x112498C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0x1124A14", Offset = "0x1124A14", VA = "0x1124A14")]
		private void SetColorFromSpeed()
		{
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0x1124BAC", Offset = "0x1124BAC", VA = "0x1124BAC")]
		public ColorFromSpeed()
		{
		}
	}
	[Token(Token = "0x200056C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD7DE4", Offset = "0xBD7DE4")]
	public class ElectricalArc : MonoBehaviour
	{
		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AraTrail trail;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform source;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform target;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int points;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float burstInterval;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float burstRandom;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float speedRandom;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float positionRandom;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float accum;

		[Token(Token = "0x6002235")]
		[Address(RVA = "0x1124C28", Offset = "0x1124C28", VA = "0x1124C28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0x1124C9C", Offset = "0x1124C9C", VA = "0x1124C9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0x1124D04", Offset = "0x1124D04", VA = "0x1124D04")]
		private void ChangeArc()
		{
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0x112504C", Offset = "0x112504C", VA = "0x112504C")]
		public ElectricalArc()
		{
		}
	}
	[Token(Token = "0x200056D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD7E48", Offset = "0xBD7E48")]
	public class TireTrack : MonoBehaviour
	{
		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AraTrail trail;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float offset;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxDist;

		[Token(Token = "0x6002239")]
		[Address(RVA = "0x1125068", Offset = "0x1125068", VA = "0x1125068")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0x1125114", Offset = "0x1125114", VA = "0x1125114")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0x112519C", Offset = "0x112519C", VA = "0x112519C")]
		private void ProjectToGround()
		{
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0x11254B0", Offset = "0x11254B0", VA = "0x11254B0")]
		public TireTrack()
		{
		}
	}
	[Token(Token = "0x200056E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBD7EAC", Offset = "0xBD7EAC")]
	public class TrailSection : ScriptableObject
	{
		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public List<Vector2> vertices;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int snapX;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int snapY;

		[Token(Token = "0x17000303")]
		public int Segments
		{
			[Token(Token = "0x600223D")]
			[Address(RVA = "0x1124030", Offset = "0x1124030", VA = "0x1124030")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0x11254C4", Offset = "0x11254C4", VA = "0x11254C4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0x1125564", Offset = "0x1125564", VA = "0x1125564")]
		public void CirclePreset(int segments)
		{
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0x11256F4", Offset = "0x11256F4", VA = "0x11256F4")]
		public static int SnapTo(float val, int snapInterval, int threshold)
		{
			return default(int);
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0x11257B0", Offset = "0x11257B0", VA = "0x11257B0")]
		public TrailSection()
		{
		}
	}
}
