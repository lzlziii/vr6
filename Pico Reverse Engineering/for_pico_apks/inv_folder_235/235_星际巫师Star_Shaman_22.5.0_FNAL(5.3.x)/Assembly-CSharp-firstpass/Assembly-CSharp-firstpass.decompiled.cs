using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using Cinemachine;
using ES3Internal;
using ES3Types;
using Il2CppDummyDll;
using TMPro;
using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Scripting;
using UnityEngine.UI;
using Valve.VR;
using Viveport;
using Viveport.Internal;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC1FD8", Offset = "0xBC1FD8")]
internal sealed class <>f__AnonymousType0<<assembly>j__TPar, <type>j__TPar>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xBCAB30", Offset = "0xBCAB30")]
	private readonly <assembly>j__TPar <assembly>i__Field;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xBCAB44", Offset = "0xBCAB44")]
	private readonly <type>j__TPar <type>i__Field;

	[Token(Token = "0x17000001")]
	public <assembly>j__TPar assembly
	{
		[Token(Token = "0x6000001")]
		get
		{
			return (<assembly>j__TPar)null;
		}
	}

	[Token(Token = "0x17000002")]
	public <type>j__TPar type
	{
		[Token(Token = "0x6000002")]
		get
		{
			return (<type>j__TPar)null;
		}
	}

	[Token(Token = "0x6000003")]
	[DebuggerHidden]
	public <>f__AnonymousType0(<assembly>j__TPar assembly, <type>j__TPar type)
	{
	}

	[Token(Token = "0x6000004")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000005")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000006")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000003")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC1FE8", Offset = "0xBC1FE8")]
[ImageEffectAllowedInSceneView]
[ExecuteInEditMode]
public class Pixelize : MonoBehaviour
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Shader _screenAndMaskShader;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material _screenAndMaskMaterial;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture _temporaryRenderTexture;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Shader _combineLayersShader;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material _combineLayersMaterial;

	[Token(Token = "0x17000003")]
	private Shader ScreenAndMaskShader
	{
		[Token(Token = "0x6000007")]
		[Address(RVA = "0x10A8630", Offset = "0x10A8630", VA = "0x10A8630")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000004")]
	private Material ScreenAndMaskMaterial
	{
		[Token(Token = "0x6000008")]
		[Address(RVA = "0x10A86D0", Offset = "0x10A86D0", VA = "0x10A86D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000005")]
	private RenderTexture TemporaryRenderTarget
	{
		[Token(Token = "0x6000009")]
		[Address(RVA = "0x10A8798", Offset = "0x10A8798", VA = "0x10A8798")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000006")]
	private Shader CombineLayersShader
	{
		[Token(Token = "0x600000A")]
		[Address(RVA = "0x10A8920", Offset = "0x10A8920", VA = "0x10A8920")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000007")]
	private Material CombineLayersMaterial
	{
		[Token(Token = "0x600000B")]
		[Address(RVA = "0x10A89C0", Offset = "0x10A89C0", VA = "0x10A89C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x10A8A88", Offset = "0x10A8A88", VA = "0x10A8A88")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x10A881C", Offset = "0x10A881C", VA = "0x10A881C")]
	private void CreateTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x10A8B5C", Offset = "0x10A8B5C", VA = "0x10A8B5C")]
	private void CheckTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x10A8BE0", Offset = "0x10A8BE0", VA = "0x10A8BE0")]
	private void ReleaseTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x10A8C1C", Offset = "0x10A8C1C", VA = "0x10A8C1C")]
	public Pixelize()
	{
	}
}
[Token(Token = "0x2000004")]
[ExecuteInEditMode]
public class VolumetricSphere : MonoBehaviour
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCAB58", Offset = "0xBCAB58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCAB58", Offset = "0xBCAB58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBCAB58", Offset = "0xBCAB58")]
	public float radius;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCABD4", Offset = "0xBCABD4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBCABD4", Offset = "0xBCABD4")]
	public float density;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCAC28", Offset = "0xBCAC28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBCAC28", Offset = "0xBCAC28")]
	public float exponent;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCAC80", Offset = "0xBCAC80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBCAC80", Offset = "0xBCAC80")]
	public int maxPixelizationLevel;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCACD4", Offset = "0xBCACD4")]
	public bool enableLayersInterpolation;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCAD0C", Offset = "0xBCAD0C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCAD0C", Offset = "0xBCAD0C")]
	public bool debugSphere;

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x172EA7C", Offset = "0x172EA7C", VA = "0x172EA7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x172EBEC", Offset = "0x172EBEC", VA = "0x172EBEC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x172EC3C", Offset = "0x172EC3C", VA = "0x172EC3C")]
	public VolumetricSphere()
	{
	}
}
[Token(Token = "0x2000005")]
public class SimpleGPUInstancingExample : MonoBehaviour
{
	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Prefab;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material InstancedMaterial;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x10A9F14", Offset = "0x10A9F14", VA = "0x10A9F14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x10AA174", Offset = "0x10AA174", VA = "0x10AA174")]
	public SimpleGPUInstancingExample()
	{
	}
}
[Token(Token = "0x2000006")]
public class SimpleMoveExample : MonoBehaviour
{
	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_previous;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_target;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_originalPosition;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 BoundingVolume;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float Speed;

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x10AA17C", Offset = "0x10AA17C", VA = "0x10AA17C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x10AA1F8", Offset = "0x10AA1F8", VA = "0x10AA1F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x10AA4B4", Offset = "0x10AA4B4", VA = "0x10AA4B4")]
	public SimpleMoveExample()
	{
	}
}
[Token(Token = "0x2000007")]
public class Smear : MonoBehaviour
{
	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Queue<Vector3> m_recentPositions;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int FramesBufferSize;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer Renderer;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_instancedMaterial;

	[Token(Token = "0x17000008")]
	private Material InstancedMaterial
	{
		[Token(Token = "0x6000019")]
		[Address(RVA = "0x10AA518", Offset = "0x10AA518", VA = "0x10AA518")]
		get
		{
			return null;
		}
		[Token(Token = "0x600001A")]
		[Address(RVA = "0x10AA520", Offset = "0x10AA520", VA = "0x10AA520")]
		set
		{
		}
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x10AA528", Offset = "0x10AA528", VA = "0x10AA528")]
	private void Start()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x10AA564", Offset = "0x10AA564", VA = "0x10AA564")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x10AA6E8", Offset = "0x10AA6E8", VA = "0x10AA6E8")]
	public Smear()
	{
	}
}
[Token(Token = "0x2000008")]
[ExecuteInEditMode]
public class PostProcessExample : MonoBehaviour
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material PostProcessMat;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x10A8C24", Offset = "0x10A8C24", VA = "0x10A8C24")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x10A8CD8", Offset = "0x10A8CD8", VA = "0x10A8CD8")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x10A8D5C", Offset = "0x10A8D5C", VA = "0x10A8D5C")]
	public PostProcessExample()
	{
	}
}
[Token(Token = "0x2000009")]
[ExecuteInEditMode]
public class SpriteMaskController : MonoBehaviour
{
	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpriteRenderer m_spriteRenderer;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector4 m_uvs;

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x10AA764", Offset = "0x10AA764", VA = "0x10AA764")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x10AA818", Offset = "0x10AA818", VA = "0x10AA818")]
	public SpriteMaskController()
	{
	}
}
[Token(Token = "0x200000A")]
[ExecuteInEditMode]
public class CurvedUIInputModule : StandaloneInputModule
{
	[Token(Token = "0x200020D")]
	public enum CUIControlMethod
	{
		[Token(Token = "0x4000B01")]
		MOUSE = 0,
		[Token(Token = "0x4000B02")]
		GAZE = 1,
		[Token(Token = "0x4000B03")]
		WORLD_MOUSE = 2,
		[Token(Token = "0x4000B04")]
		CUSTOM_RAY = 3,
		[Token(Token = "0x4000B05")]
		STEAMVR_LEGACY = 4,
		[Token(Token = "0x4000B06")]
		OCULUSVR = 5,
		[Token(Token = "0x4000B07")]
		GOOGLEVR = 7,
		[Token(Token = "0x4000B08")]
		STEAMVR_2 = 8,
		[Token(Token = "0x4000B09")]
		UNITY_XR = 9
	}

	[Token(Token = "0x200020E")]
	public enum Hand
	{
		[Token(Token = "0x4000B0B")]
		Both,
		[Token(Token = "0x4000B0C")]
		Right,
		[Token(Token = "0x4000B0D")]
		Left
	}

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private CUIControlMethod controlMethod;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private string submitButtonName;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Camera mainEventCamera;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private LayerMask raycastLayerMask;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private bool gazeUseTimedClick;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private float gazeClickTimer;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private float gazeClickTimerDelay;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Image gazeTimedClickProgressImage;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private float worldSpaceMouseSensitivity;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	private Hand usedHand;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBCAE0C", Offset = "0xBCAE0C")]
	[SerializeField]
	private Transform pointerTransformOverride;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool disableOtherInputModulesOnStart;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CurvedUIInputModule instance;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject currentDragging;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject currentPointedAt;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameObject m_rightController;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject m_leftController;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float gazeTimerProgress;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Ray customControllerRay;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float dragThreshold;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool pressedDown;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	private bool pressedLastFrame;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 lastMouseOnScreenPos;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector2 worldSpaceMouseInCanvasSpace;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector2 lastWorldSpaceMouseOnCanvas;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector2 worldSpaceMouseOnCanvasDelta;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private Transform TouchControllerTransform;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private OVRInput.Button InteractionButton;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private OVRCameraRig oculusCameraRig;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private OVRInput.Controller activeCont;

	[Token(Token = "0x17000009")]
	public static CurvedUIInputModule Instance
	{
		[Token(Token = "0x6000030")]
		[Address(RVA = "0xFAF8B0", Offset = "0xFAF8B0", VA = "0xFAF8B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000031")]
		[Address(RVA = "0xFC3BB4", Offset = "0xFC3BB4", VA = "0xFC3BB4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public static CUIControlMethod ControlMethod
	{
		[Token(Token = "0x6000032")]
		[Address(RVA = "0xFAF844", Offset = "0xFAF844", VA = "0xFAF844")]
		get
		{
			return default(CUIControlMethod);
		}
		[Token(Token = "0x6000033")]
		[Address(RVA = "0xFBC314", Offset = "0xFBC314", VA = "0xFBC314")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public LayerMask RaycastLayerMask
	{
		[Token(Token = "0x6000034")]
		[Address(RVA = "0xFC3C24", Offset = "0xFC3C24", VA = "0xFC3C24")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x6000035")]
		[Address(RVA = "0xFC3C2C", Offset = "0xFC3C2C", VA = "0xFC3C2C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public Hand UsedHand
	{
		[Token(Token = "0x6000036")]
		[Address(RVA = "0xFC3C34", Offset = "0xFC3C34", VA = "0xFC3C34")]
		get
		{
			return default(Hand);
		}
		[Token(Token = "0x6000037")]
		[Address(RVA = "0xFC3C3C", Offset = "0xFC3C3C", VA = "0xFC3C3C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public Transform ControllerTransform
	{
		[Token(Token = "0x6000038")]
		[Address(RVA = "0xFAFE00", Offset = "0xFAFE00", VA = "0xFAFE00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000E")]
	public Vector3 ControllerPointingDirection
	{
		[Token(Token = "0x6000039")]
		[Address(RVA = "0xFAFF2C", Offset = "0xFAFF2C", VA = "0xFAFF2C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700000F")]
	public Vector3 ControllerPointingOrigin
	{
		[Token(Token = "0x600003A")]
		[Address(RVA = "0xFC3CB8", Offset = "0xFC3CB8", VA = "0xFC3CB8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000010")]
	public Transform PointerTransformOverride
	{
		[Token(Token = "0x600003B")]
		[Address(RVA = "0xFC3C44", Offset = "0xFC3C44", VA = "0xFC3C44")]
		get
		{
			return null;
		}
		[Token(Token = "0x600003C")]
		[Address(RVA = "0xFAFEB0", Offset = "0xFAFEB0", VA = "0xFAFEB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public GameObject CurrentPointedAt
	{
		[Token(Token = "0x600003D")]
		[Address(RVA = "0xFC3CD8", Offset = "0xFC3CD8", VA = "0xFC3CD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000012")]
	public Camera EventCamera
	{
		[Token(Token = "0x600003E")]
		[Address(RVA = "0xFC3CE0", Offset = "0xFC3CE0", VA = "0xFC3CE0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600003F")]
		[Address(RVA = "0xFC2C9C", Offset = "0xFC2C9C", VA = "0xFC2C9C")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public static Ray CustomControllerRay
	{
		[Token(Token = "0x6000041")]
		[Address(RVA = "0xFC3CE8", Offset = "0xFC3CE8", VA = "0xFC3CE8")]
		get
		{
			return default(Ray);
		}
		[Token(Token = "0x6000042")]
		[Address(RVA = "0xFC3AA0", Offset = "0xFC3AA0", VA = "0xFC3AA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public static bool CustomControllerButtonState
	{
		[Token(Token = "0x6000043")]
		[Address(RVA = "0xFC3D6C", Offset = "0xFC3D6C", VA = "0xFC3D6C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000044")]
		[Address(RVA = "0xFC3B3C", Offset = "0xFC3B3C", VA = "0xFC3B3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCF918", Offset = "0xBCF918")]
	public static bool CustomControllerButtonDown
	{
		[Token(Token = "0x6000045")]
		[Address(RVA = "0xFC3DD8", Offset = "0xFC3DD8", VA = "0xFC3DD8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000046")]
		[Address(RVA = "0xFC3E44", Offset = "0xFC3E44", VA = "0xFC3E44")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public Vector2 WorldSpaceMouseInCanvasSpace
	{
		[Token(Token = "0x6000047")]
		[Address(RVA = "0xFC3EB8", Offset = "0xFC3EB8", VA = "0xFC3EB8")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000048")]
		[Address(RVA = "0xFC3EC4", Offset = "0xFC3EC4", VA = "0xFC3EC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public Vector2 WorldSpaceMouseInCanvasSpaceDelta
	{
		[Token(Token = "0x6000049")]
		[Address(RVA = "0xFC3ED8", Offset = "0xFC3ED8", VA = "0xFC3ED8")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000018")]
	public float WorldSpaceMouseSensitivity
	{
		[Token(Token = "0x600004A")]
		[Address(RVA = "0xFC3F6C", Offset = "0xFC3F6C", VA = "0xFC3F6C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600004B")]
		[Address(RVA = "0xFC3F74", Offset = "0xFC3F74", VA = "0xFC3F74")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public bool GazeUseTimedClick
	{
		[Token(Token = "0x600004C")]
		[Address(RVA = "0xFC3F7C", Offset = "0xFC3F7C", VA = "0xFC3F7C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600004D")]
		[Address(RVA = "0xFC3F84", Offset = "0xFC3F84", VA = "0xFC3F84")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public float GazeClickTimer
	{
		[Token(Token = "0x600004E")]
		[Address(RVA = "0xFC3F90", Offset = "0xFC3F90", VA = "0xFC3F90")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600004F")]
		[Address(RVA = "0xFBC7CC", Offset = "0xFBC7CC", VA = "0xFBC7CC")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public float GazeClickTimerDelay
	{
		[Token(Token = "0x6000050")]
		[Address(RVA = "0xFC3F98", Offset = "0xFC3F98", VA = "0xFC3F98")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000051")]
		[Address(RVA = "0xFBC930", Offset = "0xFBC930", VA = "0xFBC930")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public float GazeTimerProgress
	{
		[Token(Token = "0x6000052")]
		[Address(RVA = "0xFC3FA0", Offset = "0xFC3FA0", VA = "0xFC3FA0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700001D")]
	public Image GazeTimedClickProgressImage
	{
		[Token(Token = "0x6000053")]
		[Address(RVA = "0xFC3FA8", Offset = "0xFC3FA8", VA = "0xFC3FA8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000054")]
		[Address(RVA = "0xFC3FB0", Offset = "0xFC3FB0", VA = "0xFC3FB0")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public OVRCameraRig OculusCameraRig
	{
		[Token(Token = "0x6000055")]
		[Address(RVA = "0xFC3FB8", Offset = "0xFC3FB8", VA = "0xFC3FB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000056")]
		[Address(RVA = "0xFC3FC0", Offset = "0xFC3FC0", VA = "0xFC3FC0")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public OVRInput.Button OculusTouchInteractionButton
	{
		[Token(Token = "0x6000057")]
		[Address(RVA = "0xFC3FD0", Offset = "0xFC3FD0", VA = "0xFC3FD0")]
		get
		{
			return default(OVRInput.Button);
		}
		[Token(Token = "0x6000058")]
		[Address(RVA = "0xFC3FD8", Offset = "0xFC3FD8", VA = "0xFC3FD8")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public Transform OculusTouchUsedControllerTransform
	{
		[Token(Token = "0x6000059")]
		[Address(RVA = "0xFAF9B4", Offset = "0xFAF9B4", VA = "0xFAF9B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xFC2B1C", Offset = "0xFC2B1C", VA = "0xFC2B1C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xFC2D50", Offset = "0xFC2D50", VA = "0xFC2D50", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xFC3018", Offset = "0xFC3018", VA = "0xFC3018", Slot = "31")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xFC3230", Offset = "0xFC3230", VA = "0xFC3230", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xFC3500", Offset = "0xFC3500", VA = "0xFC3500", Slot = "32")]
	protected virtual void ProcessGaze()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xFC3568", Offset = "0xFC3568", VA = "0xFC3568", Slot = "33")]
	protected virtual void ProcessCustomRayController()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xFC3570", Offset = "0xFC3570", VA = "0xFC3570", Slot = "27")]
	protected override MouseState GetMousePointerEventData(int id)
	{
		return null;
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xFC3690", Offset = "0xFC3690", VA = "0xFC3690")]
	private PointerEventData.FramePressState CustomRayFramePressedState()
	{
		return default(PointerEventData.FramePressState);
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xFC36BC", Offset = "0xFC36BC", VA = "0xFC36BC", Slot = "34")]
	protected virtual void ProcessViveControllers()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xFC36C0", Offset = "0xFC36C0", VA = "0xFC36C0", Slot = "35")]
	protected virtual void ProcessOculusVRController()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xFC34FC", Offset = "0xFC34FC", VA = "0xFC34FC")]
	private void ProcessSteamVR2Controllers()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xFC3BB0", Offset = "0xFC3BB0", VA = "0xFC3BB0", Slot = "36")]
	protected virtual void ProcessUnityXRController()
	{
	}

	[Token(Token = "0x600002F")]
	private static T EnableInputModule<T>() where T : BaseInputModule
	{
		return null;
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xFB15B4", Offset = "0xFB15B4", VA = "0xFB15B4")]
	public Ray GetEventRay([Optional] Camera eventCam)
	{
		return default(Ray);
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xFC3FE0", Offset = "0xFC3FE0", VA = "0xFC3FE0")]
	public CurvedUIInputModule()
	{
	}
}
[Token(Token = "0x200000B")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xBC20AC", Offset = "0xBC20AC")]
public class ES3Serializable : Attribute
{
	[Token(Token = "0x600005C")]
	[Address(RVA = "0x17C49B0", Offset = "0x17C49B0", VA = "0x17C49B0")]
	public ES3Serializable()
	{
	}
}
[Token(Token = "0x200000C")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xBC20C0", Offset = "0xBC20C0")]
public class ES3NonSerializable : Attribute
{
	[Token(Token = "0x600005D")]
	[Address(RVA = "0x17C3878", Offset = "0x17C3878", VA = "0x17C3878")]
	public ES3NonSerializable()
	{
	}
}
[Token(Token = "0x200000D")]
public class ES3AutoSave : MonoBehaviour
{
	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool saveChildren;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isQuitting;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<Component> componentsToSave;

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x1617294", Offset = "0x1617294", VA = "0x1617294")]
	public void Awake()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x16178E0", Offset = "0x16178E0", VA = "0x16178E0")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x16178EC", Offset = "0x16178EC", VA = "0x16178EC")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x1617A58", Offset = "0x1617A58", VA = "0x1617A58")]
	public ES3AutoSave()
	{
	}
}
[Token(Token = "0x200000E")]
public class ES3AutoSaveMgr : MonoBehaviour
{
	[Token(Token = "0x200020F")]
	public enum LoadEvent
	{
		[Token(Token = "0x4000B0F")]
		None,
		[Token(Token = "0x4000B10")]
		Awake,
		[Token(Token = "0x4000B11")]
		Start
	}

	[Token(Token = "0x2000210")]
	public enum SaveEvent
	{
		[Token(Token = "0x4000B13")]
		None,
		[Token(Token = "0x4000B14")]
		OnApplicationQuit,
		[Token(Token = "0x4000B15")]
		OnApplicationPause
	}

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ES3AutoSaveMgr _current;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string key;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SaveEvent saveEvent;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LoadEvent loadEvent;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ES3SerializableSettings settings;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HashSet<ES3AutoSave> autoSaves;

	[Token(Token = "0x17000021")]
	public static ES3AutoSaveMgr Current
	{
		[Token(Token = "0x6000062")]
		[Address(RVA = "0x161737C", Offset = "0x161737C", VA = "0x161737C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000022")]
	public static ES3AutoSaveMgr Instance
	{
		[Token(Token = "0x6000063")]
		[Address(RVA = "0x1617AD4", Offset = "0x1617AD4", VA = "0x1617AD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x1617B30", Offset = "0x1617B30", VA = "0x1617B30")]
	public void Save()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x1617D6C", Offset = "0x1617D6C", VA = "0x1617D6C")]
	public void Load()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x1617E14", Offset = "0x1617E14", VA = "0x1617E14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x1617E28", Offset = "0x1617E28", VA = "0x1617E28")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x1617FAC", Offset = "0x1617FAC", VA = "0x1617FAC")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x1617FC0", Offset = "0x1617FC0", VA = "0x1617FC0")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x16177EC", Offset = "0x16177EC", VA = "0x16177EC")]
	public static void AddAutoSave(ES3AutoSave autoSave)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x1617964", Offset = "0x1617964", VA = "0x1617964")]
	public static void RemoveAutoSave(ES3AutoSave autoSave)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x161802C", Offset = "0x161802C", VA = "0x161802C")]
	public ES3AutoSaveMgr()
	{
	}
}
[Token(Token = "0x200000F")]
public static class ES3
{
	[Token(Token = "0x2000211")]
	public enum Location
	{
		[Token(Token = "0x4000B17")]
		File,
		[Token(Token = "0x4000B18")]
		PlayerPrefs,
		[Token(Token = "0x4000B19")]
		InternalMS,
		[Token(Token = "0x4000B1A")]
		Resources,
		[Token(Token = "0x4000B1B")]
		Cache
	}

	[Token(Token = "0x2000212")]
	public enum Directory
	{
		[Token(Token = "0x4000B1D")]
		PersistentDataPath,
		[Token(Token = "0x4000B1E")]
		DataPath
	}

	[Token(Token = "0x2000213")]
	public enum EncryptionType
	{
		[Token(Token = "0x4000B20")]
		None,
		[Token(Token = "0x4000B21")]
		AES
	}

	[Token(Token = "0x2000214")]
	public enum CompressionType
	{
		[Token(Token = "0x4000B23")]
		None,
		[Token(Token = "0x4000B24")]
		Gzip
	}

	[Token(Token = "0x2000215")]
	public enum Format
	{
		[Token(Token = "0x4000B26")]
		JSON,
		[Token(Token = "0x4000B27")]
		Binary_Alpha
	}

	[Token(Token = "0x2000216")]
	public enum ReferenceMode
	{
		[Token(Token = "0x4000B29")]
		ByRef,
		[Token(Token = "0x4000B2A")]
		ByValue,
		[Token(Token = "0x4000B2B")]
		ByRefAndValue
	}

	[Token(Token = "0x600006E")]
	public static void Save<T>(string key, T value)
	{
	}

	[Token(Token = "0x600006F")]
	public static void Save<T>(string key, T value, string filePath)
	{
	}

	[Token(Token = "0x6000070")]
	public static void Save<T>(string key, T value, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000071")]
	public static void Save<T>(string key, T value, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xFC413C", Offset = "0xFC413C", VA = "0xFC413C")]
	public static void SaveRaw(byte[] bytes)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xFC4374", Offset = "0xFC4374", VA = "0xFC4374")]
	public static void SaveRaw(byte[] bytes, string filePath)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xFC43EC", Offset = "0xFC43EC", VA = "0xFC43EC")]
	public static void SaveRaw(byte[] bytes, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xFC41A8", Offset = "0xFC41A8", VA = "0xFC41A8")]
	public static void SaveRaw(byte[] bytes, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xFC4468", Offset = "0xFC4468", VA = "0xFC4468")]
	public static void SaveRaw(string str)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xFC4518", Offset = "0xFC4518", VA = "0xFC4518")]
	public static void SaveRaw(string str, string filePath)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xFC4590", Offset = "0xFC4590", VA = "0xFC4590")]
	public static void SaveRaw(string str, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xFC44D4", Offset = "0xFC44D4", VA = "0xFC44D4")]
	public static void SaveRaw(string str, ES3Settings settings)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xFC460C", Offset = "0xFC460C", VA = "0xFC460C")]
	public static void AppendRaw(byte[] bytes)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xFC484C", Offset = "0xFC484C", VA = "0xFC484C")]
	public static void AppendRaw(byte[] bytes, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xFC4678", Offset = "0xFC4678", VA = "0xFC4678")]
	public static void AppendRaw(byte[] bytes, ES3Settings settings)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xFC48C8", Offset = "0xFC48C8", VA = "0xFC48C8")]
	public static void AppendRaw(string str)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xFC4B2C", Offset = "0xFC4B2C", VA = "0xFC4B2C")]
	public static void AppendRaw(string str, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xFC4934", Offset = "0xFC4934", VA = "0xFC4934")]
	public static void AppendRaw(string str, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xFC4BA8", Offset = "0xFC4BA8", VA = "0xFC4BA8")]
	public static void SaveImage(Texture2D texture, string imagePath)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xFC4D8C", Offset = "0xFC4D8C", VA = "0xFC4D8C")]
	public static void SaveImage(Texture2D texture, string imagePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xFC4C20", Offset = "0xFC4C20", VA = "0xFC4C20")]
	public static void SaveImage(Texture2D texture, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xFC4E08", Offset = "0xFC4E08", VA = "0xFC4E08")]
	public static object Load(string key)
	{
		return null;
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xFC4E80", Offset = "0xFC4E80", VA = "0xFC4E80")]
	public static object Load(string key, string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xFC4F04", Offset = "0xFC4F04", VA = "0xFC4F04")]
	public static object Load(string key, string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xFC4F8C", Offset = "0xFC4F8C", VA = "0xFC4F8C")]
	public static object Load(string key, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000087")]
	public static T Load<T>(string key)
	{
		return (T)null;
	}

	[Token(Token = "0x6000088")]
	public static T Load<T>(string key, string filePath)
	{
		return (T)null;
	}

	[Token(Token = "0x6000089")]
	public static T Load<T>(string key, string filePath, ES3Settings settings)
	{
		return (T)null;
	}

	[Token(Token = "0x600008A")]
	public static T Load<T>(string key, ES3Settings settings)
	{
		return (T)null;
	}

	[Token(Token = "0x600008B")]
	public static T Load<T>(string key, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x600008C")]
	public static T Load<T>(string key, string filePath, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x600008D")]
	public static T Load<T>(string key, string filePath, T defaultValue, ES3Settings settings)
	{
		return (T)null;
	}

	[Token(Token = "0x600008E")]
	public static T Load<T>(string key, T defaultValue, ES3Settings settings)
	{
		return (T)null;
	}

	[Token(Token = "0x600008F")]
	public static void LoadInto<T>(string key, object obj)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xFC4FEC", Offset = "0xFC4FEC", VA = "0xFC4FEC")]
	public static void LoadInto(string key, string filePath, object obj)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xFC5078", Offset = "0xFC5078", VA = "0xFC5078")]
	public static void LoadInto(string key, string filePath, object obj, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xFC5110", Offset = "0xFC5110", VA = "0xFC5110")]
	public static void LoadInto(string key, object obj, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000093")]
	public static void LoadInto<T>(string key, T obj) where T : class
	{
	}

	[Token(Token = "0x6000094")]
	public static void LoadInto<T>(string key, string filePath, T obj) where T : class
	{
	}

	[Token(Token = "0x6000095")]
	public static void LoadInto<T>(string key, string filePath, T obj, ES3Settings settings) where T : class
	{
	}

	[Token(Token = "0x6000096")]
	public static void LoadInto<T>(string key, T obj, ES3Settings settings) where T : class
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xFC5178", Offset = "0xFC5178", VA = "0xFC5178")]
	public static string LoadString(string key, string defaultValue, string filePath = "")
	{
		return null;
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xFC5204", Offset = "0xFC5204", VA = "0xFC5204")]
	public static byte[] LoadRawBytes()
	{
		return null;
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xFC543C", Offset = "0xFC543C", VA = "0xFC543C")]
	public static byte[] LoadRawBytes(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xFC54A4", Offset = "0xFC54A4", VA = "0xFC54A4")]
	public static byte[] LoadRawBytes(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xFC5268", Offset = "0xFC5268", VA = "0xFC5268")]
	public static byte[] LoadRawBytes(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xFC5518", Offset = "0xFC5518", VA = "0xFC5518")]
	public static string LoadRawString()
	{
		return null;
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xFC55C8", Offset = "0xFC55C8", VA = "0xFC55C8")]
	public static string LoadRawString(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xFC5630", Offset = "0xFC5630", VA = "0xFC5630")]
	public static string LoadRawString(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xFC557C", Offset = "0xFC557C", VA = "0xFC557C")]
	public static string LoadRawString(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xFC56A4", Offset = "0xFC56A4", VA = "0xFC56A4")]
	public static Texture2D LoadImage(string imagePath)
	{
		return null;
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xFC5724", Offset = "0xFC5724", VA = "0xFC5724")]
	public static Texture2D LoadImage(string imagePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xFC5710", Offset = "0xFC5710", VA = "0xFC5710")]
	public static Texture2D LoadImage(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xFC579C", Offset = "0xFC579C", VA = "0xFC579C")]
	public static Texture2D LoadImage(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xFC5814", Offset = "0xFC5814", VA = "0xFC5814")]
	public static AudioClip LoadAudio(string audioFilePath, AudioType audioType)
	{
		return null;
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xFC5890", Offset = "0xFC5890", VA = "0xFC5890")]
	public static AudioClip LoadAudio(string audioFilePath, AudioType audioType, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000A6")]
	public static byte[] Serialize<T>(T value, [Optional] ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000A7")]
	public static T Deserialize<T>(byte[] bytes, [Optional] ES3Settings settings)
	{
		return (T)null;
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xFC5C0C", Offset = "0xFC5C0C", VA = "0xFC5C0C")]
	internal static object Deserialize(ES3Type type, byte[] bytes, [Optional] ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000A9")]
	public static void DeserializeInto<T>(byte[] bytes, T obj, [Optional] ES3Settings settings) where T : class
	{
	}

	[Token(Token = "0x60000AA")]
	public static void DeserializeInto<T>(ES3Type type, byte[] bytes, T obj, [Optional] ES3Settings settings) where T : class
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xFC5E78", Offset = "0xFC5E78", VA = "0xFC5E78")]
	public static void DeleteFile()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xFC6044", Offset = "0xFC6044", VA = "0xFC6044")]
	public static void DeleteFile(string filePath)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xFC60AC", Offset = "0xFC60AC", VA = "0xFC60AC")]
	public static void DeleteFile(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xFC5EDC", Offset = "0xFC5EDC", VA = "0xFC5EDC")]
	public static void DeleteFile(ES3Settings settings)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xFC6120", Offset = "0xFC6120", VA = "0xFC6120")]
	public static void CopyFile(string oldFilePath, string newFilePath)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xFC6584", Offset = "0xFC6584", VA = "0xFC6584")]
	public static void CopyFile(string oldFilePath, string newFilePath, ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xFC61B4", Offset = "0xFC61B4", VA = "0xFC61B4")]
	public static void CopyFile(ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xFC6628", Offset = "0xFC6628", VA = "0xFC6628")]
	public static void RenameFile(string oldFilePath, string newFilePath)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xFC6AAC", Offset = "0xFC6AAC", VA = "0xFC6AAC")]
	public static void RenameFile(string oldFilePath, string newFilePath, ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xFC66BC", Offset = "0xFC66BC", VA = "0xFC66BC")]
	public static void RenameFile(ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xFC6B50", Offset = "0xFC6B50", VA = "0xFC6B50")]
	public static void CopyDirectory(string oldDirectoryPath, string newDirectoryPath)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xFC6EAC", Offset = "0xFC6EAC", VA = "0xFC6EAC")]
	public static void CopyDirectory(string oldDirectoryPath, string newDirectoryPath, ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xFC6BE4", Offset = "0xFC6BE4", VA = "0xFC6BE4")]
	public static void CopyDirectory(ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xFC7274", Offset = "0xFC7274", VA = "0xFC7274")]
	public static void RenameDirectory(string oldDirectoryPath, string newDirectoryPath)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xFC74B8", Offset = "0xFC74B8", VA = "0xFC74B8")]
	public static void RenameDirectory(string oldDirectoryPath, string newDirectoryPath, ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xFC7308", Offset = "0xFC7308", VA = "0xFC7308")]
	public static void RenameDirectory(ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xFC755C", Offset = "0xFC755C", VA = "0xFC755C")]
	public static void DeleteDirectory(string directoryPath)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xFC76F8", Offset = "0xFC76F8", VA = "0xFC76F8")]
	public static void DeleteDirectory(string directoryPath, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xFC75C4", Offset = "0xFC75C4", VA = "0xFC75C4")]
	public static void DeleteDirectory(ES3Settings settings)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xFC776C", Offset = "0xFC776C", VA = "0xFC776C")]
	public static void DeleteKey(string key)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xFC79CC", Offset = "0xFC79CC", VA = "0xFC79CC")]
	public static void DeleteKey(string key, string filePath)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xFC7A44", Offset = "0xFC7A44", VA = "0xFC7A44")]
	public static void DeleteKey(string key, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xFC77D8", Offset = "0xFC77D8", VA = "0xFC77D8")]
	public static void DeleteKey(string key, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xFC7C44", Offset = "0xFC7C44", VA = "0xFC7C44")]
	public static bool KeyExists(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xFC7E70", Offset = "0xFC7E70", VA = "0xFC7E70")]
	public static bool KeyExists(string key, string filePath)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xFC7EE8", Offset = "0xFC7EE8", VA = "0xFC7EE8")]
	public static bool KeyExists(string key, string filePath, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xFC7CB0", Offset = "0xFC7CB0", VA = "0xFC7CB0")]
	public static bool KeyExists(string key, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xFC7F64", Offset = "0xFC7F64", VA = "0xFC7F64")]
	public static bool FileExists()
	{
		return default(bool);
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xFC7FC8", Offset = "0xFC7FC8", VA = "0xFC7FC8")]
	public static bool FileExists(string filePath)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xFC8030", Offset = "0xFC8030", VA = "0xFC8030")]
	public static bool FileExists(string filePath, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xFC7AC0", Offset = "0xFC7AC0", VA = "0xFC7AC0")]
	public static bool FileExists(ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xFC80A4", Offset = "0xFC80A4", VA = "0xFC80A4")]
	public static bool DirectoryExists(string folderPath)
	{
		return default(bool);
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xFC810C", Offset = "0xFC810C", VA = "0xFC810C")]
	public static bool DirectoryExists(string folderPath, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xFC6F50", Offset = "0xFC6F50", VA = "0xFC6F50")]
	public static bool DirectoryExists(ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xFC8180", Offset = "0xFC8180", VA = "0xFC8180")]
	public static string[] GetKeys()
	{
		return null;
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xFC85D0", Offset = "0xFC85D0", VA = "0xFC85D0")]
	public static string[] GetKeys(string filePath)
	{
		return null;
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xFC8638", Offset = "0xFC8638", VA = "0xFC8638")]
	public static string[] GetKeys(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xFC81E4", Offset = "0xFC81E4", VA = "0xFC81E4")]
	public static string[] GetKeys(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xFC86AC", Offset = "0xFC86AC", VA = "0xFC86AC")]
	public static string[] GetFiles()
	{
		return null;
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xFC8710", Offset = "0xFC8710", VA = "0xFC8710")]
	public static string[] GetFiles(string directoryPath)
	{
		return null;
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xFC8778", Offset = "0xFC8778", VA = "0xFC8778")]
	public static string[] GetFiles(string directoryPath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xFC7088", Offset = "0xFC7088", VA = "0xFC7088")]
	public static string[] GetFiles(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xFC87EC", Offset = "0xFC87EC", VA = "0xFC87EC")]
	public static string[] GetDirectories()
	{
		return null;
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xFC8850", Offset = "0xFC8850", VA = "0xFC8850")]
	public static string[] GetDirectories(string directoryPath)
	{
		return null;
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xFC88B8", Offset = "0xFC88B8", VA = "0xFC88B8")]
	public static string[] GetDirectories(string directoryPath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xFC71A0", Offset = "0xFC71A0", VA = "0xFC71A0")]
	public static string[] GetDirectories(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xFC892C", Offset = "0xFC892C", VA = "0xFC892C")]
	public static void CreateBackup()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xFC8A2C", Offset = "0xFC8A2C", VA = "0xFC8A2C")]
	public static void CreateBackup(string filePath)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xFC8A94", Offset = "0xFC8A94", VA = "0xFC8A94")]
	public static void CreateBackup(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xFC8990", Offset = "0xFC8990", VA = "0xFC8990")]
	public static void CreateBackup(ES3Settings settings)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xFC8B08", Offset = "0xFC8B08", VA = "0xFC8B08")]
	public static bool RestoreBackup(string filePath)
	{
		return default(bool);
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xFC8C28", Offset = "0xFC8C28", VA = "0xFC8C28")]
	public static bool RestoreBackup(string filePath, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xFC8B70", Offset = "0xFC8B70", VA = "0xFC8B70")]
	public static bool RestoreBackup(ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xFC8C9C", Offset = "0xFC8C9C", VA = "0xFC8C9C")]
	public static DateTime GetTimestamp()
	{
		return default(DateTime);
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xFC8E98", Offset = "0xFC8E98", VA = "0xFC8E98")]
	public static DateTime GetTimestamp(string filePath)
	{
		return default(DateTime);
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xFC8F00", Offset = "0xFC8F00", VA = "0xFC8F00")]
	public static DateTime GetTimestamp(string filePath, ES3Settings settings)
	{
		return default(DateTime);
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xFC8D00", Offset = "0xFC8D00", VA = "0xFC8D00")]
	public static DateTime GetTimestamp(ES3Settings settings)
	{
		return default(DateTime);
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xFC8F74", Offset = "0xFC8F74", VA = "0xFC8F74")]
	public static void StoreCachedFile()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xFC8FD8", Offset = "0xFC8FD8", VA = "0xFC8FD8")]
	public static void StoreCachedFile(string filePath)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xFC90A8", Offset = "0xFC90A8", VA = "0xFC90A8")]
	public static void StoreCachedFile(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xFC9040", Offset = "0xFC9040", VA = "0xFC9040")]
	public static void StoreCachedFile(ES3Settings settings)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xFC911C", Offset = "0xFC911C", VA = "0xFC911C")]
	public static void CacheFile()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xFC91E8", Offset = "0xFC91E8", VA = "0xFC91E8")]
	public static void CacheFile(string filePath)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xFC9250", Offset = "0xFC9250", VA = "0xFC9250")]
	public static void CacheFile(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xFC9180", Offset = "0xFC9180", VA = "0xFC9180")]
	public static void CacheFile(ES3Settings settings)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xFC92C4", Offset = "0xFC92C4", VA = "0xFC92C4")]
	public static void Init()
	{
	}
}
[Token(Token = "0x2000010")]
public class ES3File
{
	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCAE98", Offset = "0xBCAE98")]
	internal static Dictionary<string, ES3File> cachedFiles;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ES3Settings settings;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, ES3Data> cache;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool syncWithFile;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DateTime timestamp;

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x161D400", Offset = "0x161D400", VA = "0x161D400")]
	public ES3File()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x161D8E0", Offset = "0x161D8E0", VA = "0x161D8E0")]
	public ES3File(string filePath)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x161D95C", Offset = "0x161D95C", VA = "0x161D95C")]
	public ES3File(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x161D9DC", Offset = "0x161D9DC", VA = "0x161D9DC")]
	public ES3File(ES3Settings settings)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x161D9E4", Offset = "0x161D9E4", VA = "0x161D9E4")]
	public ES3File(bool syncWithFile)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x161DA60", Offset = "0x161DA60", VA = "0x161DA60")]
	public ES3File(string filePath, bool syncWithFile)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x161DAE0", Offset = "0x161DAE0", VA = "0x161DAE0")]
	public ES3File(string filePath, ES3Settings settings, bool syncWithFile)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x161D470", Offset = "0x161D470", VA = "0x161D470")]
	public ES3File(ES3Settings settings, bool syncWithFile)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x161DB6C", Offset = "0x161DB6C", VA = "0x161DB6C")]
	public ES3File(byte[] bytes, [Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x161DC7C", Offset = "0x161DC7C", VA = "0x161DC7C")]
	public void Sync()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x161DFC8", Offset = "0x161DFC8", VA = "0x161DFC8")]
	public void Sync(string filePath, [Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x161DC84", Offset = "0x161DC84", VA = "0x161DC84")]
	public void Sync([Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x161B614", Offset = "0x161B614", VA = "0x161B614")]
	public void Clear()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x161E044", Offset = "0x161E044", VA = "0x161E044")]
	public string[] GetKeys()
	{
		return null;
	}

	[Token(Token = "0x60000FB")]
	public void Save<T>(string key, T value)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x161B66C", Offset = "0x161B66C", VA = "0x161B66C")]
	public void SaveRaw(byte[] bytes, [Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x161E0F4", Offset = "0x161E0F4", VA = "0x161E0F4")]
	public void AppendRaw(byte[] bytes, [Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x161E178", Offset = "0x161E178", VA = "0x161E178")]
	public object Load(string key)
	{
		return null;
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x161E1D8", Offset = "0x161E1D8", VA = "0x161E1D8")]
	public object Load(string key, object defaultValue)
	{
		return null;
	}

	[Token(Token = "0x6000100")]
	public T Load<T>(string key)
	{
		return (T)null;
	}

	[Token(Token = "0x6000101")]
	public T Load<T>(string key, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x6000102")]
	public void LoadInto<T>(string key, T obj) where T : class
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x1618E5C", Offset = "0x1618E5C", VA = "0x1618E5C")]
	public byte[] LoadRawBytes()
	{
		return null;
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x161E5BC", Offset = "0x161E5BC", VA = "0x161E5BC")]
	public string LoadRawString()
	{
		return null;
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x161E660", Offset = "0x161E660", VA = "0x161E660")]
	public void DeleteKey(string key)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x161E6C8", Offset = "0x161E6C8", VA = "0x161E6C8")]
	public bool KeyExists(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x161E730", Offset = "0x161E730", VA = "0x161E730")]
	public int Size()
	{
		return default(int);
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x161E830", Offset = "0x161E830", VA = "0x161E830")]
	public Type GetKeyType(string key)
	{
		return null;
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x161E91C", Offset = "0x161E91C", VA = "0x161E91C")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCBEE8", Offset = "0xBCBEE8")]
	internal static ES3File GetOrCreateCachedFile(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x161EA30", Offset = "0x161EA30", VA = "0x161EA30")]
	internal static void CacheFile(ES3Settings settings)
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x161EB84", Offset = "0x161EB84", VA = "0x161EB84")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCBEFC", Offset = "0xBCBEFC")]
	internal static void Store([Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x161ED30", Offset = "0x161ED30", VA = "0x161ED30")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCBF10", Offset = "0xBCBF10")]
	internal static void RemoveCachedFile(ES3Settings settings)
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x161EDB8", Offset = "0x161EDB8", VA = "0x161EDB8")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCBF24", Offset = "0xBCBF24")]
	internal static void CopyCachedFile(ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x161F134", Offset = "0x161F134", VA = "0x161F134")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCBF38", Offset = "0xBCBF38")]
	internal static void DeleteKey(string key, ES3Settings settings)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x161F1E8", Offset = "0x161F1E8", VA = "0x161F1E8")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCBF4C", Offset = "0xBCBF4C")]
	internal static bool KeyExists(string key, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x161F2A8", Offset = "0x161F2A8", VA = "0x161F2A8")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCBF60", Offset = "0xBCBF60")]
	internal static bool FileExists(ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x161F330", Offset = "0x161F330", VA = "0x161F330")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCBF74", Offset = "0xBCBF74")]
	internal static string[] GetKeys(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x161F468", Offset = "0x161F468", VA = "0x161F468")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCBF88", Offset = "0xBCBF88")]
	internal static string[] GetFiles()
	{
		return null;
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x161F4F4", Offset = "0x161F4F4", VA = "0x161F4F4")]
	internal static DateTime GetTimestamp(ES3Settings settings)
	{
		return default(DateTime);
	}
}
[Token(Token = "0x2000011")]
public class ES3InspectorInfo : MonoBehaviour
{
	[Token(Token = "0x6000115")]
	[Address(RVA = "0x161F680", Offset = "0x161F680", VA = "0x161F680")]
	public ES3InspectorInfo()
	{
	}
}
[Token(Token = "0x2000012")]
public class ES3ReferenceMgr : ES3ReferenceMgrBase
{
	[Token(Token = "0x6000116")]
	[Address(RVA = "0x17C4948", Offset = "0x17C4948", VA = "0x17C4948")]
	public ES3ReferenceMgr()
	{
	}
}
[Token(Token = "0x2000013")]
public class ES3Spreadsheet
{
	[Token(Token = "0x2000217")]
	protected struct Index
	{
		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int col;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int row;

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xD09264", Offset = "0xD09264", VA = "0xD09264")]
		public Index(int col, int row)
		{
		}
	}

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int cols;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int rows;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Index, string> cells;

	[Token(Token = "0x400004B")]
	private const string QUOTE = "\"";

	[Token(Token = "0x400004C")]
	private const char QUOTE_CHAR = '"';

	[Token(Token = "0x400004D")]
	private const char COMMA_CHAR = ',';

	[Token(Token = "0x400004E")]
	private const char NEWLINE_CHAR = '\n';

	[Token(Token = "0x400004F")]
	private const string ESCAPED_QUOTE = "\"\"";

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static char[] CHARS_TO_ESCAPE;

	[Token(Token = "0x17000023")]
	public int ColumnCount
	{
		[Token(Token = "0x6000118")]
		[Address(RVA = "0x17C5CCC", Offset = "0x17C5CCC", VA = "0x17C5CCC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000024")]
	public int RowCount
	{
		[Token(Token = "0x6000119")]
		[Address(RVA = "0x17C5CD4", Offset = "0x17C5CD4", VA = "0x17C5CD4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x17C5C34", Offset = "0x17C5C34", VA = "0x17C5C34")]
	public ES3Spreadsheet()
	{
	}

	[Token(Token = "0x600011A")]
	public void SetCell<T>(int col, int row, T value)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x17C5CDC", Offset = "0x17C5CDC", VA = "0x17C5CDC")]
	private void SetCellString(int col, int row, string value)
	{
	}

	[Token(Token = "0x600011C")]
	public T GetCell<T>(int col, int row)
	{
		return (T)null;
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x17C5D90", Offset = "0x17C5D90", VA = "0x17C5D90")]
	internal object GetCell(Type type, int col, int row)
	{
		return null;
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x17C6944", Offset = "0x17C6944", VA = "0x17C6944")]
	public void Load(string filePath)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x17C6A08", Offset = "0x17C6A08", VA = "0x17C6A08")]
	public void Load(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x17C69CC", Offset = "0x17C69CC", VA = "0x17C69CC")]
	public void Load(ES3Settings settings)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x17C707C", Offset = "0x17C707C", VA = "0x17C707C")]
	public void LoadRaw(string str)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x17C7150", Offset = "0x17C7150", VA = "0x17C7150")]
	public void LoadRaw(string str, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x17C6A94", Offset = "0x17C6A94", VA = "0x17C6A94")]
	private void Load(Stream stream, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x17C71F8", Offset = "0x17C71F8", VA = "0x17C71F8")]
	public void Save(string filePath)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x17C7884", Offset = "0x17C7884", VA = "0x17C7884")]
	public void Save(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x17C7900", Offset = "0x17C7900", VA = "0x17C7900")]
	public void Save(ES3Settings settings)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x17C7908", Offset = "0x17C7908", VA = "0x17C7908")]
	public void Save(string filePath, bool append)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x17C7984", Offset = "0x17C7984", VA = "0x17C7984")]
	public void Save(string filePath, ES3Settings settings, bool append)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x17C7270", Offset = "0x17C7270", VA = "0x17C7270")]
	public void Save(ES3Settings settings, bool append)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x17C7B84", Offset = "0x17C7B84", VA = "0x17C7B84")]
	private static string Escape(string str, bool isAlreadyWrappedInQuotes = false)
	{
		return null;
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x17C7C8C", Offset = "0x17C7C8C", VA = "0x17C7C8C")]
	private static string Unescape(string str)
	{
		return null;
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x17C7A0C", Offset = "0x17C7A0C", VA = "0x17C7A0C")]
	private string[,] ToArray()
	{
		return null;
	}
}
[Token(Token = "0x2000014")]
public abstract class ES3Reader : IDisposable
{
	[Token(Token = "0x2000218")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBC8FCC", Offset = "0xBC8FCC")]
	public class ES3ReaderPropertyEnumerator
	{
		[Token(Token = "0x20003D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAA80", Offset = "0xBCAA80")]
		private sealed class <GetEnumerator>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ES3ReaderPropertyEnumerator <>4__this;

			[Token(Token = "0x170001A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001510")]
				[Address(RVA = "0x17C4624", Offset = "0x17C4624", VA = "0x17C4624", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001512")]
				[Address(RVA = "0x17C468C", Offset = "0x17C468C", VA = "0x17C468C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600150D")]
			[Address(RVA = "0x17C4540", Offset = "0x17C4540", VA = "0x17C4540")]
			[DebuggerHidden]
			public <GetEnumerator>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x600150E")]
			[Address(RVA = "0x17C456C", Offset = "0x17C456C", VA = "0x17C456C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600150F")]
			[Address(RVA = "0x17C4570", Offset = "0x17C4570", VA = "0x17C4570", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001511")]
			[Address(RVA = "0x17C462C", Offset = "0x17C462C", VA = "0x17C462C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ES3Reader reader;

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x17C3948", Offset = "0x17C3948", VA = "0x17C3948")]
		public ES3ReaderPropertyEnumerator(ES3Reader reader)
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x17C44C4", Offset = "0x17C44C4", VA = "0x17C44C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCE43C", Offset = "0xBCE43C")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x2000219")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBC8FE0", Offset = "0xBC8FE0")]
	public class ES3ReaderRawEnumerator
	{
		[Token(Token = "0x20003D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAA90", Offset = "0xBCAA90")]
		private sealed class <GetEnumerator>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ES3ReaderRawEnumerator <>4__this;

			[Token(Token = "0x170001A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001516")]
				[Address(RVA = "0x17C48AC", Offset = "0x17C48AC", VA = "0x17C48AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001518")]
				[Address(RVA = "0x17C4914", Offset = "0x17C4914", VA = "0x17C4914", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001513")]
			[Address(RVA = "0x17C4710", Offset = "0x17C4710", VA = "0x17C4710")]
			[DebuggerHidden]
			public <GetEnumerator>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001514")]
			[Address(RVA = "0x17C473C", Offset = "0x17C473C", VA = "0x17C473C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001515")]
			[Address(RVA = "0x17C4740", Offset = "0x17C4740", VA = "0x17C4740", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001517")]
			[Address(RVA = "0x17C48B4", Offset = "0x17C48B4", VA = "0x17C48B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ES3Reader reader;

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x17C39EC", Offset = "0x17C39EC", VA = "0x17C39EC")]
		public ES3ReaderRawEnumerator(ES3Reader reader)
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x17C4694", Offset = "0x17C4694", VA = "0x17C4694")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCE4A0", Offset = "0xBCE4A0")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ES3Settings settings;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected int serializationDepth;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal string overridePropertiesName;

	[Token(Token = "0x17000025")]
	public virtual ES3ReaderPropertyEnumerator Properties
	{
		[Token(Token = "0x6000151")]
		[Address(RVA = "0x17C38D8", Offset = "0x17C38D8", VA = "0x17C38D8", Slot = "39")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000026")]
	internal virtual ES3ReaderRawEnumerator RawEnumerator
	{
		[Token(Token = "0x6000152")]
		[Address(RVA = "0x17C397C", Offset = "0x17C397C", VA = "0x17C397C", Slot = "40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600012E")]
	internal abstract int Read_int();

	[Token(Token = "0x600012F")]
	internal abstract float Read_float();

	[Token(Token = "0x6000130")]
	internal abstract bool Read_bool();

	[Token(Token = "0x6000131")]
	internal abstract char Read_char();

	[Token(Token = "0x6000132")]
	internal abstract decimal Read_decimal();

	[Token(Token = "0x6000133")]
	internal abstract double Read_double();

	[Token(Token = "0x6000134")]
	internal abstract long Read_long();

	[Token(Token = "0x6000135")]
	internal abstract ulong Read_ulong();

	[Token(Token = "0x6000136")]
	internal abstract byte Read_byte();

	[Token(Token = "0x6000137")]
	internal abstract sbyte Read_sbyte();

	[Token(Token = "0x6000138")]
	internal abstract short Read_short();

	[Token(Token = "0x6000139")]
	internal abstract ushort Read_ushort();

	[Token(Token = "0x600013A")]
	internal abstract uint Read_uint();

	[Token(Token = "0x600013B")]
	internal abstract string Read_string();

	[Token(Token = "0x600013C")]
	internal abstract byte[] Read_byteArray();

	[Token(Token = "0x600013D")]
	internal abstract long Read_ref();

	[Token(Token = "0x600013E")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCBF9C", Offset = "0xBCBF9C")]
	public abstract string ReadPropertyName();

	[Token(Token = "0x600013F")]
	protected abstract Type ReadKeyPrefix(bool ignore = false);

	[Token(Token = "0x6000140")]
	protected abstract void ReadKeySuffix();

	[Token(Token = "0x6000141")]
	internal abstract byte[] ReadElement(bool skip = false);

	[Token(Token = "0x6000142")]
	internal abstract bool Goto(string key);

	[Token(Token = "0x6000143")]
	public abstract void Dispose();

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x17C3880", Offset = "0x17C3880", VA = "0x17C3880", Slot = "27")]
	internal virtual bool StartReadObject()
	{
		return default(bool);
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x17C3894", Offset = "0x17C3894", VA = "0x17C3894", Slot = "28")]
	internal virtual void EndReadObject()
	{
	}

	[Token(Token = "0x6000146")]
	internal abstract bool StartReadDictionary();

	[Token(Token = "0x6000147")]
	internal abstract void EndReadDictionary();

	[Token(Token = "0x6000148")]
	internal abstract bool StartReadDictionaryKey();

	[Token(Token = "0x6000149")]
	internal abstract void EndReadDictionaryKey();

	[Token(Token = "0x600014A")]
	internal abstract void StartReadDictionaryValue();

	[Token(Token = "0x600014B")]
	internal abstract bool EndReadDictionaryValue();

	[Token(Token = "0x600014C")]
	internal abstract bool StartReadCollection();

	[Token(Token = "0x600014D")]
	internal abstract void EndReadCollection();

	[Token(Token = "0x600014E")]
	internal abstract bool StartReadCollectionItem();

	[Token(Token = "0x600014F")]
	internal abstract bool EndReadCollectionItem();

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x17C38A4", Offset = "0x17C38A4", VA = "0x17C38A4")]
	internal ES3Reader(ES3Settings settings, bool readHeaderAndFooter = true)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x17C3A20", Offset = "0x17C3A20", VA = "0x17C3A20", Slot = "41")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCBFB0", Offset = "0xBCBFB0")]
	public virtual void Skip()
	{
	}

	[Token(Token = "0x6000154")]
	public virtual T Read<T>()
	{
		return (T)null;
	}

	[Token(Token = "0x6000155")]
	public virtual void ReadInto<T>(object obj)
	{
	}

	[Token(Token = "0x6000156")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCBFC4", Offset = "0xBCBFC4")]
	public T ReadProperty<T>()
	{
		return (T)null;
	}

	[Token(Token = "0x6000157")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCBFD8", Offset = "0xBCBFD8")]
	public T ReadProperty<T>(ES3Type type)
	{
		return (T)null;
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x17C3A34", Offset = "0x17C3A34", VA = "0x17C3A34")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCBFEC", Offset = "0xBCBFEC")]
	public long ReadRefProperty()
	{
		return default(long);
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x17C3A70", Offset = "0x17C3A70", VA = "0x17C3A70")]
	internal Type ReadType()
	{
		return null;
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x17C3B60", Offset = "0x17C3B60", VA = "0x17C3B60")]
	public void SetPrivateProperty(string name, object value, object objectContainingProperty)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x17C3D58", Offset = "0x17C3D58", VA = "0x17C3D58")]
	public void SetPrivateField(string name, object value, object objectContainingField)
	{
	}

	[Token(Token = "0x600015C")]
	public virtual T Read<T>(string key)
	{
		return (T)null;
	}

	[Token(Token = "0x600015D")]
	public virtual T Read<T>(string key, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x600015E")]
	public virtual void ReadInto<T>(string key, T obj) where T : class
	{
	}

	[Token(Token = "0x600015F")]
	protected virtual void ReadObject<T>(object obj, ES3Type type)
	{
	}

	[Token(Token = "0x6000160")]
	protected virtual T ReadObject<T>(ES3Type type)
	{
		return (T)null;
	}

	[Token(Token = "0x6000161")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCC000", Offset = "0xBCC000")]
	public virtual T Read<T>(ES3Type type)
	{
		return (T)null;
	}

	[Token(Token = "0x6000162")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCC014", Offset = "0xBCC014")]
	public virtual void ReadInto<T>(object obj, ES3Type type)
	{
	}

	[Token(Token = "0x6000163")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCC028", Offset = "0xBCC028")]
	internal Type ReadTypeFromHeader<T>()
	{
		return null;
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x17C3F50", Offset = "0x17C3F50", VA = "0x17C3F50")]
	public static ES3Reader Create()
	{
		return null;
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x17C40E8", Offset = "0x17C40E8", VA = "0x17C40E8")]
	public static ES3Reader Create(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x17C414C", Offset = "0x17C414C", VA = "0x17C414C")]
	public static ES3Reader Create(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x17C4010", Offset = "0x17C4010", VA = "0x17C4010")]
	public static ES3Reader Create(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x17C41BC", Offset = "0x17C41BC", VA = "0x17C41BC")]
	public static ES3Reader Create(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x17C4220", Offset = "0x17C4220", VA = "0x17C4220")]
	public static ES3Reader Create(byte[] bytes, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x17C4320", Offset = "0x17C4320", VA = "0x17C4320")]
	internal static ES3Reader Create(Stream stream, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x17C43FC", Offset = "0x17C43FC", VA = "0x17C43FC")]
	internal static ES3Reader Create(Stream stream, ES3Settings settings, bool readHeaderAndFooter)
	{
		return null;
	}
}
[Token(Token = "0x2000015")]
public class ES3XMLReader
{
	[Token(Token = "0x600016C")]
	[Address(RVA = "0x1762474", Offset = "0x1762474", VA = "0x1762474")]
	public ES3XMLReader()
	{
	}
}
[Token(Token = "0x2000016")]
public class ES3Defaults : ScriptableObject
{
	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public ES3SerializableSettings settings;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool addMgrToSceneAutomatically;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool autoUpdateReferences;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool logDebugInfo;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool logWarnings;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool logErrors;

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x161D37C", Offset = "0x161D37C", VA = "0x161D37C")]
	public ES3Defaults()
	{
	}
}
[Token(Token = "0x2000017")]
public class ES3Settings : ICloneable
{
	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ES3Settings _defaults;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ES3Defaults _defaultSettingsScriptableObject;

	[Token(Token = "0x400005C")]
	private const string defaultSettingsPath = "ES3/ES3Defaults";

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static ES3Settings _unencryptedUncompressedSettings;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly string[] resourcesExtensions;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private ES3.Location _location;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string path;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ES3.EncryptionType encryptionType;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ES3.CompressionType compressionType;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string encryptionPassword;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ES3.Directory directory;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ES3.Format format;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool prettyPrint;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int bufferSize;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Encoding encoding;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool saveChildren;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCAECC", Offset = "0xBCAECC")]
	public bool typeChecking;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCAEE0", Offset = "0xBCAEE0")]
	public bool safeReflection;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCAEF4", Offset = "0xBCAEF4")]
	public ES3.ReferenceMode memberReferenceMode;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCAF08", Offset = "0xBCAF08")]
	public ES3.ReferenceMode referenceMode;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCAF1C", Offset = "0xBCAF1C")]
	public int serializationDepthLimit;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCAF30", Offset = "0xBCAF30")]
	public string[] assemblyNames;

	[Token(Token = "0x17000027")]
	public static ES3Defaults defaultSettingsScriptableObject
	{
		[Token(Token = "0x600016E")]
		[Address(RVA = "0x17C4D94", Offset = "0x17C4D94", VA = "0x17C4D94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000028")]
	public static ES3Settings defaultSettings
	{
		[Token(Token = "0x600016F")]
		[Address(RVA = "0x17C4EA8", Offset = "0x17C4EA8", VA = "0x17C4EA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000029")]
	internal static ES3Settings unencryptedUncompressedSettings
	{
		[Token(Token = "0x6000170")]
		[Address(RVA = "0x17C4FC4", Offset = "0x17C4FC4", VA = "0x17C4FC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002A")]
	public ES3.Location location
	{
		[Token(Token = "0x6000171")]
		[Address(RVA = "0x17C5304", Offset = "0x17C5304", VA = "0x17C5304")]
		get
		{
			return default(ES3.Location);
		}
		[Token(Token = "0x6000172")]
		[Address(RVA = "0x17C5354", Offset = "0x17C5354", VA = "0x17C5354")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public string FullPath
	{
		[Token(Token = "0x6000173")]
		[Address(RVA = "0x17C535C", Offset = "0x17C535C", VA = "0x17C535C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x17C3FAC", Offset = "0x17C3FAC", VA = "0x17C3FAC")]
	public ES3Settings([Optional] string path, [Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x17C57E0", Offset = "0x17C57E0", VA = "0x17C57E0")]
	public ES3Settings(string path, params Enum[] enums)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x17C5170", Offset = "0x17C5170", VA = "0x17C5170")]
	public ES3Settings(params Enum[] enums)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x17C5824", Offset = "0x17C5824", VA = "0x17C5824")]
	public ES3Settings(ES3.EncryptionType encryptionType, string encryptionPassword)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x17C5868", Offset = "0x17C5868", VA = "0x17C5868")]
	public ES3Settings(string path, ES3.EncryptionType encryptionType, string encryptionPassword, [Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x17C4A20", Offset = "0x17C4A20", VA = "0x17C4A20")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCC03C", Offset = "0xBCC03C")]
	public ES3Settings(bool applyDefaults)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x17C5674", Offset = "0x17C5674", VA = "0x17C5674")]
	private static bool IsAbsolute(string path)
	{
		return default(bool);
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x17C58AC", Offset = "0x17C58AC", VA = "0x17C58AC", Slot = "4")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCC050", Offset = "0xBCC050")]
	public object Clone()
	{
		return null;
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x17C5718", Offset = "0x17C5718", VA = "0x17C5718")]
	private void CopyInto(ES3Settings newSettings)
	{
	}
}
[Serializable]
[Token(Token = "0x2000018")]
[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBC20D4", Offset = "0xBC20D4")]
public class ES3SerializableSettings : ES3Settings
{
	[Token(Token = "0x600017E")]
	[Address(RVA = "0x17C49B8", Offset = "0x17C49B8", VA = "0x17C49B8")]
	public ES3SerializableSettings()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x17C4C20", Offset = "0x17C4C20", VA = "0x17C4C20")]
	public ES3SerializableSettings(bool applyDefaults)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x17C4C94", Offset = "0x17C4C94", VA = "0x17C4C94")]
	public ES3SerializableSettings(string path)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x17C4D18", Offset = "0x17C4D18", VA = "0x17C4D18")]
	public ES3SerializableSettings(string path, ES3.Location location)
	{
	}
}
[Token(Token = "0x2000019")]
public class ES3Ref
{
	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public long id;

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x17C491C", Offset = "0x17C491C", VA = "0x17C491C")]
	public ES3Ref(long id)
	{
	}
}
[Token(Token = "0x200001A")]
public class ES3Cloud : ES3WebClass
{
	[Token(Token = "0x200021A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8FF4", Offset = "0xBC8FF4")]
	private sealed class <Sync>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string user;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string password;

		[Token(Token = "0x17000110")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0x161CF4C", Offset = "0x161CF4C", VA = "0x161CF4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0x161CFB4", Offset = "0x161CFB4", VA = "0x161CFB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x16188C4", Offset = "0x16188C4", VA = "0x16188C4")]
		[DebuggerHidden]
		public <Sync>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x161CDEC", Offset = "0x161CDEC", VA = "0x161CDEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x161CDF0", Offset = "0x161CDF0", VA = "0x161CDF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x161CF54", Offset = "0x161CF54", VA = "0x161CF54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9004", Offset = "0xBC9004")]
	private sealed class <UploadFile>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long fileTimestamp;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string user;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string password;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public byte[] bytes;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x17000112")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0x161D30C", Offset = "0x161D30C", VA = "0x161D30C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0x161D374", Offset = "0x161D374", VA = "0x161D374", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x1619688", Offset = "0x1619688", VA = "0x1619688")]
		[DebuggerHidden]
		public <UploadFile>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x161CFBC", Offset = "0x161CFBC", VA = "0x161CFBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x161D098", Offset = "0x161D098", VA = "0x161D098", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x161CFD8", Offset = "0x161CFD8", VA = "0x161CFD8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x161D314", Offset = "0x161D314", VA = "0x161D314", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9014", Offset = "0xBC9014")]
	private sealed class <DownloadFile>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3File es3File;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string user;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string password;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long timestamp;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x17000114")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0x161BA88", Offset = "0x161BA88", VA = "0x161BA88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000115")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0x161BAF0", Offset = "0x161BAF0", VA = "0x161BAF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x1619D24", Offset = "0x1619D24", VA = "0x1619D24")]
		[DebuggerHidden]
		public <DownloadFile>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x161B1F8", Offset = "0x161B1F8", VA = "0x161B1F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x161B2D4", Offset = "0x161B2D4", VA = "0x161B2D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x161B214", Offset = "0x161B214", VA = "0x161B214")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x161BA90", Offset = "0x161BA90", VA = "0x161BA90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9024", Offset = "0xBC9024")]
	private sealed class <DownloadFile>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string user;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string password;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long timestamp;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x17000116")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0x161BED4", Offset = "0x161BED4", VA = "0x161BED4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000117")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0x161BF3C", Offset = "0x161BF3C", VA = "0x161BF3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x1619D50", Offset = "0x1619D50", VA = "0x1619D50")]
		[DebuggerHidden]
		public <DownloadFile>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x161BAF8", Offset = "0x161BAF8", VA = "0x161BAF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x161BBD4", Offset = "0x161BBD4", VA = "0x161BBD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x161BB14", Offset = "0x161BB14", VA = "0x161BB14")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x161BEDC", Offset = "0x161BEDC", VA = "0x161BEDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9034", Offset = "0xBC9034")]
	private sealed class <DeleteFile>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string user;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string password;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x17000118")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DD8")]
			[Address(RVA = "0x161B188", Offset = "0x161B188", VA = "0x161B188", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000119")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0x161B1F0", Offset = "0x161B1F0", VA = "0x161B1F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x161A21C", Offset = "0x161A21C", VA = "0x161A21C")]
		[DebuggerHidden]
		public <DeleteFile>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x161AE9C", Offset = "0x161AE9C", VA = "0x161AE9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x161AF78", Offset = "0x161AF78", VA = "0x161AF78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x161AEB8", Offset = "0x161AEB8", VA = "0x161AEB8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x161B190", Offset = "0x161B190", VA = "0x161B190", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9044", Offset = "0xBC9044")]
	private sealed class <RenameFile>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ES3Settings newSettings;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string user;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string password;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x1700011A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DDF")]
			[Address(RVA = "0x161C9A8", Offset = "0x161C9A8", VA = "0x161C9A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DE1")]
			[Address(RVA = "0x161CA10", Offset = "0x161CA10", VA = "0x161CA10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x161A788", Offset = "0x161A788", VA = "0x161A788")]
		[DebuggerHidden]
		public <RenameFile>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x161C68C", Offset = "0x161C68C", VA = "0x161C68C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x161C768", Offset = "0x161C768", VA = "0x161C768", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x161C6A8", Offset = "0x161C6A8", VA = "0x161C6A8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x161C9B0", Offset = "0x161C9B0", VA = "0x161C9B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000220")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9054", Offset = "0xBC9054")]
	private sealed class <DownloadFilenames>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string user;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string password;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x1700011C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0x161C274", Offset = "0x161C274", VA = "0x161C274", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0x161C2DC", Offset = "0x161C2DC", VA = "0x161C2DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x161A860", Offset = "0x161A860", VA = "0x161A860")]
		[DebuggerHidden]
		public <DownloadFilenames>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x161BF44", Offset = "0x161BF44", VA = "0x161BF44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x161C020", Offset = "0x161C020", VA = "0x161C020", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x161BF60", Offset = "0x161BF60", VA = "0x161BF60")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x161C27C", Offset = "0x161C27C", VA = "0x161C27C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000221")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9064", Offset = "0xBC9064")]
	private sealed class <SearchFilenames>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string user;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string password;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string searchPattern;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x1700011E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DED")]
			[Address(RVA = "0x161CD7C", Offset = "0x161CD7C", VA = "0x161CD7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DEF")]
			[Address(RVA = "0x161CDE4", Offset = "0x161CDE4", VA = "0x161CDE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x161A954", Offset = "0x161A954", VA = "0x161A954")]
		[DebuggerHidden]
		public <SearchFilenames>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x161CA18", Offset = "0x161CA18", VA = "0x161CA18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x161CAF4", Offset = "0x161CAF4", VA = "0x161CAF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x161CA34", Offset = "0x161CA34", VA = "0x161CA34")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x161CD84", Offset = "0x161CD84", VA = "0x161CD84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000222")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9074", Offset = "0xBC9074")]
	private sealed class <DownloadTimestamp>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string user;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string password;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x17000120")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DF4")]
			[Address(RVA = "0x161C61C", Offset = "0x161C61C", VA = "0x161C61C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0x161C684", Offset = "0x161C684", VA = "0x161C684", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x161AE20", Offset = "0x161AE20", VA = "0x161AE20")]
		[DebuggerHidden]
		public <DownloadTimestamp>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x161C2E4", Offset = "0x161C2E4", VA = "0x161C2E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x161C3C0", Offset = "0x161C3C0", VA = "0x161C3C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x161C300", Offset = "0x161C300", VA = "0x161C300")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x161C624", Offset = "0x161C624", VA = "0x161C624", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Encoding encoding;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private byte[] _data;

	[Token(Token = "0x1700002C")]
	public byte[] data
	{
		[Token(Token = "0x6000184")]
		[Address(RVA = "0x161819C", Offset = "0x161819C", VA = "0x161819C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002D")]
	public string text
	{
		[Token(Token = "0x6000185")]
		[Address(RVA = "0x16181A4", Offset = "0x16181A4", VA = "0x16181A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002E")]
	public string[] filenames
	{
		[Token(Token = "0x6000186")]
		[Address(RVA = "0x16181D8", Offset = "0x16181D8", VA = "0x16181D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002F")]
	public DateTime timestamp
	{
		[Token(Token = "0x6000187")]
		[Address(RVA = "0x161829C", Offset = "0x161829C", VA = "0x161829C")]
		get
		{
			return default(DateTime);
		}
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x1618148", Offset = "0x1618148", VA = "0x1618148")]
	public ES3Cloud(string url, string apiKey)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x1618424", Offset = "0x1618424", VA = "0x1618424")]
	public IEnumerator Sync()
	{
		return null;
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x1618568", Offset = "0x1618568", VA = "0x1618568")]
	public IEnumerator Sync(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x16185F0", Offset = "0x16185F0", VA = "0x16185F0")]
	public IEnumerator Sync(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x161867C", Offset = "0x161867C", VA = "0x161867C")]
	public IEnumerator Sync(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x161870C", Offset = "0x161870C", VA = "0x161870C")]
	public IEnumerator Sync(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x1618798", Offset = "0x1618798", VA = "0x1618798")]
	public IEnumerator Sync(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x1618830", Offset = "0x1618830", VA = "0x1618830")]
	public IEnumerator Sync(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x16184A0", Offset = "0x16184A0", VA = "0x16184A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCC064", Offset = "0xBCC064")]
	private IEnumerator Sync(ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x16188F0", Offset = "0x16188F0", VA = "0x16188F0")]
	public IEnumerator UploadFile()
	{
		return null;
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x16189D8", Offset = "0x16189D8", VA = "0x16189D8")]
	public IEnumerator UploadFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x1618A74", Offset = "0x1618A74", VA = "0x1618A74")]
	public IEnumerator UploadFile(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x1618B14", Offset = "0x1618B14", VA = "0x1618B14")]
	public IEnumerator UploadFile(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x1618BB4", Offset = "0x1618BB4", VA = "0x1618BB4")]
	public IEnumerator UploadFile(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x1618C54", Offset = "0x1618C54", VA = "0x1618C54")]
	public IEnumerator UploadFile(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x1618D00", Offset = "0x1618D00", VA = "0x1618D00")]
	public IEnumerator UploadFile(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x1618DA4", Offset = "0x1618DA4", VA = "0x1618DA4")]
	public IEnumerator UploadFile(ES3File es3File)
	{
		return null;
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x16194A4", Offset = "0x16194A4", VA = "0x16194A4")]
	public IEnumerator UploadFile(ES3File es3File, string user)
	{
		return null;
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x1619560", Offset = "0x1619560", VA = "0x1619560")]
	public IEnumerator UploadFile(ES3File es3File, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x1618988", Offset = "0x1618988", VA = "0x1618988")]
	public IEnumerator UploadFile(ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x1619620", Offset = "0x1619620", VA = "0x1619620")]
	private IEnumerator UploadFile(byte[] bytes, ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x16193B8", Offset = "0x16193B8", VA = "0x16193B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCC0C8", Offset = "0xBCC0C8")]
	private IEnumerator UploadFile(byte[] bytes, ES3Settings settings, string user, string password, long fileTimestamp)
	{
		return null;
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x16196B4", Offset = "0x16196B4", VA = "0x16196B4")]
	public IEnumerator DownloadFile()
	{
		return null;
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x1619804", Offset = "0x1619804", VA = "0x1619804")]
	public IEnumerator DownloadFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x1619890", Offset = "0x1619890", VA = "0x1619890")]
	public IEnumerator DownloadFile(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x1619920", Offset = "0x1619920", VA = "0x1619920")]
	public IEnumerator DownloadFile(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x16199B4", Offset = "0x16199B4", VA = "0x16199B4")]
	public IEnumerator DownloadFile(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x1619A44", Offset = "0x1619A44", VA = "0x1619A44")]
	public IEnumerator DownloadFile(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x1619AE0", Offset = "0x1619AE0", VA = "0x1619AE0")]
	public IEnumerator DownloadFile(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x1619B78", Offset = "0x1619B78", VA = "0x1619B78")]
	public IEnumerator DownloadFile(ES3File es3File)
	{
		return null;
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x1619CB0", Offset = "0x1619CB0", VA = "0x1619CB0")]
	public IEnumerator DownloadFile(ES3File es3File, string user)
	{
		return null;
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x1619D1C", Offset = "0x1619D1C", VA = "0x1619D1C")]
	public IEnumerator DownloadFile(ES3File es3File, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x1619BE0", Offset = "0x1619BE0", VA = "0x1619BE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCC12C", Offset = "0xBCC12C")]
	private IEnumerator DownloadFile(ES3File es3File, string user, string password, long timestamp)
	{
		return null;
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x1619734", Offset = "0x1619734", VA = "0x1619734")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCC190", Offset = "0xBCC190")]
	private IEnumerator DownloadFile(ES3Settings settings, string user, string password, long timestamp)
	{
		return null;
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x1619D7C", Offset = "0x1619D7C", VA = "0x1619D7C")]
	public IEnumerator DeleteFile()
	{
		return null;
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x1619EC0", Offset = "0x1619EC0", VA = "0x1619EC0")]
	public IEnumerator DeleteFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x1619F48", Offset = "0x1619F48", VA = "0x1619F48")]
	public IEnumerator DeleteFile(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x1619FD4", Offset = "0x1619FD4", VA = "0x1619FD4")]
	public IEnumerator DeleteFile(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x161A064", Offset = "0x161A064", VA = "0x161A064")]
	public IEnumerator DeleteFile(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x161A0F0", Offset = "0x161A0F0", VA = "0x161A0F0")]
	public IEnumerator DeleteFile(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x161A188", Offset = "0x161A188", VA = "0x161A188")]
	public IEnumerator DeleteFile(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x1619DF8", Offset = "0x1619DF8", VA = "0x1619DF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCC1F4", Offset = "0xBCC1F4")]
	private IEnumerator DeleteFile(ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x161A248", Offset = "0x161A248", VA = "0x161A248")]
	public IEnumerator RenameFile(string filePath, string newFilePath)
	{
		return null;
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x161A3D8", Offset = "0x161A3D8", VA = "0x161A3D8")]
	public IEnumerator RenameFile(string filePath, string newFilePath, string user)
	{
		return null;
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x161A490", Offset = "0x161A490", VA = "0x161A490")]
	public IEnumerator RenameFile(string filePath, string newFilePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x161A54C", Offset = "0x161A54C", VA = "0x161A54C")]
	public IEnumerator RenameFile(string filePath, string newFilePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x161A604", Offset = "0x161A604", VA = "0x161A604")]
	public IEnumerator RenameFile(string filePath, string newFilePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x161A6C8", Offset = "0x161A6C8", VA = "0x161A6C8")]
	public IEnumerator RenameFile(string filePath, string newFilePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x161A2FC", Offset = "0x161A2FC", VA = "0x161A2FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCC258", Offset = "0xBCC258")]
	private IEnumerator RenameFile(ES3Settings settings, ES3Settings newSettings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x161A7B4", Offset = "0x161A7B4", VA = "0x161A7B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCC2BC", Offset = "0xBCC2BC")]
	public IEnumerator DownloadFilenames(string user = "", string password = "")
	{
		return null;
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x161A88C", Offset = "0x161A88C", VA = "0x161A88C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCC320", Offset = "0xBCC320")]
	public IEnumerator SearchFilenames(string searchPattern, string user = "", string password = "")
	{
		return null;
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x161A980", Offset = "0x161A980", VA = "0x161A980")]
	public IEnumerator DownloadTimestamp()
	{
		return null;
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x161AAC4", Offset = "0x161AAC4", VA = "0x161AAC4")]
	public IEnumerator DownloadTimestamp(string filePath)
	{
		return null;
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x161AB4C", Offset = "0x161AB4C", VA = "0x161AB4C")]
	public IEnumerator DownloadTimestamp(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x161ABD8", Offset = "0x161ABD8", VA = "0x161ABD8")]
	public IEnumerator DownloadTimestamp(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x161AC68", Offset = "0x161AC68", VA = "0x161AC68")]
	public IEnumerator DownloadTimestamp(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x161ACF4", Offset = "0x161ACF4", VA = "0x161ACF4")]
	public IEnumerator DownloadTimestamp(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x161AD8C", Offset = "0x161AD8C", VA = "0x161AD8C")]
	public IEnumerator DownloadTimestamp(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x161A9FC", Offset = "0x161A9FC", VA = "0x161A9FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCC384", Offset = "0xBCC384")]
	private IEnumerator DownloadTimestamp(ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x16192B0", Offset = "0x16192B0", VA = "0x16192B0")]
	private long DateTimeToUnixTimestamp(DateTime dt)
	{
		return default(long);
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x161AE4C", Offset = "0x161AE4C", VA = "0x161AE4C")]
	private long GetFileTimestamp(ES3Settings settings)
	{
		return default(long);
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x161AE6C", Offset = "0x161AE6C", VA = "0x161AE6C", Slot = "4")]
	protected override void Reset()
	{
	}
}
[Token(Token = "0x200001B")]
public abstract class ES3Writer : IDisposable
{
	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ES3Settings settings;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected HashSet<string> keysToDelete;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal bool writeHeaderAndFooter;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	internal bool overwriteKeys;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected int serializationDepth;

	[Token(Token = "0x60001C5")]
	internal abstract void WriteNull();

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x1760614", Offset = "0x1760614", VA = "0x1760614", Slot = "6")]
	internal virtual void StartWriteFile()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x1760624", Offset = "0x1760624", VA = "0x1760624", Slot = "7")]
	internal virtual void EndWriteFile()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x1760634", Offset = "0x1760634", VA = "0x1760634", Slot = "8")]
	internal virtual void StartWriteObject(string name)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x1760644", Offset = "0x1760644", VA = "0x1760644", Slot = "9")]
	internal virtual void EndWriteObject(string name)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x1760654", Offset = "0x1760654", VA = "0x1760654", Slot = "10")]
	internal virtual void StartWriteProperty(string name)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x17606D0", Offset = "0x17606D0", VA = "0x17606D0", Slot = "11")]
	internal virtual void EndWriteProperty(string name)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x17606D4", Offset = "0x17606D4", VA = "0x17606D4", Slot = "12")]
	internal virtual void StartWriteCollection()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x17606E4", Offset = "0x17606E4", VA = "0x17606E4", Slot = "13")]
	internal virtual void EndWriteCollection()
	{
	}

	[Token(Token = "0x60001CE")]
	internal abstract void StartWriteCollectionItem(int index);

	[Token(Token = "0x60001CF")]
	internal abstract void EndWriteCollectionItem(int index);

	[Token(Token = "0x60001D0")]
	internal abstract void StartWriteDictionary();

	[Token(Token = "0x60001D1")]
	internal abstract void EndWriteDictionary();

	[Token(Token = "0x60001D2")]
	internal abstract void StartWriteDictionaryKey(int index);

	[Token(Token = "0x60001D3")]
	internal abstract void EndWriteDictionaryKey(int index);

	[Token(Token = "0x60001D4")]
	internal abstract void StartWriteDictionaryValue(int index);

	[Token(Token = "0x60001D5")]
	internal abstract void EndWriteDictionaryValue(int index);

	[Token(Token = "0x60001D6")]
	public abstract void Dispose();

	[Token(Token = "0x60001D7")]
	internal abstract void WriteRawProperty(string name, byte[] bytes);

	[Token(Token = "0x60001D8")]
	internal abstract void WritePrimitive(int value);

	[Token(Token = "0x60001D9")]
	internal abstract void WritePrimitive(float value);

	[Token(Token = "0x60001DA")]
	internal abstract void WritePrimitive(bool value);

	[Token(Token = "0x60001DB")]
	internal abstract void WritePrimitive(decimal value);

	[Token(Token = "0x60001DC")]
	internal abstract void WritePrimitive(double value);

	[Token(Token = "0x60001DD")]
	internal abstract void WritePrimitive(long value);

	[Token(Token = "0x60001DE")]
	internal abstract void WritePrimitive(ulong value);

	[Token(Token = "0x60001DF")]
	internal abstract void WritePrimitive(uint value);

	[Token(Token = "0x60001E0")]
	internal abstract void WritePrimitive(byte value);

	[Token(Token = "0x60001E1")]
	internal abstract void WritePrimitive(sbyte value);

	[Token(Token = "0x60001E2")]
	internal abstract void WritePrimitive(short value);

	[Token(Token = "0x60001E3")]
	internal abstract void WritePrimitive(ushort value);

	[Token(Token = "0x60001E4")]
	internal abstract void WritePrimitive(char value);

	[Token(Token = "0x60001E5")]
	internal abstract void WritePrimitive(string value);

	[Token(Token = "0x60001E6")]
	internal abstract void WritePrimitive(byte[] value);

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x17606F4", Offset = "0x17606F4", VA = "0x17606F4")]
	protected ES3Writer(ES3Settings settings, bool writeHeaderAndFooter, bool overwriteKeys)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x17607BC", Offset = "0x17607BC", VA = "0x17607BC", Slot = "39")]
	internal virtual void Write(string key, Type type, byte[] value)
	{
	}

	[Token(Token = "0x60001E9")]
	public virtual void Write<T>(string key, object value)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x17608AC", Offset = "0x17608AC", VA = "0x17608AC", Slot = "41")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCC3E8", Offset = "0xBCC3E8")]
	public virtual void Write(Type type, string key, object value)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x17609E0", Offset = "0x17609E0", VA = "0x17609E0", Slot = "42")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCC3FC", Offset = "0xBCC3FC")]
	public virtual void Write(object value, ES3.ReferenceMode memberReferenceMode = ES3.ReferenceMode.ByRef)
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x1760AB0", Offset = "0x1760AB0", VA = "0x1760AB0", Slot = "43")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCC410", Offset = "0xBCC410")]
	public virtual void Write(object value, ES3Type type, ES3.ReferenceMode memberReferenceMode = ES3.ReferenceMode.ByRef)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x1760F3C", Offset = "0x1760F3C", VA = "0x1760F3C", Slot = "44")]
	internal virtual void WriteRef(UnityEngine.Object obj)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x1761094", Offset = "0x1761094", VA = "0x1761094", Slot = "45")]
	public virtual void WriteProperty(string name, object value)
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x17610BC", Offset = "0x17610BC", VA = "0x17610BC", Slot = "46")]
	public virtual void WriteProperty(string name, object value, ES3.ReferenceMode memberReferenceMode)
	{
	}

	[Token(Token = "0x60001F0")]
	public virtual void WriteProperty<T>(string name, object value)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x1761204", Offset = "0x1761204", VA = "0x1761204", Slot = "48")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCC424", Offset = "0xBCC424")]
	public virtual void WriteProperty(string name, object value, ES3Type type)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x176122C", Offset = "0x176122C", VA = "0x176122C", Slot = "49")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCC438", Offset = "0xBCC438")]
	public virtual void WriteProperty(string name, object value, ES3Type type, ES3.ReferenceMode memberReferenceMode)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x17612C8", Offset = "0x17612C8", VA = "0x17612C8", Slot = "50")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCC44C", Offset = "0xBCC44C")]
	public virtual void WritePropertyByRef(string name, UnityEngine.Object value)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x1755520", Offset = "0x1755520", VA = "0x1755520")]
	public void WritePrivateProperty(string name, object objectContainingProperty)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x1754CAC", Offset = "0x1754CAC", VA = "0x1754CAC")]
	public void WritePrivateField(string name, object objectContainingField)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x17613E4", Offset = "0x17613E4", VA = "0x17613E4")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCC460", Offset = "0xBCC460")]
	public void WritePrivateProperty(string name, object objectContainingProperty, ES3Type type)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x1761604", Offset = "0x1761604", VA = "0x1761604")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCC474", Offset = "0xBCC474")]
	public void WritePrivateField(string name, object objectContainingField, ES3Type type)
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x1761824", Offset = "0x1761824", VA = "0x1761824")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCC488", Offset = "0xBCC488")]
	public void WritePrivatePropertyByRef(string name, object objectContainingProperty)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x1761A74", Offset = "0x1761A74", VA = "0x1761A74")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCC49C", Offset = "0xBCC49C")]
	public void WritePrivateFieldByRef(string name, object objectContainingField)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x176057C", Offset = "0x176057C", VA = "0x176057C")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCC4B0", Offset = "0xBCC4B0")]
	public void WriteType(Type type)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x1761CC4", Offset = "0x1761CC4", VA = "0x1761CC4")]
	public static ES3Writer Create(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x1761D44", Offset = "0x1761D44", VA = "0x1761D44")]
	public static ES3Writer Create(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x1761D54", Offset = "0x1761D54", VA = "0x1761D54")]
	internal static ES3Writer Create(ES3Settings settings, bool writeHeaderAndFooter, bool overwriteKeys, bool append)
	{
		return null;
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x1761DB4", Offset = "0x1761DB4", VA = "0x1761DB4")]
	internal static ES3Writer Create(Stream stream, ES3Settings settings, bool writeHeaderAndFooter, bool overwriteKeys)
	{
		return null;
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x1761144", Offset = "0x1761144", VA = "0x1761144")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCC4C4", Offset = "0xBCC4C4")]
	protected bool SerializationDepthLimitExceeded()
	{
		return default(bool);
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x1761F50", Offset = "0x1761F50", VA = "0x1761F50", Slot = "51")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCC4D8", Offset = "0xBCC4D8")]
	public virtual void MarkKeyForDeletion(string key)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x1761FB8", Offset = "0x1761FB8", VA = "0x1761FB8")]
	protected void Merge()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x17620F4", Offset = "0x17620F4", VA = "0x17620F4")]
	protected void Merge(ES3Reader reader)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x17623B8", Offset = "0x17623B8", VA = "0x17623B8", Slot = "52")]
	public virtual void Save()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x17623CC", Offset = "0x17623CC", VA = "0x17623CC", Slot = "53")]
	public virtual void Save(bool overwriteKeys)
	{
	}
}
[Token(Token = "0x200001C")]
public class ES3XMLWriter
{
	[Token(Token = "0x6000205")]
	[Address(RVA = "0x176247C", Offset = "0x176247C", VA = "0x176247C")]
	public ES3XMLWriter()
	{
	}
}
[Token(Token = "0x200001D")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBC20E8", Offset = "0xBC20E8")]
public class JSONObject : IEnumerable
{
	[Token(Token = "0x2000223")]
	public enum Type
	{
		[Token(Token = "0x4000B73")]
		NULL,
		[Token(Token = "0x4000B74")]
		STRING,
		[Token(Token = "0x4000B75")]
		NUMBER,
		[Token(Token = "0x4000B76")]
		OBJECT,
		[Token(Token = "0x4000B77")]
		ARRAY,
		[Token(Token = "0x4000B78")]
		BOOL,
		[Token(Token = "0x4000B79")]
		BAKED
	}

	[Token(Token = "0x2000224")]
	public delegate void AddJSONContents(JSONObject self);

	[Token(Token = "0x2000225")]
	public delegate void FieldNotFound(string name);

	[Token(Token = "0x2000226")]
	public delegate void GetFieldResponse(JSONObject obj);

	[Token(Token = "0x2000227")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9084", Offset = "0xBC9084")]
	private sealed class <BakeAsync>d__109 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public JSONObject <>4__this;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IEnumerator<string> <>7__wrap1;

		[Token(Token = "0x17000122")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0x1767BC8", Offset = "0x1767BC8", VA = "0x1767BC8", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E09")]
			[Address(RVA = "0x1767C30", Offset = "0x1767C30", VA = "0x1767C30", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x17668D0", Offset = "0x17668D0", VA = "0x17668D0")]
		[DebuggerHidden]
		public <BakeAsync>d__109(int <>1__state)
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x17677F0", Offset = "0x17677F0", VA = "0x17677F0", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x17678CC", Offset = "0x17678CC", VA = "0x17678CC", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x176780C", Offset = "0x176780C", VA = "0x176780C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x1767BD0", Offset = "0x1767BD0", VA = "0x1767BD0", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x1767C38", Offset = "0x1767C38", VA = "0x1767C38", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x1767CEC", Offset = "0x1767CEC", VA = "0x1767CEC", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x2000228")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9094", Offset = "0xBC9094")]
	private sealed class <PrintAsync>d__111 : IEnumerable<string>, IEnumerable, IEnumerator<string>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string <>2__current;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public JSONObject <>4__this;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool pretty;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool <>3__pretty;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder <builder>5__2;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IEnumerator <>7__wrap2;

		[Token(Token = "0x17000124")]
		private string System.Collections.Generic.IEnumerator<System.String>.Current
		{
			[Token(Token = "0x6000E10")]
			[Address(RVA = "0x1768158", Offset = "0x1768158", VA = "0x1768158", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000125")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E12")]
			[Address(RVA = "0x17681C0", Offset = "0x17681C0", VA = "0x17681C0", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x176708C", Offset = "0x176708C", VA = "0x176708C")]
		[DebuggerHidden]
		public <PrintAsync>d__111(int <>1__state)
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x1767CF0", Offset = "0x1767CF0", VA = "0x1767CF0", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x1767DD8", Offset = "0x1767DD8", VA = "0x1767DD8", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x1767D0C", Offset = "0x1767D0C", VA = "0x1767D0C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x1768160", Offset = "0x1768160", VA = "0x1768160", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x17681C8", Offset = "0x17681C8", VA = "0x17681C8", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<string> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x1768284", Offset = "0x1768284", VA = "0x1768284", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x2000229")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC90A4", Offset = "0xBC90A4")]
	private sealed class <StringifyAsync>d__114 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int depth;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int <>3__depth;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public JSONObject <>4__this;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder builder;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public StringBuilder <>3__builder;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool pretty;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool <>3__pretty;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int <i>5__2;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IEnumerator <>7__wrap2;

		[Token(Token = "0x17000126")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0x1769384", Offset = "0x1769384", VA = "0x1769384", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000127")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0x17693EC", Offset = "0x17693EC", VA = "0x17693EC", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x1767188", Offset = "0x1767188", VA = "0x1767188")]
		[DebuggerHidden]
		public <StringifyAsync>d__114(int <>1__state)
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x1768288", Offset = "0x1768288", VA = "0x1768288", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x1768458", Offset = "0x1768458", VA = "0x1768458", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x17682C0", Offset = "0x17682C0", VA = "0x17682C0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x176838C", Offset = "0x176838C", VA = "0x176838C")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x176938C", Offset = "0x176938C", VA = "0x176938C", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x17693F4", Offset = "0x17693F4", VA = "0x17693F4", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x17694C8", Offset = "0x17694C8", VA = "0x17694C8", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000078")]
	private const int MAX_DEPTH = 100;

	[Token(Token = "0x4000079")]
	private const string INFINITY = "\"INFINITY\"";

	[Token(Token = "0x400007A")]
	private const string NEGINFINITY = "\"NEGINFINITY\"";

	[Token(Token = "0x400007B")]
	private const string NaN = "\"NaN\"";

	[Token(Token = "0x400007C")]
	private const string NEWLINE = "\r\n";

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly char[] WHITESPACE;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Type type;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<JSONObject> list;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> keys;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string str;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float n;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool useInt;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public long i;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool b;

	[Token(Token = "0x4000086")]
	private const float maxFrameTime = 0.008f;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Stopwatch printWatch;

	[Token(Token = "0x17000030")]
	public bool isContainer
	{
		[Token(Token = "0x6000206")]
		[Address(RVA = "0x1762484", Offset = "0x1762484", VA = "0x1762484")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000031")]
	public int Count
	{
		[Token(Token = "0x6000207")]
		[Address(RVA = "0x1762498", Offset = "0x1762498", VA = "0x1762498")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000032")]
	public float f
	{
		[Token(Token = "0x6000208")]
		[Address(RVA = "0x17624EC", Offset = "0x17624EC", VA = "0x17624EC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000033")]
	public static JSONObject nullJO
	{
		[Token(Token = "0x6000209")]
		[Address(RVA = "0x17624F4", Offset = "0x17624F4", VA = "0x17624F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000034")]
	public static JSONObject obj
	{
		[Token(Token = "0x600020A")]
		[Address(RVA = "0x1762680", Offset = "0x1762680", VA = "0x1762680")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000035")]
	public static JSONObject arr
	{
		[Token(Token = "0x600020B")]
		[Address(RVA = "0x17626E0", Offset = "0x17626E0", VA = "0x17626E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000036")]
	public bool IsNumber
	{
		[Token(Token = "0x6000225")]
		[Address(RVA = "0x1764318", Offset = "0x1764318", VA = "0x1764318")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000037")]
	public bool IsNull
	{
		[Token(Token = "0x6000226")]
		[Address(RVA = "0x1764328", Offset = "0x1764328", VA = "0x1764328")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000038")]
	public bool IsString
	{
		[Token(Token = "0x6000227")]
		[Address(RVA = "0x1764338", Offset = "0x1764338", VA = "0x1764338")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000039")]
	public bool IsBool
	{
		[Token(Token = "0x6000228")]
		[Address(RVA = "0x1764348", Offset = "0x1764348", VA = "0x1764348")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003A")]
	public bool IsArray
	{
		[Token(Token = "0x6000229")]
		[Address(RVA = "0x1764358", Offset = "0x1764358", VA = "0x1764358")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003B")]
	public bool IsObject
	{
		[Token(Token = "0x600022A")]
		[Address(RVA = "0x1764368", Offset = "0x1764368", VA = "0x1764368")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003C")]
	public JSONObject Item
	{
		[Token(Token = "0x600025B")]
		[Address(RVA = "0x17666EC", Offset = "0x17666EC", VA = "0x17666EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600025C")]
		[Address(RVA = "0x1766770", Offset = "0x1766770", VA = "0x1766770")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public JSONObject Item
	{
		[Token(Token = "0x600025D")]
		[Address(RVA = "0x17650A0", Offset = "0x17650A0", VA = "0x17650A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600025E")]
		[Address(RVA = "0x17673B0", Offset = "0x17673B0", VA = "0x17673B0")]
		set
		{
		}
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x1762740", Offset = "0x1762740", VA = "0x1762740")]
	public JSONObject(Type t)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x1762850", Offset = "0x1762850", VA = "0x1762850")]
	public JSONObject(bool b)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x1762888", Offset = "0x1762888", VA = "0x1762888")]
	public JSONObject(float f)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x17628C4", Offset = "0x17628C4", VA = "0x17628C4")]
	public JSONObject(int i)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x176290C", Offset = "0x176290C", VA = "0x176290C")]
	public JSONObject(long l)
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x1762950", Offset = "0x1762950", VA = "0x1762950")]
	public JSONObject(Dictionary<string, string> dic)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x1762BDC", Offset = "0x1762BDC", VA = "0x1762BDC")]
	public JSONObject(Dictionary<string, JSONObject> dic)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x1762DA8", Offset = "0x1762DA8", VA = "0x1762DA8")]
	public JSONObject(AddJSONContents content)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x1763198", Offset = "0x1763198", VA = "0x1763198")]
	public JSONObject(JSONObject[] objs)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x176322C", Offset = "0x176322C", VA = "0x176322C")]
	public static JSONObject StringObject(string val)
	{
		return null;
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x1763290", Offset = "0x1763290", VA = "0x1763290")]
	public void Absorb(JSONObject obj)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x1763354", Offset = "0x1763354", VA = "0x1763354")]
	public static JSONObject Create()
	{
		return null;
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x1762554", Offset = "0x1762554", VA = "0x1762554")]
	public static JSONObject Create(Type t)
	{
		return null;
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x17633B8", Offset = "0x17633B8", VA = "0x17633B8")]
	public static JSONObject Create(bool val)
	{
		return null;
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x1763434", Offset = "0x1763434", VA = "0x1763434")]
	public static JSONObject Create(float val)
	{
		return null;
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x17634B4", Offset = "0x17634B4", VA = "0x17634B4")]
	public static JSONObject Create(int val)
	{
		return null;
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x1763540", Offset = "0x1763540", VA = "0x1763540")]
	public static JSONObject Create(long val)
	{
		return null;
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x1762B54", Offset = "0x1762B54", VA = "0x1762B54")]
	public static JSONObject CreateStringObject(string val)
	{
		return null;
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x17635C8", Offset = "0x17635C8", VA = "0x17635C8")]
	public static JSONObject CreateBakedObject(string val)
	{
		return null;
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x1763650", Offset = "0x1763650", VA = "0x1763650")]
	public static JSONObject Create(string val, int maxDepth = -2, bool storeExcessLevels = false, bool strict = false)
	{
		return null;
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x176401C", Offset = "0x176401C", VA = "0x176401C")]
	public static JSONObject Create(AddJSONContents content)
	{
		return null;
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x176409C", Offset = "0x176409C", VA = "0x176409C")]
	public static JSONObject Create(Dictionary<string, string> dic)
	{
		return null;
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x17633B0", Offset = "0x17633B0", VA = "0x17633B0")]
	public JSONObject()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x17642C0", Offset = "0x17642C0", VA = "0x17642C0")]
	public JSONObject(string str, int maxDepth = -2, bool storeExcessLevels = false, bool strict = false)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x17636F4", Offset = "0x17636F4", VA = "0x17636F4")]
	private void Parse(string str, int maxDepth = -2, bool storeExcessLevels = false, bool strict = false)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x1764384", Offset = "0x1764384", VA = "0x1764384")]
	public void Add(bool val)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x17644F8", Offset = "0x17644F8", VA = "0x17644F8")]
	public void Add(float val)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x1764574", Offset = "0x1764574", VA = "0x1764574")]
	public void Add(long val)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x17645F0", Offset = "0x17645F0", VA = "0x17645F0")]
	public void Add(int val)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x176466C", Offset = "0x176466C", VA = "0x176466C")]
	public void Add(string str)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x17646E8", Offset = "0x17646E8", VA = "0x17646E8")]
	public void Add(AddJSONContents content)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x1764400", Offset = "0x1764400", VA = "0x1764400")]
	public void Add(JSONObject obj)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x1764770", Offset = "0x1764770", VA = "0x1764770")]
	public void AddField(string name, bool val)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x17649EC", Offset = "0x17649EC", VA = "0x17649EC")]
	public void AddField(string name, float val)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x1764A78", Offset = "0x1764A78", VA = "0x1764A78")]
	public void AddField(string name, int val)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x1764AFC", Offset = "0x1764AFC", VA = "0x1764AFC")]
	public void AddField(string name, long val)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x1764B80", Offset = "0x1764B80", VA = "0x1764B80")]
	public void AddField(string name, AddJSONContents content)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x1764C04", Offset = "0x1764C04", VA = "0x1764C04")]
	public void AddField(string name, string val)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x17647F4", Offset = "0x17647F4", VA = "0x17647F4")]
	public void AddField(string name, JSONObject obj)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x1764C88", Offset = "0x1764C88", VA = "0x1764C88")]
	public void SetField(string name, string val)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x1764DC4", Offset = "0x1764DC4", VA = "0x1764DC4")]
	public void SetField(string name, bool val)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x1764E48", Offset = "0x1764E48", VA = "0x1764E48")]
	public void SetField(string name, float val)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x1764ED4", Offset = "0x1764ED4", VA = "0x1764ED4")]
	public void SetField(string name, long val)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x1764F58", Offset = "0x1764F58", VA = "0x1764F58")]
	public void SetField(string name, int val)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x1764D0C", Offset = "0x1764D0C", VA = "0x1764D0C")]
	public void SetField(string name, JSONObject obj)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x17650A4", Offset = "0x17650A4", VA = "0x17650A4")]
	public void RemoveField(string name)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x1765170", Offset = "0x1765170", VA = "0x1765170")]
	public bool GetField(out bool field, string name, bool fallback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x1765180", Offset = "0x1765180", VA = "0x1765180")]
	public bool GetField(ref bool field, string name, [Optional] FieldNotFound fail)
	{
		return default(bool);
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x1765618", Offset = "0x1765618", VA = "0x1765618")]
	public bool GetField(out float field, string name, float fallback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x1765624", Offset = "0x1765624", VA = "0x1765624")]
	public bool GetField(ref float field, string name, [Optional] FieldNotFound fail)
	{
		return default(bool);
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x1765704", Offset = "0x1765704", VA = "0x1765704")]
	public bool GetField(out int field, string name, int fallback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x1765710", Offset = "0x1765710", VA = "0x1765710")]
	public bool GetField(ref int field, string name, [Optional] FieldNotFound fail)
	{
		return default(bool);
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x17657F8", Offset = "0x17657F8", VA = "0x17657F8")]
	public bool GetField(out long field, string name, long fallback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x1765804", Offset = "0x1765804", VA = "0x1765804")]
	public bool GetField(ref long field, string name, [Optional] FieldNotFound fail)
	{
		return default(bool);
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x17658EC", Offset = "0x17658EC", VA = "0x17658EC")]
	public bool GetField(out uint field, string name, uint fallback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x17658F8", Offset = "0x17658F8", VA = "0x17658F8")]
	public bool GetField(ref uint field, string name, [Optional] FieldNotFound fail)
	{
		return default(bool);
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x17659E0", Offset = "0x17659E0", VA = "0x17659E0")]
	public bool GetField(out string field, string name, string fallback)
	{
		return default(bool);
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x1765A2C", Offset = "0x1765A2C", VA = "0x1765A2C")]
	public bool GetField(ref string field, string name, [Optional] FieldNotFound fail)
	{
		return default(bool);
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x1765B1C", Offset = "0x1765B1C", VA = "0x1765B1C")]
	public void GetField(string name, GetFieldResponse response, [Optional] FieldNotFound fail)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x1765FD0", Offset = "0x1765FD0", VA = "0x1765FD0")]
	public JSONObject GetField(string name)
	{
		return null;
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x17660B8", Offset = "0x17660B8", VA = "0x17660B8")]
	public bool HasFields(string[] names)
	{
		return default(bool);
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x1764FDC", Offset = "0x1764FDC", VA = "0x1764FDC")]
	public bool HasField(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x1766190", Offset = "0x1766190", VA = "0x1766190")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x1766224", Offset = "0x1766224", VA = "0x1766224")]
	public JSONObject Copy()
	{
		return null;
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x1766338", Offset = "0x1766338", VA = "0x1766338")]
	public void Merge(JSONObject obj)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x17663AC", Offset = "0x17663AC", VA = "0x17663AC")]
	private static void MergeRecur(JSONObject left, JSONObject right)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x17667FC", Offset = "0x17667FC", VA = "0x17667FC")]
	public void Bake()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x1766844", Offset = "0x1766844", VA = "0x1766844")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCC4EC", Offset = "0xBCC4EC")]
	public IEnumerable BakeAsync()
	{
		return null;
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x17662A8", Offset = "0x17662A8", VA = "0x17662A8")]
	public string Print(bool pretty = false)
	{
		return null;
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x1766FEC", Offset = "0x1766FEC", VA = "0x1766FEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCC550", Offset = "0xBCC550")]
	public IEnumerable<string> PrintAsync(bool pretty = false)
	{
		return null;
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x17670C4", Offset = "0x17670C4", VA = "0x17670C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCC5B4", Offset = "0xBCC5B4")]
	private IEnumerable StringifyAsync(int depth, StringBuilder builder, bool pretty = false)
	{
		return null;
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x1766908", Offset = "0x1766908", VA = "0x1766908")]
	private void Stringify(int depth, StringBuilder builder, bool pretty = false)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x17671C0", Offset = "0x17671C0", VA = "0x17671C0")]
	public static implicit operator WWWForm(JSONObject obj)
	{
		return null;
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x17673B4", Offset = "0x17673B4", VA = "0x17673B4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x17673BC", Offset = "0x17673BC", VA = "0x17673BC")]
	public string ToString(bool pretty)
	{
		return null;
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x17673C4", Offset = "0x17673C4", VA = "0x17673C4")]
	public Dictionary<string, string> ToDictionary()
	{
		return null;
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x1764764", Offset = "0x1764764", VA = "0x1764764")]
	public static implicit operator bool(JSONObject o)
	{
		return default(bool);
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x1767688", Offset = "0x1767688", VA = "0x1767688", Slot = "4")]
	private IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x176768C", Offset = "0x176768C", VA = "0x176768C")]
	public JSONObjectEnumer GetEnumerator()
	{
		return null;
	}
}
[Token(Token = "0x200001E")]
public class JSONObjectEnumer : IEnumerator
{
	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public JSONObject _jobj;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int position;

	[Token(Token = "0x1700003E")]
	private object System.Collections.IEnumerator.Current
	{
		[Token(Token = "0x6000269")]
		[Address(RVA = "0x176961C", Offset = "0x176961C", VA = "0x176961C", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003F")]
	public JSONObject Current
	{
		[Token(Token = "0x600026A")]
		[Address(RVA = "0x1769620", Offset = "0x1769620", VA = "0x1769620")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x1767704", Offset = "0x1767704", VA = "0x1767704")]
	public JSONObjectEnumer(JSONObject jsonObject)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x1769598", Offset = "0x1769598", VA = "0x1769598", Slot = "4")]
	public bool MoveNext()
	{
		return default(bool);
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x1769610", Offset = "0x1769610", VA = "0x1769610", Slot = "6")]
	public void Reset()
	{
	}
}
[Token(Token = "0x200001F")]
public static class JSONTemplates
{
	[Token(Token = "0x600026B")]
	[Address(RVA = "0x17696C8", Offset = "0x17696C8", VA = "0x17696C8")]
	public static Vector2 ToVector2(JSONObject obj)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x17697F0", Offset = "0x17697F0", VA = "0x17697F0")]
	public static JSONObject FromVector2(Vector2 v)
	{
		return null;
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x17698B4", Offset = "0x17698B4", VA = "0x17698B4")]
	public static JSONObject FromVector3(Vector3 v)
	{
		return null;
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x17699A8", Offset = "0x17699A8", VA = "0x17699A8")]
	public static Vector3 ToVector3(JSONObject obj)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x1769B3C", Offset = "0x1769B3C", VA = "0x1769B3C")]
	public static JSONObject FromVector4(Vector4 v)
	{
		return null;
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x1769C58", Offset = "0x1769C58", VA = "0x1769C58")]
	public static Vector4 ToVector4(JSONObject obj)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x1769E4C", Offset = "0x1769E4C", VA = "0x1769E4C")]
	public static JSONObject FromMatrix4x4(Matrix4x4 m)
	{
		return null;
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x176A0FC", Offset = "0x176A0FC", VA = "0x176A0FC")]
	public static Matrix4x4 ToMatrix4x4(JSONObject obj)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x176A764", Offset = "0x176A764", VA = "0x176A764")]
	public static JSONObject FromQuaternion(Quaternion q)
	{
		return null;
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x176A880", Offset = "0x176A880", VA = "0x176A880")]
	public static Quaternion ToQuaternion(JSONObject obj)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x176AA74", Offset = "0x176AA74", VA = "0x176AA74")]
	public static JSONObject FromColor(Color c)
	{
		return null;
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x176AB90", Offset = "0x176AB90", VA = "0x176AB90")]
	public static Color ToColor(JSONObject obj)
	{
		return default(Color);
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x176AD6C", Offset = "0x176AD6C", VA = "0x176AD6C")]
	public static JSONObject FromLayerMask(LayerMask l)
	{
		return null;
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x176AE04", Offset = "0x176AE04", VA = "0x176AE04")]
	public static LayerMask ToLayerMask(JSONObject obj)
	{
		return default(LayerMask);
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x176AE88", Offset = "0x176AE88", VA = "0x176AE88")]
	public static JSONObject FromRect(Rect r)
	{
		return null;
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x176AFE4", Offset = "0x176AFE4", VA = "0x176AFE4")]
	public static Rect ToRect(JSONObject obj)
	{
		return default(Rect);
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x176B1D4", Offset = "0x176B1D4", VA = "0x176B1D4")]
	public static JSONObject FromRectOffset(RectOffset r)
	{
		return null;
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x176B328", Offset = "0x176B328", VA = "0x176B328")]
	public static RectOffset ToRectOffset(JSONObject obj)
	{
		return null;
	}
}
[Token(Token = "0x2000020")]
[ExecuteInEditMode]
public class ShurikenToSpritesheetGameViewGuide : MonoBehaviour
{
	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 position;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 size;

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x10A9D54", Offset = "0x10A9D54", VA = "0x10A9D54")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x10A9F0C", Offset = "0x10A9F0C", VA = "0x10A9F0C")]
	public ShurikenToSpritesheetGameViewGuide()
	{
	}
}
[Token(Token = "0x2000021")]
public class iTween : MonoBehaviour
{
	[Token(Token = "0x200022A")]
	private delegate float EasingFunction(float start, float end, float Value);

	[Token(Token = "0x200022B")]
	private delegate void ApplyTween();

	[Token(Token = "0x200022C")]
	public enum EaseType
	{
		[Token(Token = "0x4000B94")]
		easeInQuad,
		[Token(Token = "0x4000B95")]
		easeOutQuad,
		[Token(Token = "0x4000B96")]
		easeInOutQuad,
		[Token(Token = "0x4000B97")]
		easeInCubic,
		[Token(Token = "0x4000B98")]
		easeOutCubic,
		[Token(Token = "0x4000B99")]
		easeInOutCubic,
		[Token(Token = "0x4000B9A")]
		easeInQuart,
		[Token(Token = "0x4000B9B")]
		easeOutQuart,
		[Token(Token = "0x4000B9C")]
		easeInOutQuart,
		[Token(Token = "0x4000B9D")]
		easeInQuint,
		[Token(Token = "0x4000B9E")]
		easeOutQuint,
		[Token(Token = "0x4000B9F")]
		easeInOutQuint,
		[Token(Token = "0x4000BA0")]
		easeInSine,
		[Token(Token = "0x4000BA1")]
		easeOutSine,
		[Token(Token = "0x4000BA2")]
		easeInOutSine,
		[Token(Token = "0x4000BA3")]
		easeInExpo,
		[Token(Token = "0x4000BA4")]
		easeOutExpo,
		[Token(Token = "0x4000BA5")]
		easeInOutExpo,
		[Token(Token = "0x4000BA6")]
		easeInCirc,
		[Token(Token = "0x4000BA7")]
		easeOutCirc,
		[Token(Token = "0x4000BA8")]
		easeInOutCirc,
		[Token(Token = "0x4000BA9")]
		linear,
		[Token(Token = "0x4000BAA")]
		spring,
		[Token(Token = "0x4000BAB")]
		easeInBounce,
		[Token(Token = "0x4000BAC")]
		easeOutBounce,
		[Token(Token = "0x4000BAD")]
		easeInOutBounce,
		[Token(Token = "0x4000BAE")]
		easeInBack,
		[Token(Token = "0x4000BAF")]
		easeOutBack,
		[Token(Token = "0x4000BB0")]
		easeInOutBack,
		[Token(Token = "0x4000BB1")]
		easeInElastic,
		[Token(Token = "0x4000BB2")]
		easeOutElastic,
		[Token(Token = "0x4000BB3")]
		easeInOutElastic,
		[Token(Token = "0x4000BB4")]
		punch
	}

	[Token(Token = "0x200022D")]
	public enum LoopType
	{
		[Token(Token = "0x4000BB6")]
		none,
		[Token(Token = "0x4000BB7")]
		loop,
		[Token(Token = "0x4000BB8")]
		pingPong
	}

	[Token(Token = "0x200022E")]
	public enum NamedValueColor
	{
		[Token(Token = "0x4000BBA")]
		_Color,
		[Token(Token = "0x4000BBB")]
		_SpecColor,
		[Token(Token = "0x4000BBC")]
		_Emission,
		[Token(Token = "0x4000BBD")]
		_ReflectColor
	}

	[Token(Token = "0x200022F")]
	public static class Defaults
	{
		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float time;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float delay;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static NamedValueColor namedColorValue;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static LoopType loopType;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static EaseType easeType;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float lookSpeed;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool isLocal;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static Space space;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static bool orientToPath;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static Color color;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static float updateTimePercentage;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static float updateTime;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static float lookAhead;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static bool useRealTime;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static Vector3 up;
	}

	[Token(Token = "0x2000230")]
	private class CRSpline
	{
		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] pts;

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x24E0540", Offset = "0x24E0540", VA = "0x24E0540")]
		public CRSpline(params Vector3[] pts)
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x24E05D4", Offset = "0x24E05D4", VA = "0x24E05D4")]
		public Vector3 Interp(float t)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x2000231")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC90B4", Offset = "0xBC90B4")]
	private sealed class <TweenDelay>d__145 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public iTween <>4__this;

		[Token(Token = "0x17000128")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E2D")]
			[Address(RVA = "0x24E00F0", Offset = "0x24E00F0", VA = "0x24E00F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000129")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E2F")]
			[Address(RVA = "0x24E0158", Offset = "0x24E0158", VA = "0x24E0158", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x24DFFE0", Offset = "0x24DFFE0", VA = "0x24DFFE0")]
		[DebuggerHidden]
		public <TweenDelay>d__145(int <>1__state)
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x24E000C", Offset = "0x24E000C", VA = "0x24E000C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x24E0010", Offset = "0x24E0010", VA = "0x24E0010", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x24E00F8", Offset = "0x24E00F8", VA = "0x24E00F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000232")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC90C4", Offset = "0xBC90C4")]
	private sealed class <TweenRestart>d__147 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public iTween <>4__this;

		[Token(Token = "0x1700012A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E33")]
			[Address(RVA = "0x24E0278", Offset = "0x24E0278", VA = "0x24E0278", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0x24E02E0", Offset = "0x24E02E0", VA = "0x24E02E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x24E0160", Offset = "0x24E0160", VA = "0x24E0160")]
		[DebuggerHidden]
		public <TweenRestart>d__147(int <>1__state)
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x24E018C", Offset = "0x24E018C", VA = "0x24E018C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x24E0190", Offset = "0x24E0190", VA = "0x24E0190", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x24E0280", Offset = "0x24E0280", VA = "0x24E0280", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000233")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC90D4", Offset = "0xBC90D4")]
	private sealed class <Start>d__229 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public iTween <>4__this;

		[Token(Token = "0x1700012C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E39")]
			[Address(RVA = "0x24DFF70", Offset = "0x24DFF70", VA = "0x24DFF70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0x24DFFD8", Offset = "0x24DFFD8", VA = "0x24DFFD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x24DFE88", Offset = "0x24DFE88", VA = "0x24DFE88")]
		[DebuggerHidden]
		public <Start>d__229(int <>1__state)
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x24DFEB4", Offset = "0x24DFEB4", VA = "0x24DFEB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x24DFEB8", Offset = "0x24DFEB8", VA = "0x24DFEB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x24DFF78", Offset = "0x24DFF78", VA = "0x24DFF78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Hashtable> tweens;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string id;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string type;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string method;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EaseType easeType;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float time;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float delay;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public LoopType loopType;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isRunning;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool isPaused;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string _name;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float runningTime;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float percentage;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float delayStarted;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool kinematic;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isLocal;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	private bool loop;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	private bool reverse;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool wasPaused;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool physics;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Hashtable tweenArguments;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Space space;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private EasingFunction ease;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ApplyTween apply;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AudioSource audioSource;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3[] vector3s;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector2[] vector2s;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Color[,] colors;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float[] floats;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Rect[] rects;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private CRSpline path;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 preUpdate;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 postUpdate;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private NamedValueColor namedcolorvalue;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float lastRealTime;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool useRealTime;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform thisTransform;

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x172EC68", Offset = "0x172EC68", VA = "0x172EC68")]
	public static void Init(GameObject target)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x172EF24", Offset = "0x172EF24", VA = "0x172EF24")]
	public static void ValueTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x172FEEC", Offset = "0x172FEEC", VA = "0x172FEEC")]
	public static void FadeFrom(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x1730204", Offset = "0x1730204", VA = "0x1730204")]
	public static void FadeFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x1730C68", Offset = "0x1730C68", VA = "0x1730C68")]
	public static void FadeTo(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x1730E50", Offset = "0x1730E50", VA = "0x1730E50")]
	public static void FadeTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x17313C0", Offset = "0x17313C0", VA = "0x17313C0")]
	public static void ColorFrom(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x1730278", Offset = "0x1730278", VA = "0x1730278")]
	public static void ColorFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x17315D4", Offset = "0x17315D4", VA = "0x17315D4")]
	public static void ColorTo(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x1730EC4", Offset = "0x1730EC4", VA = "0x1730EC4")]
	public static void ColorTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x17317E8", Offset = "0x17317E8", VA = "0x17317E8")]
	public static void AudioFrom(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x1731A68", Offset = "0x1731A68", VA = "0x1731A68")]
	public static void AudioFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x1731E70", Offset = "0x1731E70", VA = "0x1731E70")]
	public static void AudioTo(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x17320F0", Offset = "0x17320F0", VA = "0x17320F0")]
	public static void AudioTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x173224C", Offset = "0x173224C", VA = "0x173224C")]
	public static void Stab(GameObject target, AudioClip audioclip, float delay)
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x1732418", Offset = "0x1732418", VA = "0x1732418")]
	public static void Stab(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x17324C8", Offset = "0x17324C8", VA = "0x17324C8")]
	public static void LookFrom(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x17326CC", Offset = "0x17326CC", VA = "0x17326CC")]
	public static void LookFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x1732D2C", Offset = "0x1732D2C", VA = "0x1732D2C")]
	public static void LookTo(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x1732F30", Offset = "0x1732F30", VA = "0x1732F30")]
	public static void LookTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x1733250", Offset = "0x1733250", VA = "0x1733250")]
	public static void MoveTo(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x1733454", Offset = "0x1733454", VA = "0x1733454")]
	public static void MoveTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x17337F4", Offset = "0x17337F4", VA = "0x17337F4")]
	public static void MoveFrom(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x17339F8", Offset = "0x17339F8", VA = "0x17339F8")]
	public static void MoveFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x17342F8", Offset = "0x17342F8", VA = "0x17342F8")]
	public static void MoveAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x17344FC", Offset = "0x17344FC", VA = "0x17344FC")]
	public static void MoveAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x172ED20", Offset = "0x172ED20", VA = "0x172ED20")]
	public static void MoveBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x17345D8", Offset = "0x17345D8", VA = "0x17345D8")]
	public static void MoveBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x17346B4", Offset = "0x17346B4", VA = "0x17346B4")]
	public static void ScaleTo(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x17348B8", Offset = "0x17348B8", VA = "0x17348B8")]
	public static void ScaleTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x1734C50", Offset = "0x1734C50", VA = "0x1734C50")]
	public static void ScaleFrom(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x1734E54", Offset = "0x1734E54", VA = "0x1734E54")]
	public static void ScaleFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x1735300", Offset = "0x1735300", VA = "0x1735300")]
	public static void ScaleAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x1735504", Offset = "0x1735504", VA = "0x1735504")]
	public static void ScaleAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x17355E0", Offset = "0x17355E0", VA = "0x17355E0")]
	public static void ScaleBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x17357E4", Offset = "0x17357E4", VA = "0x17357E4")]
	public static void ScaleBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x17358C0", Offset = "0x17358C0", VA = "0x17358C0")]
	public static void RotateTo(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x1735AC4", Offset = "0x1735AC4", VA = "0x1735AC4")]
	public static void RotateTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x1735E64", Offset = "0x1735E64", VA = "0x1735E64")]
	public static void RotateFrom(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x1736068", Offset = "0x1736068", VA = "0x1736068")]
	public static void RotateFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x17365CC", Offset = "0x17365CC", VA = "0x17365CC")]
	public static void RotateAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x17367D0", Offset = "0x17367D0", VA = "0x17367D0")]
	public static void RotateAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x17368AC", Offset = "0x17368AC", VA = "0x17368AC")]
	public static void RotateBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x1736AB0", Offset = "0x1736AB0", VA = "0x1736AB0")]
	public static void RotateBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x1736B8C", Offset = "0x1736B8C", VA = "0x1736B8C")]
	public static void ShakePosition(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x1736D90", Offset = "0x1736D90", VA = "0x1736D90")]
	public static void ShakePosition(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x1736E6C", Offset = "0x1736E6C", VA = "0x1736E6C")]
	public static void ShakeScale(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x1737070", Offset = "0x1737070", VA = "0x1737070")]
	public static void ShakeScale(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x173714C", Offset = "0x173714C", VA = "0x173714C")]
	public static void ShakeRotation(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x1737350", Offset = "0x1737350", VA = "0x1737350")]
	public static void ShakeRotation(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x173742C", Offset = "0x173742C", VA = "0x173742C")]
	public static void PunchPosition(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x1737630", Offset = "0x1737630", VA = "0x1737630")]
	public static void PunchPosition(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x1737750", Offset = "0x1737750", VA = "0x1737750")]
	public static void PunchRotation(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x1737954", Offset = "0x1737954", VA = "0x1737954")]
	public static void PunchRotation(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x1737A74", Offset = "0x1737A74", VA = "0x1737A74")]
	public static void PunchScale(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x1737C78", Offset = "0x1737C78", VA = "0x1737C78")]
	public static void PunchScale(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x1737D98", Offset = "0x1737D98", VA = "0x1737D98")]
	private void GenerateTargets()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x1738E5C", Offset = "0x1738E5C", VA = "0x1738E5C")]
	private void GenerateRectTargets()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x1738CE4", Offset = "0x1738CE4", VA = "0x1738CE4")]
	private void GenerateColorTargets()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x1738A78", Offset = "0x1738A78", VA = "0x1738A78")]
	private void GenerateVector3Targets()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x17387D8", Offset = "0x17387D8", VA = "0x17387D8")]
	private void GenerateVector2Targets()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x17385D8", Offset = "0x17385D8", VA = "0x17385D8")]
	private void GenerateFloatTargets()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x1738FA4", Offset = "0x1738FA4", VA = "0x1738FA4")]
	private void GenerateColorToTargets()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x1739924", Offset = "0x1739924", VA = "0x1739924")]
	private void GenerateAudioToTargets()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x173E7D4", Offset = "0x173E7D4", VA = "0x173E7D4")]
	private void GenerateStabTargets()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x173DF9C", Offset = "0x173DF9C", VA = "0x173DF9C")]
	private void GenerateLookToTargets()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x1739C4C", Offset = "0x1739C4C", VA = "0x1739C4C")]
	private void GenerateMoveToPathTargets()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x173A3A0", Offset = "0x173A3A0", VA = "0x173A3A0")]
	private void GenerateMoveToTargets()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x173A9F0", Offset = "0x173A9F0", VA = "0x173A9F0")]
	private void GenerateMoveByTargets()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x173B000", Offset = "0x173B000", VA = "0x173B000")]
	private void GenerateScaleToTargets()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x173B55C", Offset = "0x173B55C", VA = "0x173B55C")]
	private void GenerateScaleByTargets()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x173B9C4", Offset = "0x173B9C4", VA = "0x173B9C4")]
	private void GenerateScaleAddTargets()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x173BE20", Offset = "0x173BE20", VA = "0x173BE20")]
	private void GenerateRotateToTargets()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x173C454", Offset = "0x173C454", VA = "0x173C454")]
	private void GenerateRotateAddTargets()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x173C8B8", Offset = "0x173C8B8", VA = "0x173C8B8")]
	private void GenerateRotateByTargets()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x173CD88", Offset = "0x173CD88", VA = "0x173CD88")]
	private void GenerateShakePositionTargets()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x173D088", Offset = "0x173D088", VA = "0x173D088")]
	private void GenerateShakeScaleTargets()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x173D35C", Offset = "0x173D35C", VA = "0x173D35C")]
	private void GenerateShakeRotationTargets()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x173D630", Offset = "0x173D630", VA = "0x173D630")]
	private void GeneratePunchPositionTargets()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x173D974", Offset = "0x173D974", VA = "0x173D974")]
	private void GeneratePunchRotationTargets()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x173DC8C", Offset = "0x173DC8C", VA = "0x173DC8C")]
	private void GeneratePunchScaleTargets()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x173EEF0", Offset = "0x173EEF0", VA = "0x173EEF0")]
	private void ApplyRectTargets()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x173F1F0", Offset = "0x173F1F0", VA = "0x173F1F0")]
	private void ApplyColorTargets()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x173F420", Offset = "0x173F420", VA = "0x173F420")]
	private void ApplyVector3Targets()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x173F614", Offset = "0x173F614", VA = "0x173F614")]
	private void ApplyVector2Targets()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x173F7B4", Offset = "0x173F7B4", VA = "0x173F7B4")]
	private void ApplyFloatTargets()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x173F90C", Offset = "0x173F90C", VA = "0x173F90C")]
	private void ApplyColorToTargets()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x173FE6C", Offset = "0x173FE6C", VA = "0x173FE6C")]
	private void ApplyAudioToTargets()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x173FFD8", Offset = "0x173FFD8", VA = "0x173FFD8")]
	private void ApplyStabTargets()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x173FFDC", Offset = "0x173FFDC", VA = "0x173FFDC")]
	private void ApplyMoveToPathTargets()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x174033C", Offset = "0x174033C", VA = "0x174033C")]
	private void ApplyMoveToTargets()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x1740548", Offset = "0x1740548", VA = "0x1740548")]
	private void ApplyMoveByTargets()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x1740888", Offset = "0x1740888", VA = "0x1740888")]
	private void ApplyScaleToTargets()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x17409F0", Offset = "0x17409F0", VA = "0x17409F0")]
	private void ApplyLookToTargets()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x1740BC8", Offset = "0x1740BC8", VA = "0x1740BC8")]
	private void ApplyRotateToTargets()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x1740EF8", Offset = "0x1740EF8", VA = "0x1740EF8")]
	private void ApplyRotateAddTargets()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x174118C", Offset = "0x174118C", VA = "0x174118C")]
	private void ApplyShakePositionTargets()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x17415A4", Offset = "0x17415A4", VA = "0x17415A4")]
	private void ApplyShakeScaleTargets()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x17417B8", Offset = "0x17417B8", VA = "0x17417B8")]
	private void ApplyShakeRotationTargets()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x1741A28", Offset = "0x1741A28", VA = "0x1741A28")]
	private void ApplyPunchPositionTargets()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x1741EDC", Offset = "0x1741EDC", VA = "0x1741EDC")]
	private void ApplyPunchRotationTargets()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x1742224", Offset = "0x1742224", VA = "0x1742224")]
	private void ApplyPunchScaleTargets()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x1742484", Offset = "0x1742484", VA = "0x1742484")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCC618", Offset = "0xBCC618")]
	private IEnumerator TweenDelay()
	{
		return null;
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x1742500", Offset = "0x1742500", VA = "0x1742500")]
	private void TweenStart()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x1742E9C", Offset = "0x1742E9C", VA = "0x1742E9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCC67C", Offset = "0xBCC67C")]
	private IEnumerator TweenRestart()
	{
		return null;
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x1742F18", Offset = "0x1742F18", VA = "0x1742F18")]
	private void TweenUpdate()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x1742FFC", Offset = "0x1742FFC", VA = "0x1742FFC")]
	private void TweenComplete()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x17430CC", Offset = "0x17430CC", VA = "0x17430CC")]
	private void TweenLoop()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x1743170", Offset = "0x1743170", VA = "0x1743170")]
	public static Rect RectUpdate(Rect currentValue, Rect targetValue, float speed)
	{
		return default(Rect);
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x1743338", Offset = "0x1743338", VA = "0x1743338")]
	public static Vector3 Vector3Update(Vector3 currentValue, Vector3 targetValue, float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x1743444", Offset = "0x1743444", VA = "0x1743444")]
	public static Vector2 Vector2Update(Vector2 currentValue, Vector2 targetValue, float speed)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x17432F8", Offset = "0x17432F8", VA = "0x17432F8")]
	public static float FloatUpdate(float currentValue, float targetValue, float speed)
	{
		return default(float);
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x1743528", Offset = "0x1743528", VA = "0x1743528")]
	public static void FadeUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x1743FB4", Offset = "0x1743FB4", VA = "0x1743FB4")]
	public static void FadeUpdate(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x17435E8", Offset = "0x17435E8", VA = "0x17435E8")]
	public static void ColorUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x174419C", Offset = "0x174419C", VA = "0x174419C")]
	public static void ColorUpdate(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x17443B0", Offset = "0x17443B0", VA = "0x17443B0")]
	public static void AudioUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x1744860", Offset = "0x1744860", VA = "0x1744860")]
	public static void AudioUpdate(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x1744AE0", Offset = "0x1744AE0", VA = "0x1744AE0")]
	public static void RotateUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x1745108", Offset = "0x1745108", VA = "0x1745108")]
	public static void RotateUpdate(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x174530C", Offset = "0x174530C", VA = "0x174530C")]
	public static void ScaleUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x17458F4", Offset = "0x17458F4", VA = "0x17458F4")]
	public static void ScaleUpdate(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x1745AF8", Offset = "0x1745AF8", VA = "0x1745AF8")]
	public static void MoveUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x1746C68", Offset = "0x1746C68", VA = "0x1746C68")]
	public static void MoveUpdate(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x174635C", Offset = "0x174635C", VA = "0x174635C")]
	public static void LookUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x1746E6C", Offset = "0x1746E6C", VA = "0x1746E6C")]
	public static void LookUpdate(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x1747070", Offset = "0x1747070", VA = "0x1747070")]
	public static float PathLength(Transform[] path)
	{
		return default(float);
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x173ED78", Offset = "0x173ED78", VA = "0x173ED78")]
	public static float PathLength(Vector3[] path)
	{
		return default(float);
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x1747954", Offset = "0x1747954", VA = "0x1747954")]
	public static void PutOnPath(GameObject target, Vector3[] path, float percent)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x1747A04", Offset = "0x1747A04", VA = "0x1747A04")]
	public static void PutOnPath(Transform target, Vector3[] path, float percent)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x1747A9C", Offset = "0x1747A9C", VA = "0x1747A9C")]
	public static void PutOnPath(GameObject target, Transform[] path, float percent)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x1747BD4", Offset = "0x1747BD4", VA = "0x1747BD4")]
	public static void PutOnPath(Transform target, Transform[] path, float percent)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x1747CF4", Offset = "0x1747CF4", VA = "0x1747CF4")]
	public static Vector3 PointOnPath(Transform[] path, float percent)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x1747E00", Offset = "0x1747E00", VA = "0x1747E00")]
	public static void DrawLine(Vector3[] line)
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x1748064", Offset = "0x1748064", VA = "0x1748064")]
	public static void DrawLine(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x1748128", Offset = "0x1748128", VA = "0x1748128")]
	public static void DrawLine(Transform[] line)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x174829C", Offset = "0x174829C", VA = "0x174829C")]
	public static void DrawLine(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x17483F0", Offset = "0x17483F0", VA = "0x17483F0")]
	public static void DrawLineGizmos(Vector3[] line)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x17484D4", Offset = "0x17484D4", VA = "0x17484D4")]
	public static void DrawLineGizmos(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x1748598", Offset = "0x1748598", VA = "0x1748598")]
	public static void DrawLineGizmos(Transform[] line)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x174870C", Offset = "0x174870C", VA = "0x174870C")]
	public static void DrawLineGizmos(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x1748860", Offset = "0x1748860", VA = "0x1748860")]
	public static void DrawLineHandles(Vector3[] line)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x1748944", Offset = "0x1748944", VA = "0x1748944")]
	public static void DrawLineHandles(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x1748A08", Offset = "0x1748A08", VA = "0x1748A08")]
	public static void DrawLineHandles(Transform[] line)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x1748B7C", Offset = "0x1748B7C", VA = "0x1748B7C")]
	public static void DrawLineHandles(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x1748CD0", Offset = "0x1748CD0", VA = "0x1748CD0")]
	public static Vector3 PointOnPath(Vector3[] path, float percent)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x1748D48", Offset = "0x1748D48", VA = "0x1748D48")]
	public static void DrawPath(Vector3[] path)
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x1749020", Offset = "0x1749020", VA = "0x1749020")]
	public static void DrawPath(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x17490E4", Offset = "0x17490E4", VA = "0x17490E4")]
	public static void DrawPath(Transform[] path)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x1749258", Offset = "0x1749258", VA = "0x1749258")]
	public static void DrawPath(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x17493AC", Offset = "0x17493AC", VA = "0x17493AC")]
	public static void DrawPathGizmos(Vector3[] path)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x1749490", Offset = "0x1749490", VA = "0x1749490")]
	public static void DrawPathGizmos(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x1749554", Offset = "0x1749554", VA = "0x1749554")]
	public static void DrawPathGizmos(Transform[] path)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x17496C8", Offset = "0x17496C8", VA = "0x17496C8")]
	public static void DrawPathGizmos(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x174981C", Offset = "0x174981C", VA = "0x174981C")]
	public static void DrawPathHandles(Vector3[] path)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x1749900", Offset = "0x1749900", VA = "0x1749900")]
	public static void DrawPathHandles(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x17499C4", Offset = "0x17499C4", VA = "0x17499C4")]
	public static void DrawPathHandles(Transform[] path)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x1749B38", Offset = "0x1749B38", VA = "0x1749B38")]
	public static void DrawPathHandles(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x1749C8C", Offset = "0x1749C8C", VA = "0x1749C8C")]
	public static void Resume(GameObject target)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x1749D7C", Offset = "0x1749D7C", VA = "0x1749D7C")]
	public static void Resume(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x174A038", Offset = "0x174A038", VA = "0x174A038")]
	public static void Resume(GameObject target, string type)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x174A190", Offset = "0x174A190", VA = "0x174A190")]
	public static void Resume(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x174A53C", Offset = "0x174A53C", VA = "0x174A53C")]
	public static void Resume()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x174A65C", Offset = "0x174A65C", VA = "0x174A65C")]
	public static void Resume(string type)
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x174A88C", Offset = "0x174A88C", VA = "0x174A88C")]
	public static void Pause(GameObject target)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x174A9D8", Offset = "0x174A9D8", VA = "0x174A9D8")]
	public static void Pause(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x174AC94", Offset = "0x174AC94", VA = "0x174AC94")]
	public static void Pause(GameObject target, string type)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x174AE40", Offset = "0x174AE40", VA = "0x174AE40")]
	public static void Pause(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x174B240", Offset = "0x174B240", VA = "0x174B240")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x174B360", Offset = "0x174B360", VA = "0x174B360")]
	public static void Pause(string type)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x174B590", Offset = "0x174B590", VA = "0x174B590")]
	public static int Count()
	{
		return default(int);
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x174B604", Offset = "0x174B604", VA = "0x174B604")]
	public static int Count(string type)
	{
		return default(int);
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x174B7E0", Offset = "0x174B7E0", VA = "0x174B7E0")]
	public static int Count(GameObject target)
	{
		return default(int);
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x174B844", Offset = "0x174B844", VA = "0x174B844")]
	public static int Count(GameObject target, string type)
	{
		return default(int);
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x174B9A0", Offset = "0x174B9A0", VA = "0x174B9A0")]
	public static void Stop()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x174BBD8", Offset = "0x174BBD8", VA = "0x174BBD8")]
	public static void Stop(string type)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x174BF58", Offset = "0x174BF58", VA = "0x174BF58")]
	public static void StopByName(string name)
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x174BAF0", Offset = "0x174BAF0", VA = "0x174BAF0")]
	public static void Stop(GameObject target)
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x174C33C", Offset = "0x174C33C", VA = "0x174C33C")]
	public static void Stop(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x174BE08", Offset = "0x174BE08", VA = "0x174BE08")]
	public static void Stop(GameObject target, string type)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x174C1E4", Offset = "0x174C1E4", VA = "0x174C1E4")]
	public static void StopByName(GameObject target, string name)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x174C5F8", Offset = "0x174C5F8", VA = "0x174C5F8")]
	public static void Stop(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x174C99C", Offset = "0x174C99C", VA = "0x174C99C")]
	public static void StopByName(GameObject target, string name, bool includechildren)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x17300D4", Offset = "0x17300D4", VA = "0x17300D4")]
	public static Hashtable Hash(params object[] args)
	{
		return null;
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x174CD00", Offset = "0x174CD00", VA = "0x174CD00")]
	private iTween(Hashtable h)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x174CD34", Offset = "0x174CD34", VA = "0x174CD34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x174DE00", Offset = "0x174DE00", VA = "0x174DE00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCC6E0", Offset = "0xBCC6E0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x174DE7C", Offset = "0x174DE7C", VA = "0x174DE7C")]
	private void Update()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x174DEBC", Offset = "0x174DEBC", VA = "0x174DEBC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x174DEFC", Offset = "0x174DEFC", VA = "0x174DEFC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x174E010", Offset = "0x174E010", VA = "0x174E010")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x174E08C", Offset = "0x174E08C", VA = "0x174E08C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x1747EE4", Offset = "0x1747EE4", VA = "0x1747EE4")]
	private static void DrawLineHelper(Vector3[] line, Color color, string method)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x1748E2C", Offset = "0x1748E2C", VA = "0x1748E2C")]
	private static void DrawPathHelper(Vector3[] path, Color color, string method)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x1747264", Offset = "0x1747264", VA = "0x1747264")]
	private static Vector3[] PathControlPointGenerator(Vector3[] path)
	{
		return null;
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x1747528", Offset = "0x1747528", VA = "0x1747528")]
	private static Vector3 Interp(Vector3[] pts, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x172FD98", Offset = "0x172FD98", VA = "0x172FD98")]
	private static void Launch(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x172F400", Offset = "0x172F400", VA = "0x172F400")]
	private static Hashtable CleanArgs(Hashtable args)
	{
		return null;
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x174E090", Offset = "0x174E090", VA = "0x174E090")]
	private static string GenerateID()
	{
		return null;
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x174CD7C", Offset = "0x174CD7C", VA = "0x174CD7C")]
	private void RetrieveArgs()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x174E110", Offset = "0x174E110", VA = "0x174E110")]
	private void GetEasingFunction()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x1742F84", Offset = "0x1742F84", VA = "0x1742F84")]
	private void UpdatePercentage()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x1742678", Offset = "0x1742678", VA = "0x1742678")]
	private void CallBack(string callbackType)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x173EB08", Offset = "0x173EB08", VA = "0x173EB08")]
	private void Dispose()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x1742950", Offset = "0x1742950", VA = "0x1742950")]
	private void ConflictCheck()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x1742E98", Offset = "0x1742E98", VA = "0x1742E98")]
	private void EnableKinematic()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x174316C", Offset = "0x174316C", VA = "0x174316C")]
	private void DisableKinematic()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x174E038", Offset = "0x174E038", VA = "0x174E038")]
	private void ResumeDelay()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x174E518", Offset = "0x174E518", VA = "0x174E518")]
	private float linear(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x173ECA4", Offset = "0x173ECA4", VA = "0x173ECA4")]
	private float clerp(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x174E5A0", Offset = "0x174E5A0", VA = "0x174E5A0")]
	private float spring(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x174E6A4", Offset = "0x174E6A4", VA = "0x174E6A4")]
	private float easeInQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x174E6B8", Offset = "0x174E6B8", VA = "0x174E6B8")]
	private float easeOutQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x174E6D4", Offset = "0x174E6D4", VA = "0x174E6D4")]
	private float easeInOutQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x174E728", Offset = "0x174E728", VA = "0x174E728")]
	private float easeInCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x174E740", Offset = "0x174E740", VA = "0x174E740")]
	private float easeOutCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x174E768", Offset = "0x174E768", VA = "0x174E768")]
	private float easeInOutCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x174E7C0", Offset = "0x174E7C0", VA = "0x174E7C0")]
	private float easeInQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x174E7DC", Offset = "0x174E7DC", VA = "0x174E7DC")]
	private float easeOutQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x174E804", Offset = "0x174E804", VA = "0x174E804")]
	private float easeInOutQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x174E860", Offset = "0x174E860", VA = "0x174E860")]
	private float easeInQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x174E880", Offset = "0x174E880", VA = "0x174E880")]
	private float easeOutQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x174E8B0", Offset = "0x174E8B0", VA = "0x174E8B0")]
	private float easeInOutQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x174E918", Offset = "0x174E918", VA = "0x174E918")]
	private float easeInSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x174E9B0", Offset = "0x174E9B0", VA = "0x174E9B0")]
	private float easeOutSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x174EA44", Offset = "0x174EA44", VA = "0x174EA44")]
	private float easeInOutSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x174EAE8", Offset = "0x174EAE8", VA = "0x174EAE8")]
	private float easeInExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x174EB80", Offset = "0x174EB80", VA = "0x174EB80")]
	private float easeOutExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x174EC18", Offset = "0x174EC18", VA = "0x174EC18")]
	private float easeInOutExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x174ED08", Offset = "0x174ED08", VA = "0x174ED08")]
	private float easeInCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x174EDB4", Offset = "0x174EDB4", VA = "0x174EDB4")]
	private float easeOutCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x174EE60", Offset = "0x174EE60", VA = "0x174EE60")]
	private float easeInOutCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x174EF58", Offset = "0x174EF58", VA = "0x174EF58")]
	private float easeInBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x174EF94", Offset = "0x174EF94", VA = "0x174EF94")]
	private float easeOutBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x174F060", Offset = "0x174F060", VA = "0x174F060")]
	private float easeInOutBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x174F0E4", Offset = "0x174F0E4", VA = "0x174F0E4")]
	private float easeInBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x174F114", Offset = "0x174F114", VA = "0x174F114")]
	private float easeOutBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x174F154", Offset = "0x174F154", VA = "0x174F154")]
	private float easeInOutBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x1741E1C", Offset = "0x1741E1C", VA = "0x1741E1C")]
	private float punch(float amplitude, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x174F1D8", Offset = "0x174F1D8", VA = "0x174F1D8")]
	private float easeInElastic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x174F2C0", Offset = "0x174F2C0", VA = "0x174F2C0")]
	private float easeOutElastic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x174F3A4", Offset = "0x174F3A4", VA = "0x174F3A4")]
	private float easeInOutElastic(float start, float end, float value)
	{
		return default(float);
	}
}
[Token(Token = "0x2000022")]
public class SteamVR : IDisposable
{
	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _enabled;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SteamVR _instance;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAF44", Offset = "0xBCAF44")]
	private CVRSystem <hmd>k__BackingField;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAF54", Offset = "0xBCAF54")]
	private CVRCompositor <compositor>k__BackingField;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAF64", Offset = "0xBCAF64")]
	private CVROverlay <overlay>k__BackingField;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAF74", Offset = "0xBCAF74")]
	private static bool <initializing>k__BackingField;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAF84", Offset = "0xBCAF84")]
	private static bool <calibrating>k__BackingField;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAF94", Offset = "0xBCAF94")]
	private static bool <outOfRange>k__BackingField;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool[] connected;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAFA4", Offset = "0xBCAFA4")]
	private float <sceneWidth>k__BackingField;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAFB4", Offset = "0xBCAFB4")]
	private float <sceneHeight>k__BackingField;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAFC4", Offset = "0xBCAFC4")]
	private float <aspect>k__BackingField;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAFD4", Offset = "0xBCAFD4")]
	private float <fieldOfView>k__BackingField;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAFE4", Offset = "0xBCAFE4")]
	private Vector2 <tanHalfFov>k__BackingField;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAFF4", Offset = "0xBCAFF4")]
	private VRTextureBounds_t[] <textureBounds>k__BackingField;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB004", Offset = "0xBCB004")]
	private SteamVR_Utils.RigidTransform[] <eyes>k__BackingField;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ETextureType textureType;

	[Token(Token = "0x17000040")]
	public static bool active
	{
		[Token(Token = "0x6000372")]
		[Address(RVA = "0x10AA820", Offset = "0x10AA820", VA = "0x10AA820")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000041")]
	public static bool enabled
	{
		[Token(Token = "0x6000373")]
		[Address(RVA = "0x10AA890", Offset = "0x10AA890", VA = "0x10AA890")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000374")]
		[Address(RVA = "0x10AA92C", Offset = "0x10AA92C", VA = "0x10AA92C")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public static SteamVR instance
	{
		[Token(Token = "0x6000375")]
		[Address(RVA = "0x10AAA70", Offset = "0x10AAA70", VA = "0x10AAA70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000043")]
	public static bool usingNativeSupport
	{
		[Token(Token = "0x6000376")]
		[Address(RVA = "0x10AADB0", Offset = "0x10AADB0", VA = "0x10AADB0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000044")]
	public CVRSystem hmd
	{
		[Token(Token = "0x6000379")]
		[Address(RVA = "0x10AB7C8", Offset = "0x10AB7C8", VA = "0x10AB7C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC744", Offset = "0xBCC744")]
		get
		{
			return null;
		}
		[Token(Token = "0x600037A")]
		[Address(RVA = "0x10AB7D0", Offset = "0x10AB7D0", VA = "0x10AB7D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC754", Offset = "0xBCC754")]
		private set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public CVRCompositor compositor
	{
		[Token(Token = "0x600037B")]
		[Address(RVA = "0x10AB7D8", Offset = "0x10AB7D8", VA = "0x10AB7D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC764", Offset = "0xBCC764")]
		get
		{
			return null;
		}
		[Token(Token = "0x600037C")]
		[Address(RVA = "0x10AB7E0", Offset = "0x10AB7E0", VA = "0x10AB7E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC774", Offset = "0xBCC774")]
		private set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public CVROverlay overlay
	{
		[Token(Token = "0x600037D")]
		[Address(RVA = "0x10AB7E8", Offset = "0x10AB7E8", VA = "0x10AB7E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC784", Offset = "0xBCC784")]
		get
		{
			return null;
		}
		[Token(Token = "0x600037E")]
		[Address(RVA = "0x10AB7F0", Offset = "0x10AB7F0", VA = "0x10AB7F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC794", Offset = "0xBCC794")]
		private set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public static bool initializing
	{
		[Token(Token = "0x600037F")]
		[Address(RVA = "0x10AB7F8", Offset = "0x10AB7F8", VA = "0x10AB7F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC7A4", Offset = "0xBCC7A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000380")]
		[Address(RVA = "0x10AB860", Offset = "0x10AB860", VA = "0x10AB860")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC7B4", Offset = "0xBCC7B4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public static bool calibrating
	{
		[Token(Token = "0x6000381")]
		[Address(RVA = "0x10AB8D0", Offset = "0x10AB8D0", VA = "0x10AB8D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC7C4", Offset = "0xBCC7C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000382")]
		[Address(RVA = "0x10AB938", Offset = "0x10AB938", VA = "0x10AB938")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC7D4", Offset = "0xBCC7D4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public static bool outOfRange
	{
		[Token(Token = "0x6000383")]
		[Address(RVA = "0x10AB9A8", Offset = "0x10AB9A8", VA = "0x10AB9A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC7E4", Offset = "0xBCC7E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000384")]
		[Address(RVA = "0x10ABA10", Offset = "0x10ABA10", VA = "0x10ABA10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC7F4", Offset = "0xBCC7F4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public float sceneWidth
	{
		[Token(Token = "0x6000385")]
		[Address(RVA = "0x10ABA80", Offset = "0x10ABA80", VA = "0x10ABA80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC804", Offset = "0xBCC804")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000386")]
		[Address(RVA = "0x10ABA88", Offset = "0x10ABA88", VA = "0x10ABA88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC814", Offset = "0xBCC814")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public float sceneHeight
	{
		[Token(Token = "0x6000387")]
		[Address(RVA = "0x10ABA90", Offset = "0x10ABA90", VA = "0x10ABA90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC824", Offset = "0xBCC824")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000388")]
		[Address(RVA = "0x10ABA98", Offset = "0x10ABA98", VA = "0x10ABA98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC834", Offset = "0xBCC834")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public float aspect
	{
		[Token(Token = "0x6000389")]
		[Address(RVA = "0x10ABAA0", Offset = "0x10ABAA0", VA = "0x10ABAA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC844", Offset = "0xBCC844")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600038A")]
		[Address(RVA = "0x10ABAA8", Offset = "0x10ABAA8", VA = "0x10ABAA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC854", Offset = "0xBCC854")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public float fieldOfView
	{
		[Token(Token = "0x600038B")]
		[Address(RVA = "0x10ABAB0", Offset = "0x10ABAB0", VA = "0x10ABAB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC864", Offset = "0xBCC864")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600038C")]
		[Address(RVA = "0x10ABAB8", Offset = "0x10ABAB8", VA = "0x10ABAB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC874", Offset = "0xBCC874")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public Vector2 tanHalfFov
	{
		[Token(Token = "0x600038D")]
		[Address(RVA = "0x10ABAC0", Offset = "0x10ABAC0", VA = "0x10ABAC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC884", Offset = "0xBCC884")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x600038E")]
		[Address(RVA = "0x10ABAC8", Offset = "0x10ABAC8", VA = "0x10ABAC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC894", Offset = "0xBCC894")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public VRTextureBounds_t[] textureBounds
	{
		[Token(Token = "0x600038F")]
		[Address(RVA = "0x10ABAD0", Offset = "0x10ABAD0", VA = "0x10ABAD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC8A4", Offset = "0xBCC8A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000390")]
		[Address(RVA = "0x10ABAD8", Offset = "0x10ABAD8", VA = "0x10ABAD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC8B4", Offset = "0xBCC8B4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public SteamVR_Utils.RigidTransform[] eyes
	{
		[Token(Token = "0x6000391")]
		[Address(RVA = "0x10ABAE0", Offset = "0x10ABAE0", VA = "0x10ABAE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC8C4", Offset = "0xBCC8C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000392")]
		[Address(RVA = "0x10ABAE8", Offset = "0x10ABAE8", VA = "0x10ABAE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC8D4", Offset = "0xBCC8D4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public string hmd_TrackingSystemName
	{
		[Token(Token = "0x6000393")]
		[Address(RVA = "0x10ABAF0", Offset = "0x10ABAF0", VA = "0x10ABAF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000052")]
	public string hmd_ModelNumber
	{
		[Token(Token = "0x6000394")]
		[Address(RVA = "0x10ABC44", Offset = "0x10ABC44", VA = "0x10ABC44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000053")]
	public string hmd_SerialNumber
	{
		[Token(Token = "0x6000395")]
		[Address(RVA = "0x10ABC50", Offset = "0x10ABC50", VA = "0x10ABC50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000054")]
	public float hmd_SecondsFromVsyncToPhotons
	{
		[Token(Token = "0x6000396")]
		[Address(RVA = "0x10ABC5C", Offset = "0x10ABC5C", VA = "0x10ABC5C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000055")]
	public float hmd_DisplayFrequency
	{
		[Token(Token = "0x6000397")]
		[Address(RVA = "0x10ABCA8", Offset = "0x10ABCA8", VA = "0x10ABCA8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x10AAB88", Offset = "0x10AAB88", VA = "0x10AAB88")]
	private static SteamVR CreateInstance()
	{
		return null;
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x10AAE1C", Offset = "0x10AAE1C", VA = "0x10AAE1C")]
	private static void ReportError(EVRInitError error)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x10ABCB4", Offset = "0x10ABCB4", VA = "0x10ABCB4")]
	public string GetTrackedDeviceString(uint deviceId)
	{
		return null;
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x10ABAFC", Offset = "0x10ABAFC", VA = "0x10ABAFC")]
	public string GetStringProperty(ETrackedDeviceProperty prop, uint deviceId = 0u)
	{
		return null;
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x10ABC68", Offset = "0x10ABC68", VA = "0x10ABC68")]
	public float GetFloatProperty(ETrackedDeviceProperty prop, uint deviceId = 0u)
	{
		return default(float);
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x10ABD9C", Offset = "0x10ABD9C", VA = "0x10ABD9C")]
	private void OnInitializing(bool initializing)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x10ABE50", Offset = "0x10ABE50", VA = "0x10ABE50")]
	private void OnCalibrating(bool calibrating)
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x10ABF04", Offset = "0x10ABF04", VA = "0x10ABF04")]
	private void OnOutOfRange(bool outOfRange)
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x10ABFB8", Offset = "0x10ABFB8", VA = "0x10ABFB8")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x10AC05C", Offset = "0x10AC05C", VA = "0x10AC05C")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x10AAF70", Offset = "0x10AAF70", VA = "0x10AAF70")]
	private SteamVR()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x10AC508", Offset = "0x10AC508", VA = "0x10AC508", Slot = "1")]
	~SteamVR()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x10AC7BC", Offset = "0x10AC7BC", VA = "0x10AC7BC", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x10AC574", Offset = "0x10AC574", VA = "0x10AC574")]
	private void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x10AA9CC", Offset = "0x10AA9CC", VA = "0x10AA9CC")]
	public static void SafeDispose()
	{
	}
}
[Token(Token = "0x2000023")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC2130", Offset = "0xBC2130")]
public class SteamVR_Camera : MonoBehaviour
{
	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _head;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB024", Offset = "0xBCB024")]
	private Camera <camera>k__BackingField;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _ears;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool wireframe;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Hashtable values;

	[Token(Token = "0x40000C7")]
	private const string eyeSuffix = " (eye)";

	[Token(Token = "0x40000C8")]
	private const string earsSuffix = " (ears)";

	[Token(Token = "0x40000C9")]
	private const string headSuffix = " (head)";

	[Token(Token = "0x40000CA")]
	private const string originSuffix = " (origin)";

	[Token(Token = "0x17000056")]
	public Transform head
	{
		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x10AC8AC", Offset = "0x10AC8AC", VA = "0x10AC8AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000057")]
	public Transform offset
	{
		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x10AC8B4", Offset = "0x10AC8B4", VA = "0x10AC8B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000058")]
	public Transform origin
	{
		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x10AC8BC", Offset = "0x10AC8BC", VA = "0x10AC8BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000059")]
	public Camera camera
	{
		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x10AC8D8", Offset = "0x10AC8D8", VA = "0x10AC8D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC8E4", Offset = "0xBCC8E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x10AC8E0", Offset = "0x10AC8E0", VA = "0x10AC8E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC8F4", Offset = "0xBCC8F4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public Transform ears
	{
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x10AC8E8", Offset = "0x10AC8E8", VA = "0x10AC8E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005B")]
	public static float sceneResolutionScale
	{
		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x10AC978", Offset = "0x10AC978", VA = "0x10AC978")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x10AC980", Offset = "0x10AC980", VA = "0x10AC980")]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public string baseName
	{
		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x10ADC48", Offset = "0x10ADC48", VA = "0x10ADC48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x10AC8F0", Offset = "0x10AC8F0", VA = "0x10AC8F0")]
	public Ray GetRay()
	{
		return default(Ray);
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x10AC988", Offset = "0x10AC988", VA = "0x10AC988")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x10ACA38", Offset = "0x10ACA38", VA = "0x10ACA38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x10AD5A4", Offset = "0x10AD5A4", VA = "0x10AD5A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x10AD60C", Offset = "0x10AD60C", VA = "0x10AD60C")]
	public void ForceLast()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x10ACDC4", Offset = "0x10ACDC4", VA = "0x10ACDC4")]
	public void Expand()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x10ADD18", Offset = "0x10ADD18", VA = "0x10ADD18")]
	public void Collapse()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x10AE154", Offset = "0x10AE154", VA = "0x10AE154")]
	public SteamVR_Camera()
	{
	}
}
[Token(Token = "0x2000024")]
[ExecuteInEditMode]
public class SteamVR_CameraFlip : MonoBehaviour
{
	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x10AE15C", Offset = "0x10AE15C", VA = "0x10AE15C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x10AE1F8", Offset = "0x10AE1F8", VA = "0x10AE1F8")]
	public SteamVR_CameraFlip()
	{
	}
}
[Token(Token = "0x2000025")]
[ExecuteInEditMode]
public class SteamVR_CameraMask : MonoBehaviour
{
	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x10AE200", Offset = "0x10AE200", VA = "0x10AE200")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x10AE29C", Offset = "0x10AE29C", VA = "0x10AE29C")]
	public SteamVR_CameraMask()
	{
	}
}
[Token(Token = "0x2000026")]
public class SteamVR_Controller
{
	[Token(Token = "0x2000234")]
	public class ButtonMask
	{
		[Token(Token = "0x4000BD7")]
		public const ulong System = 1uL;

		[Token(Token = "0x4000BD8")]
		public const ulong ApplicationMenu = 2uL;

		[Token(Token = "0x4000BD9")]
		public const ulong Grip = 4uL;

		[Token(Token = "0x4000BDA")]
		public const ulong Axis0 = 4294967296uL;

		[Token(Token = "0x4000BDB")]
		public const ulong Axis1 = 8589934592uL;

		[Token(Token = "0x4000BDC")]
		public const ulong Axis2 = 17179869184uL;

		[Token(Token = "0x4000BDD")]
		public const ulong Axis3 = 34359738368uL;

		[Token(Token = "0x4000BDE")]
		public const ulong Axis4 = 68719476736uL;

		[Token(Token = "0x4000BDF")]
		public const ulong Touchpad = 4294967296uL;

		[Token(Token = "0x4000BE0")]
		public const ulong Trigger = 8589934592uL;

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x10AE9EC", Offset = "0x10AE9EC", VA = "0x10AE9EC")]
		public ButtonMask()
		{
		}
	}

	[Token(Token = "0x2000235")]
	public class Device
	{
		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBBB8", Offset = "0xBCBBB8")]
		private uint <index>k__BackingField;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBBC8", Offset = "0xBCBBC8")]
		private bool <valid>k__BackingField;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRControllerState_t state;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRControllerState_t prevState;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TrackedDevicePose_t pose;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int prevFrameCount;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float hairTriggerDelta;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float hairTriggerLimit;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool hairTriggerState;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		private bool hairTriggerPrevState;

		[Token(Token = "0x1700012E")]
		public uint index
		{
			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0x10AE9F4", Offset = "0x10AE9F4", VA = "0x10AE9F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEA14", Offset = "0xBCEA14")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0x10AE9FC", Offset = "0x10AE9FC", VA = "0x10AE9FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEA24", Offset = "0xBCEA24")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public bool valid
		{
			[Token(Token = "0x6000E40")]
			[Address(RVA = "0x10AEA04", Offset = "0x10AEA04", VA = "0x10AEA04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEA34", Offset = "0xBCEA34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E41")]
			[Address(RVA = "0x10AEA0C", Offset = "0x10AEA0C", VA = "0x10AEA0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEA44", Offset = "0xBCEA44")]
			private set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public bool connected
		{
			[Token(Token = "0x6000E42")]
			[Address(RVA = "0x10AE9C0", Offset = "0x10AE9C0", VA = "0x10AE9C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000131")]
		public bool hasTracking
		{
			[Token(Token = "0x6000E43")]
			[Address(RVA = "0x10AEA18", Offset = "0x10AEA18", VA = "0x10AEA18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000132")]
		public bool outOfRange
		{
			[Token(Token = "0x6000E44")]
			[Address(RVA = "0x10AEA3C", Offset = "0x10AEA3C", VA = "0x10AEA3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000133")]
		public bool calibrating
		{
			[Token(Token = "0x6000E45")]
			[Address(RVA = "0x10AEA74", Offset = "0x10AEA74", VA = "0x10AEA74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000134")]
		public bool uninitialized
		{
			[Token(Token = "0x6000E46")]
			[Address(RVA = "0x10AEAA4", Offset = "0x10AEAA4", VA = "0x10AEAA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000135")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x6000E47")]
			[Address(RVA = "0x10AE964", Offset = "0x10AE964", VA = "0x10AE964")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x17000136")]
		public Vector3 velocity
		{
			[Token(Token = "0x6000E48")]
			[Address(RVA = "0x10AEAD0", Offset = "0x10AEAD0", VA = "0x10AEAD0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000137")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x6000E49")]
			[Address(RVA = "0x10AEB20", Offset = "0x10AEB20", VA = "0x10AEB20")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x10AE40C", Offset = "0x10AE40C", VA = "0x10AE40C")]
		public Device(uint i)
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x10AEB74", Offset = "0x10AEB74", VA = "0x10AEB74")]
		public VRControllerState_t GetState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x10AEBB0", Offset = "0x10AEBB0", VA = "0x10AEBB0")]
		public VRControllerState_t GetPrevState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x10AEBEC", Offset = "0x10AEBEC", VA = "0x10AEBEC")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x10AE480", Offset = "0x10AE480", VA = "0x10AE480")]
		public void Update()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x10AEE6C", Offset = "0x10AEE6C", VA = "0x10AEE6C")]
		public bool GetPress(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x10AEE9C", Offset = "0x10AEE9C", VA = "0x10AEE9C")]
		public bool GetPressDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x10AEEE0", Offset = "0x10AEEE0", VA = "0x10AEEE0")]
		public bool GetPressUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x10AEF24", Offset = "0x10AEF24", VA = "0x10AEF24")]
		public bool GetPress(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x10AEF58", Offset = "0x10AEF58", VA = "0x10AEF58")]
		public bool GetPressDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x10AEFA0", Offset = "0x10AEFA0", VA = "0x10AEFA0")]
		public bool GetPressUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x10AEFE8", Offset = "0x10AEFE8", VA = "0x10AEFE8")]
		public bool GetTouch(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x10AF018", Offset = "0x10AF018", VA = "0x10AF018")]
		public bool GetTouchDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x10AF05C", Offset = "0x10AF05C", VA = "0x10AF05C")]
		public bool GetTouchUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x10AF0A0", Offset = "0x10AF0A0", VA = "0x10AF0A0")]
		public bool GetTouch(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x10AF0D4", Offset = "0x10AF0D4", VA = "0x10AF0D4")]
		public bool GetTouchDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x10AF11C", Offset = "0x10AF11C", VA = "0x10AF11C")]
		public bool GetTouchUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x10AF164", Offset = "0x10AF164", VA = "0x10AF164")]
		public Vector2 GetAxis(EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x10AF240", Offset = "0x10AF240", VA = "0x10AF240")]
		public void TriggerHapticPulse(ushort durationMicroSec = 500, EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x10AED6C", Offset = "0x10AED6C", VA = "0x10AED6C")]
		private void UpdateHairTrigger()
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x10AF2DC", Offset = "0x10AF2DC", VA = "0x10AF2DC")]
		public bool GetHairTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x10AF300", Offset = "0x10AF300", VA = "0x10AF300")]
		public bool GetHairTriggerDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x10AF33C", Offset = "0x10AF33C", VA = "0x10AF33C")]
		public bool GetHairTriggerUp()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000236")]
	public enum DeviceRelation
	{
		[Token(Token = "0x4000BEC")]
		First,
		[Token(Token = "0x4000BED")]
		Leftmost,
		[Token(Token = "0x4000BEE")]
		Rightmost,
		[Token(Token = "0x4000BEF")]
		FarthestLeft,
		[Token(Token = "0x4000BF0")]
		FarthestRight
	}

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Device[] devices;

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x10AE2A4", Offset = "0x10AE2A4", VA = "0x10AE2A4")]
	public static Device Input(int deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x10AE444", Offset = "0x10AE444", VA = "0x10AE444")]
	public static void Update()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x10AE608", Offset = "0x10AE608", VA = "0x10AE608")]
	public static int GetDeviceIndex(DeviceRelation relation, ETrackedDeviceClass deviceClass = ETrackedDeviceClass.Controller, int relativeTo = 0)
	{
		return default(int);
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x10AE9E4", Offset = "0x10AE9E4", VA = "0x10AE9E4")]
	public SteamVR_Controller()
	{
	}
}
[Token(Token = "0x2000027")]
public class SteamVR_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject left;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject right;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCB044", Offset = "0xBCB044")]
	public GameObject[] objects;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCB07C", Offset = "0xBCB07C")]
	public bool assignAllBeforeIdentified;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private uint[] indices;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool[] connected;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private uint leftIndex;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private uint rightIndex;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_Events.Action inputFocusAction;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SteamVR_Events.Action trackedDeviceRoleChangedAction;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string hiddenPrefix;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string hiddenPostfix;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string[] labels;

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x10AF378", Offset = "0x10AF378", VA = "0x10AF378")]
	private void SetUniqueObject(GameObject o, int index)
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x10AF4A8", Offset = "0x10AF4A8", VA = "0x10AF4A8")]
	public void UpdateTargets()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x10AF604", Offset = "0x10AF604", VA = "0x10AF604")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x10AF608", Offset = "0x10AF608", VA = "0x10AF608")]
	private SteamVR_ControllerManager()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x10AF978", Offset = "0x10AF978", VA = "0x10AF978")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x10AFF18", Offset = "0x10AFF18", VA = "0x10AFF18")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x10AFF7C", Offset = "0x10AFF7C", VA = "0x10AFF7C")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x10B032C", Offset = "0x10B032C", VA = "0x10B032C")]
	private void HideObject(Transform t, string name)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x10B0238", Offset = "0x10B0238", VA = "0x10B0238")]
	private void ShowObject(Transform t, string name)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x10B049C", Offset = "0x10B049C", VA = "0x10B049C")]
	private void SetTrackedDeviceIndex(int objectIndex, uint trackedDeviceIndex)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x10B06E8", Offset = "0x10B06E8", VA = "0x10B06E8")]
	private void OnTrackedDeviceRoleChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x10AFDF4", Offset = "0x10AFDF4", VA = "0x10AFDF4")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x10AFB58", Offset = "0x10AFB58", VA = "0x10AFB58")]
	public void Refresh()
	{
	}
}
[Token(Token = "0x2000028")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC21B4", Offset = "0xBC21B4")]
public class SteamVR_Ears : MonoBehaviour
{
	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_Camera vrcam;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool usingSpeakers;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion offset;

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x10B083C", Offset = "0x10B083C", VA = "0x10B083C")]
	private void OnNewPosesApplied()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x10B09B0", Offset = "0x10B09B0", VA = "0x10B09B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x10B0B54", Offset = "0x10B0B54", VA = "0x10B0B54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x10B0C28", Offset = "0x10B0C28", VA = "0x10B0C28")]
	public SteamVR_Ears()
	{
	}
}
[Token(Token = "0x2000029")]
public static class SteamVR_Events
{
	[Token(Token = "0x2000237")]
	public abstract class Action
	{
		[Token(Token = "0x17000138")]
		public bool enabled
		{
			[Token(Token = "0x6000E61")]
			[Address(RVA = "0x10AFF08", Offset = "0x10AFF08", VA = "0x10AFF08")]
			set
			{
			}
		}

		[Token(Token = "0x6000E60")]
		public abstract void Enable(bool enabled);

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x10B1850", Offset = "0x10B1850", VA = "0x10B1850")]
		protected Action()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000238")]
	public class ActionNoArgs : Action
	{
		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Event _event;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnityAction action;

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x10B0E10", Offset = "0x10B0E10", VA = "0x10B0E10")]
		public ActionNoArgs(Event _event, UnityAction action)
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x10B1858", Offset = "0x10B1858", VA = "0x10B1858", Slot = "4")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000239")]
	public class Action<T> : Action
	{
		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T> _event;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T> action;

		[Token(Token = "0x6000E65")]
		public Action(Event<T> _event, UnityAction<T> action)
		{
		}

		[Token(Token = "0x6000E66")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200023A")]
	public class Action<T0, T1> : Action
	{
		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1> _event;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1> action;

		[Token(Token = "0x6000E67")]
		public Action(Event<T0, T1> _event, UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x6000E68")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200023B")]
	public class Action<T0, T1, T2> : Action
	{
		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1, T2> _event;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1, T2> action;

		[Token(Token = "0x6000E69")]
		public Action(Event<T0, T1, T2> _event, UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6000E6A")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Token(Token = "0x200023C")]
	public class Event : UnityEvent
	{
		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x10B0B4C", Offset = "0x10B0B4C", VA = "0x10B0B4C")]
		public void Listen(UnityAction action)
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x10B0C20", Offset = "0x10B0C20", VA = "0x10B0C20")]
		public void Remove(UnityAction action)
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x10B1888", Offset = "0x10B1888", VA = "0x10B1888")]
		public void Send()
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x10B1848", Offset = "0x10B1848", VA = "0x10B1848")]
		public Event()
		{
		}
	}

	[Token(Token = "0x200023D")]
	public class Event<T> : UnityEvent<T>
	{
		[Token(Token = "0x6000E6F")]
		public void Listen(UnityAction<T> action)
		{
		}

		[Token(Token = "0x6000E70")]
		public void Remove(UnityAction<T> action)
		{
		}

		[Token(Token = "0x6000E71")]
		public void Send(T arg0)
		{
		}

		[Token(Token = "0x6000E72")]
		public Event()
		{
		}
	}

	[Token(Token = "0x200023E")]
	public class Event<T0, T1> : UnityEvent<T0, T1>
	{
		[Token(Token = "0x6000E73")]
		public void Listen(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x6000E74")]
		public void Remove(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x6000E75")]
		public void Send(T0 arg0, T1 arg1)
		{
		}

		[Token(Token = "0x6000E76")]
		public Event()
		{
		}
	}

	[Token(Token = "0x200023F")]
	public class Event<T0, T1, T2> : UnityEvent<T0, T1, T2>
	{
		[Token(Token = "0x6000E77")]
		public void Listen(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6000E78")]
		public void Remove(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6000E79")]
		public void Send(T0 arg0, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x6000E7A")]
		public Event()
		{
		}
	}

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Event<bool> Calibrating;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Event<int, bool> DeviceConnected;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Event<Color, float, bool> Fade;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Event FadeReady;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Event<bool> HideRenderModels;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Event<bool> Initializing;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Event<bool> InputFocus;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Event<bool> Loading;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Event<float> LoadingFadeIn;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Event<float> LoadingFadeOut;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static Event<TrackedDevicePose_t[]> NewPoses;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static Event NewPosesApplied;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static Event<bool> OutOfRange;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static Event<SteamVR_RenderModel, bool> RenderModelLoaded;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static Dictionary<EVREventType, Event<VREvent_t>> systemEvents;

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x10B0C30", Offset = "0x10B0C30", VA = "0x10B0C30")]
	public static Action CalibratingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x10AF828", Offset = "0x10AF828", VA = "0x10AF828")]
	public static Action DeviceConnectedAction(UnityAction<int, bool> action)
	{
		return null;
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x10B0CD4", Offset = "0x10B0CD4", VA = "0x10B0CD4")]
	public static Action FadeAction(UnityAction<Color, float, bool> action)
	{
		return null;
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x10B0D78", Offset = "0x10B0D78", VA = "0x10B0D78")]
	public static Action FadeReadyAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x10B0E60", Offset = "0x10B0E60", VA = "0x10B0E60")]
	public static Action HideRenderModelsAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x10B0F04", Offset = "0x10B0F04", VA = "0x10B0F04")]
	public static Action InitializingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x10AF784", Offset = "0x10AF784", VA = "0x10AF784")]
	public static Action InputFocusAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x10B0FA8", Offset = "0x10B0FA8", VA = "0x10B0FA8")]
	public static Action LoadingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x10B104C", Offset = "0x10B104C", VA = "0x10B104C")]
	public static Action LoadingFadeInAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x10B10F0", Offset = "0x10B10F0", VA = "0x10B10F0")]
	public static Action LoadingFadeOutAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x10B1194", Offset = "0x10B1194", VA = "0x10B1194")]
	public static Action NewPosesAction(UnityAction<TrackedDevicePose_t[]> action)
	{
		return null;
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x10B1238", Offset = "0x10B1238", VA = "0x10B1238")]
	public static Action NewPosesAppliedAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x10B12D0", Offset = "0x10B12D0", VA = "0x10B12D0")]
	public static Action OutOfRangeAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x10B1374", Offset = "0x10B1374", VA = "0x10B1374")]
	public static Action RenderModelLoadedAction(UnityAction<SteamVR_RenderModel, bool> action)
	{
		return null;
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x10B1418", Offset = "0x10B1418", VA = "0x10B1418")]
	public static Event<VREvent_t> System(EVREventType eventType)
	{
		return null;
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x10AF8CC", Offset = "0x10AF8CC", VA = "0x10AF8CC")]
	public static Action SystemAction(EVREventType eventType, UnityAction<VREvent_t> action)
	{
		return null;
	}
}
[Token(Token = "0x200002A")]
public class SteamVR_ExternalCamera : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000240")]
	public struct Config
	{
		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rx;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ry;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rz;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fov;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float near;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float far;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float sceneResolutionScale;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float frameSkip;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float nearOffset;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float farOffset;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float hmdOffset;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float r;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float g;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float b;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float a;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool disableStandardAssets;
	}

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Config config;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string configPath;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private FileSystemWatcher watcher;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Camera cam;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform target;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject clipQuad;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material clipMaterial;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Material colorMat;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material alphaMat;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Camera[] cameras;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Rect[] cameraRects;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float sceneResolutionScale;

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x10B1890", Offset = "0x10B1890", VA = "0x10B1890")]
	public void ReadConfig()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x10B21B4", Offset = "0x10B21B4", VA = "0x10B21B4")]
	private void OnChanged(object source, FileSystemEventArgs e)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x10B21B8", Offset = "0x10B21B8", VA = "0x10B21B8")]
	public void AttachToCamera(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x10B27C0", Offset = "0x10B27C0", VA = "0x10B27C0")]
	public float GetTargetDistance()
	{
		return default(float);
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x10B2A6C", Offset = "0x10B2A6C", VA = "0x10B2A6C")]
	public void RenderNear()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x10B31C4", Offset = "0x10B31C4", VA = "0x10B31C4")]
	public void RenderFar()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x10B32E4", Offset = "0x10B32E4", VA = "0x10B32E4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x10B32E8", Offset = "0x10B32E8", VA = "0x10B32E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x10B3564", Offset = "0x10B3564", VA = "0x10B3564")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x10B36D0", Offset = "0x10B36D0", VA = "0x10B36D0")]
	public SteamVR_ExternalCamera()
	{
	}
}
[Token(Token = "0x200002B")]
public class SteamVR_Fade : MonoBehaviour
{
	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color currentColor;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color targetColor;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color deltaColor;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool fadeOverlay;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material fadeMaterial;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int fadeMaterialColorID;

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x10B36D8", Offset = "0x10B36D8", VA = "0x10B36D8")]
	public static void Start(Color newColor, float duration, bool fadeOverlay = false)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x10B379C", Offset = "0x10B379C", VA = "0x10B379C")]
	public static void View(Color newColor, float duration)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x10B3864", Offset = "0x10B3864", VA = "0x10B3864")]
	public void OnStartFade(Color newColor, float duration, bool fadeOverlay)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x10B38CC", Offset = "0x10B38CC", VA = "0x10B38CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x10B3A94", Offset = "0x10B3A94", VA = "0x10B3A94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x10B3B58", Offset = "0x10B3B58", VA = "0x10B3B58")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x10B3E80", Offset = "0x10B3E80", VA = "0x10B3E80")]
	public SteamVR_Fade()
	{
	}
}
[Token(Token = "0x200002C")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC2218", Offset = "0xBC2218")]
public class SteamVR_Frustum : MonoBehaviour
{
	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fovLeft;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fovRight;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fovTop;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fovBottom;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float nearZ;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float farZ;

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x10B3F90", Offset = "0x10B3F90", VA = "0x10B3F90")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x10B4778", Offset = "0x10B4778", VA = "0x10B4778")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x10B4934", Offset = "0x10B4934", VA = "0x10B4934")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x10B4A1C", Offset = "0x10B4A1C", VA = "0x10B4A1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x10B4B04", Offset = "0x10B4B04", VA = "0x10B4B04")]
	public SteamVR_Frustum()
	{
	}
}
[Token(Token = "0x200002D")]
[ExecuteInEditMode]
public class SteamVR_GameView : MonoBehaviour
{
	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x10B4B24", Offset = "0x10B4B24", VA = "0x10B4B24")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x10B4BC0", Offset = "0x10B4BC0", VA = "0x10B4BC0")]
	public SteamVR_GameView()
	{
	}
}
[Token(Token = "0x200002E")]
public class SteamVR_IK : MonoBehaviour
{
	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform start;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform joint;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform end;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform poleVector;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform upVector;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float blendPct;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Transform startXform;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Transform jointXform;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Transform endXform;

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x10B4BC8", Offset = "0x10B4BC8", VA = "0x10B4BC8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x10B55B0", Offset = "0x10B55B0", VA = "0x10B55B0")]
	public static bool Solve(Vector3 start, Vector3 end, Vector3 poleVector, float jointDist, float targetDist, ref Vector3 result, out Vector3 forward, out Vector3 up)
	{
		return default(bool);
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x10B5AC8", Offset = "0x10B5AC8", VA = "0x10B5AC8")]
	public SteamVR_IK()
	{
	}
}
[Token(Token = "0x200002F")]
public class SteamVR_LoadLevel : MonoBehaviour
{
	[Token(Token = "0x2000241")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC90E4", Offset = "0xBC90E4")]
	private sealed class <LoadLevel>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_LoadLevel <>4__this;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CVROverlay <overlay>5__2;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <fadedForeground>5__3;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CVRCompositor <compositor>5__4;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_Controller.Device <hmd>5__5;

		[Token(Token = "0x17000139")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0x10B798C", Offset = "0x10B798C", VA = "0x10B798C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E80")]
			[Address(RVA = "0x10B79F4", Offset = "0x10B79F4", VA = "0x10B79F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x10B68F4", Offset = "0x10B68F4", VA = "0x10B68F4")]
		[DebuggerHidden]
		public <LoadLevel>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x10B6A70", Offset = "0x10B6A70", VA = "0x10B6A70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x10B6A74", Offset = "0x10B6A74", VA = "0x10B6A74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x10B7994", Offset = "0x10B7994", VA = "0x10B7994", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SteamVR_LoadLevel _active;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string levelName;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string internalProcessPath;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string internalProcessArgs;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool loadAdditive;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool loadAsync;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture loadingScreen;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture progressBarEmpty;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture progressBarFull;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float loadingScreenWidthInMeters;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float progressBarWidthInMeters;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float loadingScreenDistance;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform loadingScreenTransform;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform progressBarTransform;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture front;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture back;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture left;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Texture right;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Texture top;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Texture bottom;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color backgroundColor;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool showGrid;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float fadeOutTime;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float fadeInTime;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float postLoadSettleTime;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float loadingScreenFadeInTime;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float loadingScreenFadeOutTime;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float fadeRate;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float alpha;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AsyncOperation async;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private RenderTexture renderTexture;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private ulong loadingScreenOverlayHandle;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private ulong progressBarOverlayHandle;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool autoTriggerOnEnable;

	[Token(Token = "0x1700005D")]
	public static bool loading
	{
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x10B5AD8", Offset = "0x10B5AD8", VA = "0x10B5AD8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005E")]
	public static float progress
	{
		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x10B5B70", Offset = "0x10B5B70", VA = "0x10B5B70")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700005F")]
	public static Texture progressTexture
	{
		[Token(Token = "0x6000400")]
		[Address(RVA = "0x10B5C84", Offset = "0x10B5C84", VA = "0x10B5C84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x10B5D5C", Offset = "0x10B5D5C", VA = "0x10B5D5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x10B5D6C", Offset = "0x10B5D6C", VA = "0x10B5D6C")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x10B5E80", Offset = "0x10B5E80", VA = "0x10B5E80")]
	public static void Begin(string levelName, bool showGrid = false, float fadeOutTime = 0.5f, float r = 0f, float g = 0f, float b = 0f, float a = 1f)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x10B5F94", Offset = "0x10B5F94", VA = "0x10B5F94")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x10B678C", Offset = "0x10B678C", VA = "0x10B678C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x10B5E04", Offset = "0x10B5E04", VA = "0x10B5E04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCC904", Offset = "0xBCC904")]
	private IEnumerator LoadLevel()
	{
		return null;
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x10B63F0", Offset = "0x10B63F0", VA = "0x10B63F0")]
	private ulong GetOverlayHandle(string overlayName, Transform transform, float widthInMeters = 1f)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x10B6A08", Offset = "0x10B6A08", VA = "0x10B6A08")]
	public SteamVR_LoadLevel()
	{
	}
}
[Token(Token = "0x2000030")]
public class SteamVR_Menu : MonoBehaviour
{
	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture cursor;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture background;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture logo;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float logoHeight;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float menuOffset;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 scaleLimits;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scaleRate;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_Overlay overlay;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera overlayCam;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector4 uvOffset;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float distance;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB0E4", Offset = "0xBCB0E4")]
	private float <scale>k__BackingField;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string scaleLimitX;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string scaleLimitY;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string scaleRateText;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CursorLockMode savedCursorLockState;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool savedCursorVisible;

	[Token(Token = "0x17000060")]
	public RenderTexture texture
	{
		[Token(Token = "0x600040A")]
		[Address(RVA = "0x10B79FC", Offset = "0x10B79FC", VA = "0x10B79FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000061")]
	public float scale
	{
		[Token(Token = "0x600040B")]
		[Address(RVA = "0x10B7AC8", Offset = "0x10B7AC8", VA = "0x10B7AC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC968", Offset = "0xBCC968")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600040C")]
		[Address(RVA = "0x10B7AD0", Offset = "0x10B7AD0", VA = "0x10B7AD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC978", Offset = "0xBCC978")]
		private set
		{
		}
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x10B7AD8", Offset = "0x10B7AD8", VA = "0x10B7AD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x10B7C64", Offset = "0x10B7C64", VA = "0x10B7C64")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x10B9844", Offset = "0x10B9844", VA = "0x10B9844")]
	public void ShowMenu()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x10B9724", Offset = "0x10B9724", VA = "0x10B9724")]
	public void HideMenu()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x10B9C20", Offset = "0x10B9C20", VA = "0x10B9C20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x10B9638", Offset = "0x10B9638", VA = "0x10B9638")]
	private void SetScale(float scale)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x10B9BB8", Offset = "0x10B9BB8", VA = "0x10B9BB8")]
	private void SaveCursorState()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x10B9BF0", Offset = "0x10B9BF0", VA = "0x10B9BF0")]
	private void RestoreCursorState()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x10B9DF0", Offset = "0x10B9DF0", VA = "0x10B9DF0")]
	public SteamVR_Menu()
	{
	}
}
[Token(Token = "0x2000031")]
public class SteamVR_Overlay : MonoBehaviour
{
	[Token(Token = "0x2000242")]
	public struct IntersectionResults
	{
		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 point;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 normal;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 UVs;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;
	}

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture texture;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool curved;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool antialias;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool highquality;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCB0F4", Offset = "0xBCB0F4")]
	public float scale;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCB12C", Offset = "0xBCB12C")]
	public float distance;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCB164", Offset = "0xBCB164")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBCB164", Offset = "0xBCB164")]
	public float alpha;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 uvOffset;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 mouseScale;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 curvedRange;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VROverlayInputMethod inputMethod;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB1B8", Offset = "0xBCB1B8")]
	private static SteamVR_Overlay <instance>k__BackingField;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ulong handle;

	[Token(Token = "0x17000062")]
	public static SteamVR_Overlay instance
	{
		[Token(Token = "0x6000416")]
		[Address(RVA = "0x10B9E44", Offset = "0x10B9E44", VA = "0x10B9E44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC988", Offset = "0xBCC988")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000417")]
		[Address(RVA = "0x10B9E94", Offset = "0x10B9E94", VA = "0x10B9E94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC998", Offset = "0xBCC998")]
		private set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public static string key
	{
		[Token(Token = "0x6000418")]
		[Address(RVA = "0x10B6920", Offset = "0x10B6920", VA = "0x10B6920")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x10B9EEC", Offset = "0x10B9EEC", VA = "0x10B9EEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x10BA040", Offset = "0x10BA040", VA = "0x10BA040")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x10BA100", Offset = "0x10BA100", VA = "0x10BA100")]
	public void UpdateOverlay()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x10BA53C", Offset = "0x10BA53C", VA = "0x10BA53C")]
	public bool PollNextEvent(ref VREvent_t pEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x10BA648", Offset = "0x10BA648", VA = "0x10BA648")]
	public bool ComputeIntersection(Vector3 source, Vector3 direction, ref IntersectionResults results)
	{
		return default(bool);
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x10BA804", Offset = "0x10BA804", VA = "0x10BA804")]
	public SteamVR_Overlay()
	{
	}
}
[Token(Token = "0x2000032")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC22B8", Offset = "0xBC22B8")]
public class SteamVR_PlayArea : MonoBehaviour
{
	[Token(Token = "0x2000243")]
	public enum Size
	{
		[Token(Token = "0x4000C18")]
		Calibrated,
		[Token(Token = "0x4000C19")]
		_400x300,
		[Token(Token = "0x4000C1A")]
		_300x225,
		[Token(Token = "0x4000C1B")]
		_200x150
	}

	[Token(Token = "0x2000244")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC90F4", Offset = "0xBC90F4")]
	private sealed class <UpdateBounds>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_PlayArea <>4__this;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CVRChaperone <chaperone>5__2;

		[Token(Token = "0x1700013B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E84")]
			[Address(RVA = "0x10BBA18", Offset = "0x10BBA18", VA = "0x10BBA18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E86")]
			[Address(RVA = "0x10BBA80", Offset = "0x10BBA80", VA = "0x10BBA80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x10BB87C", Offset = "0x10BB87C", VA = "0x10BB87C")]
		[DebuggerHidden]
		public <UpdateBounds>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x10BB8F0", Offset = "0x10BB8F0", VA = "0x10BB8F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x10BB8F4", Offset = "0x10BB8F4", VA = "0x10BB8F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x10BBA20", Offset = "0x10BBA20", VA = "0x10BBA20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float borderThickness;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float wireframeHeight;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool drawWireframeWhenSelectedOnly;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool drawInGame;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Size size;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color color;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Vector3[] vertices;

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x10BA8CC", Offset = "0x10BA8CC", VA = "0x10BA8CC")]
	public static bool GetBounds(Size size, ref HmdQuad_t pRect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x10BAC50", Offset = "0x10BAC50", VA = "0x10BAC50")]
	public void BuildMesh()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x10BB4A8", Offset = "0x10BB4A8", VA = "0x10BB4A8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x10BB73C", Offset = "0x10BB73C", VA = "0x10BB73C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x10BB4B8", Offset = "0x10BB4B8", VA = "0x10BB4B8")]
	public void DrawWireframe()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x10BB74C", Offset = "0x10BB74C", VA = "0x10BB74C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x10BB800", Offset = "0x10BB800", VA = "0x10BB800")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCC9A8", Offset = "0xBCC9A8")]
	private IEnumerator UpdateBounds()
	{
		return null;
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x10BB8A8", Offset = "0x10BB8A8", VA = "0x10BB8A8")]
	public SteamVR_PlayArea()
	{
	}
}
[Token(Token = "0x2000033")]
public class SteamVR_Render : MonoBehaviour
{
	[Token(Token = "0x2000245")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9104", Offset = "0xBC9104")]
	private sealed class <RenderLoop>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_Render <>4__this;

		[Token(Token = "0x1700013D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0x10BD384", Offset = "0x10BD384", VA = "0x10BD384", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0x10BD3EC", Offset = "0x10BD3EC", VA = "0x10BD3EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x10BC120", Offset = "0x10BC120", VA = "0x10BC120")]
		[DebuggerHidden]
		public <RenderLoop>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x10BD1CC", Offset = "0x10BD1CC", VA = "0x10BD1CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x10BD1D0", Offset = "0x10BD1D0", VA = "0x10BD1D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x10BD38C", Offset = "0x10BD38C", VA = "0x10BD38C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool pauseGameWhenDashboardIsVisible;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool lockPhysicsUpdateRateToRenderFrequency;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SteamVR_ExternalCamera externalCamera;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string externalCameraConfigPath;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ETrackingUniverseOrigin trackingSpace;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB1D8", Offset = "0xBCB1D8")]
	private static EVREye <eye>k__BackingField;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SteamVR_Render _instance;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool isQuitting;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SteamVR_Camera[] cameras;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrackedDevicePose_t[] poses;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TrackedDevicePose_t[] gamePoses;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool _pauseRendering;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaitForEndOfFrame waitForEndOfFrame;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float sceneResolutionScale;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timeScale;

	[Token(Token = "0x17000064")]
	public static EVREye eye
	{
		[Token(Token = "0x6000427")]
		[Address(RVA = "0x10BBA88", Offset = "0x10BBA88", VA = "0x10BBA88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCCA0C", Offset = "0xBCCA0C")]
		get
		{
			return default(EVREye);
		}
		[Token(Token = "0x6000428")]
		[Address(RVA = "0x10BBAD8", Offset = "0x10BBAD8", VA = "0x10BBAD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCCA1C", Offset = "0xBCCA1C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public static SteamVR_Render instance
	{
		[Token(Token = "0x6000429")]
		[Address(RVA = "0x10AEC1C", Offset = "0x10AEC1C", VA = "0x10AEC1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000066")]
	public static bool pauseRendering
	{
		[Token(Token = "0x6000432")]
		[Address(RVA = "0x10BC054", Offset = "0x10BC054", VA = "0x10BC054")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000433")]
		[Address(RVA = "0x10B78F4", Offset = "0x10B78F4", VA = "0x10B78F4")]
		set
		{
		}
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x10BBB2C", Offset = "0x10BBB2C", VA = "0x10BBB2C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x10BBB80", Offset = "0x10BBB80", VA = "0x10BBB80")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x10AD530", Offset = "0x10AD530", VA = "0x10AD530")]
	public static void Add(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x10AC98C", Offset = "0x10AC98C", VA = "0x10AC98C")]
	public static void Remove(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x10B6998", Offset = "0x10B6998", VA = "0x10B6998")]
	public static SteamVR_Camera Top()
	{
		return null;
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x10BBBF4", Offset = "0x10BBBF4", VA = "0x10BBBF4")]
	private void AddInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x10BBE1C", Offset = "0x10BBE1C", VA = "0x10BBE1C")]
	private void RemoveInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x10BC008", Offset = "0x10BC008", VA = "0x10BC008")]
	private SteamVR_Camera TopInternal()
	{
		return null;
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x10BC0A4", Offset = "0x10BC0A4", VA = "0x10BC0A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCCA2C", Offset = "0xBCCA2C")]
	private IEnumerator RenderLoop()
	{
		return null;
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x10BC14C", Offset = "0x10BC14C", VA = "0x10BC14C")]
	private void RenderExternalCamera()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x10BC288", Offset = "0x10BC288", VA = "0x10BC288")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x10BC2F8", Offset = "0x10BC2F8", VA = "0x10BC2F8")]
	private void OnQuit(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x10BC300", Offset = "0x10BC300", VA = "0x10BC300")]
	private string GetScreenshotFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames screenshotPropertyFilename)
	{
		return null;
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x10BC44C", Offset = "0x10BC44C", VA = "0x10BC44C")]
	private void OnRequestScreenshot(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x10BC62C", Offset = "0x10BC62C", VA = "0x10BC62C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x10BC8A8", Offset = "0x10BC8A8", VA = "0x10BC8A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x10BCA60", Offset = "0x10BCA60", VA = "0x10BCA60")]
	private void Awake()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x10BCBDC", Offset = "0x10BCBDC", VA = "0x10BCBDC")]
	public void UpdatePoses()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x10BCCBC", Offset = "0x10BCCBC", VA = "0x10BCCBC")]
	private void OnBeforeRender()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x10BCCC0", Offset = "0x10BCCC0", VA = "0x10BCCC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x10BD0C4", Offset = "0x10BD0C4", VA = "0x10BD0C4")]
	public SteamVR_Render()
	{
	}
}
[Token(Token = "0x2000034")]
[ExecuteInEditMode]
public class SteamVR_RenderModel : MonoBehaviour
{
	[Token(Token = "0x2000246")]
	public class RenderModel
	{
		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBBD8", Offset = "0xBCBBD8")]
		private Mesh <mesh>k__BackingField;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBBE8", Offset = "0xBCBBE8")]
		private Material <material>k__BackingField;

		[Token(Token = "0x1700013F")]
		public Mesh mesh
		{
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0xFCB330", Offset = "0xFCB330", VA = "0xFCB330")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEB44", Offset = "0xBCEB44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0xFCB338", Offset = "0xFCB338", VA = "0xFCB338")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEB54", Offset = "0xBCEB54")]
			private set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public Material material
		{
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0xFCB340", Offset = "0xFCB340", VA = "0xFCB340")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEB64", Offset = "0xBCEB64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E91")]
			[Address(RVA = "0xFCB348", Offset = "0xFCB348", VA = "0xFCB348")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEB74", Offset = "0xBCEB74")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0xFCB2E0", Offset = "0xFCB2E0", VA = "0xFCB2E0")]
		public RenderModel(Mesh mesh, Material material)
		{
		}
	}

	[Token(Token = "0x2000247")]
	public sealed class RenderModelInterfaceHolder : IDisposable
	{
		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool needsShutdown;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool failedLoadInterface;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CVRRenderModels _instance;

		[Token(Token = "0x17000141")]
		public CVRRenderModels instance
		{
			[Token(Token = "0x6000E92")]
			[Address(RVA = "0xFCA52C", Offset = "0xFCA52C", VA = "0xFCA52C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xFCB350", Offset = "0xFCB350", VA = "0xFCB350", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xFCA524", Offset = "0xFCA524", VA = "0xFCA524")]
		public RenderModelInterfaceHolder()
		{
		}
	}

	[Token(Token = "0x2000248")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9114", Offset = "0xBC9114")]
	private sealed class <SetModelAsync>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string renderModelName;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SteamVR_RenderModel <>4__this;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderModelInterfaceHolder <holder>5__2;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CVRRenderModels <renderModels>5__3;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string[] <renderModelNames>5__4;

		[Token(Token = "0x17000142")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E99")]
			[Address(RVA = "0xFCB270", Offset = "0xFCB270", VA = "0xFCB270", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0xFCB2D8", Offset = "0xFCB2D8", VA = "0xFCB2D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xFCA72C", Offset = "0xFCA72C", VA = "0xFCA72C")]
		[DebuggerHidden]
		public <SetModelAsync>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xFCA758", Offset = "0xFCA758", VA = "0xFCA758", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xFCA834", Offset = "0xFCA834", VA = "0xFCA834", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0xFCA774", Offset = "0xFCA774", VA = "0xFCA774")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0xFCB278", Offset = "0xFCB278", VA = "0xFCB278", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000249")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9124", Offset = "0xBC9124")]
	private sealed class <FreeRenderModel>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr pRenderModel;

		[Token(Token = "0x17000144")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0xFCA6BC", Offset = "0xFCA6BC", VA = "0xFCA6BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EA1")]
			[Address(RVA = "0xFCA724", Offset = "0xFCA724", VA = "0xFCA724", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xFCA34C", Offset = "0xFCA34C", VA = "0xFCA34C")]
		[DebuggerHidden]
		public <FreeRenderModel>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xFCA378", Offset = "0xFCA378", VA = "0xFCA378", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xFCA37C", Offset = "0xFCA37C", VA = "0xFCA37C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xFCA6C4", Offset = "0xFCA6C4", VA = "0xFCA6C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x4000166")]
	public const string modelOverrideWarning = "Model override is really only meant to be used in the scene view for lining things up; using it at runtime is discouraged.  Use tracked device index instead to ensure the correct model is displayed for all users.";

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCB1E8", Offset = "0xBCB1E8")]
	public string modelOverride;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCB220", Offset = "0xBCB220")]
	public Shader shader;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCB258", Offset = "0xBCB258")]
	public bool verbose;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCB290", Offset = "0xBCB290")]
	public bool createComponents;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCB2C8", Offset = "0xBCB2C8")]
	public bool updateDynamically;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public RenderModel_ControllerMode_State_t controllerModeState;

	[Token(Token = "0x400016D")]
	public const string k_localTransformName = "attach";

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB300", Offset = "0xBCB300")]
	private string <renderModelName>k__BackingField;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Hashtable models;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Hashtable materials;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_Events.Action hideRenderModelsAction;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_Events.Action modelSkinSettingsHaveChangedAction;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<int, string> nameCache;

	[Token(Token = "0x17000067")]
	public string renderModelName
	{
		[Token(Token = "0x6000441")]
		[Address(RVA = "0x10BD3F4", Offset = "0x10BD3F4", VA = "0x10BD3F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCCA90", Offset = "0xBCCA90")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000442")]
		[Address(RVA = "0x10BD3FC", Offset = "0x10BD3FC", VA = "0x10BD3FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCCAA0", Offset = "0xBCCAA0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x10BD404", Offset = "0x10BD404", VA = "0x10BD404")]
	private void OnModelSkinSettingsHaveChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x10BD644", Offset = "0x10BD644", VA = "0x10BD644")]
	private void OnHideRenderModels(bool hidden)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x10BD778", Offset = "0x10BD778", VA = "0x10BD778")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x10BD480", Offset = "0x10BD480", VA = "0x10BD480")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x10BD790", Offset = "0x10BD790", VA = "0x10BD790")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCCAB0", Offset = "0xBCCAB0")]
	private IEnumerator SetModelAsync(string renderModelName)
	{
		return null;
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x10BD828", Offset = "0x10BD828", VA = "0x10BD828")]
	private bool SetModel(string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x10BE948", Offset = "0x10BE948", VA = "0x10BE948")]
	private RenderModel LoadRenderModel(CVRRenderModels renderModels, string renderModelName, string baseName)
	{
		return null;
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x10BF834", Offset = "0x10BF834", VA = "0x10BF834")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCCB14", Offset = "0xBCCB14")]
	private IEnumerator FreeRenderModel(IntPtr pRenderModel)
	{
		return null;
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x10BF8A4", Offset = "0x10BF8A4", VA = "0x10BF8A4")]
	public Transform FindComponent(string componentName)
	{
		return null;
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x10BDCF8", Offset = "0x10BDCF8", VA = "0x10BDCF8")]
	private void StripMesh(GameObject go)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x10BDE34", Offset = "0x10BDE34", VA = "0x10BDE34")]
	private bool LoadComponents(RenderModelInterfaceHolder holder, string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x10BF940", Offset = "0x10BF940", VA = "0x10BF940")]
	private SteamVR_RenderModel()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x10BFAA0", Offset = "0x10BFAA0", VA = "0x10BFAA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x10BFBC8", Offset = "0x10BFBC8", VA = "0x10BFBC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x10BFC2C", Offset = "0x10BFC2C", VA = "0x10BFC2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x10BE4F4", Offset = "0x10BE4F4", VA = "0x10BE4F4")]
	public void UpdateComponents(CVRRenderModels renderModels)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x10BFCB0", Offset = "0x10BFCB0", VA = "0x10BFCB0")]
	public void SetDeviceIndex(int index)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x10BF430", Offset = "0x10BF430", VA = "0x10BF430")]
	private static void Sleep()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x10BF43C", Offset = "0x10BF43C", VA = "0x10BF43C")]
	private RenderModel_t MarshalRenderModel(IntPtr pRenderModel)
	{
		return default(RenderModel_t);
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x10BF644", Offset = "0x10BF644", VA = "0x10BF644")]
	private RenderModel_TextureMap_t MarshalRenderModel_TextureMap(IntPtr pRenderModel)
	{
		return default(RenderModel_TextureMap_t);
	}
}
[Token(Token = "0x2000035")]
public class SteamVR_Skybox : MonoBehaviour
{
	[Token(Token = "0x200024A")]
	public enum CellSize
	{
		[Token(Token = "0x4000C33")]
		x1024,
		[Token(Token = "0x4000C34")]
		x64,
		[Token(Token = "0x4000C35")]
		x32,
		[Token(Token = "0x4000C36")]
		x16,
		[Token(Token = "0x4000C37")]
		x8
	}

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture front;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture back;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture left;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture right;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture top;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture bottom;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CellSize StereoCellSize;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float StereoIpdMm;

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xFCB3C8", Offset = "0xFCB3C8", VA = "0xFCB3C8")]
	public void SetTextureByIndex(int i, Texture t)
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xFCB434", Offset = "0xFCB434", VA = "0xFCB434")]
	public Texture GetTextureByIndex(int i)
	{
		return null;
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xFCB490", Offset = "0xFCB490", VA = "0xFCB490")]
	public static void SetOverride([Optional] Texture front, [Optional] Texture back, [Optional] Texture left, [Optional] Texture right, [Optional] Texture top, [Optional] Texture bottom)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xFCB894", Offset = "0xFCB894", VA = "0xFCB894")]
	public static void ClearOverride()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xFCB934", Offset = "0xFCB934", VA = "0xFCB934")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xFCB948", Offset = "0xFCB948", VA = "0xFCB948")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xFCB94C", Offset = "0xFCB94C", VA = "0xFCB94C")]
	public SteamVR_Skybox()
	{
	}
}
[Token(Token = "0x2000036")]
[ExecuteInEditMode]
public class SteamVR_SphericalProjection : MonoBehaviour
{
	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material material;

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xFCB960", Offset = "0xFCB960", VA = "0xFCB960")]
	public void Set(Vector3 N, float phi0, float phi1, float theta0, float theta1, Vector3 uAxis, Vector3 uOrigin, float uScale, Vector3 vAxis, Vector3 vOrigin, float vScale)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xFCBD08", Offset = "0xFCBD08", VA = "0xFCBD08")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xFCBD98", Offset = "0xFCBD98", VA = "0xFCBD98")]
	public SteamVR_SphericalProjection()
	{
	}
}
[Token(Token = "0x2000037")]
[ExecuteInEditMode]
public class SteamVR_Stats : MonoBehaviour
{
	[Token(Token = "0x6000462")]
	[Address(RVA = "0xFCBDA0", Offset = "0xFCBDA0", VA = "0xFCBDA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xFCBE3C", Offset = "0xFCBE3C", VA = "0xFCBE3C")]
	public SteamVR_Stats()
	{
	}
}
[Token(Token = "0x2000038")]
public class SteamVR_TestController : MonoBehaviour
{
	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<int> controllerIndices;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EVRButtonId[] buttonIds;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EVRButtonId[] axisIds;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform point;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform pointer;

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xFCBE44", Offset = "0xFCBE44", VA = "0xFCBE44")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xFCC41C", Offset = "0xFCC41C", VA = "0xFCC41C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xFCC4E0", Offset = "0xFCC4E0", VA = "0xFCC4E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xFCC01C", Offset = "0xFCC01C", VA = "0xFCC01C")]
	private void PrintControllerStatus(int index)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xFCC5A4", Offset = "0xFCC5A4", VA = "0xFCC5A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xFCCE84", Offset = "0xFCCE84", VA = "0xFCCE84")]
	public SteamVR_TestController()
	{
	}
}
[Token(Token = "0x2000039")]
public class SteamVR_TrackedCamera
{
	[Token(Token = "0x200024B")]
	public class VideoStreamTexture
	{
		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBBF8", Offset = "0xBCBBF8")]
		private bool <undistorted>k__BackingField;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBC08", Offset = "0xBCBC08")]
		private VRTextureBounds_t <frameBounds>k__BackingField;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D _texture;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int prevFrameCount;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private uint glTextureId;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VideoStream videostream;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CameraVideoStreamFrameHeader_t header;

		[Token(Token = "0x17000146")]
		public bool undistorted
		{
			[Token(Token = "0x6000EA3")]
			[Address(RVA = "0xFCD66C", Offset = "0xFCD66C", VA = "0xFCD66C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEC24", Offset = "0xBCEC24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0xFCD674", Offset = "0xFCD674", VA = "0xFCD674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEC34", Offset = "0xBCEC34")]
			private set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public uint deviceIndex
		{
			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0xFCD680", Offset = "0xFCD680", VA = "0xFCD680")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000148")]
		public bool hasCamera
		{
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0xFCD69C", Offset = "0xFCD69C", VA = "0xFCD69C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000149")]
		public bool hasTracking
		{
			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0xFCD6B8", Offset = "0xFCD6B8", VA = "0xFCD6B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014A")]
		public uint frameId
		{
			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0xFCDA58", Offset = "0xFCDA58", VA = "0xFCDA58")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700014B")]
		public VRTextureBounds_t frameBounds
		{
			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0xFCDA7C", Offset = "0xFCDA7C", VA = "0xFCDA7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEC44", Offset = "0xBCEC44")]
			get
			{
				return default(VRTextureBounds_t);
			}
			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0xFCDA88", Offset = "0xFCDA88", VA = "0xFCDA88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEC54", Offset = "0xBCEC54")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public EVRTrackedCameraFrameType frameType
		{
			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0xFCDA94", Offset = "0xFCDA94", VA = "0xFCDA94")]
			get
			{
				return default(EVRTrackedCameraFrameType);
			}
		}

		[Token(Token = "0x1700014D")]
		public Texture2D texture
		{
			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0xFCDA9C", Offset = "0xFCDA9C", VA = "0xFCDA9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014E")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0xFCDAC0", Offset = "0xFCDAC0", VA = "0xFCDAC0")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x1700014F")]
		public Vector3 velocity
		{
			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0xFCDD34", Offset = "0xFCDD34", VA = "0xFCDD34")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000150")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0xFCDD84", Offset = "0xFCDD84", VA = "0xFCDD84")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xFCD0EC", Offset = "0xFCD0EC", VA = "0xFCD0EC")]
		public VideoStreamTexture(uint deviceIndex, bool undistorted)
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xFCDDD8", Offset = "0xFCDDD8", VA = "0xFCDDD8")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xFCDE08", Offset = "0xFCDE08", VA = "0xFCDE08")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0xFCDE20", Offset = "0xFCDE20", VA = "0xFCDE20")]
		public ulong Release()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0xFCD6DC", Offset = "0xFCD6DC", VA = "0xFCD6DC")]
		private void Update()
		{
		}
	}

	[Token(Token = "0x200024C")]
	private class VideoStream
	{
		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBC18", Offset = "0xBCBC18")]
		private uint <deviceIndex>k__BackingField;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong _handle;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _hasCamera;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ulong refCount;

		[Token(Token = "0x17000151")]
		public uint deviceIndex
		{
			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0xFCD4C4", Offset = "0xFCD4C4", VA = "0xFCD4C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEC64", Offset = "0xBCEC64")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0xFCD4CC", Offset = "0xFCD4CC", VA = "0xFCD4CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEC74", Offset = "0xBCEC74")]
			private set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public ulong handle
		{
			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0xFCD4D4", Offset = "0xFCD4D4", VA = "0xFCD4D4")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000153")]
		public bool hasCamera
		{
			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0xFCD4DC", Offset = "0xFCD4DC", VA = "0xFCD4DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0xFCD3FC", Offset = "0xFCD3FC", VA = "0xFCD3FC")]
		public VideoStream(uint deviceIndex)
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xFCD4E4", Offset = "0xFCD4E4", VA = "0xFCD4E4")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xFCD5A0", Offset = "0xFCD5A0", VA = "0xFCD5A0")]
		public ulong Release()
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VideoStreamTexture[] distorted;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static VideoStreamTexture[] undistorted;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static VideoStream[] videostreams;

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xFCCF98", Offset = "0xFCCF98", VA = "0xFCCF98")]
	public static VideoStreamTexture Distorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xFCD144", Offset = "0xFCD144", VA = "0xFCD144")]
	public static VideoStreamTexture Undistorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xFCD298", Offset = "0xFCD298", VA = "0xFCD298")]
	public static VideoStreamTexture Source(bool undistorted, int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xFCD2AC", Offset = "0xFCD2AC", VA = "0xFCD2AC")]
	private static VideoStream Stream(uint deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xFCD49C", Offset = "0xFCD49C", VA = "0xFCD49C")]
	public SteamVR_TrackedCamera()
	{
	}
}
[Token(Token = "0x200003A")]
public class SteamVR_TrackedObject : MonoBehaviour
{
	[Token(Token = "0x200024D")]
	public enum EIndex
	{
		[Token(Token = "0x4000C44")]
		None = -1,
		[Token(Token = "0x4000C45")]
		Hmd,
		[Token(Token = "0x4000C46")]
		Device1,
		[Token(Token = "0x4000C47")]
		Device2,
		[Token(Token = "0x4000C48")]
		Device3,
		[Token(Token = "0x4000C49")]
		Device4,
		[Token(Token = "0x4000C4A")]
		Device5,
		[Token(Token = "0x4000C4B")]
		Device6,
		[Token(Token = "0x4000C4C")]
		Device7,
		[Token(Token = "0x4000C4D")]
		Device8,
		[Token(Token = "0x4000C4E")]
		Device9,
		[Token(Token = "0x4000C4F")]
		Device10,
		[Token(Token = "0x4000C50")]
		Device11,
		[Token(Token = "0x4000C51")]
		Device12,
		[Token(Token = "0x4000C52")]
		Device13,
		[Token(Token = "0x4000C53")]
		Device14,
		[Token(Token = "0x4000C54")]
		Device15
	}

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EIndex index;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCB310", Offset = "0xBCB310")]
	public Transform origin;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB348", Offset = "0xBCB348")]
	private bool <isValid>k__BackingField;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SteamVR_Events.Action newPosesAction;

	[Token(Token = "0x17000068")]
	public bool isValid
	{
		[Token(Token = "0x600046F")]
		[Address(RVA = "0xFCDF4C", Offset = "0xFCDF4C", VA = "0xFCDF4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCCB78", Offset = "0xBCCB78")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000470")]
		[Address(RVA = "0xFCDF54", Offset = "0xFCDF54", VA = "0xFCDF54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCCB88", Offset = "0xBCCB88")]
		private set
		{
		}
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xFCDF60", Offset = "0xFCDF60", VA = "0xFCDF60")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xFCE1BC", Offset = "0xFCE1BC", VA = "0xFCE1BC")]
	private SteamVR_TrackedObject()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xFCE274", Offset = "0xFCE274", VA = "0xFCE274")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xFCE324", Offset = "0xFCE324", VA = "0xFCE324")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xFCE35C", Offset = "0xFCE35C", VA = "0xFCE35C")]
	public void SetDeviceIndex(int index)
	{
	}
}
[Token(Token = "0x200003B")]
[ExecuteInEditMode]
public class SteamVR_UpdatePoses : MonoBehaviour
{
	[Token(Token = "0x6000476")]
	[Address(RVA = "0xFCE444", Offset = "0xFCE444", VA = "0xFCE444")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xFCE4E0", Offset = "0xFCE4E0", VA = "0xFCE4E0")]
	public SteamVR_UpdatePoses()
	{
	}
}
[Token(Token = "0x200003C")]
public static class SteamVR_Utils
{
	[Serializable]
	[Token(Token = "0x200024E")]
	public struct RigidTransform
	{
		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rot;

		[Token(Token = "0x17000154")]
		public static RigidTransform identity
		{
			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0xFD0430", Offset = "0xFD0430", VA = "0xFD0430")]
			get
			{
				return default(RigidTransform);
			}
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xFD0500", Offset = "0xFD0500", VA = "0xFD0500")]
		public static RigidTransform FromLocal(Transform t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0xCE3AD8", Offset = "0xCE3AD8", VA = "0xCE3AD8")]
		public RigidTransform(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0xCE3AEC", Offset = "0xCE3AEC", VA = "0xCE3AEC")]
		public RigidTransform(Transform t)
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xCE3AF4", Offset = "0xCE3AF4", VA = "0xCE3AF4")]
		public RigidTransform(Transform from, Transform to)
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xCE3AFC", Offset = "0xCE3AFC", VA = "0xCE3AFC")]
		public RigidTransform(HmdMatrix34_t pose)
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xCE3B30", Offset = "0xCE3B30", VA = "0xCE3B30")]
		public RigidTransform(HmdMatrix44_t pose)
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xCE3B64", Offset = "0xCE3B64", VA = "0xCE3B64")]
		public HmdMatrix44_t ToHmdMatrix44()
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0xCE3B6C", Offset = "0xCE3B6C", VA = "0xCE3B6C")]
		public HmdMatrix34_t ToHmdMatrix34()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0xCE3B74", Offset = "0xCE3B74", VA = "0xCE3B74", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xCE3B7C", Offset = "0xCE3B7C", VA = "0xCE3B7C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xFD10FC", Offset = "0xFD10FC", VA = "0xFD10FC")]
		public static bool operator ==(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0xFD1234", Offset = "0xFD1234", VA = "0xFD1234")]
		public static bool operator !=(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0xFD136C", Offset = "0xFD136C", VA = "0xFD136C")]
		public static RigidTransform operator *(RigidTransform a, RigidTransform b)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0xCE3BB8", Offset = "0xCE3BB8", VA = "0xCE3BB8")]
		public void Inverse()
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0xCE3BC0", Offset = "0xCE3BC0", VA = "0xCE3BC0")]
		public RigidTransform GetInverse()
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xCE3BC8", Offset = "0xCE3BC8", VA = "0xCE3BC8")]
		public void Multiply(RigidTransform a, RigidTransform b)
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xCE3C10", Offset = "0xCE3C10", VA = "0xCE3C10")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0xCE3C18", Offset = "0xCE3C18", VA = "0xCE3C18")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xFD1990", Offset = "0xFD1990", VA = "0xFD1990")]
		public static Vector3 operator *(RigidTransform t, Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0xFD1994", Offset = "0xFD1994", VA = "0xFD1994")]
		public static RigidTransform Interpolate(RigidTransform a, RigidTransform b, float t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xCE3C20", Offset = "0xCE3C20", VA = "0xCE3C20")]
		public void Interpolate(RigidTransform to, float t)
		{
		}
	}

	[Token(Token = "0x200024F")]
	public delegate object SystemFn(CVRSystem system, params object[] args);

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xFCE4E8", Offset = "0xFCE4E8", VA = "0xFCE4E8")]
	public static Quaternion Slerp(Quaternion A, Quaternion B, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xFCE6B0", Offset = "0xFCE6B0", VA = "0xFCE6B0")]
	public static Vector3 Lerp(Vector3 A, Vector3 B, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xFCE708", Offset = "0xFCE708", VA = "0xFCE708")]
	public static float Lerp(float A, float B, float t)
	{
		return default(float);
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xFCE718", Offset = "0xFCE718", VA = "0xFCE718")]
	public static double Lerp(double A, double B, double t)
	{
		return default(double);
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xFCE728", Offset = "0xFCE728", VA = "0xFCE728")]
	public static float InverseLerp(Vector3 A, Vector3 B, Vector3 result)
	{
		return default(float);
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xFCE82C", Offset = "0xFCE82C", VA = "0xFCE82C")]
	public static float InverseLerp(float A, float B, float result)
	{
		return default(float);
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xFCE83C", Offset = "0xFCE83C", VA = "0xFCE83C")]
	public static double InverseLerp(double A, double B, double result)
	{
		return default(double);
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xFCE84C", Offset = "0xFCE84C", VA = "0xFCE84C")]
	public static float Saturate(float A)
	{
		return default(float);
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xFCE868", Offset = "0xFCE868", VA = "0xFCE868")]
	public static Vector2 Saturate(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xFCE8B4", Offset = "0xFCE8B4", VA = "0xFCE8B4")]
	public static float Abs(float A)
	{
		return default(float);
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xFCE8C4", Offset = "0xFCE8C4", VA = "0xFCE8C4")]
	public static Vector2 Abs(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xFCE908", Offset = "0xFCE908", VA = "0xFCE908")]
	private static float _copysign(float sizeval, float signval)
	{
		return default(float);
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xFCE9C4", Offset = "0xFCE9C4", VA = "0xFCE9C4")]
	public static Quaternion GetRotation(this Matrix4x4 matrix)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xFCEB90", Offset = "0xFCEB90", VA = "0xFCEB90")]
	public static Vector3 GetPosition(this Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xFCEBCC", Offset = "0xFCEBCC", VA = "0xFCEBCC")]
	public static Vector3 GetScale(this Matrix4x4 m)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xFCED04", Offset = "0xFCED04", VA = "0xFCED04")]
	public static object CallSystemFn(SystemFn fn, params object[] args)
	{
		return null;
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xFCF274", Offset = "0xFCF274", VA = "0xFCF274")]
	public static void TakeStereoScreenshot(uint screenshotHandle, GameObject target, int cellSize, float ipd, ref string previewFilename, ref string VRFilename)
	{
	}
}
[Token(Token = "0x200003D")]
public static class MECExtensionMethods
{
	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9134", Offset = "0xBC9134")]
	private sealed class <CancelWith>d__0 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameObject;

		[Token(Token = "0x17000155")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0x10A7EC4", Offset = "0x10A7EC4", VA = "0x10A7EC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000156")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0x10A7F2C", Offset = "0x10A7F2C", VA = "0x10A7F2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x10A7AA8", Offset = "0x10A7AA8", VA = "0x10A7AA8")]
		[DebuggerHidden]
		public <CancelWith>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x10A7CA0", Offset = "0x10A7CA0", VA = "0x10A7CA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x10A7CA4", Offset = "0x10A7CA4", VA = "0x10A7CA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x10A7ECC", Offset = "0x10A7ECC", VA = "0x10A7ECC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000251")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9144", Offset = "0xBC9144")]
	private sealed class <CancelWith>d__1 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameObject1;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject gameObject2;

		[Token(Token = "0x17000157")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0x10A81F4", Offset = "0x10A81F4", VA = "0x10A81F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000158")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0x10A825C", Offset = "0x10A825C", VA = "0x10A825C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x10A7B80", Offset = "0x10A7B80", VA = "0x10A7B80")]
		[DebuggerHidden]
		public <CancelWith>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x10A7F90", Offset = "0x10A7F90", VA = "0x10A7F90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x10A7F94", Offset = "0x10A7F94", VA = "0x10A7F94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x10A81FC", Offset = "0x10A81FC", VA = "0x10A81FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000252")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9154", Offset = "0xBC9154")]
	private sealed class <CancelWith>d__2 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameObject1;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject gameObject2;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject gameObject3;

		[Token(Token = "0x17000159")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x10A8564", Offset = "0x10A8564", VA = "0x10A8564", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700015A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x10A85CC", Offset = "0x10A85CC", VA = "0x10A85CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x10A7C74", Offset = "0x10A7C74", VA = "0x10A7C74")]
		[DebuggerHidden]
		public <CancelWith>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x10A82C0", Offset = "0x10A82C0", VA = "0x10A82C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x10A82C4", Offset = "0x10A82C4", VA = "0x10A82C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x10A856C", Offset = "0x10A856C", VA = "0x10A856C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x10A7A10", Offset = "0x10A7A10", VA = "0x10A7A10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCCBC8", Offset = "0xBCCBC8")]
	public static IEnumerator<float> CancelWith(this IEnumerator<float> coroutine, GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x10A7AD4", Offset = "0x10A7AD4", VA = "0x10A7AD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCCC3C", Offset = "0xBCCC3C")]
	public static IEnumerator<float> CancelWith(this IEnumerator<float> coroutine, GameObject gameObject1, GameObject gameObject2)
	{
		return null;
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x10A7BAC", Offset = "0x10A7BAC", VA = "0x10A7BAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCCCB0", Offset = "0xBCCCB0")]
	public static IEnumerator<float> CancelWith(this IEnumerator<float> coroutine, GameObject gameObject1, GameObject gameObject2, GameObject gameObject3)
	{
		return null;
	}
}
[Token(Token = "0x200003E")]
public class ViveportDemo : MonoBehaviour
{
	[Token(Token = "0x2000253")]
	private class MyLicenseChecker : Viveport.Api.LicenseChecker
	{
		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x1728C88", Offset = "0x1728C88", VA = "0x1728C88", Slot = "4")]
		public override void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x1728DF0", Offset = "0x1728DF0", VA = "0x1728DF0", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x1728EC4", Offset = "0x1728EC4", VA = "0x1728EC4")]
		public MyLicenseChecker()
		{
		}
	}

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nInitValue;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nResult;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nWidth;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nHeight;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int nXStart;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int nYStart;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string stringToEdit;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string StatsCount;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string achivToEdit;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string leaderboardToEdit;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string leaderboardUserName;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string leaderboardScore;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bInit;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool bIsReady;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static bool bUserProfileIsReady;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	private static bool bArcadeIsReady;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool bTokenIsReady;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string msgBuffer;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string APP_ID;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string APP_KEY;

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x13D9918", Offset = "0x13D9918", VA = "0x13D9918")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x13D99D8", Offset = "0x13D99D8", VA = "0x13D99D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x13D9AA4", Offset = "0x13D9AA4", VA = "0x13D9AA4")]
	private void Update()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x13D9AA8", Offset = "0x13D9AA8", VA = "0x13D9AA8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x13DC454", Offset = "0x13DC454", VA = "0x13DC454")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x13DC5A4", Offset = "0x13DC5A4", VA = "0x13DC5A4")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x13DC6E8", Offset = "0x13DC6E8", VA = "0x13DC6E8")]
	private static void IsTokenReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x13DC820", Offset = "0x13DC820", VA = "0x13DC820")]
	private static void UserProfileIsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x13DC90C", Offset = "0x13DC90C", VA = "0x13DC90C")]
	private static void GetSessionTokenHandler(int nResult, string message)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x13DCB78", Offset = "0x13DCB78", VA = "0x13DCB78")]
	private static void QueryRunTimeHandler(int nResult, int nMode)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x13DCD98", Offset = "0x13DCD98", VA = "0x13DCD98")]
	private static void IsArcadeLeaderboardReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x13DCEDC", Offset = "0x13DCEDC", VA = "0x13DCEDC")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x13DD000", Offset = "0x13DD000", VA = "0x13DD000")]
	private static void DownloadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x13DD0EC", Offset = "0x13DD0EC", VA = "0x13DD0EC")]
	private static void UploadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x13DD1D8", Offset = "0x13DD1D8", VA = "0x13DD1D8")]
	private static void DownloadLeaderboardHandler(int nResult)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x13DD2C4", Offset = "0x13DD2C4", VA = "0x13DD2C4")]
	private static void UploadLeaderboardScoreHandler(int nResult)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x13DD3B0", Offset = "0x13DD3B0", VA = "0x13DD3B0")]
	public ViveportDemo()
	{
	}
}
[Token(Token = "0x200003F")]
public class ViveportDemo_ArcadeSession : MonoBehaviour
{
	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ARCADE_APP_TEST_ID;

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x1728ECC", Offset = "0x1728ECC", VA = "0x1728ECC")]
	private void Start()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x1728F94", Offset = "0x1728F94", VA = "0x1728F94")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x1728F98", Offset = "0x1728F98", VA = "0x1728F98")]
	private void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x1729094", Offset = "0x1729094", VA = "0x1729094")]
	public ViveportDemo_ArcadeSession()
	{
	}
}
[Token(Token = "0x2000040")]
public class ViveportDemo_DLC : MonoBehaviour
{
	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string APP_ID;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool bInit;

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x1729104", Offset = "0x1729104", VA = "0x1729104")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x17291C8", Offset = "0x17291C8", VA = "0x17291C8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x17295B0", Offset = "0x17295B0", VA = "0x17295B0")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x17295B4", Offset = "0x17295B4", VA = "0x17295B4")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x17295B8", Offset = "0x17295B8", VA = "0x17295B8")]
	private static void IsDLCReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x17295BC", Offset = "0x17295BC", VA = "0x17295BC")]
	public ViveportDemo_DLC()
	{
	}
}
[Token(Token = "0x2000041")]
public class ViveportDemo_Deeplink : MonoBehaviour
{
	[Token(Token = "0x2000254")]
	private class GotoAppDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x20003D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAAA0", Offset = "0xBCAAA0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x600151A")]
			[Address(RVA = "0x172A5C4", Offset = "0x172A5C4", VA = "0x172A5C4")]
			public <>c()
			{
			}

			[Token(Token = "0x600151B")]
			[Address(RVA = "0x172A5CC", Offset = "0x172A5CC", VA = "0x172A5CC")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x20003D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAAB0", Offset = "0xBCAAB0")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000D76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x4000D77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x600151C")]
			[Address(RVA = "0x172A554", Offset = "0x172A554", VA = "0x172A554")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600151D")]
			[Address(RVA = "0x172A638", Offset = "0x172A638", VA = "0x172A638")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x172A348", Offset = "0x172A348", VA = "0x172A348", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x172A464", Offset = "0x172A464", VA = "0x172A464", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x1729D48", Offset = "0x1729D48", VA = "0x1729D48")]
		public GotoAppDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x2000255")]
	private class GotoStoreDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x20003D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAAC0", Offset = "0xBCAAC0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x600151F")]
			[Address(RVA = "0x172AA84", Offset = "0x172AA84", VA = "0x172AA84")]
			public <>c()
			{
			}

			[Token(Token = "0x6001520")]
			[Address(RVA = "0x172AA8C", Offset = "0x172AA8C", VA = "0x172AA8C")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x20003D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAAD0", Offset = "0xBCAAD0")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x4000D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x6001521")]
			[Address(RVA = "0x172AA14", Offset = "0x172AA14", VA = "0x172AA14")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001522")]
			[Address(RVA = "0x172AAF8", Offset = "0x172AAF8", VA = "0x172AAF8")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x172A808", Offset = "0x172A808", VA = "0x172A808", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x172A924", Offset = "0x172A924", VA = "0x172A924", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x1729D50", Offset = "0x1729D50", VA = "0x1729D50")]
		public GotoStoreDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x2000256")]
	private class GoToAppOrGoToStoreDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x20003D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAAE0", Offset = "0xBCAAE0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x6001524")]
			[Address(RVA = "0x172A104", Offset = "0x172A104", VA = "0x172A104")]
			public <>c()
			{
			}

			[Token(Token = "0x6001525")]
			[Address(RVA = "0x172A10C", Offset = "0x172A10C", VA = "0x172A10C")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x20003DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAAF0", Offset = "0xBCAAF0")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000D7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x4000D7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x6001526")]
			[Address(RVA = "0x172A094", Offset = "0x172A094", VA = "0x172A094")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001527")]
			[Address(RVA = "0x172A178", Offset = "0x172A178", VA = "0x172A178")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x1729E88", Offset = "0x1729E88", VA = "0x1729E88", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x1729FA4", Offset = "0x1729FA4", VA = "0x1729FA4", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x1729D58", Offset = "0x1729D58", VA = "0x1729D58")]
		public GoToAppOrGoToStoreDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ID;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string VIVEPORT_KEY;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string GoToApp_Viveport_ID;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string GoToStore_Viveport_ID;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string LaunchData;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string LaunchBranchName;

	[Token(Token = "0x40001AF")]
	private const int SUCCESS = 0;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bInitComplete;

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x1729640", Offset = "0x1729640", VA = "0x1729640")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x1729710", Offset = "0x1729710", VA = "0x1729710")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x17297B8", Offset = "0x17297B8", VA = "0x17297B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x172987C", Offset = "0x172987C", VA = "0x172987C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x172990C", Offset = "0x172990C", VA = "0x172990C")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x17299EC", Offset = "0x17299EC", VA = "0x17299EC")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x1729AC8", Offset = "0x1729AC8", VA = "0x1729AC8")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x1729ACC", Offset = "0x1729ACC", VA = "0x1729ACC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x1729D60", Offset = "0x1729D60", VA = "0x1729D60")]
	public ViveportDemo_Deeplink()
	{
	}
}
[Token(Token = "0x2000042")]
public class ViveportDemo_IAP : MonoBehaviour
{
	[Token(Token = "0x2000257")]
	public class Item
	{
		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ticket;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] items;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string subscription_ticket;

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x172BE00", Offset = "0x172BE00", VA = "0x172BE00")]
		public Item()
		{
		}
	}

	[Token(Token = "0x2000258")]
	private class Result : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item mItem;

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x172BE78", Offset = "0x172BE78", VA = "0x172BE78", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x172BF30", Offset = "0x172BF30", VA = "0x172BF30", Slot = "5")]
		public override void OnRequestSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x172BFF4", Offset = "0x172BFF4", VA = "0x172BFF4", Slot = "6")]
		public override void OnPurchaseSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x172C0E4", Offset = "0x172C0E4", VA = "0x172C0E4", Slot = "7")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryResponse response)
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x172C180", Offset = "0x172C180", VA = "0x172C180", Slot = "8")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryListResponse response)
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x172C8F8", Offset = "0x172C8F8", VA = "0x172C8F8", Slot = "9")]
		public override void OnBalanceSuccess(string pchBalance)
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x172C980", Offset = "0x172C980", VA = "0x172C980", Slot = "11")]
		public override void OnRequestSubscriptionSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x172CA44", Offset = "0x172CA44", VA = "0x172CA44", Slot = "12")]
		public override void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x172CB08", Offset = "0x172CB08", VA = "0x172CB08", Slot = "13")]
		public override void OnSubscribeSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x172CBF8", Offset = "0x172CBF8", VA = "0x172CBF8", Slot = "14")]
		public override void OnQuerySubscriptionSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x172D038", Offset = "0x172D038", VA = "0x172D038", Slot = "15")]
		public override void OnQuerySubscriptionListSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x172D478", Offset = "0x172D478", VA = "0x172D478", Slot = "16")]
		public override void OnCancelSubscriptionSuccess(bool bCanceled)
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x172D518", Offset = "0x172D518", VA = "0x172D518", Slot = "10")]
		public override void OnFailure(int nCode, string pchMessage)
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x172AE24", Offset = "0x172AE24", VA = "0x172AE24")]
		public Result()
		{
		}
	}

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IAP_APP_TEST_ID;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string IAP_APP_TEST_KEY;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Result mListener;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bIsDuplicatedSubscription;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool bInit_Done;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private static bool bIsReady_Done;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	private static bool bShutdown_Done;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text winText;

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x172ACC8", Offset = "0x172ACC8", VA = "0x172ACC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x172AE94", Offset = "0x172AE94", VA = "0x172AE94")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x172AE98", Offset = "0x172AE98", VA = "0x172AE98")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x172BB74", Offset = "0x172BB74", VA = "0x172BB74")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x172BC5C", Offset = "0x172BC5C", VA = "0x172BC5C")]
	private static void ShutdownStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x172BD4C", Offset = "0x172BD4C", VA = "0x172BD4C")]
	public ViveportDemo_IAP()
	{
	}
}
[Token(Token = "0x2000043")]
public class ViveportDemo_MainThreadDispatcher : MonoBehaviour
{
	[Token(Token = "0x2000259")]
	private class ThisCallbackWillNotWorkFine : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x172D8F8", Offset = "0x172D8F8", VA = "0x172D8F8", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x172D998", Offset = "0x172D998", VA = "0x172D998")]
		public ThisCallbackWillNotWorkFine()
		{
		}
	}

	[Token(Token = "0x200025A")]
	private class ThisCallbackWillWorkFine_01 : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x20003DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAB00", Offset = "0xBCAB00")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4000D80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string pchCurrencyName;

			[Token(Token = "0x6001528")]
			[Address(RVA = "0x172DA74", Offset = "0x172DA74", VA = "0x172DA74")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001529")]
			[Address(RVA = "0x172DA7C", Offset = "0x172DA7C", VA = "0x172DA7C")]
			internal void <OnSuccess>b__0()
			{
			}
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x172D9A0", Offset = "0x172D9A0", VA = "0x172D9A0", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x172D870", Offset = "0x172D870", VA = "0x172D870")]
		public ThisCallbackWillWorkFine_01()
		{
		}
	}

	[Token(Token = "0x200025B")]
	private class ThisCallbackWillWorkFine_02 : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x20003DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAB10", Offset = "0xBCAB10")]
		private sealed class <ShowResult>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string pchCurrencyName;

			[Token(Token = "0x170001AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600152D")]
				[Address(RVA = "0x172DD3C", Offset = "0x172DD3C", VA = "0x172DD3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600152F")]
				[Address(RVA = "0x172DDA4", Offset = "0x172DDA4", VA = "0x172DDA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600152A")]
			[Address(RVA = "0x172DC20", Offset = "0x172DC20", VA = "0x172DC20")]
			[DebuggerHidden]
			public <ShowResult>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x600152B")]
			[Address(RVA = "0x172DC54", Offset = "0x172DC54", VA = "0x172DC54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600152C")]
			[Address(RVA = "0x172DC58", Offset = "0x172DC58", VA = "0x172DC58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600152E")]
			[Address(RVA = "0x172DD44", Offset = "0x172DD44", VA = "0x172DD44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x172DB1C", Offset = "0x172DB1C", VA = "0x172DB1C", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x172DBA4", Offset = "0x172DBA4", VA = "0x172DBA4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCED74", Offset = "0xBCED74")]
		private IEnumerator ShowResult(string pchCurrencyName)
		{
			return null;
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x172DC4C", Offset = "0x172DC4C", VA = "0x172DC4C")]
		public ThisCallbackWillWorkFine_02()
		{
		}
	}

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text uiText;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Text myApiResultText;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string appId;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string apiKey;

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x172D6EC", Offset = "0x172D6EC", VA = "0x172D6EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x172D7D0", Offset = "0x172D7D0", VA = "0x172D7D0")]
	private void InitCallback(int errorCode)
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x172D878", Offset = "0x172D878", VA = "0x172D878")]
	public ViveportDemo_MainThreadDispatcher()
	{
	}
}
[Token(Token = "0x2000044")]
public class ViveportDemo_Subscription : MonoBehaviour
{
	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bIsReady;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string APP_ID;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bInit;

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x172DDAC", Offset = "0x172DDAC", VA = "0x172DDAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x172DE70", Offset = "0x172DE70", VA = "0x172DE70")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x172E660", Offset = "0x172E660", VA = "0x172E660")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x172E7A8", Offset = "0x172E7A8", VA = "0x172E7A8")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x172E7AC", Offset = "0x172E7AC", VA = "0x172E7AC")]
	private static void IsReadyHandler(int nResult, string message)
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x172E9EC", Offset = "0x172E9EC", VA = "0x172E9EC")]
	public ViveportDemo_Subscription()
	{
	}
}
namespace PublicKeyConvert
{
	[Token(Token = "0x2000045")]
	public class PEMKeyLoader
	{
		[Token(Token = "0x40001C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] SeqOID;

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x10A8D64", Offset = "0x10A8D64", VA = "0x10A8D64")]
		private static bool CompareBytearrays(byte[] a, byte[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x10A8DE0", Offset = "0x10A8DE0", VA = "0x10A8DE0")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(byte[] x509key)
		{
			return null;
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x10A9330", Offset = "0x10A9330", VA = "0x10A9330")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(string base64EncodedKey)
		{
			return null;
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x10A9444", Offset = "0x10A9444", VA = "0x10A9444")]
		public PEMKeyLoader()
		{
		}
	}
}
namespace Viveport
{
	[Token(Token = "0x2000046")]
	public class MainThreadDispatcher : MonoBehaviour
	{
		[Token(Token = "0x200025C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9164", Offset = "0xBC9164")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MainThreadDispatcher <>4__this;

			[Token(Token = "0x4000C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IEnumerator action;

			[Token(Token = "0x6000F09")]
			[Address(RVA = "0x13D7CF4", Offset = "0x13D7CF4", VA = "0x13D7CF4")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000F0A")]
			[Address(RVA = "0x13D7E60", Offset = "0x13D7E60", VA = "0x13D7E60")]
			internal void <Enqueue>b__0()
			{
			}
		}

		[Token(Token = "0x200025D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9174", Offset = "0xBC9174")]
		private sealed class <ActionWrapper>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x1700015B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F0E")]
				[Address(RVA = "0x13D7EF8", Offset = "0x13D7EF8", VA = "0x13D7EF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F10")]
				[Address(RVA = "0x13D7F60", Offset = "0x13D7F60", VA = "0x13D7F60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0x13D7DA0", Offset = "0x13D7DA0", VA = "0x13D7DA0")]
			[DebuggerHidden]
			public <ActionWrapper>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0x13D7E84", Offset = "0x13D7E84", VA = "0x13D7E84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0x13D7E88", Offset = "0x13D7E88", VA = "0x13D7E88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F0F")]
			[Address(RVA = "0x13D7F00", Offset = "0x13D7F00", VA = "0x13D7F00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200025E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9184", Offset = "0xBC9184")]
		private sealed class <ActionWrapper>d__13<T1> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000C70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000C71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> action;

			[Token(Token = "0x4000C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x1700015D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F14")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F16")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F11")]
			[DebuggerHidden]
			public <ActionWrapper>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000F12")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F13")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F15")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200025F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9194", Offset = "0xBC9194")]
		private sealed class <ActionWrapper>d__14<T1, T2> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2> action;

			[Token(Token = "0x4000C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4000C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x1700015F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F1A")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000160")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F1C")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F17")]
			[DebuggerHidden]
			public <ActionWrapper>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6000F18")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F19")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F1B")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC91A4", Offset = "0xBC91A4")]
		private sealed class <ActionWrapper>d__15<T1, T2, T3> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000C7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3> action;

			[Token(Token = "0x4000C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4000C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4000C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x17000161")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F20")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000162")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F22")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F1D")]
			[DebuggerHidden]
			public <ActionWrapper>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000F1E")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F1F")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F21")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000261")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC91B4", Offset = "0xBC91B4")]
		private sealed class <ActionWrapper>d__16<T1, T2, T3, T4> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3, T4> action;

			[Token(Token = "0x4000C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4000C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4000C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x4000C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T4 param4;

			[Token(Token = "0x17000163")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F26")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000164")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F28")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F23")]
			[DebuggerHidden]
			public <ActionWrapper>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6000F24")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F25")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F27")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40001C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Queue<Action> actions;

		[Token(Token = "0x40001CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MainThreadDispatcher instance;

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x13D7750", Offset = "0x13D7750", VA = "0x13D7750")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x13D786C", Offset = "0x13D786C", VA = "0x13D786C")]
		public void Update()
		{
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x13D79E4", Offset = "0x13D79E4", VA = "0x13D79E4")]
		public static MainThreadDispatcher Instance()
		{
			return null;
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x13D7AE4", Offset = "0x13D7AE4", VA = "0x13D7AE4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x13D7B50", Offset = "0x13D7B50", VA = "0x13D7B50")]
		public void Enqueue(IEnumerator action)
		{
		}

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x13D7CFC", Offset = "0x13D7CFC", VA = "0x13D7CFC")]
		public void Enqueue(Action action)
		{
		}

		[Token(Token = "0x60004D1")]
		public void Enqueue<T1>(Action<T1> action, T1 param1)
		{
		}

		[Token(Token = "0x60004D2")]
		public void Enqueue<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
		}

		[Token(Token = "0x60004D3")]
		public void Enqueue<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
		}

		[Token(Token = "0x60004D4")]
		public void Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x13D7D24", Offset = "0x13D7D24", VA = "0x13D7D24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCCD24", Offset = "0xBCCD24")]
		private IEnumerator ActionWrapper(Action action)
		{
			return null;
		}

		[Token(Token = "0x60004D6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCCD88", Offset = "0xBCCD88")]
		private IEnumerator ActionWrapper<T1>(Action<T1> action, T1 param1)
		{
			return null;
		}

		[Token(Token = "0x60004D7")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCCDEC", Offset = "0xBCCDEC")]
		private IEnumerator ActionWrapper<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
			return null;
		}

		[Token(Token = "0x60004D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCCE50", Offset = "0xBCCE50")]
		private IEnumerator ActionWrapper<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
			return null;
		}

		[Token(Token = "0x60004D9")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCCEB4", Offset = "0xBCCEB4")]
		private IEnumerator ActionWrapper<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
			return null;
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x13D7DCC", Offset = "0x13D7DCC", VA = "0x13D7DCC")]
		public MainThreadDispatcher()
		{
		}
	}
	[Token(Token = "0x2000047")]
	public enum Locale
	{
		[Token(Token = "0x40001CC")]
		US,
		[Token(Token = "0x40001CD")]
		DE,
		[Token(Token = "0x40001CE")]
		JP,
		[Token(Token = "0x40001CF")]
		KR,
		[Token(Token = "0x40001D0")]
		RU,
		[Token(Token = "0x40001D1")]
		CN,
		[Token(Token = "0x40001D2")]
		TW,
		[Token(Token = "0x40001D3")]
		FR
	}
	[Token(Token = "0x2000048")]
	public delegate void StatusCallback(int nResult);
	[Token(Token = "0x2000049")]
	public delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x200004A")]
	public delegate void QueryRuntimeModeCallback(int nResult, int emu);
	[Token(Token = "0x200004B")]
	public class Leaderboard
	{
		[Token(Token = "0x40001D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB358", Offset = "0xBCB358")]
		private int <Rank>k__BackingField;

		[Token(Token = "0x40001D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB368", Offset = "0xBCB368")]
		private int <Score>k__BackingField;

		[Token(Token = "0x40001D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB378", Offset = "0xBCB378")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x17000069")]
		public int Rank
		{
			[Token(Token = "0x60004E8")]
			[Address(RVA = "0x13D7720", Offset = "0x13D7720", VA = "0x13D7720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCCF18", Offset = "0xBCCF18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004E9")]
			[Address(RVA = "0x13D7728", Offset = "0x13D7728", VA = "0x13D7728")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCCF28", Offset = "0xBCCF28")]
			set
			{
			}
		}

		[Token(Token = "0x1700006A")]
		public int Score
		{
			[Token(Token = "0x60004EA")]
			[Address(RVA = "0x13D7730", Offset = "0x13D7730", VA = "0x13D7730")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCCF38", Offset = "0xBCCF38")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004EB")]
			[Address(RVA = "0x13D7738", Offset = "0x13D7738", VA = "0x13D7738")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCCF48", Offset = "0xBCCF48")]
			set
			{
			}
		}

		[Token(Token = "0x1700006B")]
		public string UserName
		{
			[Token(Token = "0x60004EC")]
			[Address(RVA = "0x13D7740", Offset = "0x13D7740", VA = "0x13D7740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCCF58", Offset = "0xBCCF58")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004ED")]
			[Address(RVA = "0x13D7748", Offset = "0x13D7748", VA = "0x13D7748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCCF68", Offset = "0xBCCF68")]
			set
			{
			}
		}

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x13D741C", Offset = "0x13D741C", VA = "0x13D741C")]
		public Leaderboard()
		{
		}
	}
	[Token(Token = "0x200004C")]
	public class SubscriptionStatus
	{
		[Token(Token = "0x2000262")]
		public enum Platform
		{
			[Token(Token = "0x4000C86")]
			Windows,
			[Token(Token = "0x4000C87")]
			Android
		}

		[Token(Token = "0x2000263")]
		public enum TransactionType
		{
			[Token(Token = "0x4000C89")]
			Unknown,
			[Token(Token = "0x4000C8A")]
			Paid,
			[Token(Token = "0x4000C8B")]
			Redeem,
			[Token(Token = "0x4000C8C")]
			FreeTrial
		}

		[Token(Token = "0x40001D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB388", Offset = "0xBCB388")]
		private List<Platform> <Platforms>k__BackingField;

		[Token(Token = "0x40001D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB398", Offset = "0xBCB398")]
		private TransactionType <Type>k__BackingField;

		[Token(Token = "0x1700006C")]
		public List<Platform> Platforms
		{
			[Token(Token = "0x60004EF")]
			[Address(RVA = "0x13D8C88", Offset = "0x13D8C88", VA = "0x13D8C88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCCF78", Offset = "0xBCCF78")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004F0")]
			[Address(RVA = "0x13D8C90", Offset = "0x13D8C90", VA = "0x13D8C90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCCF88", Offset = "0xBCCF88")]
			set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public TransactionType Type
		{
			[Token(Token = "0x60004F1")]
			[Address(RVA = "0x13D8C98", Offset = "0x13D8C98", VA = "0x13D8C98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCCF98", Offset = "0xBCCF98")]
			get
			{
				return default(TransactionType);
			}
			[Token(Token = "0x60004F2")]
			[Address(RVA = "0x13D8CA0", Offset = "0x13D8CA0", VA = "0x13D8CA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCCFA8", Offset = "0xBCCFA8")]
			set
			{
			}
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0x13D8BFC", Offset = "0x13D8BFC", VA = "0x13D8BFC")]
		public SubscriptionStatus()
		{
		}
	}
	[Token(Token = "0x200004D")]
	public class Api
	{
		[Token(Token = "0x2000264")]
		public abstract class LicenseChecker
		{
			[Token(Token = "0x6000F29")]
			public abstract void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired);

			[Token(Token = "0x6000F2A")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x6000F2B")]
			[Address(RVA = "0x13CA258", Offset = "0x13CA258", VA = "0x13CA258")]
			protected LicenseChecker()
			{
			}
		}

		[Token(Token = "0x40001D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly List<GetLicenseCallback> InternalGetLicenseCallbacks;

		[Token(Token = "0x40001DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly List<Viveport.Internal.StatusCallback> InternalStatusCallbacks;

		[Token(Token = "0x40001DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly List<Viveport.Internal.QueryRuntimeModeCallback> InternalQueryRunTimeCallbacks;

		[Token(Token = "0x40001DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly List<Viveport.Internal.StatusCallback2> InternalStatusCallback2s;

		[Token(Token = "0x40001DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static readonly List<LicenseChecker> InternalLicenseCheckers;

		[Token(Token = "0x40001DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Viveport.Internal.StatusCallback initIl2cppCallback;

		[Token(Token = "0x40001DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Viveport.Internal.StatusCallback shutdownIl2cppCallback;

		[Token(Token = "0x40001E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Viveport.Internal.QueryRuntimeModeCallback queryRuntimeModeIl2cppCallback;

		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly string VERSION;

		[Token(Token = "0x40001E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string _appId;

		[Token(Token = "0x40001E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string _appKey;

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0x13C945C", Offset = "0x13C945C", VA = "0x13C945C")]
		public static void GetLicense(LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x13C936C", Offset = "0x13C936C", VA = "0x13C936C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBCCFB8", Offset = "0xBCCFB8")]
		private static void InitIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x13C9978", Offset = "0x13C9978", VA = "0x13C9978")]
		public static int Init(StatusCallback callback, string appId)
		{
			return default(int);
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x13C93E4", Offset = "0x13C93E4", VA = "0x13C93E4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBCD01C", Offset = "0xBCD01C")]
		private static void ShutdownIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x13C9CA0", Offset = "0x13C9CA0", VA = "0x13C9CA0")]
		public static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x13C9F1C", Offset = "0x13C9F1C", VA = "0x13C9F1C")]
		public static string Version()
		{
			return null;
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x13CA0AC", Offset = "0x13CA0AC", VA = "0x13CA0AC")]
		public Api()
		{
		}
	}
	[Token(Token = "0x200004E")]
	public class User
	{
		[Token(Token = "0x40001E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x13D8CB0", Offset = "0x13D8CB0", VA = "0x13D8CB0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBCD080", Offset = "0xBCD080")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x13D8D10", Offset = "0x13D8D10", VA = "0x13D8D10")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x13D8E94", Offset = "0x13D8E94", VA = "0x13D8E94")]
		public static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x13D8EB8", Offset = "0x13D8EB8", VA = "0x13D8EB8")]
		public static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0x13D8EDC", Offset = "0x13D8EDC", VA = "0x13D8EDC")]
		public static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0x13D8F00", Offset = "0x13D8F00", VA = "0x13D8F00")]
		public User()
		{
		}
	}
	[Token(Token = "0x200004F")]
	public class UserStats
	{
		[Token(Token = "0x2000265")]
		public enum LeaderBoardRequestType
		{
			[Token(Token = "0x4000C8E")]
			GlobalData,
			[Token(Token = "0x4000C8F")]
			GlobalDataAroundUser,
			[Token(Token = "0x4000C90")]
			LocalData,
			[Token(Token = "0x4000C91")]
			LocalDataAroundUser
		}

		[Token(Token = "0x2000266")]
		public enum LeaderBoardTimeRange
		{
			[Token(Token = "0x4000C93")]
			AllTime,
			[Token(Token = "0x4000C94")]
			Daily,
			[Token(Token = "0x4000C95")]
			Weekly,
			[Token(Token = "0x4000C96")]
			Monthly
		}

		[Token(Token = "0x2000267")]
		public enum LeaderBoardSortMethod
		{
			[Token(Token = "0x4000C98")]
			None,
			[Token(Token = "0x4000C99")]
			Ascending,
			[Token(Token = "0x4000C9A")]
			Descending
		}

		[Token(Token = "0x2000268")]
		public enum LeaderBoardDiaplayType
		{
			[Token(Token = "0x4000C9C")]
			None,
			[Token(Token = "0x4000C9D")]
			Numeric,
			[Token(Token = "0x4000C9E")]
			TimeSeconds,
			[Token(Token = "0x4000C9F")]
			TimeMilliSeconds
		}

		[Token(Token = "0x2000269")]
		public enum LeaderBoardScoreMethod
		{
			[Token(Token = "0x4000CA1")]
			None,
			[Token(Token = "0x4000CA2")]
			KeepBest,
			[Token(Token = "0x4000CA3")]
			ForceUpdate
		}

		[Token(Token = "0x200026A")]
		public enum AchievementDisplayAttribute
		{
			[Token(Token = "0x4000CA5")]
			Name,
			[Token(Token = "0x4000CA6")]
			Desc,
			[Token(Token = "0x4000CA7")]
			Hidden
		}

		[Token(Token = "0x40001E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x40001E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback downloadStatsIl2cppCallback;

		[Token(Token = "0x40001E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback uploadStatsIl2cppCallback;

		[Token(Token = "0x40001E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback downloadLeaderboardScoresIl2cppCallback;

		[Token(Token = "0x40001E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback uploadLeaderboardScoreIl2cppCallback;

		[Token(Token = "0x6000502")]
		[Address(RVA = "0x13D8F08", Offset = "0x13D8F08", VA = "0x13D8F08")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBCD0E4", Offset = "0xBCD0E4")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0x13D90E8", Offset = "0x13D90E8", VA = "0x13D90E8")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0x13D8F68", Offset = "0x13D8F68", VA = "0x13D8F68")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBCD148", Offset = "0xBCD148")]
		private static void DownloadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x13D926C", Offset = "0x13D926C", VA = "0x13D926C")]
		public static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0x13D93F0", Offset = "0x13D93F0", VA = "0x13D93F0")]
		public static int GetStat(string name, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x13D93F4", Offset = "0x13D93F4", VA = "0x13D93F4")]
		public static float GetStat(string name, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0x13D93F8", Offset = "0x13D93F8", VA = "0x13D93F8")]
		public static void SetStat(string name, int value)
		{
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0x13D93FC", Offset = "0x13D93FC", VA = "0x13D93FC")]
		public static void SetStat(string name, float value)
		{
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0x13D8FC8", Offset = "0x13D8FC8", VA = "0x13D8FC8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBCD1AC", Offset = "0xBCD1AC")]
		private static void UploadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x13D9400", Offset = "0x13D9400", VA = "0x13D9400")]
		public static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x13D9584", Offset = "0x13D9584", VA = "0x13D9584")]
		public static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x13D9588", Offset = "0x13D9588", VA = "0x13D9588")]
		public static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0x13D958C", Offset = "0x13D958C", VA = "0x13D958C")]
		public static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x13D9590", Offset = "0x13D9590", VA = "0x13D9590")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x13D9594", Offset = "0x13D9594", VA = "0x13D9594")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr, Locale locale)
		{
			return null;
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x13D9598", Offset = "0x13D9598", VA = "0x13D9598")]
		public static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0x13D959C", Offset = "0x13D959C", VA = "0x13D959C")]
		public static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0x13D9028", Offset = "0x13D9028", VA = "0x13D9028")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBCD210", Offset = "0xBCD210")]
		private static void DownloadLeaderboardScoresIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0x13D95A0", Offset = "0x13D95A0", VA = "0x13D95A0")]
		public static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, LeaderBoardRequestType eLeaderboardDataRequest, LeaderBoardTimeRange eLeaderboardDataTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0x13D9088", Offset = "0x13D9088", VA = "0x13D9088")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBCD274", Offset = "0xBCD274")]
		private static void UploadLeaderboardScoreIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0x13D9764", Offset = "0x13D9764", VA = "0x13D9764")]
		public static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScore)
		{
			return default(int);
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0x13D9900", Offset = "0x13D9900", VA = "0x13D9900")]
		public static Leaderboard GetLeaderboardScore(int index)
		{
			return null;
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0x13D9904", Offset = "0x13D9904", VA = "0x13D9904")]
		public static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0x13D9908", Offset = "0x13D9908", VA = "0x13D9908")]
		public static LeaderBoardSortMethod GetLeaderboardSortMethod()
		{
			return default(LeaderBoardSortMethod);
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0x13D990C", Offset = "0x13D990C", VA = "0x13D990C")]
		public static LeaderBoardDiaplayType GetLeaderboardDisplayType()
		{
			return default(LeaderBoardDiaplayType);
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x13D9910", Offset = "0x13D9910", VA = "0x13D9910")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x2000050")]
	public class ArcadeLeaderboard
	{
		[Token(Token = "0x600051C")]
		[Address(RVA = "0x13CA268", Offset = "0x13CA268", VA = "0x13CA268")]
		public ArcadeLeaderboard()
		{
		}
	}
	[Token(Token = "0x2000051")]
	public class IAPurchase
	{
		[Token(Token = "0x200026B")]
		private class IAPHandler : BaseHandler
		{
			[Token(Token = "0x4000CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IAPurchaseListener listener;

			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0x13CBD54", Offset = "0x13CBD54", VA = "0x13CBD54")]
			public IAPHandler(IAPurchaseListener cb)
			{
			}

			[Token(Token = "0x6000F2D")]
			[Address(RVA = "0x13CBDC4", Offset = "0x13CBDC4", VA = "0x13CBDC4")]
			public IAPurchaseCallback getIsReadyHandler()
			{
				return null;
			}

			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0x13CE204", Offset = "0x13CE204", VA = "0x13CE204", Slot = "4")]
			protected override void IsReadyHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0x13CC0A0", Offset = "0x13CC0A0", VA = "0x13CC0A0")]
			public IAPurchaseCallback getRequestHandler()
			{
				return null;
			}

			[Token(Token = "0x6000F30")]
			[Address(RVA = "0x13CE70C", Offset = "0x13CE70C", VA = "0x13CE70C", Slot = "5")]
			protected override void RequestHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000F31")]
			[Address(RVA = "0x13CC5F0", Offset = "0x13CC5F0", VA = "0x13CC5F0")]
			public IAPurchaseCallback getPurchaseHandler()
			{
				return null;
			}

			[Token(Token = "0x6000F32")]
			[Address(RVA = "0x13CEC14", Offset = "0x13CEC14", VA = "0x13CEC14", Slot = "6")]
			protected override void PurchaseHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000F33")]
			[Address(RVA = "0x13CC8B8", Offset = "0x13CC8B8", VA = "0x13CC8B8")]
			public IAPurchaseCallback getQueryHandler()
			{
				return null;
			}

			[Token(Token = "0x6000F34")]
			[Address(RVA = "0x13CF26C", Offset = "0x13CF26C", VA = "0x13CF26C", Slot = "7")]
			protected override void QueryHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000F35")]
			[Address(RVA = "0x13CCB70", Offset = "0x13CCB70", VA = "0x13CCB70")]
			public IAPurchaseCallback getQueryListHandler()
			{
				return null;
			}

			[Token(Token = "0x6000F36")]
			[Address(RVA = "0x13CFCAC", Offset = "0x13CFCAC", VA = "0x13CFCAC", Slot = "8")]
			protected override void QueryListHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000F37")]
			[Address(RVA = "0x13CCDE8", Offset = "0x13CCDE8", VA = "0x13CCDE8")]
			public IAPurchaseCallback getBalanceHandler()
			{
				return null;
			}

			[Token(Token = "0x6000F38")]
			[Address(RVA = "0x13D0BF0", Offset = "0x13D0BF0", VA = "0x13D0BF0", Slot = "9")]
			protected override void BalanceHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000F39")]
			[Address(RVA = "0x13CD0B8", Offset = "0x13CD0B8", VA = "0x13CD0B8")]
			public IAPurchaseCallback getRequestSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0x13D124C", Offset = "0x13D124C", VA = "0x13D124C", Slot = "10")]
			protected override void RequestSubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0x13CD534", Offset = "0x13CD534", VA = "0x13CD534")]
			public IAPurchaseCallback getRequestSubscriptionWithPlanIDHandler()
			{
				return null;
			}

			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0x13D173C", Offset = "0x13D173C", VA = "0x13D173C", Slot = "11")]
			protected override void RequestSubscriptionWithPlanIDHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0x13CD7FC", Offset = "0x13CD7FC", VA = "0x13CD7FC")]
			public IAPurchaseCallback getSubscribeHandler()
			{
				return null;
			}

			[Token(Token = "0x6000F3E")]
			[Address(RVA = "0x13D1C2C", Offset = "0x13D1C2C", VA = "0x13D1C2C", Slot = "12")]
			protected override void SubscribeHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000F3F")]
			[Address(RVA = "0x13CDAC4", Offset = "0x13CDAC4", VA = "0x13CDAC4")]
			public IAPurchaseCallback getQuerySubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6000F40")]
			[Address(RVA = "0x13D2348", Offset = "0x13D2348", VA = "0x13D2348", Slot = "13")]
			protected override void QuerySubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000F41")]
			[Address(RVA = "0x13CDD7C", Offset = "0x13CDD7C", VA = "0x13CDD7C")]
			public IAPurchaseCallback getQuerySubscriptionListHandler()
			{
				return null;
			}

			[Token(Token = "0x6000F42")]
			[Address(RVA = "0x13D2854", Offset = "0x13D2854", VA = "0x13D2854", Slot = "14")]
			protected override void QuerySubscriptionListHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000F43")]
			[Address(RVA = "0x13CE004", Offset = "0x13CE004", VA = "0x13CE004")]
			public IAPurchaseCallback getCancelSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6000F44")]
			[Address(RVA = "0x13D2D60", Offset = "0x13D2D60", VA = "0x13D2D60", Slot = "15")]
			protected override void CancelSubscriptionHandler(int code, string message)
			{
			}
		}

		[Token(Token = "0x200026C")]
		private abstract class BaseHandler
		{
			[Token(Token = "0x6000F45")]
			protected abstract void IsReadyHandler(int code, string message);

			[Token(Token = "0x6000F46")]
			protected abstract void RequestHandler(int code, string message);

			[Token(Token = "0x6000F47")]
			protected abstract void PurchaseHandler(int code, string message);

			[Token(Token = "0x6000F48")]
			protected abstract void QueryHandler(int code, string message);

			[Token(Token = "0x6000F49")]
			protected abstract void QueryListHandler(int code, string message);

			[Token(Token = "0x6000F4A")]
			protected abstract void BalanceHandler(int code, string message);

			[Token(Token = "0x6000F4B")]
			protected abstract void RequestSubscriptionHandler(int code, string message);

			[Token(Token = "0x6000F4C")]
			protected abstract void RequestSubscriptionWithPlanIDHandler(int code, string message);

			[Token(Token = "0x6000F4D")]
			protected abstract void SubscribeHandler(int code, string message);

			[Token(Token = "0x6000F4E")]
			protected abstract void QuerySubscriptionHandler(int code, string message);

			[Token(Token = "0x6000F4F")]
			protected abstract void QuerySubscriptionListHandler(int code, string message);

			[Token(Token = "0x6000F50")]
			protected abstract void CancelSubscriptionHandler(int code, string message);

			[Token(Token = "0x6000F51")]
			[Address(RVA = "0x13CE1FC", Offset = "0x13CE1FC", VA = "0x13CE1FC")]
			protected BaseHandler()
			{
			}
		}

		[Token(Token = "0x200026D")]
		public class IAPurchaseListener
		{
			[Token(Token = "0x6000F52")]
			[Address(RVA = "0x13D319C", Offset = "0x13D319C", VA = "0x13D319C", Slot = "4")]
			public virtual void OnSuccess(string pchCurrencyName)
			{
			}

			[Token(Token = "0x6000F53")]
			[Address(RVA = "0x13D31A0", Offset = "0x13D31A0", VA = "0x13D31A0", Slot = "5")]
			public virtual void OnRequestSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x6000F54")]
			[Address(RVA = "0x13D31A4", Offset = "0x13D31A4", VA = "0x13D31A4", Slot = "6")]
			public virtual void OnPurchaseSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x6000F55")]
			[Address(RVA = "0x13D31A8", Offset = "0x13D31A8", VA = "0x13D31A8", Slot = "7")]
			public virtual void OnQuerySuccess(QueryResponse response)
			{
			}

			[Token(Token = "0x6000F56")]
			[Address(RVA = "0x13D31AC", Offset = "0x13D31AC", VA = "0x13D31AC", Slot = "8")]
			public virtual void OnQuerySuccess(QueryListResponse response)
			{
			}

			[Token(Token = "0x6000F57")]
			[Address(RVA = "0x13D31B0", Offset = "0x13D31B0", VA = "0x13D31B0", Slot = "9")]
			public virtual void OnBalanceSuccess(string pchBalance)
			{
			}

			[Token(Token = "0x6000F58")]
			[Address(RVA = "0x13D31B4", Offset = "0x13D31B4", VA = "0x13D31B4", Slot = "10")]
			public virtual void OnFailure(int nCode, string pchMessage)
			{
			}

			[Token(Token = "0x6000F59")]
			[Address(RVA = "0x13D31B8", Offset = "0x13D31B8", VA = "0x13D31B8", Slot = "11")]
			public virtual void OnRequestSubscriptionSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6000F5A")]
			[Address(RVA = "0x13D31BC", Offset = "0x13D31BC", VA = "0x13D31BC", Slot = "12")]
			public virtual void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x13D31C0", Offset = "0x13D31C0", VA = "0x13D31C0", Slot = "13")]
			public virtual void OnSubscribeSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x13D31C4", Offset = "0x13D31C4", VA = "0x13D31C4", Slot = "14")]
			public virtual void OnQuerySubscriptionSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x13D31C8", Offset = "0x13D31C8", VA = "0x13D31C8", Slot = "15")]
			public virtual void OnQuerySubscriptionListSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x13D31CC", Offset = "0x13D31CC", VA = "0x13D31CC", Slot = "16")]
			public virtual void OnCancelSubscriptionSuccess(bool bCanceled)
			{
			}

			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x13D31D0", Offset = "0x13D31D0", VA = "0x13D31D0")]
			public IAPurchaseListener()
			{
			}
		}

		[Token(Token = "0x200026E")]
		public class QueryResponse
		{
			[Token(Token = "0x4000CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBC28", Offset = "0xBCBC28")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4000CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBC38", Offset = "0xBCBC38")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4000CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBC48", Offset = "0xBCBC48")]
			private string <status>k__BackingField;

			[Token(Token = "0x4000CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBC58", Offset = "0xBCBC58")]
			private string <price>k__BackingField;

			[Token(Token = "0x4000CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBC68", Offset = "0xBCBC68")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4000CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBC78", Offset = "0xBCBC78")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x17000165")]
			public string order_id
			{
				[Token(Token = "0x6000F60")]
				[Address(RVA = "0x13D3208", Offset = "0x13D3208", VA = "0x13D3208")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEF68", Offset = "0xBCEF68")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F61")]
				[Address(RVA = "0x13D3210", Offset = "0x13D3210", VA = "0x13D3210")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEF78", Offset = "0xBCEF78")]
				set
				{
				}
			}

			[Token(Token = "0x17000166")]
			public string purchase_id
			{
				[Token(Token = "0x6000F62")]
				[Address(RVA = "0x13D3218", Offset = "0x13D3218", VA = "0x13D3218")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEF88", Offset = "0xBCEF88")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F63")]
				[Address(RVA = "0x13D3220", Offset = "0x13D3220", VA = "0x13D3220")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEF98", Offset = "0xBCEF98")]
				set
				{
				}
			}

			[Token(Token = "0x17000167")]
			public string status
			{
				[Token(Token = "0x6000F64")]
				[Address(RVA = "0x13D3228", Offset = "0x13D3228", VA = "0x13D3228")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEFA8", Offset = "0xBCEFA8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F65")]
				[Address(RVA = "0x13D3230", Offset = "0x13D3230", VA = "0x13D3230")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEFB8", Offset = "0xBCEFB8")]
				set
				{
				}
			}

			[Token(Token = "0x17000168")]
			public string price
			{
				[Token(Token = "0x6000F66")]
				[Address(RVA = "0x13D3238", Offset = "0x13D3238", VA = "0x13D3238")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEFC8", Offset = "0xBCEFC8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F67")]
				[Address(RVA = "0x13D3240", Offset = "0x13D3240", VA = "0x13D3240")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEFD8", Offset = "0xBCEFD8")]
				set
				{
				}
			}

			[Token(Token = "0x17000169")]
			public string currency
			{
				[Token(Token = "0x6000F68")]
				[Address(RVA = "0x13D3248", Offset = "0x13D3248", VA = "0x13D3248")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEFE8", Offset = "0xBCEFE8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F69")]
				[Address(RVA = "0x13D3250", Offset = "0x13D3250", VA = "0x13D3250")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEFF8", Offset = "0xBCEFF8")]
				set
				{
				}
			}

			[Token(Token = "0x1700016A")]
			public long paid_timestamp
			{
				[Token(Token = "0x6000F6A")]
				[Address(RVA = "0x13D3258", Offset = "0x13D3258", VA = "0x13D3258")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF008", Offset = "0xBCF008")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6000F6B")]
				[Address(RVA = "0x13D3260", Offset = "0x13D3260", VA = "0x13D3260")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF018", Offset = "0xBCF018")]
				set
				{
				}
			}

			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0x13CFCA4", Offset = "0x13CFCA4", VA = "0x13CFCA4")]
			public QueryResponse()
			{
			}
		}

		[Token(Token = "0x200026F")]
		public class QueryResponse2
		{
			[Token(Token = "0x4000CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBC88", Offset = "0xBCBC88")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4000CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBC98", Offset = "0xBCBC98")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4000CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBCA8", Offset = "0xBCBCA8")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4000CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBCB8", Offset = "0xBCBCB8")]
			private string <user_data>k__BackingField;

			[Token(Token = "0x4000CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBCC8", Offset = "0xBCBCC8")]
			private string <price>k__BackingField;

			[Token(Token = "0x4000CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBCD8", Offset = "0xBCBCD8")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4000CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBCE8", Offset = "0xBCBCE8")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x1700016B")]
			public string order_id
			{
				[Token(Token = "0x6000F6D")]
				[Address(RVA = "0x13D3268", Offset = "0x13D3268", VA = "0x13D3268")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF028", Offset = "0xBCF028")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F6E")]
				[Address(RVA = "0x13D3270", Offset = "0x13D3270", VA = "0x13D3270")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF038", Offset = "0xBCF038")]
				set
				{
				}
			}

			[Token(Token = "0x1700016C")]
			public string app_id
			{
				[Token(Token = "0x6000F6F")]
				[Address(RVA = "0x13D3278", Offset = "0x13D3278", VA = "0x13D3278")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF048", Offset = "0xBCF048")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F70")]
				[Address(RVA = "0x13D3280", Offset = "0x13D3280", VA = "0x13D3280")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF058", Offset = "0xBCF058")]
				set
				{
				}
			}

			[Token(Token = "0x1700016D")]
			public string purchase_id
			{
				[Token(Token = "0x6000F71")]
				[Address(RVA = "0x13D3288", Offset = "0x13D3288", VA = "0x13D3288")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF068", Offset = "0xBCF068")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F72")]
				[Address(RVA = "0x13D3290", Offset = "0x13D3290", VA = "0x13D3290")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF078", Offset = "0xBCF078")]
				set
				{
				}
			}

			[Token(Token = "0x1700016E")]
			public string user_data
			{
				[Token(Token = "0x6000F73")]
				[Address(RVA = "0x13D3298", Offset = "0x13D3298", VA = "0x13D3298")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF088", Offset = "0xBCF088")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F74")]
				[Address(RVA = "0x13D32A0", Offset = "0x13D32A0", VA = "0x13D32A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF098", Offset = "0xBCF098")]
				set
				{
				}
			}

			[Token(Token = "0x1700016F")]
			public string price
			{
				[Token(Token = "0x6000F75")]
				[Address(RVA = "0x13D32A8", Offset = "0x13D32A8", VA = "0x13D32A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF0A8", Offset = "0xBCF0A8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F76")]
				[Address(RVA = "0x13D32B0", Offset = "0x13D32B0", VA = "0x13D32B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF0B8", Offset = "0xBCF0B8")]
				set
				{
				}
			}

			[Token(Token = "0x17000170")]
			public string currency
			{
				[Token(Token = "0x6000F77")]
				[Address(RVA = "0x13D32B8", Offset = "0x13D32B8", VA = "0x13D32B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF0C8", Offset = "0xBCF0C8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F78")]
				[Address(RVA = "0x13D32C0", Offset = "0x13D32C0", VA = "0x13D32C0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF0D8", Offset = "0xBCF0D8")]
				set
				{
				}
			}

			[Token(Token = "0x17000171")]
			public long paid_timestamp
			{
				[Token(Token = "0x6000F79")]
				[Address(RVA = "0x13D32C8", Offset = "0x13D32C8", VA = "0x13D32C8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF0E8", Offset = "0xBCF0E8")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6000F7A")]
				[Address(RVA = "0x13D32D0", Offset = "0x13D32D0", VA = "0x13D32D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF0F8", Offset = "0xBCF0F8")]
				set
				{
				}
			}

			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0x13D0BE0", Offset = "0x13D0BE0", VA = "0x13D0BE0")]
			public QueryResponse2()
			{
			}
		}

		[Token(Token = "0x2000270")]
		public class QueryListResponse
		{
			[Token(Token = "0x4000CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBCF8", Offset = "0xBCBCF8")]
			private int <total>k__BackingField;

			[Token(Token = "0x4000CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBD08", Offset = "0xBCBD08")]
			private int <from>k__BackingField;

			[Token(Token = "0x4000CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBD18", Offset = "0xBCBD18")]
			private int <to>k__BackingField;

			[Token(Token = "0x4000CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<QueryResponse2> purchaseList;

			[Token(Token = "0x17000172")]
			public int total
			{
				[Token(Token = "0x6000F7C")]
				[Address(RVA = "0x13D31D8", Offset = "0x13D31D8", VA = "0x13D31D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF108", Offset = "0xBCF108")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000F7D")]
				[Address(RVA = "0x13D31E0", Offset = "0x13D31E0", VA = "0x13D31E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF118", Offset = "0xBCF118")]
				set
				{
				}
			}

			[Token(Token = "0x17000173")]
			public int from
			{
				[Token(Token = "0x6000F7E")]
				[Address(RVA = "0x13D31E8", Offset = "0x13D31E8", VA = "0x13D31E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF128", Offset = "0xBCF128")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000F7F")]
				[Address(RVA = "0x13D31F0", Offset = "0x13D31F0", VA = "0x13D31F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF138", Offset = "0xBCF138")]
				set
				{
				}
			}

			[Token(Token = "0x17000174")]
			public int to
			{
				[Token(Token = "0x6000F80")]
				[Address(RVA = "0x13D31F8", Offset = "0x13D31F8", VA = "0x13D31F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF148", Offset = "0xBCF148")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000F81")]
				[Address(RVA = "0x13D3200", Offset = "0x13D3200", VA = "0x13D3200")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF158", Offset = "0xBCF158")]
				set
				{
				}
			}

			[Token(Token = "0x6000F82")]
			[Address(RVA = "0x13D0BE8", Offset = "0x13D0BE8", VA = "0x13D0BE8")]
			public QueryListResponse()
			{
			}
		}

		[Token(Token = "0x2000271")]
		public class StatusDetailTransaction
		{
			[Token(Token = "0x4000CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBD28", Offset = "0xBCBD28")]
			private long <create_time>k__BackingField;

			[Token(Token = "0x4000CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBD38", Offset = "0xBCBD38")]
			private string <payment_method>k__BackingField;

			[Token(Token = "0x4000CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBD48", Offset = "0xBCBD48")]
			private string <status>k__BackingField;

			[Token(Token = "0x17000175")]
			public long create_time
			{
				[Token(Token = "0x6000F83")]
				[Address(RVA = "0x13D3348", Offset = "0x13D3348", VA = "0x13D3348")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF168", Offset = "0xBCF168")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6000F84")]
				[Address(RVA = "0x13D3350", Offset = "0x13D3350", VA = "0x13D3350")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF178", Offset = "0xBCF178")]
				set
				{
				}
			}

			[Token(Token = "0x17000176")]
			public string payment_method
			{
				[Token(Token = "0x6000F85")]
				[Address(RVA = "0x13D3358", Offset = "0x13D3358", VA = "0x13D3358")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF188", Offset = "0xBCF188")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F86")]
				[Address(RVA = "0x13D3360", Offset = "0x13D3360", VA = "0x13D3360")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF198", Offset = "0xBCF198")]
				set
				{
				}
			}

			[Token(Token = "0x17000177")]
			public string status
			{
				[Token(Token = "0x6000F87")]
				[Address(RVA = "0x13D3368", Offset = "0x13D3368", VA = "0x13D3368")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF1A8", Offset = "0xBCF1A8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F88")]
				[Address(RVA = "0x13D3370", Offset = "0x13D3370", VA = "0x13D3370")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF1B8", Offset = "0xBCF1B8")]
				set
				{
				}
			}

			[Token(Token = "0x6000F89")]
			[Address(RVA = "0x13D3378", Offset = "0x13D3378", VA = "0x13D3378")]
			public StatusDetailTransaction()
			{
			}
		}

		[Token(Token = "0x2000272")]
		public class StatusDetail
		{
			[Token(Token = "0x4000CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBD58", Offset = "0xBCBD58")]
			private long <date_next_charge>k__BackingField;

			[Token(Token = "0x4000CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBD68", Offset = "0xBCBD68")]
			private StatusDetailTransaction[] <transactions>k__BackingField;

			[Token(Token = "0x4000CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBD78", Offset = "0xBCBD78")]
			private string <cancel_reason>k__BackingField;

			[Token(Token = "0x17000178")]
			public long date_next_charge
			{
				[Token(Token = "0x6000F8A")]
				[Address(RVA = "0x13D3310", Offset = "0x13D3310", VA = "0x13D3310")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF1C8", Offset = "0xBCF1C8")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6000F8B")]
				[Address(RVA = "0x13D3318", Offset = "0x13D3318", VA = "0x13D3318")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF1D8", Offset = "0xBCF1D8")]
				set
				{
				}
			}

			[Token(Token = "0x17000179")]
			public StatusDetailTransaction[] transactions
			{
				[Token(Token = "0x6000F8C")]
				[Address(RVA = "0x13D3320", Offset = "0x13D3320", VA = "0x13D3320")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF1E8", Offset = "0xBCF1E8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F8D")]
				[Address(RVA = "0x13D3328", Offset = "0x13D3328", VA = "0x13D3328")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF1F8", Offset = "0xBCF1F8")]
				set
				{
				}
			}

			[Token(Token = "0x1700017A")]
			public string cancel_reason
			{
				[Token(Token = "0x6000F8E")]
				[Address(RVA = "0x13D3330", Offset = "0x13D3330", VA = "0x13D3330")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF208", Offset = "0xBCF208")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F8F")]
				[Address(RVA = "0x13D3338", Offset = "0x13D3338", VA = "0x13D3338")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF218", Offset = "0xBCF218")]
				set
				{
				}
			}

			[Token(Token = "0x6000F90")]
			[Address(RVA = "0x13D3340", Offset = "0x13D3340", VA = "0x13D3340")]
			public StatusDetail()
			{
			}
		}

		[Token(Token = "0x2000273")]
		public class TimePeriod
		{
			[Token(Token = "0x4000CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBD88", Offset = "0xBCBD88")]
			private string <time_type>k__BackingField;

			[Token(Token = "0x4000CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBD98", Offset = "0xBCBD98")]
			private int <value>k__BackingField;

			[Token(Token = "0x1700017B")]
			public string time_type
			{
				[Token(Token = "0x6000F91")]
				[Address(RVA = "0x13D3458", Offset = "0x13D3458", VA = "0x13D3458")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF228", Offset = "0xBCF228")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F92")]
				[Address(RVA = "0x13D3460", Offset = "0x13D3460", VA = "0x13D3460")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF238", Offset = "0xBCF238")]
				set
				{
				}
			}

			[Token(Token = "0x1700017C")]
			public int value
			{
				[Token(Token = "0x6000F93")]
				[Address(RVA = "0x13D3468", Offset = "0x13D3468", VA = "0x13D3468")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF248", Offset = "0xBCF248")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000F94")]
				[Address(RVA = "0x13D3470", Offset = "0x13D3470", VA = "0x13D3470")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF258", Offset = "0xBCF258")]
				set
				{
				}
			}

			[Token(Token = "0x6000F95")]
			[Address(RVA = "0x13D3478", Offset = "0x13D3478", VA = "0x13D3478")]
			public TimePeriod()
			{
			}
		}

		[Token(Token = "0x2000274")]
		public class Subscription
		{
			[Token(Token = "0x4000CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBDA8", Offset = "0xBCBDA8")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4000CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBDB8", Offset = "0xBCBDB8")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4000CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBDC8", Offset = "0xBCBDC8")]
			private string <subscription_id>k__BackingField;

			[Token(Token = "0x4000CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBDD8", Offset = "0xBCBDD8")]
			private string <price>k__BackingField;

			[Token(Token = "0x4000CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBDE8", Offset = "0xBCBDE8")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4000CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBDF8", Offset = "0xBCBDF8")]
			private long <subscribed_timestamp>k__BackingField;

			[Token(Token = "0x4000CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBE08", Offset = "0xBCBE08")]
			private TimePeriod <free_trial_period>k__BackingField;

			[Token(Token = "0x4000CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBE18", Offset = "0xBCBE18")]
			private TimePeriod <charge_period>k__BackingField;

			[Token(Token = "0x4000CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBE28", Offset = "0xBCBE28")]
			private int <number_of_charge_period>k__BackingField;

			[Token(Token = "0x4000CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBE38", Offset = "0xBCBE38")]
			private string <plan_id>k__BackingField;

			[Token(Token = "0x4000CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBE48", Offset = "0xBCBE48")]
			private string <plan_name>k__BackingField;

			[Token(Token = "0x4000CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBE58", Offset = "0xBCBE58")]
			private string <status>k__BackingField;

			[Token(Token = "0x4000CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBE68", Offset = "0xBCBE68")]
			private StatusDetail <status_detail>k__BackingField;

			[Token(Token = "0x1700017D")]
			public string app_id
			{
				[Token(Token = "0x6000F96")]
				[Address(RVA = "0x13D3380", Offset = "0x13D3380", VA = "0x13D3380")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF268", Offset = "0xBCF268")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F97")]
				[Address(RVA = "0x13D3388", Offset = "0x13D3388", VA = "0x13D3388")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF278", Offset = "0xBCF278")]
				set
				{
				}
			}

			[Token(Token = "0x1700017E")]
			public string order_id
			{
				[Token(Token = "0x6000F98")]
				[Address(RVA = "0x13D3390", Offset = "0x13D3390", VA = "0x13D3390")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF288", Offset = "0xBCF288")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F99")]
				[Address(RVA = "0x13D3398", Offset = "0x13D3398", VA = "0x13D3398")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF298", Offset = "0xBCF298")]
				set
				{
				}
			}

			[Token(Token = "0x1700017F")]
			public string subscription_id
			{
				[Token(Token = "0x6000F9A")]
				[Address(RVA = "0x13D33A0", Offset = "0x13D33A0", VA = "0x13D33A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF2A8", Offset = "0xBCF2A8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F9B")]
				[Address(RVA = "0x13D33A8", Offset = "0x13D33A8", VA = "0x13D33A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF2B8", Offset = "0xBCF2B8")]
				set
				{
				}
			}

			[Token(Token = "0x17000180")]
			public string price
			{
				[Token(Token = "0x6000F9C")]
				[Address(RVA = "0x13D33B0", Offset = "0x13D33B0", VA = "0x13D33B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF2C8", Offset = "0xBCF2C8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F9D")]
				[Address(RVA = "0x13D33B8", Offset = "0x13D33B8", VA = "0x13D33B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF2D8", Offset = "0xBCF2D8")]
				set
				{
				}
			}

			[Token(Token = "0x17000181")]
			public string currency
			{
				[Token(Token = "0x6000F9E")]
				[Address(RVA = "0x13D33C0", Offset = "0x13D33C0", VA = "0x13D33C0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF2E8", Offset = "0xBCF2E8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F9F")]
				[Address(RVA = "0x13D33C8", Offset = "0x13D33C8", VA = "0x13D33C8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF2F8", Offset = "0xBCF2F8")]
				set
				{
				}
			}

			[Token(Token = "0x17000182")]
			public long subscribed_timestamp
			{
				[Token(Token = "0x6000FA0")]
				[Address(RVA = "0x13D33D0", Offset = "0x13D33D0", VA = "0x13D33D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF308", Offset = "0xBCF308")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6000FA1")]
				[Address(RVA = "0x13D33D8", Offset = "0x13D33D8", VA = "0x13D33D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF318", Offset = "0xBCF318")]
				set
				{
				}
			}

			[Token(Token = "0x17000183")]
			public TimePeriod free_trial_period
			{
				[Token(Token = "0x6000FA2")]
				[Address(RVA = "0x13D33E0", Offset = "0x13D33E0", VA = "0x13D33E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF328", Offset = "0xBCF328")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000FA3")]
				[Address(RVA = "0x13D33E8", Offset = "0x13D33E8", VA = "0x13D33E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF338", Offset = "0xBCF338")]
				set
				{
				}
			}

			[Token(Token = "0x17000184")]
			public TimePeriod charge_period
			{
				[Token(Token = "0x6000FA4")]
				[Address(RVA = "0x13D33F0", Offset = "0x13D33F0", VA = "0x13D33F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF348", Offset = "0xBCF348")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000FA5")]
				[Address(RVA = "0x13D33F8", Offset = "0x13D33F8", VA = "0x13D33F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF358", Offset = "0xBCF358")]
				set
				{
				}
			}

			[Token(Token = "0x17000185")]
			public int number_of_charge_period
			{
				[Token(Token = "0x6000FA6")]
				[Address(RVA = "0x13D3400", Offset = "0x13D3400", VA = "0x13D3400")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF368", Offset = "0xBCF368")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000FA7")]
				[Address(RVA = "0x13D3408", Offset = "0x13D3408", VA = "0x13D3408")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF378", Offset = "0xBCF378")]
				set
				{
				}
			}

			[Token(Token = "0x17000186")]
			public string plan_id
			{
				[Token(Token = "0x6000FA8")]
				[Address(RVA = "0x13D3410", Offset = "0x13D3410", VA = "0x13D3410")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF388", Offset = "0xBCF388")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000FA9")]
				[Address(RVA = "0x13D3418", Offset = "0x13D3418", VA = "0x13D3418")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF398", Offset = "0xBCF398")]
				set
				{
				}
			}

			[Token(Token = "0x17000187")]
			public string plan_name
			{
				[Token(Token = "0x6000FAA")]
				[Address(RVA = "0x13D3420", Offset = "0x13D3420", VA = "0x13D3420")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF3A8", Offset = "0xBCF3A8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000FAB")]
				[Address(RVA = "0x13D3428", Offset = "0x13D3428", VA = "0x13D3428")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF3B8", Offset = "0xBCF3B8")]
				set
				{
				}
			}

			[Token(Token = "0x17000188")]
			public string status
			{
				[Token(Token = "0x6000FAC")]
				[Address(RVA = "0x13D3430", Offset = "0x13D3430", VA = "0x13D3430")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF3C8", Offset = "0xBCF3C8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000FAD")]
				[Address(RVA = "0x13D3438", Offset = "0x13D3438", VA = "0x13D3438")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF3D8", Offset = "0xBCF3D8")]
				set
				{
				}
			}

			[Token(Token = "0x17000189")]
			public StatusDetail status_detail
			{
				[Token(Token = "0x6000FAE")]
				[Address(RVA = "0x13D3440", Offset = "0x13D3440", VA = "0x13D3440")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF3E8", Offset = "0xBCF3E8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000FAF")]
				[Address(RVA = "0x13D3448", Offset = "0x13D3448", VA = "0x13D3448")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF3F8", Offset = "0xBCF3F8")]
				set
				{
				}
			}

			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0x13D3450", Offset = "0x13D3450", VA = "0x13D3450")]
			public Subscription()
			{
			}
		}

		[Token(Token = "0x2000275")]
		public class QuerySubscritionResponse
		{
			[Token(Token = "0x4000CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBE78", Offset = "0xBCBE78")]
			private int <statusCode>k__BackingField;

			[Token(Token = "0x4000CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBE88", Offset = "0xBCBE88")]
			private string <message>k__BackingField;

			[Token(Token = "0x4000CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBE98", Offset = "0xBCBE98")]
			private List<Subscription> <subscriptions>k__BackingField;

			[Token(Token = "0x1700018A")]
			public int statusCode
			{
				[Token(Token = "0x6000FB1")]
				[Address(RVA = "0x13D32D8", Offset = "0x13D32D8", VA = "0x13D32D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF408", Offset = "0xBCF408")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000FB2")]
				[Address(RVA = "0x13D32E0", Offset = "0x13D32E0", VA = "0x13D32E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF418", Offset = "0xBCF418")]
				set
				{
				}
			}

			[Token(Token = "0x1700018B")]
			public string message
			{
				[Token(Token = "0x6000FB3")]
				[Address(RVA = "0x13D32E8", Offset = "0x13D32E8", VA = "0x13D32E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF428", Offset = "0xBCF428")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000FB4")]
				[Address(RVA = "0x13D32F0", Offset = "0x13D32F0", VA = "0x13D32F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF438", Offset = "0xBCF438")]
				set
				{
				}
			}

			[Token(Token = "0x1700018C")]
			public List<Subscription> subscriptions
			{
				[Token(Token = "0x6000FB5")]
				[Address(RVA = "0x13D32F8", Offset = "0x13D32F8", VA = "0x13D32F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF448", Offset = "0xBCF448")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000FB6")]
				[Address(RVA = "0x13D3300", Offset = "0x13D3300", VA = "0x13D3300")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCF458", Offset = "0xBCF458")]
				set
				{
				}
			}

			[Token(Token = "0x6000FB7")]
			[Address(RVA = "0x13D3308", Offset = "0x13D3308", VA = "0x13D3308")]
			public QuerySubscritionResponse()
			{
			}
		}

		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IAPurchaseCallback isReadyIl2cppCallback;

		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IAPurchaseCallback request01Il2cppCallback;

		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IAPurchaseCallback request02Il2cppCallback;

		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IAPurchaseCallback purchaseIl2cppCallback;

		[Token(Token = "0x40001EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IAPurchaseCallback query01Il2cppCallback;

		[Token(Token = "0x40001EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IAPurchaseCallback query02Il2cppCallback;

		[Token(Token = "0x40001F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IAPurchaseCallback getBalanceIl2cppCallback;

		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static IAPurchaseCallback requestSubscriptionIl2cppCallback;

		[Token(Token = "0x40001F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IAPurchaseCallback requestSubscriptionWithPlanIDIl2cppCallback;

		[Token(Token = "0x40001F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static IAPurchaseCallback subscribeIl2cppCallback;

		[Token(Token = "0x40001F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IAPurchaseCallback querySubscriptionIl2cppCallback;

		[Token(Token = "0x40001F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static IAPurchaseCallback querySubscriptionListIl2cppCallback;

		[Token(Token = "0x40001F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IAPurchaseCallback cancelSubscriptionIl2cppCallback;

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x13CB444", Offset = "0x13CB444", VA = "0x13CB444")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBCD2D8", Offset = "0xBCD2D8")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0x13CBC7C", Offset = "0x13CBC7C", VA = "0x13CBC7C")]
		public static void IsReady(IAPurchaseListener listener, string pchAppKey)
		{
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0x13CB4B4", Offset = "0x13CB4B4", VA = "0x13CB4B4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBCD33C", Offset = "0xBCD33C")]
		private static void Request01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0x13CBFC8", Offset = "0x13CBFC8", VA = "0x13CBFC8")]
		public static void Request(IAPurchaseListener listener, string pchPrice)
		{
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0x13CB524", Offset = "0x13CB524", VA = "0x13CB524")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBCD3A0", Offset = "0xBCD3A0")]
		private static void Request02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0x13CC290", Offset = "0x13CC290", VA = "0x13CC290")]
		public static void Request(IAPurchaseListener listener, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0x13CB594", Offset = "0x13CB594", VA = "0x13CB594")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBCD404", Offset = "0xBCD404")]
		private static void PurchaseIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0x13CC518", Offset = "0x13CC518", VA = "0x13CC518")]
		public static void Purchase(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x13CB604", Offset = "0x13CB604", VA = "0x13CB604")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBCD468", Offset = "0xBCD468")]
		private static void Query01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x13CC7E0", Offset = "0x13CC7E0", VA = "0x13CC7E0")]
		public static void Query(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0x13CB674", Offset = "0x13CB674", VA = "0x13CB674")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBCD4CC", Offset = "0xBCD4CC")]
		private static void Query02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0x13CCAA8", Offset = "0x13CCAA8", VA = "0x13CCAA8")]
		public static void Query(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0x13CB6E4", Offset = "0x13CB6E4", VA = "0x13CB6E4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBCD530", Offset = "0xBCD530")]
		private static void GetBalanceIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0x13CCD20", Offset = "0x13CCD20", VA = "0x13CCD20")]
		public static void GetBalance(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0x13CB754", Offset = "0x13CB754", VA = "0x13CB754")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBCD594", Offset = "0xBCD594")]
		private static void RequestSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0x13CCF98", Offset = "0x13CCF98", VA = "0x13CCF98")]
		public static void RequestSubscription(IAPurchaseListener listener, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0x13CB7C4", Offset = "0x13CB7C4", VA = "0x13CB7C4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBCD5F8", Offset = "0xBCD5F8")]
		private static void RequestSubscriptionWithPlanIDIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0x13CD45C", Offset = "0x13CD45C", VA = "0x13CD45C")]
		public static void RequestSubscriptionWithPlanID(IAPurchaseListener listener, string pchPlanId)
		{
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0x13CB834", Offset = "0x13CB834", VA = "0x13CB834")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBCD65C", Offset = "0xBCD65C")]
		private static void SubscribeIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x13CD724", Offset = "0x13CD724", VA = "0x13CD724")]
		public static void Subscribe(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0x13CB8A4", Offset = "0x13CB8A4", VA = "0x13CB8A4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBCD6C0", Offset = "0xBCD6C0")]
		private static void QuerySubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x13CD9EC", Offset = "0x13CD9EC", VA = "0x13CD9EC")]
		public static void QuerySubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0x13CB914", Offset = "0x13CB914", VA = "0x13CB914")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBCD724", Offset = "0xBCD724")]
		private static void QuerySubscriptionListIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x13CDCB4", Offset = "0x13CDCB4", VA = "0x13CDCB4")]
		public static void QuerySubscriptionList(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0x13CB984", Offset = "0x13CB984", VA = "0x13CB984")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBCD788", Offset = "0xBCD788")]
		private static void CancelSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0x13CDF2C", Offset = "0x13CDF2C", VA = "0x13CDF2C")]
		public static void CancelSubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x13CE1F4", Offset = "0x13CE1F4", VA = "0x13CE1F4")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x2000052")]
	public class DLC
	{
		[Token(Token = "0x6000538")]
		[Address(RVA = "0x13CA8E0", Offset = "0x13CA8E0", VA = "0x13CA8E0")]
		public DLC()
		{
		}
	}
	[Token(Token = "0x2000053")]
	public class Subscription
	{
		[Token(Token = "0x40001F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback2 isReadyIl2cppCallback;

		[Token(Token = "0x6000539")]
		[Address(RVA = "0x13D8908", Offset = "0x13D8908", VA = "0x13D8908")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBCD7EC", Offset = "0xBCD7EC")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0x13D8978", Offset = "0x13D8978", VA = "0x13D8978")]
		public static void IsReady(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0x13D8AFC", Offset = "0x13D8AFC", VA = "0x13D8AFC")]
		public static SubscriptionStatus GetUserStatus()
		{
			return null;
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0x13D8C80", Offset = "0x13D8C80", VA = "0x13D8C80")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x2000054")]
	public class Deeplink
	{
		[Token(Token = "0x2000276")]
		public abstract class DeeplinkChecker
		{
			[Token(Token = "0x6000FB8")]
			public abstract void OnSuccess();

			[Token(Token = "0x6000FB9")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x6000FBA")]
			[Address(RVA = "0x13CB43C", Offset = "0x13CB43C", VA = "0x13CB43C")]
			protected DeeplinkChecker()
			{
			}
		}

		[Token(Token = "0x40001F8")]
		private const int MaxIdLength = 256;

		[Token(Token = "0x40001F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x40001FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback2 goToAppIl2cppCallback;

		[Token(Token = "0x40001FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback2 goToAppWithBranchNameIl2cppCallback;

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback2 goToStoreIl2cppCallback;

		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback2 goToAppOrGoToStoreIl2cppCallback;

		[Token(Token = "0x600053D")]
		[Address(RVA = "0x13CA8E8", Offset = "0x13CA8E8", VA = "0x13CA8E8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBCD850", Offset = "0xBCD850")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x13CA948", Offset = "0x13CA948", VA = "0x13CA948")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0x13CABC4", Offset = "0x13CABC4", VA = "0x13CABC4")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x13CAE28", Offset = "0x13CAE28", VA = "0x13CAE28")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData, string branchName)
		{
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0x13CAEE4", Offset = "0x13CAEE4", VA = "0x13CAEE4")]
		public static void GoToStore(DeeplinkChecker checker, string appId = "")
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0x13CB0E8", Offset = "0x13CB0E8", VA = "0x13CB0E8")]
		public static void GoToAppOrGoToStore(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0x13CB34C", Offset = "0x13CB34C", VA = "0x13CB34C")]
		public static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x13CB434", Offset = "0x13CB434", VA = "0x13CB434")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x2000055")]
	internal class Token
	{
		[Token(Token = "0x6000545")]
		[Address(RVA = "0x13D8CA8", Offset = "0x13D8CA8", VA = "0x13D8CA8")]
		public Token()
		{
		}
	}
}
namespace Viveport.Internal
{
	[Token(Token = "0x2000056")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC23A8", Offset = "0xBC23A8")]
	internal delegate void GetLicenseCallback(string message, string signature);
	[Token(Token = "0x2000057")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC23BC", Offset = "0xBC23BC")]
	internal delegate void StatusCallback(int nResult);
	[Token(Token = "0x2000058")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC23D0", Offset = "0xBC23D0")]
	internal delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x2000059")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC23E4", Offset = "0xBC23E4")]
	internal delegate void QueryRuntimeModeCallback(int nResult, int nMode);
	[Token(Token = "0x200005A")]
	internal enum ELeaderboardDataRequest
	{
		[Token(Token = "0x40001FF")]
		k_ELeaderboardDataRequestGlobal,
		[Token(Token = "0x4000200")]
		k_ELeaderboardDataRequestGlobalAroundUser,
		[Token(Token = "0x4000201")]
		k_ELeaderboardDataRequestLocal,
		[Token(Token = "0x4000202")]
		k_ELeaderboardDataRequestLocaleAroundUser
	}
	[Token(Token = "0x200005B")]
	internal enum ELeaderboardDataTimeRange
	{
		[Token(Token = "0x4000204")]
		k_ELeaderboardDataScropeAllTime,
		[Token(Token = "0x4000205")]
		k_ELeaderboardDataScropeDaily,
		[Token(Token = "0x4000206")]
		k_ELeaderboardDataScropeWeekly,
		[Token(Token = "0x4000207")]
		k_ELeaderboardDataScropeMonthly
	}
	[Token(Token = "0x200005C")]
	internal enum ELeaderboardSortMethod
	{
		[Token(Token = "0x4000209")]
		k_ELeaderboardSortMethodNone,
		[Token(Token = "0x400020A")]
		k_ELeaderboardSortMethodAscending,
		[Token(Token = "0x400020B")]
		k_ELeaderboardSortMethodDescending
	}
	[Token(Token = "0x200005D")]
	internal enum ELeaderboardDisplayType
	{
		[Token(Token = "0x400020D")]
		k_ELeaderboardDisplayTypeNone,
		[Token(Token = "0x400020E")]
		k_ELeaderboardDisplayTypeNumeric,
		[Token(Token = "0x400020F")]
		k_ELeaderboardDisplayTypeTimeSeconds,
		[Token(Token = "0x4000210")]
		k_ELeaderboardDisplayTypeTimeMilliSeconds
	}
	[Token(Token = "0x200005E")]
	internal enum ELeaderboardUploadScoreMethod
	{
		[Token(Token = "0x4000212")]
		k_ELeaderboardUploadScoreMethodNone,
		[Token(Token = "0x4000213")]
		k_ELeaderboardUploadScoreMethodKeepBest,
		[Token(Token = "0x4000214")]
		k_ELeaderboardUploadScoreMethodForceUpdate
	}
	[Token(Token = "0x200005F")]
	internal enum ESubscriptionTransactionType
	{
		[Token(Token = "0x4000216")]
		UNKNOWN,
		[Token(Token = "0x4000217")]
		PAID,
		[Token(Token = "0x4000218")]
		REDEEM,
		[Token(Token = "0x4000219")]
		FREEE_TRIAL
	}
	[Token(Token = "0x2000060")]
	internal enum ELocale
	{
		[Token(Token = "0x400021B")]
		k_ELocaleUS,
		[Token(Token = "0x400021C")]
		k_ELocaleDE,
		[Token(Token = "0x400021D")]
		k_ELocaleJP,
		[Token(Token = "0x400021E")]
		k_ELocaleKR,
		[Token(Token = "0x400021F")]
		k_ELocaleRU,
		[Token(Token = "0x4000220")]
		k_ELocaleCN,
		[Token(Token = "0x4000221")]
		k_ELocaleTW,
		[Token(Token = "0x4000222")]
		k_ELocaleFR
	}
	[Token(Token = "0x2000061")]
	internal enum EAchievementDisplayAttribute
	{
		[Token(Token = "0x4000224")]
		k_EAchievementDisplayAttributeName,
		[Token(Token = "0x4000225")]
		k_EAchievementDisplayAttributeDesc,
		[Token(Token = "0x4000226")]
		k_EAchievementDisplayAttributeHidden
	}
	[Token(Token = "0x2000062")]
	internal struct LeaderboardEntry_t
	{
		[Token(Token = "0x4000227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int m_nGlobalRank;

		[Token(Token = "0x4000228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int m_nScore;

		[Token(Token = "0x4000229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pUserName;
	}
	[Token(Token = "0x2000063")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC23F8", Offset = "0xBC23F8")]
	internal delegate void IAPurchaseCallback(int code, string message);
	[Token(Token = "0x2000064")]
	internal struct IAPCurrency_t
	{
		[Token(Token = "0x400022A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal string m_pName;

		[Token(Token = "0x400022B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pSymbol;
	}
	[Token(Token = "0x2000065")]
	internal class Api
	{
		[Token(Token = "0x2000277")]
		internal class AndroidLicenseChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4000CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Api.LicenseChecker checker;

			[Token(Token = "0x6000FBB")]
			[Address(RVA = "0x13D4304", Offset = "0x13D4304", VA = "0x13D4304")]
			internal AndroidLicenseChecker(Viveport.Api.LicenseChecker checker)
			{
			}

			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0x13D439C", Offset = "0x13D439C", VA = "0x13D439C")]
			internal void onSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
			{
			}

			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0x13D45B8", Offset = "0x13D45B8", VA = "0x13D45B8")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0x13C9B28", Offset = "0x13C9B28", VA = "0x13C9B28")]
		internal static int Init(StatusCallback callback, string pchAppKey)
		{
			return default(int);
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x13C9E1C", Offset = "0x13C9E1C", VA = "0x13C9E1C")]
		internal static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0x13C9FB0", Offset = "0x13C9FB0", VA = "0x13C9FB0")]
		internal static string Version()
		{
			return null;
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0x13C9564", Offset = "0x13C9564", VA = "0x13C9564")]
		internal static void GetLicense(Viveport.Api.LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0x13D4394", Offset = "0x13D4394", VA = "0x13D4394")]
		public Api()
		{
		}
	}
	[Token(Token = "0x2000066")]
	internal class User
	{
		[Token(Token = "0x600055F")]
		[Address(RVA = "0x13D5944", Offset = "0x13D5944", VA = "0x13D5944")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0x13D5A7C", Offset = "0x13D5A7C", VA = "0x13D5A7C")]
		internal static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0x13D5B60", Offset = "0x13D5B60", VA = "0x13D5B60")]
		internal static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x13D5C44", Offset = "0x13D5C44", VA = "0x13D5C44")]
		internal static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0x13D5D28", Offset = "0x13D5D28", VA = "0x13D5D28")]
		public User()
		{
		}
	}
	[Token(Token = "0x2000067")]
	internal class UserStats
	{
		[Token(Token = "0x6000564")]
		[Address(RVA = "0x13D5D30", Offset = "0x13D5D30", VA = "0x13D5D30")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0x13D5E68", Offset = "0x13D5E68", VA = "0x13D5E68")]
		internal static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0x13D5FA0", Offset = "0x13D5FA0", VA = "0x13D5FA0")]
		internal static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0x13D60D8", Offset = "0x13D60D8", VA = "0x13D60D8")]
		internal static int SetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0x13D6218", Offset = "0x13D6218", VA = "0x13D6218")]
		internal static int SetStat(string pchName, float fData)
		{
			return default(int);
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0x13D6360", Offset = "0x13D6360", VA = "0x13D6360")]
		internal static int GetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0x13D64A0", Offset = "0x13D64A0", VA = "0x13D64A0")]
		internal static float GetStat(string pchName, float fData)
		{
			return default(float);
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x13D65E8", Offset = "0x13D65E8", VA = "0x13D65E8")]
		internal static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x13D66C8", Offset = "0x13D66C8", VA = "0x13D66C8")]
		internal static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x13D67A8", Offset = "0x13D67A8", VA = "0x13D67A8")]
		internal static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x13D6888", Offset = "0x13D6888", VA = "0x13D6888")]
		internal static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x13D6968", Offset = "0x13D6968", VA = "0x13D6968")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x13D6AA8", Offset = "0x13D6AA8", VA = "0x13D6AA8")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr, ELocale locale)
		{
			return null;
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x13D6C34", Offset = "0x13D6C34", VA = "0x13D6C34")]
		internal static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x13D6D14", Offset = "0x13D6D14", VA = "0x13D6D14")]
		internal static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, ELeaderboardDataRequest nDataRequest, ELeaderboardDataTimeRange nTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0x13D6FE0", Offset = "0x13D6FE0", VA = "0x13D6FE0")]
		internal static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScores)
		{
			return default(int);
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0x13D71B8", Offset = "0x13D71B8", VA = "0x13D71B8")]
		internal static Leaderboard GetLeaderboardScore(int nIndex)
		{
			return null;
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0x13D7424", Offset = "0x13D7424", VA = "0x13D7424")]
		internal static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0x13D7520", Offset = "0x13D7520", VA = "0x13D7520")]
		internal static ELeaderboardSortMethod GetLeaderboardSortMethod()
		{
			return default(ELeaderboardSortMethod);
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x13D761C", Offset = "0x13D761C", VA = "0x13D761C")]
		internal static ELeaderboardDisplayType GetLeaderboardDisplayType()
		{
			return default(ELeaderboardDisplayType);
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x13D7718", Offset = "0x13D7718", VA = "0x13D7718")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x2000068")]
	internal class Deeplink
	{
		[Token(Token = "0x2000278")]
		internal class AndroidDeeplinkChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4000CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Deeplink.DeeplinkChecker checker;

			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0x13D47A8", Offset = "0x13D47A8", VA = "0x13D47A8")]
			internal AndroidDeeplinkChecker(Viveport.Deeplink.DeeplinkChecker checker)
			{
			}

			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0x13D4840", Offset = "0x13D4840", VA = "0x13D4840")]
			internal void onSuccess()
			{
			}

			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0x13D48CC", Offset = "0x13D48CC", VA = "0x13D48CC")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x13CAACC", Offset = "0x13CAACC", VA = "0x13CAACC")]
		internal static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0x13CAC80", Offset = "0x13CAC80", VA = "0x13CAC80")]
		internal static void GoToApp(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0x13CAF78", Offset = "0x13CAF78", VA = "0x13CAF78")]
		internal static void GoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId)
		{
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0x13CB1A4", Offset = "0x13CB1A4", VA = "0x13CB1A4")]
		internal static void GoToAppOrGoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0x13CB350", Offset = "0x13CB350", VA = "0x13CB350")]
		internal static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0x13D4838", Offset = "0x13D4838", VA = "0x13D4838")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x2000069")]
	internal class IAPurchase
	{
		[Token(Token = "0x600057F")]
		[Address(RVA = "0x13CBE58", Offset = "0x13CBE58", VA = "0x13CBE58")]
		internal static void IsReady(IAPurchaseCallback callback, string pchAppKey)
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0x13CC120", Offset = "0x13CC120", VA = "0x13CC120")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice)
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x13CC370", Offset = "0x13CC370", VA = "0x13CC370")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x13CC670", Offset = "0x13CC670", VA = "0x13CC670")]
		internal static void Purchase(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x13CC938", Offset = "0x13CC938", VA = "0x13CC938")]
		internal static void Query(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x13CCBF0", Offset = "0x13CCBF0", VA = "0x13CCBF0")]
		internal static void Query(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x13CCE68", Offset = "0x13CCE68", VA = "0x13CCE68")]
		internal static void GetBalance(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x13CD138", Offset = "0x13CD138", VA = "0x13CD138")]
		internal static void RequestSubscription(IAPurchaseCallback callback, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x13CD5B4", Offset = "0x13CD5B4", VA = "0x13CD5B4")]
		internal static void RequestSubscriptionWithPlanID(IAPurchaseCallback callback, string pchPlanId)
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x13CD87C", Offset = "0x13CD87C", VA = "0x13CD87C")]
		internal static void Subscribe(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x13CDB44", Offset = "0x13CDB44", VA = "0x13CDB44")]
		internal static void QuerySubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0x13CDDFC", Offset = "0x13CDDFC", VA = "0x13CDDFC")]
		internal static void QuerySubscriptionList(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x13CE084", Offset = "0x13CE084", VA = "0x13CE084")]
		internal static void CancelSubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0x13D4F10", Offset = "0x13D4F10", VA = "0x13D4F10")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x200006A")]
	internal class Subscription
	{
		[Token(Token = "0x600058D")]
		[Address(RVA = "0x13D5454", Offset = "0x13D5454", VA = "0x13D5454")]
		internal static int IsReady(StatusCallback2 callback)
		{
			return default(int);
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0x13D558C", Offset = "0x13D558C", VA = "0x13D558C")]
		internal static bool IsWindowsSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0x13D5688", Offset = "0x13D5688", VA = "0x13D5688")]
		internal static bool IsAndroidSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0x13D5784", Offset = "0x13D5784", VA = "0x13D5784")]
		internal static ESubscriptionTransactionType GetTransactionType()
		{
			return default(ESubscriptionTransactionType);
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0x13D593C", Offset = "0x13D593C", VA = "0x13D593C")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x200006B")]
	internal class Android
	{
		[Token(Token = "0x400022C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject _api;

		[Token(Token = "0x400022D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaObject _iAPurchase;

		[Token(Token = "0x400022E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass _unityPlayer;

		[Token(Token = "0x400022F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaObject _user;

		[Token(Token = "0x4000230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject _userStats;

		[Token(Token = "0x4000231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject _subscription;

		[Token(Token = "0x4000232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject _deeplink;

		[Token(Token = "0x1700006E")]
		internal static AndroidJavaClass UnityPlayer
		{
			[Token(Token = "0x6000598")]
			[Address(RVA = "0x13D3BB8", Offset = "0x13D3BB8", VA = "0x13D3BB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		internal static AndroidJavaObject CurrentActivity
		{
			[Token(Token = "0x6000599")]
			[Address(RVA = "0x13D3C54", Offset = "0x13D3C54", VA = "0x13D3C54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000070")]
		internal static AndroidJavaObject CurrentContext
		{
			[Token(Token = "0x600059A")]
			[Address(RVA = "0x13D3CB4", Offset = "0x13D3CB4", VA = "0x13D3CB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x13D3480", Offset = "0x13D3480", VA = "0x13D3480")]
		internal static AndroidJavaObject GetJavaAPI()
		{
			return null;
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0x13D35B4", Offset = "0x13D35B4", VA = "0x13D35B4")]
		internal static AndroidJavaObject GetJavaUser()
		{
			return null;
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x13D36E8", Offset = "0x13D36E8", VA = "0x13D36E8")]
		internal static AndroidJavaObject GetJavaUserStats()
		{
			return null;
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0x13D381C", Offset = "0x13D381C", VA = "0x13D381C")]
		internal static AndroidJavaObject GetJavaIAPurchase()
		{
			return null;
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x13D3950", Offset = "0x13D3950", VA = "0x13D3950")]
		internal static AndroidJavaObject GetJavaSubscription()
		{
			return null;
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0x13D3A84", Offset = "0x13D3A84", VA = "0x13D3A84")]
		internal static AndroidJavaObject GetDeeplink()
		{
			return null;
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x13D3CB8", Offset = "0x13D3CB8", VA = "0x13D3CB8")]
		public Android()
		{
		}
	}
	[Token(Token = "0x200006C")]
	internal class AndroidPluginCallback : AndroidJavaProxy
	{
		[Token(Token = "0x4000233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IAPurchaseCallback callback;

		[Token(Token = "0x4000234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StatusCallback statusCallback;

		[Token(Token = "0x4000235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StatusCallback2 statusCallback2;

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x13D3CC0", Offset = "0x13D3CC0", VA = "0x13D3CC0")]
		internal AndroidPluginCallback(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0x13D3D50", Offset = "0x13D3D50", VA = "0x13D3D50")]
		internal AndroidPluginCallback(StatusCallback callback)
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x13D3DE0", Offset = "0x13D3DE0", VA = "0x13D3DE0")]
		internal AndroidPluginCallback(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0x13D3E70", Offset = "0x13D3E70", VA = "0x13D3E70")]
		internal void onResult(int statusCode, string result)
		{
		}
	}
}
namespace Viveport.Arcade
{
	[Token(Token = "0x200006D")]
	internal class Session
	{
		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x13CA260", Offset = "0x13CA260", VA = "0x13CA260")]
		public Session()
		{
		}
	}
}
namespace Viveport.Core
{
	[Token(Token = "0x200006E")]
	public class Logger
	{
		[Token(Token = "0x4000236")]
		private const string LoggerTypeNameUnity = "UnityEngine.Debug";

		[Token(Token = "0x4000237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _hasDetected;

		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _usingUnityLog;

		[Token(Token = "0x4000239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Type _unityLogType;

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x13CA270", Offset = "0x13CA270", VA = "0x13CA270")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x13CA68C", Offset = "0x13CA68C", VA = "0x13CA68C")]
		private static void ConsoleLog(string message)
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x13CA340", Offset = "0x13CA340", VA = "0x13CA340")]
		private static void UnityLog(string message)
		{
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x13CA728", Offset = "0x13CA728", VA = "0x13CA728")]
		private static Type GetType(string typeName)
		{
			return null;
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x13CA884", Offset = "0x13CA884", VA = "0x13CA884")]
		public Logger()
		{
		}
	}
}
namespace LitJson
{
	[Token(Token = "0x200006F")]
	public enum JsonType
	{
		[Token(Token = "0x400023B")]
		None,
		[Token(Token = "0x400023C")]
		Object,
		[Token(Token = "0x400023D")]
		Array,
		[Token(Token = "0x400023E")]
		String,
		[Token(Token = "0x400023F")]
		Int,
		[Token(Token = "0x4000240")]
		Long,
		[Token(Token = "0x4000241")]
		Double,
		[Token(Token = "0x4000242")]
		Boolean
	}
	[Token(Token = "0x2000070")]
	public interface IJsonWrapper : IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary
	{
		[Token(Token = "0x17000071")]
		bool IsArray
		{
			[Token(Token = "0x60005A7")]
			get;
		}

		[Token(Token = "0x17000072")]
		bool IsBoolean
		{
			[Token(Token = "0x60005A8")]
			get;
		}

		[Token(Token = "0x17000073")]
		bool IsDouble
		{
			[Token(Token = "0x60005A9")]
			get;
		}

		[Token(Token = "0x17000074")]
		bool IsInt
		{
			[Token(Token = "0x60005AA")]
			get;
		}

		[Token(Token = "0x17000075")]
		bool IsLong
		{
			[Token(Token = "0x60005AB")]
			get;
		}

		[Token(Token = "0x17000076")]
		bool IsObject
		{
			[Token(Token = "0x60005AC")]
			get;
		}

		[Token(Token = "0x17000077")]
		bool IsString
		{
			[Token(Token = "0x60005AD")]
			get;
		}

		[Token(Token = "0x60005AE")]
		bool GetBoolean();

		[Token(Token = "0x60005AF")]
		double GetDouble();

		[Token(Token = "0x60005B0")]
		int GetInt();

		[Token(Token = "0x60005B1")]
		JsonType GetJsonType();

		[Token(Token = "0x60005B2")]
		long GetLong();

		[Token(Token = "0x60005B3")]
		string GetString();

		[Token(Token = "0x60005B4")]
		void SetBoolean(bool val);

		[Token(Token = "0x60005B5")]
		void SetDouble(double val);

		[Token(Token = "0x60005B6")]
		void SetInt(int val);

		[Token(Token = "0x60005B7")]
		void SetJsonType(JsonType type);

		[Token(Token = "0x60005B8")]
		void SetLong(long val);

		[Token(Token = "0x60005B9")]
		void SetString(string val);

		[Token(Token = "0x60005BA")]
		string ToJson();

		[Token(Token = "0x60005BB")]
		void ToJson(JsonWriter writer);
	}
	[Token(Token = "0x2000071")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBC240C", Offset = "0xBC240C")]
	public class JsonData : IJsonWrapper, IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary, IEquatable<JsonData>
	{
		[Token(Token = "0x4000243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IList<JsonData> inst_array;

		[Token(Token = "0x4000244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inst_boolean;

		[Token(Token = "0x4000245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double inst_double;

		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int inst_int;

		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private long inst_long;

		[Token(Token = "0x4000248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDictionary<string, JsonData> inst_object;

		[Token(Token = "0x4000249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string inst_string;

		[Token(Token = "0x400024A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string json;

		[Token(Token = "0x400024B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonType type;

		[Token(Token = "0x400024C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IList<KeyValuePair<string, JsonData>> object_list;

		[Token(Token = "0x17000078")]
		public int Count
		{
			[Token(Token = "0x60005BC")]
			[Address(RVA = "0x16E0144", Offset = "0x16E0144", VA = "0x16E0144")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000079")]
		public bool IsArray
		{
			[Token(Token = "0x60005BD")]
			[Address(RVA = "0x16E02CC", Offset = "0x16E02CC", VA = "0x16E02CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007A")]
		public bool IsBoolean
		{
			[Token(Token = "0x60005BE")]
			[Address(RVA = "0x16E02DC", Offset = "0x16E02DC", VA = "0x16E02DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007B")]
		public bool IsDouble
		{
			[Token(Token = "0x60005BF")]
			[Address(RVA = "0x16E02EC", Offset = "0x16E02EC", VA = "0x16E02EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007C")]
		public bool IsInt
		{
			[Token(Token = "0x60005C0")]
			[Address(RVA = "0x16E02FC", Offset = "0x16E02FC", VA = "0x16E02FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007D")]
		public bool IsLong
		{
			[Token(Token = "0x60005C1")]
			[Address(RVA = "0x16E030C", Offset = "0x16E030C", VA = "0x16E030C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007E")]
		public bool IsObject
		{
			[Token(Token = "0x60005C2")]
			[Address(RVA = "0x16E031C", Offset = "0x16E031C", VA = "0x16E031C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007F")]
		public bool IsString
		{
			[Token(Token = "0x60005C3")]
			[Address(RVA = "0x16E032C", Offset = "0x16E032C", VA = "0x16E032C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000080")]
		private int System.Collections.ICollection.Count
		{
			[Token(Token = "0x60005C4")]
			[Address(RVA = "0x16E033C", Offset = "0x16E033C", VA = "0x16E033C", Slot = "37")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000081")]
		private bool System.Collections.ICollection.IsSynchronized
		{
			[Token(Token = "0x60005C5")]
			[Address(RVA = "0x16E0340", Offset = "0x16E0340", VA = "0x16E0340", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000082")]
		private object System.Collections.ICollection.SyncRoot
		{
			[Token(Token = "0x60005C6")]
			[Address(RVA = "0x16E03FC", Offset = "0x16E03FC", VA = "0x16E03FC", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		private bool System.Collections.IDictionary.IsFixedSize
		{
			[Token(Token = "0x60005C7")]
			[Address(RVA = "0x16E04B8", Offset = "0x16E04B8", VA = "0x16E04B8", Slot = "54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000084")]
		private bool System.Collections.IDictionary.IsReadOnly
		{
			[Token(Token = "0x60005C8")]
			[Address(RVA = "0x16E06A4", Offset = "0x16E06A4", VA = "0x16E06A4", Slot = "53")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000085")]
		private ICollection System.Collections.IDictionary.Keys
		{
			[Token(Token = "0x60005C9")]
			[Address(RVA = "0x16E0760", Offset = "0x16E0760", VA = "0x16E0760", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000086")]
		private ICollection System.Collections.IDictionary.Values
		{
			[Token(Token = "0x60005CA")]
			[Address(RVA = "0x16E0AA0", Offset = "0x16E0AA0", VA = "0x16E0AA0", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000087")]
		private bool LitJson.IJsonWrapper.IsArray
		{
			[Token(Token = "0x60005CB")]
			[Address(RVA = "0x16E0DE0", Offset = "0x16E0DE0", VA = "0x16E0DE0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000088")]
		private bool LitJson.IJsonWrapper.IsBoolean
		{
			[Token(Token = "0x60005CC")]
			[Address(RVA = "0x16E0DF0", Offset = "0x16E0DF0", VA = "0x16E0DF0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000089")]
		private bool LitJson.IJsonWrapper.IsDouble
		{
			[Token(Token = "0x60005CD")]
			[Address(RVA = "0x16E0E00", Offset = "0x16E0E00", VA = "0x16E0E00", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008A")]
		private bool LitJson.IJsonWrapper.IsInt
		{
			[Token(Token = "0x60005CE")]
			[Address(RVA = "0x16E0E10", Offset = "0x16E0E10", VA = "0x16E0E10", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008B")]
		private bool LitJson.IJsonWrapper.IsLong
		{
			[Token(Token = "0x60005CF")]
			[Address(RVA = "0x16E0E20", Offset = "0x16E0E20", VA = "0x16E0E20", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008C")]
		private bool LitJson.IJsonWrapper.IsObject
		{
			[Token(Token = "0x60005D0")]
			[Address(RVA = "0x16E0E30", Offset = "0x16E0E30", VA = "0x16E0E30", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008D")]
		private bool LitJson.IJsonWrapper.IsString
		{
			[Token(Token = "0x60005D1")]
			[Address(RVA = "0x16E0E40", Offset = "0x16E0E40", VA = "0x16E0E40", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008E")]
		private bool System.Collections.IList.IsFixedSize
		{
			[Token(Token = "0x60005D2")]
			[Address(RVA = "0x16E0E50", Offset = "0x16E0E50", VA = "0x16E0E50", Slot = "31")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008F")]
		private bool System.Collections.IList.IsReadOnly
		{
			[Token(Token = "0x60005D3")]
			[Address(RVA = "0x16E1008", Offset = "0x16E1008", VA = "0x16E1008", Slot = "30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000090")]
		private object System.Collections.IDictionary.Item
		{
			[Token(Token = "0x60005D4")]
			[Address(RVA = "0x16E10C4", Offset = "0x16E10C4", VA = "0x16E10C4", Slot = "46")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005D5")]
			[Address(RVA = "0x16E118C", Offset = "0x16E118C", VA = "0x16E118C", Slot = "47")]
			set
			{
			}
		}

		[Token(Token = "0x17000091")]
		private object System.Collections.Specialized.IOrderedDictionary.Item
		{
			[Token(Token = "0x60005D6")]
			[Address(RVA = "0x16E16A4", Offset = "0x16E16A4", VA = "0x16E16A4", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005D7")]
			[Address(RVA = "0x16E1774", Offset = "0x16E1774", VA = "0x16E1774", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x17000092")]
		private object System.Collections.IList.Item
		{
			[Token(Token = "0x60005D8")]
			[Address(RVA = "0x16E197C", Offset = "0x16E197C", VA = "0x16E197C", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005D9")]
			[Address(RVA = "0x16E1A44", Offset = "0x16E1A44", VA = "0x16E1A44", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x17000093")]
		public JsonData Item
		{
			[Token(Token = "0x60005DA")]
			[Address(RVA = "0x16E1D28", Offset = "0x16E1D28", VA = "0x16E1D28")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005DB")]
			[Address(RVA = "0x16E12FC", Offset = "0x16E12FC", VA = "0x16E12FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000094")]
		public JsonData Item
		{
			[Token(Token = "0x60005DC")]
			[Address(RVA = "0x16E1DF0", Offset = "0x16E1DF0", VA = "0x16E1DF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005DD")]
			[Address(RVA = "0x16E1A88", Offset = "0x16E1A88", VA = "0x16E1A88")]
			set
			{
			}
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x16E1F4C", Offset = "0x16E1F4C", VA = "0x16E1F4C")]
		public JsonData()
		{
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x16E1F54", Offset = "0x16E1F54", VA = "0x16E1F54")]
		public JsonData(bool boolean)
		{
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x16E1F8C", Offset = "0x16E1F8C", VA = "0x16E1F8C")]
		public JsonData(double number)
		{
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x16E1FC8", Offset = "0x16E1FC8", VA = "0x16E1FC8")]
		public JsonData(int number)
		{
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x16E1FFC", Offset = "0x16E1FFC", VA = "0x16E1FFC")]
		public JsonData(long number)
		{
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x16E2030", Offset = "0x16E2030", VA = "0x16E2030")]
		public JsonData(object obj)
		{
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x16E222C", Offset = "0x16E222C", VA = "0x16E222C")]
		public JsonData(string str)
		{
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x16E2268", Offset = "0x16E2268", VA = "0x16E2268")]
		public static implicit operator JsonData(bool data)
		{
			return null;
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x16E22D8", Offset = "0x16E22D8", VA = "0x16E22D8")]
		public static implicit operator JsonData(double data)
		{
			return null;
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x16E234C", Offset = "0x16E234C", VA = "0x16E234C")]
		public static implicit operator JsonData(int data)
		{
			return null;
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x16E23B8", Offset = "0x16E23B8", VA = "0x16E23B8")]
		public static implicit operator JsonData(long data)
		{
			return null;
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x16E2424", Offset = "0x16E2424", VA = "0x16E2424")]
		public static implicit operator JsonData(string data)
		{
			return null;
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x16E249C", Offset = "0x16E249C", VA = "0x16E249C")]
		public static explicit operator bool(JsonData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x16E2530", Offset = "0x16E2530", VA = "0x16E2530")]
		public static explicit operator double(JsonData data)
		{
			return default(double);
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x16E25C4", Offset = "0x16E25C4", VA = "0x16E25C4")]
		public static explicit operator int(JsonData data)
		{
			return default(int);
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x16E2658", Offset = "0x16E2658", VA = "0x16E2658")]
		public static explicit operator long(JsonData data)
		{
			return default(long);
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x16E26EC", Offset = "0x16E26EC", VA = "0x16E26EC")]
		public static explicit operator string(JsonData data)
		{
			return null;
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x16E2780", Offset = "0x16E2780", VA = "0x16E2780", Slot = "36")]
		private void System.Collections.ICollection.CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x16E2850", Offset = "0x16E2850", VA = "0x16E2850", Slot = "51")]
		private void System.Collections.IDictionary.Add(object key, object value)
		{
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x16E2A10", Offset = "0x16E2A10", VA = "0x16E2A10", Slot = "52")]
		private void System.Collections.IDictionary.Clear()
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x16E2B50", Offset = "0x16E2B50", VA = "0x16E2B50", Slot = "50")]
		private bool System.Collections.IDictionary.Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x16E2C1C", Offset = "0x16E2C1C", VA = "0x16E2C1C", Slot = "55")]
		private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x16E2CC4", Offset = "0x16E2CC4", VA = "0x16E2CC4", Slot = "56")]
		private void System.Collections.IDictionary.Remove(object key)
		{
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x16E2F50", Offset = "0x16E2F50", VA = "0x16E2F50", Slot = "40")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x16E3008", Offset = "0x16E3008", VA = "0x16E3008", Slot = "11")]
		private bool LitJson.IJsonWrapper.GetBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x16E3094", Offset = "0x16E3094", VA = "0x16E3094", Slot = "12")]
		private double LitJson.IJsonWrapper.GetDouble()
		{
			return default(double);
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x16E3120", Offset = "0x16E3120", VA = "0x16E3120", Slot = "13")]
		private int LitJson.IJsonWrapper.GetInt()
		{
			return default(int);
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x16E31AC", Offset = "0x16E31AC", VA = "0x16E31AC", Slot = "15")]
		private long LitJson.IJsonWrapper.GetLong()
		{
			return default(long);
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x16E3238", Offset = "0x16E3238", VA = "0x16E3238", Slot = "16")]
		private string LitJson.IJsonWrapper.GetString()
		{
			return null;
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x16E32C4", Offset = "0x16E32C4", VA = "0x16E32C4", Slot = "17")]
		private void LitJson.IJsonWrapper.SetBoolean(bool val)
		{
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x16E32E0", Offset = "0x16E32E0", VA = "0x16E32E0", Slot = "18")]
		private void LitJson.IJsonWrapper.SetDouble(double val)
		{
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x16E32F8", Offset = "0x16E32F8", VA = "0x16E32F8", Slot = "19")]
		private void LitJson.IJsonWrapper.SetInt(int val)
		{
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x16E3310", Offset = "0x16E3310", VA = "0x16E3310", Slot = "21")]
		private void LitJson.IJsonWrapper.SetLong(long val)
		{
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x16E3328", Offset = "0x16E3328", VA = "0x16E3328", Slot = "22")]
		private void LitJson.IJsonWrapper.SetString(string val)
		{
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0x16E3360", Offset = "0x16E3360", VA = "0x16E3360", Slot = "23")]
		private string LitJson.IJsonWrapper.ToJson()
		{
			return null;
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0x16E3430", Offset = "0x16E3430", VA = "0x16E3430", Slot = "24")]
		private void LitJson.IJsonWrapper.ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0x16E3468", Offset = "0x16E3468", VA = "0x16E3468", Slot = "27")]
		private int System.Collections.IList.Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0x16E3554", Offset = "0x16E3554", VA = "0x16E3554", Slot = "29")]
		private void System.Collections.IList.Clear()
		{
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0x16E3620", Offset = "0x16E3620", VA = "0x16E3620", Slot = "28")]
		private bool System.Collections.IList.Contains(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x16E36EC", Offset = "0x16E36EC", VA = "0x16E36EC", Slot = "32")]
		private int System.Collections.IList.IndexOf(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x16E37B8", Offset = "0x16E37B8", VA = "0x16E37B8", Slot = "33")]
		private void System.Collections.IList.Insert(int index, object value)
		{
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x16E389C", Offset = "0x16E389C", VA = "0x16E389C", Slot = "34")]
		private void System.Collections.IList.Remove(object value)
		{
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x16E3978", Offset = "0x16E3978", VA = "0x16E3978", Slot = "35")]
		private void System.Collections.IList.RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x16E3A54", Offset = "0x16E3A54", VA = "0x16E3A54", Slot = "43")]
		private IDictionaryEnumerator System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0x16E3B7C", Offset = "0x16E3B7C", VA = "0x16E3B7C", Slot = "44")]
		private void System.Collections.Specialized.IOrderedDictionary.Insert(int idx, object key, object value)
		{
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x16E3CC8", Offset = "0x16E3CC8", VA = "0x16E3CC8", Slot = "45")]
		private void System.Collections.Specialized.IOrderedDictionary.RemoveAt(int idx)
		{
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x16E0200", Offset = "0x16E0200", VA = "0x16E0200")]
		private ICollection EnsureCollection()
		{
			return null;
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x16E0574", Offset = "0x16E0574", VA = "0x16E0574")]
		private IDictionary EnsureDictionary()
		{
			return null;
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x16E0F0C", Offset = "0x16E0F0C", VA = "0x16E0F0C")]
		private IList EnsureList()
		{
			return null;
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x16E1260", Offset = "0x16E1260", VA = "0x16E1260")]
		private JsonData ToJsonData(object obj)
		{
			return null;
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x16E3E84", Offset = "0x16E3E84", VA = "0x16E3E84")]
		private static void WriteJson(IJsonWrapper obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x16E346C", Offset = "0x16E346C", VA = "0x16E346C")]
		public int Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x16E52E4", Offset = "0x16E52E4", VA = "0x16E52E4")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0x16E5400", Offset = "0x16E5400", VA = "0x16E5400", Slot = "57")]
		public bool Equals(JsonData x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x16E54EC", Offset = "0x16E54EC", VA = "0x16E54EC", Slot = "14")]
		public JsonType GetJsonType()
		{
			return default(JsonType);
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0x16E54F4", Offset = "0x16E54F4", VA = "0x16E54F4", Slot = "20")]
		public void SetJsonType(JsonType type)
		{
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0x16E3364", Offset = "0x16E3364", VA = "0x16E3364")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x16E3434", Offset = "0x16E3434", VA = "0x16E3434")]
		public void ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x16E56E8", Offset = "0x16E56E8", VA = "0x16E56E8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000072")]
	internal class OrderedDictionaryEnumerator : IDictionaryEnumerator, IEnumerator
	{
		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<KeyValuePair<string, JsonData>> list_enumerator;

		[Token(Token = "0x17000095")]
		public object Current
		{
			[Token(Token = "0x6000619")]
			[Address(RVA = "0x16F28BC", Offset = "0x16F28BC", VA = "0x16F28BC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000096")]
		public DictionaryEntry Entry
		{
			[Token(Token = "0x600061A")]
			[Address(RVA = "0x16F2928", Offset = "0x16F2928", VA = "0x16F2928", Slot = "6")]
			get
			{
				return default(DictionaryEntry);
			}
		}

		[Token(Token = "0x17000097")]
		public object Key
		{
			[Token(Token = "0x600061B")]
			[Address(RVA = "0x16F2A08", Offset = "0x16F2A08", VA = "0x16F2A08", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000098")]
		public object Value
		{
			[Token(Token = "0x600061C")]
			[Address(RVA = "0x16F2AB8", Offset = "0x16F2AB8", VA = "0x16F2AB8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x16E3B48", Offset = "0x16E3B48", VA = "0x16E3B48")]
		public OrderedDictionaryEnumerator(IEnumerator<KeyValuePair<string, JsonData>> enumerator)
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0x16F2B70", Offset = "0x16F2B70", VA = "0x16F2B70", Slot = "7")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0x16F2C20", Offset = "0x16F2C20", VA = "0x16F2C20", Slot = "9")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000073")]
	public class JsonException : ApplicationException
	{
		[Token(Token = "0x6000620")]
		[Address(RVA = "0x16E57C8", Offset = "0x16E57C8", VA = "0x16E57C8")]
		public JsonException()
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x16E57D0", Offset = "0x16E57D0", VA = "0x16E57D0")]
		internal JsonException(ParserToken token)
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0x16E5860", Offset = "0x16E5860", VA = "0x16E5860")]
		internal JsonException(ParserToken token, Exception inner_exception)
		{
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0x16E5900", Offset = "0x16E5900", VA = "0x16E5900")]
		internal JsonException(int c)
		{
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0x16E5990", Offset = "0x16E5990", VA = "0x16E5990")]
		internal JsonException(int c, Exception inner_exception)
		{
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0x16E5A30", Offset = "0x16E5A30", VA = "0x16E5A30")]
		public JsonException(string message)
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0x16E5A38", Offset = "0x16E5A38", VA = "0x16E5A38")]
		public JsonException(string message, Exception inner_exception)
		{
		}
	}
	[Token(Token = "0x2000074")]
	internal struct PropertyMetadata
	{
		[Token(Token = "0x400024E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MemberInfo Info;

		[Token(Token = "0x400024F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsField;

		[Token(Token = "0x4000250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type Type;
	}
	[Token(Token = "0x2000075")]
	internal struct ArrayMetadata
	{
		[Token(Token = "0x4000251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4000252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_array;

		[Token(Token = "0x4000253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool is_list;

		[Token(Token = "0x17000099")]
		public Type ElementType
		{
			[Token(Token = "0x6000627")]
			[Address(RVA = "0xD06F94", Offset = "0xD06F94", VA = "0xD06F94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000628")]
			[Address(RVA = "0xD06F9C", Offset = "0xD06F9C", VA = "0xD06F9C")]
			set
			{
			}
		}

		[Token(Token = "0x1700009A")]
		public bool IsArray
		{
			[Token(Token = "0x6000629")]
			[Address(RVA = "0xD06FA4", Offset = "0xD06FA4", VA = "0xD06FA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600062A")]
			[Address(RVA = "0xD06FAC", Offset = "0xD06FAC", VA = "0xD06FAC")]
			set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public bool IsList
		{
			[Token(Token = "0x600062B")]
			[Address(RVA = "0xD06FB8", Offset = "0xD06FB8", VA = "0xD06FB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600062C")]
			[Address(RVA = "0xD06FC0", Offset = "0xD06FC0", VA = "0xD06FC0")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000076")]
	internal struct ObjectMetadata
	{
		[Token(Token = "0x4000254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4000255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_dictionary;

		[Token(Token = "0x4000256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IDictionary<string, PropertyMetadata> properties;

		[Token(Token = "0x1700009C")]
		public Type ElementType
		{
			[Token(Token = "0x600062D")]
			[Address(RVA = "0xD07008", Offset = "0xD07008", VA = "0xD07008")]
			get
			{
				return null;
			}
			[Token(Token = "0x600062E")]
			[Address(RVA = "0xD07010", Offset = "0xD07010", VA = "0xD07010")]
			set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public bool IsDictionary
		{
			[Token(Token = "0x600062F")]
			[Address(RVA = "0xD07018", Offset = "0xD07018", VA = "0xD07018")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000630")]
			[Address(RVA = "0xD07020", Offset = "0xD07020", VA = "0xD07020")]
			set
			{
			}
		}

		[Token(Token = "0x1700009E")]
		public IDictionary<string, PropertyMetadata> Properties
		{
			[Token(Token = "0x6000631")]
			[Address(RVA = "0xD0702C", Offset = "0xD0702C", VA = "0xD0702C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000632")]
			[Address(RVA = "0xD07034", Offset = "0xD07034", VA = "0xD07034")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000077")]
	internal delegate void ExporterFunc(object obj, JsonWriter writer);
	[Token(Token = "0x2000078")]
	public delegate void ExporterFunc<T>(T obj, JsonWriter writer);
	[Token(Token = "0x2000079")]
	internal delegate object ImporterFunc(object input);
	[Token(Token = "0x200007A")]
	public delegate TValue ImporterFunc<TJson, TValue>(TJson input);
	[Token(Token = "0x200007B")]
	public delegate IJsonWrapper WrapperFactory();
	[Token(Token = "0x200007C")]
	public class JsonMapper
	{
		[Serializable]
		[Token(Token = "0x2000279")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC91C4", Offset = "0xBC91C4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000CD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ExporterFunc <>9__23_0;

			[Token(Token = "0x4000CD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static ExporterFunc <>9__23_1;

			[Token(Token = "0x4000CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static ExporterFunc <>9__23_2;

			[Token(Token = "0x4000CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static ExporterFunc <>9__23_3;

			[Token(Token = "0x4000CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static ExporterFunc <>9__23_4;

			[Token(Token = "0x4000CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static ExporterFunc <>9__23_5;

			[Token(Token = "0x4000CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static ExporterFunc <>9__23_6;

			[Token(Token = "0x4000CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static ExporterFunc <>9__23_7;

			[Token(Token = "0x4000CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static ExporterFunc <>9__23_8;

			[Token(Token = "0x4000CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static ExporterFunc <>9__23_9;

			[Token(Token = "0x4000CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static ImporterFunc <>9__24_0;

			[Token(Token = "0x4000CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static ImporterFunc <>9__24_1;

			[Token(Token = "0x4000CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static ImporterFunc <>9__24_2;

			[Token(Token = "0x4000CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static ImporterFunc <>9__24_3;

			[Token(Token = "0x4000CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static ImporterFunc <>9__24_4;

			[Token(Token = "0x4000CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static ImporterFunc <>9__24_5;

			[Token(Token = "0x4000CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static ImporterFunc <>9__24_6;

			[Token(Token = "0x4000CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static ImporterFunc <>9__24_7;

			[Token(Token = "0x4000CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static ImporterFunc <>9__24_8;

			[Token(Token = "0x4000CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static ImporterFunc <>9__24_9;

			[Token(Token = "0x4000CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static ImporterFunc <>9__24_10;

			[Token(Token = "0x4000CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static ImporterFunc <>9__24_11;

			[Token(Token = "0x4000CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static ImporterFunc <>9__24_12;

			[Token(Token = "0x4000CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public static WrapperFactory <>9__29_0;

			[Token(Token = "0x4000CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public static WrapperFactory <>9__30_0;

			[Token(Token = "0x4000CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public static WrapperFactory <>9__31_0;

			[Token(Token = "0x6000FC2")]
			[Address(RVA = "0x16ED590", Offset = "0x16ED590", VA = "0x16ED590")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FC3")]
			[Address(RVA = "0x16ED598", Offset = "0x16ED598", VA = "0x16ED598")]
			internal void <RegisterBaseExporters>b__23_0(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000FC4")]
			[Address(RVA = "0x16ED650", Offset = "0x16ED650", VA = "0x16ED650")]
			internal void <RegisterBaseExporters>b__23_1(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000FC5")]
			[Address(RVA = "0x16ED708", Offset = "0x16ED708", VA = "0x16ED708")]
			internal void <RegisterBaseExporters>b__23_2(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0x16ED7F4", Offset = "0x16ED7F4", VA = "0x16ED7F4")]
			internal void <RegisterBaseExporters>b__23_3(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0x16ED968", Offset = "0x16ED968", VA = "0x16ED968")]
			internal void <RegisterBaseExporters>b__23_4(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000FC8")]
			[Address(RVA = "0x16EDA20", Offset = "0x16EDA20", VA = "0x16EDA20")]
			internal void <RegisterBaseExporters>b__23_5(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000FC9")]
			[Address(RVA = "0x16EDAD8", Offset = "0x16EDAD8", VA = "0x16EDAD8")]
			internal void <RegisterBaseExporters>b__23_6(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0x16EDB90", Offset = "0x16EDB90", VA = "0x16EDB90")]
			internal void <RegisterBaseExporters>b__23_7(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000FCB")]
			[Address(RVA = "0x16EDC48", Offset = "0x16EDC48", VA = "0x16EDC48")]
			internal void <RegisterBaseExporters>b__23_8(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0x16EDCD4", Offset = "0x16EDCD4", VA = "0x16EDCD4")]
			internal void <RegisterBaseExporters>b__23_9(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0x16EDD64", Offset = "0x16EDD64", VA = "0x16EDD64")]
			internal object <RegisterBaseImporters>b__24_0(object input)
			{
				return null;
			}

			[Token(Token = "0x6000FCE")]
			[Address(RVA = "0x16EDE28", Offset = "0x16EDE28", VA = "0x16EDE28")]
			internal object <RegisterBaseImporters>b__24_1(object input)
			{
				return null;
			}

			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0x16EDEEC", Offset = "0x16EDEEC", VA = "0x16EDEEC")]
			internal object <RegisterBaseImporters>b__24_2(object input)
			{
				return null;
			}

			[Token(Token = "0x6000FD0")]
			[Address(RVA = "0x16EDFB0", Offset = "0x16EDFB0", VA = "0x16EDFB0")]
			internal object <RegisterBaseImporters>b__24_3(object input)
			{
				return null;
			}

			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0x16EE074", Offset = "0x16EE074", VA = "0x16EE074")]
			internal object <RegisterBaseImporters>b__24_4(object input)
			{
				return null;
			}

			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0x16EE138", Offset = "0x16EE138", VA = "0x16EE138")]
			internal object <RegisterBaseImporters>b__24_5(object input)
			{
				return null;
			}

			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0x16EE1FC", Offset = "0x16EE1FC", VA = "0x16EE1FC")]
			internal object <RegisterBaseImporters>b__24_6(object input)
			{
				return null;
			}

			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0x16EE2BC", Offset = "0x16EE2BC", VA = "0x16EE2BC")]
			internal object <RegisterBaseImporters>b__24_7(object input)
			{
				return null;
			}

			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0x16EE380", Offset = "0x16EE380", VA = "0x16EE380")]
			internal object <RegisterBaseImporters>b__24_8(object input)
			{
				return null;
			}

			[Token(Token = "0x6000FD6")]
			[Address(RVA = "0x16EE440", Offset = "0x16EE440", VA = "0x16EE440")]
			internal object <RegisterBaseImporters>b__24_9(object input)
			{
				return null;
			}

			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0x16EE504", Offset = "0x16EE504", VA = "0x16EE504")]
			internal object <RegisterBaseImporters>b__24_10(object input)
			{
				return null;
			}

			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0x16EE5C8", Offset = "0x16EE5C8", VA = "0x16EE5C8")]
			internal object <RegisterBaseImporters>b__24_11(object input)
			{
				return null;
			}

			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0x16EE684", Offset = "0x16EE684", VA = "0x16EE684")]
			internal object <RegisterBaseImporters>b__24_12(object input)
			{
				return null;
			}

			[Token(Token = "0x6000FDA")]
			[Address(RVA = "0x16EE774", Offset = "0x16EE774", VA = "0x16EE774")]
			internal IJsonWrapper <ToObject>b__29_0()
			{
				return null;
			}

			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0x16EE7D0", Offset = "0x16EE7D0", VA = "0x16EE7D0")]
			internal IJsonWrapper <ToObject>b__30_0()
			{
				return null;
			}

			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0x16EE82C", Offset = "0x16EE82C", VA = "0x16EE82C")]
			internal IJsonWrapper <ToObject>b__31_0()
			{
				return null;
			}
		}

		[Token(Token = "0x200027A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC91D4", Offset = "0xBC91D4")]
		private sealed class <>c__DisplayClass37_0<T>
		{
			[Token(Token = "0x4000CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExporterFunc<T> exporter;

			[Token(Token = "0x6000FDD")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6000FDE")]
			internal void <RegisterExporter>b__0(object obj, JsonWriter writer)
			{
			}
		}

		[Token(Token = "0x200027B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC91E4", Offset = "0xBC91E4")]
		private sealed class <>c__DisplayClass38_0<TJson, TValue>
		{
			[Token(Token = "0x4000CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImporterFunc<TJson, TValue> importer;

			[Token(Token = "0x6000FDF")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6000FE0")]
			internal object <RegisterImporter>b__0(object input)
			{
				return null;
			}
		}

		[Token(Token = "0x4000257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int max_nesting_depth;

		[Token(Token = "0x4000258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IFormatProvider datetime_format;

		[Token(Token = "0x4000259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IDictionary<Type, ExporterFunc> base_exporters_table;

		[Token(Token = "0x400025A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IDictionary<Type, ExporterFunc> custom_exporters_table;

		[Token(Token = "0x400025B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> base_importers_table;

		[Token(Token = "0x400025C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> custom_importers_table;

		[Token(Token = "0x400025D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IDictionary<Type, ArrayMetadata> array_metadata;

		[Token(Token = "0x400025E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly object array_metadata_lock;

		[Token(Token = "0x400025F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IDictionary<Type, IDictionary<Type, MethodInfo>> conv_ops;

		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly object conv_ops_lock;

		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IDictionary<Type, ObjectMetadata> object_metadata;

		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly object object_metadata_lock;

		[Token(Token = "0x4000263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IDictionary<Type, IList<PropertyMetadata>> type_properties;

		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly object type_properties_lock;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static JsonWriter static_writer;

		[Token(Token = "0x4000266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static readonly object static_writer_lock;

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x16E5A40", Offset = "0x16E5A40", VA = "0x16E5A40")]
		static JsonMapper()
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x16E7AD8", Offset = "0x16E7AD8", VA = "0x16E7AD8")]
		private static void AddArrayMetadata(Type type)
		{
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0x16E7F88", Offset = "0x16E7F88", VA = "0x16E7F88")]
		private static void AddObjectMetadata(Type type)
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x16E8750", Offset = "0x16E8750", VA = "0x16E8750")]
		private static void AddTypeProperties(Type type)
		{
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x16E8CD4", Offset = "0x16E8CD4", VA = "0x16E8CD4")]
		private static MethodInfo GetConvOp(Type t1, Type t2)
		{
			return null;
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0x16E95A8", Offset = "0x16E95A8", VA = "0x16E95A8")]
		private static object ReadValue(Type inst_type, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x16EAA1C", Offset = "0x16EAA1C", VA = "0x16EAA1C")]
		private static IJsonWrapper ReadValue(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x16E5E34", Offset = "0x16E5E34", VA = "0x16E5E34")]
		private static void RegisterBaseExporters()
		{
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x16E6C90", Offset = "0x16E6C90", VA = "0x16E6C90")]
		private static void RegisterBaseImporters()
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0x16EB2C0", Offset = "0x16EB2C0", VA = "0x16EB2C0")]
		private static void RegisterImporter(IDictionary<Type, IDictionary<Type, ImporterFunc>> table, Type json_type, Type value_type, ImporterFunc importer)
		{
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0x16EB504", Offset = "0x16EB504", VA = "0x16EB504")]
		private static void WriteValue(object obj, JsonWriter writer, bool writer_is_private, int depth)
		{
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0x16ECB00", Offset = "0x16ECB00", VA = "0x16ECB00")]
		public static string ToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0x16ECD58", Offset = "0x16ECD58", VA = "0x16ECD58")]
		public static void ToJson(object obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x16ECDD4", Offset = "0x16ECDD4", VA = "0x16ECDD4")]
		public static JsonData ToObject(JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x16ECFA8", Offset = "0x16ECFA8", VA = "0x16ECFA8")]
		public static JsonData ToObject(TextReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x16ED11C", Offset = "0x16ED11C", VA = "0x16ED11C")]
		public static JsonData ToObject(string json)
		{
			return null;
		}

		[Token(Token = "0x6000657")]
		public static T ToObject<T>(JsonReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6000658")]
		public static T ToObject<T>(TextReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6000659")]
		public static T ToObject<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x16ECF34", Offset = "0x16ECF34", VA = "0x16ECF34")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0x16ED268", Offset = "0x16ED268", VA = "0x16ED268")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, string json)
		{
			return null;
		}

		[Token(Token = "0x600065C")]
		public static void RegisterExporter<T>(ExporterFunc<T> exporter)
		{
		}

		[Token(Token = "0x600065D")]
		public static void RegisterImporter<TJson, TValue>(ImporterFunc<TJson, TValue> importer)
		{
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0x16ED370", Offset = "0x16ED370", VA = "0x16ED370")]
		public static void UnregisterExporters()
		{
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x16ED448", Offset = "0x16ED448", VA = "0x16ED448")]
		public static void UnregisterImporters()
		{
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x16ED520", Offset = "0x16ED520", VA = "0x16ED520")]
		public JsonMapper()
		{
		}
	}
	[Token(Token = "0x200007D")]
	public enum JsonToken
	{
		[Token(Token = "0x4000268")]
		None,
		[Token(Token = "0x4000269")]
		ObjectStart,
		[Token(Token = "0x400026A")]
		PropertyName,
		[Token(Token = "0x400026B")]
		ObjectEnd,
		[Token(Token = "0x400026C")]
		ArrayStart,
		[Token(Token = "0x400026D")]
		ArrayEnd,
		[Token(Token = "0x400026E")]
		Int,
		[Token(Token = "0x400026F")]
		Long,
		[Token(Token = "0x4000270")]
		Double,
		[Token(Token = "0x4000271")]
		String,
		[Token(Token = "0x4000272")]
		Boolean,
		[Token(Token = "0x4000273")]
		Null
	}
	[Token(Token = "0x200007E")]
	public class JsonReader
	{
		[Token(Token = "0x4000274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<int, IDictionary<int, int[]>> parse_table;

		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stack<int> automaton_stack;

		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int current_input;

		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int current_symbol;

		[Token(Token = "0x4000278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool end_of_json;

		[Token(Token = "0x4000279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool end_of_input;

		[Token(Token = "0x400027A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Lexer lexer;

		[Token(Token = "0x400027B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool parser_in_string;

		[Token(Token = "0x400027C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool parser_return;

		[Token(Token = "0x400027D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool read_started;

		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextReader reader;

		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool reader_is_owned;

		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private object token_value;

		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonToken token;

		[Token(Token = "0x1700009F")]
		public bool AllowComments
		{
			[Token(Token = "0x6000661")]
			[Address(RVA = "0x16EE888", Offset = "0x16EE888", VA = "0x16EE888")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000662")]
			[Address(RVA = "0x16EE8A4", Offset = "0x16EE8A4", VA = "0x16EE8A4")]
			set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x6000663")]
			[Address(RVA = "0x16EE8C4", Offset = "0x16EE8C4", VA = "0x16EE8C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000664")]
			[Address(RVA = "0x16EE8E0", Offset = "0x16EE8E0", VA = "0x16EE8E0")]
			set
			{
			}
		}

		[Token(Token = "0x170000A1")]
		public bool EndOfInput
		{
			[Token(Token = "0x6000665")]
			[Address(RVA = "0x16EE900", Offset = "0x16EE900", VA = "0x16EE900")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A2")]
		public bool EndOfJson
		{
			[Token(Token = "0x6000666")]
			[Address(RVA = "0x16EE908", Offset = "0x16EE908", VA = "0x16EE908")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A3")]
		public JsonToken Token
		{
			[Token(Token = "0x6000667")]
			[Address(RVA = "0x16EE910", Offset = "0x16EE910", VA = "0x16EE910")]
			get
			{
				return default(JsonToken);
			}
		}

		[Token(Token = "0x170000A4")]
		public object Value
		{
			[Token(Token = "0x6000668")]
			[Address(RVA = "0x16EE918", Offset = "0x16EE918", VA = "0x16EE918")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x16EE920", Offset = "0x16EE920", VA = "0x16EE920")]
		static JsonReader()
		{
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x16ED2F8", Offset = "0x16ED2F8", VA = "0x16ED2F8")]
		public JsonReader(string json_text)
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x16ED114", Offset = "0x16ED114", VA = "0x16ED114")]
		public JsonReader(TextReader reader)
		{
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x16EEFA0", Offset = "0x16EEFA0", VA = "0x16EEFA0")]
		private JsonReader(TextReader reader, bool owned)
		{
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x16EE924", Offset = "0x16EE924", VA = "0x16EE924")]
		private static void PopulateParseTable()
		{
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0x16EF310", Offset = "0x16EF310", VA = "0x16EF310")]
		private static void TableAddCol(ParserToken row, int col, params int[] symbols)
		{
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x16EF200", Offset = "0x16EF200", VA = "0x16EF200")]
		private static void TableAddRow(ParserToken rule)
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0x16EF478", Offset = "0x16EF478", VA = "0x16EF478")]
		private void ProcessNumber(string number)
		{
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x16EF604", Offset = "0x16EF604", VA = "0x16EF604")]
		private void ProcessSymbol()
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x16EF7CC", Offset = "0x16EF7CC", VA = "0x16EF7CC")]
		private bool ReadToken()
		{
			return default(bool);
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x16EFA10", Offset = "0x16EFA10", VA = "0x16EFA10")]
		public void Close()
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x16EA520", Offset = "0x16EA520", VA = "0x16EA520")]
		public bool Read()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200007F")]
	internal enum Condition
	{
		[Token(Token = "0x4000283")]
		InArray,
		[Token(Token = "0x4000284")]
		InObject,
		[Token(Token = "0x4000285")]
		NotAProperty,
		[Token(Token = "0x4000286")]
		Property,
		[Token(Token = "0x4000287")]
		Value
	}
	[Token(Token = "0x2000080")]
	internal class WriterContext
	{
		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Count;

		[Token(Token = "0x4000289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool InArray;

		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool InObject;

		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool ExpectingValue;

		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Padding;

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x16EFE70", Offset = "0x16EFE70", VA = "0x16EFE70")]
		public WriterContext()
		{
		}
	}
	[Token(Token = "0x2000081")]
	public class JsonWriter
	{
		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo number_format;

		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WriterContext context;

		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<WriterContext> ctx_stack;

		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool has_reached_end;

		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private char[] hex_seq;

		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int indentation;

		[Token(Token = "0x4000293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int indent_value;

		[Token(Token = "0x4000294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder inst_string_builder;

		[Token(Token = "0x4000295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool pretty_print;

		[Token(Token = "0x4000296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool validate;

		[Token(Token = "0x4000297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextWriter writer;

		[Token(Token = "0x170000A5")]
		public int IndentValue
		{
			[Token(Token = "0x6000676")]
			[Address(RVA = "0x16EFA74", Offset = "0x16EFA74", VA = "0x16EFA74")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000677")]
			[Address(RVA = "0x16EFA7C", Offset = "0x16EFA7C", VA = "0x16EFA7C")]
			set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		public bool PrettyPrint
		{
			[Token(Token = "0x6000678")]
			[Address(RVA = "0x16EFA90", Offset = "0x16EFA90", VA = "0x16EFA90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000679")]
			[Address(RVA = "0x16EFA98", Offset = "0x16EFA98", VA = "0x16EFA98")]
			set
			{
			}
		}

		[Token(Token = "0x170000A7")]
		public TextWriter TextWriter
		{
			[Token(Token = "0x600067A")]
			[Address(RVA = "0x16EFAA4", Offset = "0x16EFAA4", VA = "0x16EFAA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		public bool Validate
		{
			[Token(Token = "0x600067B")]
			[Address(RVA = "0x16EFAAC", Offset = "0x16EFAAC", VA = "0x16EFAAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600067C")]
			[Address(RVA = "0x16EFAB4", Offset = "0x16EFAB4", VA = "0x16EFAB4")]
			set
			{
			}
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x16EFAC0", Offset = "0x16EFAC0", VA = "0x16EFAC0")]
		static JsonWriter()
		{
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x16E5D7C", Offset = "0x16E5D7C", VA = "0x16E5D7C")]
		public JsonWriter()
		{
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x16EFC24", Offset = "0x16EFC24", VA = "0x16EFC24")]
		public JsonWriter(StringBuilder sb)
		{
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x16E563C", Offset = "0x16E563C", VA = "0x16E563C")]
		public JsonWriter(TextWriter writer)
		{
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0x16EFC98", Offset = "0x16EFC98", VA = "0x16EFC98")]
		private void DoValidation(Condition cond)
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x16EFB20", Offset = "0x16EFB20", VA = "0x16EFB20")]
		private void Init()
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0x16EFE78", Offset = "0x16EFE78", VA = "0x16EFE78")]
		private static void IntToHex(int n, char[] hex)
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0x16EFF00", Offset = "0x16EFF00", VA = "0x16EFF00")]
		private void Indent()
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0x16EFF18", Offset = "0x16EFF18", VA = "0x16EFF18")]
		private void Put(string str)
		{
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0x16EFFAC", Offset = "0x16EFFAC", VA = "0x16EFFAC")]
		private void PutNewline()
		{
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0x16EFFB4", Offset = "0x16EFFB4", VA = "0x16EFFB4")]
		private void PutNewline(bool add_comma)
		{
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x16F0044", Offset = "0x16F0044", VA = "0x16F0044")]
		private void PutString(string str)
		{
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x16F02EC", Offset = "0x16F02EC", VA = "0x16F02EC")]
		private void Unindent()
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x16F0304", Offset = "0x16F0304", VA = "0x16F0304", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x16ECC70", Offset = "0x16ECC70", VA = "0x16ECC70")]
		public void Reset()
		{
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x16E4A90", Offset = "0x16E4A90", VA = "0x16E4A90")]
		public void Write(bool boolean)
		{
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x16ED880", Offset = "0x16ED880", VA = "0x16ED880")]
		public void Write(decimal number)
		{
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x16E4B2C", Offset = "0x16E4B2C", VA = "0x16E4B2C")]
		public void Write(double number)
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x16E4C68", Offset = "0x16E4C68", VA = "0x16E4C68")]
		public void Write(int number)
		{
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0x16E4D48", Offset = "0x16E4D48", VA = "0x16E4D48")]
		public void Write(long number)
		{
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0x16E49F4", Offset = "0x16E49F4", VA = "0x16E49F4")]
		public void Write(string str)
		{
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0x16ECA20", Offset = "0x16ECA20", VA = "0x16ECA20")]
		public void Write(ulong number)
		{
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0x16E4F0C", Offset = "0x16E4F0C", VA = "0x16E4F0C")]
		public void WriteArrayEnd()
		{
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x16E4E28", Offset = "0x16E4E28", VA = "0x16E4E28")]
		public void WriteArrayStart()
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x16E5200", Offset = "0x16E5200", VA = "0x16E5200")]
		public void WriteObjectEnd()
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x16E4FF0", Offset = "0x16E4FF0", VA = "0x16E4FF0")]
		public void WriteObjectStart()
		{
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x16E50D4", Offset = "0x16E50D4", VA = "0x16E50D4")]
		public void WritePropertyName(string property_name)
		{
		}
	}
	[Token(Token = "0x2000082")]
	internal class FsmContext
	{
		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Return;

		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int NextState;

		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Lexer L;

		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int StateStack;

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x16DFD38", Offset = "0x16DFD38", VA = "0x16DFD38")]
		public FsmContext()
		{
		}
	}
	[Token(Token = "0x2000083")]
	internal class Lexer
	{
		[Token(Token = "0x200027C")]
		private delegate bool StateHandler(FsmContext ctx);

		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] fsm_return_table;

		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static StateHandler[] fsm_handler_table;

		[Token(Token = "0x400029E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool allow_comments;

		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool allow_single_quoted_strings;

		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool end_of_input;

		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FsmContext fsm_context;

		[Token(Token = "0x40002A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int input_buffer;

		[Token(Token = "0x40002A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int input_char;

		[Token(Token = "0x40002A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextReader reader;

		[Token(Token = "0x40002A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int state;

		[Token(Token = "0x40002A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder string_buffer;

		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string string_value;

		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int token;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int unichar;

		[Token(Token = "0x170000A9")]
		public bool AllowComments
		{
			[Token(Token = "0x6000699")]
			[Address(RVA = "0x16F0374", Offset = "0x16F0374", VA = "0x16F0374")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600069A")]
			[Address(RVA = "0x16F037C", Offset = "0x16F037C", VA = "0x16F037C")]
			set
			{
			}
		}

		[Token(Token = "0x170000AA")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x600069B")]
			[Address(RVA = "0x16F0388", Offset = "0x16F0388", VA = "0x16F0388")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600069C")]
			[Address(RVA = "0x16F0390", Offset = "0x16F0390", VA = "0x16F0390")]
			set
			{
			}
		}

		[Token(Token = "0x170000AB")]
		public bool EndOfInput
		{
			[Token(Token = "0x600069D")]
			[Address(RVA = "0x16F039C", Offset = "0x16F039C", VA = "0x16F039C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AC")]
		public int Token
		{
			[Token(Token = "0x600069E")]
			[Address(RVA = "0x16F03A4", Offset = "0x16F03A4", VA = "0x16F03A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000AD")]
		public string StringValue
		{
			[Token(Token = "0x600069F")]
			[Address(RVA = "0x16F03AC", Offset = "0x16F03AC", VA = "0x16F03AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x16F03B4", Offset = "0x16F03B4", VA = "0x16F03B4")]
		static Lexer()
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x16EF10C", Offset = "0x16EF10C", VA = "0x16EF10C")]
		public Lexer(TextReader reader)
		{
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x16F0FA0", Offset = "0x16F0FA0", VA = "0x16F0FA0")]
		private static int HexValue(int digit)
		{
			return default(int);
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x16F03B8", Offset = "0x16F03B8", VA = "0x16F03B8")]
		private static void PopulateFsmTables()
		{
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x16F1030", Offset = "0x16F1030", VA = "0x16F1030")]
		private static char ProcessEscChar(int esc_char)
		{
			return default(char);
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x16F1130", Offset = "0x16F1130", VA = "0x16F1130")]
		private static bool State1(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x16F1340", Offset = "0x16F1340", VA = "0x16F1340")]
		private static bool State2(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x16F13EC", Offset = "0x16F13EC", VA = "0x16F13EC")]
		private static bool State3(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x16F152C", Offset = "0x16F152C", VA = "0x16F152C")]
		private static bool State4(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x16F162C", Offset = "0x16F162C", VA = "0x16F162C")]
		private static bool State5(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x16F16B0", Offset = "0x16F16B0", VA = "0x16F16B0")]
		private static bool State6(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x16F17AC", Offset = "0x16F17AC", VA = "0x16F17AC")]
		private static bool State7(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x16F1844", Offset = "0x16F1844", VA = "0x16F1844")]
		private static bool State8(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x16F1904", Offset = "0x16F1904", VA = "0x16F1904")]
		private static bool State9(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x16F1974", Offset = "0x16F1974", VA = "0x16F1974")]
		private static bool State10(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x16F19E4", Offset = "0x16F19E4", VA = "0x16F19E4")]
		private static bool State11(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x16F1A54", Offset = "0x16F1A54", VA = "0x16F1A54")]
		private static bool State12(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x16F1AC4", Offset = "0x16F1AC4", VA = "0x16F1AC4")]
		private static bool State13(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x16F1B34", Offset = "0x16F1B34", VA = "0x16F1B34")]
		private static bool State14(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x16F1BA4", Offset = "0x16F1BA4", VA = "0x16F1BA4")]
		private static bool State15(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x16F1C14", Offset = "0x16F1C14", VA = "0x16F1C14")]
		private static bool State16(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x16F1C84", Offset = "0x16F1C84", VA = "0x16F1C84")]
		private static bool State17(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x16F1CF4", Offset = "0x16F1CF4", VA = "0x16F1CF4")]
		private static bool State18(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x16F1D64", Offset = "0x16F1D64", VA = "0x16F1D64")]
		private static bool State19(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x16F1E10", Offset = "0x16F1E10", VA = "0x16F1E10")]
		private static bool State20(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x16F1E80", Offset = "0x16F1E80", VA = "0x16F1E80")]
		private static bool State21(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x16F1FCC", Offset = "0x16F1FCC", VA = "0x16F1FCC")]
		private static bool State22(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x16F2150", Offset = "0x16F2150", VA = "0x16F2150")]
		private static bool State23(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x16F21FC", Offset = "0x16F21FC", VA = "0x16F21FC")]
		private static bool State24(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x16F2274", Offset = "0x16F2274", VA = "0x16F2274")]
		private static bool State25(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x16F22F4", Offset = "0x16F22F4", VA = "0x16F22F4")]
		private static bool State26(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x16F2360", Offset = "0x16F2360", VA = "0x16F2360")]
		private static bool State27(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x16F23CC", Offset = "0x16F23CC", VA = "0x16F23CC")]
		private static bool State28(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x16F1308", Offset = "0x16F1308", VA = "0x16F1308")]
		private bool GetChar()
		{
			return default(bool);
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x16F2448", Offset = "0x16F2448", VA = "0x16F2448")]
		private int NextChar()
		{
			return default(int);
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x16EF82C", Offset = "0x16EF82C", VA = "0x16EF82C")]
		public bool NextToken()
		{
			return default(bool);
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x16F1520", Offset = "0x16F1520", VA = "0x16F1520")]
		private void UngetChar()
		{
		}
	}
	[Token(Token = "0x2000084")]
	internal enum ParserToken
	{
		[Token(Token = "0x40002AB")]
		None = 65536,
		[Token(Token = "0x40002AC")]
		Number,
		[Token(Token = "0x40002AD")]
		True,
		[Token(Token = "0x40002AE")]
		False,
		[Token(Token = "0x40002AF")]
		Null,
		[Token(Token = "0x40002B0")]
		CharSeq,
		[Token(Token = "0x40002B1")]
		Char,
		[Token(Token = "0x40002B2")]
		Text,
		[Token(Token = "0x40002B3")]
		Object,
		[Token(Token = "0x40002B4")]
		ObjectPrime,
		[Token(Token = "0x40002B5")]
		Pair,
		[Token(Token = "0x40002B6")]
		PairRest,
		[Token(Token = "0x40002B7")]
		Array,
		[Token(Token = "0x40002B8")]
		ArrayPrime,
		[Token(Token = "0x40002B9")]
		Value,
		[Token(Token = "0x40002BA")]
		ValueRest,
		[Token(Token = "0x40002BB")]
		String,
		[Token(Token = "0x40002BC")]
		End,
		[Token(Token = "0x40002BD")]
		Epsilon
	}
}
namespace UnityToolbag
{
	[Token(Token = "0x2000085")]
	public abstract class CacheBehaviour : MonoBehaviour
	{
		[Token(Token = "0x200027D")]
		public class LoggerConfig
		{
			[Token(Token = "0x4000CF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly string className;

			[Token(Token = "0x6000FE5")]
			[Address(RVA = "0xFD2508", Offset = "0xFD2508", VA = "0xFD2508")]
			public LoggerConfig(string className, bool logClassName = true, bool logGameObjectName = true, bool logThreadId = true, bool logGameTime = true)
			{
			}
		}

		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCB3A8", Offset = "0xBCB3A8")]
		public bool m_isDebug;

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_verboseConsole;

		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<Type, (Logger, LoggerConfig)> loggers;

		[NonSerialized]
		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		private Animator _animator;

		[NonSerialized]
		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		private Animation _animation;

		[NonSerialized]
		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		private AudioSource _audio;

		[NonSerialized]
		[Token(Token = "0x40002C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		private Camera _camera;

		[NonSerialized]
		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		private CinemachinePathBase _cinemachinePathBase;

		[NonSerialized]
		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		private Collider _collider;

		[NonSerialized]
		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		private Collider2D _collider2D;

		[NonSerialized]
		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		private ConstantForce _constantForce;

		[NonSerialized]
		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		private HingeJoint _hingeJoint;

		[NonSerialized]
		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		private Light _light;

		[NonSerialized]
		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		private ParticleSystem _particleSystem;

		[NonSerialized]
		[Token(Token = "0x40002CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		private Renderer _renderer;

		[NonSerialized]
		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		private SkinnedMeshRenderer _skinnedMeshRenderer;

		[NonSerialized]
		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		private Rigidbody _rigidbody;

		[NonSerialized]
		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		private Rigidbody2D _rigidbody2D;

		[NonSerialized]
		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		private Transform _transform;

		[NonSerialized]
		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		private TextMeshPro _textMeshPro;

		[NonSerialized]
		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		private TextMeshProUGUI _textMeshProUGUI;

		[Token(Token = "0x170000AE")]
		public Logger logger
		{
			[Token(Token = "0x60006C5")]
			[Address(RVA = "0xFD224C", Offset = "0xFD224C", VA = "0xFD224C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AF")]
		public LoggerConfig loggerConfig
		{
			[Token(Token = "0x60006C6")]
			[Address(RVA = "0xFD22EC", Offset = "0xFD22EC", VA = "0xFD22EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		public Animator animator
		{
			[Token(Token = "0x60006CE")]
			[Address(RVA = "0xFD2948", Offset = "0xFD2948", VA = "0xFD2948")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B1")]
		public Animation animation
		{
			[Token(Token = "0x60006CF")]
			[Address(RVA = "0xFD29FC", Offset = "0xFD29FC", VA = "0xFD29FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		public AudioSource audio
		{
			[Token(Token = "0x60006D0")]
			[Address(RVA = "0xFD2AB0", Offset = "0xFD2AB0", VA = "0xFD2AB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		public Camera camera
		{
			[Token(Token = "0x60006D1")]
			[Address(RVA = "0xFD2B64", Offset = "0xFD2B64", VA = "0xFD2B64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		public CinemachinePathBase cinemachinePathBase
		{
			[Token(Token = "0x60006D2")]
			[Address(RVA = "0xFD2C18", Offset = "0xFD2C18", VA = "0xFD2C18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		public Collider collider
		{
			[Token(Token = "0x60006D3")]
			[Address(RVA = "0xFD2CCC", Offset = "0xFD2CCC", VA = "0xFD2CCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		public Collider2D collider2D
		{
			[Token(Token = "0x60006D4")]
			[Address(RVA = "0xFD2D80", Offset = "0xFD2D80", VA = "0xFD2D80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		public ConstantForce constantForce
		{
			[Token(Token = "0x60006D5")]
			[Address(RVA = "0xFD2E34", Offset = "0xFD2E34", VA = "0xFD2E34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		public HingeJoint hingeJoint
		{
			[Token(Token = "0x60006D6")]
			[Address(RVA = "0xFD2EE8", Offset = "0xFD2EE8", VA = "0xFD2EE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B9")]
		public Light light
		{
			[Token(Token = "0x60006D7")]
			[Address(RVA = "0xFD2F9C", Offset = "0xFD2F9C", VA = "0xFD2F9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		public ParticleSystem particleSystem
		{
			[Token(Token = "0x60006D8")]
			[Address(RVA = "0xFD3050", Offset = "0xFD3050", VA = "0xFD3050")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BB")]
		public Renderer renderer
		{
			[Token(Token = "0x60006D9")]
			[Address(RVA = "0xFD3104", Offset = "0xFD3104", VA = "0xFD3104")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		public SkinnedMeshRenderer skinnedMeshRenderer
		{
			[Token(Token = "0x60006DA")]
			[Address(RVA = "0xFD31B8", Offset = "0xFD31B8", VA = "0xFD31B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		public Rigidbody rigidbody
		{
			[Token(Token = "0x60006DB")]
			[Address(RVA = "0xFD326C", Offset = "0xFD326C", VA = "0xFD326C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		public Rigidbody2D rigidbody2D
		{
			[Token(Token = "0x60006DC")]
			[Address(RVA = "0xFD3320", Offset = "0xFD3320", VA = "0xFD3320")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		public new Transform transform
		{
			[Token(Token = "0x60006DD")]
			[Address(RVA = "0xFD33D4", Offset = "0xFD33D4", VA = "0xFD33D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		public TextMeshPro textMeshPro
		{
			[Token(Token = "0x60006DE")]
			[Address(RVA = "0xFD3488", Offset = "0xFD3488", VA = "0xFD3488")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		public TextMeshProUGUI textMeshProUGUI
		{
			[Token(Token = "0x60006DF")]
			[Address(RVA = "0xFD353C", Offset = "0xFD353C", VA = "0xFD353C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0xFD2278", Offset = "0xFD2278", VA = "0xFD2278")]
		public (Logger, LoggerConfig) GetLoggerByType(Type type)
		{
			return default((Logger, LoggerConfig));
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0xFD2320", Offset = "0xFD2320", VA = "0xFD2320")]
		private void AddType(Type type)
		{
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0xFD253C", Offset = "0xFD253C", VA = "0xFD253C")]
		protected void VerboseLog(string textToShow)
		{
		}

		[Token(Token = "0x60006CA")]
		protected void VerboseLog<T>(string message, T val)
		{
		}

		[Token(Token = "0x60006CB")]
		protected void VerboseLog<T>(string message, List<T> values)
		{
		}

		[Token(Token = "0x60006CC")]
		protected void VerboseLog<T>(string message, T[] values)
		{
		}

		[Token(Token = "0x60006CD")]
		protected void Log<T>(string message, Dictionary<T, T> values)
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xFD35F0", Offset = "0xFD35F0", VA = "0xFD35F0")]
		protected CacheBehaviour()
		{
		}
	}
	[Token(Token = "0x2000086")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBC2444", Offset = "0xBC2444")]
	public class Dispatcher : MonoBehaviour
	{
		[Token(Token = "0x200027E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC91F4", Offset = "0xBC91F4")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4000CF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action action;

			[Token(Token = "0x4000CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool hasRun;

			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0xFD39F8", Offset = "0xFD39F8", VA = "0xFD39F8")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0xFD3E3C", Offset = "0xFD3E3C", VA = "0xFD3E3C")]
			internal void <Invoke>b__0()
			{
			}
		}

		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dispatcher _instance;

		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool _instanceExists;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Thread _mainThread;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static object _lockObject;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly Queue<Action> _actions;

		[Token(Token = "0x170000C2")]
		public static bool isMainThread
		{
			[Token(Token = "0x60006E1")]
			[Address(RVA = "0xFD366C", Offset = "0xFD366C", VA = "0xFD366C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xFD36EC", Offset = "0xFD36EC", VA = "0xFD36EC")]
		public static void InvokeAsync(Action action)
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xFD38A4", Offset = "0xFD38A4", VA = "0xFD38A4")]
		public static void Invoke(Action action)
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xFD3A00", Offset = "0xFD3A00", VA = "0xFD3A00")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0xFD3B30", Offset = "0xFD3B30", VA = "0xFD3B30")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xFD3C14", Offset = "0xFD3C14", VA = "0xFD3C14")]
		private void Update()
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0xFD3D8C", Offset = "0xFD3D8C", VA = "0xFD3D8C")]
		public Dispatcher()
		{
		}
	}
	[Token(Token = "0x2000087")]
	public enum TitleSafeSizeMode
	{
		[Token(Token = "0x40002D9")]
		Pixels,
		[Token(Token = "0x40002DA")]
		Percentage
	}
	[Token(Token = "0x2000088")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBC247C", Offset = "0xBC247C")]
	public class DrawTitleSafeArea : MonoBehaviour
	{
		[Token(Token = "0x40002DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color _innerColor;

		[Token(Token = "0x40002DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color _outerColor;

		[Token(Token = "0x40002DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TitleSafeSizeMode _sizeMode;

		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private int _sizeX;

		[Token(Token = "0x40002DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int _sizeY;

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xFD3E74", Offset = "0xFD3E74", VA = "0xFD3E74")]
		public DrawTitleSafeArea()
		{
		}
	}
	[Token(Token = "0x2000089")]
	public enum FutureState
	{
		[Token(Token = "0x40002E1")]
		Pending,
		[Token(Token = "0x40002E2")]
		Processing,
		[Token(Token = "0x40002E3")]
		Success,
		[Token(Token = "0x40002E4")]
		Error
	}
	[Token(Token = "0x200008A")]
	public interface IFuture<T>
	{
		[Token(Token = "0x170000C3")]
		FutureState state
		{
			[Token(Token = "0x60006EA")]
			get;
		}

		[Token(Token = "0x170000C4")]
		T value
		{
			[Token(Token = "0x60006EB")]
			get;
		}

		[Token(Token = "0x170000C5")]
		Exception error
		{
			[Token(Token = "0x60006EC")]
			get;
		}

		[Token(Token = "0x60006ED")]
		IFuture<T> OnSuccess(FutureCallback<T> callback);

		[Token(Token = "0x60006EE")]
		IFuture<T> OnError(FutureCallback<T> callback);

		[Token(Token = "0x60006EF")]
		IFuture<T> OnComplete(FutureCallback<T> callback);
	}
	[Token(Token = "0x200008B")]
	public delegate void FutureCallback<T>(IFuture<T> future);
	[Token(Token = "0x200008C")]
	public sealed class Future<T> : IFuture<T>
	{
		[Token(Token = "0x200027F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9204", Offset = "0xBC9204")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4000CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FutureCallback<T> callback;

			[Token(Token = "0x4000CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Future<T> <>4__this;

			[Token(Token = "0x6000FE8")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6000FE9")]
			internal void <OnSuccess>b__0()
			{
			}
		}

		[Token(Token = "0x2000280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9214", Offset = "0xBC9214")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4000CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FutureCallback<T> callback;

			[Token(Token = "0x4000CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Future<T> <>4__this;

			[Token(Token = "0x6000FEA")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6000FEB")]
			internal void <OnError>b__0()
			{
			}
		}

		[Token(Token = "0x2000281")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9224", Offset = "0xBC9224")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4000CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FutureCallback<T> callback;

			[Token(Token = "0x4000CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Future<T> <>4__this;

			[Token(Token = "0x6000FEC")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6000FED")]
			internal void <OnComplete>b__0()
			{
			}
		}

		[Token(Token = "0x2000282")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9234", Offset = "0xBC9234")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4000CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Future<T> <>4__this;

			[Token(Token = "0x4000CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T> func;

			[Token(Token = "0x6000FEE")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6000FEF")]
			internal void <Process>b__0(object _)
			{
			}
		}

		[Token(Token = "0x40002E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FutureState _state;

		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _value;

		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Exception _error;

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<FutureCallback<T>> _successCallbacks;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<FutureCallback<T>> _errorCallbacks;

		[Token(Token = "0x170000C6")]
		public FutureState state
		{
			[Token(Token = "0x60006F4")]
			get
			{
				return default(FutureState);
			}
		}

		[Token(Token = "0x170000C7")]
		public T value
		{
			[Token(Token = "0x60006F5")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170000C8")]
		public Exception error
		{
			[Token(Token = "0x60006F6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006F7")]
		public Future()
		{
		}

		[Token(Token = "0x60006F8")]
		public IFuture<T> OnSuccess(FutureCallback<T> callback)
		{
			return null;
		}

		[Token(Token = "0x60006F9")]
		public IFuture<T> OnError(FutureCallback<T> callback)
		{
			return null;
		}

		[Token(Token = "0x60006FA")]
		public IFuture<T> OnComplete(FutureCallback<T> callback)
		{
			return null;
		}

		[Token(Token = "0x60006FB")]
		public IFuture<T> Process(Func<T> func)
		{
			return null;
		}

		[Token(Token = "0x60006FC")]
		public void Assign(T value)
		{
		}

		[Token(Token = "0x60006FD")]
		public void Fail(Exception error)
		{
		}

		[Token(Token = "0x60006FE")]
		private void AssignImpl(T value)
		{
		}

		[Token(Token = "0x60006FF")]
		private void FailImpl(Exception error)
		{
		}

		[Token(Token = "0x6000700")]
		private void FlushSuccessCallbacks()
		{
		}

		[Token(Token = "0x6000701")]
		private void FlushErrorCallbacks()
		{
		}
	}
	[Token(Token = "0x200008D")]
	public class SortingLayerAttribute : PropertyAttribute
	{
		[Token(Token = "0x6000702")]
		[Address(RVA = "0xFD3F1C", Offset = "0xFD3F1C", VA = "0xFD3F1C")]
		public SortingLayerAttribute()
		{
		}
	}
	[Token(Token = "0x200008E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBC24C8", Offset = "0xBC24C8")]
	public class SortingLayerExposed : MonoBehaviour
	{
		[Token(Token = "0x6000703")]
		[Address(RVA = "0xFD3F24", Offset = "0xFD3F24", VA = "0xFD3F24")]
		public SortingLayerExposed()
		{
		}
	}
	[Token(Token = "0x200008F")]
	public static class StandardPaths
	{
		[Token(Token = "0x2000283")]
		private static class Windows
		{
			[Token(Token = "0x6000FF0")]
			[Address(RVA = "0xFD40B4", Offset = "0xFD40B4", VA = "0xFD40B4")]
			public static string GetPath(string subdirectory)
			{
				return null;
			}
		}

		[Token(Token = "0x2000284")]
		private static class OSX
		{
			[Token(Token = "0x6000FF1")]
			[Address(RVA = "0xFD4174", Offset = "0xFD4174", VA = "0xFD4174")]
			public static string GetApplicationSupportPath(string subdirectory)
			{
				return null;
			}

			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0xFD4548", Offset = "0xFD4548", VA = "0xFD4548")]
			public static string GetLogsPath()
			{
				return null;
			}
		}

		[Token(Token = "0x2000285")]
		private static class Linux
		{
			[Token(Token = "0x6000FF3")]
			[Address(RVA = "0xFD423C", Offset = "0xFD423C", VA = "0xFD423C")]
			public static string GetSaveDirectory()
			{
				return null;
			}

			[Token(Token = "0x6000FF4")]
			[Address(RVA = "0xFD43C8", Offset = "0xFD43C8", VA = "0xFD43C8")]
			public static string GetConfigDirectory()
			{
				return null;
			}

			[Token(Token = "0x6000FF5")]
			[Address(RVA = "0xFD4604", Offset = "0xFD4604", VA = "0xFD4604")]
			public static string GetLogDirectory()
			{
				return null;
			}
		}

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB550", Offset = "0xBCB550")]
		private static bool <includeCompanyName>k__BackingField;

		[Token(Token = "0x170000C9")]
		public static bool includeCompanyName
		{
			[Token(Token = "0x6000704")]
			[Address(RVA = "0xFD3F2C", Offset = "0xFD3F2C", VA = "0xFD3F2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCD8B4", Offset = "0xBCD8B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000705")]
			[Address(RVA = "0xFD3F94", Offset = "0xFD3F94", VA = "0xFD3F94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCD8C4", Offset = "0xBCD8C4")]
			set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public static string saveDataDirectory
		{
			[Token(Token = "0x6000706")]
			[Address(RVA = "0xFD4004", Offset = "0xFD4004", VA = "0xFD4004")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CB")]
		public static string configDirectory
		{
			[Token(Token = "0x6000707")]
			[Address(RVA = "0xFD4318", Offset = "0xFD4318", VA = "0xFD4318")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		public static string logDirectory
		{
			[Token(Token = "0x6000708")]
			[Address(RVA = "0xFD44A4", Offset = "0xFD44A4", VA = "0xFD44A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0xFD466C", Offset = "0xFD466C", VA = "0xFD466C")]
		static StandardPaths()
		{
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0xFD46D4", Offset = "0xFD46D4", VA = "0xFD46D4")]
		private static string AppendProductPath(string path)
		{
			return null;
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0xFD47F0", Offset = "0xFD47F0", VA = "0xFD47F0")]
		private static string AppendDirectory(string path, string dir)
		{
			return null;
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0xFD48BC", Offset = "0xFD48BC", VA = "0xFD48BC")]
		private static string CleanForPath(string str)
		{
			return null;
		}
	}
}
namespace MEC
{
	[Token(Token = "0x2000090")]
	public class Timing : MonoBehaviour
	{
		[Token(Token = "0x2000286")]
		private struct ProcessIndex : IEquatable<ProcessIndex>
		{
			[Token(Token = "0x4000CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Segment seg;

			[Token(Token = "0x4000CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int i;

			[Token(Token = "0x6000FF6")]
			[Address(RVA = "0xCE8E40", Offset = "0xCE8E40", VA = "0xCE8E40", Slot = "4")]
			public bool Equals(ProcessIndex other)
			{
				return default(bool);
			}

			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0xCE8E68", Offset = "0xCE8E68", VA = "0xCE8E68", Slot = "0")]
			public override bool Equals(object other)
			{
				return default(bool);
			}

			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0x10A79B0", Offset = "0x10A79B0", VA = "0x10A79B0")]
			public static bool operator ==(ProcessIndex a, ProcessIndex b)
			{
				return default(bool);
			}

			[Token(Token = "0x6000FF9")]
			[Address(RVA = "0x10A79D0", Offset = "0x10A79D0", VA = "0x10A79D0")]
			public static bool operator !=(ProcessIndex a, ProcessIndex b)
			{
				return default(bool);
			}

			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0xCE8E70", Offset = "0xCE8E70", VA = "0xCE8E70", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000287")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9244", Offset = "0xBC9244")]
		private sealed class <_InjectDelay>d__123 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4000D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Timing <>4__this;

			[Token(Token = "0x4000D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delayTime;

			[Token(Token = "0x4000D02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerator<float> proc;

			[Token(Token = "0x1700018D")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6000FFE")]
				[Address(RVA = "0x10A6F4C", Offset = "0x10A6F4C", VA = "0x10A6F4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700018E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001000")]
				[Address(RVA = "0x10A6FB4", Offset = "0x10A6FB4", VA = "0x10A6FB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0x10A6DE8", Offset = "0x10A6DE8", VA = "0x10A6DE8")]
			[DebuggerHidden]
			public <_InjectDelay>d__123(int <>1__state)
			{
			}

			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0x10A6E14", Offset = "0x10A6E14", VA = "0x10A6E14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0x10A6E18", Offset = "0x10A6E18", VA = "0x10A6E18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FFF")]
			[Address(RVA = "0x10A6F54", Offset = "0x10A6F54", VA = "0x10A6F54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9254", Offset = "0xBC9254")]
		private sealed class <_StartWhenDone>d__131 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4000D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Timing <>4__this;

			[Token(Token = "0x4000D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CoroutineHandle handle;

			[Token(Token = "0x4000D07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerator<float> proc;

			[Token(Token = "0x1700018F")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6001005")]
				[Address(RVA = "0x10A73C8", Offset = "0x10A73C8", VA = "0x10A73C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000190")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001007")]
				[Address(RVA = "0x10A7430", Offset = "0x10A7430", VA = "0x10A7430", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001001")]
			[Address(RVA = "0x10A7018", Offset = "0x10A7018", VA = "0x10A7018")]
			[DebuggerHidden]
			public <_StartWhenDone>d__131(int <>1__state)
			{
			}

			[Token(Token = "0x6001002")]
			[Address(RVA = "0x10A7044", Offset = "0x10A7044", VA = "0x10A7044", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001003")]
			[Address(RVA = "0x10A709C", Offset = "0x10A709C", VA = "0x10A709C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001004")]
			[Address(RVA = "0x10A7070", Offset = "0x10A7070", VA = "0x10A7070")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001006")]
			[Address(RVA = "0x10A73D0", Offset = "0x10A73D0", VA = "0x10A73D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000289")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9264", Offset = "0xBC9264")]
		private sealed class <_StartWhenDone>d__137 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4000D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AsyncOperation operation;

			[Token(Token = "0x4000D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IEnumerator<float> pausedProc;

			[Token(Token = "0x17000191")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x600100B")]
				[Address(RVA = "0x10A75F4", Offset = "0x10A75F4", VA = "0x10A75F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000192")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600100D")]
				[Address(RVA = "0x10A765C", Offset = "0x10A765C", VA = "0x10A765C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001008")]
			[Address(RVA = "0x10A7494", Offset = "0x10A7494", VA = "0x10A7494")]
			[DebuggerHidden]
			public <_StartWhenDone>d__137(int <>1__state)
			{
			}

			[Token(Token = "0x6001009")]
			[Address(RVA = "0x10A74C0", Offset = "0x10A74C0", VA = "0x10A74C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600100A")]
			[Address(RVA = "0x10A74C4", Offset = "0x10A74C4", VA = "0x10A74C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600100C")]
			[Address(RVA = "0x10A75FC", Offset = "0x10A75FC", VA = "0x10A75FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200028A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9274", Offset = "0xBC9274")]
		private sealed class <_StartWhenDone>d__139 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4000D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CustomYieldInstruction operation;

			[Token(Token = "0x4000D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IEnumerator<float> pausedProc;

			[Token(Token = "0x17000193")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6001011")]
				[Address(RVA = "0x10A7824", Offset = "0x10A7824", VA = "0x10A7824", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000194")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001013")]
				[Address(RVA = "0x10A788C", Offset = "0x10A788C", VA = "0x10A788C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600100E")]
			[Address(RVA = "0x10A76C0", Offset = "0x10A76C0", VA = "0x10A76C0")]
			[DebuggerHidden]
			public <_StartWhenDone>d__139(int <>1__state)
			{
			}

			[Token(Token = "0x600100F")]
			[Address(RVA = "0x10A76EC", Offset = "0x10A76EC", VA = "0x10A76EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001010")]
			[Address(RVA = "0x10A76F0", Offset = "0x10A76F0", VA = "0x10A76F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001012")]
			[Address(RVA = "0x10A782C", Offset = "0x10A782C", VA = "0x10A782C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200028B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9284", Offset = "0xBC9284")]
		private sealed class <_DelayedCall>d__146 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4000D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Timing <>4__this;

			[Token(Token = "0x4000D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4000D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject cancelWith;

			[Token(Token = "0x4000D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action action;

			[Token(Token = "0x17000195")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6001017")]
				[Address(RVA = "0x10A6D1C", Offset = "0x10A6D1C", VA = "0x10A6D1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000196")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001019")]
				[Address(RVA = "0x10A6D84", Offset = "0x10A6D84", VA = "0x10A6D84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001014")]
			[Address(RVA = "0x10A6C14", Offset = "0x10A6C14", VA = "0x10A6C14")]
			[DebuggerHidden]
			public <_DelayedCall>d__146(int <>1__state)
			{
			}

			[Token(Token = "0x6001015")]
			[Address(RVA = "0x10A6C40", Offset = "0x10A6C40", VA = "0x10A6C40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001016")]
			[Address(RVA = "0x10A6C44", Offset = "0x10A6C44", VA = "0x10A6C44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001018")]
			[Address(RVA = "0x10A6D24", Offset = "0x10A6D24", VA = "0x10A6D24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200028C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9294", Offset = "0xBC9294")]
		private sealed class <_CallContinuously>d__155 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4000D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Timing <>4__this;

			[Token(Token = "0x4000D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float period;

			[Token(Token = "0x4000D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action action;

			[Token(Token = "0x4000D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeframe;

			[Token(Token = "0x4000D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action onDone;

			[Token(Token = "0x4000D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private double <startTime>5__2;

			[Token(Token = "0x17000197")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x600101D")]
				[Address(RVA = "0x10A6B48", Offset = "0x10A6B48", VA = "0x10A6B48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000198")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600101F")]
				[Address(RVA = "0x10A6BB0", Offset = "0x10A6BB0", VA = "0x10A6BB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600101A")]
			[Address(RVA = "0x10A6A58", Offset = "0x10A6A58", VA = "0x10A6A58")]
			[DebuggerHidden]
			public <_CallContinuously>d__155(int <>1__state)
			{
			}

			[Token(Token = "0x600101B")]
			[Address(RVA = "0x10A6A84", Offset = "0x10A6A84", VA = "0x10A6A84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600101C")]
			[Address(RVA = "0x10A6A88", Offset = "0x10A6A88", VA = "0x10A6A88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600101E")]
			[Address(RVA = "0x10A6B50", Offset = "0x10A6B50", VA = "0x10A6B50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200028D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC92A4", Offset = "0xBC92A4")]
		private sealed class <_CallContinuously>d__164<T> : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <>2__current;

			[Token(Token = "0x4000D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Timing <>4__this;

			[Token(Token = "0x4000D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float period;

			[Token(Token = "0x4000D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> action;

			[Token(Token = "0x4000D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T reference;

			[Token(Token = "0x4000D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float timeframe;

			[Token(Token = "0x4000D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> onDone;

			[Token(Token = "0x4000D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private double <startTime>5__2;

			[Token(Token = "0x17000199")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6001023")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700019A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001025")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001020")]
			[DebuggerHidden]
			public <_CallContinuously>d__164(int <>1__state)
			{
			}

			[Token(Token = "0x6001021")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001022")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001024")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCB560", Offset = "0xBCB560")]
		public float TimeBetweenSlowUpdateCalls;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCB598", Offset = "0xBCB598")]
		public DebugInfoType ProfilerDebugAmount;

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCB5D0", Offset = "0xBCB5D0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBCB5D0", Offset = "0xBCB5D0")]
		public int UpdateCoroutines;

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCB620", Offset = "0xBCB620")]
		public int FixedUpdateCoroutines;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCB658", Offset = "0xBCB658")]
		public int LateUpdateCoroutines;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCB690", Offset = "0xBCB690")]
		public int SlowUpdateCoroutines;

		[NonSerialized]
		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float localTime;

		[NonSerialized]
		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float deltaTime;

		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<IEnumerator<float>, CoroutineHandle, IEnumerator<float>> ReplacementFunction;

		[Token(Token = "0x40002F5")]
		public const float WaitForOneFrame = float.NegativeInfinity;

		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB6D8", Offset = "0xBCB6D8")]
		private static Thread <MainThread>k__BackingField;

		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CoroutineHandle _currentCoroutine;

		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static object _tmpRef;

		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool _tmpBool;

		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static CoroutineHandle _tmpHandle;

		[Token(Token = "0x40002FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _currentUpdateFrame;

		[Token(Token = "0x40002FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _currentLateUpdateFrame;

		[Token(Token = "0x40002FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _currentSlowUpdateFrame;

		[Token(Token = "0x40002FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _nextUpdateProcessSlot;

		[Token(Token = "0x40002FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _nextLateUpdateProcessSlot;

		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _nextFixedUpdateProcessSlot;

		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _nextSlowUpdateProcessSlot;

		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _lastUpdateProcessSlot;

		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _lastLateUpdateProcessSlot;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _lastFixedUpdateProcessSlot;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int _lastSlowUpdateProcessSlot;

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _lastUpdateTime;

		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _lastLateUpdateTime;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _lastFixedUpdateTime;

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _lastSlowUpdateTime;

		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _lastSlowUpdateDeltaTime;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private ushort _framesSinceUpdate;

		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		private ushort _expansions;

		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[HideInInspector]
		private byte _instanceID;

		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly Dictionary<CoroutineHandle, HashSet<CoroutineHandle>> _waitingTriggers;

		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly HashSet<CoroutineHandle> _allWaiting;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly Dictionary<CoroutineHandle, ProcessIndex> _handleToIndex;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly Dictionary<ProcessIndex, CoroutineHandle> _indexToHandle;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly Dictionary<CoroutineHandle, string> _processTags;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private readonly Dictionary<string, HashSet<CoroutineHandle>> _taggedProcesses;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IEnumerator<float>[] UpdateProcesses;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private IEnumerator<float>[] LateUpdateProcesses;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private IEnumerator<float>[] FixedUpdateProcesses;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private IEnumerator<float>[] SlowUpdateProcesses;

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool[] UpdatePaused;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool[] LateUpdatePaused;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool[] FixedUpdatePaused;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool[] SlowUpdatePaused;

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool[] UpdateHeld;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool[] LateUpdateHeld;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool[] FixedUpdateHeld;

		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool[] SlowUpdateHeld;

		[Token(Token = "0x4000320")]
		private const ushort FramesUntilMaintenance = 64;

		[Token(Token = "0x4000321")]
		private const int ProcessArrayChunkSize = 64;

		[Token(Token = "0x4000322")]
		private const int InitialBufferSizeLarge = 256;

		[Token(Token = "0x4000323")]
		private const int InitialBufferSizeMedium = 64;

		[Token(Token = "0x4000324")]
		private const int InitialBufferSizeSmall = 8;

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Timing[] ActiveInstances;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Timing _instance;

		[Token(Token = "0x170000CD")]
		public static float LocalTime
		{
			[Token(Token = "0x600070D")]
			[Address(RVA = "0x16F2F58", Offset = "0x16F2F58", VA = "0x16F2F58")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000CE")]
		public static float DeltaTime
		{
			[Token(Token = "0x600070E")]
			[Address(RVA = "0x16F3208", Offset = "0x16F3208", VA = "0x16F3208")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000CF")]
		public static Thread MainThread
		{
			[Token(Token = "0x6000711")]
			[Address(RVA = "0x16F3454", Offset = "0x16F3454", VA = "0x16F3454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCD8F4", Offset = "0xBCD8F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000712")]
			[Address(RVA = "0x16F34BC", Offset = "0x16F34BC", VA = "0x16F34BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCD904", Offset = "0xBCD904")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public static CoroutineHandle CurrentCoroutine
		{
			[Token(Token = "0x6000713")]
			[Address(RVA = "0x16F352C", Offset = "0x16F352C", VA = "0x16F352C")]
			get
			{
				return default(CoroutineHandle);
			}
		}

		[Token(Token = "0x170000D1")]
		public CoroutineHandle currentCoroutine
		{
			[Token(Token = "0x6000714")]
			[Address(RVA = "0x16F369C", Offset = "0x16F369C", VA = "0x16F369C")]
			get
			{
				return default(CoroutineHandle);
			}
		}

		[Token(Token = "0x170000D2")]
		public static Timing Instance
		{
			[Token(Token = "0x6000715")]
			[Address(RVA = "0x16F2FC4", Offset = "0x16F2FC4", VA = "0x16F2FC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000716")]
			[Address(RVA = "0x16F390C", Offset = "0x16F390C", VA = "0x16F390C")]
			set
			{
			}
		}

		[Token(Token = "0x14000001")]
		public static event Action OnPreExecute
		{
			[Token(Token = "0x600070F")]
			[Address(RVA = "0x16F3274", Offset = "0x16F3274", VA = "0x16F3274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCD8D4", Offset = "0xBCD8D4")]
			add
			{
			}
			[Token(Token = "0x6000710")]
			[Address(RVA = "0x16F3364", Offset = "0x16F3364", VA = "0x16F3364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCD8E4", Offset = "0xBCD8E4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0x16F397C", Offset = "0x16F397C", VA = "0x16F397C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0x16F3B78", Offset = "0x16F3B78", VA = "0x16F3B78")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0x16F3C5C", Offset = "0x16F3C5C", VA = "0x16F3C5C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0x16F3C60", Offset = "0x16F3C60", VA = "0x16F3C60")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0x16F36A4", Offset = "0x16F36A4", VA = "0x16F36A4")]
		private void InitializeInstanceID()
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x16F3D48", Offset = "0x16F3D48", VA = "0x16F3D48")]
		private void Update()
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0x16F5CA4", Offset = "0x16F5CA4", VA = "0x16F5CA4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x16F63D8", Offset = "0x16F63D8", VA = "0x16F63D8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0x16F4DA8", Offset = "0x16F4DA8", VA = "0x16F4DA8")]
		private void RemoveUnused()
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x16F6E80", Offset = "0x16F6E80", VA = "0x16F6E80")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x16F84A4", Offset = "0x16F84A4", VA = "0x16F84A4")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0x16F8564", Offset = "0x16F8564", VA = "0x16F8564")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, Segment segment)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x16F8624", Offset = "0x16F8624", VA = "0x16F8624")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, Segment segment, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x16F86F0", Offset = "0x16F86F0", VA = "0x16F86F0")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x16F8754", Offset = "0x16F8754", VA = "0x16F8754")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x16F87BC", Offset = "0x16F87BC", VA = "0x16F87BC")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, Segment segment)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0x16F8824", Offset = "0x16F8824", VA = "0x16F8824")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, Segment segment, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x16F6F3C", Offset = "0x16F6F3C", VA = "0x16F6F3C")]
		private CoroutineHandle RunCoroutineInternal(IEnumerator<float> coroutine, Segment segment, string tag, CoroutineHandle handle, bool prewarm)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0x16F89D0", Offset = "0x16F89D0", VA = "0x16F89D0")]
		public static int KillCoroutines()
		{
			return default(int);
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x16F8AAC", Offset = "0x16F8AAC", VA = "0x16F8AAC")]
		public int KillCoroutinesOnInstance()
		{
			return default(int);
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x16F8D24", Offset = "0x16F8D24", VA = "0x16F8D24")]
		public static int KillCoroutines(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x16F4CC0", Offset = "0x16F4CC0", VA = "0x16F4CC0")]
		public int KillCoroutinesOnInstance(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x16F8F84", Offset = "0x16F8F84", VA = "0x16F8F84")]
		public static int KillCoroutines(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x16F9074", Offset = "0x16F9074", VA = "0x16F9074")]
		public int KillCoroutinesOnInstance(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x16F92FC", Offset = "0x16F92FC", VA = "0x16F92FC")]
		public static int PauseCoroutines()
		{
			return default(int);
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x16F93D8", Offset = "0x16F93D8", VA = "0x16F93D8")]
		public int PauseCoroutinesOnInstance()
		{
			return default(int);
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x16F9D5C", Offset = "0x16F9D5C", VA = "0x16F9D5C")]
		public static int PauseCoroutines(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x16F9E6C", Offset = "0x16F9E6C", VA = "0x16F9E6C")]
		public int PauseCoroutinesOnInstance(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x16FA5C4", Offset = "0x16FA5C4", VA = "0x16FA5C4")]
		public static int PauseCoroutines(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x16FA6B4", Offset = "0x16FA6B4", VA = "0x16FA6B4")]
		public int PauseCoroutinesOnInstance(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x16FA804", Offset = "0x16FA804", VA = "0x16FA804")]
		public static int ResumeCoroutines()
		{
			return default(int);
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x16FA8E0", Offset = "0x16FA8E0", VA = "0x16FA8E0")]
		public int ResumeCoroutinesOnInstance()
		{
			return default(int);
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x16FAAB0", Offset = "0x16FAAB0", VA = "0x16FAAB0")]
		public static int ResumeCoroutines(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x16FABC0", Offset = "0x16FABC0", VA = "0x16FABC0")]
		public int ResumeCoroutinesOnInstance(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x16FAC90", Offset = "0x16FAC90", VA = "0x16FAC90")]
		public static int ResumeCoroutines(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x16FAD80", Offset = "0x16FAD80", VA = "0x16FAD80")]
		public int ResumeCoroutinesOnInstance(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x16F4B34", Offset = "0x16F4B34", VA = "0x16F4B34")]
		private bool UpdateTimeValues(Segment segment)
		{
			return default(bool);
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x16F9C04", Offset = "0x16F9C04", VA = "0x16F9C04")]
		private float GetSegmentTime(Segment segment)
		{
			return default(float);
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x16F8E34", Offset = "0x16F8E34", VA = "0x16F8E34")]
		public static Timing GetInstance(byte ID)
		{
			return null;
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x16F8898", Offset = "0x16F8898", VA = "0x16F8898")]
		private void AddTag(string tag, CoroutineHandle coindex)
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x16F6D2C", Offset = "0x16F6D2C", VA = "0x16F6D2C")]
		private void RemoveTag(CoroutineHandle coindex)
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x16F9254", Offset = "0x16F9254", VA = "0x16F9254")]
		private bool Nullify(ProcessIndex coindex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x16F8EE0", Offset = "0x16F8EE0", VA = "0x16F8EE0")]
		private IEnumerator<float> CoindexExtract(ProcessIndex coindex)
		{
			return null;
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x16FAECC", Offset = "0x16FAECC", VA = "0x16FAECC")]
		private IEnumerator<float> CoindexPeek(ProcessIndex coindex)
		{
			return null;
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x16F6B0C", Offset = "0x16F6B0C", VA = "0x16F6B0C")]
		private bool CoindexIsNull(ProcessIndex coindex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x16F9F40", Offset = "0x16F9F40", VA = "0x16F9F40")]
		private bool SetPause(ProcessIndex coindex, bool newPausedState)
		{
			return default(bool);
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x16FAF58", Offset = "0x16FAF58", VA = "0x16FAF58")]
		private bool SetHeld(ProcessIndex coindex, bool newHeldState)
		{
			return default(bool);
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x16F9CB4", Offset = "0x16F9CB4", VA = "0x16F9CB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCD914", Offset = "0xBCD914")]
		private IEnumerator<float> _InjectDelay(IEnumerator<float> proc, float delayTime)
		{
			return null;
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x16FB5DC", Offset = "0x16FB5DC", VA = "0x16FB5DC")]
		private bool CoindexIsPaused(ProcessIndex coindex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x16FB66C", Offset = "0x16FB66C", VA = "0x16FB66C")]
		private bool CoindexIsHeld(ProcessIndex coindex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x16FB6FC", Offset = "0x16FB6FC", VA = "0x16FB6FC")]
		private void CoindexReplace(ProcessIndex coindex, IEnumerator<float> replacement)
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x16FB7D0", Offset = "0x16FB7D0", VA = "0x16FB7D0")]
		public static float WaitForSeconds(float waitTime)
		{
			return default(float);
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x16FB85C", Offset = "0x16FB85C", VA = "0x16FB85C")]
		public float WaitForSecondsOnInstance(float waitTime)
		{
			return default(float);
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x16FB8A0", Offset = "0x16FB8A0", VA = "0x16FB8A0")]
		public static float WaitUntilDone(CoroutineHandle otherCoroutine)
		{
			return default(float);
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x16FB908", Offset = "0x16FB908", VA = "0x16FB908")]
		public static float WaitUntilDone(CoroutineHandle otherCoroutine, bool warnOnIssue)
		{
			return default(float);
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x16FBBD8", Offset = "0x16FBBD8", VA = "0x16FBBD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCD978", Offset = "0xBCD978")]
		private IEnumerator<float> _StartWhenDone(CoroutineHandle handle, IEnumerator<float> proc)
		{
			return null;
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x16FBC78", Offset = "0x16FBC78", VA = "0x16FBC78")]
		private void SwapToLast(CoroutineHandle firstHandle, CoroutineHandle lastHandle)
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x16F6BA0", Offset = "0x16F6BA0", VA = "0x16F6BA0")]
		private void CloseWaitingProcess(CoroutineHandle handle)
		{
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x16FBFF0", Offset = "0x16FBFF0", VA = "0x16FBFF0")]
		private bool HandleIsInWaitingList(CoroutineHandle handle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x16FC0BC", Offset = "0x16FC0BC", VA = "0x16FC0BC")]
		private static IEnumerator<float> ReturnTmpRefForRepFunc(IEnumerator<float> coptr, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x16FC130", Offset = "0x16FC130", VA = "0x16FC130")]
		public static float WaitUntilDone(AsyncOperation operation)
		{
			return default(float);
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x16FC2C0", Offset = "0x16FC2C0", VA = "0x16FC2C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCD9DC", Offset = "0xBCD9DC")]
		private static IEnumerator<float> _StartWhenDone(AsyncOperation operation, IEnumerator<float> pausedProc)
		{
			return null;
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0x16FC358", Offset = "0x16FC358", VA = "0x16FC358")]
		public static float WaitUntilDone(CustomYieldInstruction operation)
		{
			return default(float);
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x16FC4EC", Offset = "0x16FC4EC", VA = "0x16FC4EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCDA40", Offset = "0xBCDA40")]
		private static IEnumerator<float> _StartWhenDone(CustomYieldInstruction operation, IEnumerator<float> pausedProc)
		{
			return null;
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x16FC584", Offset = "0x16FC584", VA = "0x16FC584")]
		public bool LockCoroutine(CoroutineHandle coroutine, CoroutineHandle key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x16FC71C", Offset = "0x16FC71C", VA = "0x16FC71C")]
		public bool UnlockCoroutine(CoroutineHandle coroutine, CoroutineHandle key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0x16FC86C", Offset = "0x16FC86C", VA = "0x16FC86C")]
		public static CoroutineHandle CallDelayed(float delay, Action action)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x16FC9C4", Offset = "0x16FC9C4", VA = "0x16FC9C4")]
		public CoroutineHandle CallDelayedOnInstance(float delay, Action action)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0x16FCA04", Offset = "0x16FCA04", VA = "0x16FCA04")]
		public static CoroutineHandle CallDelayed(float delay, Action action, GameObject cancelWith)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0x16FCAAC", Offset = "0x16FCAAC", VA = "0x16FCAAC")]
		public CoroutineHandle CallDelayedOnInstance(float delay, Action action, GameObject cancelWith)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0x16FC908", Offset = "0x16FC908", VA = "0x16FC908")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCDAA4", Offset = "0xBCDAA4")]
		private IEnumerator<float> _DelayedCall(float delay, Action action, GameObject cancelWith)
		{
			return null;
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0x16FCAE8", Offset = "0x16FCAE8", VA = "0x16FCAE8")]
		public static CoroutineHandle CallPeriodically(float timeframe, float period, Action action, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0x16FCC60", Offset = "0x16FCC60", VA = "0x16FCC60")]
		public CoroutineHandle CallPeriodicallyOnInstance(float timeframe, float period, Action action, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0x16FCCA0", Offset = "0x16FCCA0", VA = "0x16FCCA0")]
		public static CoroutineHandle CallPeriodically(float timeframe, float period, Action action, Segment segment, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0x16FCD58", Offset = "0x16FCD58", VA = "0x16FCD58")]
		public CoroutineHandle CallPeriodicallyOnInstance(float timeframe, float period, Action action, Segment segment, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0x16FCDA0", Offset = "0x16FCDA0", VA = "0x16FCDA0")]
		public static CoroutineHandle CallContinuously(float timeframe, Action action, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0x16FCE50", Offset = "0x16FCE50", VA = "0x16FCE50")]
		public CoroutineHandle CallContinuouslyOnInstance(float timeframe, Action action, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0x16FCE94", Offset = "0x16FCE94", VA = "0x16FCE94")]
		public static CoroutineHandle CallContinuously(float timeframe, Action action, Segment timing, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0x16FCF48", Offset = "0x16FCF48", VA = "0x16FCF48")]
		public CoroutineHandle CallContinuouslyOnInstance(float timeframe, Action action, Segment timing, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0x16FCB9C", Offset = "0x16FCB9C", VA = "0x16FCB9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCDB08", Offset = "0xBCDB08")]
		private IEnumerator<float> _CallContinuously(float timeframe, float period, Action action, Action onDone)
		{
			return null;
		}

		[Token(Token = "0x6000767")]
		public static CoroutineHandle CallPeriodically<T>(T reference, float timeframe, float period, Action<T> action, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000768")]
		public CoroutineHandle CallPeriodicallyOnInstance<T>(T reference, float timeframe, float period, Action<T> action, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000769")]
		public static CoroutineHandle CallPeriodically<T>(T reference, float timeframe, float period, Action<T> action, Segment timing, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600076A")]
		public CoroutineHandle CallPeriodicallyOnInstance<T>(T reference, float timeframe, float period, Action<T> action, Segment timing, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600076B")]
		public static CoroutineHandle CallContinuously<T>(T reference, float timeframe, Action<T> action, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600076C")]
		public CoroutineHandle CallContinuouslyOnInstance<T>(T reference, float timeframe, Action<T> action, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600076D")]
		public static CoroutineHandle CallContinuously<T>(T reference, float timeframe, Action<T> action, Segment timing, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600076E")]
		public CoroutineHandle CallContinuouslyOnInstance<T>(T reference, float timeframe, Action<T> action, Segment timing, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600076F")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCDB6C", Offset = "0xBCDB6C")]
		private IEnumerator<float> _CallContinuously<T>(T reference, float timeframe, float period, Action<T> action, [Optional] Action<T> onDone)
		{
			return null;
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x16FCF94", Offset = "0x16FCF94", VA = "0x16FCF94")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCDBD0", Offset = "0xBCDBD0")]
		public new Coroutine StartCoroutine(IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x16FCF9C", Offset = "0x16FCF9C", VA = "0x16FCF9C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCDC0C", Offset = "0xBCDC0C")]
		public new Coroutine StartCoroutine(string methodName, object value)
		{
			return null;
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x16FCFA4", Offset = "0x16FCFA4", VA = "0x16FCFA4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCDC48", Offset = "0xBCDC48")]
		public new Coroutine StartCoroutine(string methodName)
		{
			return null;
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x16FCFAC", Offset = "0x16FCFAC", VA = "0x16FCFAC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCDC84", Offset = "0xBCDC84")]
		public new Coroutine StartCoroutine_Auto(IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0x16FCFB4", Offset = "0x16FCFB4", VA = "0x16FCFB4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCDCC0", Offset = "0xBCDCC0")]
		public new void StopCoroutine(string methodName)
		{
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x16FCFB8", Offset = "0x16FCFB8", VA = "0x16FCFB8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCDCFC", Offset = "0xBCDCFC")]
		public new void StopCoroutine(IEnumerator routine)
		{
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x16FCFBC", Offset = "0x16FCFBC", VA = "0x16FCFBC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCDD38", Offset = "0xBCDD38")]
		public new void StopCoroutine(Coroutine routine)
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x16FCFC0", Offset = "0x16FCFC0", VA = "0x16FCFC0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCDD74", Offset = "0xBCDD74")]
		public new void StopAllCoroutines()
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x16FCFC4", Offset = "0x16FCFC4", VA = "0x16FCFC4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCDDB0", Offset = "0xBCDDB0")]
		public new static void Destroy(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x16FCFC8", Offset = "0x16FCFC8", VA = "0x16FCFC8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCDDEC", Offset = "0xBCDDEC")]
		public new static void Destroy(UnityEngine.Object obj, float f)
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x16FCFCC", Offset = "0x16FCFCC", VA = "0x16FCFCC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCDE28", Offset = "0xBCDE28")]
		public static void DestroyObject(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x16FCFD0", Offset = "0x16FCFD0", VA = "0x16FCFD0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCDE64", Offset = "0xBCDE64")]
		public static void DestroyObject(UnityEngine.Object obj, float f)
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x16FCFD4", Offset = "0x16FCFD4", VA = "0x16FCFD4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCDEA0", Offset = "0xBCDEA0")]
		public new static void DestroyImmediate(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x16FCFD8", Offset = "0x16FCFD8", VA = "0x16FCFD8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCDEDC", Offset = "0xBCDEDC")]
		public new static void DestroyImmediate(UnityEngine.Object obj, bool b)
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x16FCFDC", Offset = "0x16FCFDC", VA = "0x16FCFDC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCDF18", Offset = "0xBCDF18")]
		public new static void Instantiate(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x16FCFE0", Offset = "0x16FCFE0", VA = "0x16FCFE0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCDF54", Offset = "0xBCDF54")]
		public new static void Instantiate(UnityEngine.Object original, Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000780")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCDF90", Offset = "0xBCDF90")]
		public new static void Instantiate<T>(T original) where T : UnityEngine.Object
		{
		}

		[Token(Token = "0x6000781")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCDFCC", Offset = "0xBCDFCC")]
		public new static T FindObjectOfType<T>() where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x16FCFE4", Offset = "0x16FCFE4", VA = "0x16FCFE4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCE008", Offset = "0xBCE008")]
		public new static UnityEngine.Object FindObjectOfType(Type t)
		{
			return null;
		}

		[Token(Token = "0x6000783")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCE044", Offset = "0xBCE044")]
		public new static T[] FindObjectsOfType<T>() where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x16FCFEC", Offset = "0x16FCFEC", VA = "0x16FCFEC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCE080", Offset = "0xBCE080")]
		public new static UnityEngine.Object[] FindObjectsOfType(Type t)
		{
			return null;
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x16FCFF4", Offset = "0x16FCFF4", VA = "0x16FCFF4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCE0BC", Offset = "0xBCE0BC")]
		public new static void print(object message)
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x16FCFF8", Offset = "0x16FCFF8", VA = "0x16FCFF8")]
		public Timing()
		{
		}
	}
	[Token(Token = "0x2000091")]
	public enum Segment
	{
		[Token(Token = "0x4000328")]
		Invalid = -1,
		[Token(Token = "0x4000329")]
		Update,
		[Token(Token = "0x400032A")]
		FixedUpdate,
		[Token(Token = "0x400032B")]
		LateUpdate,
		[Token(Token = "0x400032C")]
		SlowUpdate
	}
	[Token(Token = "0x2000092")]
	public enum DebugInfoType
	{
		[Token(Token = "0x400032E")]
		None,
		[Token(Token = "0x400032F")]
		SeperateCoroutines,
		[Token(Token = "0x4000330")]
		SeperateTags
	}
	[Token(Token = "0x2000093")]
	public struct CoroutineHandle : IEquatable<CoroutineHandle>
	{
		[Token(Token = "0x4000331")]
		private const byte ReservedSpace = 15;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] NextIndex;

		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int _id;

		[Token(Token = "0x170000D3")]
		public byte Key
		{
			[Token(Token = "0x6000788")]
			[Address(RVA = "0xD07078", Offset = "0xD07078", VA = "0xD07078")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x170000D4")]
		public bool IsValid
		{
			[Token(Token = "0x600078F")]
			[Address(RVA = "0xD070AC", Offset = "0xD070AC", VA = "0xD070AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0xD07084", Offset = "0xD07084", VA = "0xD07084")]
		public CoroutineHandle(byte ind)
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0xD0708C", Offset = "0xD0708C", VA = "0xD0708C", Slot = "4")]
		public bool Equals(CoroutineHandle other)
		{
			return default(bool);
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0xD0709C", Offset = "0xD0709C", VA = "0xD0709C", Slot = "0")]
		public override bool Equals(object other)
		{
			return default(bool);
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x16F2E9C", Offset = "0x16F2E9C", VA = "0x16F2E9C")]
		public static bool operator ==(CoroutineHandle a, CoroutineHandle b)
		{
			return default(bool);
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x16F2EA8", Offset = "0x16F2EA8", VA = "0x16F2EA8")]
		public static bool operator !=(CoroutineHandle a, CoroutineHandle b)
		{
			return default(bool);
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0xD070A4", Offset = "0xD070A4", VA = "0xD070A4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
}
namespace Valve.VR
{
	[Token(Token = "0x2000094")]
	public struct IVRSystem
	{
		[Token(Token = "0x200028E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC92B4", Offset = "0xBC92B4")]
		internal delegate void _GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x200028F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC92C8", Offset = "0xBC92C8")]
		internal delegate HmdMatrix44_t _GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ);

		[Token(Token = "0x2000290")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC92DC", Offset = "0xBC92DC")]
		internal delegate void _GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom);

		[Token(Token = "0x2000291")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC92F0", Offset = "0xBC92F0")]
		internal delegate bool _ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates);

		[Token(Token = "0x2000292")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9304", Offset = "0xBC9304")]
		internal delegate HmdMatrix34_t _GetEyeToHeadTransform(EVREye eEye);

		[Token(Token = "0x2000293")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9318", Offset = "0xBC9318")]
		internal delegate bool _GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter);

		[Token(Token = "0x2000294")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC932C", Offset = "0xBC932C")]
		internal delegate int _GetD3D9AdapterIndex();

		[Token(Token = "0x2000295")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9340", Offset = "0xBC9340")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex);

		[Token(Token = "0x2000296")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9354", Offset = "0xBC9354")]
		internal delegate void _GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance);

		[Token(Token = "0x2000297")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9368", Offset = "0xBC9368")]
		internal delegate bool _IsDisplayOnDesktop();

		[Token(Token = "0x2000298")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC937C", Offset = "0xBC937C")]
		internal delegate bool _SetDisplayVisibility(bool bIsVisibleOnDesktop);

		[Token(Token = "0x2000299")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9390", Offset = "0xBC9390")]
		internal delegate void _GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, [In][Out] TrackedDevicePose_t[] pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount);

		[Token(Token = "0x200029A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC93A4", Offset = "0xBC93A4")]
		internal delegate void _ResetSeatedZeroPose();

		[Token(Token = "0x200029B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC93B8", Offset = "0xBC93B8")]
		internal delegate HmdMatrix34_t _GetSeatedZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x200029C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC93CC", Offset = "0xBC93CC")]
		internal delegate HmdMatrix34_t _GetRawZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x200029D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC93E0", Offset = "0xBC93E0")]
		internal delegate uint _GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, [In][Out] uint[] punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex);

		[Token(Token = "0x200029E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC93F4", Offset = "0xBC93F4")]
		internal delegate EDeviceActivityLevel _GetTrackedDeviceActivityLevel(uint unDeviceId);

		[Token(Token = "0x200029F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9408", Offset = "0xBC9408")]
		internal delegate void _ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform);

		[Token(Token = "0x20002A0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC941C", Offset = "0xBC941C")]
		internal delegate uint _GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType);

		[Token(Token = "0x20002A1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9430", Offset = "0xBC9430")]
		internal delegate ETrackedControllerRole _GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex);

		[Token(Token = "0x20002A2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9444", Offset = "0xBC9444")]
		internal delegate ETrackedDeviceClass _GetTrackedDeviceClass(uint unDeviceIndex);

		[Token(Token = "0x20002A3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9458", Offset = "0xBC9458")]
		internal delegate bool _IsTrackedDeviceConnected(uint unDeviceIndex);

		[Token(Token = "0x20002A4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC946C", Offset = "0xBC946C")]
		internal delegate bool _GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20002A5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9480", Offset = "0xBC9480")]
		internal delegate float _GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20002A6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9494", Offset = "0xBC9494")]
		internal delegate int _GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20002A7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC94A8", Offset = "0xBC94A8")]
		internal delegate ulong _GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20002A8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC94BC", Offset = "0xBC94BC")]
		internal delegate HmdMatrix34_t _GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20002A9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC94D0", Offset = "0xBC94D0")]
		internal delegate uint _GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x20002AA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC94E4", Offset = "0xBC94E4")]
		internal delegate uint _GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x20002AB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC94F8", Offset = "0xBC94F8")]
		internal delegate IntPtr _GetPropErrorNameFromEnum(ETrackedPropertyError error);

		[Token(Token = "0x20002AC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC950C", Offset = "0xBC950C")]
		internal delegate bool _PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x20002AD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9520", Offset = "0xBC9520")]
		internal delegate bool _PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x20002AE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9534", Offset = "0xBC9534")]
		internal delegate IntPtr _GetEventTypeNameFromEnum(EVREventType eType);

		[Token(Token = "0x20002AF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9548", Offset = "0xBC9548")]
		internal delegate HiddenAreaMesh_t _GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type);

		[Token(Token = "0x20002B0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC955C", Offset = "0xBC955C")]
		internal delegate bool _GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize);

		[Token(Token = "0x20002B1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9570", Offset = "0xBC9570")]
		internal delegate bool _GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x20002B2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9584", Offset = "0xBC9584")]
		internal delegate void _TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec);

		[Token(Token = "0x20002B3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9598", Offset = "0xBC9598")]
		internal delegate IntPtr _GetButtonIdNameFromEnum(EVRButtonId eButtonId);

		[Token(Token = "0x20002B4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC95AC", Offset = "0xBC95AC")]
		internal delegate IntPtr _GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType);

		[Token(Token = "0x20002B5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC95C0", Offset = "0xBC95C0")]
		internal delegate bool _IsInputAvailable();

		[Token(Token = "0x20002B6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC95D4", Offset = "0xBC95D4")]
		internal delegate bool _IsSteamVRDrawingControllers();

		[Token(Token = "0x20002B7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC95E8", Offset = "0xBC95E8")]
		internal delegate bool _ShouldApplicationPause();

		[Token(Token = "0x20002B8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC95FC", Offset = "0xBC95FC")]
		internal delegate bool _ShouldApplicationReduceRenderingWork();

		[Token(Token = "0x20002B9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9610", Offset = "0xBC9610")]
		internal delegate uint _DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize);

		[Token(Token = "0x20002BA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9624", Offset = "0xBC9624")]
		internal delegate EVRFirmwareError _PerformFirmwareUpdate(uint unDeviceIndex);

		[Token(Token = "0x20002BB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9638", Offset = "0xBC9638")]
		internal delegate void _AcknowledgeQuit_Exiting();

		[Token(Token = "0x20002BC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC964C", Offset = "0xBC964C")]
		internal delegate void _AcknowledgeQuit_UserPrompt();

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetRecommendedRenderTargetSize GetRecommendedRenderTargetSize;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetProjectionMatrix GetProjectionMatrix;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetProjectionRaw GetProjectionRaw;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ComputeDistortion ComputeDistortion;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetEyeToHeadTransform GetEyeToHeadTransform;

		[Token(Token = "0x4000339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetTimeSinceLastVsync GetTimeSinceLastVsync;

		[Token(Token = "0x400033A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetD3D9AdapterIndex GetD3D9AdapterIndex;

		[Token(Token = "0x400033B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;

		[Token(Token = "0x400033C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOutputDevice GetOutputDevice;

		[Token(Token = "0x400033D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _IsDisplayOnDesktop IsDisplayOnDesktop;

		[Token(Token = "0x400033E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetDisplayVisibility SetDisplayVisibility;

		[Token(Token = "0x400033F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetDeviceToAbsoluteTrackingPose GetDeviceToAbsoluteTrackingPose;

		[Token(Token = "0x4000340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ResetSeatedZeroPose ResetSeatedZeroPose;

		[Token(Token = "0x4000341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetSeatedZeroPoseToStandingAbsoluteTrackingPose GetSeatedZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetRawZeroPoseToStandingAbsoluteTrackingPose GetRawZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetSortedTrackedDeviceIndicesOfClass GetSortedTrackedDeviceIndicesOfClass;

		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetTrackedDeviceActivityLevel GetTrackedDeviceActivityLevel;

		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ApplyTransform ApplyTransform;

		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetTrackedDeviceIndexForControllerRole GetTrackedDeviceIndexForControllerRole;

		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetControllerRoleForTrackedDeviceIndex GetControllerRoleForTrackedDeviceIndex;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetTrackedDeviceClass GetTrackedDeviceClass;

		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsTrackedDeviceConnected IsTrackedDeviceConnected;

		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetBoolTrackedDeviceProperty GetBoolTrackedDeviceProperty;

		[Token(Token = "0x400034B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetFloatTrackedDeviceProperty GetFloatTrackedDeviceProperty;

		[Token(Token = "0x400034C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetInt32TrackedDeviceProperty GetInt32TrackedDeviceProperty;

		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetUint64TrackedDeviceProperty GetUint64TrackedDeviceProperty;

		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _GetMatrix34TrackedDeviceProperty GetMatrix34TrackedDeviceProperty;

		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetArrayTrackedDeviceProperty GetArrayTrackedDeviceProperty;

		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _GetStringTrackedDeviceProperty GetStringTrackedDeviceProperty;

		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetPropErrorNameFromEnum GetPropErrorNameFromEnum;

		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _PollNextEvent PollNextEvent;

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _PollNextEventWithPose PollNextEventWithPose;

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetEventTypeNameFromEnum GetEventTypeNameFromEnum;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetHiddenAreaMesh GetHiddenAreaMesh;

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetControllerState GetControllerState;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetControllerStateWithPose GetControllerStateWithPose;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _TriggerHapticPulse TriggerHapticPulse;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _GetButtonIdNameFromEnum GetButtonIdNameFromEnum;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetControllerAxisTypeNameFromEnum GetControllerAxisTypeNameFromEnum;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _IsInputAvailable IsInputAvailable;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _IsSteamVRDrawingControllers IsSteamVRDrawingControllers;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShouldApplicationPause ShouldApplicationPause;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _ShouldApplicationReduceRenderingWork ShouldApplicationReduceRenderingWork;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _DriverDebugRequest DriverDebugRequest;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _PerformFirmwareUpdate PerformFirmwareUpdate;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _AcknowledgeQuit_Exiting AcknowledgeQuit_Exiting;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _AcknowledgeQuit_UserPrompt AcknowledgeQuit_UserPrompt;
	}
	[Token(Token = "0x2000095")]
	public struct IVRExtendedDisplay
	{
		[Token(Token = "0x20002BD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9660", Offset = "0xBC9660")]
		internal delegate void _GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20002BE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9674", Offset = "0xBC9674")]
		internal delegate void _GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20002BF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9688", Offset = "0xBC9688")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex);

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetWindowBounds GetWindowBounds;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetEyeOutputViewport GetEyeOutputViewport;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;
	}
	[Token(Token = "0x2000096")]
	public struct IVRTrackedCamera
	{
		[Token(Token = "0x20002C0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC969C", Offset = "0xBC969C")]
		internal delegate IntPtr _GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError);

		[Token(Token = "0x20002C1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC96B0", Offset = "0xBC96B0")]
		internal delegate EVRTrackedCameraError _HasCamera(uint nDeviceIndex, ref bool pHasCamera);

		[Token(Token = "0x20002C2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC96C4", Offset = "0xBC96C4")]
		internal delegate EVRTrackedCameraError _GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize);

		[Token(Token = "0x20002C3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC96D8", Offset = "0xBC96D8")]
		internal delegate EVRTrackedCameraError _GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter);

		[Token(Token = "0x20002C4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC96EC", Offset = "0xBC96EC")]
		internal delegate EVRTrackedCameraError _GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection);

		[Token(Token = "0x20002C5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9700", Offset = "0xBC9700")]
		internal delegate EVRTrackedCameraError _AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle);

		[Token(Token = "0x20002C6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9714", Offset = "0xBC9714")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamingService(ulong hTrackedCamera);

		[Token(Token = "0x20002C7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9728", Offset = "0xBC9728")]
		internal delegate EVRTrackedCameraError _GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x20002C8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC973C", Offset = "0xBC973C")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20002C9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9750", Offset = "0xBC9750")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x20002CA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9764", Offset = "0xBC9764")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x20002CB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9778", Offset = "0xBC9778")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId);

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCameraErrorNameFromEnum GetCameraErrorNameFromEnum;

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HasCamera HasCamera;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetCameraFrameSize GetCameraFrameSize;

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetCameraIntrinsics GetCameraIntrinsics;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetCameraProjection GetCameraProjection;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _AcquireVideoStreamingService AcquireVideoStreamingService;

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ReleaseVideoStreamingService ReleaseVideoStreamingService;

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetVideoStreamFrameBuffer GetVideoStreamFrameBuffer;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetVideoStreamTextureSize GetVideoStreamTextureSize;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetVideoStreamTextureD3D11 GetVideoStreamTextureD3D11;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetVideoStreamTextureGL GetVideoStreamTextureGL;

		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _ReleaseVideoStreamTextureGL ReleaseVideoStreamTextureGL;
	}
	[Token(Token = "0x2000097")]
	public struct IVRApplications
	{
		[Token(Token = "0x20002CC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC978C", Offset = "0xBC978C")]
		internal delegate EVRApplicationError _AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary);

		[Token(Token = "0x20002CD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC97A0", Offset = "0xBC97A0")]
		internal delegate EVRApplicationError _RemoveApplicationManifest(string pchApplicationManifestFullPath);

		[Token(Token = "0x20002CE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC97B4", Offset = "0xBC97B4")]
		internal delegate bool _IsApplicationInstalled(string pchAppKey);

		[Token(Token = "0x20002CF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC97C8", Offset = "0xBC97C8")]
		internal delegate uint _GetApplicationCount();

		[Token(Token = "0x20002D0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC97DC", Offset = "0xBC97DC")]
		internal delegate EVRApplicationError _GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x20002D1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC97F0", Offset = "0xBC97F0")]
		internal delegate EVRApplicationError _GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x20002D2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9804", Offset = "0xBC9804")]
		internal delegate EVRApplicationError _LaunchApplication(string pchAppKey);

		[Token(Token = "0x20002D3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9818", Offset = "0xBC9818")]
		internal delegate EVRApplicationError _LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, [In][Out] AppOverrideKeys_t[] pKeys, uint unKeys);

		[Token(Token = "0x20002D4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC982C", Offset = "0xBC982C")]
		internal delegate EVRApplicationError _LaunchApplicationFromMimeType(string pchMimeType, string pchArgs);

		[Token(Token = "0x20002D5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9840", Offset = "0xBC9840")]
		internal delegate EVRApplicationError _LaunchDashboardOverlay(string pchAppKey);

		[Token(Token = "0x20002D6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9854", Offset = "0xBC9854")]
		internal delegate bool _CancelApplicationLaunch(string pchAppKey);

		[Token(Token = "0x20002D7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9868", Offset = "0xBC9868")]
		internal delegate EVRApplicationError _IdentifyApplication(uint unProcessId, string pchAppKey);

		[Token(Token = "0x20002D8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC987C", Offset = "0xBC987C")]
		internal delegate uint _GetApplicationProcessId(string pchAppKey);

		[Token(Token = "0x20002D9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9890", Offset = "0xBC9890")]
		internal delegate IntPtr _GetApplicationsErrorNameFromEnum(EVRApplicationError error);

		[Token(Token = "0x20002DA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC98A4", Offset = "0xBC98A4")]
		internal delegate uint _GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError);

		[Token(Token = "0x20002DB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC98B8", Offset = "0xBC98B8")]
		internal delegate bool _GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x20002DC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC98CC", Offset = "0xBC98CC")]
		internal delegate ulong _GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x20002DD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC98E0", Offset = "0xBC98E0")]
		internal delegate EVRApplicationError _SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch);

		[Token(Token = "0x20002DE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC98F4", Offset = "0xBC98F4")]
		internal delegate bool _GetApplicationAutoLaunch(string pchAppKey);

		[Token(Token = "0x20002DF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9908", Offset = "0xBC9908")]
		internal delegate EVRApplicationError _SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType);

		[Token(Token = "0x20002E0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC991C", Offset = "0xBC991C")]
		internal delegate bool _GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x20002E1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9930", Offset = "0xBC9930")]
		internal delegate bool _GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer);

		[Token(Token = "0x20002E2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9944", Offset = "0xBC9944")]
		internal delegate uint _GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer);

		[Token(Token = "0x20002E3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9958", Offset = "0xBC9958")]
		internal delegate uint _GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs);

		[Token(Token = "0x20002E4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC996C", Offset = "0xBC996C")]
		internal delegate EVRApplicationError _GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x20002E5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9980", Offset = "0xBC9980")]
		internal delegate EVRApplicationTransitionState _GetTransitionState();

		[Token(Token = "0x20002E6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9994", Offset = "0xBC9994")]
		internal delegate EVRApplicationError _PerformApplicationPrelaunchCheck(string pchAppKey);

		[Token(Token = "0x20002E7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC99A8", Offset = "0xBC99A8")]
		internal delegate IntPtr _GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state);

		[Token(Token = "0x20002E8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC99BC", Offset = "0xBC99BC")]
		internal delegate bool _IsQuitUserPromptRequested();

		[Token(Token = "0x20002E9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC99D0", Offset = "0xBC99D0")]
		internal delegate EVRApplicationError _LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory);

		[Token(Token = "0x20002EA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC99E4", Offset = "0xBC99E4")]
		internal delegate uint _GetCurrentSceneProcessId();

		[Token(Token = "0x4000372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _AddApplicationManifest AddApplicationManifest;

		[Token(Token = "0x4000373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveApplicationManifest RemoveApplicationManifest;

		[Token(Token = "0x4000374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _IsApplicationInstalled IsApplicationInstalled;

		[Token(Token = "0x4000375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetApplicationCount GetApplicationCount;

		[Token(Token = "0x4000376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetApplicationKeyByIndex GetApplicationKeyByIndex;

		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetApplicationKeyByProcessId GetApplicationKeyByProcessId;

		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _LaunchApplication LaunchApplication;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _LaunchTemplateApplication LaunchTemplateApplication;

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _LaunchApplicationFromMimeType LaunchApplicationFromMimeType;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _LaunchDashboardOverlay LaunchDashboardOverlay;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _CancelApplicationLaunch CancelApplicationLaunch;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _IdentifyApplication IdentifyApplication;

		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetApplicationProcessId GetApplicationProcessId;

		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetApplicationsErrorNameFromEnum GetApplicationsErrorNameFromEnum;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetApplicationPropertyString GetApplicationPropertyString;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetApplicationPropertyBool GetApplicationPropertyBool;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetApplicationPropertyUint64 GetApplicationPropertyUint64;

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _SetApplicationAutoLaunch SetApplicationAutoLaunch;

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetApplicationAutoLaunch GetApplicationAutoLaunch;

		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _SetDefaultApplicationForMimeType SetDefaultApplicationForMimeType;

		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetDefaultApplicationForMimeType GetDefaultApplicationForMimeType;

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetApplicationSupportedMimeTypes GetApplicationSupportedMimeTypes;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetApplicationsThatSupportMimeType GetApplicationsThatSupportMimeType;

		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetApplicationLaunchArguments GetApplicationLaunchArguments;

		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetStartingApplication GetStartingApplication;

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetTransitionState GetTransitionState;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _PerformApplicationPrelaunchCheck PerformApplicationPrelaunchCheck;

		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetApplicationsTransitionStateNameFromEnum GetApplicationsTransitionStateNameFromEnum;

		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _IsQuitUserPromptRequested IsQuitUserPromptRequested;

		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _LaunchInternalProcess LaunchInternalProcess;

		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetCurrentSceneProcessId GetCurrentSceneProcessId;
	}
	[Token(Token = "0x2000098")]
	public struct IVRChaperone
	{
		[Token(Token = "0x20002EB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC99F8", Offset = "0xBC99F8")]
		internal delegate ChaperoneCalibrationState _GetCalibrationState();

		[Token(Token = "0x20002EC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9A0C", Offset = "0xBC9A0C")]
		internal delegate bool _GetPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x20002ED")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9A20", Offset = "0xBC9A20")]
		internal delegate bool _GetPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x20002EE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9A34", Offset = "0xBC9A34")]
		internal delegate void _ReloadInfo();

		[Token(Token = "0x20002EF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9A48", Offset = "0xBC9A48")]
		internal delegate void _SetSceneColor(HmdColor_t color);

		[Token(Token = "0x20002F0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9A5C", Offset = "0xBC9A5C")]
		internal delegate void _GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor);

		[Token(Token = "0x20002F1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9A70", Offset = "0xBC9A70")]
		internal delegate bool _AreBoundsVisible();

		[Token(Token = "0x20002F2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9A84", Offset = "0xBC9A84")]
		internal delegate void _ForceBoundsVisible(bool bForce);

		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCalibrationState GetCalibrationState;

		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetPlayAreaSize GetPlayAreaSize;

		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetPlayAreaRect GetPlayAreaRect;

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ReloadInfo ReloadInfo;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetSceneColor SetSceneColor;

		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetBoundsColor GetBoundsColor;

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _AreBoundsVisible AreBoundsVisible;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _ForceBoundsVisible ForceBoundsVisible;
	}
	[Token(Token = "0x2000099")]
	public struct IVRChaperoneSetup
	{
		[Token(Token = "0x20002F3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9A98", Offset = "0xBC9A98")]
		internal delegate bool _CommitWorkingCopy(EChaperoneConfigFile configFile);

		[Token(Token = "0x20002F4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9AAC", Offset = "0xBC9AAC")]
		internal delegate void _RevertWorkingCopy();

		[Token(Token = "0x20002F5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9AC0", Offset = "0xBC9AC0")]
		internal delegate bool _GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x20002F6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9AD4", Offset = "0xBC9AD4")]
		internal delegate bool _GetWorkingPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x20002F7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9AE8", Offset = "0xBC9AE8")]
		internal delegate bool _GetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x20002F8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9AFC", Offset = "0xBC9AFC")]
		internal delegate bool _GetLiveCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x20002F9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9B10", Offset = "0xBC9B10")]
		internal delegate bool _GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x20002FA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9B24", Offset = "0xBC9B24")]
		internal delegate bool _GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x20002FB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9B38", Offset = "0xBC9B38")]
		internal delegate void _SetWorkingPlayAreaSize(float sizeX, float sizeZ);

		[Token(Token = "0x20002FC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9B4C", Offset = "0xBC9B4C")]
		internal delegate void _SetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x20002FD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9B60", Offset = "0xBC9B60")]
		internal delegate void _SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x20002FE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9B74", Offset = "0xBC9B74")]
		internal delegate void _SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x20002FF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9B88", Offset = "0xBC9B88")]
		internal delegate void _ReloadFromDisk(EChaperoneConfigFile configFile);

		[Token(Token = "0x2000300")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9B9C", Offset = "0xBC9B9C")]
		internal delegate bool _GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000301")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9BB0", Offset = "0xBC9BB0")]
		internal delegate void _SetWorkingCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, uint unTagCount);

		[Token(Token = "0x2000302")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9BC4", Offset = "0xBC9BC4")]
		internal delegate bool _GetLiveCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, ref uint punTagCount);

		[Token(Token = "0x2000303")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9BD8", Offset = "0xBC9BD8")]
		internal delegate bool _SetWorkingPhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x2000304")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9BEC", Offset = "0xBC9BEC")]
		internal delegate bool _GetLivePhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x2000305")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9C00", Offset = "0xBC9C00")]
		internal delegate bool _ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength);

		[Token(Token = "0x2000306")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9C14", Offset = "0xBC9C14")]
		internal delegate bool _ImportFromBufferToWorking(string pBuffer, uint nImportFlags);

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CommitWorkingCopy CommitWorkingCopy;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RevertWorkingCopy RevertWorkingCopy;

		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetWorkingPlayAreaSize GetWorkingPlayAreaSize;

		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetWorkingPlayAreaRect GetWorkingPlayAreaRect;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetWorkingCollisionBoundsInfo GetWorkingCollisionBoundsInfo;

		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetLiveCollisionBoundsInfo GetLiveCollisionBoundsInfo;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetWorkingSeatedZeroPoseToRawTrackingPose GetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetWorkingStandingZeroPoseToRawTrackingPose GetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _SetWorkingPlayAreaSize SetWorkingPlayAreaSize;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _SetWorkingCollisionBoundsInfo SetWorkingCollisionBoundsInfo;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetWorkingSeatedZeroPoseToRawTrackingPose SetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _SetWorkingStandingZeroPoseToRawTrackingPose SetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ReloadFromDisk ReloadFromDisk;

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetLiveSeatedZeroPoseToRawTrackingPose GetLiveSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetWorkingCollisionBoundsTagsInfo SetWorkingCollisionBoundsTagsInfo;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetLiveCollisionBoundsTagsInfo GetLiveCollisionBoundsTagsInfo;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetWorkingPhysicalBoundsInfo SetWorkingPhysicalBoundsInfo;

		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetLivePhysicalBoundsInfo GetLivePhysicalBoundsInfo;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _ExportLiveToBuffer ExportLiveToBuffer;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _ImportFromBufferToWorking ImportFromBufferToWorking;
	}
	[Token(Token = "0x200009A")]
	public struct IVRCompositor
	{
		[Token(Token = "0x2000307")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9C28", Offset = "0xBC9C28")]
		internal delegate void _SetTrackingSpace(ETrackingUniverseOrigin eOrigin);

		[Token(Token = "0x2000308")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9C3C", Offset = "0xBC9C3C")]
		internal delegate ETrackingUniverseOrigin _GetTrackingSpace();

		[Token(Token = "0x2000309")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9C50", Offset = "0xBC9C50")]
		internal delegate EVRCompositorError _WaitGetPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x200030A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9C64", Offset = "0xBC9C64")]
		internal delegate EVRCompositorError _GetLastPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x200030B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9C78", Offset = "0xBC9C78")]
		internal delegate EVRCompositorError _GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose);

		[Token(Token = "0x200030C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9C8C", Offset = "0xBC9C8C")]
		internal delegate EVRCompositorError _Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags);

		[Token(Token = "0x200030D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9CA0", Offset = "0xBC9CA0")]
		internal delegate void _ClearLastSubmittedFrame();

		[Token(Token = "0x200030E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9CB4", Offset = "0xBC9CB4")]
		internal delegate void _PostPresentHandoff();

		[Token(Token = "0x200030F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9CC8", Offset = "0xBC9CC8")]
		internal delegate bool _GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo);

		[Token(Token = "0x2000310")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9CDC", Offset = "0xBC9CDC")]
		internal delegate uint _GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames);

		[Token(Token = "0x2000311")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9CF0", Offset = "0xBC9CF0")]
		internal delegate float _GetFrameTimeRemaining();

		[Token(Token = "0x2000312")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9D04", Offset = "0xBC9D04")]
		internal delegate void _GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes);

		[Token(Token = "0x2000313")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9D18", Offset = "0xBC9D18")]
		internal delegate void _FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground);

		[Token(Token = "0x2000314")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9D2C", Offset = "0xBC9D2C")]
		internal delegate HmdColor_t _GetCurrentFadeColor(bool bBackground);

		[Token(Token = "0x2000315")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9D40", Offset = "0xBC9D40")]
		internal delegate void _FadeGrid(float fSeconds, bool bFadeIn);

		[Token(Token = "0x2000316")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9D54", Offset = "0xBC9D54")]
		internal delegate float _GetCurrentGridAlpha();

		[Token(Token = "0x2000317")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9D68", Offset = "0xBC9D68")]
		internal delegate EVRCompositorError _SetSkyboxOverride([In][Out] Texture_t[] pTextures, uint unTextureCount);

		[Token(Token = "0x2000318")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9D7C", Offset = "0xBC9D7C")]
		internal delegate void _ClearSkyboxOverride();

		[Token(Token = "0x2000319")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9D90", Offset = "0xBC9D90")]
		internal delegate void _CompositorBringToFront();

		[Token(Token = "0x200031A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9DA4", Offset = "0xBC9DA4")]
		internal delegate void _CompositorGoToBack();

		[Token(Token = "0x200031B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9DB8", Offset = "0xBC9DB8")]
		internal delegate void _CompositorQuit();

		[Token(Token = "0x200031C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9DCC", Offset = "0xBC9DCC")]
		internal delegate bool _IsFullscreen();

		[Token(Token = "0x200031D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9DE0", Offset = "0xBC9DE0")]
		internal delegate uint _GetCurrentSceneFocusProcess();

		[Token(Token = "0x200031E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9DF4", Offset = "0xBC9DF4")]
		internal delegate uint _GetLastFrameRenderer();

		[Token(Token = "0x200031F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9E08", Offset = "0xBC9E08")]
		internal delegate bool _CanRenderScene();

		[Token(Token = "0x2000320")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9E1C", Offset = "0xBC9E1C")]
		internal delegate void _ShowMirrorWindow();

		[Token(Token = "0x2000321")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9E30", Offset = "0xBC9E30")]
		internal delegate void _HideMirrorWindow();

		[Token(Token = "0x2000322")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9E44", Offset = "0xBC9E44")]
		internal delegate bool _IsMirrorWindowVisible();

		[Token(Token = "0x2000323")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9E58", Offset = "0xBC9E58")]
		internal delegate void _CompositorDumpImages();

		[Token(Token = "0x2000324")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9E6C", Offset = "0xBC9E6C")]
		internal delegate bool _ShouldAppRenderWithLowResources();

		[Token(Token = "0x2000325")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9E80", Offset = "0xBC9E80")]
		internal delegate void _ForceInterleavedReprojectionOn(bool bOverride);

		[Token(Token = "0x2000326")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9E94", Offset = "0xBC9E94")]
		internal delegate void _ForceReconnectProcess();

		[Token(Token = "0x2000327")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9EA8", Offset = "0xBC9EA8")]
		internal delegate void _SuspendRendering(bool bSuspend);

		[Token(Token = "0x2000328")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9EBC", Offset = "0xBC9EBC")]
		internal delegate EVRCompositorError _GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView);

		[Token(Token = "0x2000329")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9ED0", Offset = "0xBC9ED0")]
		internal delegate void _ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView);

		[Token(Token = "0x200032A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9EE4", Offset = "0xBC9EE4")]
		internal delegate EVRCompositorError _GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle);

		[Token(Token = "0x200032B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9EF8", Offset = "0xBC9EF8")]
		internal delegate bool _ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle);

		[Token(Token = "0x200032C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9F0C", Offset = "0xBC9F0C")]
		internal delegate void _LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x200032D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9F20", Offset = "0xBC9F20")]
		internal delegate void _UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x200032E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9F34", Offset = "0xBC9F34")]
		internal delegate uint _GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x200032F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9F48", Offset = "0xBC9F48")]
		internal delegate uint _GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x2000330")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9F5C", Offset = "0xBC9F5C")]
		internal delegate void _SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode);

		[Token(Token = "0x2000331")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9F70", Offset = "0xBC9F70")]
		internal delegate EVRCompositorError _SubmitExplicitTimingData();

		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetTrackingSpace SetTrackingSpace;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetTrackingSpace GetTrackingSpace;

		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _WaitGetPoses WaitGetPoses;

		[Token(Token = "0x40003B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetLastPoses GetLastPoses;

		[Token(Token = "0x40003B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetLastPoseForTrackedDeviceIndex GetLastPoseForTrackedDeviceIndex;

		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _Submit Submit;

		[Token(Token = "0x40003B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ClearLastSubmittedFrame ClearLastSubmittedFrame;

		[Token(Token = "0x40003B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _PostPresentHandoff PostPresentHandoff;

		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFrameTiming GetFrameTiming;

		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetFrameTimings GetFrameTimings;

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetFrameTimeRemaining GetFrameTimeRemaining;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetCumulativeStats GetCumulativeStats;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _FadeToColor FadeToColor;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetCurrentFadeColor GetCurrentFadeColor;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _FadeGrid FadeGrid;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetCurrentGridAlpha GetCurrentGridAlpha;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetSkyboxOverride SetSkyboxOverride;

		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ClearSkyboxOverride ClearSkyboxOverride;

		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _CompositorBringToFront CompositorBringToFront;

		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _CompositorGoToBack CompositorGoToBack;

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _CompositorQuit CompositorQuit;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsFullscreen IsFullscreen;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetCurrentSceneFocusProcess GetCurrentSceneFocusProcess;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetLastFrameRenderer GetLastFrameRenderer;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _CanRenderScene CanRenderScene;

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _ShowMirrorWindow ShowMirrorWindow;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _HideMirrorWindow HideMirrorWindow;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _IsMirrorWindowVisible IsMirrorWindowVisible;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _CompositorDumpImages CompositorDumpImages;

		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _ShouldAppRenderWithLowResources ShouldAppRenderWithLowResources;

		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _ForceInterleavedReprojectionOn ForceInterleavedReprojectionOn;

		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _ForceReconnectProcess ForceReconnectProcess;

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _SuspendRendering SuspendRendering;

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetMirrorTextureD3D11 GetMirrorTextureD3D11;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _ReleaseMirrorTextureD3D11 ReleaseMirrorTextureD3D11;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetMirrorTextureGL GetMirrorTextureGL;

		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _ReleaseSharedGLTexture ReleaseSharedGLTexture;

		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _LockGLSharedTextureForAccess LockGLSharedTextureForAccess;

		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _UnlockGLSharedTextureForAccess UnlockGLSharedTextureForAccess;

		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetVulkanInstanceExtensionsRequired GetVulkanInstanceExtensionsRequired;

		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _GetVulkanDeviceExtensionsRequired GetVulkanDeviceExtensionsRequired;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _SetExplicitTimingMode SetExplicitTimingMode;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _SubmitExplicitTimingData SubmitExplicitTimingData;
	}
	[Token(Token = "0x200009B")]
	public struct IVROverlay
	{
		[Token(Token = "0x2000332")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9F84", Offset = "0xBC9F84")]
		internal delegate EVROverlayError _FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle);

		[Token(Token = "0x2000333")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9F98", Offset = "0xBC9F98")]
		internal delegate EVROverlayError _CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle);

		[Token(Token = "0x2000334")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9FAC", Offset = "0xBC9FAC")]
		internal delegate EVROverlayError _DestroyOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000335")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9FC0", Offset = "0xBC9FC0")]
		internal delegate EVROverlayError _SetHighQualityOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000336")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9FD4", Offset = "0xBC9FD4")]
		internal delegate ulong _GetHighQualityOverlay();

		[Token(Token = "0x2000337")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9FE8", Offset = "0xBC9FE8")]
		internal delegate uint _GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x2000338")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBC9FFC", Offset = "0xBC9FFC")]
		internal delegate uint _GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x2000339")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA010", Offset = "0xBCA010")]
		internal delegate EVROverlayError _SetOverlayName(ulong ulOverlayHandle, string pchName);

		[Token(Token = "0x200033A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA024", Offset = "0xBCA024")]
		internal delegate EVROverlayError _GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight);

		[Token(Token = "0x200033B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA038", Offset = "0xBCA038")]
		internal delegate IntPtr _GetOverlayErrorNameFromEnum(EVROverlayError error);

		[Token(Token = "0x200033C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA04C", Offset = "0xBCA04C")]
		internal delegate EVROverlayError _SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID);

		[Token(Token = "0x200033D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA060", Offset = "0xBCA060")]
		internal delegate uint _GetOverlayRenderingPid(ulong ulOverlayHandle);

		[Token(Token = "0x200033E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA074", Offset = "0xBCA074")]
		internal delegate EVROverlayError _SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled);

		[Token(Token = "0x200033F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA088", Offset = "0xBCA088")]
		internal delegate EVROverlayError _GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled);

		[Token(Token = "0x2000340")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA09C", Offset = "0xBCA09C")]
		internal delegate EVROverlayError _SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue);

		[Token(Token = "0x2000341")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA0B0", Offset = "0xBCA0B0")]
		internal delegate EVROverlayError _GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue);

		[Token(Token = "0x2000342")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA0C4", Offset = "0xBCA0C4")]
		internal delegate EVROverlayError _SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha);

		[Token(Token = "0x2000343")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA0D8", Offset = "0xBCA0D8")]
		internal delegate EVROverlayError _GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha);

		[Token(Token = "0x2000344")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA0EC", Offset = "0xBCA0EC")]
		internal delegate EVROverlayError _SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect);

		[Token(Token = "0x2000345")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA100", Offset = "0xBCA100")]
		internal delegate EVROverlayError _GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect);

		[Token(Token = "0x2000346")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA114", Offset = "0xBCA114")]
		internal delegate EVROverlayError _SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder);

		[Token(Token = "0x2000347")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA128", Offset = "0xBCA128")]
		internal delegate EVROverlayError _GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder);

		[Token(Token = "0x2000348")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA13C", Offset = "0xBCA13C")]
		internal delegate EVROverlayError _SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters);

		[Token(Token = "0x2000349")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA150", Offset = "0xBCA150")]
		internal delegate EVROverlayError _GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters);

		[Token(Token = "0x200034A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA164", Offset = "0xBCA164")]
		internal delegate EVROverlayError _SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters);

		[Token(Token = "0x200034B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA178", Offset = "0xBCA178")]
		internal delegate EVROverlayError _GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters);

		[Token(Token = "0x200034C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA18C", Offset = "0xBCA18C")]
		internal delegate EVROverlayError _SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace);

		[Token(Token = "0x200034D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA1A0", Offset = "0xBCA1A0")]
		internal delegate EVROverlayError _GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace);

		[Token(Token = "0x200034E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA1B4", Offset = "0xBCA1B4")]
		internal delegate EVROverlayError _SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x200034F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA1C8", Offset = "0xBCA1C8")]
		internal delegate EVROverlayError _GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x2000350")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA1DC", Offset = "0xBCA1DC")]
		internal delegate uint _GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError);

		[Token(Token = "0x2000351")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA1F0", Offset = "0xBCA1F0")]
		internal delegate EVROverlayError _SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor);

		[Token(Token = "0x2000352")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA204", Offset = "0xBCA204")]
		internal delegate EVROverlayError _GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType);

		[Token(Token = "0x2000353")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA218", Offset = "0xBCA218")]
		internal delegate EVROverlayError _SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x2000354")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA22C", Offset = "0xBCA22C")]
		internal delegate EVROverlayError _GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x2000355")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA240", Offset = "0xBCA240")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x2000356")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA254", Offset = "0xBCA254")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x2000357")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA268", Offset = "0xBCA268")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName);

		[Token(Token = "0x2000358")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA27C", Offset = "0xBCA27C")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize);

		[Token(Token = "0x2000359")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA290", Offset = "0xBCA290")]
		internal delegate EVROverlayError _GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x200035A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA2A4", Offset = "0xBCA2A4")]
		internal delegate EVROverlayError _SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x200035B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA2B8", Offset = "0xBCA2B8")]
		internal delegate EVROverlayError _ShowOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x200035C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA2CC", Offset = "0xBCA2CC")]
		internal delegate EVROverlayError _HideOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x200035D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA2E0", Offset = "0xBCA2E0")]
		internal delegate bool _IsOverlayVisible(ulong ulOverlayHandle);

		[Token(Token = "0x200035E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA2F4", Offset = "0xBCA2F4")]
		internal delegate EVROverlayError _GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform);

		[Token(Token = "0x200035F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA308", Offset = "0xBCA308")]
		internal delegate bool _PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x2000360")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA31C", Offset = "0xBCA31C")]
		internal delegate EVROverlayError _GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod);

		[Token(Token = "0x2000361")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA330", Offset = "0xBCA330")]
		internal delegate EVROverlayError _SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod);

		[Token(Token = "0x2000362")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA344", Offset = "0xBCA344")]
		internal delegate EVROverlayError _GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x2000363")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA358", Offset = "0xBCA358")]
		internal delegate EVROverlayError _SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x2000364")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA36C", Offset = "0xBCA36C")]
		internal delegate bool _ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults);

		[Token(Token = "0x2000365")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA380", Offset = "0xBCA380")]
		internal delegate bool _IsHoverTargetOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000366")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA394", Offset = "0xBCA394")]
		internal delegate ulong _GetGamepadFocusOverlay();

		[Token(Token = "0x2000367")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA3A8", Offset = "0xBCA3A8")]
		internal delegate EVROverlayError _SetGamepadFocusOverlay(ulong ulNewFocusOverlay);

		[Token(Token = "0x2000368")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA3BC", Offset = "0xBCA3BC")]
		internal delegate EVROverlayError _SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo);

		[Token(Token = "0x2000369")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA3D0", Offset = "0xBCA3D0")]
		internal delegate EVROverlayError _MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom);

		[Token(Token = "0x200036A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA3E4", Offset = "0xBCA3E4")]
		internal delegate EVROverlayError _SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius);

		[Token(Token = "0x200036B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA3F8", Offset = "0xBCA3F8")]
		internal delegate EVROverlayError _GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius);

		[Token(Token = "0x200036C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA40C", Offset = "0xBCA40C")]
		internal delegate EVROverlayError _SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture);

		[Token(Token = "0x200036D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA420", Offset = "0xBCA420")]
		internal delegate EVROverlayError _ClearOverlayTexture(ulong ulOverlayHandle);

		[Token(Token = "0x200036E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA434", Offset = "0xBCA434")]
		internal delegate EVROverlayError _SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth);

		[Token(Token = "0x200036F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA448", Offset = "0xBCA448")]
		internal delegate EVROverlayError _SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath);

		[Token(Token = "0x2000370")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA45C", Offset = "0xBCA45C")]
		internal delegate EVROverlayError _GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds);

		[Token(Token = "0x2000371")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA470", Offset = "0xBCA470")]
		internal delegate EVROverlayError _ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle);

		[Token(Token = "0x2000372")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA484", Offset = "0xBCA484")]
		internal delegate EVROverlayError _GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight);

		[Token(Token = "0x2000373")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA498", Offset = "0xBCA498")]
		internal delegate EVROverlayError _CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle);

		[Token(Token = "0x2000374")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA4AC", Offset = "0xBCA4AC")]
		internal delegate bool _IsDashboardVisible();

		[Token(Token = "0x2000375")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA4C0", Offset = "0xBCA4C0")]
		internal delegate bool _IsActiveDashboardOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000376")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA4D4", Offset = "0xBCA4D4")]
		internal delegate EVROverlayError _SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId);

		[Token(Token = "0x2000377")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA4E8", Offset = "0xBCA4E8")]
		internal delegate EVROverlayError _GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId);

		[Token(Token = "0x2000378")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA4FC", Offset = "0xBCA4FC")]
		internal delegate void _ShowDashboard(string pchOverlayToShow);

		[Token(Token = "0x2000379")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA510", Offset = "0xBCA510")]
		internal delegate uint _GetPrimaryDashboardDevice();

		[Token(Token = "0x200037A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA524", Offset = "0xBCA524")]
		internal delegate EVROverlayError _ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x200037B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA538", Offset = "0xBCA538")]
		internal delegate EVROverlayError _ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x200037C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA54C", Offset = "0xBCA54C")]
		internal delegate uint _GetKeyboardText(StringBuilder pchText, uint cchText);

		[Token(Token = "0x200037D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA560", Offset = "0xBCA560")]
		internal delegate void _HideKeyboard();

		[Token(Token = "0x200037E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA574", Offset = "0xBCA574")]
		internal delegate void _SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform);

		[Token(Token = "0x200037F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA588", Offset = "0xBCA588")]
		internal delegate void _SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect);

		[Token(Token = "0x2000380")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA59C", Offset = "0xBCA59C")]
		internal delegate EVROverlayError _SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize);

		[Token(Token = "0x2000381")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA5B0", Offset = "0xBCA5B0")]
		internal delegate EVROverlayError _GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags);

		[Token(Token = "0x2000382")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA5C4", Offset = "0xBCA5C4")]
		internal delegate VRMessageOverlayResponse _ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text);

		[Token(Token = "0x2000383")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA5D8", Offset = "0xBCA5D8")]
		internal delegate void _CloseMessageOverlay();

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _FindOverlay FindOverlay;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _CreateOverlay CreateOverlay;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _DestroyOverlay DestroyOverlay;

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetHighQualityOverlay SetHighQualityOverlay;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetHighQualityOverlay GetHighQualityOverlay;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetOverlayKey GetOverlayKey;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetOverlayName GetOverlayName;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _SetOverlayName SetOverlayName;

		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOverlayImageData GetOverlayImageData;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetOverlayErrorNameFromEnum GetOverlayErrorNameFromEnum;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetOverlayRenderingPid SetOverlayRenderingPid;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetOverlayRenderingPid GetOverlayRenderingPid;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _SetOverlayFlag SetOverlayFlag;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetOverlayFlag GetOverlayFlag;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetOverlayColor SetOverlayColor;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetOverlayColor GetOverlayColor;

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetOverlayAlpha SetOverlayAlpha;

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetOverlayAlpha GetOverlayAlpha;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _SetOverlayTexelAspect SetOverlayTexelAspect;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetOverlayTexelAspect GetOverlayTexelAspect;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _SetOverlaySortOrder SetOverlaySortOrder;

		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetOverlaySortOrder GetOverlaySortOrder;

		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _SetOverlayWidthInMeters SetOverlayWidthInMeters;

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetOverlayWidthInMeters GetOverlayWidthInMeters;

		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _SetOverlayAutoCurveDistanceRangeInMeters SetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetOverlayAutoCurveDistanceRangeInMeters GetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _SetOverlayTextureColorSpace SetOverlayTextureColorSpace;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetOverlayTextureColorSpace GetOverlayTextureColorSpace;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _SetOverlayTextureBounds SetOverlayTextureBounds;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetOverlayTextureBounds GetOverlayTextureBounds;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetOverlayRenderModel GetOverlayRenderModel;

		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _SetOverlayRenderModel SetOverlayRenderModel;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetOverlayTransformType GetOverlayTransformType;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _SetOverlayTransformAbsolute SetOverlayTransformAbsolute;

		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetOverlayTransformAbsolute GetOverlayTransformAbsolute;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _SetOverlayTransformTrackedDeviceRelative SetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _GetOverlayTransformTrackedDeviceRelative GetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _SetOverlayTransformTrackedDeviceComponent SetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetOverlayTransformTrackedDeviceComponent GetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetOverlayTransformOverlayRelative GetOverlayTransformOverlayRelative;

		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _SetOverlayTransformOverlayRelative SetOverlayTransformOverlayRelative;

		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShowOverlay ShowOverlay;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _HideOverlay HideOverlay;

		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _IsOverlayVisible IsOverlayVisible;

		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _GetTransformForOverlayCoordinates GetTransformForOverlayCoordinates;

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _PollNextOverlayEvent PollNextOverlayEvent;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _GetOverlayInputMethod GetOverlayInputMethod;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		internal _SetOverlayInputMethod SetOverlayInputMethod;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		internal _GetOverlayMouseScale GetOverlayMouseScale;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		internal _SetOverlayMouseScale SetOverlayMouseScale;

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		internal _ComputeOverlayIntersection ComputeOverlayIntersection;

		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		internal _IsHoverTargetOverlay IsHoverTargetOverlay;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		internal _GetGamepadFocusOverlay GetGamepadFocusOverlay;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		internal _SetGamepadFocusOverlay SetGamepadFocusOverlay;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		internal _SetOverlayNeighbor SetOverlayNeighbor;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		internal _MoveGamepadFocusToNeighbor MoveGamepadFocusToNeighbor;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		internal _SetOverlayDualAnalogTransform SetOverlayDualAnalogTransform;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		internal _GetOverlayDualAnalogTransform GetOverlayDualAnalogTransform;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		internal _SetOverlayTexture SetOverlayTexture;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		internal _ClearOverlayTexture ClearOverlayTexture;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		internal _SetOverlayRaw SetOverlayRaw;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		internal _SetOverlayFromFile SetOverlayFromFile;

		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		internal _GetOverlayTexture GetOverlayTexture;

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		internal _ReleaseNativeOverlayHandle ReleaseNativeOverlayHandle;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		internal _GetOverlayTextureSize GetOverlayTextureSize;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		internal _CreateDashboardOverlay CreateDashboardOverlay;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		internal _IsDashboardVisible IsDashboardVisible;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		internal _IsActiveDashboardOverlay IsActiveDashboardOverlay;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		internal _SetDashboardOverlaySceneProcess SetDashboardOverlaySceneProcess;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		internal _GetDashboardOverlaySceneProcess GetDashboardOverlaySceneProcess;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		internal _ShowDashboard ShowDashboard;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		internal _GetPrimaryDashboardDevice GetPrimaryDashboardDevice;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		internal _ShowKeyboard ShowKeyboard;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		internal _ShowKeyboardForOverlay ShowKeyboardForOverlay;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		internal _GetKeyboardText GetKeyboardText;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		internal _HideKeyboard HideKeyboard;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		internal _SetKeyboardTransformAbsolute SetKeyboardTransformAbsolute;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		internal _SetKeyboardPositionForOverlay SetKeyboardPositionForOverlay;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		internal _SetOverlayIntersectionMask SetOverlayIntersectionMask;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		internal _GetOverlayFlags GetOverlayFlags;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		internal _ShowMessageOverlay ShowMessageOverlay;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		internal _CloseMessageOverlay CloseMessageOverlay;
	}
	[Token(Token = "0x200009C")]
	public struct IVRRenderModels
	{
		[Token(Token = "0x2000384")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA5EC", Offset = "0xBCA5EC")]
		internal delegate EVRRenderModelError _LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel);

		[Token(Token = "0x2000385")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA600", Offset = "0xBCA600")]
		internal delegate void _FreeRenderModel(IntPtr pRenderModel);

		[Token(Token = "0x2000386")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA614", Offset = "0xBCA614")]
		internal delegate EVRRenderModelError _LoadTexture_Async(int textureId, ref IntPtr ppTexture);

		[Token(Token = "0x2000387")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA628", Offset = "0xBCA628")]
		internal delegate void _FreeTexture(IntPtr pTexture);

		[Token(Token = "0x2000388")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA63C", Offset = "0xBCA63C")]
		internal delegate EVRRenderModelError _LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D);

		[Token(Token = "0x2000389")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA650", Offset = "0xBCA650")]
		internal delegate EVRRenderModelError _LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture);

		[Token(Token = "0x200038A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA664", Offset = "0xBCA664")]
		internal delegate void _FreeTextureD3D11(IntPtr pD3D11Texture2D);

		[Token(Token = "0x200038B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA678", Offset = "0xBCA678")]
		internal delegate uint _GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen);

		[Token(Token = "0x200038C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA68C", Offset = "0xBCA68C")]
		internal delegate uint _GetRenderModelCount();

		[Token(Token = "0x200038D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA6A0", Offset = "0xBCA6A0")]
		internal delegate uint _GetComponentCount(string pchRenderModelName);

		[Token(Token = "0x200038E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA6B4", Offset = "0xBCA6B4")]
		internal delegate uint _GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen);

		[Token(Token = "0x200038F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA6C8", Offset = "0xBCA6C8")]
		internal delegate ulong _GetComponentButtonMask(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x2000390")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA6DC", Offset = "0xBCA6DC")]
		internal delegate uint _GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen);

		[Token(Token = "0x2000391")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA6F0", Offset = "0xBCA6F0")]
		internal delegate bool _GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[Token(Token = "0x2000392")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA704", Offset = "0xBCA704")]
		internal delegate bool _RenderModelHasComponent(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x2000393")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA718", Offset = "0xBCA718")]
		internal delegate uint _GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError);

		[Token(Token = "0x2000394")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA72C", Offset = "0xBCA72C")]
		internal delegate uint _GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError);

		[Token(Token = "0x2000395")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA740", Offset = "0xBCA740")]
		internal delegate IntPtr _GetRenderModelErrorNameFromEnum(EVRRenderModelError error);

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadRenderModel_Async LoadRenderModel_Async;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _FreeRenderModel FreeRenderModel;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _LoadTexture_Async LoadTexture_Async;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _FreeTexture FreeTexture;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _LoadTextureD3D11_Async LoadTextureD3D11_Async;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _LoadIntoTextureD3D11_Async LoadIntoTextureD3D11_Async;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _FreeTextureD3D11 FreeTextureD3D11;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetRenderModelName GetRenderModelName;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetRenderModelCount GetRenderModelCount;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetComponentCount GetComponentCount;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetComponentName GetComponentName;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetComponentButtonMask GetComponentButtonMask;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetComponentRenderModelName GetComponentRenderModelName;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetComponentState GetComponentState;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _RenderModelHasComponent RenderModelHasComponent;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetRenderModelThumbnailURL GetRenderModelThumbnailURL;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetRenderModelOriginalPath GetRenderModelOriginalPath;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetRenderModelErrorNameFromEnum GetRenderModelErrorNameFromEnum;
	}
	[Token(Token = "0x200009D")]
	public struct IVRNotifications
	{
		[Token(Token = "0x2000396")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA754", Offset = "0xBCA754")]
		internal delegate EVRNotificationError _CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId);

		[Token(Token = "0x2000397")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA768", Offset = "0xBCA768")]
		internal delegate EVRNotificationError _RemoveNotification(uint notificationId);

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CreateNotification CreateNotification;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveNotification RemoveNotification;
	}
	[Token(Token = "0x200009E")]
	public struct IVRSettings
	{
		[Token(Token = "0x2000398")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA77C", Offset = "0xBCA77C")]
		internal delegate IntPtr _GetSettingsErrorNameFromEnum(EVRSettingsError eError);

		[Token(Token = "0x2000399")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA790", Offset = "0xBCA790")]
		internal delegate bool _Sync(bool bForce, ref EVRSettingsError peError);

		[Token(Token = "0x200039A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA7A4", Offset = "0xBCA7A4")]
		internal delegate void _SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError);

		[Token(Token = "0x200039B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA7B8", Offset = "0xBCA7B8")]
		internal delegate void _SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError);

		[Token(Token = "0x200039C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA7CC", Offset = "0xBCA7CC")]
		internal delegate void _SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError);

		[Token(Token = "0x200039D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA7E0", Offset = "0xBCA7E0")]
		internal delegate void _SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError);

		[Token(Token = "0x200039E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA7F4", Offset = "0xBCA7F4")]
		internal delegate bool _GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x200039F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA808", Offset = "0xBCA808")]
		internal delegate int _GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x20003A0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA81C", Offset = "0xBCA81C")]
		internal delegate float _GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x20003A1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA830", Offset = "0xBCA830")]
		internal delegate void _GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError);

		[Token(Token = "0x20003A2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA844", Offset = "0xBCA844")]
		internal delegate void _RemoveSection(string pchSection, ref EVRSettingsError peError);

		[Token(Token = "0x20003A3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA858", Offset = "0xBCA858")]
		internal delegate void _RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetSettingsErrorNameFromEnum GetSettingsErrorNameFromEnum;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _Sync Sync;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _SetBool SetBool;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetInt32 SetInt32;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetFloat SetFloat;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _SetString SetString;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetBool GetBool;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetInt32 GetInt32;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFloat GetFloat;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetString GetString;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _RemoveSection RemoveSection;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _RemoveKeyInSection RemoveKeyInSection;
	}
	[Token(Token = "0x200009F")]
	public struct IVRScreenshots
	{
		[Token(Token = "0x20003A4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA86C", Offset = "0xBCA86C")]
		internal delegate EVRScreenshotError _RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x20003A5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA880", Offset = "0xBCA880")]
		internal delegate EVRScreenshotError _HookScreenshot([In][Out] EVRScreenshotType[] pSupportedTypes, int numTypes);

		[Token(Token = "0x20003A6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA894", Offset = "0xBCA894")]
		internal delegate EVRScreenshotType _GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError);

		[Token(Token = "0x20003A7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA8A8", Offset = "0xBCA8A8")]
		internal delegate uint _GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError);

		[Token(Token = "0x20003A8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA8BC", Offset = "0xBCA8BC")]
		internal delegate EVRScreenshotError _UpdateScreenshotProgress(uint screenshotHandle, float flProgress);

		[Token(Token = "0x20003A9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA8D0", Offset = "0xBCA8D0")]
		internal delegate EVRScreenshotError _TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x20003AA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA8E4", Offset = "0xBCA8E4")]
		internal delegate EVRScreenshotError _SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename);

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _RequestScreenshot RequestScreenshot;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HookScreenshot HookScreenshot;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetScreenshotPropertyType GetScreenshotPropertyType;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetScreenshotPropertyFilename GetScreenshotPropertyFilename;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _UpdateScreenshotProgress UpdateScreenshotProgress;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _TakeStereoScreenshot TakeStereoScreenshot;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _SubmitScreenshot SubmitScreenshot;
	}
	[Token(Token = "0x20000A0")]
	public struct IVRResources
	{
		[Token(Token = "0x20003AB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA8F8", Offset = "0xBCA8F8")]
		internal delegate uint _LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen);

		[Token(Token = "0x20003AC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA90C", Offset = "0xBCA90C")]
		internal delegate uint _GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen);

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadSharedResource LoadSharedResource;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetResourceFullPath GetResourceFullPath;
	}
	[Token(Token = "0x20000A1")]
	public struct IVRDriverManager
	{
		[Token(Token = "0x20003AD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA920", Offset = "0xBCA920")]
		internal delegate uint _GetDriverCount();

		[Token(Token = "0x20003AE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA934", Offset = "0xBCA934")]
		internal delegate uint _GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x20003AF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA948", Offset = "0xBCA948")]
		internal delegate ulong _GetDriverHandle(string pchDriverName);

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetDriverCount GetDriverCount;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetDriverName GetDriverName;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDriverHandle GetDriverHandle;
	}
	[Token(Token = "0x20000A2")]
	public class CVRSystem
	{
		[Token(Token = "0x20003B0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA95C", Offset = "0xBCA95C")]
		internal delegate bool _PollNextEventPacked(ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x20003B1")]
		private struct PollNextEventUnion
		{
			[Token(Token = "0x4000D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._PollNextEvent pPollNextEvent;

			[Token(Token = "0x4000D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextEventPacked pPollNextEventPacked;
		}

		[Token(Token = "0x20003B2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA970", Offset = "0xBCA970")]
		internal delegate bool _GetControllerStatePacked(uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize);

		[StructLayout(2)]
		[Token(Token = "0x20003B3")]
		private struct GetControllerStateUnion
		{
			[Token(Token = "0x4000D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerState pGetControllerState;

			[Token(Token = "0x4000D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStatePacked pGetControllerStatePacked;
		}

		[Token(Token = "0x20003B4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA984", Offset = "0xBCA984")]
		internal delegate bool _GetControllerStateWithPosePacked(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[StructLayout(2)]
		[Token(Token = "0x20003B5")]
		private struct GetControllerStateWithPoseUnion
		{
			[Token(Token = "0x4000D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerStateWithPose pGetControllerStateWithPose;

			[Token(Token = "0x4000D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStateWithPosePacked pGetControllerStateWithPosePacked;
		}

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSystem FnTable;

		[Token(Token = "0x6000791")]
		[Address(RVA = "0xFDBB30", Offset = "0xFDBB30", VA = "0xFDBB30")]
		internal CVRSystem(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0xFDBC44", Offset = "0xFDBC44", VA = "0xFDBC44")]
		public void GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0xFDBC68", Offset = "0xFDBC68", VA = "0xFDBC68")]
		public HmdMatrix44_t GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ)
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0xFDBC84", Offset = "0xFDBC84", VA = "0xFDBC84")]
		public void GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0xFDBCB0", Offset = "0xFDBCB0", VA = "0xFDBCB0")]
		public bool ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates)
		{
			return default(bool);
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0xFDBCCC", Offset = "0xFDBCCC", VA = "0xFDBCCC")]
		public HmdMatrix34_t GetEyeToHeadTransform(EVREye eEye)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0xFDBCE8", Offset = "0xFDBCE8", VA = "0xFDBCE8")]
		public bool GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0xFDBD0C", Offset = "0xFDBD0C", VA = "0xFDBD0C")]
		public int GetD3D9AdapterIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0xFDBD28", Offset = "0xFDBD28", VA = "0xFDBD28")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex)
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0xFDBD48", Offset = "0xFDBD48", VA = "0xFDBD48")]
		public void GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance)
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0xFDBD68", Offset = "0xFDBD68", VA = "0xFDBD68")]
		public bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0xFDBD84", Offset = "0xFDBD84", VA = "0xFDBD84")]
		public bool SetDisplayVisibility(bool bIsVisibleOnDesktop)
		{
			return default(bool);
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0xFDBDA4", Offset = "0xFDBDA4", VA = "0xFDBDA4")]
		public void GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, TrackedDevicePose_t[] pTrackedDevicePoseArray)
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0xFDBDCC", Offset = "0xFDBDCC", VA = "0xFDBDCC")]
		public void ResetSeatedZeroPose()
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0xFDBDE8", Offset = "0xFDBDE8", VA = "0xFDBDE8")]
		public HmdMatrix34_t GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xFDBE04", Offset = "0xFDBE04", VA = "0xFDBE04")]
		public HmdMatrix34_t GetRawZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xFDBE20", Offset = "0xFDBE20", VA = "0xFDBE20")]
		public uint GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, uint[] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex)
		{
			return default(uint);
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xFDBE4C", Offset = "0xFDBE4C", VA = "0xFDBE4C")]
		public EDeviceActivityLevel GetTrackedDeviceActivityLevel(uint unDeviceId)
		{
			return default(EDeviceActivityLevel);
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xFDBE68", Offset = "0xFDBE68", VA = "0xFDBE68")]
		public void ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform)
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xFDBE84", Offset = "0xFDBE84", VA = "0xFDBE84")]
		public uint GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType)
		{
			return default(uint);
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xFDBEA0", Offset = "0xFDBEA0", VA = "0xFDBEA0")]
		public ETrackedControllerRole GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex)
		{
			return default(ETrackedControllerRole);
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xFCC000", Offset = "0xFCC000", VA = "0xFCC000")]
		public ETrackedDeviceClass GetTrackedDeviceClass(uint unDeviceIndex)
		{
			return default(ETrackedDeviceClass);
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xFDBEBC", Offset = "0xFDBEBC", VA = "0xFDBEBC")]
		public bool IsTrackedDeviceConnected(uint unDeviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xFDBED8", Offset = "0xFDBED8", VA = "0xFDBED8")]
		public bool GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(bool);
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xFDBEF4", Offset = "0xFDBEF4", VA = "0xFDBEF4")]
		public float GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(float);
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xFDBF10", Offset = "0xFDBF10", VA = "0xFDBF10")]
		public int GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(int);
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xFDBF2C", Offset = "0xFDBF2C", VA = "0xFDBF2C")]
		public ulong GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(ulong);
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xFDBF48", Offset = "0xFDBF48", VA = "0xFDBF48")]
		public HmdMatrix34_t GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xFDBF64", Offset = "0xFDBF64", VA = "0xFDBF64")]
		public uint GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xFDBF80", Offset = "0xFDBF80", VA = "0xFDBF80")]
		public uint GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xFDBF9C", Offset = "0xFDBF9C", VA = "0xFDBF9C")]
		public string GetPropErrorNameFromEnum(ETrackedPropertyError error)
		{
			return null;
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xFDC030", Offset = "0xFDC030", VA = "0xFDC030")]
		public bool PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xFDC43C", Offset = "0xFDC43C", VA = "0xFDC43C")]
		public bool PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xFDC458", Offset = "0xFDC458", VA = "0xFDC458")]
		public string GetEventTypeNameFromEnum(EVREventType eType)
		{
			return null;
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xFDC4EC", Offset = "0xFDC4EC", VA = "0xFDC4EC")]
		public HiddenAreaMesh_t GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type)
		{
			return default(HiddenAreaMesh_t);
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xFDC508", Offset = "0xFDC508", VA = "0xFDC508")]
		public bool GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize)
		{
			return default(bool);
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xFDC96C", Offset = "0xFDC96C", VA = "0xFDC96C")]
		public bool GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xFDCE28", Offset = "0xFDCE28", VA = "0xFDCE28")]
		public void TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec)
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xFDCE44", Offset = "0xFDCE44", VA = "0xFDCE44")]
		public string GetButtonIdNameFromEnum(EVRButtonId eButtonId)
		{
			return null;
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xFDCED8", Offset = "0xFDCED8", VA = "0xFDCED8")]
		public string GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType)
		{
			return null;
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xFDCF6C", Offset = "0xFDCF6C", VA = "0xFDCF6C")]
		public bool IsInputAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xFDCF88", Offset = "0xFDCF88", VA = "0xFDCF88")]
		public bool IsSteamVRDrawingControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xFDCFA4", Offset = "0xFDCFA4", VA = "0xFDCFA4")]
		public bool ShouldApplicationPause()
		{
			return default(bool);
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xFDCFC0", Offset = "0xFDCFC0", VA = "0xFDCFC0")]
		public bool ShouldApplicationReduceRenderingWork()
		{
			return default(bool);
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xFDCFDC", Offset = "0xFDCFDC", VA = "0xFDCFDC")]
		public uint DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xFDCFF8", Offset = "0xFDCFF8", VA = "0xFDCFF8")]
		public EVRFirmwareError PerformFirmwareUpdate(uint unDeviceIndex)
		{
			return default(EVRFirmwareError);
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xFDD014", Offset = "0xFDD014", VA = "0xFDD014")]
		public void AcknowledgeQuit_Exiting()
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xFDD030", Offset = "0xFDD030", VA = "0xFDD030")]
		public void AcknowledgeQuit_UserPrompt()
		{
		}
	}
	[Token(Token = "0x20000A3")]
	public class CVRExtendedDisplay
	{
		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRExtendedDisplay FnTable;

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xFD9858", Offset = "0xFD9858", VA = "0xFD9858")]
		internal CVRExtendedDisplay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xFD9968", Offset = "0xFD9968", VA = "0xFD9968")]
		public void GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xFD9994", Offset = "0xFD9994", VA = "0xFD9994")]
		public void GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xFD99C0", Offset = "0xFD99C0", VA = "0xFD99C0")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex)
		{
		}
	}
	[Token(Token = "0x20000A4")]
	public class CVRTrackedCamera
	{
		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRTrackedCamera FnTable;

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xFDD3B8", Offset = "0xFDD3B8", VA = "0xFDD3B8")]
		internal CVRTrackedCamera(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xFDD4CC", Offset = "0xFDD4CC", VA = "0xFDD4CC")]
		public string GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError)
		{
			return null;
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xFCD4A4", Offset = "0xFCD4A4", VA = "0xFCD4A4")]
		public EVRTrackedCameraError HasCamera(uint nDeviceIndex, ref bool pHasCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xFDD560", Offset = "0xFDD560", VA = "0xFDD560")]
		public EVRTrackedCameraError GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xFDD588", Offset = "0xFDD588", VA = "0xFDD588")]
		public EVRTrackedCameraError GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xFDD5A4", Offset = "0xFDD5A4", VA = "0xFDD5A4")]
		public EVRTrackedCameraError GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xFCD580", Offset = "0xFCD580", VA = "0xFCD580")]
		public EVRTrackedCameraError AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xFCD650", Offset = "0xFCD650", VA = "0xFCD650")]
		public EVRTrackedCameraError ReleaseVideoStreamingService(ulong hTrackedCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xFDD5C0", Offset = "0xFDD5C0", VA = "0xFDD5C0")]
		public EVRTrackedCameraError GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xFCDF28", Offset = "0xFCDF28", VA = "0xFCDF28")]
		public EVRTrackedCameraError GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xFCDF0C", Offset = "0xFCDF0C", VA = "0xFCDF0C")]
		public EVRTrackedCameraError GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xFCDEEC", Offset = "0xFCDEEC", VA = "0xFCDEEC")]
		public EVRTrackedCameraError GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xFCDED0", Offset = "0xFCDED0", VA = "0xFCDED0")]
		public EVRTrackedCameraError ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId)
		{
			return default(EVRTrackedCameraError);
		}
	}
	[Token(Token = "0x20000A5")]
	public class CVRApplications
	{
		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRApplications FnTable;

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xFD4994", Offset = "0xFD4994", VA = "0xFD4994")]
		internal CVRApplications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xFD4AA8", Offset = "0xFD4AA8", VA = "0xFD4AA8")]
		public EVRApplicationError AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xFD4F14", Offset = "0xFD4F14", VA = "0xFD4F14")]
		public EVRApplicationError RemoveApplicationManifest(string pchApplicationManifestFullPath)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xFD4F30", Offset = "0xFD4F30", VA = "0xFD4F30")]
		public bool IsApplicationInstalled(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xFD4F4C", Offset = "0xFD4F4C", VA = "0xFD4F4C")]
		public uint GetApplicationCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xFD5178", Offset = "0xFD5178", VA = "0xFD5178")]
		public EVRApplicationError GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xFD543C", Offset = "0xFD543C", VA = "0xFD543C")]
		public EVRApplicationError GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xFD5700", Offset = "0xFD5700", VA = "0xFD5700")]
		public EVRApplicationError LaunchApplication(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xFD571C", Offset = "0xFD571C", VA = "0xFD571C")]
		public EVRApplicationError LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, AppOverrideKeys_t[] pKeys)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xFD5744", Offset = "0xFD5744", VA = "0xFD5744")]
		public EVRApplicationError LaunchApplicationFromMimeType(string pchMimeType, string pchArgs)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xFD5760", Offset = "0xFD5760", VA = "0xFD5760")]
		public EVRApplicationError LaunchDashboardOverlay(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xFD577C", Offset = "0xFD577C", VA = "0xFD577C")]
		public bool CancelApplicationLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xFD5B58", Offset = "0xFD5B58", VA = "0xFD5B58")]
		public EVRApplicationError IdentifyApplication(uint unProcessId, string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xFD5B74", Offset = "0xFD5B74", VA = "0xFD5B74")]
		public uint GetApplicationProcessId(string pchAppKey)
		{
			return default(uint);
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xFD5F4C", Offset = "0xFD5F4C", VA = "0xFD5F4C")]
		public string GetApplicationsErrorNameFromEnum(EVRApplicationError error)
		{
			return null;
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xFD6250", Offset = "0xFD6250", VA = "0xFD6250")]
		public uint GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xFD670C", Offset = "0xFD670C", VA = "0xFD670C")]
		public bool GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xFD6B80", Offset = "0xFD6B80", VA = "0xFD6B80")]
		public ulong GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(ulong);
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xFD6FF0", Offset = "0xFD6FF0", VA = "0xFD6FF0")]
		public EVRApplicationError SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xFD7010", Offset = "0xFD7010", VA = "0xFD7010")]
		public bool GetApplicationAutoLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xFD73EC", Offset = "0xFD73EC", VA = "0xFD73EC")]
		public EVRApplicationError SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xFD7408", Offset = "0xFD7408", VA = "0xFD7408")]
		public bool GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(bool);
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xFD7854", Offset = "0xFD7854", VA = "0xFD7854")]
		public bool GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xFD7CA0", Offset = "0xFD7CA0", VA = "0xFD7CA0")]
		public uint GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer)
		{
			return default(uint);
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xFD80E8", Offset = "0xFD80E8", VA = "0xFD80E8")]
		public uint GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs)
		{
			return default(uint);
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xFD83AC", Offset = "0xFD83AC", VA = "0xFD83AC")]
		public EVRApplicationError GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xFD83C8", Offset = "0xFD83C8", VA = "0xFD83C8")]
		public EVRApplicationTransitionState GetTransitionState()
		{
			return default(EVRApplicationTransitionState);
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xFD83E4", Offset = "0xFD83E4", VA = "0xFD83E4")]
		public EVRApplicationError PerformApplicationPrelaunchCheck(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xFD8400", Offset = "0xFD8400", VA = "0xFD8400")]
		public string GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state)
		{
			return null;
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xFD8704", Offset = "0xFD8704", VA = "0xFD8704")]
		public bool IsQuitUserPromptRequested()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xFD8720", Offset = "0xFD8720", VA = "0xFD8720")]
		public EVRApplicationError LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xFD873C", Offset = "0xFD873C", VA = "0xFD873C")]
		public uint GetCurrentSceneProcessId()
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20000A6")]
	public class CVRChaperone
	{
		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperone FnTable;

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xFD8968", Offset = "0xFD8968", VA = "0xFD8968")]
		internal CVRChaperone(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xFD8A7C", Offset = "0xFD8A7C", VA = "0xFD8A7C")]
		public ChaperoneCalibrationState GetCalibrationState()
		{
			return default(ChaperoneCalibrationState);
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xFD8A98", Offset = "0xFD8A98", VA = "0xFD8A98")]
		public bool GetPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0xFD8ABC", Offset = "0xFD8ABC", VA = "0xFD8ABC")]
		public bool GetPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0xFD8AD8", Offset = "0xFD8AD8", VA = "0xFD8AD8")]
		public void ReloadInfo()
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xFD8AF4", Offset = "0xFD8AF4", VA = "0xFD8AF4")]
		public void SetSceneColor(HmdColor_t color)
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0xFD8B10", Offset = "0xFD8B10", VA = "0xFD8B10")]
		public void GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor)
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0xFD8B2C", Offset = "0xFD8B2C", VA = "0xFD8B2C")]
		public bool AreBoundsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xFD8B48", Offset = "0xFD8B48", VA = "0xFD8B48")]
		public void ForceBoundsVisible(bool bForce)
		{
		}
	}
	[Token(Token = "0x20000A7")]
	public class CVRChaperoneSetup
	{
		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperoneSetup FnTable;

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xFD8B68", Offset = "0xFD8B68", VA = "0xFD8B68")]
		internal CVRChaperoneSetup(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xFD8C7C", Offset = "0xFD8C7C", VA = "0xFD8C7C")]
		public bool CommitWorkingCopy(EChaperoneConfigFile configFile)
		{
			return default(bool);
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xFD8C98", Offset = "0xFD8C98", VA = "0xFD8C98")]
		public void RevertWorkingCopy()
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xFD8CB4", Offset = "0xFD8CB4", VA = "0xFD8CB4")]
		public bool GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xFD8CD8", Offset = "0xFD8CD8", VA = "0xFD8CD8")]
		public bool GetWorkingPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0xFD8CF4", Offset = "0xFD8CF4", VA = "0xFD8CF4")]
		public bool GetWorkingCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0xFD8DA0", Offset = "0xFD8DA0", VA = "0xFD8DA0")]
		public bool GetLiveCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0xFD8E4C", Offset = "0xFD8E4C", VA = "0xFD8E4C")]
		public bool GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0xFD8E68", Offset = "0xFD8E68", VA = "0xFD8E68")]
		public bool GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0xFD8E84", Offset = "0xFD8E84", VA = "0xFD8E84")]
		public void SetWorkingPlayAreaSize(float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xFD8EA0", Offset = "0xFD8EA0", VA = "0xFD8EA0")]
		public void SetWorkingCollisionBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0xFD8EC8", Offset = "0xFD8EC8", VA = "0xFD8EC8")]
		public void SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0xFD8EE4", Offset = "0xFD8EE4", VA = "0xFD8EE4")]
		public void SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0xFD8F00", Offset = "0xFD8F00", VA = "0xFD8F00")]
		public void ReloadFromDisk(EChaperoneConfigFile configFile)
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0xFD8F1C", Offset = "0xFD8F1C", VA = "0xFD8F1C")]
		public bool GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0xFD8F38", Offset = "0xFD8F38", VA = "0xFD8F38")]
		public void SetWorkingCollisionBoundsTagsInfo(byte[] pTagsBuffer)
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0xFD8F60", Offset = "0xFD8F60", VA = "0xFD8F60")]
		public bool GetLiveCollisionBoundsTagsInfo(out byte[] pTagsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0xFD900C", Offset = "0xFD900C", VA = "0xFD900C")]
		public bool SetWorkingPhysicalBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0xFD9034", Offset = "0xFD9034", VA = "0xFD9034")]
		public bool GetLivePhysicalBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0xFD90E0", Offset = "0xFD90E0", VA = "0xFD90E0")]
		public bool ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength)
		{
			return default(bool);
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0xFD9100", Offset = "0xFD9100", VA = "0xFD9100")]
		public bool ImportFromBufferToWorking(string pBuffer, uint nImportFlags)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000A8")]
	public class CVRCompositor
	{
		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRCompositor FnTable;

		[Token(Token = "0x6000810")]
		[Address(RVA = "0xFD911C", Offset = "0xFD911C", VA = "0xFD911C")]
		internal CVRCompositor(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0xFD9230", Offset = "0xFD9230", VA = "0xFD9230")]
		public void SetTrackingSpace(ETrackingUniverseOrigin eOrigin)
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0xFD924C", Offset = "0xFD924C", VA = "0xFD924C")]
		public ETrackingUniverseOrigin GetTrackingSpace()
		{
			return default(ETrackingUniverseOrigin);
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0xFD9268", Offset = "0xFD9268", VA = "0xFD9268")]
		public EVRCompositorError WaitGetPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0xFD929C", Offset = "0xFD929C", VA = "0xFD929C")]
		public EVRCompositorError GetLastPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0xFD92D0", Offset = "0xFD92D0", VA = "0xFD92D0")]
		public EVRCompositorError GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0xFD92EC", Offset = "0xFD92EC", VA = "0xFD92EC")]
		public EVRCompositorError Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0xFD9308", Offset = "0xFD9308", VA = "0xFD9308")]
		public void ClearLastSubmittedFrame()
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0xFD9324", Offset = "0xFD9324", VA = "0xFD9324")]
		public void PostPresentHandoff()
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0xFD9340", Offset = "0xFD9340", VA = "0xFD9340")]
		public bool GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo)
		{
			return default(bool);
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0xFD935C", Offset = "0xFD935C", VA = "0xFD935C")]
		public uint GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames)
		{
			return default(uint);
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0xFD9378", Offset = "0xFD9378", VA = "0xFD9378")]
		public float GetFrameTimeRemaining()
		{
			return default(float);
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0xFD9394", Offset = "0xFD9394", VA = "0xFD9394")]
		public void GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes)
		{
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0xFD93B0", Offset = "0xFD93B0", VA = "0xFD93B0")]
		public void FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground)
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xFD93D0", Offset = "0xFD93D0", VA = "0xFD93D0")]
		public HmdColor_t GetCurrentFadeColor(bool bBackground)
		{
			return default(HmdColor_t);
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0xFD93F0", Offset = "0xFD93F0", VA = "0xFD93F0")]
		public void FadeGrid(float fSeconds, bool bFadeIn)
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0xFD9410", Offset = "0xFD9410", VA = "0xFD9410")]
		public float GetCurrentGridAlpha()
		{
			return default(float);
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0xFCB86C", Offset = "0xFCB86C", VA = "0xFCB86C")]
		public EVRCompositorError SetSkyboxOverride(Texture_t[] pTextures)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0xFCB918", Offset = "0xFCB918", VA = "0xFCB918")]
		public void ClearSkyboxOverride()
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0xFD942C", Offset = "0xFD942C", VA = "0xFD942C")]
		public void CompositorBringToFront()
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0xFD9448", Offset = "0xFD9448", VA = "0xFD9448")]
		public void CompositorGoToBack()
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0xFD9464", Offset = "0xFD9464", VA = "0xFD9464")]
		public void CompositorQuit()
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0xFD9480", Offset = "0xFD9480", VA = "0xFD9480")]
		public bool IsFullscreen()
		{
			return default(bool);
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0xFD949C", Offset = "0xFD949C", VA = "0xFD949C")]
		public uint GetCurrentSceneFocusProcess()
		{
			return default(uint);
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0xFD94B8", Offset = "0xFD94B8", VA = "0xFD94B8")]
		public uint GetLastFrameRenderer()
		{
			return default(uint);
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0xFD94D4", Offset = "0xFD94D4", VA = "0xFD94D4")]
		public bool CanRenderScene()
		{
			return default(bool);
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0xFD94F0", Offset = "0xFD94F0", VA = "0xFD94F0")]
		public void ShowMirrorWindow()
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0xFD950C", Offset = "0xFD950C", VA = "0xFD950C")]
		public void HideMirrorWindow()
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0xFD9528", Offset = "0xFD9528", VA = "0xFD9528")]
		public bool IsMirrorWindowVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0xFD9544", Offset = "0xFD9544", VA = "0xFD9544")]
		public void CompositorDumpImages()
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0xFD9560", Offset = "0xFD9560", VA = "0xFD9560")]
		public bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0xFD957C", Offset = "0xFD957C", VA = "0xFD957C")]
		public void ForceInterleavedReprojectionOn(bool bOverride)
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0xFD959C", Offset = "0xFD959C", VA = "0xFD959C")]
		public void ForceReconnectProcess()
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0xFD95B8", Offset = "0xFD95B8", VA = "0xFD95B8")]
		public void SuspendRendering(bool bSuspend)
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0xFD95D8", Offset = "0xFD95D8", VA = "0xFD95D8")]
		public EVRCompositorError GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0xFD95F4", Offset = "0xFD95F4", VA = "0xFD95F4")]
		public void ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView)
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0xFD9610", Offset = "0xFD9610", VA = "0xFD9610")]
		public EVRCompositorError GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0xFD9630", Offset = "0xFD9630", VA = "0xFD9630")]
		public bool ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0xFD964C", Offset = "0xFD964C", VA = "0xFD964C")]
		public void LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0xFD9668", Offset = "0xFD9668", VA = "0xFD9668")]
		public void UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0xFD9684", Offset = "0xFD9684", VA = "0xFD9684")]
		public uint GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0xFD96A0", Offset = "0xFD96A0", VA = "0xFD96A0")]
		public uint GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0xFD96BC", Offset = "0xFD96BC", VA = "0xFD96BC")]
		public void SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode)
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0xFD96D8", Offset = "0xFD96D8", VA = "0xFD96D8")]
		public EVRCompositorError SubmitExplicitTimingData()
		{
			return default(EVRCompositorError);
		}
	}
	[Token(Token = "0x20000A9")]
	public class CVROverlay
	{
		[Token(Token = "0x20003B6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA998", Offset = "0xBCA998")]
		internal delegate bool _PollNextOverlayEventPacked(ulong ulOverlayHandle, ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x20003B7")]
		private struct PollNextOverlayEventUnion
		{
			[Token(Token = "0x4000D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVROverlay._PollNextOverlayEvent pPollNextOverlayEvent;

			[Token(Token = "0x4000D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextOverlayEventPacked pPollNextOverlayEventPacked;
		}

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVROverlay FnTable;

		[Token(Token = "0x600083C")]
		[Address(RVA = "0xFD9B2C", Offset = "0xFD9B2C", VA = "0xFD9B2C")]
		internal CVROverlay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0xFD9C40", Offset = "0xFD9C40", VA = "0xFD9C40")]
		public EVROverlayError FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0xFD9C60", Offset = "0xFD9C60", VA = "0xFD9C60")]
		public EVROverlayError CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0xFD9C80", Offset = "0xFD9C80", VA = "0xFD9C80")]
		public EVROverlayError DestroyOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0xFD9C9C", Offset = "0xFD9C9C", VA = "0xFD9C9C")]
		public EVROverlayError SetHighQualityOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0xFD9CB8", Offset = "0xFD9CB8", VA = "0xFD9CB8")]
		public ulong GetHighQualityOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xFD9CD4", Offset = "0xFD9CD4", VA = "0xFD9CD4")]
		public uint GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0xFD9CF0", Offset = "0xFD9CF0", VA = "0xFD9CF0")]
		public uint GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0xFD9D0C", Offset = "0xFD9D0C", VA = "0xFD9D0C")]
		public EVROverlayError SetOverlayName(ulong ulOverlayHandle, string pchName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0xFD9D28", Offset = "0xFD9D28", VA = "0xFD9D28")]
		public EVROverlayError GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0xFD9D4C", Offset = "0xFD9D4C", VA = "0xFD9D4C")]
		public string GetOverlayErrorNameFromEnum(EVROverlayError error)
		{
			return null;
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0xFD9DE0", Offset = "0xFD9DE0", VA = "0xFD9DE0")]
		public EVROverlayError SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0xFD9DFC", Offset = "0xFD9DFC", VA = "0xFD9DFC")]
		public uint GetOverlayRenderingPid(ulong ulOverlayHandle)
		{
			return default(uint);
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0xFD9E18", Offset = "0xFD9E18", VA = "0xFD9E18")]
		public EVROverlayError SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0xFD9E38", Offset = "0xFD9E38", VA = "0xFD9E38")]
		public EVROverlayError GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0xFD9E58", Offset = "0xFD9E58", VA = "0xFD9E58")]
		public EVROverlayError SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0xFD9E74", Offset = "0xFD9E74", VA = "0xFD9E74")]
		public EVROverlayError GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0xFD9E9C", Offset = "0xFD9E9C", VA = "0xFD9E9C")]
		public EVROverlayError SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0xFD9EB8", Offset = "0xFD9EB8", VA = "0xFD9EB8")]
		public EVROverlayError GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0xFD9ED8", Offset = "0xFD9ED8", VA = "0xFD9ED8")]
		public EVROverlayError SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0xFD9EF4", Offset = "0xFD9EF4", VA = "0xFD9EF4")]
		public EVROverlayError GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0xFD9F14", Offset = "0xFD9F14", VA = "0xFD9F14")]
		public EVROverlayError SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0xFD9F30", Offset = "0xFD9F30", VA = "0xFD9F30")]
		public EVROverlayError GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0xFD9F50", Offset = "0xFD9F50", VA = "0xFD9F50")]
		public EVROverlayError SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0xFD9F6C", Offset = "0xFD9F6C", VA = "0xFD9F6C")]
		public EVROverlayError GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0xFD9F8C", Offset = "0xFD9F8C", VA = "0xFD9F8C")]
		public EVROverlayError SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0xFD9FA8", Offset = "0xFD9FA8", VA = "0xFD9FA8")]
		public EVROverlayError GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0xFD9FCC", Offset = "0xFD9FCC", VA = "0xFD9FCC")]
		public EVROverlayError SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0xFD9FE8", Offset = "0xFD9FE8", VA = "0xFD9FE8")]
		public EVROverlayError GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0xFDA004", Offset = "0xFDA004", VA = "0xFDA004")]
		public EVROverlayError SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0xFDA020", Offset = "0xFDA020", VA = "0xFDA020")]
		public EVROverlayError GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0xFDA03C", Offset = "0xFDA03C", VA = "0xFDA03C")]
		public uint GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0xFDA058", Offset = "0xFDA058", VA = "0xFDA058")]
		public EVROverlayError SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0xFDA074", Offset = "0xFDA074", VA = "0xFDA074")]
		public EVROverlayError GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0xFDA090", Offset = "0xFDA090", VA = "0xFDA090")]
		public EVROverlayError SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0xFDA0AC", Offset = "0xFDA0AC", VA = "0xFDA0AC")]
		public EVROverlayError GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0xFDA0C8", Offset = "0xFDA0C8", VA = "0xFDA0C8")]
		public EVROverlayError SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0xFDA0E4", Offset = "0xFDA0E4", VA = "0xFDA0E4")]
		public EVROverlayError GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0xFDA104", Offset = "0xFDA104", VA = "0xFDA104")]
		public EVROverlayError SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0xFDA120", Offset = "0xFDA120", VA = "0xFDA120")]
		public EVROverlayError GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0xFDA140", Offset = "0xFDA140", VA = "0xFDA140")]
		public EVROverlayError GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0xFDA160", Offset = "0xFDA160", VA = "0xFDA160")]
		public EVROverlayError SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0xFDA17C", Offset = "0xFDA17C", VA = "0xFDA17C")]
		public EVROverlayError ShowOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0xFDA198", Offset = "0xFDA198", VA = "0xFDA198")]
		public EVROverlayError HideOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0xFDA1B4", Offset = "0xFDA1B4", VA = "0xFDA1B4")]
		public bool IsOverlayVisible(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0xFDA1D0", Offset = "0xFDA1D0", VA = "0xFDA1D0")]
		public EVROverlayError GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0xFDA1EC", Offset = "0xFDA1EC", VA = "0xFDA1EC")]
		public bool PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0xFDA628", Offset = "0xFDA628", VA = "0xFDA628")]
		public EVROverlayError GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0xFDA644", Offset = "0xFDA644", VA = "0xFDA644")]
		public EVROverlayError SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0xFDA660", Offset = "0xFDA660", VA = "0xFDA660")]
		public EVROverlayError GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0xFDA67C", Offset = "0xFDA67C", VA = "0xFDA67C")]
		public EVROverlayError SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0xFDA698", Offset = "0xFDA698", VA = "0xFDA698")]
		public bool ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults)
		{
			return default(bool);
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0xFDA6B4", Offset = "0xFDA6B4", VA = "0xFDA6B4")]
		public bool IsHoverTargetOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0xFDA6D0", Offset = "0xFDA6D0", VA = "0xFDA6D0")]
		public ulong GetGamepadFocusOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0xFDA6EC", Offset = "0xFDA6EC", VA = "0xFDA6EC")]
		public EVROverlayError SetGamepadFocusOverlay(ulong ulNewFocusOverlay)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0xFDA708", Offset = "0xFDA708", VA = "0xFDA708")]
		public EVROverlayError SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0xFDA724", Offset = "0xFDA724", VA = "0xFDA724")]
		public EVROverlayError MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0xFDA740", Offset = "0xFDA740", VA = "0xFDA740")]
		public EVROverlayError SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0xFDA75C", Offset = "0xFDA75C", VA = "0xFDA75C")]
		public EVROverlayError GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0xFDA77C", Offset = "0xFDA77C", VA = "0xFDA77C")]
		public EVROverlayError SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0xFDA798", Offset = "0xFDA798", VA = "0xFDA798")]
		public EVROverlayError ClearOverlayTexture(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0xFDA7B4", Offset = "0xFDA7B4", VA = "0xFDA7B4")]
		public EVROverlayError SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0xFDA7D0", Offset = "0xFDA7D0", VA = "0xFDA7D0")]
		public EVROverlayError SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0xFDA7EC", Offset = "0xFDA7EC", VA = "0xFDA7EC")]
		public EVROverlayError GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0xFDA820", Offset = "0xFDA820", VA = "0xFDA820")]
		public EVROverlayError ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0xFDA83C", Offset = "0xFDA83C", VA = "0xFDA83C")]
		public EVROverlayError GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0xFDA860", Offset = "0xFDA860", VA = "0xFDA860")]
		public EVROverlayError CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0xFDA884", Offset = "0xFDA884", VA = "0xFDA884")]
		public bool IsDashboardVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0xFDA8A0", Offset = "0xFDA8A0", VA = "0xFDA8A0")]
		public bool IsActiveDashboardOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0xFDA8BC", Offset = "0xFDA8BC", VA = "0xFDA8BC")]
		public EVROverlayError SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0xFDA8D8", Offset = "0xFDA8D8", VA = "0xFDA8D8")]
		public EVROverlayError GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0xFDA8F8", Offset = "0xFDA8F8", VA = "0xFDA8F8")]
		public void ShowDashboard(string pchOverlayToShow)
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0xFDA914", Offset = "0xFDA914", VA = "0xFDA914")]
		public uint GetPrimaryDashboardDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0xFDA930", Offset = "0xFDA930", VA = "0xFDA930")]
		public EVROverlayError ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0xFDA954", Offset = "0xFDA954", VA = "0xFDA954")]
		public EVROverlayError ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0xFDA97C", Offset = "0xFDA97C", VA = "0xFDA97C")]
		public uint GetKeyboardText(StringBuilder pchText, uint cchText)
		{
			return default(uint);
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0xFDA998", Offset = "0xFDA998", VA = "0xFDA998")]
		public void HideKeyboard()
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0xFDA9B4", Offset = "0xFDA9B4", VA = "0xFDA9B4")]
		public void SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform)
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0xFDA9D0", Offset = "0xFDA9D0", VA = "0xFDA9D0")]
		public void SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect)
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0xFDA9EC", Offset = "0xFDA9EC", VA = "0xFDA9EC")]
		public EVROverlayError SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0xFDAA08", Offset = "0xFDAA08", VA = "0xFDAA08")]
		public EVROverlayError GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0xFDAA28", Offset = "0xFDAA28", VA = "0xFDAA28")]
		public VRMessageOverlayResponse ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text)
		{
			return default(VRMessageOverlayResponse);
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0xFDAA44", Offset = "0xFDAA44", VA = "0xFDAA44")]
		public void CloseMessageOverlay()
		{
		}
	}
	[Token(Token = "0x20000AA")]
	public class CVRRenderModels
	{
		[Token(Token = "0x20003B8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBCA9AC", Offset = "0xBCA9AC")]
		internal delegate bool _GetComponentStatePacked(string pchRenderModelName, string pchComponentName, ref VRControllerState_t_Packed pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[StructLayout(2)]
		[Token(Token = "0x20003B9")]
		private struct GetComponentStateUnion
		{
			[Token(Token = "0x4000D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRRenderModels._GetComponentState pGetComponentState;

			[Token(Token = "0x4000D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetComponentStatePacked pGetComponentStatePacked;
		}

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRRenderModels FnTable;

		[Token(Token = "0x600088F")]
		[Address(RVA = "0xFDAB80", Offset = "0xFDAB80", VA = "0xFDAB80")]
		internal CVRRenderModels(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0xFCB238", Offset = "0xFCB238", VA = "0xFCB238")]
		public EVRRenderModelError LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0xFCA6A0", Offset = "0xFCA6A0", VA = "0xFCA6A0")]
		public void FreeRenderModel(IntPtr pRenderModel)
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0xFCB254", Offset = "0xFCB254", VA = "0xFCB254")]
		public EVRRenderModelError LoadTexture_Async(int textureId, ref IntPtr ppTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0xFDAC94", Offset = "0xFDAC94", VA = "0xFDAC94")]
		public void FreeTexture(IntPtr pTexture)
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0xFDACB0", Offset = "0xFDACB0", VA = "0xFDACB0")]
		public EVRRenderModelError LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0xFDACCC", Offset = "0xFDACCC", VA = "0xFDACCC")]
		public EVRRenderModelError LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0xFDACE8", Offset = "0xFDACE8", VA = "0xFDACE8")]
		public void FreeTextureD3D11(IntPtr pD3D11Texture2D)
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0xFDAD04", Offset = "0xFDAD04", VA = "0xFDAD04")]
		public uint GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0xFDAD20", Offset = "0xFDAD20", VA = "0xFDAD20")]
		public uint GetRenderModelCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0xFCB1E4", Offset = "0xFCB1E4", VA = "0xFCB1E4")]
		public uint GetComponentCount(string pchRenderModelName)
		{
			return default(uint);
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0xFCB200", Offset = "0xFCB200", VA = "0xFCB200")]
		public uint GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0xFDAD3C", Offset = "0xFDAD3C", VA = "0xFDAD3C")]
		public ulong GetComponentButtonMask(string pchRenderModelName, string pchComponentName)
		{
			return default(ulong);
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0xFCB21C", Offset = "0xFCB21C", VA = "0xFCB21C")]
		public uint GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0xFDAD58", Offset = "0xFDAD58", VA = "0xFDAD58")]
		public bool GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)
		{
			return default(bool);
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0xFDB30C", Offset = "0xFDB30C", VA = "0xFDB30C")]
		public bool RenderModelHasComponent(string pchRenderModelName, string pchComponentName)
		{
			return default(bool);
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0xFDB328", Offset = "0xFDB328", VA = "0xFDB328")]
		public uint GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xFDB344", Offset = "0xFDB344", VA = "0xFDB344")]
		public uint GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0xFDB360", Offset = "0xFDB360", VA = "0xFDB360")]
		public string GetRenderModelErrorNameFromEnum(EVRRenderModelError error)
		{
			return null;
		}
	}
	[Token(Token = "0x20000AB")]
	public class CVRNotifications
	{
		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRNotifications FnTable;

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0xFD99E4", Offset = "0xFD99E4", VA = "0xFD99E4")]
		internal CVRNotifications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0xFD9AEC", Offset = "0xFD9AEC", VA = "0xFD9AEC")]
		public EVRNotificationError CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId)
		{
			return default(EVRNotificationError);
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0xFD9B10", Offset = "0xFD9B10", VA = "0xFD9B10")]
		public EVRNotificationError RemoveNotification(uint notificationId)
		{
			return default(EVRNotificationError);
		}
	}
	[Token(Token = "0x20000AC")]
	public class CVRSettings
	{
		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSettings FnTable;

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xFDB84C", Offset = "0xFDB84C", VA = "0xFDB84C")]
		internal CVRSettings(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xFDB960", Offset = "0xFDB960", VA = "0xFDB960")]
		public string GetSettingsErrorNameFromEnum(EVRSettingsError eError)
		{
			return null;
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xFDB9F4", Offset = "0xFDB9F4", VA = "0xFDB9F4")]
		public bool Sync(bool bForce, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xFDBA14", Offset = "0xFDBA14", VA = "0xFDBA14")]
		public void SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0xFDBA34", Offset = "0xFDBA34", VA = "0xFDBA34")]
		public void SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0xFDBA50", Offset = "0xFDBA50", VA = "0xFDBA50")]
		public void SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xFDBA6C", Offset = "0xFDBA6C", VA = "0xFDBA6C")]
		public void SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xFDBA88", Offset = "0xFDBA88", VA = "0xFDBA88")]
		public bool GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0xFDBAA4", Offset = "0xFDBAA4", VA = "0xFDBAA4")]
		public int GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(int);
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0xFDBAC0", Offset = "0xFDBAC0", VA = "0xFDBAC0")]
		public float GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(float);
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0xFDBADC", Offset = "0xFDBADC", VA = "0xFDBADC")]
		public void GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xFDBAF8", Offset = "0xFDBAF8", VA = "0xFDBAF8")]
		public void RemoveSection(string pchSection, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0xFDBB14", Offset = "0xFDBB14", VA = "0xFDBB14")]
		public void RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
		}
	}
	[Token(Token = "0x20000AD")]
	public class CVRScreenshots
	{
		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRScreenshots FnTable;

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0xFDB674", Offset = "0xFDB674", VA = "0xFDB674")]
		internal CVRScreenshots(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xFDB790", Offset = "0xFDB790", VA = "0xFDB790")]
		public EVRScreenshotError RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xFDB7B0", Offset = "0xFDB7B0", VA = "0xFDB7B0")]
		public EVRScreenshotError HookScreenshot(EVRScreenshotType[] pSupportedTypes)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xFDB7D8", Offset = "0xFDB7D8", VA = "0xFDB7D8")]
		public EVRScreenshotType GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError)
		{
			return default(EVRScreenshotType);
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xFDB7F4", Offset = "0xFDB7F4", VA = "0xFDB7F4")]
		public uint GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0xFD0414", Offset = "0xFD0414", VA = "0xFD0414")]
		public EVRScreenshotError UpdateScreenshotProgress(uint screenshotHandle, float flProgress)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xFDB810", Offset = "0xFDB810", VA = "0xFDB810")]
		public EVRScreenshotError TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0xFDB830", Offset = "0xFDB830", VA = "0xFDB830")]
		public EVRScreenshotError SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename)
		{
			return default(EVRScreenshotError);
		}
	}
	[Token(Token = "0x20000AE")]
	public class CVRResources
	{
		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRResources FnTable;

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xFDB534", Offset = "0xFDB534", VA = "0xFDB534")]
		internal CVRResources(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0xFDB63C", Offset = "0xFDB63C", VA = "0xFDB63C")]
		public uint LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen)
		{
			return default(uint);
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xFDB658", Offset = "0xFDB658", VA = "0xFDB658")]
		public uint GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20000AF")]
	public class CVRDriverManager
	{
		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRDriverManager FnTable;

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xFD96F4", Offset = "0xFD96F4", VA = "0xFD96F4")]
		internal CVRDriverManager(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xFD9804", Offset = "0xFD9804", VA = "0xFD9804")]
		public uint GetDriverCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xFD9820", Offset = "0xFD9820", VA = "0xFD9820")]
		public uint GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xFD983C", Offset = "0xFD983C", VA = "0xFD983C")]
		public ulong GetDriverHandle(string pchDriverName)
		{
			return default(ulong);
		}
	}
	[Token(Token = "0x20000B0")]
	public class OpenVRInterop
	{
		[PreserveSig]
		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x13C7ABC", Offset = "0x13C7ABC", VA = "0x13C7ABC")]
		internal static extern uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType);

		[PreserveSig]
		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x13C7B50", Offset = "0x13C7B50", VA = "0x13C7B50")]
		internal static extern void ShutdownInternal();

		[PreserveSig]
		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x13C7BC4", Offset = "0x13C7BC4", VA = "0x13C7BC4")]
		internal static extern bool IsHmdPresent();

		[PreserveSig]
		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x13C7C44", Offset = "0x13C7C44", VA = "0x13C7C44")]
		internal static extern bool IsRuntimeInstalled();

		[PreserveSig]
		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x13C7D38", Offset = "0x13C7D38", VA = "0x13C7D38")]
		internal static extern IntPtr GetStringForHmdError(EVRInitError error);

		[PreserveSig]
		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x13C7DBC", Offset = "0x13C7DBC", VA = "0x13C7DBC")]
		internal static extern IntPtr GetGenericInterface([In] string pchInterfaceVersion, ref EVRInitError peError);

		[PreserveSig]
		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x13C7E68", Offset = "0x13C7E68", VA = "0x13C7E68")]
		internal static extern bool IsInterfaceVersionValid([In] string pchInterfaceVersion);

		[PreserveSig]
		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x13C7F08", Offset = "0x13C7F08", VA = "0x13C7F08")]
		internal static extern uint GetInitToken();

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x13C91EC", Offset = "0x13C91EC", VA = "0x13C91EC")]
		public OpenVRInterop()
		{
		}
	}
	[Token(Token = "0x20000B1")]
	public enum EVREye
	{
		[Token(Token = "0x4000465")]
		Eye_Left,
		[Token(Token = "0x4000466")]
		Eye_Right
	}
	[Token(Token = "0x20000B2")]
	public enum ETextureType
	{
		[Token(Token = "0x4000468")]
		DirectX,
		[Token(Token = "0x4000469")]
		OpenGL,
		[Token(Token = "0x400046A")]
		Vulkan,
		[Token(Token = "0x400046B")]
		IOSurface,
		[Token(Token = "0x400046C")]
		DirectX12,
		[Token(Token = "0x400046D")]
		DXGISharedHandle
	}
	[Token(Token = "0x20000B3")]
	public enum EColorSpace
	{
		[Token(Token = "0x400046F")]
		Auto,
		[Token(Token = "0x4000470")]
		Gamma,
		[Token(Token = "0x4000471")]
		Linear
	}
	[Token(Token = "0x20000B4")]
	public enum ETrackingResult
	{
		[Token(Token = "0x4000473")]
		Uninitialized = 1,
		[Token(Token = "0x4000474")]
		Calibrating_InProgress = 100,
		[Token(Token = "0x4000475")]
		Calibrating_OutOfRange = 101,
		[Token(Token = "0x4000476")]
		Running_OK = 200,
		[Token(Token = "0x4000477")]
		Running_OutOfRange = 201
	}
	[Token(Token = "0x20000B5")]
	public enum ETrackedDeviceClass
	{
		[Token(Token = "0x4000479")]
		Invalid,
		[Token(Token = "0x400047A")]
		HMD,
		[Token(Token = "0x400047B")]
		Controller,
		[Token(Token = "0x400047C")]
		GenericTracker,
		[Token(Token = "0x400047D")]
		TrackingReference,
		[Token(Token = "0x400047E")]
		DisplayRedirect
	}
	[Token(Token = "0x20000B6")]
	public enum ETrackedControllerRole
	{
		[Token(Token = "0x4000480")]
		Invalid,
		[Token(Token = "0x4000481")]
		LeftHand,
		[Token(Token = "0x4000482")]
		RightHand,
		[Token(Token = "0x4000483")]
		OptOut
	}
	[Token(Token = "0x20000B7")]
	public enum ETrackingUniverseOrigin
	{
		[Token(Token = "0x4000485")]
		TrackingUniverseSeated,
		[Token(Token = "0x4000486")]
		TrackingUniverseStanding,
		[Token(Token = "0x4000487")]
		TrackingUniverseRawAndUncalibrated
	}
	[Token(Token = "0x20000B8")]
	public enum ETrackedDeviceProperty
	{
		[Token(Token = "0x4000489")]
		Prop_Invalid = 0,
		[Token(Token = "0x400048A")]
		Prop_TrackingSystemName_String = 1000,
		[Token(Token = "0x400048B")]
		Prop_ModelNumber_String = 1001,
		[Token(Token = "0x400048C")]
		Prop_SerialNumber_String = 1002,
		[Token(Token = "0x400048D")]
		Prop_RenderModelName_String = 1003,
		[Token(Token = "0x400048E")]
		Prop_WillDriftInYaw_Bool = 1004,
		[Token(Token = "0x400048F")]
		Prop_ManufacturerName_String = 1005,
		[Token(Token = "0x4000490")]
		Prop_TrackingFirmwareVersion_String = 1006,
		[Token(Token = "0x4000491")]
		Prop_HardwareRevision_String = 1007,
		[Token(Token = "0x4000492")]
		Prop_AllWirelessDongleDescriptions_String = 1008,
		[Token(Token = "0x4000493")]
		Prop_ConnectedWirelessDongle_String = 1009,
		[Token(Token = "0x4000494")]
		Prop_DeviceIsWireless_Bool = 1010,
		[Token(Token = "0x4000495")]
		Prop_DeviceIsCharging_Bool = 1011,
		[Token(Token = "0x4000496")]
		Prop_DeviceBatteryPercentage_Float = 1012,
		[Token(Token = "0x4000497")]
		Prop_StatusDisplayTransform_Matrix34 = 1013,
		[Token(Token = "0x4000498")]
		Prop_Firmware_UpdateAvailable_Bool = 1014,
		[Token(Token = "0x4000499")]
		Prop_Firmware_ManualUpdate_Bool = 1015,
		[Token(Token = "0x400049A")]
		Prop_Firmware_ManualUpdateURL_String = 1016,
		[Token(Token = "0x400049B")]
		Prop_HardwareRevision_Uint64 = 1017,
		[Token(Token = "0x400049C")]
		Prop_FirmwareVersion_Uint64 = 1018,
		[Token(Token = "0x400049D")]
		Prop_FPGAVersion_Uint64 = 1019,
		[Token(Token = "0x400049E")]
		Prop_VRCVersion_Uint64 = 1020,
		[Token(Token = "0x400049F")]
		Prop_RadioVersion_Uint64 = 1021,
		[Token(Token = "0x40004A0")]
		Prop_DongleVersion_Uint64 = 1022,
		[Token(Token = "0x40004A1")]
		Prop_BlockServerShutdown_Bool = 1023,
		[Token(Token = "0x40004A2")]
		Prop_CanUnifyCoordinateSystemWithHmd_Bool = 1024,
		[Token(Token = "0x40004A3")]
		Prop_ContainsProximitySensor_Bool = 1025,
		[Token(Token = "0x40004A4")]
		Prop_DeviceProvidesBatteryStatus_Bool = 1026,
		[Token(Token = "0x40004A5")]
		Prop_DeviceCanPowerOff_Bool = 1027,
		[Token(Token = "0x40004A6")]
		Prop_Firmware_ProgrammingTarget_String = 1028,
		[Token(Token = "0x40004A7")]
		Prop_DeviceClass_Int32 = 1029,
		[Token(Token = "0x40004A8")]
		Prop_HasCamera_Bool = 1030,
		[Token(Token = "0x40004A9")]
		Prop_DriverVersion_String = 1031,
		[Token(Token = "0x40004AA")]
		Prop_Firmware_ForceUpdateRequired_Bool = 1032,
		[Token(Token = "0x40004AB")]
		Prop_ViveSystemButtonFixRequired_Bool = 1033,
		[Token(Token = "0x40004AC")]
		Prop_ParentDriver_Uint64 = 1034,
		[Token(Token = "0x40004AD")]
		Prop_ResourceRoot_String = 1035,
		[Token(Token = "0x40004AE")]
		Prop_RegisteredDeviceType_String = 1036,
		[Token(Token = "0x40004AF")]
		Prop_InputProfilePath_String = 1037,
		[Token(Token = "0x40004B0")]
		Prop_NeverTracked_Bool = 1038,
		[Token(Token = "0x40004B1")]
		Prop_ReportsTimeSinceVSync_Bool = 2000,
		[Token(Token = "0x40004B2")]
		Prop_SecondsFromVsyncToPhotons_Float = 2001,
		[Token(Token = "0x40004B3")]
		Prop_DisplayFrequency_Float = 2002,
		[Token(Token = "0x40004B4")]
		Prop_UserIpdMeters_Float = 2003,
		[Token(Token = "0x40004B5")]
		Prop_CurrentUniverseId_Uint64 = 2004,
		[Token(Token = "0x40004B6")]
		Prop_PreviousUniverseId_Uint64 = 2005,
		[Token(Token = "0x40004B7")]
		Prop_DisplayFirmwareVersion_Uint64 = 2006,
		[Token(Token = "0x40004B8")]
		Prop_IsOnDesktop_Bool = 2007,
		[Token(Token = "0x40004B9")]
		Prop_DisplayMCType_Int32 = 2008,
		[Token(Token = "0x40004BA")]
		Prop_DisplayMCOffset_Float = 2009,
		[Token(Token = "0x40004BB")]
		Prop_DisplayMCScale_Float = 2010,
		[Token(Token = "0x40004BC")]
		Prop_EdidVendorID_Int32 = 2011,
		[Token(Token = "0x40004BD")]
		Prop_DisplayMCImageLeft_String = 2012,
		[Token(Token = "0x40004BE")]
		Prop_DisplayMCImageRight_String = 2013,
		[Token(Token = "0x40004BF")]
		Prop_DisplayGCBlackClamp_Float = 2014,
		[Token(Token = "0x40004C0")]
		Prop_EdidProductID_Int32 = 2015,
		[Token(Token = "0x40004C1")]
		Prop_CameraToHeadTransform_Matrix34 = 2016,
		[Token(Token = "0x40004C2")]
		Prop_DisplayGCType_Int32 = 2017,
		[Token(Token = "0x40004C3")]
		Prop_DisplayGCOffset_Float = 2018,
		[Token(Token = "0x40004C4")]
		Prop_DisplayGCScale_Float = 2019,
		[Token(Token = "0x40004C5")]
		Prop_DisplayGCPrescale_Float = 2020,
		[Token(Token = "0x40004C6")]
		Prop_DisplayGCImage_String = 2021,
		[Token(Token = "0x40004C7")]
		Prop_LensCenterLeftU_Float = 2022,
		[Token(Token = "0x40004C8")]
		Prop_LensCenterLeftV_Float = 2023,
		[Token(Token = "0x40004C9")]
		Prop_LensCenterRightU_Float = 2024,
		[Token(Token = "0x40004CA")]
		Prop_LensCenterRightV_Float = 2025,
		[Token(Token = "0x40004CB")]
		Prop_UserHeadToEyeDepthMeters_Float = 2026,
		[Token(Token = "0x40004CC")]
		Prop_CameraFirmwareVersion_Uint64 = 2027,
		[Token(Token = "0x40004CD")]
		Prop_CameraFirmwareDescription_String = 2028,
		[Token(Token = "0x40004CE")]
		Prop_DisplayFPGAVersion_Uint64 = 2029,
		[Token(Token = "0x40004CF")]
		Prop_DisplayBootloaderVersion_Uint64 = 2030,
		[Token(Token = "0x40004D0")]
		Prop_DisplayHardwareVersion_Uint64 = 2031,
		[Token(Token = "0x40004D1")]
		Prop_AudioFirmwareVersion_Uint64 = 2032,
		[Token(Token = "0x40004D2")]
		Prop_CameraCompatibilityMode_Int32 = 2033,
		[Token(Token = "0x40004D3")]
		Prop_ScreenshotHorizontalFieldOfViewDegrees_Float = 2034,
		[Token(Token = "0x40004D4")]
		Prop_ScreenshotVerticalFieldOfViewDegrees_Float = 2035,
		[Token(Token = "0x40004D5")]
		Prop_DisplaySuppressed_Bool = 2036,
		[Token(Token = "0x40004D6")]
		Prop_DisplayAllowNightMode_Bool = 2037,
		[Token(Token = "0x40004D7")]
		Prop_DisplayMCImageWidth_Int32 = 2038,
		[Token(Token = "0x40004D8")]
		Prop_DisplayMCImageHeight_Int32 = 2039,
		[Token(Token = "0x40004D9")]
		Prop_DisplayMCImageNumChannels_Int32 = 2040,
		[Token(Token = "0x40004DA")]
		Prop_DisplayMCImageData_Binary = 2041,
		[Token(Token = "0x40004DB")]
		Prop_SecondsFromPhotonsToVblank_Float = 2042,
		[Token(Token = "0x40004DC")]
		Prop_DriverDirectModeSendsVsyncEvents_Bool = 2043,
		[Token(Token = "0x40004DD")]
		Prop_DisplayDebugMode_Bool = 2044,
		[Token(Token = "0x40004DE")]
		Prop_GraphicsAdapterLuid_Uint64 = 2045,
		[Token(Token = "0x40004DF")]
		Prop_DriverProvidedChaperonePath_String = 2048,
		[Token(Token = "0x40004E0")]
		Prop_ExpectedTrackingReferenceCount_Int32 = 2049,
		[Token(Token = "0x40004E1")]
		Prop_ExpectedControllerCount_Int32 = 2050,
		[Token(Token = "0x40004E2")]
		Prop_NamedIconPathControllerLeftDeviceOff_String = 2051,
		[Token(Token = "0x40004E3")]
		Prop_NamedIconPathControllerRightDeviceOff_String = 2052,
		[Token(Token = "0x40004E4")]
		Prop_NamedIconPathTrackingReferenceDeviceOff_String = 2053,
		[Token(Token = "0x40004E5")]
		Prop_DoNotApplyPrediction_Bool = 2054,
		[Token(Token = "0x40004E6")]
		Prop_CameraToHeadTransforms_Matrix34_Array = 2055,
		[Token(Token = "0x40004E7")]
		Prop_DistortionMeshResolution_Int32 = 2056,
		[Token(Token = "0x40004E8")]
		Prop_DriverIsDrawingControllers_Bool = 2057,
		[Token(Token = "0x40004E9")]
		Prop_DriverRequestsApplicationPause_Bool = 2058,
		[Token(Token = "0x40004EA")]
		Prop_DriverRequestsReducedRendering_Bool = 2059,
		[Token(Token = "0x40004EB")]
		Prop_MinimumIpdStepMeters_Float = 2060,
		[Token(Token = "0x40004EC")]
		Prop_AudioBridgeFirmwareVersion_Uint64 = 2061,
		[Token(Token = "0x40004ED")]
		Prop_ImageBridgeFirmwareVersion_Uint64 = 2062,
		[Token(Token = "0x40004EE")]
		Prop_AttachedDeviceId_String = 3000,
		[Token(Token = "0x40004EF")]
		Prop_SupportedButtons_Uint64 = 3001,
		[Token(Token = "0x40004F0")]
		Prop_Axis0Type_Int32 = 3002,
		[Token(Token = "0x40004F1")]
		Prop_Axis1Type_Int32 = 3003,
		[Token(Token = "0x40004F2")]
		Prop_Axis2Type_Int32 = 3004,
		[Token(Token = "0x40004F3")]
		Prop_Axis3Type_Int32 = 3005,
		[Token(Token = "0x40004F4")]
		Prop_Axis4Type_Int32 = 3006,
		[Token(Token = "0x40004F5")]
		Prop_ControllerRoleHint_Int32 = 3007,
		[Token(Token = "0x40004F6")]
		Prop_FieldOfViewLeftDegrees_Float = 4000,
		[Token(Token = "0x40004F7")]
		Prop_FieldOfViewRightDegrees_Float = 4001,
		[Token(Token = "0x40004F8")]
		Prop_FieldOfViewTopDegrees_Float = 4002,
		[Token(Token = "0x40004F9")]
		Prop_FieldOfViewBottomDegrees_Float = 4003,
		[Token(Token = "0x40004FA")]
		Prop_TrackingRangeMinimumMeters_Float = 4004,
		[Token(Token = "0x40004FB")]
		Prop_TrackingRangeMaximumMeters_Float = 4005,
		[Token(Token = "0x40004FC")]
		Prop_ModeLabel_String = 4006,
		[Token(Token = "0x40004FD")]
		Prop_IconPathName_String = 5000,
		[Token(Token = "0x40004FE")]
		Prop_NamedIconPathDeviceOff_String = 5001,
		[Token(Token = "0x40004FF")]
		Prop_NamedIconPathDeviceSearching_String = 5002,
		[Token(Token = "0x4000500")]
		Prop_NamedIconPathDeviceSearchingAlert_String = 5003,
		[Token(Token = "0x4000501")]
		Prop_NamedIconPathDeviceReady_String = 5004,
		[Token(Token = "0x4000502")]
		Prop_NamedIconPathDeviceReadyAlert_String = 5005,
		[Token(Token = "0x4000503")]
		Prop_NamedIconPathDeviceNotReady_String = 5006,
		[Token(Token = "0x4000504")]
		Prop_NamedIconPathDeviceStandby_String = 5007,
		[Token(Token = "0x4000505")]
		Prop_NamedIconPathDeviceAlertLow_String = 5008,
		[Token(Token = "0x4000506")]
		Prop_DisplayHiddenArea_Binary_Start = 5100,
		[Token(Token = "0x4000507")]
		Prop_DisplayHiddenArea_Binary_End = 5150,
		[Token(Token = "0x4000508")]
		Prop_ParentContainer = 5151,
		[Token(Token = "0x4000509")]
		Prop_UserConfigPath_String = 6000,
		[Token(Token = "0x400050A")]
		Prop_InstallPath_String = 6001,
		[Token(Token = "0x400050B")]
		Prop_HasDisplayComponent_Bool = 6002,
		[Token(Token = "0x400050C")]
		Prop_HasControllerComponent_Bool = 6003,
		[Token(Token = "0x400050D")]
		Prop_HasCameraComponent_Bool = 6004,
		[Token(Token = "0x400050E")]
		Prop_HasDriverDirectModeComponent_Bool = 6005,
		[Token(Token = "0x400050F")]
		Prop_HasVirtualDisplayComponent_Bool = 6006,
		[Token(Token = "0x4000510")]
		Prop_ControllerType_String = 7000,
		[Token(Token = "0x4000511")]
		Prop_LegacyInputProfile_String = 7001,
		[Token(Token = "0x4000512")]
		Prop_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4000513")]
		Prop_VendorSpecific_Reserved_End = 10999,
		[Token(Token = "0x4000514")]
		Prop_TrackedDeviceProperty_Max = 1000000
	}
	[Token(Token = "0x20000B9")]
	public enum ETrackedPropertyError
	{
		[Token(Token = "0x4000516")]
		TrackedProp_Success,
		[Token(Token = "0x4000517")]
		TrackedProp_WrongDataType,
		[Token(Token = "0x4000518")]
		TrackedProp_WrongDeviceClass,
		[Token(Token = "0x4000519")]
		TrackedProp_BufferTooSmall,
		[Token(Token = "0x400051A")]
		TrackedProp_UnknownProperty,
		[Token(Token = "0x400051B")]
		TrackedProp_InvalidDevice,
		[Token(Token = "0x400051C")]
		TrackedProp_CouldNotContactServer,
		[Token(Token = "0x400051D")]
		TrackedProp_ValueNotProvidedByDevice,
		[Token(Token = "0x400051E")]
		TrackedProp_StringExceedsMaximumLength,
		[Token(Token = "0x400051F")]
		TrackedProp_NotYetAvailable,
		[Token(Token = "0x4000520")]
		TrackedProp_PermissionDenied,
		[Token(Token = "0x4000521")]
		TrackedProp_InvalidOperation,
		[Token(Token = "0x4000522")]
		TrackedProp_CannotWriteToWildcards
	}
	[Token(Token = "0x20000BA")]
	public enum EVRSubmitFlags
	{
		[Token(Token = "0x4000524")]
		Submit_Default = 0,
		[Token(Token = "0x4000525")]
		Submit_LensDistortionAlreadyApplied = 1,
		[Token(Token = "0x4000526")]
		Submit_GlRenderBuffer = 2,
		[Token(Token = "0x4000527")]
		Submit_Reserved = 4,
		[Token(Token = "0x4000528")]
		Submit_TextureWithPose = 8,
		[Token(Token = "0x4000529")]
		Submit_TextureWithDepth = 0x10
	}
	[Token(Token = "0x20000BB")]
	public enum EVRState
	{
		[Token(Token = "0x400052B")]
		Undefined = -1,
		[Token(Token = "0x400052C")]
		Off,
		[Token(Token = "0x400052D")]
		Searching,
		[Token(Token = "0x400052E")]
		Searching_Alert,
		[Token(Token = "0x400052F")]
		Ready,
		[Token(Token = "0x4000530")]
		Ready_Alert,
		[Token(Token = "0x4000531")]
		NotReady,
		[Token(Token = "0x4000532")]
		Standby,
		[Token(Token = "0x4000533")]
		Ready_Alert_Low
	}
	[Token(Token = "0x20000BC")]
	public enum EVREventType
	{
		[Token(Token = "0x4000535")]
		VREvent_None = 0,
		[Token(Token = "0x4000536")]
		VREvent_TrackedDeviceActivated = 100,
		[Token(Token = "0x4000537")]
		VREvent_TrackedDeviceDeactivated = 101,
		[Token(Token = "0x4000538")]
		VREvent_TrackedDeviceUpdated = 102,
		[Token(Token = "0x4000539")]
		VREvent_TrackedDeviceUserInteractionStarted = 103,
		[Token(Token = "0x400053A")]
		VREvent_TrackedDeviceUserInteractionEnded = 104,
		[Token(Token = "0x400053B")]
		VREvent_IpdChanged = 105,
		[Token(Token = "0x400053C")]
		VREvent_EnterStandbyMode = 106,
		[Token(Token = "0x400053D")]
		VREvent_LeaveStandbyMode = 107,
		[Token(Token = "0x400053E")]
		VREvent_TrackedDeviceRoleChanged = 108,
		[Token(Token = "0x400053F")]
		VREvent_WatchdogWakeUpRequested = 109,
		[Token(Token = "0x4000540")]
		VREvent_LensDistortionChanged = 110,
		[Token(Token = "0x4000541")]
		VREvent_PropertyChanged = 111,
		[Token(Token = "0x4000542")]
		VREvent_WirelessDisconnect = 112,
		[Token(Token = "0x4000543")]
		VREvent_WirelessReconnect = 113,
		[Token(Token = "0x4000544")]
		VREvent_ButtonPress = 200,
		[Token(Token = "0x4000545")]
		VREvent_ButtonUnpress = 201,
		[Token(Token = "0x4000546")]
		VREvent_ButtonTouch = 202,
		[Token(Token = "0x4000547")]
		VREvent_ButtonUntouch = 203,
		[Token(Token = "0x4000548")]
		VREvent_DualAnalog_Press = 250,
		[Token(Token = "0x4000549")]
		VREvent_DualAnalog_Unpress = 251,
		[Token(Token = "0x400054A")]
		VREvent_DualAnalog_Touch = 252,
		[Token(Token = "0x400054B")]
		VREvent_DualAnalog_Untouch = 253,
		[Token(Token = "0x400054C")]
		VREvent_DualAnalog_Move = 254,
		[Token(Token = "0x400054D")]
		VREvent_DualAnalog_ModeSwitch1 = 255,
		[Token(Token = "0x400054E")]
		VREvent_DualAnalog_ModeSwitch2 = 256,
		[Token(Token = "0x400054F")]
		VREvent_DualAnalog_Cancel = 257,
		[Token(Token = "0x4000550")]
		VREvent_MouseMove = 300,
		[Token(Token = "0x4000551")]
		VREvent_MouseButtonDown = 301,
		[Token(Token = "0x4000552")]
		VREvent_MouseButtonUp = 302,
		[Token(Token = "0x4000553")]
		VREvent_FocusEnter = 303,
		[Token(Token = "0x4000554")]
		VREvent_FocusLeave = 304,
		[Token(Token = "0x4000555")]
		VREvent_Scroll = 305,
		[Token(Token = "0x4000556")]
		VREvent_TouchPadMove = 306,
		[Token(Token = "0x4000557")]
		VREvent_OverlayFocusChanged = 307,
		[Token(Token = "0x4000558")]
		VREvent_InputFocusCaptured = 400,
		[Token(Token = "0x4000559")]
		VREvent_InputFocusReleased = 401,
		[Token(Token = "0x400055A")]
		VREvent_SceneFocusLost = 402,
		[Token(Token = "0x400055B")]
		VREvent_SceneFocusGained = 403,
		[Token(Token = "0x400055C")]
		VREvent_SceneApplicationChanged = 404,
		[Token(Token = "0x400055D")]
		VREvent_SceneFocusChanged = 405,
		[Token(Token = "0x400055E")]
		VREvent_InputFocusChanged = 406,
		[Token(Token = "0x400055F")]
		VREvent_SceneApplicationSecondaryRenderingStarted = 407,
		[Token(Token = "0x4000560")]
		VREvent_SceneApplicationUsingWrongGraphicsAdapter = 408,
		[Token(Token = "0x4000561")]
		VREvent_HideRenderModels = 410,
		[Token(Token = "0x4000562")]
		VREvent_ShowRenderModels = 411,
		[Token(Token = "0x4000563")]
		VREvent_ConsoleOpened = 420,
		[Token(Token = "0x4000564")]
		VREvent_ConsoleClosed = 421,
		[Token(Token = "0x4000565")]
		VREvent_OverlayShown = 500,
		[Token(Token = "0x4000566")]
		VREvent_OverlayHidden = 501,
		[Token(Token = "0x4000567")]
		VREvent_DashboardActivated = 502,
		[Token(Token = "0x4000568")]
		VREvent_DashboardDeactivated = 503,
		[Token(Token = "0x4000569")]
		VREvent_DashboardThumbSelected = 504,
		[Token(Token = "0x400056A")]
		VREvent_DashboardRequested = 505,
		[Token(Token = "0x400056B")]
		VREvent_ResetDashboard = 506,
		[Token(Token = "0x400056C")]
		VREvent_RenderToast = 507,
		[Token(Token = "0x400056D")]
		VREvent_ImageLoaded = 508,
		[Token(Token = "0x400056E")]
		VREvent_ShowKeyboard = 509,
		[Token(Token = "0x400056F")]
		VREvent_HideKeyboard = 510,
		[Token(Token = "0x4000570")]
		VREvent_OverlayGamepadFocusGained = 511,
		[Token(Token = "0x4000571")]
		VREvent_OverlayGamepadFocusLost = 512,
		[Token(Token = "0x4000572")]
		VREvent_OverlaySharedTextureChanged = 513,
		[Token(Token = "0x4000573")]
		VREvent_ScreenshotTriggered = 516,
		[Token(Token = "0x4000574")]
		VREvent_ImageFailed = 517,
		[Token(Token = "0x4000575")]
		VREvent_DashboardOverlayCreated = 518,
		[Token(Token = "0x4000576")]
		VREvent_SwitchGamepadFocus = 519,
		[Token(Token = "0x4000577")]
		VREvent_RequestScreenshot = 520,
		[Token(Token = "0x4000578")]
		VREvent_ScreenshotTaken = 521,
		[Token(Token = "0x4000579")]
		VREvent_ScreenshotFailed = 522,
		[Token(Token = "0x400057A")]
		VREvent_SubmitScreenshotToDashboard = 523,
		[Token(Token = "0x400057B")]
		VREvent_ScreenshotProgressToDashboard = 524,
		[Token(Token = "0x400057C")]
		VREvent_PrimaryDashboardDeviceChanged = 525,
		[Token(Token = "0x400057D")]
		VREvent_RoomViewShown = 526,
		[Token(Token = "0x400057E")]
		VREvent_RoomViewHidden = 527,
		[Token(Token = "0x400057F")]
		VREvent_Notification_Shown = 600,
		[Token(Token = "0x4000580")]
		VREvent_Notification_Hidden = 601,
		[Token(Token = "0x4000581")]
		VREvent_Notification_BeginInteraction = 602,
		[Token(Token = "0x4000582")]
		VREvent_Notification_Destroyed = 603,
		[Token(Token = "0x4000583")]
		VREvent_Quit = 700,
		[Token(Token = "0x4000584")]
		VREvent_ProcessQuit = 701,
		[Token(Token = "0x4000585")]
		VREvent_QuitAborted_UserPrompt = 702,
		[Token(Token = "0x4000586")]
		VREvent_QuitAcknowledged = 703,
		[Token(Token = "0x4000587")]
		VREvent_DriverRequestedQuit = 704,
		[Token(Token = "0x4000588")]
		VREvent_ChaperoneDataHasChanged = 800,
		[Token(Token = "0x4000589")]
		VREvent_ChaperoneUniverseHasChanged = 801,
		[Token(Token = "0x400058A")]
		VREvent_ChaperoneTempDataHasChanged = 802,
		[Token(Token = "0x400058B")]
		VREvent_ChaperoneSettingsHaveChanged = 803,
		[Token(Token = "0x400058C")]
		VREvent_SeatedZeroPoseReset = 804,
		[Token(Token = "0x400058D")]
		VREvent_AudioSettingsHaveChanged = 820,
		[Token(Token = "0x400058E")]
		VREvent_BackgroundSettingHasChanged = 850,
		[Token(Token = "0x400058F")]
		VREvent_CameraSettingsHaveChanged = 851,
		[Token(Token = "0x4000590")]
		VREvent_ReprojectionSettingHasChanged = 852,
		[Token(Token = "0x4000591")]
		VREvent_ModelSkinSettingsHaveChanged = 853,
		[Token(Token = "0x4000592")]
		VREvent_EnvironmentSettingsHaveChanged = 854,
		[Token(Token = "0x4000593")]
		VREvent_PowerSettingsHaveChanged = 855,
		[Token(Token = "0x4000594")]
		VREvent_EnableHomeAppSettingsHaveChanged = 856,
		[Token(Token = "0x4000595")]
		VREvent_SteamVRSectionSettingChanged = 857,
		[Token(Token = "0x4000596")]
		VREvent_LighthouseSectionSettingChanged = 858,
		[Token(Token = "0x4000597")]
		VREvent_NullSectionSettingChanged = 859,
		[Token(Token = "0x4000598")]
		VREvent_UserInterfaceSectionSettingChanged = 860,
		[Token(Token = "0x4000599")]
		VREvent_NotificationsSectionSettingChanged = 861,
		[Token(Token = "0x400059A")]
		VREvent_KeyboardSectionSettingChanged = 862,
		[Token(Token = "0x400059B")]
		VREvent_PerfSectionSettingChanged = 863,
		[Token(Token = "0x400059C")]
		VREvent_DashboardSectionSettingChanged = 864,
		[Token(Token = "0x400059D")]
		VREvent_WebInterfaceSectionSettingChanged = 865,
		[Token(Token = "0x400059E")]
		VREvent_StatusUpdate = 900,
		[Token(Token = "0x400059F")]
		VREvent_WebInterface_InstallDriverCompleted = 950,
		[Token(Token = "0x40005A0")]
		VREvent_MCImageUpdated = 1000,
		[Token(Token = "0x40005A1")]
		VREvent_FirmwareUpdateStarted = 1100,
		[Token(Token = "0x40005A2")]
		VREvent_FirmwareUpdateFinished = 1101,
		[Token(Token = "0x40005A3")]
		VREvent_KeyboardClosed = 1200,
		[Token(Token = "0x40005A4")]
		VREvent_KeyboardCharInput = 1201,
		[Token(Token = "0x40005A5")]
		VREvent_KeyboardDone = 1202,
		[Token(Token = "0x40005A6")]
		VREvent_ApplicationTransitionStarted = 1300,
		[Token(Token = "0x40005A7")]
		VREvent_ApplicationTransitionAborted = 1301,
		[Token(Token = "0x40005A8")]
		VREvent_ApplicationTransitionNewAppStarted = 1302,
		[Token(Token = "0x40005A9")]
		VREvent_ApplicationListUpdated = 1303,
		[Token(Token = "0x40005AA")]
		VREvent_ApplicationMimeTypeLoad = 1304,
		[Token(Token = "0x40005AB")]
		VREvent_ApplicationTransitionNewAppLaunchComplete = 1305,
		[Token(Token = "0x40005AC")]
		VREvent_ProcessConnected = 1306,
		[Token(Token = "0x40005AD")]
		VREvent_ProcessDisconnected = 1307,
		[Token(Token = "0x40005AE")]
		VREvent_Compositor_MirrorWindowShown = 1400,
		[Token(Token = "0x40005AF")]
		VREvent_Compositor_MirrorWindowHidden = 1401,
		[Token(Token = "0x40005B0")]
		VREvent_Compositor_ChaperoneBoundsShown = 1410,
		[Token(Token = "0x40005B1")]
		VREvent_Compositor_ChaperoneBoundsHidden = 1411,
		[Token(Token = "0x40005B2")]
		VREvent_TrackedCamera_StartVideoStream = 1500,
		[Token(Token = "0x40005B3")]
		VREvent_TrackedCamera_StopVideoStream = 1501,
		[Token(Token = "0x40005B4")]
		VREvent_TrackedCamera_PauseVideoStream = 1502,
		[Token(Token = "0x40005B5")]
		VREvent_TrackedCamera_ResumeVideoStream = 1503,
		[Token(Token = "0x40005B6")]
		VREvent_TrackedCamera_EditingSurface = 1550,
		[Token(Token = "0x40005B7")]
		VREvent_PerformanceTest_EnableCapture = 1600,
		[Token(Token = "0x40005B8")]
		VREvent_PerformanceTest_DisableCapture = 1601,
		[Token(Token = "0x40005B9")]
		VREvent_PerformanceTest_FidelityLevel = 1602,
		[Token(Token = "0x40005BA")]
		VREvent_MessageOverlay_Closed = 1650,
		[Token(Token = "0x40005BB")]
		VREvent_MessageOverlayCloseRequested = 1651,
		[Token(Token = "0x40005BC")]
		VREvent_Input_HapticVibration = 1700,
		[Token(Token = "0x40005BD")]
		VREvent_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x40005BE")]
		VREvent_VendorSpecific_Reserved_End = 19999
	}
	[Token(Token = "0x20000BD")]
	public enum EDeviceActivityLevel
	{
		[Token(Token = "0x40005C0")]
		k_EDeviceActivityLevel_Unknown = -1,
		[Token(Token = "0x40005C1")]
		k_EDeviceActivityLevel_Idle,
		[Token(Token = "0x40005C2")]
		k_EDeviceActivityLevel_UserInteraction,
		[Token(Token = "0x40005C3")]
		k_EDeviceActivityLevel_UserInteraction_Timeout,
		[Token(Token = "0x40005C4")]
		k_EDeviceActivityLevel_Standby
	}
	[Token(Token = "0x20000BE")]
	public enum EVRButtonId
	{
		[Token(Token = "0x40005C6")]
		k_EButton_System = 0,
		[Token(Token = "0x40005C7")]
		k_EButton_ApplicationMenu = 1,
		[Token(Token = "0x40005C8")]
		k_EButton_Grip = 2,
		[Token(Token = "0x40005C9")]
		k_EButton_DPad_Left = 3,
		[Token(Token = "0x40005CA")]
		k_EButton_DPad_Up = 4,
		[Token(Token = "0x40005CB")]
		k_EButton_DPad_Right = 5,
		[Token(Token = "0x40005CC")]
		k_EButton_DPad_Down = 6,
		[Token(Token = "0x40005CD")]
		k_EButton_A = 7,
		[Token(Token = "0x40005CE")]
		k_EButton_ProximitySensor = 31,
		[Token(Token = "0x40005CF")]
		k_EButton_Axis0 = 32,
		[Token(Token = "0x40005D0")]
		k_EButton_Axis1 = 33,
		[Token(Token = "0x40005D1")]
		k_EButton_Axis2 = 34,
		[Token(Token = "0x40005D2")]
		k_EButton_Axis3 = 35,
		[Token(Token = "0x40005D3")]
		k_EButton_Axis4 = 36,
		[Token(Token = "0x40005D4")]
		k_EButton_SteamVR_Touchpad = 32,
		[Token(Token = "0x40005D5")]
		k_EButton_SteamVR_Trigger = 33,
		[Token(Token = "0x40005D6")]
		k_EButton_Dashboard_Back = 2,
		[Token(Token = "0x40005D7")]
		k_EButton_Max = 64
	}
	[Token(Token = "0x20000BF")]
	public enum EVRMouseButton
	{
		[Token(Token = "0x40005D9")]
		Left = 1,
		[Token(Token = "0x40005DA")]
		Right = 2,
		[Token(Token = "0x40005DB")]
		Middle = 4
	}
	[Token(Token = "0x20000C0")]
	public enum EDualAnalogWhich
	{
		[Token(Token = "0x40005DD")]
		k_EDualAnalog_Left,
		[Token(Token = "0x40005DE")]
		k_EDualAnalog_Right
	}
	[Token(Token = "0x20000C1")]
	public enum EVRInputError
	{
		[Token(Token = "0x40005E0")]
		None,
		[Token(Token = "0x40005E1")]
		NameNotFound,
		[Token(Token = "0x40005E2")]
		WrongType,
		[Token(Token = "0x40005E3")]
		InvalidHandle,
		[Token(Token = "0x40005E4")]
		InvalidParam,
		[Token(Token = "0x40005E5")]
		NoSteam,
		[Token(Token = "0x40005E6")]
		MaxCapacityReached,
		[Token(Token = "0x40005E7")]
		IPCError,
		[Token(Token = "0x40005E8")]
		NoActiveActionSet,
		[Token(Token = "0x40005E9")]
		InvalidDevice
	}
	[Token(Token = "0x20000C2")]
	public enum EHiddenAreaMeshType
	{
		[Token(Token = "0x40005EB")]
		k_eHiddenAreaMesh_Standard,
		[Token(Token = "0x40005EC")]
		k_eHiddenAreaMesh_Inverse,
		[Token(Token = "0x40005ED")]
		k_eHiddenAreaMesh_LineLoop,
		[Token(Token = "0x40005EE")]
		k_eHiddenAreaMesh_Max
	}
	[Token(Token = "0x20000C3")]
	public enum EVRControllerAxisType
	{
		[Token(Token = "0x40005F0")]
		k_eControllerAxis_None,
		[Token(Token = "0x40005F1")]
		k_eControllerAxis_TrackPad,
		[Token(Token = "0x40005F2")]
		k_eControllerAxis_Joystick,
		[Token(Token = "0x40005F3")]
		k_eControllerAxis_Trigger
	}
	[Token(Token = "0x20000C4")]
	public enum EVRControllerEventOutputType
	{
		[Token(Token = "0x40005F5")]
		ControllerEventOutput_OSEvents,
		[Token(Token = "0x40005F6")]
		ControllerEventOutput_VREvents
	}
	[Token(Token = "0x20000C5")]
	public enum ECollisionBoundsStyle
	{
		[Token(Token = "0x40005F8")]
		COLLISION_BOUNDS_STYLE_BEGINNER,
		[Token(Token = "0x40005F9")]
		COLLISION_BOUNDS_STYLE_INTERMEDIATE,
		[Token(Token = "0x40005FA")]
		COLLISION_BOUNDS_STYLE_SQUARES,
		[Token(Token = "0x40005FB")]
		COLLISION_BOUNDS_STYLE_ADVANCED,
		[Token(Token = "0x40005FC")]
		COLLISION_BOUNDS_STYLE_NONE,
		[Token(Token = "0x40005FD")]
		COLLISION_BOUNDS_STYLE_COUNT
	}
	[Token(Token = "0x20000C6")]
	public enum EVROverlayError
	{
		[Token(Token = "0x40005FF")]
		None = 0,
		[Token(Token = "0x4000600")]
		UnknownOverlay = 10,
		[Token(Token = "0x4000601")]
		InvalidHandle = 11,
		[Token(Token = "0x4000602")]
		PermissionDenied = 12,
		[Token(Token = "0x4000603")]
		OverlayLimitExceeded = 13,
		[Token(Token = "0x4000604")]
		WrongVisibilityType = 14,
		[Token(Token = "0x4000605")]
		KeyTooLong = 15,
		[Token(Token = "0x4000606")]
		NameTooLong = 16,
		[Token(Token = "0x4000607")]
		KeyInUse = 17,
		[Token(Token = "0x4000608")]
		WrongTransformType = 18,
		[Token(Token = "0x4000609")]
		InvalidTrackedDevice = 19,
		[Token(Token = "0x400060A")]
		InvalidParameter = 20,
		[Token(Token = "0x400060B")]
		ThumbnailCantBeDestroyed = 21,
		[Token(Token = "0x400060C")]
		ArrayTooSmall = 22,
		[Token(Token = "0x400060D")]
		RequestFailed = 23,
		[Token(Token = "0x400060E")]
		InvalidTexture = 24,
		[Token(Token = "0x400060F")]
		UnableToLoadFile = 25,
		[Token(Token = "0x4000610")]
		KeyboardAlreadyInUse = 26,
		[Token(Token = "0x4000611")]
		NoNeighbor = 27,
		[Token(Token = "0x4000612")]
		TooManyMaskPrimitives = 29,
		[Token(Token = "0x4000613")]
		BadMaskPrimitive = 30,
		[Token(Token = "0x4000614")]
		TextureAlreadyLocked = 31,
		[Token(Token = "0x4000615")]
		TextureLockCapacityReached = 32,
		[Token(Token = "0x4000616")]
		TextureNotLocked = 33
	}
	[Token(Token = "0x20000C7")]
	public enum EVRApplicationType
	{
		[Token(Token = "0x4000618")]
		VRApplication_Other,
		[Token(Token = "0x4000619")]
		VRApplication_Scene,
		[Token(Token = "0x400061A")]
		VRApplication_Overlay,
		[Token(Token = "0x400061B")]
		VRApplication_Background,
		[Token(Token = "0x400061C")]
		VRApplication_Utility,
		[Token(Token = "0x400061D")]
		VRApplication_VRMonitor,
		[Token(Token = "0x400061E")]
		VRApplication_SteamWatchdog,
		[Token(Token = "0x400061F")]
		VRApplication_Bootstrapper,
		[Token(Token = "0x4000620")]
		VRApplication_Max
	}
	[Token(Token = "0x20000C8")]
	public enum EVRFirmwareError
	{
		[Token(Token = "0x4000622")]
		None,
		[Token(Token = "0x4000623")]
		Success,
		[Token(Token = "0x4000624")]
		Fail
	}
	[Token(Token = "0x20000C9")]
	public enum EVRNotificationError
	{
		[Token(Token = "0x4000626")]
		OK = 0,
		[Token(Token = "0x4000627")]
		InvalidNotificationId = 100,
		[Token(Token = "0x4000628")]
		NotificationQueueFull = 101,
		[Token(Token = "0x4000629")]
		InvalidOverlayHandle = 102,
		[Token(Token = "0x400062A")]
		SystemWithUserValueAlreadyExists = 103
	}
	[Token(Token = "0x20000CA")]
	public enum EVRInitError
	{
		[Token(Token = "0x400062C")]
		None = 0,
		[Token(Token = "0x400062D")]
		Unknown = 1,
		[Token(Token = "0x400062E")]
		Init_InstallationNotFound = 100,
		[Token(Token = "0x400062F")]
		Init_InstallationCorrupt = 101,
		[Token(Token = "0x4000630")]
		Init_VRClientDLLNotFound = 102,
		[Token(Token = "0x4000631")]
		Init_FileNotFound = 103,
		[Token(Token = "0x4000632")]
		Init_FactoryNotFound = 104,
		[Token(Token = "0x4000633")]
		Init_InterfaceNotFound = 105,
		[Token(Token = "0x4000634")]
		Init_InvalidInterface = 106,
		[Token(Token = "0x4000635")]
		Init_UserConfigDirectoryInvalid = 107,
		[Token(Token = "0x4000636")]
		Init_HmdNotFound = 108,
		[Token(Token = "0x4000637")]
		Init_NotInitialized = 109,
		[Token(Token = "0x4000638")]
		Init_PathRegistryNotFound = 110,
		[Token(Token = "0x4000639")]
		Init_NoConfigPath = 111,
		[Token(Token = "0x400063A")]
		Init_NoLogPath = 112,
		[Token(Token = "0x400063B")]
		Init_PathRegistryNotWritable = 113,
		[Token(Token = "0x400063C")]
		Init_AppInfoInitFailed = 114,
		[Token(Token = "0x400063D")]
		Init_Retry = 115,
		[Token(Token = "0x400063E")]
		Init_InitCanceledByUser = 116,
		[Token(Token = "0x400063F")]
		Init_AnotherAppLaunching = 117,
		[Token(Token = "0x4000640")]
		Init_SettingsInitFailed = 118,
		[Token(Token = "0x4000641")]
		Init_ShuttingDown = 119,
		[Token(Token = "0x4000642")]
		Init_TooManyObjects = 120,
		[Token(Token = "0x4000643")]
		Init_NoServerForBackgroundApp = 121,
		[Token(Token = "0x4000644")]
		Init_NotSupportedWithCompositor = 122,
		[Token(Token = "0x4000645")]
		Init_NotAvailableToUtilityApps = 123,
		[Token(Token = "0x4000646")]
		Init_Internal = 124,
		[Token(Token = "0x4000647")]
		Init_HmdDriverIdIsNone = 125,
		[Token(Token = "0x4000648")]
		Init_HmdNotFoundPresenceFailed = 126,
		[Token(Token = "0x4000649")]
		Init_VRMonitorNotFound = 127,
		[Token(Token = "0x400064A")]
		Init_VRMonitorStartupFailed = 128,
		[Token(Token = "0x400064B")]
		Init_LowPowerWatchdogNotSupported = 129,
		[Token(Token = "0x400064C")]
		Init_InvalidApplicationType = 130,
		[Token(Token = "0x400064D")]
		Init_NotAvailableToWatchdogApps = 131,
		[Token(Token = "0x400064E")]
		Init_WatchdogDisabledInSettings = 132,
		[Token(Token = "0x400064F")]
		Init_VRDashboardNotFound = 133,
		[Token(Token = "0x4000650")]
		Init_VRDashboardStartupFailed = 134,
		[Token(Token = "0x4000651")]
		Init_VRHomeNotFound = 135,
		[Token(Token = "0x4000652")]
		Init_VRHomeStartupFailed = 136,
		[Token(Token = "0x4000653")]
		Init_RebootingBusy = 137,
		[Token(Token = "0x4000654")]
		Init_FirmwareUpdateBusy = 138,
		[Token(Token = "0x4000655")]
		Init_FirmwareRecoveryBusy = 139,
		[Token(Token = "0x4000656")]
		Init_USBServiceBusy = 140,
		[Token(Token = "0x4000657")]
		Init_VRWebHelperStartupFailed = 141,
		[Token(Token = "0x4000658")]
		Driver_Failed = 200,
		[Token(Token = "0x4000659")]
		Driver_Unknown = 201,
		[Token(Token = "0x400065A")]
		Driver_HmdUnknown = 202,
		[Token(Token = "0x400065B")]
		Driver_NotLoaded = 203,
		[Token(Token = "0x400065C")]
		Driver_RuntimeOutOfDate = 204,
		[Token(Token = "0x400065D")]
		Driver_HmdInUse = 205,
		[Token(Token = "0x400065E")]
		Driver_NotCalibrated = 206,
		[Token(Token = "0x400065F")]
		Driver_CalibrationInvalid = 207,
		[Token(Token = "0x4000660")]
		Driver_HmdDisplayNotFound = 208,
		[Token(Token = "0x4000661")]
		Driver_TrackedDeviceInterfaceUnknown = 209,
		[Token(Token = "0x4000662")]
		Driver_HmdDriverIdOutOfBounds = 211,
		[Token(Token = "0x4000663")]
		Driver_HmdDisplayMirrored = 212,
		[Token(Token = "0x4000664")]
		IPC_ServerInitFailed = 300,
		[Token(Token = "0x4000665")]
		IPC_ConnectFailed = 301,
		[Token(Token = "0x4000666")]
		IPC_SharedStateInitFailed = 302,
		[Token(Token = "0x4000667")]
		IPC_CompositorInitFailed = 303,
		[Token(Token = "0x4000668")]
		IPC_MutexInitFailed = 304,
		[Token(Token = "0x4000669")]
		IPC_Failed = 305,
		[Token(Token = "0x400066A")]
		IPC_CompositorConnectFailed = 306,
		[Token(Token = "0x400066B")]
		IPC_CompositorInvalidConnectResponse = 307,
		[Token(Token = "0x400066C")]
		IPC_ConnectFailedAfterMultipleAttempts = 308,
		[Token(Token = "0x400066D")]
		Compositor_Failed = 400,
		[Token(Token = "0x400066E")]
		Compositor_D3D11HardwareRequired = 401,
		[Token(Token = "0x400066F")]
		Compositor_FirmwareRequiresUpdate = 402,
		[Token(Token = "0x4000670")]
		Compositor_OverlayInitFailed = 403,
		[Token(Token = "0x4000671")]
		Compositor_ScreenshotsInitFailed = 404,
		[Token(Token = "0x4000672")]
		Compositor_UnableToCreateDevice = 405,
		[Token(Token = "0x4000673")]
		VendorSpecific_UnableToConnectToOculusRuntime = 1000,
		[Token(Token = "0x4000674")]
		VendorSpecific_WindowsNotInDevMode = 1001,
		[Token(Token = "0x4000675")]
		VendorSpecific_HmdFound_CantOpenDevice = 1101,
		[Token(Token = "0x4000676")]
		VendorSpecific_HmdFound_UnableToRequestConfigStart = 1102,
		[Token(Token = "0x4000677")]
		VendorSpecific_HmdFound_NoStoredConfig = 1103,
		[Token(Token = "0x4000678")]
		VendorSpecific_HmdFound_ConfigTooBig = 1104,
		[Token(Token = "0x4000679")]
		VendorSpecific_HmdFound_ConfigTooSmall = 1105,
		[Token(Token = "0x400067A")]
		VendorSpecific_HmdFound_UnableToInitZLib = 1106,
		[Token(Token = "0x400067B")]
		VendorSpecific_HmdFound_CantReadFirmwareVersion = 1107,
		[Token(Token = "0x400067C")]
		VendorSpecific_HmdFound_UnableToSendUserDataStart = 1108,
		[Token(Token = "0x400067D")]
		VendorSpecific_HmdFound_UnableToGetUserDataStart = 1109,
		[Token(Token = "0x400067E")]
		VendorSpecific_HmdFound_UnableToGetUserDataNext = 1110,
		[Token(Token = "0x400067F")]
		VendorSpecific_HmdFound_UserDataAddressRange = 1111,
		[Token(Token = "0x4000680")]
		VendorSpecific_HmdFound_UserDataError = 1112,
		[Token(Token = "0x4000681")]
		VendorSpecific_HmdFound_ConfigFailedSanityCheck = 1113,
		[Token(Token = "0x4000682")]
		Steam_SteamInstallationNotFound = 2000
	}
	[Token(Token = "0x20000CB")]
	public enum EVRScreenshotType
	{
		[Token(Token = "0x4000684")]
		None,
		[Token(Token = "0x4000685")]
		Mono,
		[Token(Token = "0x4000686")]
		Stereo,
		[Token(Token = "0x4000687")]
		Cubemap,
		[Token(Token = "0x4000688")]
		MonoPanorama,
		[Token(Token = "0x4000689")]
		StereoPanorama
	}
	[Token(Token = "0x20000CC")]
	public enum EVRScreenshotPropertyFilenames
	{
		[Token(Token = "0x400068B")]
		Preview,
		[Token(Token = "0x400068C")]
		VR
	}
	[Token(Token = "0x20000CD")]
	public enum EVRTrackedCameraError
	{
		[Token(Token = "0x400068E")]
		None = 0,
		[Token(Token = "0x400068F")]
		OperationFailed = 100,
		[Token(Token = "0x4000690")]
		InvalidHandle = 101,
		[Token(Token = "0x4000691")]
		InvalidFrameHeaderVersion = 102,
		[Token(Token = "0x4000692")]
		OutOfHandles = 103,
		[Token(Token = "0x4000693")]
		IPCFailure = 104,
		[Token(Token = "0x4000694")]
		NotSupportedForThisDevice = 105,
		[Token(Token = "0x4000695")]
		SharedMemoryFailure = 106,
		[Token(Token = "0x4000696")]
		FrameBufferingFailure = 107,
		[Token(Token = "0x4000697")]
		StreamSetupFailure = 108,
		[Token(Token = "0x4000698")]
		InvalidGLTextureId = 109,
		[Token(Token = "0x4000699")]
		InvalidSharedTextureHandle = 110,
		[Token(Token = "0x400069A")]
		FailedToGetGLTextureId = 111,
		[Token(Token = "0x400069B")]
		SharedTextureFailure = 112,
		[Token(Token = "0x400069C")]
		NoFrameAvailable = 113,
		[Token(Token = "0x400069D")]
		InvalidArgument = 114,
		[Token(Token = "0x400069E")]
		InvalidFrameBufferSize = 115
	}
	[Token(Token = "0x20000CE")]
	public enum EVRTrackedCameraFrameType
	{
		[Token(Token = "0x40006A0")]
		Distorted,
		[Token(Token = "0x40006A1")]
		Undistorted,
		[Token(Token = "0x40006A2")]
		MaximumUndistorted,
		[Token(Token = "0x40006A3")]
		MAX_CAMERA_FRAME_TYPES
	}
	[Token(Token = "0x20000CF")]
	public enum EVRApplicationError
	{
		[Token(Token = "0x40006A5")]
		None = 0,
		[Token(Token = "0x40006A6")]
		AppKeyAlreadyExists = 100,
		[Token(Token = "0x40006A7")]
		NoManifest = 101,
		[Token(Token = "0x40006A8")]
		NoApplication = 102,
		[Token(Token = "0x40006A9")]
		InvalidIndex = 103,
		[Token(Token = "0x40006AA")]
		UnknownApplication = 104,
		[Token(Token = "0x40006AB")]
		IPCFailed = 105,
		[Token(Token = "0x40006AC")]
		ApplicationAlreadyRunning = 106,
		[Token(Token = "0x40006AD")]
		InvalidManifest = 107,
		[Token(Token = "0x40006AE")]
		InvalidApplication = 108,
		[Token(Token = "0x40006AF")]
		LaunchFailed = 109,
		[Token(Token = "0x40006B0")]
		ApplicationAlreadyStarting = 110,
		[Token(Token = "0x40006B1")]
		LaunchInProgress = 111,
		[Token(Token = "0x40006B2")]
		OldApplicationQuitting = 112,
		[Token(Token = "0x40006B3")]
		TransitionAborted = 113,
		[Token(Token = "0x40006B4")]
		IsTemplate = 114,
		[Token(Token = "0x40006B5")]
		SteamVRIsExiting = 115,
		[Token(Token = "0x40006B6")]
		BufferTooSmall = 200,
		[Token(Token = "0x40006B7")]
		PropertyNotSet = 201,
		[Token(Token = "0x40006B8")]
		UnknownProperty = 202,
		[Token(Token = "0x40006B9")]
		InvalidParameter = 203
	}
	[Token(Token = "0x20000D0")]
	public enum EVRApplicationProperty
	{
		[Token(Token = "0x40006BB")]
		Name_String = 0,
		[Token(Token = "0x40006BC")]
		LaunchType_String = 11,
		[Token(Token = "0x40006BD")]
		WorkingDirectory_String = 12,
		[Token(Token = "0x40006BE")]
		BinaryPath_String = 13,
		[Token(Token = "0x40006BF")]
		Arguments_String = 14,
		[Token(Token = "0x40006C0")]
		URL_String = 15,
		[Token(Token = "0x40006C1")]
		Description_String = 50,
		[Token(Token = "0x40006C2")]
		NewsURL_String = 51,
		[Token(Token = "0x40006C3")]
		ImagePath_String = 52,
		[Token(Token = "0x40006C4")]
		Source_String = 53,
		[Token(Token = "0x40006C5")]
		ActionManifestURL_String = 54,
		[Token(Token = "0x40006C6")]
		IsDashboardOverlay_Bool = 60,
		[Token(Token = "0x40006C7")]
		IsTemplate_Bool = 61,
		[Token(Token = "0x40006C8")]
		IsInstanced_Bool = 62,
		[Token(Token = "0x40006C9")]
		IsInternal_Bool = 63,
		[Token(Token = "0x40006CA")]
		WantsCompositorPauseInStandby_Bool = 64,
		[Token(Token = "0x40006CB")]
		LastLaunchTime_Uint64 = 70
	}
	[Token(Token = "0x20000D1")]
	public enum EVRApplicationTransitionState
	{
		[Token(Token = "0x40006CD")]
		VRApplicationTransition_None = 0,
		[Token(Token = "0x40006CE")]
		VRApplicationTransition_OldAppQuitSent = 10,
		[Token(Token = "0x40006CF")]
		VRApplicationTransition_WaitingForExternalLaunch = 11,
		[Token(Token = "0x40006D0")]
		VRApplicationTransition_NewAppLaunched = 20
	}
	[Token(Token = "0x20000D2")]
	public enum ChaperoneCalibrationState
	{
		[Token(Token = "0x40006D2")]
		OK = 1,
		[Token(Token = "0x40006D3")]
		Warning = 100,
		[Token(Token = "0x40006D4")]
		Warning_BaseStationMayHaveMoved = 101,
		[Token(Token = "0x40006D5")]
		Warning_BaseStationRemoved = 102,
		[Token(Token = "0x40006D6")]
		Warning_SeatedBoundsInvalid = 103,
		[Token(Token = "0x40006D7")]
		Error = 200,
		[Token(Token = "0x40006D8")]
		Error_BaseStationUninitialized = 201,
		[Token(Token = "0x40006D9")]
		Error_BaseStationConflict = 202,
		[Token(Token = "0x40006DA")]
		Error_PlayAreaInvalid = 203,
		[Token(Token = "0x40006DB")]
		Error_CollisionBoundsInvalid = 204
	}
	[Token(Token = "0x20000D3")]
	public enum EChaperoneConfigFile
	{
		[Token(Token = "0x40006DD")]
		Live = 1,
		[Token(Token = "0x40006DE")]
		Temp
	}
	[Token(Token = "0x20000D4")]
	public enum EChaperoneImportFlags
	{
		[Token(Token = "0x40006E0")]
		EChaperoneImport_BoundsOnly = 1
	}
	[Token(Token = "0x20000D5")]
	public enum EVRCompositorError
	{
		[Token(Token = "0x40006E2")]
		None = 0,
		[Token(Token = "0x40006E3")]
		RequestFailed = 1,
		[Token(Token = "0x40006E4")]
		IncompatibleVersion = 100,
		[Token(Token = "0x40006E5")]
		DoNotHaveFocus = 101,
		[Token(Token = "0x40006E6")]
		InvalidTexture = 102,
		[Token(Token = "0x40006E7")]
		IsNotSceneApplication = 103,
		[Token(Token = "0x40006E8")]
		TextureIsOnWrongDevice = 104,
		[Token(Token = "0x40006E9")]
		TextureUsesUnsupportedFormat = 105,
		[Token(Token = "0x40006EA")]
		SharedTexturesNotSupported = 106,
		[Token(Token = "0x40006EB")]
		IndexOutOfRange = 107,
		[Token(Token = "0x40006EC")]
		AlreadySubmitted = 108,
		[Token(Token = "0x40006ED")]
		InvalidBounds = 109
	}
	[Token(Token = "0x20000D6")]
	public enum EVRCompositorTimingMode
	{
		[Token(Token = "0x40006EF")]
		Implicit,
		[Token(Token = "0x40006F0")]
		Explicit_RuntimePerformsPostPresentHandoff,
		[Token(Token = "0x40006F1")]
		Explicit_ApplicationPerformsPostPresentHandoff
	}
	[Token(Token = "0x20000D7")]
	public enum VROverlayInputMethod
	{
		[Token(Token = "0x40006F3")]
		None,
		[Token(Token = "0x40006F4")]
		Mouse,
		[Token(Token = "0x40006F5")]
		DualAnalog
	}
	[Token(Token = "0x20000D8")]
	public enum VROverlayTransformType
	{
		[Token(Token = "0x40006F7")]
		VROverlayTransform_Absolute,
		[Token(Token = "0x40006F8")]
		VROverlayTransform_TrackedDeviceRelative,
		[Token(Token = "0x40006F9")]
		VROverlayTransform_SystemOverlay,
		[Token(Token = "0x40006FA")]
		VROverlayTransform_TrackedComponent
	}
	[Token(Token = "0x20000D9")]
	public enum VROverlayFlags
	{
		[Token(Token = "0x40006FC")]
		None,
		[Token(Token = "0x40006FD")]
		Curved,
		[Token(Token = "0x40006FE")]
		RGSS4X,
		[Token(Token = "0x40006FF")]
		NoDashboardTab,
		[Token(Token = "0x4000700")]
		AcceptsGamepadEvents,
		[Token(Token = "0x4000701")]
		ShowGamepadFocus,
		[Token(Token = "0x4000702")]
		SendVRScrollEvents,
		[Token(Token = "0x4000703")]
		SendVRTouchpadEvents,
		[Token(Token = "0x4000704")]
		ShowTouchPadScrollWheel,
		[Token(Token = "0x4000705")]
		TransferOwnershipToInternalProcess,
		[Token(Token = "0x4000706")]
		SideBySide_Parallel,
		[Token(Token = "0x4000707")]
		SideBySide_Crossed,
		[Token(Token = "0x4000708")]
		Panorama,
		[Token(Token = "0x4000709")]
		StereoPanorama,
		[Token(Token = "0x400070A")]
		SortWithNonSceneOverlays,
		[Token(Token = "0x400070B")]
		VisibleInDashboard
	}
	[Token(Token = "0x20000DA")]
	public enum VRMessageOverlayResponse
	{
		[Token(Token = "0x400070D")]
		ButtonPress_0,
		[Token(Token = "0x400070E")]
		ButtonPress_1,
		[Token(Token = "0x400070F")]
		ButtonPress_2,
		[Token(Token = "0x4000710")]
		ButtonPress_3,
		[Token(Token = "0x4000711")]
		CouldntFindSystemOverlay,
		[Token(Token = "0x4000712")]
		CouldntFindOrCreateClientOverlay,
		[Token(Token = "0x4000713")]
		ApplicationQuit
	}
	[Token(Token = "0x20000DB")]
	public enum EGamepadTextInputMode
	{
		[Token(Token = "0x4000715")]
		k_EGamepadTextInputModeNormal,
		[Token(Token = "0x4000716")]
		k_EGamepadTextInputModePassword,
		[Token(Token = "0x4000717")]
		k_EGamepadTextInputModeSubmit
	}
	[Token(Token = "0x20000DC")]
	public enum EGamepadTextInputLineMode
	{
		[Token(Token = "0x4000719")]
		k_EGamepadTextInputLineModeSingleLine,
		[Token(Token = "0x400071A")]
		k_EGamepadTextInputLineModeMultipleLines
	}
	[Token(Token = "0x20000DD")]
	public enum EOverlayDirection
	{
		[Token(Token = "0x400071C")]
		Up,
		[Token(Token = "0x400071D")]
		Down,
		[Token(Token = "0x400071E")]
		Left,
		[Token(Token = "0x400071F")]
		Right,
		[Token(Token = "0x4000720")]
		Count
	}
	[Token(Token = "0x20000DE")]
	public enum EVROverlayIntersectionMaskPrimitiveType
	{
		[Token(Token = "0x4000722")]
		OverlayIntersectionPrimitiveType_Rectangle,
		[Token(Token = "0x4000723")]
		OverlayIntersectionPrimitiveType_Circle
	}
	[Token(Token = "0x20000DF")]
	public enum EVRRenderModelError
	{
		[Token(Token = "0x4000725")]
		None = 0,
		[Token(Token = "0x4000726")]
		Loading = 100,
		[Token(Token = "0x4000727")]
		NotSupported = 200,
		[Token(Token = "0x4000728")]
		InvalidArg = 300,
		[Token(Token = "0x4000729")]
		InvalidModel = 301,
		[Token(Token = "0x400072A")]
		NoShapes = 302,
		[Token(Token = "0x400072B")]
		MultipleShapes = 303,
		[Token(Token = "0x400072C")]
		TooManyVertices = 304,
		[Token(Token = "0x400072D")]
		MultipleTextures = 305,
		[Token(Token = "0x400072E")]
		BufferTooSmall = 306,
		[Token(Token = "0x400072F")]
		NotEnoughNormals = 307,
		[Token(Token = "0x4000730")]
		NotEnoughTexCoords = 308,
		[Token(Token = "0x4000731")]
		InvalidTexture = 400
	}
	[Token(Token = "0x20000E0")]
	public enum EVRComponentProperty
	{
		[Token(Token = "0x4000733")]
		IsStatic = 1,
		[Token(Token = "0x4000734")]
		IsVisible = 2,
		[Token(Token = "0x4000735")]
		IsTouched = 4,
		[Token(Token = "0x4000736")]
		IsPressed = 8,
		[Token(Token = "0x4000737")]
		IsScrolled = 0x10
	}
	[Token(Token = "0x20000E1")]
	public enum EVRNotificationType
	{
		[Token(Token = "0x4000739")]
		Transient,
		[Token(Token = "0x400073A")]
		Persistent,
		[Token(Token = "0x400073B")]
		Transient_SystemWithUserValue
	}
	[Token(Token = "0x20000E2")]
	public enum EVRNotificationStyle
	{
		[Token(Token = "0x400073D")]
		None = 0,
		[Token(Token = "0x400073E")]
		Application = 100,
		[Token(Token = "0x400073F")]
		Contact_Disabled = 200,
		[Token(Token = "0x4000740")]
		Contact_Enabled = 201,
		[Token(Token = "0x4000741")]
		Contact_Active = 202
	}
	[Token(Token = "0x20000E3")]
	public enum EVRSettingsError
	{
		[Token(Token = "0x4000743")]
		None,
		[Token(Token = "0x4000744")]
		IPCFailed,
		[Token(Token = "0x4000745")]
		WriteFailed,
		[Token(Token = "0x4000746")]
		ReadFailed,
		[Token(Token = "0x4000747")]
		JsonParseFailed,
		[Token(Token = "0x4000748")]
		UnsetSettingHasNoDefault
	}
	[Token(Token = "0x20000E4")]
	public enum EVRScreenshotError
	{
		[Token(Token = "0x400074A")]
		None = 0,
		[Token(Token = "0x400074B")]
		RequestFailed = 1,
		[Token(Token = "0x400074C")]
		IncompatibleVersion = 100,
		[Token(Token = "0x400074D")]
		NotFound = 101,
		[Token(Token = "0x400074E")]
		BufferTooSmall = 102,
		[Token(Token = "0x400074F")]
		ScreenshotAlreadyInProgress = 108
	}
	[StructLayout(2)]
	[Token(Token = "0x20000E5")]
	public struct VREvent_Data_t
	{
		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Reserved_t reserved;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Controller_t controller;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Mouse_t mouse;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Scroll_t scroll;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Process_t process;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Notification_t notification;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Overlay_t overlay;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Status_t status;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Ipd_t ipd;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Chaperone_t chaperone;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_PerformanceTest_t performanceTest;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_TouchPadMove_t touchPadMove;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_SeatedZeroPoseReset_t seatedZeroPoseReset;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Screenshot_t screenshot;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ScreenshotProgress_t screenshotProgress;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ApplicationLaunch_t applicationLaunch;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_EditingCameraSurface_t cameraSurface;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_MessageOverlay_t messageOverlay;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Property_t property;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_DualAnalog_t dualAnalog;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_HapticVibration_t hapticVibration;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Keyboard_t keyboard;
	}
	[StructLayout(2)]
	[Token(Token = "0x20000E6")]
	public struct VROverlayIntersectionMaskPrimitive_Data_t
	{
		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskRectangle_t m_Rectangle;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskCircle_t m_Circle;
	}
	[Token(Token = "0x20000E7")]
	public struct HmdMatrix34_t
	{
		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;
	}
	[Token(Token = "0x20000E8")]
	public struct HmdMatrix44_t
	{
		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m12;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m13;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m14;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m15;
	}
	[Token(Token = "0x20000E9")]
	public struct HmdVector3_t
	{
		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;
	}
	[Token(Token = "0x20000EA")]
	public struct HmdVector4_t
	{
		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float v3;
	}
	[Token(Token = "0x20000EB")]
	public struct HmdVector3d_t
	{
		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double v0;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double v1;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double v2;
	}
	[Token(Token = "0x20000EC")]
	public struct HmdVector2_t
	{
		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;
	}
	[Token(Token = "0x20000ED")]
	public struct HmdQuaternion_t
	{
		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double w;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double x;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double y;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double z;
	}
	[Token(Token = "0x20000EE")]
	public struct HmdColor_t
	{
		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float g;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;
	}
	[Token(Token = "0x20000EF")]
	public struct HmdQuad_t
	{
		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vCorners0;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vCorners1;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector3_t vCorners2;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HmdVector3_t vCorners3;
	}
	[Token(Token = "0x20000F0")]
	public struct HmdRect2_t
	{
		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector2_t vTopLeft;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdVector2_t vBottomRight;
	}
	[Token(Token = "0x20000F1")]
	public struct DistortionCoordinates_t
	{
		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rfRed0;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float rfRed1;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float rfGreen0;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rfGreen1;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rfBlue0;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rfBlue1;
	}
	[Token(Token = "0x20000F2")]
	public struct Texture_t
	{
		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETextureType eType;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public EColorSpace eColorSpace;
	}
	[Token(Token = "0x20000F3")]
	public struct TrackedDevicePose_t
	{
		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdVector3_t vVelocity;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public HmdVector3_t vAngularVelocity;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ETrackingResult eTrackingResult;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bPoseIsValid;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool bDeviceIsConnected;
	}
	[Token(Token = "0x20000F4")]
	public struct VRTextureBounds_t
	{
		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float uMin;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float vMin;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float uMax;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float vMax;
	}
	[Token(Token = "0x20000F5")]
	public struct VRTextureWithPose_t
	{
		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;
	}
	[Token(Token = "0x20000F6")]
	public struct VRTextureDepthInfo_t
	{
		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdMatrix44_t mProjection;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HmdVector2_t vRange;
	}
	[Token(Token = "0x20000F7")]
	public struct VRTextureWithDepth_t
	{
		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x20000F8")]
	public struct VRTextureWithPoseAndDepth_t
	{
		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x20000F9")]
	public struct VRVulkanTextureData_t
	{
		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nImage;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pDevice;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pPhysicalDevice;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pInstance;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pQueue;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nQueueFamilyIndex;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nWidth;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nHeight;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nFormat;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nSampleCount;
	}
	[Token(Token = "0x20000FA")]
	public struct D3D12TextureData_t
	{
		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pResource;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pCommandQueue;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNodeMask;
	}
	[Token(Token = "0x20000FB")]
	public struct VREvent_Controller_t
	{
		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint button;
	}
	[Token(Token = "0x20000FC")]
	public struct VREvent_Mouse_t
	{
		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint button;
	}
	[Token(Token = "0x20000FD")]
	public struct VREvent_Scroll_t
	{
		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float xdelta;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ydelta;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint repeatCount;
	}
	[Token(Token = "0x20000FE")]
	public struct VREvent_TouchPadMove_t
	{
		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bFingerDown;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float flSecondsFingerDown;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fValueXFirst;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fValueYFirst;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fValueXRaw;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fValueYRaw;
	}
	[Token(Token = "0x20000FF")]
	public struct VREvent_Notification_t
	{
		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulUserValue;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint notificationId;
	}
	[Token(Token = "0x2000100")]
	public struct VREvent_Process_t
	{
		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint oldPid;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool bForced;
	}
	[Token(Token = "0x2000101")]
	public struct VREvent_Overlay_t
	{
		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;
	}
	[Token(Token = "0x2000102")]
	public struct VREvent_Status_t
	{
		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint statusState;
	}
	[Token(Token = "0x2000103")]
	public struct VREvent_Keyboard_t
	{
		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte cNewInput0;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte cNewInput1;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte cNewInput2;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte cNewInput3;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte cNewInput4;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte cNewInput5;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte cNewInput6;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public byte cNewInput7;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong uUserValue;
	}
	[Token(Token = "0x2000104")]
	public struct VREvent_Ipd_t
	{
		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ipdMeters;
	}
	[Token(Token = "0x2000105")]
	public struct VREvent_Chaperone_t
	{
		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nPreviousUniverse;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong m_nCurrentUniverse;
	}
	[Token(Token = "0x2000106")]
	public struct VREvent_Reserved_t
	{
		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong reserved0;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong reserved1;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong reserved2;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong reserved3;
	}
	[Token(Token = "0x2000107")]
	public struct VREvent_PerformanceTest_t
	{
		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nFidelityLevel;
	}
	[Token(Token = "0x2000108")]
	public struct VREvent_SeatedZeroPoseReset_t
	{
		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bResetBySystemMenu;
	}
	[Token(Token = "0x2000109")]
	public struct VREvent_Screenshot_t
	{
		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint handle;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint type;
	}
	[Token(Token = "0x200010A")]
	public struct VREvent_ScreenshotProgress_t
	{
		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float progress;
	}
	[Token(Token = "0x200010B")]
	public struct VREvent_ApplicationLaunch_t
	{
		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unArgsHandle;
	}
	[Token(Token = "0x200010C")]
	public struct VREvent_EditingCameraSurface_t
	{
		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nVisualMode;
	}
	[Token(Token = "0x200010D")]
	public struct VREvent_MessageOverlay_t
	{
		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unVRMessageOverlayResponse;
	}
	[Token(Token = "0x200010E")]
	public struct VREvent_Property_t
	{
		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong container;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETrackedDeviceProperty prop;
	}
	[Token(Token = "0x200010F")]
	public struct VREvent_DualAnalog_t
	{
		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float transformedX;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float transformedY;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EDualAnalogWhich which;
	}
	[Token(Token = "0x2000110")]
	public struct VREvent_HapticVibration_t
	{
		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong containerHandle;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong componentHandle;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fDurationSeconds;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fFrequency;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fAmplitude;
	}
	[Token(Token = "0x2000111")]
	public struct VREvent_t
	{
		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VREvent_Data_t data;
	}
	[Token(Token = "0x2000112")]
	public struct VREvent_t_Packed
	{
		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public VREvent_Data_t data;

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xCFF420", Offset = "0xCFF420", VA = "0xCFF420")]
		public VREvent_t_Packed(VREvent_t unpacked)
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0xCFF470", Offset = "0xCFF470", VA = "0xCFF470")]
		public void Unpack(ref VREvent_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000113")]
	public struct HiddenAreaMesh_t
	{
		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pVertexData;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unTriangleCount;
	}
	[Token(Token = "0x2000114")]
	public struct VRControllerAxis_t
	{
		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;
	}
	[Token(Token = "0x2000115")]
	public struct VRControllerState_t
	{
		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong ulButtonPressed;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong ulButtonTouched;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VRControllerAxis_t rAxis4;
	}
	[Token(Token = "0x2000116")]
	public struct VRControllerState_t_Packed
	{
		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VRControllerAxis_t rAxis4;

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xCFF3EC", Offset = "0xCFF3EC", VA = "0xCFF3EC")]
		public VRControllerState_t_Packed(VRControllerState_t unpacked)
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xCFF418", Offset = "0xCFF418", VA = "0xCFF418")]
		public void Unpack(ref VRControllerState_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000117")]
	public struct Compositor_OverlaySettings
	{
		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint size;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool curved;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool antialias;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float scale;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float distance;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float alpha;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float uOffset;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float vOffset;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float uScale;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float vScale;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float gridDivs;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float gridWidth;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float gridScale;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix44_t transform;
	}
	[Token(Token = "0x2000118")]
	public struct CameraVideoStreamFrameHeader_t
	{
		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVRTrackedCameraFrameType eFrameType;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint nWidth;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nHeight;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint nBytesPerPixel;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint nFrameSequence;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TrackedDevicePose_t standingTrackedDevicePose;
	}
	[Token(Token = "0x2000119")]
	public struct DriverDirectMode_FrameTiming
	{
		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nReprojectionFlags;
	}
	[Token(Token = "0x200011A")]
	public struct AppOverrideKeys_t
	{
		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pchKey;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr pchValue;
	}
	[Token(Token = "0x200011B")]
	public struct Compositor_FrameTiming
	{
		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nFrameIndex;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nReprojectionFlags;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double m_flSystemTimeInSeconds;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_flPreSubmitGpuMs;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_flPostSubmitGpuMs;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_flTotalRenderGpuMs;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_flCompositorRenderGpuMs;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_flCompositorRenderCpuMs;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_flCompositorIdleCpuMs;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_flClientFrameIntervalMs;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_flPresentCallCpuMs;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_flWaitForPresentCpuMs;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_flSubmitFrameMs;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_flWaitGetPosesCalledMs;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_flNewPosesReadyMs;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_flNewFrameReadyMs;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_flCompositorUpdateStartMs;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_flCompositorUpdateEndMs;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_flCompositorRenderStartMs;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TrackedDevicePose_t m_HmdPose;
	}
	[Token(Token = "0x200011C")]
	public struct Compositor_CumulativeStats
	{
		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nPid;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumReprojectedFrames;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumFramePresentsOnStartup;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nNumDroppedFramesOnStartup;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint m_nNumReprojectedFramesOnStartup;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint m_nNumLoading;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint m_nNumFramePresentsLoading;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public uint m_nNumDroppedFramesLoading;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nNumReprojectedFramesLoading;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nNumTimedOut;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nNumFramePresentsTimedOut;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nNumDroppedFramesTimedOut;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nNumReprojectedFramesTimedOut;
	}
	[Token(Token = "0x200011D")]
	public struct VROverlayIntersectionParams_t
	{
		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vSource;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vDirection;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ETrackingUniverseOrigin eOrigin;
	}
	[Token(Token = "0x200011E")]
	public struct VROverlayIntersectionResults_t
	{
		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPoint;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector2_t vUVs;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fDistance;
	}
	[Token(Token = "0x200011F")]
	public struct IntersectionMaskRectangle_t
	{
		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flTopLeftX;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flTopLeftY;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flWidth;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_flHeight;
	}
	[Token(Token = "0x2000120")]
	public struct IntersectionMaskCircle_t
	{
		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flCenterX;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flCenterY;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flRadius;
	}
	[Token(Token = "0x2000121")]
	public struct VROverlayIntersectionMaskPrimitive_t
	{
		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public VROverlayIntersectionMaskPrimitive_Data_t m_Primitive;
	}
	[Token(Token = "0x2000122")]
	public struct RenderModel_ComponentState_t
	{
		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mTrackingToComponentRenderModel;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix34_t mTrackingToComponentLocal;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public uint uProperties;
	}
	[Token(Token = "0x2000123")]
	public struct RenderModel_Vertex_t
	{
		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPosition;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rfTextureCoord0;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rfTextureCoord1;
	}
	[Token(Token = "0x2000124")]
	public struct RenderModel_TextureMap_t
	{
		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;
	}
	[Token(Token = "0x2000125")]
	public struct RenderModel_TextureMap_t_Packed
	{
		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xCFF370", Offset = "0xCFF370", VA = "0xCFF370")]
		public RenderModel_TextureMap_t_Packed(RenderModel_TextureMap_t unpacked)
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xCFF384", Offset = "0xCFF384", VA = "0xCFF384")]
		public void Unpack(ref RenderModel_TextureMap_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000126")]
	public struct RenderModel_t
	{
		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr rIndexData;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint unTriangleCount;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int diffuseTextureId;
	}
	[Token(Token = "0x2000127")]
	public struct RenderModel_t_Packed
	{
		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr rIndexData;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint unTriangleCount;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int diffuseTextureId;

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xCFF3A0", Offset = "0xCFF3A0", VA = "0xCFF3A0")]
		public RenderModel_t_Packed(RenderModel_t unpacked)
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xCFF3C0", Offset = "0xCFF3C0", VA = "0xCFF3C0")]
		public void Unpack(ref RenderModel_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000128")]
	public struct RenderModel_ControllerMode_State_t
	{
		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bScrollWheelVisible;
	}
	[Token(Token = "0x2000129")]
	public struct NotificationBitmap_t
	{
		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pImageData;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_nWidth;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_nHeight;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_nBytesPerPixel;
	}
	[Token(Token = "0x200012A")]
	public struct COpenVRContext
	{
		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRSystem;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pVRChaperone;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pVRChaperoneSetup;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pVRCompositor;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pVROverlay;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IntPtr m_pVRResources;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IntPtr m_pVRRenderModels;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntPtr m_pVRExtendedDisplay;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IntPtr m_pVRSettings;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IntPtr m_pVRApplications;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IntPtr m_pVRTrackedCamera;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IntPtr m_pVRScreenshots;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public IntPtr m_pVRDriverManager;
	}
	[Token(Token = "0x200012B")]
	public class OpenVR
	{
		[Token(Token = "0x20003BA")]
		private class COpenVRContext
		{
			[Token(Token = "0x4000D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private CVRSystem m_pVRSystem;

			[Token(Token = "0x4000D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private CVRChaperone m_pVRChaperone;

			[Token(Token = "0x4000D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private CVRChaperoneSetup m_pVRChaperoneSetup;

			[Token(Token = "0x4000D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRCompositor m_pVRCompositor;

			[Token(Token = "0x4000D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CVROverlay m_pVROverlay;

			[Token(Token = "0x4000D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CVRRenderModels m_pVRRenderModels;

			[Token(Token = "0x4000D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CVRExtendedDisplay m_pVRExtendedDisplay;

			[Token(Token = "0x4000D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CVRSettings m_pVRSettings;

			[Token(Token = "0x4000D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private CVRApplications m_pVRApplications;

			[Token(Token = "0x4000D3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private CVRScreenshots m_pVRScreenshots;

			[Token(Token = "0x4000D3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private CVRTrackedCamera m_pVRTrackedCamera;

			[Token(Token = "0x60014C2")]
			[Address(RVA = "0x13C8130", Offset = "0x13C8130", VA = "0x13C8130")]
			public COpenVRContext()
			{
			}

			[Token(Token = "0x60014C3")]
			[Address(RVA = "0x13C8F94", Offset = "0x13C8F94", VA = "0x13C8F94")]
			public void Clear()
			{
			}

			[Token(Token = "0x60014C4")]
			[Address(RVA = "0x13C90C0", Offset = "0x13C90C0", VA = "0x13C90C0")]
			private void CheckClear()
			{
			}

			[Token(Token = "0x60014C5")]
			[Address(RVA = "0x13C81C0", Offset = "0x13C81C0", VA = "0x13C81C0")]
			public CVRSystem VRSystem()
			{
				return null;
			}

			[Token(Token = "0x60014C6")]
			[Address(RVA = "0x13C82EC", Offset = "0x13C82EC", VA = "0x13C82EC")]
			public CVRChaperone VRChaperone()
			{
				return null;
			}

			[Token(Token = "0x60014C7")]
			[Address(RVA = "0x13C8418", Offset = "0x13C8418", VA = "0x13C8418")]
			public CVRChaperoneSetup VRChaperoneSetup()
			{
				return null;
			}

			[Token(Token = "0x60014C8")]
			[Address(RVA = "0x13C8544", Offset = "0x13C8544", VA = "0x13C8544")]
			public CVRCompositor VRCompositor()
			{
				return null;
			}

			[Token(Token = "0x60014C9")]
			[Address(RVA = "0x13C8670", Offset = "0x13C8670", VA = "0x13C8670")]
			public CVROverlay VROverlay()
			{
				return null;
			}

			[Token(Token = "0x60014CA")]
			[Address(RVA = "0x13C879C", Offset = "0x13C879C", VA = "0x13C879C")]
			public CVRRenderModels VRRenderModels()
			{
				return null;
			}

			[Token(Token = "0x60014CB")]
			[Address(RVA = "0x13C88C8", Offset = "0x13C88C8", VA = "0x13C88C8")]
			public CVRExtendedDisplay VRExtendedDisplay()
			{
				return null;
			}

			[Token(Token = "0x60014CC")]
			[Address(RVA = "0x13C89F4", Offset = "0x13C89F4", VA = "0x13C89F4")]
			public CVRSettings VRSettings()
			{
				return null;
			}

			[Token(Token = "0x60014CD")]
			[Address(RVA = "0x13C8B20", Offset = "0x13C8B20", VA = "0x13C8B20")]
			public CVRApplications VRApplications()
			{
				return null;
			}

			[Token(Token = "0x60014CE")]
			[Address(RVA = "0x13C8C4C", Offset = "0x13C8C4C", VA = "0x13C8C4C")]
			public CVRScreenshots VRScreenshots()
			{
				return null;
			}

			[Token(Token = "0x60014CF")]
			[Address(RVA = "0x13C8D78", Offset = "0x13C8D78", VA = "0x13C8D78")]
			public CVRTrackedCamera VRTrackedCamera()
			{
				return null;
			}
		}

		[Token(Token = "0x4000895")]
		public const uint k_nDriverNone = uint.MaxValue;

		[Token(Token = "0x4000896")]
		public const uint k_unMaxDriverDebugResponseSize = 32768u;

		[Token(Token = "0x4000897")]
		public const uint k_unTrackedDeviceIndex_Hmd = 0u;

		[Token(Token = "0x4000898")]
		public const uint k_unMaxTrackedDeviceCount = 64u;

		[Token(Token = "0x4000899")]
		public const uint k_unTrackedDeviceIndexOther = 4294967294u;

		[Token(Token = "0x400089A")]
		public const uint k_unTrackedDeviceIndexInvalid = uint.MaxValue;

		[Token(Token = "0x400089B")]
		public const ulong k_ulInvalidPropertyContainer = 0uL;

		[Token(Token = "0x400089C")]
		public const uint k_unInvalidPropertyTag = 0u;

		[Token(Token = "0x400089D")]
		public const ulong k_ulInvalidDriverHandle = 0uL;

		[Token(Token = "0x400089E")]
		public const uint k_unFloatPropertyTag = 1u;

		[Token(Token = "0x400089F")]
		public const uint k_unInt32PropertyTag = 2u;

		[Token(Token = "0x40008A0")]
		public const uint k_unUint64PropertyTag = 3u;

		[Token(Token = "0x40008A1")]
		public const uint k_unBoolPropertyTag = 4u;

		[Token(Token = "0x40008A2")]
		public const uint k_unStringPropertyTag = 5u;

		[Token(Token = "0x40008A3")]
		public const uint k_unHmdMatrix34PropertyTag = 20u;

		[Token(Token = "0x40008A4")]
		public const uint k_unHmdMatrix44PropertyTag = 21u;

		[Token(Token = "0x40008A5")]
		public const uint k_unHmdVector3PropertyTag = 22u;

		[Token(Token = "0x40008A6")]
		public const uint k_unHmdVector4PropertyTag = 23u;

		[Token(Token = "0x40008A7")]
		public const uint k_unHiddenAreaPropertyTag = 30u;

		[Token(Token = "0x40008A8")]
		public const uint k_unPathHandleInfoTag = 31u;

		[Token(Token = "0x40008A9")]
		public const uint k_unActionPropertyTag = 32u;

		[Token(Token = "0x40008AA")]
		public const uint k_unInputValuePropertyTag = 33u;

		[Token(Token = "0x40008AB")]
		public const uint k_unWildcardPropertyTag = 34u;

		[Token(Token = "0x40008AC")]
		public const uint k_unHapticVibrationPropertyTag = 35u;

		[Token(Token = "0x40008AD")]
		public const uint k_unOpenVRInternalReserved_Start = 1000u;

		[Token(Token = "0x40008AE")]
		public const uint k_unOpenVRInternalReserved_End = 10000u;

		[Token(Token = "0x40008AF")]
		public const uint k_unMaxPropertyStringSize = 32768u;

		[Token(Token = "0x40008B0")]
		public const uint k_unControllerStateAxisCount = 5u;

		[Token(Token = "0x40008B1")]
		public const ulong k_ulOverlayHandleInvalid = 0uL;

		[Token(Token = "0x40008B2")]
		public const uint k_unScreenshotHandleInvalid = 0u;

		[Token(Token = "0x40008B3")]
		public const string IVRSystem_Version = "IVRSystem_019";

		[Token(Token = "0x40008B4")]
		public const string IVRExtendedDisplay_Version = "IVRExtendedDisplay_001";

		[Token(Token = "0x40008B5")]
		public const string IVRTrackedCamera_Version = "IVRTrackedCamera_003";

		[Token(Token = "0x40008B6")]
		public const uint k_unMaxApplicationKeyLength = 128u;

		[Token(Token = "0x40008B7")]
		public const string k_pch_MimeType_HomeApp = "vr/home";

		[Token(Token = "0x40008B8")]
		public const string k_pch_MimeType_GameTheater = "vr/game_theater";

		[Token(Token = "0x40008B9")]
		public const string IVRApplications_Version = "IVRApplications_006";

		[Token(Token = "0x40008BA")]
		public const string IVRChaperone_Version = "IVRChaperone_003";

		[Token(Token = "0x40008BB")]
		public const string IVRChaperoneSetup_Version = "IVRChaperoneSetup_005";

		[Token(Token = "0x40008BC")]
		public const string IVRCompositor_Version = "IVRCompositor_022";

		[Token(Token = "0x40008BD")]
		public const uint k_unVROverlayMaxKeyLength = 128u;

		[Token(Token = "0x40008BE")]
		public const uint k_unVROverlayMaxNameLength = 128u;

		[Token(Token = "0x40008BF")]
		public const uint k_unMaxOverlayCount = 64u;

		[Token(Token = "0x40008C0")]
		public const uint k_unMaxOverlayIntersectionMaskPrimitivesCount = 32u;

		[Token(Token = "0x40008C1")]
		public const string IVROverlay_Version = "IVROverlay_018";

		[Token(Token = "0x40008C2")]
		public const string k_pch_Controller_Component_GDC2015 = "gdc2015";

		[Token(Token = "0x40008C3")]
		public const string k_pch_Controller_Component_Base = "base";

		[Token(Token = "0x40008C4")]
		public const string k_pch_Controller_Component_Tip = "tip";

		[Token(Token = "0x40008C5")]
		public const string k_pch_Controller_Component_HandGrip = "handgrip";

		[Token(Token = "0x40008C6")]
		public const string k_pch_Controller_Component_Status = "status";

		[Token(Token = "0x40008C7")]
		public const string IVRRenderModels_Version = "IVRRenderModels_005";

		[Token(Token = "0x40008C8")]
		public const uint k_unNotificationTextMaxSize = 256u;

		[Token(Token = "0x40008C9")]
		public const string IVRNotifications_Version = "IVRNotifications_002";

		[Token(Token = "0x40008CA")]
		public const uint k_unMaxSettingsKeyLength = 128u;

		[Token(Token = "0x40008CB")]
		public const string IVRSettings_Version = "IVRSettings_002";

		[Token(Token = "0x40008CC")]
		public const string k_pch_SteamVR_Section = "steamvr";

		[Token(Token = "0x40008CD")]
		public const string k_pch_SteamVR_RequireHmd_String = "requireHmd";

		[Token(Token = "0x40008CE")]
		public const string k_pch_SteamVR_ForcedDriverKey_String = "forcedDriver";

		[Token(Token = "0x40008CF")]
		public const string k_pch_SteamVR_ForcedHmdKey_String = "forcedHmd";

		[Token(Token = "0x40008D0")]
		public const string k_pch_SteamVR_DisplayDebug_Bool = "displayDebug";

		[Token(Token = "0x40008D1")]
		public const string k_pch_SteamVR_DebugProcessPipe_String = "debugProcessPipe";

		[Token(Token = "0x40008D2")]
		public const string k_pch_SteamVR_DisplayDebugX_Int32 = "displayDebugX";

		[Token(Token = "0x40008D3")]
		public const string k_pch_SteamVR_DisplayDebugY_Int32 = "displayDebugY";

		[Token(Token = "0x40008D4")]
		public const string k_pch_SteamVR_SendSystemButtonToAllApps_Bool = "sendSystemButtonToAllApps";

		[Token(Token = "0x40008D5")]
		public const string k_pch_SteamVR_LogLevel_Int32 = "loglevel";

		[Token(Token = "0x40008D6")]
		public const string k_pch_SteamVR_IPD_Float = "ipd";

		[Token(Token = "0x40008D7")]
		public const string k_pch_SteamVR_Background_String = "background";

		[Token(Token = "0x40008D8")]
		public const string k_pch_SteamVR_BackgroundUseDomeProjection_Bool = "backgroundUseDomeProjection";

		[Token(Token = "0x40008D9")]
		public const string k_pch_SteamVR_BackgroundCameraHeight_Float = "backgroundCameraHeight";

		[Token(Token = "0x40008DA")]
		public const string k_pch_SteamVR_BackgroundDomeRadius_Float = "backgroundDomeRadius";

		[Token(Token = "0x40008DB")]
		public const string k_pch_SteamVR_GridColor_String = "gridColor";

		[Token(Token = "0x40008DC")]
		public const string k_pch_SteamVR_PlayAreaColor_String = "playAreaColor";

		[Token(Token = "0x40008DD")]
		public const string k_pch_SteamVR_ShowStage_Bool = "showStage";

		[Token(Token = "0x40008DE")]
		public const string k_pch_SteamVR_ActivateMultipleDrivers_Bool = "activateMultipleDrivers";

		[Token(Token = "0x40008DF")]
		public const string k_pch_SteamVR_DirectMode_Bool = "directMode";

		[Token(Token = "0x40008E0")]
		public const string k_pch_SteamVR_DirectModeEdidVid_Int32 = "directModeEdidVid";

		[Token(Token = "0x40008E1")]
		public const string k_pch_SteamVR_DirectModeEdidPid_Int32 = "directModeEdidPid";

		[Token(Token = "0x40008E2")]
		public const string k_pch_SteamVR_UsingSpeakers_Bool = "usingSpeakers";

		[Token(Token = "0x40008E3")]
		public const string k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float = "speakersForwardYawOffsetDegrees";

		[Token(Token = "0x40008E4")]
		public const string k_pch_SteamVR_BaseStationPowerManagement_Bool = "basestationPowerManagement";

		[Token(Token = "0x40008E5")]
		public const string k_pch_SteamVR_NeverKillProcesses_Bool = "neverKillProcesses";

		[Token(Token = "0x40008E6")]
		public const string k_pch_SteamVR_SupersampleScale_Float = "supersampleScale";

		[Token(Token = "0x40008E7")]
		public const string k_pch_SteamVR_AllowAsyncReprojection_Bool = "allowAsyncReprojection";

		[Token(Token = "0x40008E8")]
		public const string k_pch_SteamVR_AllowReprojection_Bool = "allowInterleavedReprojection";

		[Token(Token = "0x40008E9")]
		public const string k_pch_SteamVR_ForceReprojection_Bool = "forceReprojection";

		[Token(Token = "0x40008EA")]
		public const string k_pch_SteamVR_ForceFadeOnBadTracking_Bool = "forceFadeOnBadTracking";

		[Token(Token = "0x40008EB")]
		public const string k_pch_SteamVR_DefaultMirrorView_Int32 = "defaultMirrorView";

		[Token(Token = "0x40008EC")]
		public const string k_pch_SteamVR_ShowMirrorView_Bool = "showMirrorView";

		[Token(Token = "0x40008ED")]
		public const string k_pch_SteamVR_MirrorViewGeometry_String = "mirrorViewGeometry";

		[Token(Token = "0x40008EE")]
		public const string k_pch_SteamVR_StartMonitorFromAppLaunch = "startMonitorFromAppLaunch";

		[Token(Token = "0x40008EF")]
		public const string k_pch_SteamVR_StartCompositorFromAppLaunch_Bool = "startCompositorFromAppLaunch";

		[Token(Token = "0x40008F0")]
		public const string k_pch_SteamVR_StartDashboardFromAppLaunch_Bool = "startDashboardFromAppLaunch";

		[Token(Token = "0x40008F1")]
		public const string k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool = "startOverlayAppsFromDashboard";

		[Token(Token = "0x40008F2")]
		public const string k_pch_SteamVR_EnableHomeApp = "enableHomeApp";

		[Token(Token = "0x40008F3")]
		public const string k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32 = "CycleBackgroundImageTimeSec";

		[Token(Token = "0x40008F4")]
		public const string k_pch_SteamVR_RetailDemo_Bool = "retailDemo";

		[Token(Token = "0x40008F5")]
		public const string k_pch_SteamVR_IpdOffset_Float = "ipdOffset";

		[Token(Token = "0x40008F6")]
		public const string k_pch_SteamVR_AllowSupersampleFiltering_Bool = "allowSupersampleFiltering";

		[Token(Token = "0x40008F7")]
		public const string k_pch_SteamVR_EnableLinuxVulkanAsync_Bool = "enableLinuxVulkanAsync";

		[Token(Token = "0x40008F8")]
		public const string k_pch_SteamVR_AllowDisplayLockedMode_Bool = "allowDisplayLockedMode";

		[Token(Token = "0x40008F9")]
		public const string k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool = "haveStartedTutorialForNativeChaperoneDriver";

		[Token(Token = "0x40008FA")]
		public const string k_pch_SteamVR_ForceWindows32bitVRMonitor = "forceWindows32BitVRMonitor";

		[Token(Token = "0x40008FB")]
		public const string k_pch_SteamVR_DebugInput = "debugInput";

		[Token(Token = "0x40008FC")]
		public const string k_pch_Lighthouse_Section = "driver_lighthouse";

		[Token(Token = "0x40008FD")]
		public const string k_pch_Lighthouse_DisableIMU_Bool = "disableimu";

		[Token(Token = "0x40008FE")]
		public const string k_pch_Lighthouse_DisableIMUExceptHMD_Bool = "disableimuexcepthmd";

		[Token(Token = "0x40008FF")]
		public const string k_pch_Lighthouse_UseDisambiguation_String = "usedisambiguation";

		[Token(Token = "0x4000900")]
		public const string k_pch_Lighthouse_DisambiguationDebug_Int32 = "disambiguationdebug";

		[Token(Token = "0x4000901")]
		public const string k_pch_Lighthouse_PrimaryBasestation_Int32 = "primarybasestation";

		[Token(Token = "0x4000902")]
		public const string k_pch_Lighthouse_DBHistory_Bool = "dbhistory";

		[Token(Token = "0x4000903")]
		public const string k_pch_Lighthouse_EnableBluetooth_Bool = "enableBluetooth";

		[Token(Token = "0x4000904")]
		public const string k_pch_Lighthouse_PowerManagedBaseStations_String = "PowerManagedBaseStations";

		[Token(Token = "0x4000905")]
		public const string k_pch_Null_Section = "driver_null";

		[Token(Token = "0x4000906")]
		public const string k_pch_Null_SerialNumber_String = "serialNumber";

		[Token(Token = "0x4000907")]
		public const string k_pch_Null_ModelNumber_String = "modelNumber";

		[Token(Token = "0x4000908")]
		public const string k_pch_Null_WindowX_Int32 = "windowX";

		[Token(Token = "0x4000909")]
		public const string k_pch_Null_WindowY_Int32 = "windowY";

		[Token(Token = "0x400090A")]
		public const string k_pch_Null_WindowWidth_Int32 = "windowWidth";

		[Token(Token = "0x400090B")]
		public const string k_pch_Null_WindowHeight_Int32 = "windowHeight";

		[Token(Token = "0x400090C")]
		public const string k_pch_Null_RenderWidth_Int32 = "renderWidth";

		[Token(Token = "0x400090D")]
		public const string k_pch_Null_RenderHeight_Int32 = "renderHeight";

		[Token(Token = "0x400090E")]
		public const string k_pch_Null_SecondsFromVsyncToPhotons_Float = "secondsFromVsyncToPhotons";

		[Token(Token = "0x400090F")]
		public const string k_pch_Null_DisplayFrequency_Float = "displayFrequency";

		[Token(Token = "0x4000910")]
		public const string k_pch_UserInterface_Section = "userinterface";

		[Token(Token = "0x4000911")]
		public const string k_pch_UserInterface_StatusAlwaysOnTop_Bool = "StatusAlwaysOnTop";

		[Token(Token = "0x4000912")]
		public const string k_pch_UserInterface_MinimizeToTray_Bool = "MinimizeToTray";

		[Token(Token = "0x4000913")]
		public const string k_pch_UserInterface_Screenshots_Bool = "screenshots";

		[Token(Token = "0x4000914")]
		public const string k_pch_UserInterface_ScreenshotType_Int = "screenshotType";

		[Token(Token = "0x4000915")]
		public const string k_pch_Notifications_Section = "notifications";

		[Token(Token = "0x4000916")]
		public const string k_pch_Notifications_DoNotDisturb_Bool = "DoNotDisturb";

		[Token(Token = "0x4000917")]
		public const string k_pch_Keyboard_Section = "keyboard";

		[Token(Token = "0x4000918")]
		public const string k_pch_Keyboard_TutorialCompletions = "TutorialCompletions";

		[Token(Token = "0x4000919")]
		public const string k_pch_Keyboard_ScaleX = "ScaleX";

		[Token(Token = "0x400091A")]
		public const string k_pch_Keyboard_ScaleY = "ScaleY";

		[Token(Token = "0x400091B")]
		public const string k_pch_Keyboard_OffsetLeftX = "OffsetLeftX";

		[Token(Token = "0x400091C")]
		public const string k_pch_Keyboard_OffsetRightX = "OffsetRightX";

		[Token(Token = "0x400091D")]
		public const string k_pch_Keyboard_OffsetY = "OffsetY";

		[Token(Token = "0x400091E")]
		public const string k_pch_Keyboard_Smoothing = "Smoothing";

		[Token(Token = "0x400091F")]
		public const string k_pch_Perf_Section = "perfcheck";

		[Token(Token = "0x4000920")]
		public const string k_pch_Perf_HeuristicActive_Bool = "heuristicActive";

		[Token(Token = "0x4000921")]
		public const string k_pch_Perf_NotifyInHMD_Bool = "warnInHMD";

		[Token(Token = "0x4000922")]
		public const string k_pch_Perf_NotifyOnlyOnce_Bool = "warnOnlyOnce";

		[Token(Token = "0x4000923")]
		public const string k_pch_Perf_AllowTimingStore_Bool = "allowTimingStore";

		[Token(Token = "0x4000924")]
		public const string k_pch_Perf_SaveTimingsOnExit_Bool = "saveTimingsOnExit";

		[Token(Token = "0x4000925")]
		public const string k_pch_Perf_TestData_Float = "perfTestData";

		[Token(Token = "0x4000926")]
		public const string k_pch_Perf_LinuxGPUProfiling_Bool = "linuxGPUProfiling";

		[Token(Token = "0x4000927")]
		public const string k_pch_CollisionBounds_Section = "collisionBounds";

		[Token(Token = "0x4000928")]
		public const string k_pch_CollisionBounds_Style_Int32 = "CollisionBoundsStyle";

		[Token(Token = "0x4000929")]
		public const string k_pch_CollisionBounds_GroundPerimeterOn_Bool = "CollisionBoundsGroundPerimeterOn";

		[Token(Token = "0x400092A")]
		public const string k_pch_CollisionBounds_CenterMarkerOn_Bool = "CollisionBoundsCenterMarkerOn";

		[Token(Token = "0x400092B")]
		public const string k_pch_CollisionBounds_PlaySpaceOn_Bool = "CollisionBoundsPlaySpaceOn";

		[Token(Token = "0x400092C")]
		public const string k_pch_CollisionBounds_FadeDistance_Float = "CollisionBoundsFadeDistance";

		[Token(Token = "0x400092D")]
		public const string k_pch_CollisionBounds_ColorGammaR_Int32 = "CollisionBoundsColorGammaR";

		[Token(Token = "0x400092E")]
		public const string k_pch_CollisionBounds_ColorGammaG_Int32 = "CollisionBoundsColorGammaG";

		[Token(Token = "0x400092F")]
		public const string k_pch_CollisionBounds_ColorGammaB_Int32 = "CollisionBoundsColorGammaB";

		[Token(Token = "0x4000930")]
		public const string k_pch_CollisionBounds_ColorGammaA_Int32 = "CollisionBoundsColorGammaA";

		[Token(Token = "0x4000931")]
		public const string k_pch_Camera_Section = "camera";

		[Token(Token = "0x4000932")]
		public const string k_pch_Camera_EnableCamera_Bool = "enableCamera";

		[Token(Token = "0x4000933")]
		public const string k_pch_Camera_EnableCameraInDashboard_Bool = "enableCameraInDashboard";

		[Token(Token = "0x4000934")]
		public const string k_pch_Camera_EnableCameraForCollisionBounds_Bool = "enableCameraForCollisionBounds";

		[Token(Token = "0x4000935")]
		public const string k_pch_Camera_EnableCameraForRoomView_Bool = "enableCameraForRoomView";

		[Token(Token = "0x4000936")]
		public const string k_pch_Camera_BoundsColorGammaR_Int32 = "cameraBoundsColorGammaR";

		[Token(Token = "0x4000937")]
		public const string k_pch_Camera_BoundsColorGammaG_Int32 = "cameraBoundsColorGammaG";

		[Token(Token = "0x4000938")]
		public const string k_pch_Camera_BoundsColorGammaB_Int32 = "cameraBoundsColorGammaB";

		[Token(Token = "0x4000939")]
		public const string k_pch_Camera_BoundsColorGammaA_Int32 = "cameraBoundsColorGammaA";

		[Token(Token = "0x400093A")]
		public const string k_pch_Camera_BoundsStrength_Int32 = "cameraBoundsStrength";

		[Token(Token = "0x400093B")]
		public const string k_pch_audio_Section = "audio";

		[Token(Token = "0x400093C")]
		public const string k_pch_audio_OnPlaybackDevice_String = "onPlaybackDevice";

		[Token(Token = "0x400093D")]
		public const string k_pch_audio_OnRecordDevice_String = "onRecordDevice";

		[Token(Token = "0x400093E")]
		public const string k_pch_audio_OnPlaybackMirrorDevice_String = "onPlaybackMirrorDevice";

		[Token(Token = "0x400093F")]
		public const string k_pch_audio_OffPlaybackDevice_String = "offPlaybackDevice";

		[Token(Token = "0x4000940")]
		public const string k_pch_audio_OffRecordDevice_String = "offRecordDevice";

		[Token(Token = "0x4000941")]
		public const string k_pch_audio_VIVEHDMIGain = "viveHDMIGain";

		[Token(Token = "0x4000942")]
		public const string k_pch_Power_Section = "power";

		[Token(Token = "0x4000943")]
		public const string k_pch_Power_PowerOffOnExit_Bool = "powerOffOnExit";

		[Token(Token = "0x4000944")]
		public const string k_pch_Power_TurnOffScreensTimeout_Float = "turnOffScreensTimeout";

		[Token(Token = "0x4000945")]
		public const string k_pch_Power_TurnOffControllersTimeout_Float = "turnOffControllersTimeout";

		[Token(Token = "0x4000946")]
		public const string k_pch_Power_ReturnToWatchdogTimeout_Float = "returnToWatchdogTimeout";

		[Token(Token = "0x4000947")]
		public const string k_pch_Power_AutoLaunchSteamVROnButtonPress = "autoLaunchSteamVROnButtonPress";

		[Token(Token = "0x4000948")]
		public const string k_pch_Power_PauseCompositorOnStandby_Bool = "pauseCompositorOnStandby";

		[Token(Token = "0x4000949")]
		public const string k_pch_Dashboard_Section = "dashboard";

		[Token(Token = "0x400094A")]
		public const string k_pch_Dashboard_EnableDashboard_Bool = "enableDashboard";

		[Token(Token = "0x400094B")]
		public const string k_pch_Dashboard_ArcadeMode_Bool = "arcadeMode";

		[Token(Token = "0x400094C")]
		public const string k_pch_Dashboard_EnableWebUI = "webUI";

		[Token(Token = "0x400094D")]
		public const string k_pch_modelskin_Section = "modelskins";

		[Token(Token = "0x400094E")]
		public const string k_pch_Driver_Enable_Bool = "enable";

		[Token(Token = "0x400094F")]
		public const string k_pch_WebInterface_Section = "WebInterface";

		[Token(Token = "0x4000950")]
		public const string k_pch_WebInterface_WebPort_String = "WebPort";

		[Token(Token = "0x4000951")]
		public const string IVRScreenshots_Version = "IVRScreenshots_001";

		[Token(Token = "0x4000952")]
		public const string IVRResources_Version = "IVRResources_001";

		[Token(Token = "0x4000953")]
		public const string IVRDriverManager_Version = "IVRDriverManager_001";

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB720", Offset = "0xBCB720")]
		private static uint <VRToken>k__BackingField;

		[Token(Token = "0x4000955")]
		private const string FnTable_Prefix = "FnTable:";

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static COpenVRContext _OpenVRInternal_ModuleContext;

		[Token(Token = "0x170000D5")]
		private static uint VRToken
		{
			[Token(Token = "0x60008DA")]
			[Address(RVA = "0x13C7F7C", Offset = "0x13C7F7C", VA = "0x13C7F7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCE0F8", Offset = "0xBCE0F8")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60008DB")]
			[Address(RVA = "0x13C7FE4", Offset = "0x13C7FE4", VA = "0x13C7FE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCE108", Offset = "0xBCE108")]
			set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		private static COpenVRContext OpenVRInternal_ModuleContext
		{
			[Token(Token = "0x60008DC")]
			[Address(RVA = "0x13C8050", Offset = "0x13C8050", VA = "0x13C8050")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D7")]
		public static CVRSystem System
		{
			[Token(Token = "0x60008DD")]
			[Address(RVA = "0x13C8158", Offset = "0x13C8158", VA = "0x13C8158")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		public static CVRChaperone Chaperone
		{
			[Token(Token = "0x60008DE")]
			[Address(RVA = "0x13C8284", Offset = "0x13C8284", VA = "0x13C8284")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D9")]
		public static CVRChaperoneSetup ChaperoneSetup
		{
			[Token(Token = "0x60008DF")]
			[Address(RVA = "0x13C83B0", Offset = "0x13C83B0", VA = "0x13C83B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		public static CVRCompositor Compositor
		{
			[Token(Token = "0x60008E0")]
			[Address(RVA = "0x13C84DC", Offset = "0x13C84DC", VA = "0x13C84DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DB")]
		public static CVROverlay Overlay
		{
			[Token(Token = "0x60008E1")]
			[Address(RVA = "0x13C8608", Offset = "0x13C8608", VA = "0x13C8608")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		public static CVRRenderModels RenderModels
		{
			[Token(Token = "0x60008E2")]
			[Address(RVA = "0x13C8734", Offset = "0x13C8734", VA = "0x13C8734")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DD")]
		public static CVRExtendedDisplay ExtendedDisplay
		{
			[Token(Token = "0x60008E3")]
			[Address(RVA = "0x13C8860", Offset = "0x13C8860", VA = "0x13C8860")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		public static CVRSettings Settings
		{
			[Token(Token = "0x60008E4")]
			[Address(RVA = "0x13C898C", Offset = "0x13C898C", VA = "0x13C898C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DF")]
		public static CVRApplications Applications
		{
			[Token(Token = "0x60008E5")]
			[Address(RVA = "0x13C8AB8", Offset = "0x13C8AB8", VA = "0x13C8AB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E0")]
		public static CVRScreenshots Screenshots
		{
			[Token(Token = "0x60008E6")]
			[Address(RVA = "0x13C8BE4", Offset = "0x13C8BE4", VA = "0x13C8BE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E1")]
		public static CVRTrackedCamera TrackedCamera
		{
			[Token(Token = "0x60008E7")]
			[Address(RVA = "0x13C8D10", Offset = "0x13C8D10", VA = "0x13C8D10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x13C7AB8", Offset = "0x13C7AB8", VA = "0x13C7AB8")]
		public static uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType)
		{
			return default(uint);
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x13C7B4C", Offset = "0x13C7B4C", VA = "0x13C7B4C")]
		public static void ShutdownInternal()
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x13C7BC0", Offset = "0x13C7BC0", VA = "0x13C7BC0")]
		public static bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x13C7C40", Offset = "0x13C7C40", VA = "0x13C7C40")]
		public static bool IsRuntimeInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x13C7CC0", Offset = "0x13C7CC0", VA = "0x13C7CC0")]
		public static string GetStringForHmdError(EVRInitError error)
		{
			return null;
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x13C7DB8", Offset = "0x13C7DB8", VA = "0x13C7DB8")]
		public static IntPtr GetGenericInterface(string pchInterfaceVersion, ref EVRInitError peError)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x13C7E64", Offset = "0x13C7E64", VA = "0x13C7E64")]
		public static bool IsInterfaceVersionValid(string pchInterfaceVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x13C7F04", Offset = "0x13C7F04", VA = "0x13C7F04")]
		public static uint GetInitToken()
		{
			return default(uint);
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x13C8E3C", Offset = "0x13C8E3C", VA = "0x13C8E3C")]
		public static CVRSystem Init(ref EVRInitError peError, EVRApplicationType eApplicationType = EVRApplicationType.VRApplication_Scene)
		{
			return null;
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x13C9058", Offset = "0x13C9058", VA = "0x13C9058")]
		public static void Shutdown()
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x13C90B4", Offset = "0x13C90B4", VA = "0x13C90B4")]
		public OpenVR()
		{
		}
	}
}
namespace RoboRyanTron.SearchableEnum
{
	[Token(Token = "0x200012C")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xBC2500", Offset = "0xBC2500")]
	public class SearchableEnumAttribute : PropertyAttribute
	{
		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x10A9D44", Offset = "0x10A9D44", VA = "0x10A9D44")]
		public SearchableEnumAttribute()
		{
		}
	}
	[Token(Token = "0x200012D")]
	public class SearchableEnumDemo : ScriptableObject
	{
		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCB730", Offset = "0xBCB730")]
		public KeyCode LameKeyCode;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCB768", Offset = "0xBCB768")]
		[SearchableEnum]
		public KeyCode AwesomeKeyCode;

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x10A9D4C", Offset = "0x10A9D4C", VA = "0x10A9D4C")]
		public SearchableEnumDemo()
		{
		}
	}
}
namespace RoboRyanTron.QuickButtons
{
	[Serializable]
	[Token(Token = "0x200012E")]
	public class QuickButton
	{
		[Token(Token = "0x4000959")]
		private const BindingFlags FLAGS = BindingFlags.IgnoreCase | BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string functionName;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly object[] functionArgs;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Action<object> action;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Action<object> invocation;

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x10A9A98", Offset = "0x10A9A98", VA = "0x10A9A98")]
		public QuickButton(string functionName, params object[] functionArgs)
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x10A95E8", Offset = "0x10A95E8", VA = "0x10A95E8")]
		public QuickButton(Action<object> action)
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x10A9B54", Offset = "0x10A9B54", VA = "0x10A9B54")]
		public void Invoke(object target)
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x10A9BBC", Offset = "0x10A9BBC", VA = "0x10A9BBC")]
		private void ActionInvoke(object target)
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x10A9C24", Offset = "0x10A9C24", VA = "0x10A9C24")]
		private void NameInvoke(object target)
		{
		}
	}
}
namespace RoboRyanTron.QuickButtons.Demo
{
	[Serializable]
	[Token(Token = "0x200012F")]
	public class NestedClass
	{
		[Serializable]
		[Token(Token = "0x20003BB")]
		public class DeeperNestedClass
		{
			[Serializable]
			[Token(Token = "0x20003DD")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAB20", Offset = "0xBCAB20")]
			private sealed class <>c
			{
				[Token(Token = "0x4000D84")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x4000D85")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static Action<object> <>9__1_0;

				[Token(Token = "0x6001531")]
				[Address(RVA = "0x10A9948", Offset = "0x10A9948", VA = "0x10A9948")]
				public <>c()
				{
				}

				[Token(Token = "0x6001532")]
				[Address(RVA = "0x10A9950", Offset = "0x10A9950", VA = "0x10A9950")]
				internal void <.ctor>b__1_0(object input)
				{
				}
			}

			[Token(Token = "0x4000D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public QuickButton DeeperButton;

			[Token(Token = "0x60014D0")]
			[Address(RVA = "0x10A97C4", Offset = "0x10A97C4", VA = "0x10A97C4")]
			public DeeperNestedClass()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA9C0", Offset = "0xBCA9C0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<object> <>9__4_0;

			[Token(Token = "0x60014D2")]
			[Address(RVA = "0x10A96F8", Offset = "0x10A96F8", VA = "0x10A96F8")]
			public <>c()
			{
			}

			[Token(Token = "0x60014D3")]
			[Address(RVA = "0x10A9700", Offset = "0x10A9700", VA = "0x10A9700")]
			internal void <.ctor>b__4_0(object input)
			{
			}
		}

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DeeperNestedClass DeeperNested;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Message;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public QuickButton NestedDelegateButton;

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x10A94CC", Offset = "0x10A94CC", VA = "0x10A94CC")]
		public NestedClass()
		{
		}
	}
	[Token(Token = "0x2000130")]
	public class QuickButtonsDemo : MonoBehaviour
	{
		[Token(Token = "0x4000961")]
		private const QuickButtonsDemo TEMPLATE = null;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NestedClass nested;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<NestedClass> nested2;

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x10A99BC", Offset = "0x10A99BC", VA = "0x10A99BC")]
		private void OnDebugButtonClicked()
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x10A9A28", Offset = "0x10A9A28", VA = "0x10A9A28")]
		private void OnParameterizedDebugButtonClicked(string message)
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x10A9A90", Offset = "0x10A9A90", VA = "0x10A9A90")]
		public QuickButtonsDemo()
		{
		}
	}
}
namespace ES3Types
{
	[Token(Token = "0x2000131")]
	[Preserve]
	public class ES3Type_ES3Prefab : ES3Type
	{
		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x17D374C", Offset = "0x17D374C", VA = "0x17D374C")]
		public ES3Type_ES3Prefab()
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x17D3800", Offset = "0x17D3800", VA = "0x17D3800", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60008F9")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000132")]
	public class ES3Type_ES3PrefabInternal : ES3Type
	{
		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x17D3808", Offset = "0x17D3808", VA = "0x17D3808")]
		public ES3Type_ES3PrefabInternal()
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x17D38BC", Offset = "0x17D38BC", VA = "0x17D38BC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60008FD")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000133")]
	public class ES32DArrayType : ES3CollectionType
	{
		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x17C7DE8", Offset = "0x17C7DE8", VA = "0x17C7DE8")]
		public ES32DArrayType(Type type)
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x17C7EEC", Offset = "0x17C7EEC", VA = "0x17C7EEC", Slot = "9")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode unityObjectType)
		{
		}

		[Token(Token = "0x6000901")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x17C8100", Offset = "0x17C8100", VA = "0x17C8100", Slot = "7")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000903")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x17C8334", Offset = "0x17C8334", VA = "0x17C8334", Slot = "8")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000134")]
	public class ES33DArrayType : ES3CollectionType
	{
		[Token(Token = "0x6000905")]
		[Address(RVA = "0x17C85E4", Offset = "0x17C85E4", VA = "0x17C85E4")]
		public ES33DArrayType(Type type)
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x17C85E8", Offset = "0x17C85E8", VA = "0x17C85E8", Slot = "9")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000907")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x17C8894", Offset = "0x17C8894", VA = "0x17C8894", Slot = "7")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000909")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x17C8BA4", Offset = "0x17C8BA4", VA = "0x17C8BA4", Slot = "8")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000135")]
	[Preserve]
	public class ES3ArrayType : ES3CollectionType
	{
		[Token(Token = "0x600090B")]
		[Address(RVA = "0x17C8EF4", Offset = "0x17C8EF4", VA = "0x17C8EF4")]
		public ES3ArrayType(Type type)
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x17C8EF8", Offset = "0x17C8EF8", VA = "0x17C8EF8")]
		public ES3ArrayType(Type type, ES3Type elementType)
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x17C8F70", Offset = "0x17C8F70", VA = "0x17C8F70", Slot = "9")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x17C90EC", Offset = "0x17C90EC", VA = "0x17C90EC", Slot = "7")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x600090F")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000910")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x17C92C4", Offset = "0x17C92C4", VA = "0x17C92C4", Slot = "8")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000136")]
	[Preserve]
	public abstract class ES3CollectionType : ES3Type
	{
		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ES3Type elementType;

		[Token(Token = "0x6000912")]
		public abstract object Read(ES3Reader reader);

		[Token(Token = "0x6000913")]
		public abstract void ReadInto(ES3Reader reader, object obj);

		[Token(Token = "0x6000914")]
		public abstract void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode);

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x17C7DEC", Offset = "0x17C7DEC", VA = "0x17C7DEC")]
		public ES3CollectionType(Type type)
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x17C8F34", Offset = "0x17C8F34", VA = "0x17C8F34")]
		public ES3CollectionType(Type type, ES3Type elementType)
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x17C98B8", Offset = "0x17C98B8", VA = "0x17C98B8", Slot = "4")]
		[Preserve]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000918")]
		protected virtual bool ReadICollection<T>(ES3Reader reader, ICollection<T> collection, ES3Type elementType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000919")]
		protected virtual void ReadICollectionInto<T>(ES3Reader reader, ICollection<T> collection, ES3Type elementType)
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x17C98C8", Offset = "0x17C98C8", VA = "0x17C98C8", Slot = "12")]
		[Preserve]
		protected virtual void ReadICollectionInto(ES3Reader reader, ICollection collection, ES3Type elementType)
		{
		}
	}
	[Token(Token = "0x2000137")]
	[Preserve]
	public class ES3DictionaryType : ES3Type
	{
		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ES3Type keyType;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ES3Type valueType;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected ES3Reflection.ES3ReflectedMethod readMethod;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected ES3Reflection.ES3ReflectedMethod readIntoMethod;

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x17CA1B0", Offset = "0x17CA1B0", VA = "0x17CA1B0")]
		public ES3DictionaryType(Type type)
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x17CA2E8", Offset = "0x17CA2E8", VA = "0x17CA2E8")]
		public ES3DictionaryType(Type type, ES3Type keyType, ES3Type valueType)
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x17CA350", Offset = "0x17CA350", VA = "0x17CA350", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x17CA374", Offset = "0x17CA374", VA = "0x17CA374")]
		public void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x600091F")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000920")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x17CA740", Offset = "0x17CA740", VA = "0x17CA740")]
		public object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x17CA978", Offset = "0x17CA978", VA = "0x17CA978")]
		public void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000138")]
	[Preserve]
	public class ES3HashSetType : ES3CollectionType
	{
		[Token(Token = "0x6000923")]
		[Address(RVA = "0x17CAC98", Offset = "0x17CAC98", VA = "0x17CAC98")]
		public ES3HashSetType(Type type)
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x17CAC9C", Offset = "0x17CAC9C", VA = "0x17CAC9C", Slot = "9")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000925")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x17CB258", Offset = "0x17CB258", VA = "0x17CB258", Slot = "7")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000927")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x17CB518", Offset = "0x17CB518", VA = "0x17CB518", Slot = "8")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000139")]
	[Preserve]
	public class ES3ListType : ES3CollectionType
	{
		[Token(Token = "0x6000929")]
		[Address(RVA = "0x17CB584", Offset = "0x17CB584", VA = "0x17CB584")]
		public ES3ListType(Type type)
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x17CB588", Offset = "0x17CB588", VA = "0x17CB588")]
		public ES3ListType(Type type, ES3Type elementType)
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x17CB5C4", Offset = "0x17CB5C4", VA = "0x17CB5C4", Slot = "9")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x600092C")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x600092D")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x17CB968", Offset = "0x17CB968", VA = "0x17CB968", Slot = "7")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x17CBB40", Offset = "0x17CBB40", VA = "0x17CBB40", Slot = "8")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200013A")]
	[Preserve]
	public class ES3QueueType : ES3CollectionType
	{
		[Token(Token = "0x6000930")]
		[Address(RVA = "0x17CC34C", Offset = "0x17CC34C", VA = "0x17CC34C")]
		public ES3QueueType(Type type)
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x17CC350", Offset = "0x17CC350", VA = "0x17CC350", Slot = "9")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000932")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000933")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x17CC6D0", Offset = "0x17CC6D0", VA = "0x17CC6D0", Slot = "7")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x17CC99C", Offset = "0x17CC99C", VA = "0x17CC99C", Slot = "8")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200013B")]
	[Preserve]
	public class ES3StackType : ES3CollectionType
	{
		[Token(Token = "0x6000936")]
		[Address(RVA = "0x17CD8A0", Offset = "0x17CD8A0", VA = "0x17CD8A0")]
		public ES3StackType(Type type)
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x17CD8A4", Offset = "0x17CD8A4", VA = "0x17CD8A4", Slot = "9")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000938")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000939")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x17CDC24", Offset = "0x17CDC24", VA = "0x17CDC24", Slot = "7")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x17CDEF0", Offset = "0x17CDEF0", VA = "0x17CDEF0", Slot = "8")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200013C")]
	[Preserve]
	public abstract class ES3ComponentType : ES3UnityObjectType
	{
		[Token(Token = "0x400096B")]
		protected const string gameObjectPropertyName = "goID";

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x17C9DA0", Offset = "0x17C9DA0", VA = "0x17C9DA0")]
		public ES3ComponentType(Type type)
		{
		}

		[Token(Token = "0x600093D")]
		protected abstract void WriteComponent(object obj, ES3Writer writer);

		[Token(Token = "0x600093E")]
		protected abstract void ReadComponent<T>(ES3Reader reader, object obj);

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x17C9DA8", Offset = "0x17C9DA8", VA = "0x17C9DA8", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000940")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000941")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000942")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x17CA008", Offset = "0x17CA008", VA = "0x17CA008")]
		private static Component GetOrAddComponent(GameObject go, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x17CA0C8", Offset = "0x17CA0C8", VA = "0x17CA0C8")]
		public static Component CreateComponent(Type type)
		{
			return null;
		}
	}
	[Token(Token = "0x200013D")]
	[Preserve]
	public abstract class ES3ObjectType : ES3Type
	{
		[Token(Token = "0x6000945")]
		[Address(RVA = "0x17CC068", Offset = "0x17CC068", VA = "0x17CC068")]
		public ES3ObjectType(Type type)
		{
		}

		[Token(Token = "0x6000946")]
		protected abstract void WriteObject(object obj, ES3Writer writer);

		[Token(Token = "0x6000947")]
		protected abstract object ReadObject<T>(ES3Reader reader);

		[Token(Token = "0x6000948")]
		protected virtual void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x17CC06C", Offset = "0x17CC06C", VA = "0x17CC06C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600094A")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x600094B")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200013E")]
	[Preserve]
	public abstract class ES3ScriptableObjectType : ES3UnityObjectType
	{
		[Token(Token = "0x600094C")]
		[Address(RVA = "0x17CD0B0", Offset = "0x17CD0B0", VA = "0x17CD0B0")]
		public ES3ScriptableObjectType(Type type)
		{
		}

		[Token(Token = "0x600094D")]
		protected abstract void WriteScriptableObject(object obj, ES3Writer writer);

		[Token(Token = "0x600094E")]
		protected abstract void ReadScriptableObject<T>(ES3Reader reader, object obj);

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x17CD6CC", Offset = "0x17CD6CC", VA = "0x17CD6CC", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000950")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000951")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000952")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200013F")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBC25C4", Offset = "0xBC25C4")]
	[Preserve]
	public abstract class ES3Type
	{
		[Token(Token = "0x400096C")]
		public const string typeFieldName = "__type";

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ES3Member[] members;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type type;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isPrimitive;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool isValueType;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool isCollection;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool isDictionary;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isES3TypeUnityObject;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool isReflectedType;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool isUnsupported;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int priority;

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x17C97EC", Offset = "0x17C97EC", VA = "0x17C97EC")]
		protected ES3Type(Type type)
		{
		}

		[Token(Token = "0x6000954")]
		public abstract void Write(object obj, ES3Writer writer);

		[Token(Token = "0x6000955")]
		public abstract object Read<T>(ES3Reader reader);

		[Token(Token = "0x6000956")]
		public virtual void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x17CC20C", Offset = "0x17CC20C", VA = "0x17CC20C")]
		protected bool WriteUsingDerivedType(object obj, ES3Writer writer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000958")]
		protected void ReadUsingDerivedType<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x17CE400", Offset = "0x17CE400", VA = "0x17CE400")]
		internal string ReadPropertyName(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x17CCEF4", Offset = "0x17CCEF4", VA = "0x17CCEF4")]
		protected void WriteProperties(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x17CE45C", Offset = "0x17CE45C", VA = "0x17CE45C")]
		protected object ReadProperties(ES3Reader reader, object obj)
		{
			return null;
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x17CCEE4", Offset = "0x17CCEE4", VA = "0x17CCEE4")]
		protected void GetMembers(bool safe)
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x17CD11C", Offset = "0x17CD11C", VA = "0x17CD11C")]
		protected void GetMembers(bool safe, string[] memberNames)
		{
		}
	}
	[Token(Token = "0x2000140")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xBC2600", Offset = "0xBC2600")]
	public class ES3PropertiesAttribute : Attribute
	{
		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string[] members;

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x17CC318", Offset = "0x17CC318", VA = "0x17CC318")]
		public ES3PropertiesAttribute(params string[] members)
		{
		}
	}
	[Token(Token = "0x2000141")]
	[Preserve]
	public abstract class ES3UnityObjectType : ES3ObjectType
	{
		[Token(Token = "0x600095F")]
		[Address(RVA = "0x1750AE4", Offset = "0x1750AE4", VA = "0x1750AE4")]
		public ES3UnityObjectType(Type type)
		{
		}

		[Token(Token = "0x6000960")]
		protected abstract void WriteUnityObject(object obj, ES3Writer writer);

		[Token(Token = "0x6000961")]
		protected abstract void ReadUnityObject<T>(ES3Reader reader, object obj);

		[Token(Token = "0x6000962")]
		protected abstract object ReadUnityObject<T>(ES3Reader reader);

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x17601D0", Offset = "0x17601D0", VA = "0x17601D0", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x17601E4", Offset = "0x17601E4", VA = "0x17601E4", Slot = "13")]
		public virtual void WriteObject(object obj, ES3Writer writer, ES3.ReferenceMode mode)
		{
		}

		[Token(Token = "0x6000965")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000966")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x176041C", Offset = "0x176041C", VA = "0x176041C")]
		protected bool WriteUsingDerivedType(object obj, ES3Writer writer, ES3.ReferenceMode mode)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000142")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC2624", Offset = "0xBC2624")]
	public class ES3Type_Random : ES3ObjectType
	{
		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x1754B1C", Offset = "0x1754B1C", VA = "0x1754B1C")]
		public ES3Type_Random()
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x1754BD4", Offset = "0x1754BD4", VA = "0x1754BD4", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600096A")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x600096B")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000143")]
	public class ES3Type_RandomArray : ES3ArrayType
	{
		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x1754F0C", Offset = "0x1754F0C", VA = "0x1754F0C")]
		public ES3Type_RandomArray()
		{
		}
	}
	[Token(Token = "0x2000144")]
	[Preserve]
	public class ES3Type_DateTime : ES3Type
	{
		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x17D348C", Offset = "0x17D348C", VA = "0x17D348C")]
		public ES3Type_DateTime()
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x17D3540", Offset = "0x17D3540", VA = "0x17D3540", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000970")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000145")]
	public class ES3Type_DateTimeArray : ES3ArrayType
	{
		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x17D365C", Offset = "0x17D365C", VA = "0x17D365C")]
		public ES3Type_DateTimeArray()
		{
		}
	}
	[Token(Token = "0x2000146")]
	[Preserve]
	public class ES3Type_ES3Ref : ES3Type
	{
		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x17D39E4", Offset = "0x17D39E4", VA = "0x17D39E4")]
		public ES3Type_ES3Ref()
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x17D3AA0", Offset = "0x17D3AA0", VA = "0x17D3AA0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000975")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000147")]
	public class ES3Type_ES3RefArray : ES3ArrayType
	{
		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x17D3B58", Offset = "0x17D3B58", VA = "0x17D3B58")]
		public ES3Type_ES3RefArray()
		{
		}
	}
	[Token(Token = "0x2000148")]
	public class ES3Type_ES3RefDictionary : ES3DictionaryType
	{
		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x17D3C48", Offset = "0x17D3C48", VA = "0x17D3C48")]
		public ES3Type_ES3RefDictionary()
		{
		}
	}
	[Token(Token = "0x2000149")]
	[Preserve]
	public class ES3Type_UIntPtr : ES3Type
	{
		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x175C1A0", Offset = "0x175C1A0", VA = "0x175C1A0")]
		public ES3Type_UIntPtr()
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x175C260", Offset = "0x175C260", VA = "0x175C260", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600097B")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200014A")]
	public class ES3Type_UIntPtrArray : ES3ArrayType
	{
		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x175C2FC", Offset = "0x175C2FC", VA = "0x175C2FC")]
		public ES3Type_UIntPtrArray()
		{
		}
	}
	[Token(Token = "0x200014B")]
	[Preserve]
	public class ES3Type_bool : ES3Type
	{
		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x175D958", Offset = "0x175D958", VA = "0x175D958")]
		public ES3Type_bool()
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x175DA18", Offset = "0x175DA18", VA = "0x175DA18", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000980")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200014C")]
	public class ES3Type_boolArray : ES3ArrayType
	{
		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x175DAB4", Offset = "0x175DAB4", VA = "0x175DAB4")]
		public ES3Type_boolArray()
		{
		}
	}
	[Token(Token = "0x200014D")]
	[Preserve]
	public class ES3Type_byte : ES3Type
	{
		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x175DB90", Offset = "0x175DB90", VA = "0x175DB90")]
		public ES3Type_byte()
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x175DC50", Offset = "0x175DC50", VA = "0x175DC50", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000985")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200014E")]
	[Preserve]
	public class ES3Type_byteArray : ES3Type
	{
		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x175DCEC", Offset = "0x175DCEC", VA = "0x175DCEC")]
		public ES3Type_byteArray()
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x175DDAC", Offset = "0x175DDAC", VA = "0x175DDAC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000989")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200014F")]
	[Preserve]
	public class ES3Type_char : ES3Type
	{
		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x175DE48", Offset = "0x175DE48", VA = "0x175DE48")]
		public ES3Type_char()
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x175DF08", Offset = "0x175DF08", VA = "0x175DF08", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600098D")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000150")]
	public class ES3Type_charArray : ES3ArrayType
	{
		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x175DFA4", Offset = "0x175DFA4", VA = "0x175DFA4")]
		public ES3Type_charArray()
		{
		}
	}
	[Token(Token = "0x2000151")]
	[Preserve]
	public class ES3Type_decimal : ES3Type
	{
		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x175E080", Offset = "0x175E080", VA = "0x175E080")]
		public ES3Type_decimal()
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x175E140", Offset = "0x175E140", VA = "0x175E140", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000992")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000152")]
	public class ES3Type_decimalArray : ES3ArrayType
	{
		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x175E1DC", Offset = "0x175E1DC", VA = "0x175E1DC")]
		public ES3Type_decimalArray()
		{
		}
	}
	[Token(Token = "0x2000153")]
	[Preserve]
	public class ES3Type_double : ES3Type
	{
		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x175E2B8", Offset = "0x175E2B8", VA = "0x175E2B8")]
		public ES3Type_double()
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x175E378", Offset = "0x175E378", VA = "0x175E378", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000997")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000154")]
	public class ES3Type_doubleArray : ES3ArrayType
	{
		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x175E414", Offset = "0x175E414", VA = "0x175E414")]
		public ES3Type_doubleArray()
		{
		}
	}
	[Token(Token = "0x2000155")]
	[Preserve]
	public class ES3Type_enum : ES3Type
	{
		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Type underlyingType;

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x175E4F0", Offset = "0x175E4F0", VA = "0x175E4F0")]
		public ES3Type_enum(Type type)
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x175E5C0", Offset = "0x175E5C0", VA = "0x175E5C0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600099C")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000156")]
	[Preserve]
	public class ES3Type_float : ES3Type
	{
		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x175EEC0", Offset = "0x175EEC0", VA = "0x175EEC0")]
		public ES3Type_float()
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x175EF80", Offset = "0x175EF80", VA = "0x175EF80", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009A0")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000157")]
	public class ES3Type_floatArray : ES3ArrayType
	{
		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x175F01C", Offset = "0x175F01C", VA = "0x175F01C")]
		public ES3Type_floatArray()
		{
		}
	}
	[Token(Token = "0x2000158")]
	[Preserve]
	public class ES3Type_int : ES3Type
	{
		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x175F0F8", Offset = "0x175F0F8", VA = "0x175F0F8")]
		public ES3Type_int()
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x175F1B8", Offset = "0x175F1B8", VA = "0x175F1B8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009A5")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000159")]
	public class ES3Type_intArray : ES3ArrayType
	{
		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x175F254", Offset = "0x175F254", VA = "0x175F254")]
		public ES3Type_intArray()
		{
		}
	}
	[Token(Token = "0x200015A")]
	[Preserve]
	public class ES3Type_IntPtr : ES3Type
	{
		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x17D6CF4", Offset = "0x17D6CF4", VA = "0x17D6CF4")]
		public ES3Type_IntPtr()
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x17D6DB0", Offset = "0x17D6DB0", VA = "0x17D6DB0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009AA")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200015B")]
	public class ES3Type_IntPtrArray : ES3ArrayType
	{
		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x17D6E58", Offset = "0x17D6E58", VA = "0x17D6E58")]
		public ES3Type_IntPtrArray()
		{
		}
	}
	[Token(Token = "0x200015C")]
	[Preserve]
	public class ES3Type_long : ES3Type
	{
		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x175F330", Offset = "0x175F330", VA = "0x175F330")]
		public ES3Type_long()
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x175F3F0", Offset = "0x175F3F0", VA = "0x175F3F0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009AF")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200015D")]
	public class ES3Type_longArray : ES3ArrayType
	{
		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x175F48C", Offset = "0x175F48C", VA = "0x175F48C")]
		public ES3Type_longArray()
		{
		}
	}
	[Token(Token = "0x200015E")]
	[Preserve]
	public class ES3Type_sbyte : ES3Type
	{
		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x175F568", Offset = "0x175F568", VA = "0x175F568")]
		public ES3Type_sbyte()
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x175F628", Offset = "0x175F628", VA = "0x175F628", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009B4")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200015F")]
	public class ES3Type_sbyteArray : ES3ArrayType
	{
		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x175F6C4", Offset = "0x175F6C4", VA = "0x175F6C4")]
		public ES3Type_sbyteArray()
		{
		}
	}
	[Token(Token = "0x2000160")]
	[Preserve]
	public class ES3Type_short : ES3Type
	{
		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x175F7A0", Offset = "0x175F7A0", VA = "0x175F7A0")]
		public ES3Type_short()
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x175F860", Offset = "0x175F860", VA = "0x175F860", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009B9")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000161")]
	public class ES3Type_shortArray : ES3ArrayType
	{
		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x175F8FC", Offset = "0x175F8FC", VA = "0x175F8FC")]
		public ES3Type_shortArray()
		{
		}
	}
	[Token(Token = "0x2000162")]
	[Preserve]
	public class ES3Type_string : ES3Type
	{
		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x175F9D8", Offset = "0x175F9D8", VA = "0x175F9D8")]
		public ES3Type_string()
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x175FA98", Offset = "0x175FA98", VA = "0x175FA98", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009BE")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000163")]
	public class ES3Type_StringArray : ES3ArrayType
	{
		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x1759A50", Offset = "0x1759A50", VA = "0x1759A50")]
		public ES3Type_StringArray()
		{
		}
	}
	[Token(Token = "0x2000164")]
	[Preserve]
	public class ES3Type_uint : ES3Type
	{
		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x175FB28", Offset = "0x175FB28", VA = "0x175FB28")]
		public ES3Type_uint()
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x175FBE8", Offset = "0x175FBE8", VA = "0x175FBE8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009C3")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000165")]
	public class ES3Type_uintArray : ES3ArrayType
	{
		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x175FC84", Offset = "0x175FC84", VA = "0x175FC84")]
		public ES3Type_uintArray()
		{
		}
	}
	[Token(Token = "0x2000166")]
	[Preserve]
	public class ES3Type_ulong : ES3Type
	{
		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x175FD60", Offset = "0x175FD60", VA = "0x175FD60")]
		public ES3Type_ulong()
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x175FE20", Offset = "0x175FE20", VA = "0x175FE20", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009C8")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000167")]
	public class ES3Type_ulongArray : ES3ArrayType
	{
		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x175FEBC", Offset = "0x175FEBC", VA = "0x175FEBC")]
		public ES3Type_ulongArray()
		{
		}
	}
	[Token(Token = "0x2000168")]
	[Preserve]
	public class ES3Type_ushort : ES3Type
	{
		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x175FF98", Offset = "0x175FF98", VA = "0x175FF98")]
		public ES3Type_ushort()
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x1760058", Offset = "0x1760058", VA = "0x1760058", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009CD")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000169")]
	public class ES3Type_ushortArray : ES3ArrayType
	{
		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x17600F4", Offset = "0x17600F4", VA = "0x17600F4")]
		public ES3Type_ushortArray()
		{
		}
	}
	[Token(Token = "0x200016A")]
	[Preserve]
	internal class ES3ReflectedComponentType : ES3ComponentType
	{
		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x17CCEAC", Offset = "0x17CCEAC", VA = "0x17CCEAC")]
		public ES3ReflectedComponentType(Type type)
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x17CCEF0", Offset = "0x17CCEF0", VA = "0x17CCEF0", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009D2")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200016B")]
	[Preserve]
	internal class ES3ReflectedObjectType : ES3ObjectType
	{
		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x17CD040", Offset = "0x17CD040", VA = "0x17CD040")]
		public ES3ReflectedObjectType(Type type)
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x17CD074", Offset = "0x17CD074", VA = "0x17CD074", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009D5")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60009D6")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200016C")]
	[Preserve]
	internal class ES3ReflectedScriptableObjectType : ES3ScriptableObjectType
	{
		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x17CD078", Offset = "0x17CD078", VA = "0x17CD078")]
		public ES3ReflectedScriptableObjectType(Type type)
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x17CD0B8", Offset = "0x17CD0B8", VA = "0x17CD0B8", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009D9")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200016D")]
	[Preserve]
	internal class ES3ReflectedType : ES3Type
	{
		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x17CD0BC", Offset = "0x17CD0BC", VA = "0x17CD0BC")]
		public ES3ReflectedType(Type type)
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x17CD0E4", Offset = "0x17CD0E4", VA = "0x17CD0E4")]
		public ES3ReflectedType(Type type, string[] members)
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x17CD2BC", Offset = "0x17CD2BC", VA = "0x17CD2BC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009DD")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60009DE")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200016E")]
	[Preserve]
	internal class ES3ReflectedUnityObjectType : ES3UnityObjectType
	{
		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x17CD658", Offset = "0x17CD658", VA = "0x17CD658")]
		public ES3ReflectedUnityObjectType(Type type)
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x17CD690", Offset = "0x17CD690", VA = "0x17CD690", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009E1")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60009E2")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200016F")]
	[Preserve]
	internal class ES3ReflectedValueType : ES3Type
	{
		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x17CD694", Offset = "0x17CD694", VA = "0x17CD694")]
		public ES3ReflectedValueType(Type type)
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x17CD6C8", Offset = "0x17CD6C8", VA = "0x17CD6C8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009E5")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60009E6")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000170")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC2890", Offset = "0xBC2890")]
	public class ES3Type_BoxCollider : ES3ComponentType
	{
		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x17D0C74", Offset = "0x17D0C74", VA = "0x17D0C74")]
		public ES3Type_BoxCollider()
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x17D0D2C", Offset = "0x17D0D2C", VA = "0x17D0D2C", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009E9")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000171")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC29B0", Offset = "0xBC29B0")]
	public class ES3Type_BoxCollider2D : ES3ComponentType
	{
		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x17D0F6C", Offset = "0x17D0F6C", VA = "0x17D0F6C")]
		public ES3Type_BoxCollider2D()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x17D1024", Offset = "0x17D1024", VA = "0x17D1024", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009ED")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000172")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC2AEC", Offset = "0xBC2AEC")]
	public class ES3Type_Camera : ES3ComponentType
	{
		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x17D12EC", Offset = "0x17D12EC", VA = "0x17D12EC")]
		public ES3Type_Camera()
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x17D13A4", Offset = "0x17D13A4", VA = "0x17D13A4", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009F1")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000173")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC2F00", Offset = "0xBC2F00")]
	public class ES3Type_CapsuleCollider : ES3ComponentType
	{
		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x17D1D10", Offset = "0x17D1D10", VA = "0x17D1D10")]
		public ES3Type_CapsuleCollider()
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x17D1DC8", Offset = "0x17D1DC8", VA = "0x17D1DC8", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009F5")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000174")]
	[Preserve]
	public class ES3Type_EventSystem : ES3ComponentType
	{
		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x17D40AC", Offset = "0x17D40AC", VA = "0x17D40AC")]
		public ES3Type_EventSystem()
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x17D4164", Offset = "0x17D4164", VA = "0x17D4164", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009F9")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000175")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC3068", Offset = "0xBC3068")]
	public class ES3Type_Image : ES3ComponentType
	{
		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x17D60EC", Offset = "0x17D60EC", VA = "0x17D60EC")]
		public ES3Type_Image()
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x17D61B0", Offset = "0x17D61B0", VA = "0x17D61B0", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009FD")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000176")]
	public class ES3Type_ImageArray : ES3ArrayType
	{
		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x17D68E0", Offset = "0x17D68E0", VA = "0x17D68E0")]
		public ES3Type_ImageArray()
		{
		}
	}
	[Token(Token = "0x2000177")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC332C", Offset = "0xBC332C")]
	public class ES3Type_MeshCollider : ES3ComponentType
	{
		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x175105C", Offset = "0x175105C", VA = "0x175105C")]
		public ES3Type_MeshCollider()
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x1751114", Offset = "0x1751114", VA = "0x1751114", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A02")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000178")]
	public class ES3Type_MeshColliderArray : ES3ArrayType
	{
		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x17513C4", Offset = "0x17513C4", VA = "0x17513C4")]
		public ES3Type_MeshColliderArray()
		{
		}
	}
	[Token(Token = "0x2000179")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC3484", Offset = "0xBC3484")]
	public class ES3Type_MeshFilter : ES3ComponentType
	{
		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x17514A0", Offset = "0x17514A0", VA = "0x17514A0")]
		public ES3Type_MeshFilter()
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x1751558", Offset = "0x1751558", VA = "0x1751558", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A07")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200017A")]
	public class ES3Type_MeshFilterArray : ES3ArrayType
	{
		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x17515FC", Offset = "0x17515FC", VA = "0x17515FC")]
		public ES3Type_MeshFilterArray()
		{
		}
	}
	[Token(Token = "0x200017B")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC3518", Offset = "0xBC3518")]
	public class ES3Type_MeshRenderer : ES3ComponentType
	{
		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x17516D8", Offset = "0x17516D8", VA = "0x17516D8")]
		public ES3Type_MeshRenderer()
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x1751790", Offset = "0x1751790", VA = "0x1751790", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A0C")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200017C")]
	public class ES3Type_MeshRendererArray : ES3ArrayType
	{
		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x1751E2C", Offset = "0x1751E2C", VA = "0x1751E2C")]
		public ES3Type_MeshRendererArray()
		{
		}
	}
	[Token(Token = "0x200017D")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC376C", Offset = "0xBC376C")]
	public class ES3Type_ParticleSystem : ES3ComponentType
	{
		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x175317C", Offset = "0x175317C", VA = "0x175317C")]
		public ES3Type_ParticleSystem()
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x1753234", Offset = "0x1753234", VA = "0x1753234", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A11")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200017E")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC3AD8", Offset = "0xBC3AD8")]
	public class ES3Type_PolygonCollider2D : ES3ComponentType
	{
		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x1754174", Offset = "0x1754174", VA = "0x1754174")]
		public ES3Type_PolygonCollider2D()
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x175422C", Offset = "0x175422C", VA = "0x175422C", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A15")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class ES3Type_PolygonCollider2DArray : ES3ArrayType
	{
		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x17546D4", Offset = "0x17546D4", VA = "0x17546D4")]
		public ES3Type_PolygonCollider2DArray()
		{
		}
	}
	[Token(Token = "0x2000180")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC3C4C", Offset = "0xBC3C4C")]
	public class ES3Type_RawImage : ES3ComponentType
	{
		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x1754FE8", Offset = "0x1754FE8", VA = "0x1754FE8")]
		public ES3Type_RawImage()
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x17550AC", Offset = "0x17550AC", VA = "0x17550AC", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A1A")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000181")]
	public class ES3Type_RawImageArray : ES3ArrayType
	{
		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x1755780", Offset = "0x1755780", VA = "0x1755780")]
		public ES3Type_RawImageArray()
		{
		}
	}
	[Token(Token = "0x2000182")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC3DF8", Offset = "0xBC3DF8")]
	public class ES3Type_SphereCollider : ES3ComponentType
	{
		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x17589C0", Offset = "0x17589C0", VA = "0x17589C0")]
		public ES3Type_SphereCollider()
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x1758A78", Offset = "0x1758A78", VA = "0x1758A78", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A1F")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000183")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC3F18", Offset = "0xBC3F18")]
	public class ES3Type_Text : ES3ComponentType
	{
		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x1759E60", Offset = "0x1759E60", VA = "0x1759E60")]
		public ES3Type_Text()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x1759F18", Offset = "0x1759F18", VA = "0x1759F18", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A23")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000184")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC4214", Offset = "0xBC4214")]
	public class ES3Type_Transform : ES3ComponentType
	{
		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int countRead;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x175BBCC", Offset = "0x175BBCC", VA = "0x175BBCC")]
		public ES3Type_Transform()
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x175BC84", Offset = "0x175BC84", VA = "0x175BC84", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A27")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000185")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC42FC", Offset = "0xBC42FC")]
	public class ES3Type_AnimationCurve : ES3Type
	{
		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x17CFE84", Offset = "0x17CFE84", VA = "0x17CFE84")]
		public ES3Type_AnimationCurve()
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x17CFF38", Offset = "0x17CFF38", VA = "0x17CFF38", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A2B")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A2C")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000186")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC43C8", Offset = "0xBC43C8")]
	public class ES3Type_AudioClip : ES3UnityObjectType
	{
		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x17D00A4", Offset = "0x17D00A4", VA = "0x17D00A4")]
		public ES3Type_AudioClip()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x17D015C", Offset = "0x17D015C", VA = "0x17D015C", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A30")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A31")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000187")]
	public class ES3Type_AudioClipArray : ES3ArrayType
	{
		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x17D0354", Offset = "0x17D0354", VA = "0x17D0354")]
		public ES3Type_AudioClipArray()
		{
		}
	}
	[Token(Token = "0x2000188")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC44CC", Offset = "0xBC44CC")]
	public class ES3Type_BoneWeight : ES3Type
	{
		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x17D0444", Offset = "0x17D0444", VA = "0x17D0444")]
		public ES3Type_BoneWeight()
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x17D04F8", Offset = "0x17D04F8", VA = "0x17D04F8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A36")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000189")]
	public class ES3Type_BoneWeightArray : ES3ArrayType
	{
		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x17D0868", Offset = "0x17D0868", VA = "0x17D0868")]
		public ES3Type_BoneWeightArray()
		{
		}
	}
	[Token(Token = "0x200018A")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC4624", Offset = "0xBC4624")]
	public class ES3Type_Bounds : ES3Type
	{
		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x17D0958", Offset = "0x17D0958", VA = "0x17D0958")]
		public ES3Type_Bounds()
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x17D0A0C", Offset = "0x17D0A0C", VA = "0x17D0A0C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A3B")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200018B")]
	public class ES3Type_BoundsArray : ES3ArrayType
	{
		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x17D0B84", Offset = "0x17D0B84", VA = "0x17D0B84")]
		public ES3Type_BoundsArray()
		{
		}
	}
	[Token(Token = "0x200018C")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC46D4", Offset = "0xBC46D4")]
	public class ES3Type_CollisionModule : ES3Type
	{
		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x17D2194", Offset = "0x17D2194", VA = "0x17D2194")]
		public ES3Type_CollisionModule()
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x17D2248", Offset = "0x17D2248", VA = "0x17D2248", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A40")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A41")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200018D")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC4944", Offset = "0xBC4944")]
	public class ES3Type_Color : ES3Type
	{
		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x17D2804", Offset = "0x17D2804", VA = "0x17D2804")]
		public ES3Type_Color()
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x17D28B8", Offset = "0x17D28B8", VA = "0x17D28B8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A45")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200018E")]
	public class ES3Type_ColorArray : ES3ArrayType
	{
		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x17D2E50", Offset = "0x17D2E50", VA = "0x17D2E50")]
		public ES3Type_ColorArray()
		{
		}
	}
	[Token(Token = "0x200018F")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC4A2C", Offset = "0xBC4A2C")]
	public class ES3Type_Color32 : ES3Type
	{
		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x17D2A90", Offset = "0x17D2A90", VA = "0x17D2A90")]
		public ES3Type_Color32()
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x17D2B44", Offset = "0x17D2B44", VA = "0x17D2B44", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A4A")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x17D2D18", Offset = "0x17D2D18", VA = "0x17D2D18")]
		public static bool Equals(Color32 a, Color32 b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000190")]
	public class ES3Type_Color32Array : ES3ArrayType
	{
		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x17D2D60", Offset = "0x17D2D60", VA = "0x17D2D60")]
		public ES3Type_Color32Array()
		{
		}
	}
	[Token(Token = "0x2000191")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC4B14", Offset = "0xBC4B14")]
	public class ES3Type_ColorBySpeedModule : ES3Type
	{
		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x17D2F40", Offset = "0x17D2F40", VA = "0x17D2F40")]
		public ES3Type_ColorBySpeedModule()
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x17D2FF4", Offset = "0x17D2FF4", VA = "0x17D2FF4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A50")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A51")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000192")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC4BE0", Offset = "0xBC4BE0")]
	public class ES3Type_ColorOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x17D3224", Offset = "0x17D3224", VA = "0x17D3224")]
		public ES3Type_ColorOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x17D32D8", Offset = "0x17D32D8", VA = "0x17D32D8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A55")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A56")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000193")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC4C90", Offset = "0xBC4C90")]
	public class ES3Type_EmissionModule : ES3Type
	{
		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x17D3D24", Offset = "0x17D3D24", VA = "0x17D3D24")]
		public ES3Type_EmissionModule()
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x17D3DD8", Offset = "0x17D3DD8", VA = "0x17D3DD8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A5A")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A5B")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000194")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC4D94", Offset = "0xBC4D94")]
	public class ES3Type_ExternalForcesModule : ES3Type
	{
		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x17D416C", Offset = "0x17D416C", VA = "0x17D416C")]
		public ES3Type_ExternalForcesModule()
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x17D4220", Offset = "0x17D4220", VA = "0x17D4220", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A5F")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A60")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000195")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC4E44", Offset = "0xBC4E44")]
	public class ES3Type_Flare : ES3Type
	{
		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x17D43BC", Offset = "0x17D43BC", VA = "0x17D43BC")]
		public ES3Type_Flare()
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x17D4470", Offset = "0x17D4470", VA = "0x17D4470", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A64")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A65")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000196")]
	public class ES3Type_FlareArray : ES3ArrayType
	{
		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x17D4534", Offset = "0x17D4534", VA = "0x17D4534")]
		public ES3Type_FlareArray()
		{
		}
	}
	[Token(Token = "0x2000197")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC4ED8", Offset = "0xBC4ED8")]
	public class ES3Type_Font : ES3UnityObjectType
	{
		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x17D4624", Offset = "0x17D4624", VA = "0x17D4624")]
		public ES3Type_Font()
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x17D46DC", Offset = "0x17D46DC", VA = "0x17D46DC", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A6A")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A6B")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000198")]
	public class ES3Type_FontArray : ES3ArrayType
	{
		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x17D47E8", Offset = "0x17D47E8", VA = "0x17D47E8")]
		public ES3Type_FontArray()
		{
		}
	}
	[Token(Token = "0x2000199")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC4F88", Offset = "0xBC4F88")]
	public class ES3Type_ForceOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x17D48D8", Offset = "0x17D48D8", VA = "0x17D48D8")]
		public ES3Type_ForceOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x17D498C", Offset = "0x17D498C", VA = "0x17D498C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A70")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A71")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200019A")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC50FC", Offset = "0xBC50FC")]
	public class ES3Type_GameObject : ES3UnityObjectType
	{
		[Token(Token = "0x40009CC")]
		private const string prefabPropertyName = "es3Prefab";

		[Token(Token = "0x40009CD")]
		private const string transformPropertyName = "transformID";

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool saveChildren;

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x17D4DA4", Offset = "0x17D4DA4", VA = "0x17D4DA4")]
		public ES3Type_GameObject()
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x17D4E5C", Offset = "0x17D4E5C", VA = "0x17D4E5C", Slot = "13")]
		public override void WriteObject(object obj, ES3Writer writer, ES3.ReferenceMode mode)
		{
		}

		[Token(Token = "0x6000A75")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A76")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x17D5738", Offset = "0x17D5738", VA = "0x17D5738")]
		private GameObject CreateNewGameObject(ES3ReferenceMgrBase refMgr, long id)
		{
			return null;
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x17D5478", Offset = "0x17D5478", VA = "0x17D5478")]
		public static List<GameObject> GetChildren(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x17D57D0", Offset = "0x17D57D0", VA = "0x17D57D0", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A7A")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A7B")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200019B")]
	public class ES3Type_GameObjectArray : ES3ArrayType
	{
		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x17D57D8", Offset = "0x17D57D8", VA = "0x17D57D8")]
		public ES3Type_GameObjectArray()
		{
		}
	}
	[Token(Token = "0x200019C")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC5238", Offset = "0xBC5238")]
	public class ES3Type_Gradient : ES3Type
	{
		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x17D58C8", Offset = "0x17D58C8", VA = "0x17D58C8")]
		public ES3Type_Gradient()
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x17D597C", Offset = "0x17D597C", VA = "0x17D597C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A80")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A81")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200019D")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC5304", Offset = "0xBC5304")]
	public class ES3Type_GradientAlphaKey : ES3Type
	{
		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x17D5AE8", Offset = "0x17D5AE8", VA = "0x17D5AE8")]
		public ES3Type_GradientAlphaKey()
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x17D5B9C", Offset = "0x17D5B9C", VA = "0x17D5B9C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A85")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200019E")]
	public class ES3Type_GradientAlphaKeyArray : ES3ArrayType
	{
		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x17D5CE0", Offset = "0x17D5CE0", VA = "0x17D5CE0")]
		public ES3Type_GradientAlphaKeyArray()
		{
		}
	}
	[Token(Token = "0x200019F")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC53B4", Offset = "0xBC53B4")]
	public class ES3Type_GradientColorKey : ES3Type
	{
		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x17D5DD0", Offset = "0x17D5DD0", VA = "0x17D5DD0")]
		public ES3Type_GradientColorKey()
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x17D5E84", Offset = "0x17D5E84", VA = "0x17D5E84", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A8A")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A0")]
	public class ES3Type_GradientColorKeyArray : ES3ArrayType
	{
		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x17D5FFC", Offset = "0x17D5FFC", VA = "0x17D5FFC")]
		public ES3Type_GradientColorKeyArray()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC5464", Offset = "0xBC5464")]
	public class ES3Type_InheritVelocityModule : ES3Type
	{
		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x17D69D0", Offset = "0x17D69D0", VA = "0x17D69D0")]
		public ES3Type_InheritVelocityModule()
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x17D6A84", Offset = "0x17D6A84", VA = "0x17D6A84", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A8F")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A90")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001A2")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC554C", Offset = "0xBC554C")]
	public class ES3Type_Keyframe : ES3Type
	{
		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x17D6F48", Offset = "0x17D6F48", VA = "0x17D6F48")]
		public ES3Type_Keyframe()
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x17D6FFC", Offset = "0x17D6FFC", VA = "0x17D6FFC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A94")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A3")]
	public class ES3Type_KeyframeArray : ES3ArrayType
	{
		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x17D7208", Offset = "0x17D7208", VA = "0x17D7208")]
		public ES3Type_KeyframeArray()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC5634", Offset = "0xBC5634")]
	public class ES3Type_LayerMask : ES3Type
	{
		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x17D72F8", Offset = "0x17D72F8", VA = "0x17D72F8")]
		public ES3Type_LayerMask()
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x17D73AC", Offset = "0x17D73AC", VA = "0x17D73AC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A99")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A5")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC5700", Offset = "0xBC5700")]
	public class ES3Type_Light : ES3ComponentType
	{
		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x17D74C0", Offset = "0x17D74C0", VA = "0x17D74C0")]
		public ES3Type_Light()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x17D7578", Offset = "0x17D7578", VA = "0x17D7578", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A9D")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001A6")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC59E0", Offset = "0xBC59E0")]
	public class ES3Type_LightsModule : ES3Type
	{
		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x17D7CDC", Offset = "0x17D7CDC", VA = "0x17D7CDC")]
		public ES3Type_LightsModule()
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x17D7D90", Offset = "0x17D7D90", VA = "0x17D7D90", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AA1")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AA2")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001A7")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC5BA8", Offset = "0xBC5BA8")]
	public class ES3Type_LimitVelocityOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x17D82B4", Offset = "0x17D82B4", VA = "0x17D82B4")]
		public ES3Type_LimitVelocityOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x17D8368", Offset = "0x17D8368", VA = "0x17D8368", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AA6")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AA7")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001A8")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC5D70", Offset = "0xBC5D70")]
	public class ES3Type_MainModule : ES3Type
	{
		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x17D8874", Offset = "0x17D8874", VA = "0x17D8874")]
		public ES3Type_MainModule()
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x17D8928", Offset = "0x17D8928", VA = "0x17D8928", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AAB")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AAC")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001A9")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC61F4", Offset = "0xBC61F4")]
	public class ES3Type_Material : ES3UnityObjectType
	{
		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x17D96C8", Offset = "0x17D96C8", VA = "0x17D96C8")]
		public ES3Type_Material()
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x17D9780", Offset = "0x17D9780", VA = "0x17D9780", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AB0")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AB1")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class ES3Type_MaterialArray : ES3ArrayType
	{
		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x1750580", Offset = "0x1750580", VA = "0x1750580")]
		public ES3Type_MaterialArray()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC62F8", Offset = "0xBC62F8")]
	public class ES3Type_Matrix4x4 : ES3Type
	{
		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x175065C", Offset = "0x175065C", VA = "0x175065C")]
		public ES3Type_Matrix4x4()
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x1750714", Offset = "0x1750714", VA = "0x1750714", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AB6")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001AC")]
	public class ES3Type_Matrix4x4Array : ES3ArrayType
	{
		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x1750944", Offset = "0x1750944", VA = "0x1750944")]
		public ES3Type_Matrix4x4Array()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC63E0", Offset = "0xBC63E0")]
	public class ES3Type_Mesh : ES3UnityObjectType
	{
		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x1750A20", Offset = "0x1750A20", VA = "0x1750A20")]
		public ES3Type_Mesh()
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x1750B14", Offset = "0x1750B14", VA = "0x1750B14", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000ABB")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000ABC")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001AE")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC65E0", Offset = "0xBC65E0")]
	public class ES3Type_MinMaxCurve : ES3Type
	{
		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x1751F08", Offset = "0x1751F08", VA = "0x1751F08")]
		public ES3Type_MinMaxCurve()
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x1751FC0", Offset = "0x1751FC0", VA = "0x1751FC0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AC0")]
		[Preserve]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AC1")]
		[Preserve]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001AF")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC6738", Offset = "0xBC6738")]
	public class ES3Type_MinMaxGradient : ES3Type
	{
		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x17522F0", Offset = "0x17522F0", VA = "0x17522F0")]
		public ES3Type_MinMaxGradient()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x17523A8", Offset = "0x17523A8", VA = "0x17523A8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AC5")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B0")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC6874", Offset = "0xBC6874")]
	public class ES3Type_NoiseModule : ES3Type
	{
		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x17526B4", Offset = "0x17526B4", VA = "0x17526B4")]
		public ES3Type_NoiseModule()
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x175276C", Offset = "0x175276C", VA = "0x175276C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AC9")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000ACA")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001B1")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC6BE0", Offset = "0xBC6BE0")]
	public class ES3Type_PhysicMaterial : ES3ObjectType
	{
		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x1753AB4", Offset = "0x1753AB4", VA = "0x1753AB4")]
		public ES3Type_PhysicMaterial()
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x1753B6C", Offset = "0x1753B6C", VA = "0x1753B6C", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000ACE")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000ACF")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B2")]
	public class ES3Type_PhysicMaterialArray : ES3ArrayType
	{
		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x1753DB8", Offset = "0x1753DB8", VA = "0x1753DB8")]
		public ES3Type_PhysicMaterialArray()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC6CE4", Offset = "0xBC6CE4")]
	public class ES3Type_PhysicsMaterial2D : ES3ObjectType
	{
		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x1753E94", Offset = "0x1753E94", VA = "0x1753E94")]
		public ES3Type_PhysicsMaterial2D()
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x1753F4C", Offset = "0x1753F4C", VA = "0x1753F4C", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AD4")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000AD5")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B4")]
	public class ES3Type_PhysicsMaterial2DArray : ES3ArrayType
	{
		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x1754098", Offset = "0x1754098", VA = "0x1754098")]
		public ES3Type_PhysicsMaterial2DArray()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC6D94", Offset = "0xBC6D94")]
	public class ES3Type_Quaternion : ES3Type
	{
		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x17547B0", Offset = "0x17547B0", VA = "0x17547B0")]
		public ES3Type_Quaternion()
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x1754868", Offset = "0x1754868", VA = "0x1754868", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000ADA")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B6")]
	public class ES3Type_QuaternionArray : ES3ArrayType
	{
		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x1754A40", Offset = "0x1754A40", VA = "0x1754A40")]
		public ES3Type_QuaternionArray()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC6E7C", Offset = "0xBC6E7C")]
	public class ES3Type_Rect : ES3Type
	{
		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x175585C", Offset = "0x175585C", VA = "0x175585C")]
		public ES3Type_Rect()
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x1755914", Offset = "0x1755914", VA = "0x1755914", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000ADF")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B8")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC6F64", Offset = "0xBC6F64")]
	public class ES3Type_RectTransform : ES3ComponentType
	{
		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x1755B10", Offset = "0x1755B10", VA = "0x1755B10")]
		public ES3Type_RectTransform()
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x1755BC8", Offset = "0x1755BC8", VA = "0x1755BC8", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AE3")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001B9")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC712C", Offset = "0xBC712C")]
	public class ES3Type_RotationBySpeedModule : ES3Type
	{
		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x1756068", Offset = "0x1756068", VA = "0x1756068")]
		public ES3Type_RotationBySpeedModule()
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x1756120", Offset = "0x1756120", VA = "0x1756120", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AE7")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AE8")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001BA")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC72A0", Offset = "0xBC72A0")]
	public class ES3Type_RotationOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x1756570", Offset = "0x1756570", VA = "0x1756570")]
		public ES3Type_RotationOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x1756628", Offset = "0x1756628", VA = "0x1756628", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AEC")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AED")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001BB")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC73F8", Offset = "0xBC73F8")]
	public class ES3Type_Shader : ES3Type
	{
		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x1756A00", Offset = "0x1756A00", VA = "0x1756A00")]
		public ES3Type_Shader()
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x1756AB8", Offset = "0x1756AB8", VA = "0x1756AB8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AF1")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AF2")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class ES3Type_ShaderArray : ES3ArrayType
	{
		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x1756C20", Offset = "0x1756C20", VA = "0x1756C20")]
		public ES3Type_ShaderArray()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC74A8", Offset = "0xBC74A8")]
	public class ES3Type_ShapeModule : ES3Type
	{
		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x1756CFC", Offset = "0x1756CFC", VA = "0x1756CFC")]
		public ES3Type_ShapeModule()
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x1756DB4", Offset = "0x1756DB4", VA = "0x1756DB4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AF7")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AF8")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001BE")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC7734", Offset = "0xBC7734")]
	public class ES3Type_SizeBySpeedModule : ES3Type
	{
		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x175744C", Offset = "0x175744C", VA = "0x175744C")]
		public ES3Type_SizeBySpeedModule()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x1757504", Offset = "0x1757504", VA = "0x1757504", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AFC")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AFD")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001BF")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC78E0", Offset = "0xBC78E0")]
	public class ES3Type_SizeOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x17579F4", Offset = "0x17579F4", VA = "0x17579F4")]
		public ES3Type_SizeOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x1757AAC", Offset = "0x1757AAC", VA = "0x1757AAC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B01")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B02")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001C0")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC7A70", Offset = "0xBC7A70")]
	public class ES3Type_SkinnedMeshRenderer : ES3ComponentType
	{
		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x1757F28", Offset = "0x1757F28", VA = "0x1757F28")]
		public ES3Type_SkinnedMeshRenderer()
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x1757FE0", Offset = "0x1757FE0", VA = "0x1757FE0", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B06")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class ES3Type_SkinnedMeshRendererArray : ES3ArrayType
	{
		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x17588E4", Offset = "0x17588E4", VA = "0x17588E4")]
		public ES3Type_SkinnedMeshRendererArray()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC7D6C", Offset = "0xBC7D6C")]
	public class ES3Type_Sprite : ES3UnityObjectType
	{
		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x1758D78", Offset = "0x1758D78", VA = "0x1758D78")]
		public ES3Type_Sprite()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x1758E3C", Offset = "0x1758E3C", VA = "0x1758E3C", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B0B")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000B0C")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C3")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC7E70", Offset = "0xBC7E70")]
	public class ES3Type_SpriteRenderer : ES3ComponentType
	{
		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x1759124", Offset = "0x1759124", VA = "0x1759124")]
		public ES3Type_SpriteRenderer()
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x17591DC", Offset = "0x17591DC", VA = "0x17591DC", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B10")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public class ES3Type_SpriteRendererArray : ES3ArrayType
	{
		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x1759974", Offset = "0x1759974", VA = "0x1759974")]
		public ES3Type_SpriteRendererArray()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC8118", Offset = "0xBC8118")]
	public class ES3Type_SubEmittersModule : ES3Type
	{
		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x1759B2C", Offset = "0x1759B2C", VA = "0x1759B2C")]
		public ES3Type_SubEmittersModule()
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x1759BE4", Offset = "0x1759BE4", VA = "0x1759BE4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B15")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B16")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001C6")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC81E4", Offset = "0xBC81E4")]
	public class ES3Type_Texture : ES3Type
	{
		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x175A588", Offset = "0x175A588", VA = "0x175A588")]
		public ES3Type_Texture()
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x175A640", Offset = "0x175A640", VA = "0x175A640", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B1A")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000B1B")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C7")]
	public class ES3Type_TextureArray : ES3ArrayType
	{
		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x175ADF0", Offset = "0x175ADF0", VA = "0x175ADF0")]
		public ES3Type_TextureArray()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC82E8", Offset = "0xBC82E8")]
	public class ES3Type_Texture2D : ES3UnityObjectType
	{
		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x175A7B0", Offset = "0x175A7B0", VA = "0x175A7B0")]
		public ES3Type_Texture2D()
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x175A874", Offset = "0x175A874", VA = "0x175A874", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B20")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000B21")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x175AC78", Offset = "0x175AC78", VA = "0x175AC78")]
		protected bool IsReadable(Texture2D instance)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001C9")]
	public class ES3Type_Texture2DArray : ES3ArrayType
	{
		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x175AD14", Offset = "0x175AD14", VA = "0x175AD14")]
		public ES3Type_Texture2DArray()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC83EC", Offset = "0xBC83EC")]
	public class ES3Type_TextureSheetAnimationModule : ES3Type
	{
		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x175AECC", Offset = "0x175AECC", VA = "0x175AECC")]
		public ES3Type_TextureSheetAnimationModule()
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x175AF84", Offset = "0x175AF84", VA = "0x175AF84", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B27")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B28")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001CB")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC85EC", Offset = "0xBC85EC")]
	public class ES3Type_TrailModule : ES3Type
	{
		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x175B4B8", Offset = "0x175B4B8", VA = "0x175B4B8")]
		public ES3Type_TrailModule()
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x175B570", Offset = "0x175B570", VA = "0x175B570", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B2C")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B2D")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001CC")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC8808", Offset = "0xBC8808")]
	public class ES3Type_TriggerModule : ES3Type
	{
		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x175BE34", Offset = "0x175BE34", VA = "0x175BE34")]
		public ES3Type_TriggerModule()
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x175BEEC", Offset = "0x175BEEC", VA = "0x175BEEC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B31")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B32")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001CD")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC8928", Offset = "0xBC8928")]
	public class ES3Type_Vector2 : ES3Type
	{
		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x175C3D8", Offset = "0x175C3D8", VA = "0x175C3D8")]
		public ES3Type_Vector2()
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x175C490", Offset = "0x175C490", VA = "0x175C490", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B36")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CE")]
	public class ES3Type_Vector2Array : ES3ArrayType
	{
		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x175C5D4", Offset = "0x175C5D4", VA = "0x175C5D4")]
		public ES3Type_Vector2Array()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC89D8", Offset = "0xBC89D8")]
	public class ES3Type_Vector2Int : ES3Type
	{
		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x175C6B0", Offset = "0x175C6B0", VA = "0x175C6B0")]
		public ES3Type_Vector2Int()
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x175C768", Offset = "0x175C768", VA = "0x175C768", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B3B")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D0")]
	public class ES3Type_Vector2IntArray : ES3ArrayType
	{
		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x175C8D4", Offset = "0x175C8D4", VA = "0x175C8D4")]
		public ES3Type_Vector2IntArray()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC8A88", Offset = "0xBC8A88")]
	public class ES3Type_Vector3 : ES3Type
	{
		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x175C9B0", Offset = "0x175C9B0", VA = "0x175C9B0")]
		public ES3Type_Vector3()
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x175CA68", Offset = "0x175CA68", VA = "0x175CA68", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B40")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D2")]
	public class ES3Type_Vector3Array : ES3ArrayType
	{
		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x175CBF8", Offset = "0x175CBF8", VA = "0x175CBF8")]
		public ES3Type_Vector3Array()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC8B54", Offset = "0xBC8B54")]
	public class ES3Type_Vector3Int : ES3Type
	{
		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x175CCD4", Offset = "0x175CCD4", VA = "0x175CCD4")]
		public ES3Type_Vector3Int()
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x175CD8C", Offset = "0x175CD8C", VA = "0x175CD8C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B45")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D4")]
	public class ES3Type_Vector3IntArray : ES3ArrayType
	{
		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x175CF54", Offset = "0x175CF54", VA = "0x175CF54")]
		public ES3Type_Vector3IntArray()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC8C20", Offset = "0xBC8C20")]
	public class ES3Type_Vector4 : ES3Type
	{
		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x175D030", Offset = "0x175D030", VA = "0x175D030")]
		public ES3Type_Vector4()
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x175D0E8", Offset = "0x175D0E8", VA = "0x175D0E8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B4A")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x175D2BC", Offset = "0x175D2BC", VA = "0x175D2BC")]
		public static bool Equals(Vector4 a, Vector4 b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001D6")]
	public class ES3Type_Vector4Array : ES3ArrayType
	{
		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x175D40C", Offset = "0x175D40C", VA = "0x175D40C")]
		public ES3Type_Vector4Array()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xBC8D08", Offset = "0xBC8D08")]
	public class ES3Type_VelocityOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x175D4E8", Offset = "0x175D4E8", VA = "0x175D4E8")]
		public ES3Type_VelocityOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x175D5A0", Offset = "0x175D5A0", VA = "0x175D5A0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B50")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B51")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
}
namespace ES3Internal
{
	[Token(Token = "0x20001D8")]
	internal static class ES3Debug
	{
		[Token(Token = "0x4000A0D")]
		private const string disableInfoMsg = "\n<i>To disable these messages from Easy Save, go to Window > Easy Save 3 > Settings, and uncheck 'Log Info'</i>";

		[Token(Token = "0x4000A0E")]
		private const string disableWarningMsg = "\n<i>To disable warnings from Easy Save, go to Window > Easy Save 3 > Settings, and uncheck 'Log Warnings'</i>";

		[Token(Token = "0x4000A0F")]
		private const string disableErrorMsg = "\n<i>To disable these error messages from Easy Save, go to Window > Easy Save 3 > Settings, and uncheck 'Log Errors'</i>";

		[Token(Token = "0x4000A10")]
		private const char indentChar = '-';

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x16207DC", Offset = "0x16207DC", VA = "0x16207DC")]
		public static void Log(string msg, [Optional] UnityEngine.Object context, int indent = 0)
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x1617634", Offset = "0x1617634", VA = "0x1617634")]
		public static void LogWarning(string msg, [Optional] UnityEngine.Object context, int indent = 0)
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x1623FF8", Offset = "0x1623FF8", VA = "0x1623FF8")]
		public static void LogError(string msg, [Optional] UnityEngine.Object context, int indent = 0)
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x16243B8", Offset = "0x16243B8", VA = "0x16243B8")]
		private static string Indent(int size)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D9")]
	public static class ES3Hash
	{
		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x162478C", Offset = "0x162478C", VA = "0x162478C")]
		public static string SHA1Hash(string input)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DA")]
	public abstract class EncryptionAlgorithm
	{
		[Token(Token = "0x6000B58")]
		public abstract void Encrypt(Stream input, Stream output, string password, int bufferSize);

		[Token(Token = "0x6000B59")]
		public abstract void Decrypt(Stream input, Stream output, string password, int bufferSize);

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x17C363C", Offset = "0x17C363C", VA = "0x17C363C")]
		protected static void CopyStream(Stream input, Stream output, int bufferSize)
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x17C3724", Offset = "0x17C3724", VA = "0x17C3724")]
		protected EncryptionAlgorithm()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class AESEncryptionAlgorithm : EncryptionAlgorithm
	{
		[Token(Token = "0x4000A11")]
		private const int ivSize = 16;

		[Token(Token = "0x4000A12")]
		private const int keySize = 16;

		[Token(Token = "0x4000A13")]
		private const int pwIterations = 100;

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x161F688", Offset = "0x161F688", VA = "0x161F688", Slot = "4")]
		public override void Encrypt(Stream input, Stream output, string password, int bufferSize)
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x161FAAC", Offset = "0x161FAAC", VA = "0x161FAAC", Slot = "5")]
		public override void Decrypt(Stream input, Stream output, string password, int bufferSize)
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x161FEA4", Offset = "0x161FEA4", VA = "0x161FEA4")]
		public AESEncryptionAlgorithm()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class UnbufferedCryptoStream : MemoryStream
	{
		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Stream stream;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly bool isReadStream;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string password;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int bufferSize;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EncryptionAlgorithm alg;

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x17C372C", Offset = "0x17C372C", VA = "0x17C372C")]
		public UnbufferedCryptoStream(Stream stream, bool isReadStream, string password, int bufferSize, EncryptionAlgorithm alg)
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x17C37F8", Offset = "0x17C37F8", VA = "0x17C37F8", Slot = "14")]
		protected override void Dispose(bool disposing)
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public struct ES3Data
	{
		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ES3Type type;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public byte[] bytes;

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xD04954", Offset = "0xD04954", VA = "0xD04954")]
		public ES3Data(Type type, byte[] bytes)
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xD0495C", Offset = "0xD0495C", VA = "0xD0495C")]
		public ES3Data(ES3Type type, byte[] bytes)
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public static class ES3IO
	{
		[Token(Token = "0x20003BD")]
		public enum ES3FileMode
		{
			[Token(Token = "0x4000D40")]
			Read,
			[Token(Token = "0x4000D41")]
			Write,
			[Token(Token = "0x4000D42")]
			Append
		}

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string persistentDataPath;

		[Token(Token = "0x4000A1C")]
		internal const string backupFileSuffix = ".bac";

		[Token(Token = "0x4000A1D")]
		internal const string temporaryFileSuffix = ".tmp";

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x1624924", Offset = "0x1624924", VA = "0x1624924")]
		public static DateTime GetTimestamp(string filePath)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x1624A04", Offset = "0x1624A04", VA = "0x1624A04")]
		public static string GetExtension(string path)
		{
			return null;
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x1624A6C", Offset = "0x1624A6C", VA = "0x1624A6C")]
		public static void DeleteFile(string filePath)
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x16249FC", Offset = "0x16249FC", VA = "0x16249FC")]
		public static bool FileExists(string filePath)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x1624AF0", Offset = "0x1624AF0", VA = "0x1624AF0")]
		public static void MoveFile(string sourcePath, string destPath)
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x1624AF8", Offset = "0x1624AF8", VA = "0x1624AF8")]
		public static void CopyFile(string sourcePath, string destPath)
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x1624B00", Offset = "0x1624B00", VA = "0x1624B00")]
		public static void MoveDirectory(string sourcePath, string destPath)
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x1624740", Offset = "0x1624740", VA = "0x1624740")]
		public static void CreateDirectory(string directoryPath)
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x1624B08", Offset = "0x1624B08", VA = "0x1624B08")]
		public static bool DirectoryExists(string directoryPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x162463C", Offset = "0x162463C", VA = "0x162463C")]
		public static string GetDirectoryPath(string path, char seperator = '/')
		{
			return null;
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x1624B10", Offset = "0x1624B10", VA = "0x1624B10")]
		public static bool UsesForwardSlash(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x1624B6C", Offset = "0x1624B6C", VA = "0x1624B6C")]
		public static string CombinePathAndFilename(string directoryPath, string fileOrDirectoryName)
		{
			return null;
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x1624C28", Offset = "0x1624C28", VA = "0x1624C28")]
		public static string[] GetDirectories(string path, bool getFullPaths = true)
		{
			return null;
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x1624D88", Offset = "0x1624D88", VA = "0x1624D88")]
		public static void DeleteDirectory(string directoryPath)
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x1624E10", Offset = "0x1624E10", VA = "0x1624E10")]
		public static string[] GetFiles(string path, bool getFullPaths = true)
		{
			return null;
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x1624F3C", Offset = "0x1624F3C", VA = "0x1624F3C")]
		public static byte[] ReadAllBytes(string path)
		{
			return null;
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x1624F44", Offset = "0x1624F44", VA = "0x1624F44")]
		public static void WriteAllBytes(string path, byte[] bytes)
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x1624F4C", Offset = "0x1624F4C", VA = "0x1624F4C")]
		public static void CommitBackup(ES3Settings settings)
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class ES3Prefab : MonoBehaviour
	{
		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long prefabId;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3RefIdDictionary localRefs;

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x1628A2C", Offset = "0x1628A2C", VA = "0x1628A2C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x1628D48", Offset = "0x1628D48", VA = "0x1628D48")]
		public long Get(UnityEngine.Object obj)
		{
			return default(long);
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x1628DC8", Offset = "0x1628DC8", VA = "0x1628DC8")]
		public long Add(UnityEngine.Object obj)
		{
			return default(long);
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x1628EF0", Offset = "0x1628EF0", VA = "0x1628EF0")]
		public Dictionary<string, string> GetReferences()
		{
			return null;
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x16290E4", Offset = "0x16290E4", VA = "0x16290E4")]
		public void ApplyReferences(Dictionary<long, long> localToGlobal)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x1628E94", Offset = "0x1628E94", VA = "0x1628E94")]
		public static long GetNewRefID()
		{
			return default(long);
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x16295A0", Offset = "0x16295A0", VA = "0x16295A0")]
		public ES3Prefab()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E0")]
	[DisallowMultipleComponent]
	public abstract class ES3ReferenceMgrBase : MonoBehaviour
	{
		[Token(Token = "0x20003BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA9D0", Offset = "0xBCA9D0")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4000D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.Object obj;

			[Token(Token = "0x4000D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<KeyValuePair<long, UnityEngine.Object>, bool> <>9__0;

			[Token(Token = "0x60014D4")]
			[Address(RVA = "0x162A720", Offset = "0x162A720", VA = "0x162A720")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x60014D5")]
			[Address(RVA = "0x162B0CC", Offset = "0x162B0CC", VA = "0x162B0CC")]
			internal bool <Remove>b__0(KeyValuePair<long, UnityEngine.Object> kvp)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA9E0", Offset = "0xBCA9E0")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4000D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public long referenceID;

			[Token(Token = "0x4000D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<KeyValuePair<UnityEngine.Object, long>, bool> <>9__0;

			[Token(Token = "0x60014D6")]
			[Address(RVA = "0x162A9B8", Offset = "0x162A9B8", VA = "0x162A9B8")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x60014D7")]
			[Address(RVA = "0x162B148", Offset = "0x162B148", VA = "0x162B148")]
			internal bool <Remove>b__0(KeyValuePair<UnityEngine.Object, long> kvp)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20003C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA9F0", Offset = "0xBCA9F0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<long, UnityEngine.Object>, bool> <>9__29_0;

			[Token(Token = "0x4000D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<long, UnityEngine.Object>, long> <>9__29_1;

			[Token(Token = "0x60014D9")]
			[Address(RVA = "0x162B014", Offset = "0x162B014", VA = "0x162B014")]
			public <>c()
			{
			}

			[Token(Token = "0x60014DA")]
			[Address(RVA = "0x162B01C", Offset = "0x162B01C", VA = "0x162B01C")]
			internal bool <RemoveNullValues>b__29_0(KeyValuePair<long, UnityEngine.Object> pair)
			{
				return default(bool);
			}

			[Token(Token = "0x60014DB")]
			[Address(RVA = "0x162B088", Offset = "0x162B088", VA = "0x162B088")]
			internal long <RemoveNullValues>b__29_1(KeyValuePair<long, UnityEngine.Object> pair)
			{
				return default(long);
			}
		}

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object _lock;

		[Token(Token = "0x4000A21")]
		public const string referencePropertyName = "_ES3Ref";

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ES3ReferenceMgrBase _current;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static System.Random rng;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool openPrefabs;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<ES3Prefab> prefabs;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public ES3IdRefDictionary idRef;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ES3RefIdDictionary _refId;

		[Token(Token = "0x170000E2")]
		public static ES3ReferenceMgrBase Current
		{
			[Token(Token = "0x6000B7D")]
			[Address(RVA = "0x16212B0", Offset = "0x16212B0", VA = "0x16212B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E3")]
		public bool IsInitialised
		{
			[Token(Token = "0x6000B7E")]
			[Address(RVA = "0x16296EC", Offset = "0x16296EC", VA = "0x16296EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E4")]
		public ES3RefIdDictionary refId
		{
			[Token(Token = "0x6000B7F")]
			[Address(RVA = "0x1629750", Offset = "0x1629750", VA = "0x1629750")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B80")]
			[Address(RVA = "0x16298E8", Offset = "0x16298E8", VA = "0x16298E8")]
			set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public ES3GlobalReferences GlobalReferences
		{
			[Token(Token = "0x6000B81")]
			[Address(RVA = "0x16298F0", Offset = "0x16298F0", VA = "0x16298F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x16298F8", Offset = "0x16298F8", VA = "0x16298F8")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x1629B5C", Offset = "0x1629B5C", VA = "0x1629B5C")]
		public void Merge(ES3ReferenceMgrBase otherMgr)
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x1629C60", Offset = "0x1629C60", VA = "0x1629C60")]
		public long Get(UnityEngine.Object obj)
		{
			return default(long);
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x1629D20", Offset = "0x1629D20", VA = "0x1629D20")]
		internal UnityEngine.Object Get(long id, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x1629FC0", Offset = "0x1629FC0", VA = "0x1629FC0")]
		public UnityEngine.Object Get(long id, bool suppressWarnings = false)
		{
			return null;
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x162A110", Offset = "0x162A110", VA = "0x162A110")]
		public ES3Prefab GetPrefab(long id, bool suppressWarnings = false)
		{
			return null;
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x162A2A4", Offset = "0x162A2A4", VA = "0x162A2A4")]
		public long GetPrefab(ES3Prefab prefab, bool suppressWarnings = false)
		{
			return default(long);
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x1628BCC", Offset = "0x1628BCC", VA = "0x1628BCC")]
		public long Add(UnityEngine.Object obj)
		{
			return default(long);
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x16292B0", Offset = "0x16292B0", VA = "0x16292B0")]
		public long Add(UnityEngine.Object obj, long id)
		{
			return default(long);
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x162A3F8", Offset = "0x162A3F8", VA = "0x162A3F8")]
		public void AddPrefab(ES3Prefab prefab)
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x162A490", Offset = "0x162A490", VA = "0x162A490")]
		public void Remove(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x162A728", Offset = "0x162A728", VA = "0x162A728")]
		public void Remove(long referenceID)
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x162A9C0", Offset = "0x162A9C0", VA = "0x162A9C0")]
		public void RemoveNullValues()
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x162AC8C", Offset = "0x162AC8C", VA = "0x162AC8C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x162AD84", Offset = "0x162AD84", VA = "0x162AD84")]
		public bool Contains(UnityEngine.Object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x162ADF0", Offset = "0x162ADF0", VA = "0x162ADF0")]
		public bool Contains(long referenceID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x162AE58", Offset = "0x162AE58", VA = "0x162AE58")]
		public void ChangeId(long oldId, long newId)
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x162941C", Offset = "0x162941C", VA = "0x162941C")]
		internal static long GetNewRefID()
		{
			return default(long);
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x1628E8C", Offset = "0x1628E8C", VA = "0x1628E8C")]
		internal static bool CanBeSaved(UnityEngine.Object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x162AED8", Offset = "0x162AED8", VA = "0x162AED8")]
		protected ES3ReferenceMgrBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E1")]
	public class ES3IdRefDictionary : ES3SerializableDictionary<long, UnityEngine.Object>
	{
		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x1625278", Offset = "0x1625278", VA = "0x1625278", Slot = "42")]
		protected override bool KeysAreEqual(long a, long b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x1625284", Offset = "0x1625284", VA = "0x1625284", Slot = "43")]
		protected override bool ValuesAreEqual(UnityEngine.Object a, UnityEngine.Object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x16252FC", Offset = "0x16252FC", VA = "0x16252FC")]
		public ES3IdRefDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E2")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBC8E70", Offset = "0xBC8E70")]
	public class ES3RefIdDictionary : ES3SerializableDictionary<UnityEngine.Object, long>
	{
		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x1629668", Offset = "0x1629668", VA = "0x1629668", Slot = "42")]
		protected override bool KeysAreEqual(UnityEngine.Object a, UnityEngine.Object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x16296E0", Offset = "0x16296E0", VA = "0x16296E0", Slot = "43")]
		protected override bool ValuesAreEqual(long a, long b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x1629618", Offset = "0x1629618", VA = "0x1629618")]
		public ES3RefIdDictionary()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public static class ES3Reflection
	{
		[Token(Token = "0x20003C1")]
		public struct ES3ReflectedMember
		{
			[Token(Token = "0x4000D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private FieldInfo fieldInfo;

			[Token(Token = "0x4000D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private PropertyInfo propertyInfo;

			[Token(Token = "0x4000D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isProperty;

			[Token(Token = "0x1700019B")]
			public bool IsNull
			{
				[Token(Token = "0x60014DC")]
				[Address(RVA = "0xD049CC", Offset = "0xD049CC", VA = "0xD049CC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700019C")]
			public string Name
			{
				[Token(Token = "0x60014DD")]
				[Address(RVA = "0xD049D4", Offset = "0xD049D4", VA = "0xD049D4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019D")]
			public Type MemberType
			{
				[Token(Token = "0x60014DE")]
				[Address(RVA = "0xD049DC", Offset = "0xD049DC", VA = "0xD049DC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019E")]
			public bool IsPublic
			{
				[Token(Token = "0x60014DF")]
				[Address(RVA = "0xD049E4", Offset = "0xD049E4", VA = "0xD049E4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700019F")]
			public bool IsProtected
			{
				[Token(Token = "0x60014E0")]
				[Address(RVA = "0xD049EC", Offset = "0xD049EC", VA = "0xD049EC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170001A0")]
			public bool IsStatic
			{
				[Token(Token = "0x60014E1")]
				[Address(RVA = "0xD049F4", Offset = "0xD049F4", VA = "0xD049F4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60014E2")]
			[Address(RVA = "0xD049FC", Offset = "0xD049FC", VA = "0xD049FC")]
			public ES3ReflectedMember(object fieldPropertyInfo)
			{
			}

			[Token(Token = "0x60014E3")]
			[Address(RVA = "0xD04A04", Offset = "0xD04A04", VA = "0xD04A04")]
			public void SetValue(object obj, object value)
			{
			}

			[Token(Token = "0x60014E4")]
			[Address(RVA = "0xD04A0C", Offset = "0xD04A0C", VA = "0xD04A0C")]
			public object GetValue(object obj)
			{
				return null;
			}
		}

		[Token(Token = "0x20003C2")]
		public class ES3ReflectedMethod
		{
			[Token(Token = "0x4000D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private MethodInfo method;

			[Token(Token = "0x60014E5")]
			[Address(RVA = "0x162D850", Offset = "0x162D850", VA = "0x162D850")]
			public ES3ReflectedMethod(Type type, string methodName, Type[] genericParameters, Type[] parameterTypes)
			{
			}

			[Token(Token = "0x60014E6")]
			[Address(RVA = "0x162E20C", Offset = "0x162E20C", VA = "0x162E20C")]
			public ES3ReflectedMethod(Type type, string methodName, Type[] genericParameters, Type[] parameterTypes, BindingFlags bindingAttr)
			{
			}

			[Token(Token = "0x60014E7")]
			[Address(RVA = "0x162E2A0", Offset = "0x162E2A0", VA = "0x162E2A0")]
			public object Invoke(object obj, [Optional] object[] parameters)
			{
				return null;
			}
		}

		[Token(Token = "0x20003C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAA00", Offset = "0xBCAA00")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4000D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type derivedType;

			[Token(Token = "0x60014E8")]
			[Address(RVA = "0x162D760", Offset = "0x162D760", VA = "0x162D760")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x60014E9")]
			[Address(RVA = "0x162DF4C", Offset = "0x162DF4C", VA = "0x162DF4C")]
			internal bool <GetDerivedTypes>b__2(<>f__AnonymousType0<Assembly, Type> <>h__TransparentIdentifier0)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20003C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAA10", Offset = "0xBCAA10")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Assembly, IEnumerable<Type>> <>9__27_0;

			[Token(Token = "0x4000D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Assembly, Type, <>f__AnonymousType0<Assembly, Type>> <>9__27_1;

			[Token(Token = "0x4000D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<<>f__AnonymousType0<Assembly, Type>, Type> <>9__27_3;

			[Token(Token = "0x60014EB")]
			[Address(RVA = "0x162DE58", Offset = "0x162DE58", VA = "0x162DE58")]
			public <>c()
			{
			}

			[Token(Token = "0x60014EC")]
			[Address(RVA = "0x162DE60", Offset = "0x162DE60", VA = "0x162DE60")]
			internal IEnumerable<Type> <GetDerivedTypes>b__27_0(Assembly assembly)
			{
				return null;
			}

			[Token(Token = "0x60014ED")]
			[Address(RVA = "0x162DE84", Offset = "0x162DE84", VA = "0x162DE84")]
			internal <>f__AnonymousType0<Assembly, Type> <GetDerivedTypes>b__27_1(Assembly assembly, Type type)
			{
				return null;
			}

			[Token(Token = "0x60014EE")]
			[Address(RVA = "0x162DF00", Offset = "0x162DF00", VA = "0x162DF00")]
			internal Type <GetDerivedTypes>b__27_3(<>f__AnonymousType0<Assembly, Type> <>h__TransparentIdentifier0)
			{
				return null;
			}
		}

		[Token(Token = "0x4000A28")]
		public const string memberFieldPrefix = "m_";

		[Token(Token = "0x4000A29")]
		public const string componentTagFieldName = "tag";

		[Token(Token = "0x4000A2A")]
		public const string componentNameFieldName = "name";

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] excludedPropertyNames;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Type serializableAttributeType;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Type serializeFieldAttributeType;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Type obsoleteAttributeType;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly Type nonSerializedAttributeType;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly Type es3SerializableAttributeType;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly Type es3NonSerializableAttributeType;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Type[] EmptyTypes;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Assembly[] _assemblies;

		[Token(Token = "0x170000E6")]
		private static Assembly[] Assemblies
		{
			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0x162B1A0", Offset = "0x162B1A0", VA = "0x162B1A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x162B424", Offset = "0x162B424", VA = "0x162B424")]
		public static Type[] GetElementTypes(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x162B5F4", Offset = "0x162B5F4", VA = "0x162B5F4")]
		public static List<FieldInfo> GetSerializableFields(Type type, [Optional] List<FieldInfo> serializableFields, bool safe = true, [Optional] string[] memberNames, BindingFlags bindings = BindingFlags.DeclaredOnly | BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)
		{
			return null;
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x162BF2C", Offset = "0x162BF2C", VA = "0x162BF2C")]
		public static List<PropertyInfo> GetSerializableProperties(Type type, [Optional] List<PropertyInfo> serializableProperties, bool safe = true, [Optional] string[] memberNames, BindingFlags bindings = BindingFlags.DeclaredOnly | BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)
		{
			return null;
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x162BB9C", Offset = "0x162BB9C", VA = "0x162BB9C")]
		public static bool TypeIsSerializable(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x162C7A0", Offset = "0x162C7A0", VA = "0x162C7A0")]
		public static object CreateInstance(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x162C910", Offset = "0x162C910", VA = "0x162C910")]
		public static object CreateInstance(Type type, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x162CA94", Offset = "0x162CA94", VA = "0x162CA94")]
		public static Array ArrayCreateInstance(Type type, int length)
		{
			return null;
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x162CB20", Offset = "0x162CB20", VA = "0x162CB20")]
		public static Array ArrayCreateInstance(Type type, int[] dimensions)
		{
			return null;
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x162CB28", Offset = "0x162CB28", VA = "0x162CB28")]
		public static Type MakeGenericType(Type type, Type genericParam)
		{
			return null;
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x162CBF4", Offset = "0x162CBF4", VA = "0x162CBF4")]
		public static ES3ReflectedMember[] GetSerializableMembers(Type type, bool safe = true, [Optional] string[] memberNames)
		{
			return null;
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x162D07C", Offset = "0x162D07C", VA = "0x162D07C")]
		public static ES3ReflectedMember GetES3ReflectedProperty(Type type, string propertyName)
		{
			return default(ES3ReflectedMember);
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x162D260", Offset = "0x162D260", VA = "0x162D260")]
		public static ES3ReflectedMember GetES3ReflectedMember(Type type, string fieldName)
		{
			return default(ES3ReflectedMember);
		}

		[Token(Token = "0x6000BAA")]
		public static IList<T> GetInstances<T>()
		{
			return null;
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x162D44C", Offset = "0x162D44C", VA = "0x162D44C")]
		public static IList<Type> GetDerivedTypes(Type derivedType)
		{
			return null;
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x162BB7C", Offset = "0x162BB7C", VA = "0x162BB7C")]
		public static bool IsAssignableFrom(Type a, Type b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x162D768", Offset = "0x162D768", VA = "0x162D768")]
		public static Type GetGenericTypeDefinition(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x162B5B4", Offset = "0x162B5B4", VA = "0x162B5B4")]
		public static Type[] GetGenericArguments(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x162D788", Offset = "0x162D788", VA = "0x162D788")]
		public static int GetArrayRank(Type type)
		{
			return default(int);
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x162D7A8", Offset = "0x162D7A8", VA = "0x162D7A8")]
		public static string GetAssemblyQualifiedName(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x162D7C8", Offset = "0x162D7C8", VA = "0x162D7C8")]
		public static ES3ReflectedMethod GetMethod(Type type, string methodName, Type[] genericParameters, Type[] parameterTypes)
		{
			return null;
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x162C694", Offset = "0x162C694", VA = "0x162C694")]
		public static bool TypeIsArray(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x162B5D4", Offset = "0x162B5D4", VA = "0x162B5D4")]
		public static Type GetElementType(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x162D8D4", Offset = "0x162D8D4", VA = "0x162D8D4")]
		public static bool IsAbstract(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x162D8EC", Offset = "0x162D8EC", VA = "0x162D8EC")]
		public static bool IsInterface(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x162B594", Offset = "0x162B594", VA = "0x162B594")]
		public static bool IsGenericType(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x162C67C", Offset = "0x162C67C", VA = "0x162C67C")]
		public static bool IsValueType(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x162D904", Offset = "0x162D904", VA = "0x162D904")]
		public static bool IsEnum(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x162C6AC", Offset = "0x162C6AC", VA = "0x162C6AC")]
		public static bool HasParameterlessConstructor(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x162D924", Offset = "0x162D924", VA = "0x162D924")]
		public static ConstructorInfo GetParameterlessConstructor(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x162D9A0", Offset = "0x162D9A0", VA = "0x162D9A0")]
		public static string GetShortAssemblyQualifiedName(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x162D108", Offset = "0x162D108", VA = "0x162D108")]
		public static PropertyInfo GetProperty(Type type, string propertyName)
		{
			return null;
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x162D2EC", Offset = "0x162D2EC", VA = "0x162D2EC")]
		public static FieldInfo GetField(Type type, string fieldName)
		{
			return null;
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x162C580", Offset = "0x162C580", VA = "0x162C580")]
		public static bool IsPrimitive(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x162BB70", Offset = "0x162BB70", VA = "0x162BB70")]
		public static bool AttributeIsDefined(MemberInfo info, Type attributeType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x162C55C", Offset = "0x162C55C", VA = "0x162C55C")]
		public static bool AttributeIsDefined(Type type, Type attributeType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x162DA84", Offset = "0x162DA84", VA = "0x162DA84")]
		public static bool ImplementsInterface(Type type, Type interfaceType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x162BF0C", Offset = "0x162BF0C", VA = "0x162BF0C")]
		public static Type BaseType(Type type)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20001E4")]
	public abstract class ES3SerializableDictionary<TKey, TVal> : Dictionary<TKey, TVal>, ISerializationCallbackReceiver
	{
		[Serializable]
		[Token(Token = "0x20003C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAA20", Offset = "0xBCAA20")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<KeyValuePair<TKey, TVal>, bool> <>9__6_0;

			[Token(Token = "0x4000D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<KeyValuePair<TKey, TVal>, TKey> <>9__6_1;

			[Token(Token = "0x60014F0")]
			public <>c()
			{
			}

			[Token(Token = "0x60014F1")]
			internal bool <RemoveNullValues>b__6_0(KeyValuePair<TKey, TVal> pair)
			{
				return default(bool);
			}

			[Token(Token = "0x60014F2")]
			internal TKey <RemoveNullValues>b__6_1(KeyValuePair<TKey, TVal> pair)
			{
				return (TKey)null;
			}
		}

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<TKey> _Keys;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<TVal> _Values;

		[Token(Token = "0x6000BC4")]
		protected abstract bool KeysAreEqual(TKey a, TKey b);

		[Token(Token = "0x6000BC5")]
		protected abstract bool ValuesAreEqual(TVal a, TVal b);

		[Token(Token = "0x6000BC6")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000BC7")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000BC8")]
		public int RemoveNullValues()
		{
			return default(int);
		}

		[Token(Token = "0x6000BC9")]
		public bool ChangeKey(TKey oldKey, TKey newKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCA")]
		protected ES3SerializableDictionary()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class ES3BinaryReader : ES3Reader
	{
		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BinaryReader baseReader;

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x162063C", Offset = "0x162063C", VA = "0x162063C")]
		internal ES3BinaryReader(Stream stream, ES3Settings settings, bool readHeaderAndFooter = true)
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x16206E8", Offset = "0x16206E8", VA = "0x16206E8", Slot = "21")]
		public override string ReadPropertyName()
		{
			return null;
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x162099C", Offset = "0x162099C", VA = "0x162099C", Slot = "22")]
		protected override Type ReadKeyPrefix(bool ignoreType = false)
		{
			return null;
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x1620C28", Offset = "0x1620C28", VA = "0x1620C28", Slot = "23")]
		protected override void ReadKeySuffix()
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x1620D00", Offset = "0x1620D00", VA = "0x1620D00", Slot = "27")]
		internal override bool StartReadObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x1620D3C", Offset = "0x1620D3C", VA = "0x1620D3C", Slot = "28")]
		internal override void EndReadObject()
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x1620D44", Offset = "0x1620D44", VA = "0x1620D44", Slot = "29")]
		internal override bool StartReadDictionary()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x1620D70", Offset = "0x1620D70", VA = "0x1620D70", Slot = "30")]
		internal override void EndReadDictionary()
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x1620D74", Offset = "0x1620D74", VA = "0x1620D74", Slot = "31")]
		internal override bool StartReadDictionaryKey()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x1620DA0", Offset = "0x1620DA0", VA = "0x1620DA0", Slot = "32")]
		internal override void EndReadDictionaryKey()
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x1620DA4", Offset = "0x1620DA4", VA = "0x1620DA4", Slot = "33")]
		internal override void StartReadDictionaryValue()
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x1620DA8", Offset = "0x1620DA8", VA = "0x1620DA8", Slot = "34")]
		internal override bool EndReadDictionaryValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x1620DB0", Offset = "0x1620DB0", VA = "0x1620DB0", Slot = "35")]
		internal override bool StartReadCollection()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x1620DDC", Offset = "0x1620DDC", VA = "0x1620DDC", Slot = "36")]
		internal override void EndReadCollection()
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x1620DE0", Offset = "0x1620DE0", VA = "0x1620DE0", Slot = "37")]
		internal override bool StartReadCollectionItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x1620DE8", Offset = "0x1620DE8", VA = "0x1620DE8", Slot = "38")]
		internal override bool EndReadCollectionItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x1620DF0", Offset = "0x1620DF0", VA = "0x1620DF0", Slot = "25")]
		internal override bool Goto(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x1620E8C", Offset = "0x1620E8C", VA = "0x1620E8C")]
		protected void Reset()
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x1620EC0", Offset = "0x1620EC0", VA = "0x1620EC0", Slot = "24")]
		internal override byte[] ReadElement(bool skip = false)
		{
			return null;
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x1621120", Offset = "0x1621120", VA = "0x1621120")]
		private void ReadElement(BinaryWriter writer, bool skip = false)
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x1621198", Offset = "0x1621198", VA = "0x1621198", Slot = "20")]
		internal override long Read_ref()
		{
			return default(long);
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x16215C8", Offset = "0x16215C8", VA = "0x16215C8", Slot = "18")]
		internal override string Read_string()
		{
			return null;
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x1621610", Offset = "0x1621610", VA = "0x1621610", Slot = "8")]
		internal override char Read_char()
		{
			return default(char);
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x1621658", Offset = "0x1621658", VA = "0x1621658", Slot = "6")]
		internal override float Read_float()
		{
			return default(float);
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x16216A0", Offset = "0x16216A0", VA = "0x16216A0", Slot = "5")]
		internal override int Read_int()
		{
			return default(int);
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x16216D8", Offset = "0x16216D8", VA = "0x16216D8", Slot = "7")]
		internal override bool Read_bool()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x162171C", Offset = "0x162171C", VA = "0x162171C", Slot = "9")]
		internal override decimal Read_decimal()
		{
			return default(decimal);
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x1621764", Offset = "0x1621764", VA = "0x1621764", Slot = "10")]
		internal override double Read_double()
		{
			return default(double);
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x16217AC", Offset = "0x16217AC", VA = "0x16217AC", Slot = "11")]
		internal override long Read_long()
		{
			return default(long);
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x16217F4", Offset = "0x16217F4", VA = "0x16217F4", Slot = "12")]
		internal override ulong Read_ulong()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x162183C", Offset = "0x162183C", VA = "0x162183C", Slot = "17")]
		internal override uint Read_uint()
		{
			return default(uint);
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x1621884", Offset = "0x1621884", VA = "0x1621884", Slot = "13")]
		internal override byte Read_byte()
		{
			return default(byte);
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x16218C8", Offset = "0x16218C8", VA = "0x16218C8", Slot = "14")]
		internal override sbyte Read_sbyte()
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x162190C", Offset = "0x162190C", VA = "0x162190C", Slot = "15")]
		internal override short Read_short()
		{
			return default(short);
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x1621954", Offset = "0x1621954", VA = "0x1621954", Slot = "16")]
		internal override ushort Read_ushort()
		{
			return default(ushort);
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x162199C", Offset = "0x162199C", VA = "0x162199C", Slot = "19")]
		internal override byte[] Read_byteArray()
		{
			return null;
		}

		[Token(Token = "0x6000BEF")]
		[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCE158", Offset = "0xBCE158")]
		public override T Read<T>(ES3Type type)
		{
			return (T)null;
		}

		[Token(Token = "0x6000BF0")]
		[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCE16C", Offset = "0xBCE16C")]
		public override void ReadInto<T>(object obj, ES3Type type)
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x1620B64", Offset = "0x1620B64", VA = "0x1620B64")]
		private int Read7BitEncodedInt()
		{
			return default(int);
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x1621A00", Offset = "0x1621A00", VA = "0x1621A00", Slot = "26")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class ES3JSONReader : ES3Reader
	{
		[Token(Token = "0x4000A37")]
		private const char endOfStreamChar = '\uffff';

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StreamReader baseReader;

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x162534C", Offset = "0x162534C", VA = "0x162534C")]
		internal ES3JSONReader(Stream stream, ES3Settings settings, bool readHeaderAndFooter = true)
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x1625588", Offset = "0x1625588", VA = "0x1625588", Slot = "21")]
		public override string ReadPropertyName()
		{
			return null;
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x1625AD0", Offset = "0x1625AD0", VA = "0x1625AD0", Slot = "22")]
		protected override Type ReadKeyPrefix(bool ignoreType = false)
		{
			return null;
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x1625C6C", Offset = "0x1625C6C", VA = "0x1625C6C", Slot = "23")]
		protected override void ReadKeySuffix()
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x1625C7C", Offset = "0x1625C7C", VA = "0x1625C7C", Slot = "27")]
		internal override bool StartReadObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x1625F50", Offset = "0x1625F50", VA = "0x1625F50", Slot = "28")]
		internal override void EndReadObject()
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x1625F7C", Offset = "0x1625F7C", VA = "0x1625F7C", Slot = "29")]
		internal override bool StartReadDictionary()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x1625F8C", Offset = "0x1625F8C", VA = "0x1625F8C", Slot = "30")]
		internal override void EndReadDictionary()
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x1625F90", Offset = "0x1625F90", VA = "0x1625F90", Slot = "31")]
		internal override bool StartReadDictionaryKey()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x1625FD4", Offset = "0x1625FD4", VA = "0x1625FD4", Slot = "32")]
		internal override void EndReadDictionaryKey()
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x1625FDC", Offset = "0x1625FDC", VA = "0x1625FDC", Slot = "33")]
		internal override void StartReadDictionaryValue()
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x1625FE0", Offset = "0x1625FE0", VA = "0x1625FE0", Slot = "34")]
		internal override bool EndReadDictionaryValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x16260C8", Offset = "0x16260C8", VA = "0x16260C8", Slot = "35")]
		internal override bool StartReadCollection()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x16260D0", Offset = "0x16260D0", VA = "0x16260D0", Slot = "36")]
		internal override void EndReadCollection()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x16260D4", Offset = "0x16260D4", VA = "0x16260D4", Slot = "37")]
		internal override bool StartReadCollectionItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x1626118", Offset = "0x1626118", VA = "0x1626118", Slot = "38")]
		internal override bool EndReadCollectionItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x1626200", Offset = "0x1626200", VA = "0x1626200", Slot = "25")]
		internal override bool Goto(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x162629C", Offset = "0x162629C", VA = "0x162629C")]
		protected void Reset()
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x1626334", Offset = "0x1626334", VA = "0x1626334")]
		private void ReadString(StreamWriter writer, bool skip = false)
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x1626488", Offset = "0x1626488", VA = "0x1626488", Slot = "24")]
		internal override byte[] ReadElement(bool skip = false)
		{
			return null;
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x1626424", Offset = "0x1626424", VA = "0x1626424")]
		private char ReadOrSkipChar(StreamWriter writer, bool skip)
		{
			return default(char);
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x16257C8", Offset = "0x16257C8", VA = "0x16257C8")]
		private char ReadCharIgnoreWhitespace(bool ignoreTrailingWhitespace = true)
		{
			return default(char);
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x1625CA8", Offset = "0x1625CA8", VA = "0x1625CA8")]
		private bool ReadNullOrCharIgnoreWhitespace(char expectedChar)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x16258D4", Offset = "0x16258D4", VA = "0x16258D4")]
		private char ReadCharIgnoreWhitespace(char expectedChar)
		{
			return default(char);
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x16269E0", Offset = "0x16269E0", VA = "0x16269E0")]
		private bool ReadQuotationMarkOrNullIgnoreWhitespace()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x1626BB4", Offset = "0x1626BB4", VA = "0x1626BB4")]
		private char PeekCharIgnoreWhitespace(char expectedChar)
		{
			return default(char);
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x1625734", Offset = "0x1625734", VA = "0x1625734")]
		private char PeekCharIgnoreWhitespace()
		{
			return default(char);
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x1626DAC", Offset = "0x1626DAC", VA = "0x1626DAC")]
		private void SkipWhiteSpace()
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x16254B4", Offset = "0x16254B4", VA = "0x16254B4")]
		private void SkipOpeningBraceOfFile()
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x16269A8", Offset = "0x16269A8", VA = "0x16269A8")]
		private static bool IsWhiteSpace(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x1626924", Offset = "0x1626924", VA = "0x1626924")]
		private static bool IsOpeningBrace(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x1626938", Offset = "0x1626938", VA = "0x1626938")]
		private static bool IsEndOfValue(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x16257B4", Offset = "0x16257B4", VA = "0x16257B4")]
		private static bool IsTerminator(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x16258A8", Offset = "0x16258A8", VA = "0x16258A8")]
		private static bool IsQuotationMark(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x1626E2C", Offset = "0x1626E2C", VA = "0x1626E2C")]
		private static bool IsEndOfStream(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x1626E3C", Offset = "0x1626E3C", VA = "0x1626E3C")]
		private string GetValueString()
		{
			return null;
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x1626F18", Offset = "0x1626F18", VA = "0x1626F18", Slot = "18")]
		internal override string Read_string()
		{
			return null;
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x16270D4", Offset = "0x16270D4", VA = "0x16270D4", Slot = "20")]
		internal override long Read_ref()
		{
			return default(long);
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x1627204", Offset = "0x1627204", VA = "0x1627204", Slot = "8")]
		internal override char Read_char()
		{
			return default(char);
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x1627288", Offset = "0x1627288", VA = "0x1627288", Slot = "6")]
		internal override float Read_float()
		{
			return default(float);
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x162730C", Offset = "0x162730C", VA = "0x162730C", Slot = "5")]
		internal override int Read_int()
		{
			return default(int);
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x1627324", Offset = "0x1627324", VA = "0x1627324", Slot = "7")]
		internal override bool Read_bool()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x162739C", Offset = "0x162739C", VA = "0x162739C", Slot = "9")]
		internal override decimal Read_decimal()
		{
			return default(decimal);
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x1627448", Offset = "0x1627448", VA = "0x1627448", Slot = "10")]
		internal override double Read_double()
		{
			return default(double);
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x16274F4", Offset = "0x16274F4", VA = "0x16274F4", Slot = "11")]
		internal override long Read_long()
		{
			return default(long);
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x162750C", Offset = "0x162750C", VA = "0x162750C", Slot = "12")]
		internal override ulong Read_ulong()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x1627524", Offset = "0x1627524", VA = "0x1627524", Slot = "17")]
		internal override uint Read_uint()
		{
			return default(uint);
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x162753C", Offset = "0x162753C", VA = "0x162753C", Slot = "13")]
		internal override byte Read_byte()
		{
			return default(byte);
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x1627558", Offset = "0x1627558", VA = "0x1627558", Slot = "14")]
		internal override sbyte Read_sbyte()
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x1627574", Offset = "0x1627574", VA = "0x1627574", Slot = "15")]
		internal override short Read_short()
		{
			return default(short);
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x1627590", Offset = "0x1627590", VA = "0x1627590", Slot = "16")]
		internal override ushort Read_ushort()
		{
			return default(ushort);
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x16275AC", Offset = "0x16275AC", VA = "0x16275AC", Slot = "19")]
		internal override byte[] Read_byteArray()
		{
			return null;
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x1627630", Offset = "0x1627630", VA = "0x1627630", Slot = "26")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class ES3GlobalReferences : ScriptableObject
	{
		[Token(Token = "0x170000E7")]
		public static ES3GlobalReferences Instance
		{
			[Token(Token = "0x6000C28")]
			[Address(RVA = "0x1624768", Offset = "0x1624768", VA = "0x1624768")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x1624770", Offset = "0x1624770", VA = "0x1624770")]
		public UnityEngine.Object Get(long id)
		{
			return null;
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x1624778", Offset = "0x1624778", VA = "0x1624778")]
		public long GetOrAdd(UnityEngine.Object obj)
		{
			return default(long);
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x1624780", Offset = "0x1624780", VA = "0x1624780")]
		public void RemoveInvalidKeys()
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x1624784", Offset = "0x1624784", VA = "0x1624784")]
		public ES3GlobalReferences()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class ES3DefaultSettings : MonoBehaviour
	{
		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public ES3SerializableSettings settings;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoUpdateReferences;

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x1624424", Offset = "0x1624424", VA = "0x1624424")]
		public ES3DefaultSettings()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public enum ES3FileMode
	{
		[Token(Token = "0x4000A3C")]
		Read,
		[Token(Token = "0x4000A3D")]
		Write,
		[Token(Token = "0x4000A3E")]
		Append
	}
	[Token(Token = "0x20001EA")]
	public class ES3FileStream : FileStream
	{
		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isDisposed;

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x1624434", Offset = "0x1624434", VA = "0x1624434")]
		public ES3FileStream(string path, ES3FileMode fileMode, int bufferSize, bool useAsync)
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x1624508", Offset = "0x1624508", VA = "0x1624508")]
		protected static string GetPath(string path, ES3FileMode fileMode)
		{
			return null;
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x162460C", Offset = "0x162460C", VA = "0x162460C")]
		protected static FileMode GetFileMode(ES3FileMode fileMode)
		{
			return default(FileMode);
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x162462C", Offset = "0x162462C", VA = "0x162462C")]
		protected static FileAccess GetFileAccess(ES3FileMode fileMode)
		{
			return default(FileAccess);
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x1624748", Offset = "0x1624748", VA = "0x1624748", Slot = "14")]
		protected override void Dispose(bool disposing)
		{
		}
	}
	[Token(Token = "0x20001EB")]
	internal class ES3PlayerPrefsStream : MemoryStream
	{
		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string path;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool append;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool isWriteStream;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool isDisposed;

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x1628618", Offset = "0x1628618", VA = "0x1628618")]
		public ES3PlayerPrefsStream(string path)
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x1628754", Offset = "0x1628754", VA = "0x1628754")]
		public ES3PlayerPrefsStream(string path, int bufferSize, bool append = false)
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x1628668", Offset = "0x1628668", VA = "0x1628668")]
		private static byte[] GetData(string path, bool isWriteStream)
		{
			return null;
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x16287AC", Offset = "0x16287AC", VA = "0x16287AC", Slot = "14")]
		protected override void Dispose(bool disposing)
		{
		}
	}
	[Token(Token = "0x20001EC")]
	internal class ES3ResourcesStream : MemoryStream
	{
		[Token(Token = "0x170000E8")]
		public bool Exists
		{
			[Token(Token = "0x6000C37")]
			[Address(RVA = "0x162E2BC", Offset = "0x162E2BC", VA = "0x162E2BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x162E2E0", Offset = "0x162E2E0", VA = "0x162E2E0")]
		public ES3ResourcesStream(string path)
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x162E310", Offset = "0x162E310", VA = "0x162E310")]
		private static byte[] GetData(string path)
		{
			return null;
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x162E3FC", Offset = "0x162E3FC", VA = "0x162E3FC", Slot = "14")]
		protected override void Dispose(bool disposing)
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public static class ES3Stream
	{
		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x162E408", Offset = "0x162E408", VA = "0x162E408")]
		public static Stream CreateStream(ES3Settings settings, ES3FileMode fileMode)
		{
			return null;
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x161E240", Offset = "0x161E240", VA = "0x161E240")]
		public static Stream CreateStream(Stream stream, ES3Settings settings, ES3FileMode fileMode)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EE")]
	public class ES3Member
	{
		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type type;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isProperty;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Reflection.ES3ReflectedMember reflectedMember;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool useReflection;

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x16284AC", Offset = "0x16284AC", VA = "0x16284AC")]
		public ES3Member(string name, Type type, bool isProperty)
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x162850C", Offset = "0x162850C", VA = "0x162850C")]
		public ES3Member(ES3Reflection.ES3ReflectedMember reflectedMember)
		{
		}
	}
	[Token(Token = "0x20001EF")]
	[Preserve]
	public static class ES3TypeMgr
	{
		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object _lock;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCB804", Offset = "0xBCB804")]
		public static Dictionary<Type, ES3Type> types;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static ES3Type lastAccessedType;

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x1622588", Offset = "0x1622588", VA = "0x1622588")]
		public static ES3Type GetOrCreateES3Type(Type type, bool throwException = true)
		{
			return null;
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x162F308", Offset = "0x162F308", VA = "0x162F308")]
		public static ES3Type GetES3Type(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x162F404", Offset = "0x162F404", VA = "0x162F404")]
		internal static void Add(Type type, ES3Type es3Type)
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x162EA08", Offset = "0x162EA08", VA = "0x162EA08")]
		internal static ES3Type CreateES3Type(Type type, bool throwException = true)
		{
			return null;
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x162E80C", Offset = "0x162E80C", VA = "0x162E80C")]
		internal static void Init()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class ES3WebClass
	{
		[Token(Token = "0x20003C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAA30", Offset = "0xBCAA30")]
		private sealed class <SendWebRequest>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ES3WebClass <>4__this;

			[Token(Token = "0x4000D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityWebRequest webRequest;

			[Token(Token = "0x170001A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014F6")]
				[Address(RVA = "0x17C35CC", Offset = "0x17C35CC", VA = "0x17C35CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014F8")]
				[Address(RVA = "0x17C3634", Offset = "0x17C3634", VA = "0x17C3634", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014F3")]
			[Address(RVA = "0x17C34E4", Offset = "0x17C34E4", VA = "0x17C34E4")]
			[DebuggerHidden]
			public <SendWebRequest>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60014F4")]
			[Address(RVA = "0x17C3544", Offset = "0x17C3544", VA = "0x17C3544", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014F5")]
			[Address(RVA = "0x17C3548", Offset = "0x17C3548", VA = "0x17C3548", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014F7")]
			[Address(RVA = "0x17C35D4", Offset = "0x17C35D4", VA = "0x17C35D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string url;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string apiKey;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<KeyValuePair<string, string>> formData;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected UnityWebRequest _webRequest;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isDone;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string error;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long errorCode;

		[Token(Token = "0x170000E9")]
		public float uploadProgress
		{
			[Token(Token = "0x6000C45")]
			[Address(RVA = "0x17C2F04", Offset = "0x17C2F04", VA = "0x17C2F04")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000EA")]
		public float downloadProgress
		{
			[Token(Token = "0x6000C46")]
			[Address(RVA = "0x17C2F1C", Offset = "0x17C2F1C", VA = "0x17C2F1C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000EB")]
		public bool isError
		{
			[Token(Token = "0x6000C47")]
			[Address(RVA = "0x17C2F34", Offset = "0x17C2F34", VA = "0x17C2F34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x17C2F74", Offset = "0x17C2F74", VA = "0x17C2F74")]
		protected ES3WebClass(string url, string apiKey)
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x17C3020", Offset = "0x17C3020", VA = "0x17C3020")]
		public void AddPOSTField(string fieldName, string value)
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x17C30BC", Offset = "0x17C30BC", VA = "0x17C30BC")]
		protected string GetUser(string user, string password)
		{
			return null;
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x17C3160", Offset = "0x17C3160", VA = "0x17C3160")]
		protected WWWForm CreateWWWForm()
		{
			return null;
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x17C327C", Offset = "0x17C327C", VA = "0x17C327C")]
		protected bool HandleError(UnityWebRequest webRequest, bool errorIfDataIsDownloaded)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x17C344C", Offset = "0x17C344C", VA = "0x17C344C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCE180", Offset = "0xBCE180")]
		protected IEnumerator SendWebRequest(UnityWebRequest webRequest)
		{
			return null;
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x17C3510", Offset = "0x17C3510", VA = "0x17C3510", Slot = "4")]
		protected virtual void Reset()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	internal enum ES3SpecialByte : byte
	{
		[Token(Token = "0x4000A54")]
		Null = 0,
		[Token(Token = "0x4000A55")]
		Bool = 1,
		[Token(Token = "0x4000A56")]
		Byte = 2,
		[Token(Token = "0x4000A57")]
		Sbyte = 3,
		[Token(Token = "0x4000A58")]
		Char = 4,
		[Token(Token = "0x4000A59")]
		Decimal = 5,
		[Token(Token = "0x4000A5A")]
		Double = 6,
		[Token(Token = "0x4000A5B")]
		Float = 7,
		[Token(Token = "0x4000A5C")]
		Int = 8,
		[Token(Token = "0x4000A5D")]
		Uint = 9,
		[Token(Token = "0x4000A5E")]
		Long = 10,
		[Token(Token = "0x4000A5F")]
		Ulong = 11,
		[Token(Token = "0x4000A60")]
		Short = 12,
		[Token(Token = "0x4000A61")]
		Ushort = 13,
		[Token(Token = "0x4000A62")]
		String = 14,
		[Token(Token = "0x4000A63")]
		ByteArray = 15,
		[Token(Token = "0x4000A64")]
		Collection = 128,
		[Token(Token = "0x4000A65")]
		Dictionary = 129,
		[Token(Token = "0x4000A66")]
		CollectionItem = 130,
		[Token(Token = "0x4000A67")]
		Object = 254,
		[Token(Token = "0x4000A68")]
		Terminator = byte.MaxValue
	}
	[Token(Token = "0x20001F2")]
	internal static class ES3Binary
	{
		[Token(Token = "0x4000A69")]
		internal const string ObjectTerminator = ".";

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly Dictionary<ES3SpecialByte, Type> IdToType;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly Dictionary<Type, ES3SpecialByte> TypeToId;

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x161FEAC", Offset = "0x161FEAC", VA = "0x161FEAC")]
		internal static ES3SpecialByte TypeToByte(Type type)
		{
			return default(ES3SpecialByte);
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x161FF54", Offset = "0x161FF54", VA = "0x161FF54")]
		internal static Type ByteToType(ES3SpecialByte b)
		{
			return null;
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x161FFB8", Offset = "0x161FFB8", VA = "0x161FFB8")]
		internal static Type ByteToType(byte b)
		{
			return null;
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x1620094", Offset = "0x1620094", VA = "0x1620094")]
		internal static bool IsPrimitive(ES3SpecialByte b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001F3")]
	internal class ES3BinaryWriter : ES3Writer
	{
		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal BinaryWriter baseWriter;

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x1621A20", Offset = "0x1621A20", VA = "0x1621A20")]
		public ES3BinaryWriter(Stream stream, ES3Settings settings)
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x1621A2C", Offset = "0x1621A2C", VA = "0x1621A2C")]
		internal ES3BinaryWriter(Stream stream, ES3Settings settings, bool writeHeaderAndFooter, bool mergeKeys)
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x1621AF0", Offset = "0x1621AF0", VA = "0x1621AF0", Slot = "39")]
		internal override void Write(string key, Type type, byte[] value)
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x1622038", Offset = "0x1622038", VA = "0x1622038", Slot = "41")]
		[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCE1E4", Offset = "0xBCE1E4")]
		public override void Write(Type type, string key, object value)
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x16227C4", Offset = "0x16227C4", VA = "0x16227C4", Slot = "46")]
		public override void WriteProperty(string name, object value, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x1622C74", Offset = "0x1622C74", VA = "0x1622C74", Slot = "49")]
		[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCE1F8", Offset = "0xBCE1F8")]
		public override void WriteProperty(string name, object value, ES3Type type, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x1623134", Offset = "0x1623134", VA = "0x1623134", Slot = "50")]
		[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCE20C", Offset = "0xBCE20C")]
		public override void WritePropertyByRef(string name, UnityEngine.Object value)
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x1623684", Offset = "0x1623684", VA = "0x1623684", Slot = "24")]
		internal override void WritePrimitive(int value)
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x16236C8", Offset = "0x16236C8", VA = "0x16236C8", Slot = "25")]
		internal override void WritePrimitive(float value)
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x1623724", Offset = "0x1623724", VA = "0x1623724", Slot = "26")]
		internal override void WritePrimitive(bool value)
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x1623774", Offset = "0x1623774", VA = "0x1623774", Slot = "27")]
		internal override void WritePrimitive(decimal value)
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x16237D8", Offset = "0x16237D8", VA = "0x16237D8", Slot = "28")]
		internal override void WritePrimitive(double value)
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x1623834", Offset = "0x1623834", VA = "0x1623834", Slot = "29")]
		internal override void WritePrimitive(long value)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x1623888", Offset = "0x1623888", VA = "0x1623888", Slot = "30")]
		internal override void WritePrimitive(ulong value)
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x16238DC", Offset = "0x16238DC", VA = "0x16238DC", Slot = "31")]
		internal override void WritePrimitive(uint value)
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x1623930", Offset = "0x1623930", VA = "0x1623930", Slot = "32")]
		internal override void WritePrimitive(byte value)
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x1623980", Offset = "0x1623980", VA = "0x1623980", Slot = "33")]
		internal override void WritePrimitive(sbyte value)
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x16239D0", Offset = "0x16239D0", VA = "0x16239D0", Slot = "34")]
		internal override void WritePrimitive(short value)
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x1623A24", Offset = "0x1623A24", VA = "0x1623A24", Slot = "35")]
		internal override void WritePrimitive(ushort value)
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x1623A78", Offset = "0x1623A78", VA = "0x1623A78", Slot = "36")]
		internal override void WritePrimitive(char value)
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x1623ACC", Offset = "0x1623ACC", VA = "0x1623ACC", Slot = "38")]
		internal override void WritePrimitive(byte[] value)
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x1623B3C", Offset = "0x1623B3C", VA = "0x1623B3C", Slot = "37")]
		internal override void WritePrimitive(string value)
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x1621FDC", Offset = "0x1621FDC", VA = "0x1621FDC")]
		private void Write7BitEncodedInt(int value)
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x1623B90", Offset = "0x1623B90", VA = "0x1623B90", Slot = "5")]
		internal override void WriteNull()
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x1623BB4", Offset = "0x1623BB4", VA = "0x1623BB4", Slot = "23")]
		internal override void WriteRawProperty(string name, byte[] value)
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x1623C28", Offset = "0x1623C28", VA = "0x1623C28", Slot = "6")]
		internal override void StartWriteFile()
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x1623C30", Offset = "0x1623C30", VA = "0x1623C30", Slot = "7")]
		internal override void EndWriteFile()
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x1623CA0", Offset = "0x1623CA0", VA = "0x1623CA0", Slot = "10")]
		internal override void StartWriteProperty(string name)
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x1623CE4", Offset = "0x1623CE4", VA = "0x1623CE4", Slot = "11")]
		internal override void EndWriteProperty(string name)
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x1623CEC", Offset = "0x1623CEC", VA = "0x1623CEC", Slot = "8")]
		internal override void StartWriteObject(string name)
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x1623D28", Offset = "0x1623D28", VA = "0x1623D28", Slot = "9")]
		internal override void EndWriteObject(string name)
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x1623DA8", Offset = "0x1623DA8", VA = "0x1623DA8", Slot = "12")]
		internal override void StartWriteCollection()
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x1623DE4", Offset = "0x1623DE4", VA = "0x1623DE4", Slot = "13")]
		internal override void EndWriteCollection()
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x1623E24", Offset = "0x1623E24", VA = "0x1623E24", Slot = "14")]
		internal override void StartWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x1623E28", Offset = "0x1623E28", VA = "0x1623E28", Slot = "15")]
		internal override void EndWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x1623E4C", Offset = "0x1623E4C", VA = "0x1623E4C", Slot = "16")]
		internal override void StartWriteDictionary()
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x1623E90", Offset = "0x1623E90", VA = "0x1623E90", Slot = "17")]
		internal override void EndWriteDictionary()
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x1623ED8", Offset = "0x1623ED8", VA = "0x1623ED8", Slot = "18")]
		internal override void StartWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x1623EDC", Offset = "0x1623EDC", VA = "0x1623EDC", Slot = "19")]
		internal override void EndWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x1623EE0", Offset = "0x1623EE0", VA = "0x1623EE0", Slot = "20")]
		internal override void StartWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x1623EE4", Offset = "0x1623EE4", VA = "0x1623EE4", Slot = "21")]
		internal override void EndWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x1623EE8", Offset = "0x1623EE8", VA = "0x1623EE8", Slot = "22")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	internal class ES3CacheWriter : ES3Writer
	{
		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ES3File es3File;

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x1623F08", Offset = "0x1623F08", VA = "0x1623F08")]
		internal ES3CacheWriter(ES3Settings settings, bool writeHeaderAndFooter, bool mergeKeys)
		{
		}

		[Token(Token = "0x6000C7F")]
		public override void Write<T>(string key, object value)
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x1623FA8", Offset = "0x1623FA8", VA = "0x1623FA8", Slot = "39")]
		internal override void Write(string key, Type type, byte[] value)
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x16241B0", Offset = "0x16241B0", VA = "0x16241B0", Slot = "41")]
		[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xBCE220", Offset = "0xBCE220")]
		public override void Write(Type type, string key, object value)
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x1624220", Offset = "0x1624220", VA = "0x1624220", Slot = "24")]
		internal override void WritePrimitive(int value)
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x1624224", Offset = "0x1624224", VA = "0x1624224", Slot = "25")]
		internal override void WritePrimitive(float value)
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x1624228", Offset = "0x1624228", VA = "0x1624228", Slot = "26")]
		internal override void WritePrimitive(bool value)
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x162422C", Offset = "0x162422C", VA = "0x162422C", Slot = "27")]
		internal override void WritePrimitive(decimal value)
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x1624230", Offset = "0x1624230", VA = "0x1624230", Slot = "28")]
		internal override void WritePrimitive(double value)
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x1624234", Offset = "0x1624234", VA = "0x1624234", Slot = "29")]
		internal override void WritePrimitive(long value)
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x1624238", Offset = "0x1624238", VA = "0x1624238", Slot = "30")]
		internal override void WritePrimitive(ulong value)
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x162423C", Offset = "0x162423C", VA = "0x162423C", Slot = "31")]
		internal override void WritePrimitive(uint value)
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x1624240", Offset = "0x1624240", VA = "0x1624240", Slot = "32")]
		internal override void WritePrimitive(byte value)
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x1624244", Offset = "0x1624244", VA = "0x1624244", Slot = "33")]
		internal override void WritePrimitive(sbyte value)
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x1624248", Offset = "0x1624248", VA = "0x1624248", Slot = "34")]
		internal override void WritePrimitive(short value)
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x162424C", Offset = "0x162424C", VA = "0x162424C", Slot = "35")]
		internal override void WritePrimitive(ushort value)
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x1624250", Offset = "0x1624250", VA = "0x1624250", Slot = "36")]
		internal override void WritePrimitive(char value)
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x1624254", Offset = "0x1624254", VA = "0x1624254", Slot = "38")]
		internal override void WritePrimitive(byte[] value)
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x1624258", Offset = "0x1624258", VA = "0x1624258", Slot = "37")]
		internal override void WritePrimitive(string value)
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x162425C", Offset = "0x162425C", VA = "0x162425C", Slot = "5")]
		internal override void WriteNull()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x1624260", Offset = "0x1624260", VA = "0x1624260")]
		private static bool CharacterRequiresEscaping(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x1624268", Offset = "0x1624268", VA = "0x1624268")]
		private void WriteCommaIfRequired()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x162426C", Offset = "0x162426C", VA = "0x162426C", Slot = "23")]
		internal override void WriteRawProperty(string name, byte[] value)
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x1624270", Offset = "0x1624270", VA = "0x1624270", Slot = "6")]
		internal override void StartWriteFile()
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x1624274", Offset = "0x1624274", VA = "0x1624274", Slot = "7")]
		internal override void EndWriteFile()
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x1624278", Offset = "0x1624278", VA = "0x1624278", Slot = "10")]
		internal override void StartWriteProperty(string name)
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x162427C", Offset = "0x162427C", VA = "0x162427C", Slot = "11")]
		internal override void EndWriteProperty(string name)
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x1624280", Offset = "0x1624280", VA = "0x1624280", Slot = "8")]
		internal override void StartWriteObject(string name)
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x1624284", Offset = "0x1624284", VA = "0x1624284", Slot = "9")]
		internal override void EndWriteObject(string name)
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x1624288", Offset = "0x1624288", VA = "0x1624288", Slot = "12")]
		internal override void StartWriteCollection()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x162428C", Offset = "0x162428C", VA = "0x162428C", Slot = "13")]
		internal override void EndWriteCollection()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x1624290", Offset = "0x1624290", VA = "0x1624290", Slot = "14")]
		internal override void StartWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x1624294", Offset = "0x1624294", VA = "0x1624294", Slot = "15")]
		internal override void EndWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x1624298", Offset = "0x1624298", VA = "0x1624298", Slot = "16")]
		internal override void StartWriteDictionary()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x162429C", Offset = "0x162429C", VA = "0x162429C", Slot = "17")]
		internal override void EndWriteDictionary()
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x16242A0", Offset = "0x16242A0", VA = "0x16242A0", Slot = "18")]
		internal override void StartWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x16242A4", Offset = "0x16242A4", VA = "0x16242A4", Slot = "19")]
		internal override void EndWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x16242A8", Offset = "0x16242A8", VA = "0x16242A8", Slot = "20")]
		internal override void StartWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x16242AC", Offset = "0x16242AC", VA = "0x16242AC", Slot = "21")]
		internal override void EndWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x16242B0", Offset = "0x16242B0", VA = "0x16242B0", Slot = "22")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	internal class ES3JSONWriter : ES3Writer
	{
		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal StreamWriter baseWriter;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isFirstProperty;

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x162764C", Offset = "0x162764C", VA = "0x162764C")]
		public ES3JSONWriter(Stream stream, ES3Settings settings)
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x1627658", Offset = "0x1627658", VA = "0x1627658")]
		internal ES3JSONWriter(Stream stream, ES3Settings settings, bool writeHeaderAndFooter, bool mergeKeys)
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x1627714", Offset = "0x1627714", VA = "0x1627714", Slot = "24")]
		internal override void WritePrimitive(int value)
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x1627738", Offset = "0x1627738", VA = "0x1627738", Slot = "25")]
		internal override void WritePrimitive(float value)
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x16277EC", Offset = "0x16277EC", VA = "0x16277EC", Slot = "26")]
		internal override void WritePrimitive(bool value)
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x162786C", Offset = "0x162786C", VA = "0x162786C", Slot = "27")]
		internal override void WritePrimitive(decimal value)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x1627914", Offset = "0x1627914", VA = "0x1627914", Slot = "28")]
		internal override void WritePrimitive(double value)
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x16279C8", Offset = "0x16279C8", VA = "0x16279C8", Slot = "29")]
		internal override void WritePrimitive(long value)
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x16279EC", Offset = "0x16279EC", VA = "0x16279EC", Slot = "30")]
		internal override void WritePrimitive(ulong value)
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x1627A10", Offset = "0x1627A10", VA = "0x1627A10", Slot = "31")]
		internal override void WritePrimitive(uint value)
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x1627A34", Offset = "0x1627A34", VA = "0x1627A34", Slot = "32")]
		internal override void WritePrimitive(byte value)
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x1627ACC", Offset = "0x1627ACC", VA = "0x1627ACC", Slot = "33")]
		internal override void WritePrimitive(sbyte value)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x1627B64", Offset = "0x1627B64", VA = "0x1627B64", Slot = "34")]
		internal override void WritePrimitive(short value)
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x1627BFC", Offset = "0x1627BFC", VA = "0x1627BFC", Slot = "35")]
		internal override void WritePrimitive(ushort value)
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x1627C94", Offset = "0x1627C94", VA = "0x1627C94", Slot = "36")]
		internal override void WritePrimitive(char value)
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x1627CD8", Offset = "0x1627CD8", VA = "0x1627CD8", Slot = "38")]
		internal override void WritePrimitive(byte[] value)
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x1627D64", Offset = "0x1627D64", VA = "0x1627D64", Slot = "37")]
		internal override void WritePrimitive(string value)
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x1627F5C", Offset = "0x1627F5C", VA = "0x1627F5C", Slot = "5")]
		internal override void WriteNull()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x1627FC0", Offset = "0x1627FC0", VA = "0x1627FC0")]
		private static bool CharacterRequiresEscaping(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x1627FF4", Offset = "0x1627FF4", VA = "0x1627FF4")]
		private void WriteCommaIfRequired()
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x16280D0", Offset = "0x16280D0", VA = "0x16280D0", Slot = "23")]
		internal override void WriteRawProperty(string name, byte[] value)
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x162816C", Offset = "0x162816C", VA = "0x162816C", Slot = "6")]
		internal override void StartWriteFile()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x16281B4", Offset = "0x16281B4", VA = "0x16281B4", Slot = "7")]
		internal override void EndWriteFile()
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x162820C", Offset = "0x162820C", VA = "0x162820C", Slot = "10")]
		internal override void StartWriteProperty(string name)
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x16282CC", Offset = "0x16282CC", VA = "0x16282CC", Slot = "11")]
		internal override void EndWriteProperty(string name)
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x16282D4", Offset = "0x16282D4", VA = "0x16282D4", Slot = "8")]
		internal override void StartWriteObject(string name)
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x1628318", Offset = "0x1628318", VA = "0x1628318", Slot = "9")]
		internal override void EndWriteObject(string name)
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x1628360", Offset = "0x1628360", VA = "0x1628360", Slot = "12")]
		internal override void StartWriteCollection()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x16283A4", Offset = "0x16283A4", VA = "0x16283A4", Slot = "13")]
		internal override void EndWriteCollection()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x16283E8", Offset = "0x16283E8", VA = "0x16283E8", Slot = "14")]
		internal override void StartWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x1628414", Offset = "0x1628414", VA = "0x1628414", Slot = "15")]
		internal override void EndWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x1628418", Offset = "0x1628418", VA = "0x1628418", Slot = "16")]
		internal override void StartWriteDictionary()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x1628428", Offset = "0x1628428", VA = "0x1628428", Slot = "17")]
		internal override void EndWriteDictionary()
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x1628438", Offset = "0x1628438", VA = "0x1628438", Slot = "18")]
		internal override void StartWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x1628464", Offset = "0x1628464", VA = "0x1628464", Slot = "19")]
		internal override void EndWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x1628488", Offset = "0x1628488", VA = "0x1628488", Slot = "20")]
		internal override void StartWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x162848C", Offset = "0x162848C", VA = "0x162848C", Slot = "21")]
		internal override void EndWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x1628490", Offset = "0x1628490", VA = "0x1628490", Slot = "22")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x1628040", Offset = "0x1628040", VA = "0x1628040")]
		public void WriteNewlineAndTabs()
		{
		}
	}
}
namespace CurvedUI
{
	[Token(Token = "0x20001F6")]
	public class CurvedUIEventSystem : EventSystem
	{
		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CurvedUIEventSystem instance;

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xFAED80", Offset = "0xFAED80", VA = "0xFAED80", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xFAEDE4", Offset = "0xFAEDE4", VA = "0xFAEDE4", Slot = "17")]
		protected override void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xFAEDF0", Offset = "0xFAEDF0", VA = "0xFAEDF0")]
		public CurvedUIEventSystem()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public static class CurvedUIExtensionMethods
	{
		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xFAEE58", Offset = "0xFAEE58", VA = "0xFAEE58")]
		public static bool AlmostEqual(this Vector3 a, Vector3 b, double accuracy = 0.01)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xFAEF24", Offset = "0xFAEF24", VA = "0xFAEF24")]
		public static float Remap(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xFAEF40", Offset = "0xFAEF40", VA = "0xFAEF40")]
		public static float RemapAndClamp(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xFAEFEC", Offset = "0xFAEFEC", VA = "0xFAEFEC")]
		public static float Remap(this int value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xFAF00C", Offset = "0xFAF00C", VA = "0xFAF00C")]
		public static double Remap(this double value, double from1, double to1, double from2, double to2)
		{
			return default(double);
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xFAEF64", Offset = "0xFAEF64", VA = "0xFAEF64")]
		public static float Clamp(this float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xFAF028", Offset = "0xFAF028", VA = "0xFAF028")]
		public static float Clamp(this int value, int min, int max)
		{
			return default(float);
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xFAF0B0", Offset = "0xFAF0B0", VA = "0xFAF0B0")]
		public static int Abs(this int value)
		{
			return default(int);
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xFAF118", Offset = "0xFAF118", VA = "0xFAF118")]
		public static float Abs(this float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xFAF184", Offset = "0xFAF184", VA = "0xFAF184")]
		public static int ToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xFAF1F4", Offset = "0xFAF1F4", VA = "0xFAF1F4")]
		public static int FloorToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xFAF264", Offset = "0xFAF264", VA = "0xFAF264")]
		public static int CeilToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xFAF2D4", Offset = "0xFAF2D4", VA = "0xFAF2D4")]
		public static Vector3 ModifyX(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xFAF30C", Offset = "0xFAF30C", VA = "0xFAF30C")]
		public static Vector3 ModifyY(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xFAF344", Offset = "0xFAF344", VA = "0xFAF344")]
		public static Vector3 ModifyZ(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xFAF37C", Offset = "0xFAF37C", VA = "0xFAF37C")]
		public static Vector2 ModifyVectorX(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xFAF41C", Offset = "0xFAF41C", VA = "0xFAF41C")]
		public static Vector2 ModifyVectorY(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xFAF4BC", Offset = "0xFAF4BC", VA = "0xFAF4BC")]
		public static void ResetTransform(this Transform trans)
		{
		}

		[Token(Token = "0x6000CE2")]
		public static T AddComponentIfMissing<T>(this GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000CE3")]
		public static T AddComponentIfMissing<T>(this Component go) where T : Component
		{
			return null;
		}
	}
	[Token(Token = "0x20001F8")]
	public class CurvedUIHandSwitcher : MonoBehaviour
	{
		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject LaserBeam;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCB828", Offset = "0xBCB828")]
		private bool autoSwitchHands;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCB874", Offset = "0xBCB874")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCB874", Offset = "0xBCB874")]
		private Transform leftHandOverride;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCB8E4", Offset = "0xBCB8E4")]
		private Transform rightHandOverride;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRInput.Controller activeCont;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool initialized;

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xFAF57C", Offset = "0xFAF57C", VA = "0xFAF57C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xFAFCD4", Offset = "0xFAFCD4", VA = "0xFAFCD4")]
		private bool IsButtonDownOnController(OVRInput.Controller cont, OVRInput.Controller cont2 = OVRInput.Controller.None)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xFAF9E4", Offset = "0xFAF9E4", VA = "0xFAF9E4")]
		private void SwitchHandTo(CurvedUIInputModule.Hand newHand)
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xFAFF4C", Offset = "0xFAFF4C", VA = "0xFAFF4C")]
		public CurvedUIHandSwitcher()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public class CurvedUIInputFieldCaret : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x20003C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAA40", Offset = "0xBCAA40")]
		private sealed class <CaretBlinker>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUIInputFieldCaret <>4__this;

			[Token(Token = "0x170001A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014FC")]
				[Address(RVA = "0xFB0BE4", Offset = "0xFB0BE4", VA = "0xFB0BE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014FE")]
				[Address(RVA = "0xFB0C4C", Offset = "0xFB0C4C", VA = "0xFB0C4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014F9")]
			[Address(RVA = "0xFB0790", Offset = "0xFB0790", VA = "0xFB0790")]
			[DebuggerHidden]
			public <CaretBlinker>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60014FA")]
			[Address(RVA = "0xFB0ABC", Offset = "0xFB0ABC", VA = "0xFB0ABC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014FB")]
			[Address(RVA = "0xFB0AC0", Offset = "0xFB0AC0", VA = "0xFB0AC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014FD")]
			[Address(RVA = "0xFB0BEC", Offset = "0xFB0BEC", VA = "0xFB0BEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputField myField;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int lastCharDist;

		[Token(Token = "0x170000EC")]
		public Color CaretColor
		{
			[Token(Token = "0x6000CF0")]
			[Address(RVA = "0xFB0A44", Offset = "0xFB0A44", VA = "0xFB0A44")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000CF1")]
			[Address(RVA = "0xFB0A50", Offset = "0xFB0A50", VA = "0xFB0A50")]
			set
			{
			}
		}

		[Token(Token = "0x170000ED")]
		public Color SelectionColor
		{
			[Token(Token = "0x6000CF2")]
			[Address(RVA = "0xFB0A5C", Offset = "0xFB0A5C", VA = "0xFB0A5C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0xFB0A68", Offset = "0xFB0A68", VA = "0xFB0A68")]
			set
			{
			}
		}

		[Token(Token = "0x170000EE")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0xFB0A74", Offset = "0xFB0A74", VA = "0xFB0A74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CF5")]
			[Address(RVA = "0xFB0A90", Offset = "0xFB0A90", VA = "0xFB0A90")]
			set
			{
			}
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xFAFF5C", Offset = "0xFAFF5C", VA = "0xFAFF5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xFAFFBC", Offset = "0xFAFFBC", VA = "0xFAFFBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xFB02FC", Offset = "0xFB02FC", VA = "0xFB02FC", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xFB0758", Offset = "0xFB0758", VA = "0xFB0758", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xFB06DC", Offset = "0xFB06DC", VA = "0xFB06DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCE374", Offset = "0xBCE374")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xFB03BC", Offset = "0xFB03BC", VA = "0xFB03BC")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xFAFFCC", Offset = "0xFAFFCC", VA = "0xFAFFCC")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xFB07BC", Offset = "0xFB07BC", VA = "0xFB07BC")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xFB0AAC", Offset = "0xFB0AAC", VA = "0xFB0AAC")]
		public CurvedUIInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public class CurvedUILaserBeam : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAA50", Offset = "0xBCAA50")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__3_0;

			[Token(Token = "0x6001500")]
			[Address(RVA = "0xFB11EC", Offset = "0xFB11EC", VA = "0xFB11EC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001501")]
			[Address(RVA = "0xFB11F4", Offset = "0xFB11F4", VA = "0xFB11F4")]
			internal bool <Update>b__3_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamDot;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool hideWhenNotAimingAtCanvas;

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xFB0C54", Offset = "0xFB0C54", VA = "0xFB0C54")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xFB117C", Offset = "0xFB117C", VA = "0xFB117C")]
		public CurvedUILaserBeam()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class CurvedUIPhysicsRaycaster : BaseRaycaster
	{
		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected int sortOrder;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private RaycastHit hitInfo;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RaycastResult result;

		[Token(Token = "0x170000EF")]
		public int CompoundEventMask
		{
			[Token(Token = "0x6000CFB")]
			[Address(RVA = "0xFB1810", Offset = "0xFB1810", VA = "0xFB1810")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F0")]
		public override Camera eventCamera
		{
			[Token(Token = "0x6000CFC")]
			[Address(RVA = "0xFB190C", Offset = "0xFB190C", VA = "0xFB190C", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		public virtual int Depth
		{
			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0xFB19D4", Offset = "0xFB19D4", VA = "0xFB19D4", Slot = "22")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F2")]
		public override int sortOrderPriority
		{
			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0xFB1A94", Offset = "0xFB1A94", VA = "0xFB1A94", Slot = "20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xFB12E8", Offset = "0xFB12E8", VA = "0xFB12E8")]
		protected CurvedUIPhysicsRaycaster()
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xFB12F8", Offset = "0xFB12F8", VA = "0xFB12F8", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class CurvedUIPointerEventData : PointerEventData
	{
		[Token(Token = "0x20003C9")]
		public enum ControllerType
		{
			[Token(Token = "0x4000D60")]
			NONE = -1,
			[Token(Token = "0x4000D61")]
			VIVE
		}

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public GameObject Controller;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Vector2 TouchPadAxis;

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xFB1A9C", Offset = "0xFB1A9C", VA = "0xFB1A9C")]
		public CurvedUIPointerEventData(EventSystem eventSystem)
		{
		}
	}
	[Token(Token = "0x20001FD")]
	public class CurvedUIRaycaster : GraphicRaycaster
	{
		[Serializable]
		[Token(Token = "0x20003CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAA60", Offset = "0xBCAA60")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__21_0;

			[Token(Token = "0x4000D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<Graphic> <>9__32_0;

			[Token(Token = "0x4000D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Comparison<Graphic> <>9__55_0;

			[Token(Token = "0x6001503")]
			[Address(RVA = "0xFBA298", Offset = "0xFBA298", VA = "0xFBA298")]
			public <>c()
			{
			}

			[Token(Token = "0x6001504")]
			[Address(RVA = "0xFBA2A0", Offset = "0xFBA2A0", VA = "0xFBA2A0")]
			internal bool <Update>b__21_0(GameObject obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001505")]
			[Address(RVA = "0xFBA364", Offset = "0xFBA364", VA = "0xFBA364")]
			internal int <FlatRaycastAndSort>b__32_0(Graphic g1, Graphic g2)
			{
				return default(int);
			}

			[Token(Token = "0x6001506")]
			[Address(RVA = "0xFBA3BC", Offset = "0xFBA3BC", VA = "0xFBA3BC")]
			internal int <GetObjectsHitByRay>b__55_0(Graphic g1, Graphic g2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool showDebug;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool overrideEventData;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Canvas myCanvas;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 cyllinderMidPoint;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<GameObject> objectsUnderPointer;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 lastCanvasPos;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject colliderContainer;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PointerEventData lastFrameEventData;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PointerEventData curEventData;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PointerEventData eventDataToUse;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Ray cachedRay;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Graphic gph;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<GameObject> selectablesUnderGaze;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<GameObject> selectablesUnderGazeLastFrame;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float objectsUnderGazeLastChangeTime;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool gazeClickExecuted;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		private bool pointingAtCanvas;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		private bool pointingAtCanvasLastFrame;

		[NonSerialized]
		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<Graphic> m_RaycastResults;

		[NonSerialized]
		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<Graphic> s_SortedGraphics;

		[Token(Token = "0x170000F3")]
		private Image GazeProgressImage
		{
			[Token(Token = "0x6000D13")]
			[Address(RVA = "0xFB2AE0", Offset = "0xFB2AE0", VA = "0xFB2AE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0xFB9840", Offset = "0xFB9840", VA = "0xFB9840")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xFB1B24", Offset = "0xFB1B24", VA = "0xFB1B24", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xFB1DCC", Offset = "0xFB1DCC", VA = "0xFB1DCC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xFB2588", Offset = "0xFB2588", VA = "0xFB2588", Slot = "22")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xFB2930", Offset = "0xFB2930", VA = "0xFB2930")]
		private void ProcessGazeTimedClick()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xFB2904", Offset = "0xFB2904", VA = "0xFB2904")]
		private void ResetGazeTimedClick()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xFB30D8", Offset = "0xFB30D8", VA = "0xFB30D8", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0xFB458C", Offset = "0xFB458C", VA = "0xFB458C", Slot = "23")]
		public virtual bool RaycastToCyllinderCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xFB4E54", Offset = "0xFB4E54", VA = "0xFB4E54", Slot = "24")]
		public virtual bool RaycastToCyllinderVerticalCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xFB556C", Offset = "0xFB556C", VA = "0xFB556C", Slot = "25")]
		public virtual bool RaycastToRingCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xFB5B1C", Offset = "0xFB5B1C", VA = "0xFB5B1C", Slot = "26")]
		public virtual bool RaycastToSphereCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xFB3F10", Offset = "0xFB3F10", VA = "0xFB3F10")]
		private void FlatRaycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xFB66AC", Offset = "0xFB66AC", VA = "0xFB66AC")]
		private static void FlatRaycastAndSort(Canvas canvas, Camera eventCamera, Vector2 pointerPosition, IList<Graphic> foundGraphics, List<Graphic> results)
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xFB205C", Offset = "0xFB205C", VA = "0xFB205C")]
		protected void CreateCollider()
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xFB8160", Offset = "0xFB8160", VA = "0xFB8160")]
		private void SetupMeshColliderUsingMesh(Mesh meshie)
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xFB6B6C", Offset = "0xFB6B6C", VA = "0xFB6B6C")]
		private GameObject CreateConvexCyllinderCollider(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xFB77F0", Offset = "0xFB77F0", VA = "0xFB77F0")]
		private Mesh CreateCyllinderColliderMesh(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xFB8210", Offset = "0xFB8210", VA = "0xFB8210")]
		private Mesh CreateSphereColliderMesh()
		{
			return null;
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xFB8D64", Offset = "0xFB8D64", VA = "0xFB8D64")]
		private bool IsInLayerMask(int layer, LayerMask layermask)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xFB4CA4", Offset = "0xFB4CA4", VA = "0xFB4CA4")]
		private LayerMask GetRaycastLayerMask()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xFB4D10", Offset = "0xFB4D10", VA = "0xFB4D10")]
		private float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xFB8DBC", Offset = "0xFB8DBC", VA = "0xFB8DBC")]
		private bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xFB8E8C", Offset = "0xFB8E8C", VA = "0xFB8E8C", Slot = "27")]
		protected virtual void ProcessMove(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xFB3904", Offset = "0xFB3904", VA = "0xFB3904")]
		protected void UpdateSelectedObjects(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xFB8EA4", Offset = "0xFB8EA4", VA = "0xFB8EA4")]
		protected void HandlePointerExitAndEnter(PointerEventData currentPointerData, GameObject newEnterTarget)
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xFB950C", Offset = "0xFB950C", VA = "0xFB950C")]
		protected static GameObject FindCommonRoot(GameObject g1, GameObject g2)
		{
			return null;
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0xFB96B4", Offset = "0xFB96B4", VA = "0xFB96B4")]
		private bool GetScreenSpacePointByRay(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0xFB1E5C", Offset = "0xFB1E5C", VA = "0xFB1E5C")]
		private bool CheckEventCamera()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0xFB9848", Offset = "0xFB9848", VA = "0xFB9848")]
		public void RebuildCollider()
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0xFB98B4", Offset = "0xFB98B4", VA = "0xFB98B4")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xFB9934", Offset = "0xFB9934", VA = "0xFB9934")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 screenPos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xFB9A44", Offset = "0xFB9A44", VA = "0xFB9A44")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xFB2B4C", Offset = "0xFB2B4C", VA = "0xFB2B4C")]
		public void Click()
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0xFB8A00", Offset = "0xFB8A00", VA = "0xFB8A00")]
		private void ModifyQuad(List<Vector3> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xFB9E70", Offset = "0xFB9E70", VA = "0xFB9E70")]
		private Vector3 TesselateQuad(List<Vector3> quad, float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xFBA064", Offset = "0xFBA064", VA = "0xFBA064")]
		public CurvedUIRaycaster()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBC8EA4", Offset = "0xBC8EA4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC8EA4", Offset = "0xBC8EA4")]
	public class CurvedUISettings : MonoBehaviour
	{
		[Token(Token = "0x20003CB")]
		public enum CurvedUIShape
		{
			[Token(Token = "0x4000D67")]
			CYLINDER,
			[Token(Token = "0x4000D68")]
			RING,
			[Token(Token = "0x4000D69")]
			SPHERE,
			[Token(Token = "0x4000D6A")]
			CYLINDER_VERTICAL
		}

		[Token(Token = "0x4000A9B")]
		public const string Version = "3.1p1";

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUIShape shape;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float quality;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool interactable;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool blocksRaycasts;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool forceUseBoxCollider;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int angle;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool preserveAspect;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int vertAngle;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float ringFill;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int ringExternalDiamater;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool ringFlipVertical;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int baseCircleSegments;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 savedRectSize;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float savedRadius;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas myCanvas;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x170000F5")]
		private RectTransform RectTransform
		{
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0xFBA4A0", Offset = "0xFBA4A0", VA = "0xFBA4A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		public int BaseCircleSegments
		{
			[Token(Token = "0x6000D39")]
			[Address(RVA = "0xFBBDD4", Offset = "0xFBBDD4", VA = "0xFBBDD4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F7")]
		public int Angle
		{
			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0xFBBDDC", Offset = "0xFBBDDC", VA = "0xFBBDDC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D3B")]
			[Address(RVA = "0xFBBDE4", Offset = "0xFBBDE4", VA = "0xFBBDE4")]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		public float Quality
		{
			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0xFBBDF8", Offset = "0xFBBDF8", VA = "0xFBBDF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D3D")]
			[Address(RVA = "0xFBBE00", Offset = "0xFBBE00", VA = "0xFBBE00")]
			set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		public CurvedUIShape Shape
		{
			[Token(Token = "0x6000D3E")]
			[Address(RVA = "0xFBBE1C", Offset = "0xFBBE1C", VA = "0xFBBE1C")]
			get
			{
				return default(CurvedUIShape);
			}
			[Token(Token = "0x6000D3F")]
			[Address(RVA = "0xFBBE24", Offset = "0xFBBE24", VA = "0xFBBE24")]
			set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public int VerticalAngle
		{
			[Token(Token = "0x6000D40")]
			[Address(RVA = "0xFBBE44", Offset = "0xFBBE44", VA = "0xFBBE44")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D41")]
			[Address(RVA = "0xFBBE4C", Offset = "0xFBBE4C", VA = "0xFBBE4C")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public float RingFill
		{
			[Token(Token = "0x6000D42")]
			[Address(RVA = "0xFBBE6C", Offset = "0xFBBE6C", VA = "0xFBBE6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D43")]
			[Address(RVA = "0xFBBE74", Offset = "0xFBBE74", VA = "0xFBBE74")]
			set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		public float SavedRadius
		{
			[Token(Token = "0x6000D44")]
			[Address(RVA = "0xFBAEB0", Offset = "0xFBAEB0", VA = "0xFBAEB0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000FD")]
		public int RingExternalDiameter
		{
			[Token(Token = "0x6000D45")]
			[Address(RVA = "0xFBBE90", Offset = "0xFBBE90", VA = "0xFBBE90")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D46")]
			[Address(RVA = "0xFBBE98", Offset = "0xFBBE98", VA = "0xFBBE98")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public bool RingFlipVertical
		{
			[Token(Token = "0x6000D47")]
			[Address(RVA = "0xFBBEB8", Offset = "0xFBBEB8", VA = "0xFBBEB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0xFBBEC0", Offset = "0xFBBEC0", VA = "0xFBBEC0")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public bool PreserveAspect
		{
			[Token(Token = "0x6000D49")]
			[Address(RVA = "0xFBBEEC", Offset = "0xFBBEEC", VA = "0xFBBEEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0xFBBEF4", Offset = "0xFBBEF4", VA = "0xFBBEF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public bool Interactable
		{
			[Token(Token = "0x6000D4B")]
			[Address(RVA = "0xFBBF20", Offset = "0xFBBF20", VA = "0xFBBF20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0xFBBF28", Offset = "0xFBBF28", VA = "0xFBBF28")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public bool ForceUseBoxCollider
		{
			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0xFBBF34", Offset = "0xFBBF34", VA = "0xFBBF34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0xFBBF3C", Offset = "0xFBBF3C", VA = "0xFBBF3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public bool BlocksRaycasts
		{
			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0xFBBF48", Offset = "0xFBBF48", VA = "0xFBBF48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D50")]
			[Address(RVA = "0xFBBF50", Offset = "0xFBBF50", VA = "0xFBBF50")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCF950", Offset = "0xBCF950")]
		public bool RaycastMyLayerOnly
		{
			[Token(Token = "0x6000D51")]
			[Address(RVA = "0xFBC038", Offset = "0xFBC038", VA = "0xFBC038")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D52")]
			[Address(RVA = "0xFBC040", Offset = "0xFBC040", VA = "0xFBC040")]
			set
			{
			}
		}

		[Token(Token = "0x17000104")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x6000D54")]
			[Address(RVA = "0xFBC100", Offset = "0xFBC100", VA = "0xFBC100")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000105")]
		public CurvedUIInputModule.CUIControlMethod ControlMethod
		{
			[Token(Token = "0x6000D56")]
			[Address(RVA = "0xFB94B0", Offset = "0xFB94B0", VA = "0xFB94B0")]
			get
			{
				return default(CurvedUIInputModule.CUIControlMethod);
			}
			[Token(Token = "0x6000D57")]
			[Address(RVA = "0xFBC2B0", Offset = "0xFBC2B0", VA = "0xFBC2B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000106")]
		public bool GazeUseTimedClick
		{
			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0xFBC608", Offset = "0xFBC608", VA = "0xFBC608")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0xFBC674", Offset = "0xFBC674", VA = "0xFBC674")]
			set
			{
			}
		}

		[Token(Token = "0x17000107")]
		public float GazeClickTimer
		{
			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0xFBC6E8", Offset = "0xFBC6E8", VA = "0xFBC6E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0xFBC754", Offset = "0xFBC754", VA = "0xFBC754")]
			set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public float GazeClickTimerDelay
		{
			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0xFBC84C", Offset = "0xFBC84C", VA = "0xFBC84C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D60")]
			[Address(RVA = "0xFBC8B8", Offset = "0xFBC8B8", VA = "0xFBC8B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public float GazeTimerProgress
		{
			[Token(Token = "0x6000D61")]
			[Address(RVA = "0xFBC9B0", Offset = "0xFBC9B0", VA = "0xFBC9B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xFBA414", Offset = "0xFBA414", VA = "0xFBA414")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xFBA564", Offset = "0xFBA564", VA = "0xFBA564")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0xFBA8B8", Offset = "0xFBA8B8", VA = "0xFBA8B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xFBA968", Offset = "0xFBA968", VA = "0xFBA968")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0xFBAA18", Offset = "0xFBAA18", VA = "0xFBAA18")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xFBAB6C", Offset = "0xFBAB6C", VA = "0xFBAB6C")]
		private void SetUIAngle(int newAngle)
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0xFBAD80", Offset = "0xFBAD80", VA = "0xFBAD80")]
		private Vector3 CanvasToCyllinder(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xFBAEE0", Offset = "0xFBAEE0", VA = "0xFBAEE0")]
		private Vector3 CanvasToCyllinderVertical(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0xFBB010", Offset = "0xFBB010", VA = "0xFBB010")]
		private Vector3 CanvasToRing(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xFBB148", Offset = "0xFBB148", VA = "0xFBB148")]
		private Vector3 CanvasToSphere(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xFBB330", Offset = "0xFBB330", VA = "0xFBB330")]
		public void AddEffectToChildren()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xFBB670", Offset = "0xFBB670", VA = "0xFBB670")]
		public Vector3 VertexPositionToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xFB3DF0", Offset = "0xFB3DF0", VA = "0xFB3DF0")]
		public Vector3 CanvasToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xFBB7A0", Offset = "0xFBB7A0", VA = "0xFBB7A0")]
		public Vector3 CanvasToCurvedCanvasNormal(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xFBBB20", Offset = "0xFBBB20", VA = "0xFBBB20")]
		public bool RaycastToCanvasSpace(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xFB1C50", Offset = "0xFB1C50", VA = "0xFB1C50")]
		public float GetCyllinderRadiusInCanvasSpace()
		{
			return default(float);
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xFB87CC", Offset = "0xFB87CC", VA = "0xFB87CC")]
		public Vector2 GetTesslationSize(bool modifiedByQuality = true)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xFBBCD0", Offset = "0xFBBCD0", VA = "0xFBBCD0")]
		private float GetSegmentsByAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xFBC044", Offset = "0xFBC044", VA = "0xFBC044")]
		public void SetAllChildrenDirty(bool recalculateCurveOnly = false)
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xFBC1F4", Offset = "0xFBC1F4", VA = "0xFBC1F4")]
		public void Click()
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0xFB1098", Offset = "0xFB1098", VA = "0xFB1098")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xFBC3B0", Offset = "0xFBC3B0", VA = "0xFBC3B0")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 pos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0xFBC4F8", Offset = "0xFBC4F8", VA = "0xFBC4F8")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xFBCA1C", Offset = "0xFBCA1C", VA = "0xFBCA1C")]
		public CurvedUISettings()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class CurvedUIVertexEffect : BaseMeshEffect
	{
		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCBA30", Offset = "0xBCBA30")]
		public bool DoNotTesselate;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Canvas myCanvas;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Graphic myGraphic;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text myText;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextMeshProUGUI myTMP;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUITMPSubmesh myTMPSubMesh;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_tesselationRequired;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool curvingRequired;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool TransformMisaligned;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Matrix4x4 CanvasToWorld;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Matrix4x4 CanvasToLocal;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Matrix4x4 MyToWorld;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Matrix4x4 MyToLocal;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private List<UIVertex> m_tesselatedVerts;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private List<UIVertex> m_curvedVerts;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private List<UIVertex> m_vertsInQuads;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private UIVertex m_ret;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private UIVertex[] m_quad;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private float[] m_weights;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedPos;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedUp;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		[HideInInspector]
		private Vector2 savedRectSize;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		[HideInInspector]
		private Color savedColor;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		[HideInInspector]
		private Vector2 savedTextUV0;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		[HideInInspector]
		private float savedFill;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private Vector2 _uv0;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private Vector2 _uv1;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private Vector3 _pos;

		[Token(Token = "0x1700010A")]
		private bool tesselationRequired
		{
			[Token(Token = "0x6000D63")]
			[Address(RVA = "0xFBF27C", Offset = "0xFBF27C", VA = "0xFBF27C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D64")]
			[Address(RVA = "0xFBF284", Offset = "0xFBF284", VA = "0xFBF284")]
			set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public bool TesselationRequired
		{
			[Token(Token = "0x6000D77")]
			[Address(RVA = "0xFC2094", Offset = "0xFC2094", VA = "0xFC2094")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D78")]
			[Address(RVA = "0xFC2088", Offset = "0xFC2088", VA = "0xFC2088")]
			set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public bool CurvingRequired
		{
			[Token(Token = "0x6000D79")]
			[Address(RVA = "0xFC209C", Offset = "0xFC209C", VA = "0xFC209C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D7A")]
			[Address(RVA = "0xFC20A4", Offset = "0xFC20A4", VA = "0xFC20A4")]
			set
			{
			}
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xFBF290", Offset = "0xFBF290", VA = "0xFBF290", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xFBF368", Offset = "0xFBF368", VA = "0xFBF368", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xFBF62C", Offset = "0xFBF62C", VA = "0xFBF62C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xFBFC34", Offset = "0xFBFC34", VA = "0xFBFC34", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xFBFDB4", Offset = "0xFBFDB4", VA = "0xFBFDB4")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xFBFDC0", Offset = "0xFBFDC0", VA = "0xFBFDC0")]
		private void FontTextureRebuiltCallback(Font fontie)
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xFBFE64", Offset = "0xFBFE64", VA = "0xFBFE64")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xFC0414", Offset = "0xFC0414", VA = "0xFC0414", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xFBD95C", Offset = "0xFBD95C", VA = "0xFBD95C")]
		public void ModifyTMPMesh(ref List<UIVertex> vertexList)
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xFC0ABC", Offset = "0xFC0ABC", VA = "0xFC0ABC")]
		private bool ShouldModify()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xFC0BC0", Offset = "0xFC0BC0", VA = "0xFC0BC0")]
		private void CheckTextFontMaterial()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xFBF50C", Offset = "0xFBF50C", VA = "0xFBF50C")]
		public CurvedUISettings FindParentSettings(bool forceNew = false)
		{
			return null;
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xFC103C", Offset = "0xFC103C", VA = "0xFC103C")]
		private UIVertex CurveVertex(UIVertex input, float cylinder_angle, float radius, Vector2 canvasSize)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xFC0E64", Offset = "0xFC0E64", VA = "0xFC0E64")]
		private void TesselateGeometry(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xFC1660", Offset = "0xFC1660", VA = "0xFC1660")]
		private void ModifyQuad(List<UIVertex> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xFC1400", Offset = "0xFC1400", VA = "0xFC1400")]
		private void TrisToQuads(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xFC1CFC", Offset = "0xFC1CFC", VA = "0xFC1CFC")]
		private UIVertex TesselateQuad(float x, float y)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xFBAD74", Offset = "0xFBAD74", VA = "0xFBAD74")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xFC20B0", Offset = "0xFC20B0", VA = "0xFC20B0")]
		public CurvedUIVertexEffect()
		{
		}
	}
	[Token(Token = "0x2000200")]
	public class CurvedUIViveController : MonoBehaviour
	{
		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xFC21CC", Offset = "0xFC21CC", VA = "0xFC21CC")]
		public CurvedUIViveController()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public struct ViveInputArgs
	{
		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float buttonPressure;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 touchpadAxis;
	}
	[Token(Token = "0x2000202")]
	public delegate void ViveInputEvent(object sender, ViveInputArgs e);
	[Token(Token = "0x2000203")]
	public delegate void ViveEvent(object sender);
	[Token(Token = "0x2000204")]
	[ExecuteInEditMode]
	public class CurvedUITMP : MonoBehaviour
	{
		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUIVertexEffect crvdVE;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI tmpText;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<UIVertex> m_UIVerts;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UIVertex m_tempVertex;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CurvedUITMPSubmesh m_tempSubMsh;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 savedSize;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 savedUp;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 savedPos;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 savedLocalScale;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 savedGlobalScale;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<CurvedUITMPSubmesh> subMeshes;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool Dirty;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool curvingRequired;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		private bool tesselationRequired;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
		private bool quitting;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3[] vertices;

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xFBCA60", Offset = "0xFBCA60", VA = "0xFBCA60")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0xFBCB14", Offset = "0xFBCB14", VA = "0xFBCB14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0xFBCDC0", Offset = "0xFBCDC0", VA = "0xFBCDC0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0xFBCF0C", Offset = "0xFBCF0C", VA = "0xFBCF0C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0xFBCF18", Offset = "0xFBCF18", VA = "0xFBCF18")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0xFBD730", Offset = "0xFBD730", VA = "0xFBD730")]
		private void CreateUIVertexList(Mesh mesh)
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0xFBE270", Offset = "0xFBE270", VA = "0xFBE270")]
		private void GetUIVertexFromMesh(ref UIVertex vert, int i)
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0xFBDC10", Offset = "0xFBDC10", VA = "0xFBDC10")]
		private void FillMeshWithUIVertexList(Mesh mesh, List<UIVertex> list)
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xFBCC7C", Offset = "0xFBCC7C", VA = "0xFBCC7C")]
		private void FindTMP()
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0xFBDD64", Offset = "0xFBDD64", VA = "0xFBDD64")]
		private void FindSubmeshes()
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0xFBD3B0", Offset = "0xFBD3B0", VA = "0xFBD3B0")]
		private bool ShouldTesselate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xFBE2C0", Offset = "0xFBE2C0", VA = "0xFBE2C0")]
		private void TMPTextChangedCallback(object obj)
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0xFBE2DC", Offset = "0xFBE2DC", VA = "0xFBE2DC")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0xFBE2E8", Offset = "0xFBE2E8", VA = "0xFBE2E8")]
		public CurvedUITMP()
		{
		}
	}
	[Token(Token = "0x2000205")]
	[ExecuteInEditMode]
	public class CurvedUITMPInputFieldCaret : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x20003CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAA70", Offset = "0xBCAA70")]
		private sealed class <CaretBlinker>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUITMPInputFieldCaret <>4__this;

			[Token(Token = "0x170001A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600150A")]
				[Address(RVA = "0xFBF204", Offset = "0xFBF204", VA = "0xFBF204", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600150C")]
				[Address(RVA = "0xFBF26C", Offset = "0xFBF26C", VA = "0xFBF26C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001507")]
			[Address(RVA = "0xFBEF4C", Offset = "0xFBEF4C", VA = "0xFBEF4C")]
			[DebuggerHidden]
			public <CaretBlinker>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001508")]
			[Address(RVA = "0xFBF0DC", Offset = "0xFBF0DC", VA = "0xFBF0DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001509")]
			[Address(RVA = "0xFBF0E0", Offset = "0xFBF0E0", VA = "0xFBF0E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600150B")]
			[Address(RVA = "0xFBF20C", Offset = "0xFBF20C", VA = "0xFBF20C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_InputField myField;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x1700010D")]
		public Color CaretColor
		{
			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0xFBF06C", Offset = "0xFBF06C", VA = "0xFBF06C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000D9D")]
			[Address(RVA = "0xFBF078", Offset = "0xFBF078", VA = "0xFBF078")]
			set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public Color SelectionColor
		{
			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0xFBF084", Offset = "0xFBF084", VA = "0xFBF084")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0xFBF090", Offset = "0xFBF090", VA = "0xFBF090")]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0xFBF09C", Offset = "0xFBF09C", VA = "0xFBF09C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0xFBF0B8", Offset = "0xFBF0B8", VA = "0xFBF0B8")]
			set
			{
			}
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xFBE398", Offset = "0xFBE398", VA = "0xFBE398")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xFBE76C", Offset = "0xFBE76C", VA = "0xFBE76C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xFBEA98", Offset = "0xFBEA98", VA = "0xFBEA98", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xFBEF14", Offset = "0xFBEF14", VA = "0xFBEF14", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xFBEE98", Offset = "0xFBEE98", VA = "0xFBEE98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBCE3D8", Offset = "0xBCE3D8")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xFBEB58", Offset = "0xFBEB58", VA = "0xFBEB58")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xFBE77C", Offset = "0xFBE77C", VA = "0xFBE77C")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0xFBEF78", Offset = "0xFBEF78", VA = "0xFBEF78")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xFBE440", Offset = "0xFBE440", VA = "0xFBE440")]
		private void CheckAndConvertMask()
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xFBF0D4", Offset = "0xFBF0D4", VA = "0xFBF0D4")]
		public CurvedUITMPInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x2000206")]
	[ExecuteInEditMode]
	public class CurvedUITMPSubmesh : MonoBehaviour
	{
		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VertexHelper vh;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh straightMesh;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh curvedMesh;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUIVertexEffect crvdVE;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TMP_SubMeshUI TMPsub;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMeshProUGUI TMPtext;

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xFBDE84", Offset = "0xFBDE84", VA = "0xFBDE84")]
		public void UpdateSubmesh(bool tesselate, bool curve)
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xFBF274", Offset = "0xFBF274", VA = "0xFBF274")]
		public CurvedUITMPSubmesh()
		{
		}
	}
	[Token(Token = "0x2000207")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBC8F5C", Offset = "0xBC8F5C")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xBC8F5C", Offset = "0xBC8F5C")]
	public class OptionalDependencyAttribute : Attribute
	{
		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string dependentClass;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string define;

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xFC21D4", Offset = "0xFC21D4", VA = "0xFC21D4")]
		public OptionalDependencyAttribute(string dependentClass, string define)
		{
		}
	}
}
namespace TFHC_Shader_Samples
{
	[Token(Token = "0x2000208")]
	public class highlightAnimated : MonoBehaviour
	{
		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material mat;

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0xFD214C", Offset = "0xFD214C", VA = "0xFD214C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xFD21BC", Offset = "0xFD21BC", VA = "0xFD21BC")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xFD223C", Offset = "0xFD223C", VA = "0xFD223C")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xFD21C4", Offset = "0xFD21C4", VA = "0xFD21C4")]
		private void switchhighlighted(bool highlighted)
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xFD2244", Offset = "0xFD2244", VA = "0xFD2244")]
		public highlightAnimated()
		{
		}
	}
}
namespace TFHC_ForceShield_Shader_Sample
{
	[Token(Token = "0x2000209")]
	public class ForceShieldDestroyBall : MonoBehaviour
	{
		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lifetime;

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xFD1BB8", Offset = "0xFD1BB8", VA = "0xFD1BB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xFD1C44", Offset = "0xFD1C44", VA = "0xFD1C44")]
		public ForceShieldDestroyBall()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class ForceShieldImpactDetection : MonoBehaviour
	{
		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float hitTime;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material mat;

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xFD1C54", Offset = "0xFD1C54", VA = "0xFD1C54")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xFD1CC4", Offset = "0xFD1CC4", VA = "0xFD1CC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xFD1D68", Offset = "0xFD1D68", VA = "0xFD1D68")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xFD1F18", Offset = "0xFD1F18", VA = "0xFD1F18")]
		public ForceShieldImpactDetection()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class ForceShieldShootBall : MonoBehaviour
	{
		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody bullet;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform origshoot;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float distance;

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xFD1F20", Offset = "0xFD1F20", VA = "0xFD1F20")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xFD2138", Offset = "0xFD2138", VA = "0xFD2138")]
		public ForceShieldShootBall()
		{
		}
	}
}
